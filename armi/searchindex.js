Search.setIndex({"docnames": [".apidocs/armi", ".apidocs/armi.apps", ".apidocs/armi.bookkeeping", ".apidocs/armi.bookkeeping.db", ".apidocs/armi.bookkeeping.db.compareDB3", ".apidocs/armi.bookkeeping.db.database3", ".apidocs/armi.bookkeeping.db.databaseInterface", ".apidocs/armi.bookkeeping.db.factory", ".apidocs/armi.bookkeeping.db.jaggedArray", ".apidocs/armi.bookkeeping.db.layout", ".apidocs/armi.bookkeeping.db.passiveDBLoadPlugin", ".apidocs/armi.bookkeeping.db.permissions", ".apidocs/armi.bookkeeping.db.tests", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3", ".apidocs/armi.bookkeeping.db.tests.test_database3", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface", ".apidocs/armi.bookkeeping.db.tests.test_jaggedArray", ".apidocs/armi.bookkeeping.db.tests.test_layout", ".apidocs/armi.bookkeeping.db.typedefs", ".apidocs/armi.bookkeeping.historyTracker", ".apidocs/armi.bookkeeping.mainInterface", ".apidocs/armi.bookkeeping.memoryProfiler", ".apidocs/armi.bookkeeping.report", ".apidocs/armi.bookkeeping.report.data", ".apidocs/armi.bookkeeping.report.html", ".apidocs/armi.bookkeeping.report.newReportUtils", ".apidocs/armi.bookkeeping.report.newReports", ".apidocs/armi.bookkeeping.report.reportInterface", ".apidocs/armi.bookkeeping.report.reportingUtils", ".apidocs/armi.bookkeeping.report.tests", ".apidocs/armi.bookkeeping.report.tests.test_newReport", ".apidocs/armi.bookkeeping.report.tests.test_report", ".apidocs/armi.bookkeeping.snapshotInterface", ".apidocs/armi.bookkeeping.tests", ".apidocs/armi.bookkeeping.tests.test_historyTracker", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler", ".apidocs/armi.bookkeeping.tests.test_snapshot", ".apidocs/armi.bookkeeping.visualization", ".apidocs/armi.bookkeeping.visualization.dumper", ".apidocs/armi.bookkeeping.visualization.entryPoint", ".apidocs/armi.bookkeeping.visualization.tests", ".apidocs/armi.bookkeeping.visualization.tests.test_vis", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf", ".apidocs/armi.bookkeeping.visualization.utils", ".apidocs/armi.bookkeeping.visualization.vtk", ".apidocs/armi.bookkeeping.visualization.xdmf", ".apidocs/armi.cases", ".apidocs/armi.cases.case", ".apidocs/armi.cases.inputModifiers", ".apidocs/armi.cases.inputModifiers.inputModifiers", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers", ".apidocs/armi.cases.inputModifiers.tests", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers", ".apidocs/armi.cases.suite", ".apidocs/armi.cases.suiteBuilder", ".apidocs/armi.cases.tests", ".apidocs/armi.cases.tests.test_cases", ".apidocs/armi.cases.tests.test_suiteBuilder", ".apidocs/armi.cli", ".apidocs/armi.cli.checkInputs", ".apidocs/armi.cli.cleanTemps", ".apidocs/armi.cli.clone", ".apidocs/armi.cli.compareCases", ".apidocs/armi.cli.database", ".apidocs/armi.cli.entryPoint", ".apidocs/armi.cli.gridGui", ".apidocs/armi.cli.migrateInputs", ".apidocs/armi.cli.modify", ".apidocs/armi.cli.reportsEntryPoint", ".apidocs/armi.cli.run", ".apidocs/armi.cli.runSuite", ".apidocs/armi.cli.tests", ".apidocs/armi.cli.tests.test_runEntryPoint", ".apidocs/armi.cli.tests.test_runSuite", ".apidocs/armi.conftest", ".apidocs/armi.context", ".apidocs/armi.interfaces", ".apidocs/armi.materials", ".apidocs/armi.materials.air", ".apidocs/armi.materials.alloy200", ".apidocs/armi.materials.b4c", ".apidocs/armi.materials.be9", ".apidocs/armi.materials.caH2", ".apidocs/armi.materials.californium", ".apidocs/armi.materials.concrete", ".apidocs/armi.materials.copper", ".apidocs/armi.materials.cs", ".apidocs/armi.materials.custom", ".apidocs/armi.materials.graphite", ".apidocs/armi.materials.hafnium", ".apidocs/armi.materials.hastelloyN", ".apidocs/armi.materials.ht9", ".apidocs/armi.materials.inconel", ".apidocs/armi.materials.inconel600", ".apidocs/armi.materials.inconel625", ".apidocs/armi.materials.inconel800", ".apidocs/armi.materials.inconelPE16", ".apidocs/armi.materials.inconelX750", ".apidocs/armi.materials.lead", ".apidocs/armi.materials.leadBismuth", ".apidocs/armi.materials.lithium", ".apidocs/armi.materials.magnesium", ".apidocs/armi.materials.material", ".apidocs/armi.materials.mgO", ".apidocs/armi.materials.mixture", ".apidocs/armi.materials.molybdenum", ".apidocs/armi.materials.mox", ".apidocs/armi.materials.nZ", ".apidocs/armi.materials.potassium", ".apidocs/armi.materials.scandiumOxide", ".apidocs/armi.materials.siC", ".apidocs/armi.materials.sodium", ".apidocs/armi.materials.sodiumChloride", ".apidocs/armi.materials.sulfur", ".apidocs/armi.materials.tZM", ".apidocs/armi.materials.tantalum", ".apidocs/armi.materials.tests", ".apidocs/armi.materials.tests.test__init__", ".apidocs/armi.materials.tests.test_air", ".apidocs/armi.materials.tests.test_b4c", ".apidocs/armi.materials.tests.test_be9", ".apidocs/armi.materials.tests.test_graphite", ".apidocs/armi.materials.tests.test_lithium", ".apidocs/armi.materials.tests.test_materials", ".apidocs/armi.materials.tests.test_sic", ".apidocs/armi.materials.tests.test_sulfur", ".apidocs/armi.materials.tests.test_thoriumOxide", ".apidocs/armi.materials.tests.test_uZr", ".apidocs/armi.materials.tests.test_water", ".apidocs/armi.materials.thU", ".apidocs/armi.materials.thorium", ".apidocs/armi.materials.thoriumOxide", ".apidocs/armi.materials.uThZr", ".apidocs/armi.materials.uZr", ".apidocs/armi.materials.uranium", ".apidocs/armi.materials.uraniumOxide", ".apidocs/armi.materials.void", ".apidocs/armi.materials.water", ".apidocs/armi.materials.yttriumOxide", ".apidocs/armi.materials.zincOxide", ".apidocs/armi.materials.zr", ".apidocs/armi.meta", ".apidocs/armi.migration", ".apidocs/armi.migration.base", ".apidocs/armi.migration.m0_1_3", ".apidocs/armi.migration.m0_1_6", ".apidocs/armi.migration.tests", ".apidocs/armi.migration.tests.test_m0_1_6", ".apidocs/armi.migration.tests.test_migration_base", ".apidocs/armi.mpiActions", ".apidocs/armi.nucDirectory", ".apidocs/armi.nucDirectory.elements", ".apidocs/armi.nucDirectory.nucDir", ".apidocs/armi.nucDirectory.nuclideBases", ".apidocs/armi.nucDirectory.tests", ".apidocs/armi.nucDirectory.tests.test_elements", ".apidocs/armi.nucDirectory.tests.test_nucDirectory", ".apidocs/armi.nucDirectory.tests.test_nuclideBases", ".apidocs/armi.nucDirectory.tests.test_thermalScattering", ".apidocs/armi.nucDirectory.tests.test_transmutations", ".apidocs/armi.nucDirectory.thermalScattering", ".apidocs/armi.nucDirectory.transmutations", ".apidocs/armi.nuclearDataIO", ".apidocs/armi.nuclearDataIO.cccc", ".apidocs/armi.nuclearDataIO.cccc.cccc", ".apidocs/armi.nuclearDataIO.cccc.compxs", ".apidocs/armi.nuclearDataIO.cccc.dif3d", ".apidocs/armi.nuclearDataIO.cccc.dlayxs", ".apidocs/armi.nuclearDataIO.cccc.fixsrc", ".apidocs/armi.nuclearDataIO.cccc.gamiso", ".apidocs/armi.nuclearDataIO.cccc.geodst", ".apidocs/armi.nuclearDataIO.cccc.isotxs", ".apidocs/armi.nuclearDataIO.cccc.labels", ".apidocs/armi.nuclearDataIO.cccc.nhflux", ".apidocs/armi.nuclearDataIO.cccc.pmatrx", ".apidocs/armi.nuclearDataIO.cccc.pwdint", ".apidocs/armi.nuclearDataIO.cccc.rtflux", ".apidocs/armi.nuclearDataIO.cccc.rzflux", ".apidocs/armi.nuclearDataIO.cccc.tests", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_fixsrc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata", ".apidocs/armi.nuclearDataIO.tests", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides", ".apidocs/armi.nuclearDataIO.xsCollections", ".apidocs/armi.nuclearDataIO.xsLibraries", ".apidocs/armi.nuclearDataIO.xsNuclides", ".apidocs/armi.operators", ".apidocs/armi.operators.operator", ".apidocs/armi.operators.operatorMPI", ".apidocs/armi.operators.runTypes", ".apidocs/armi.operators.settingsValidation", ".apidocs/armi.operators.snapshots", ".apidocs/armi.operators.tests", ".apidocs/armi.operators.tests.test_operatorSnapshots", ".apidocs/armi.operators.tests.test_operators", ".apidocs/armi.physics", ".apidocs/armi.physics.constants", ".apidocs/armi.physics.executers", ".apidocs/armi.physics.fuelCycle", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface", ".apidocs/armi.physics.fuelCycle.fuelHandlers", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelCycle.settings", ".apidocs/armi.physics.fuelCycle.tests", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelPerformance", ".apidocs/armi.physics.fuelPerformance.executers", ".apidocs/armi.physics.fuelPerformance.parameters", ".apidocs/armi.physics.fuelPerformance.plugin", ".apidocs/armi.physics.fuelPerformance.settings", ".apidocs/armi.physics.fuelPerformance.tests", ".apidocs/armi.physics.fuelPerformance.tests.test_executers", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils", ".apidocs/armi.physics.fuelPerformance.utils", ".apidocs/armi.physics.neutronics", ".apidocs/armi.physics.neutronics.const", ".apidocs/armi.physics.neutronics.crossSectionGroupManager", ".apidocs/armi.physics.neutronics.crossSectionSettings", ".apidocs/armi.physics.neutronics.diffIsotxs", ".apidocs/armi.physics.neutronics.energyGroups", ".apidocs/armi.physics.neutronics.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct", ".apidocs/armi.physics.neutronics.fissionProductModel.tests", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct", ".apidocs/armi.physics.neutronics.globalFlux", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface", ".apidocs/armi.physics.neutronics.globalFlux.tests", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface", ".apidocs/armi.physics.neutronics.latticePhysics", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter", ".apidocs/armi.physics.neutronics.latticePhysics.tests", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.parameters", ".apidocs/armi.physics.neutronics.reports", ".apidocs/armi.physics.neutronics.settings", ".apidocs/armi.physics.neutronics.tests", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable", ".apidocs/armi.physics.neutronics.tests.test_energyGroups", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin", ".apidocs/armi.physics.safety", ".apidocs/armi.physics.tests", ".apidocs/armi.physics.tests.test_executers", ".apidocs/armi.physics.thermalHydraulics", ".apidocs/armi.physics.thermalHydraulics.const", ".apidocs/armi.physics.thermalHydraulics.parameters", ".apidocs/armi.physics.thermalHydraulics.plugin", ".apidocs/armi.physics.thermalHydraulics.settings", ".apidocs/armi.physics.thermalHydraulics.tests", ".apidocs/armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin", ".apidocs/armi.pluginManager", ".apidocs/armi.plugins", ".apidocs/armi.reactor", ".apidocs/armi.reactor.assemblies", ".apidocs/armi.reactor.assemblyParameters", ".apidocs/armi.reactor.blockParameters", ".apidocs/armi.reactor.blocks", ".apidocs/armi.reactor.blueprints", ".apidocs/armi.reactor.blueprints.assemblyBlueprint", ".apidocs/armi.reactor.blueprints.blockBlueprint", ".apidocs/armi.reactor.blueprints.componentBlueprint", ".apidocs/armi.reactor.blueprints.gridBlueprint", ".apidocs/armi.reactor.blueprints.isotopicOptions", ".apidocs/armi.reactor.blueprints.reactorBlueprint", ".apidocs/armi.reactor.blueprints.tests", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blueprints", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints", ".apidocs/armi.reactor.components", ".apidocs/armi.reactor.components.basicShapes", ".apidocs/armi.reactor.components.complexShapes", ".apidocs/armi.reactor.components.component", ".apidocs/armi.reactor.components.componentParameters", ".apidocs/armi.reactor.components.volumetricShapes", ".apidocs/armi.reactor.composites", ".apidocs/armi.reactor.converters", ".apidocs/armi.reactor.converters.axialExpansionChanger", ".apidocs/armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage", ".apidocs/armi.reactor.converters.axialExpansionChanger.axialExpansionChanger", ".apidocs/armi.reactor.converters.axialExpansionChanger.expansionData", ".apidocs/armi.reactor.converters.blockConverters", ".apidocs/armi.reactor.converters.geometryConverters", ".apidocs/armi.reactor.converters.meshConverters", ".apidocs/armi.reactor.converters.parameterSweeps", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters", ".apidocs/armi.reactor.converters.pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger", ".apidocs/armi.reactor.converters.tests.test_blockConverter", ".apidocs/armi.reactor.converters.tests.test_geometryConverters", ".apidocs/armi.reactor.converters.tests.test_meshConverters", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests.test_uniformMesh", ".apidocs/armi.reactor.converters.uniformMesh", ".apidocs/armi.reactor.cores", ".apidocs/armi.reactor.excoreStructure", ".apidocs/armi.reactor.flags", ".apidocs/armi.reactor.geometry", ".apidocs/armi.reactor.grids", ".apidocs/armi.reactor.grids.axial", ".apidocs/armi.reactor.grids.cartesian", ".apidocs/armi.reactor.grids.constants", ".apidocs/armi.reactor.grids.grid", ".apidocs/armi.reactor.grids.hexagonal", ".apidocs/armi.reactor.grids.locations", ".apidocs/armi.reactor.grids.structuredGrid", ".apidocs/armi.reactor.grids.thetarz", ".apidocs/armi.reactor.parameters", ".apidocs/armi.reactor.parameters.exceptions", ".apidocs/armi.reactor.parameters.parameterCollections", ".apidocs/armi.reactor.parameters.parameterDefinitions", ".apidocs/armi.reactor.parameters.resolveCollections", ".apidocs/armi.reactor.reactorParameters", ".apidocs/armi.reactor.reactors", ".apidocs/armi.reactor.spentFuelPool", ".apidocs/armi.reactor.systemLayoutInput", ".apidocs/armi.reactor.tests", ".apidocs/armi.reactor.tests.test_assemblies", ".apidocs/armi.reactor.tests.test_blocks", ".apidocs/armi.reactor.tests.test_components", ".apidocs/armi.reactor.tests.test_composites", ".apidocs/armi.reactor.tests.test_excoreStructures", ".apidocs/armi.reactor.tests.test_flags", ".apidocs/armi.reactor.tests.test_geometry", ".apidocs/armi.reactor.tests.test_parameters", ".apidocs/armi.reactor.tests.test_reactors", ".apidocs/armi.reactor.tests.test_rz_reactors", ".apidocs/armi.reactor.tests.test_zones", ".apidocs/armi.reactor.zones", ".apidocs/armi.runLog", ".apidocs/armi.settings", ".apidocs/armi.settings.caseSettings", ".apidocs/armi.settings.fwSettings", ".apidocs/armi.settings.fwSettings.databaseSettings", ".apidocs/armi.settings.fwSettings.globalSettings", ".apidocs/armi.settings.fwSettings.reportSettings", ".apidocs/armi.settings.fwSettings.tightCouplingSettings", ".apidocs/armi.settings.setting", ".apidocs/armi.settings.settingsIO", ".apidocs/armi.settings.settingsValidation", ".apidocs/armi.settings.tests", ".apidocs/armi.settings.tests.test_inspectors", ".apidocs/armi.settings.tests.test_settings", ".apidocs/armi.settings.tests.test_settingsIO", ".apidocs/armi.tests", ".apidocs/armi.tests.mockRunLogs", ".apidocs/armi.tests.refSmallReactorShuffleLogic", ".apidocs/armi.tests.test_apps", ".apidocs/armi.tests.test_armiTestHelper", ".apidocs/armi.tests.test_cartesian", ".apidocs/armi.tests.test_context", ".apidocs/armi.tests.test_interfaces", ".apidocs/armi.tests.test_lwrInputs", ".apidocs/armi.tests.test_mpiActions", ".apidocs/armi.tests.test_mpiFeatures", ".apidocs/armi.tests.test_mpiParameters", ".apidocs/armi.tests.test_notebooks", ".apidocs/armi.tests.test_plugins", ".apidocs/armi.tests.test_runLog", ".apidocs/armi.tests.test_tests", ".apidocs/armi.tests.test_user_plugins", ".apidocs/armi.utils", ".apidocs/armi.utils.asciimaps", ".apidocs/armi.utils.codeTiming", ".apidocs/armi.utils.customExceptions", ".apidocs/armi.utils.densityTools", ".apidocs/armi.utils.directoryChangers", ".apidocs/armi.utils.directoryChangersMpi", ".apidocs/armi.utils.dynamicImporter", ".apidocs/armi.utils.flags", ".apidocs/armi.utils.gridEditor", ".apidocs/armi.utils.hexagon", ".apidocs/armi.utils.iterables", ".apidocs/armi.utils.mathematics", ".apidocs/armi.utils.outputCache", ".apidocs/armi.utils.parsing", ".apidocs/armi.utils.pathTools", ".apidocs/armi.utils.plotting", ".apidocs/armi.utils.properties", ".apidocs/armi.utils.reportPlotting", ".apidocs/armi.utils.tabulate", ".apidocs/armi.utils.tests", ".apidocs/armi.utils.tests.test_asciimaps", ".apidocs/armi.utils.tests.test_codeTiming", ".apidocs/armi.utils.tests.test_custom_exceptions", ".apidocs/armi.utils.tests.test_densityTools", ".apidocs/armi.utils.tests.test_directoryChangers", ".apidocs/armi.utils.tests.test_directoryChangersMpi", ".apidocs/armi.utils.tests.test_flags", ".apidocs/armi.utils.tests.test_hexagon", ".apidocs/armi.utils.tests.test_iterables", ".apidocs/armi.utils.tests.test_mathematics", ".apidocs/armi.utils.tests.test_outputCache", ".apidocs/armi.utils.tests.test_parsing", ".apidocs/armi.utils.tests.test_pathTools", ".apidocs/armi.utils.tests.test_plotting", ".apidocs/armi.utils.tests.test_properties", ".apidocs/armi.utils.tests.test_reportPlotting", ".apidocs/armi.utils.tests.test_tabulate", ".apidocs/armi.utils.tests.test_textProcessors", ".apidocs/armi.utils.tests.test_triangle", ".apidocs/armi.utils.tests.test_units", ".apidocs/armi.utils.tests.test_utils", ".apidocs/armi.utils.textProcessors", ".apidocs/armi.utils.triangle", ".apidocs/armi.utils.units", ".apidocs/modules", "developer/documenting", "developer/entrypoints", "developer/first_time_contributors", "developer/guide", "developer/index", "developer/making_armi_based_apps", "developer/parallel_coding", "developer/profiling", "developer/reports", "developer/standards_and_practices", "developer/tooling", "gallery-src/README", "gallery-src/analysis/README", "gallery-src/applications/README", "gallery-src/framework/README", "gallery/analysis/index", "gallery/analysis/run_blockMcnpMaterialCard", "gallery/analysis/run_hexBlockToRZConversion", "gallery/analysis/run_hexReactorToRZ", "gallery/analysis/sg_execution_times", "gallery/applications/index", "gallery/framework/index", "gallery/framework/run_blockVolumeFractions", "gallery/framework/run_chartOfNuclides", "gallery/framework/run_computeReactionRates", "gallery/framework/run_fuelManagement", "gallery/framework/run_grids1_hex", "gallery/framework/run_grids2_cartesian", "gallery/framework/run_grids3_rzt", "gallery/framework/run_isotxs", "gallery/framework/run_isotxs2_matrix", "gallery/framework/run_materials", "gallery/framework/run_programmaticReactorDefinition", "gallery/framework/run_reactorFacemap", "gallery/framework/run_transmutationMatrix", "gallery/framework/sg_execution_times", "gallery/index", "glossary", "index", "installation", "release/0.1", "release/0.2", "release/0.3", "release/0.4", "release/index", "tutorials/data_model", "tutorials/index", "tutorials/making_your_first_app", "tutorials/materials_demo", "tutorials/nuclide_demo", "tutorials/param_sweep", "tutorials/walkthrough_inputs", "tutorials/walkthrough_lwr_inputs", "user/_gallery/index", "user/accessingEntryPoints", "user/assembly_parameters_report", "user/block_parameters_report", "user/component_parameters_report", "user/core_parameters_report", "user/index", "user/inputs", "user/manual_data_access", "user/outputs", "user/physics_coupling", "user/radial_and_axial_expansion", "user/reactor_parameters_report", "user/user_install"], "filenames": [".apidocs/armi.rst", ".apidocs/armi.apps.rst", ".apidocs/armi.bookkeeping.rst", ".apidocs/armi.bookkeeping.db.rst", ".apidocs/armi.bookkeeping.db.compareDB3.rst", ".apidocs/armi.bookkeeping.db.database3.rst", ".apidocs/armi.bookkeeping.db.databaseInterface.rst", ".apidocs/armi.bookkeeping.db.factory.rst", ".apidocs/armi.bookkeeping.db.jaggedArray.rst", ".apidocs/armi.bookkeeping.db.layout.rst", ".apidocs/armi.bookkeeping.db.passiveDBLoadPlugin.rst", ".apidocs/armi.bookkeeping.db.permissions.rst", ".apidocs/armi.bookkeeping.db.tests.rst", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3.rst", ".apidocs/armi.bookkeeping.db.tests.test_database3.rst", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface.rst", ".apidocs/armi.bookkeeping.db.tests.test_jaggedArray.rst", ".apidocs/armi.bookkeeping.db.tests.test_layout.rst", ".apidocs/armi.bookkeeping.db.typedefs.rst", ".apidocs/armi.bookkeeping.historyTracker.rst", ".apidocs/armi.bookkeeping.mainInterface.rst", ".apidocs/armi.bookkeeping.memoryProfiler.rst", ".apidocs/armi.bookkeeping.report.rst", ".apidocs/armi.bookkeeping.report.data.rst", ".apidocs/armi.bookkeeping.report.html.rst", ".apidocs/armi.bookkeeping.report.newReportUtils.rst", ".apidocs/armi.bookkeeping.report.newReports.rst", ".apidocs/armi.bookkeeping.report.reportInterface.rst", ".apidocs/armi.bookkeeping.report.reportingUtils.rst", ".apidocs/armi.bookkeeping.report.tests.rst", ".apidocs/armi.bookkeeping.report.tests.test_newReport.rst", ".apidocs/armi.bookkeeping.report.tests.test_report.rst", ".apidocs/armi.bookkeeping.snapshotInterface.rst", ".apidocs/armi.bookkeeping.tests.rst", ".apidocs/armi.bookkeeping.tests.test_historyTracker.rst", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler.rst", ".apidocs/armi.bookkeeping.tests.test_snapshot.rst", ".apidocs/armi.bookkeeping.visualization.rst", ".apidocs/armi.bookkeeping.visualization.dumper.rst", ".apidocs/armi.bookkeeping.visualization.entryPoint.rst", ".apidocs/armi.bookkeeping.visualization.tests.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_vis.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf.rst", ".apidocs/armi.bookkeeping.visualization.utils.rst", ".apidocs/armi.bookkeeping.visualization.vtk.rst", ".apidocs/armi.bookkeeping.visualization.xdmf.rst", ".apidocs/armi.cases.rst", ".apidocs/armi.cases.case.rst", ".apidocs/armi.cases.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers.rst", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.rst", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.rst", ".apidocs/armi.cases.suite.rst", ".apidocs/armi.cases.suiteBuilder.rst", ".apidocs/armi.cases.tests.rst", ".apidocs/armi.cases.tests.test_cases.rst", ".apidocs/armi.cases.tests.test_suiteBuilder.rst", ".apidocs/armi.cli.rst", ".apidocs/armi.cli.checkInputs.rst", ".apidocs/armi.cli.cleanTemps.rst", ".apidocs/armi.cli.clone.rst", ".apidocs/armi.cli.compareCases.rst", ".apidocs/armi.cli.database.rst", ".apidocs/armi.cli.entryPoint.rst", ".apidocs/armi.cli.gridGui.rst", ".apidocs/armi.cli.migrateInputs.rst", ".apidocs/armi.cli.modify.rst", ".apidocs/armi.cli.reportsEntryPoint.rst", ".apidocs/armi.cli.run.rst", ".apidocs/armi.cli.runSuite.rst", ".apidocs/armi.cli.tests.rst", ".apidocs/armi.cli.tests.test_runEntryPoint.rst", ".apidocs/armi.cli.tests.test_runSuite.rst", ".apidocs/armi.conftest.rst", ".apidocs/armi.context.rst", ".apidocs/armi.interfaces.rst", ".apidocs/armi.materials.rst", ".apidocs/armi.materials.air.rst", ".apidocs/armi.materials.alloy200.rst", ".apidocs/armi.materials.b4c.rst", ".apidocs/armi.materials.be9.rst", ".apidocs/armi.materials.caH2.rst", ".apidocs/armi.materials.californium.rst", ".apidocs/armi.materials.concrete.rst", ".apidocs/armi.materials.copper.rst", ".apidocs/armi.materials.cs.rst", ".apidocs/armi.materials.custom.rst", ".apidocs/armi.materials.graphite.rst", ".apidocs/armi.materials.hafnium.rst", ".apidocs/armi.materials.hastelloyN.rst", ".apidocs/armi.materials.ht9.rst", ".apidocs/armi.materials.inconel.rst", ".apidocs/armi.materials.inconel600.rst", ".apidocs/armi.materials.inconel625.rst", ".apidocs/armi.materials.inconel800.rst", ".apidocs/armi.materials.inconelPE16.rst", ".apidocs/armi.materials.inconelX750.rst", ".apidocs/armi.materials.lead.rst", ".apidocs/armi.materials.leadBismuth.rst", ".apidocs/armi.materials.lithium.rst", ".apidocs/armi.materials.magnesium.rst", ".apidocs/armi.materials.material.rst", ".apidocs/armi.materials.mgO.rst", ".apidocs/armi.materials.mixture.rst", ".apidocs/armi.materials.molybdenum.rst", ".apidocs/armi.materials.mox.rst", ".apidocs/armi.materials.nZ.rst", ".apidocs/armi.materials.potassium.rst", ".apidocs/armi.materials.scandiumOxide.rst", ".apidocs/armi.materials.siC.rst", ".apidocs/armi.materials.sodium.rst", ".apidocs/armi.materials.sodiumChloride.rst", ".apidocs/armi.materials.sulfur.rst", ".apidocs/armi.materials.tZM.rst", ".apidocs/armi.materials.tantalum.rst", ".apidocs/armi.materials.tests.rst", ".apidocs/armi.materials.tests.test__init__.rst", ".apidocs/armi.materials.tests.test_air.rst", ".apidocs/armi.materials.tests.test_b4c.rst", ".apidocs/armi.materials.tests.test_be9.rst", ".apidocs/armi.materials.tests.test_graphite.rst", ".apidocs/armi.materials.tests.test_lithium.rst", ".apidocs/armi.materials.tests.test_materials.rst", ".apidocs/armi.materials.tests.test_sic.rst", ".apidocs/armi.materials.tests.test_sulfur.rst", ".apidocs/armi.materials.tests.test_thoriumOxide.rst", ".apidocs/armi.materials.tests.test_uZr.rst", ".apidocs/armi.materials.tests.test_water.rst", ".apidocs/armi.materials.thU.rst", ".apidocs/armi.materials.thorium.rst", ".apidocs/armi.materials.thoriumOxide.rst", ".apidocs/armi.materials.uThZr.rst", ".apidocs/armi.materials.uZr.rst", ".apidocs/armi.materials.uranium.rst", ".apidocs/armi.materials.uraniumOxide.rst", ".apidocs/armi.materials.void.rst", ".apidocs/armi.materials.water.rst", ".apidocs/armi.materials.yttriumOxide.rst", ".apidocs/armi.materials.zincOxide.rst", ".apidocs/armi.materials.zr.rst", ".apidocs/armi.meta.rst", ".apidocs/armi.migration.rst", ".apidocs/armi.migration.base.rst", ".apidocs/armi.migration.m0_1_3.rst", ".apidocs/armi.migration.m0_1_6.rst", ".apidocs/armi.migration.tests.rst", ".apidocs/armi.migration.tests.test_m0_1_6.rst", ".apidocs/armi.migration.tests.test_migration_base.rst", ".apidocs/armi.mpiActions.rst", ".apidocs/armi.nucDirectory.rst", ".apidocs/armi.nucDirectory.elements.rst", ".apidocs/armi.nucDirectory.nucDir.rst", ".apidocs/armi.nucDirectory.nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.rst", ".apidocs/armi.nucDirectory.tests.test_elements.rst", ".apidocs/armi.nucDirectory.tests.test_nucDirectory.rst", ".apidocs/armi.nucDirectory.tests.test_nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.test_thermalScattering.rst", ".apidocs/armi.nucDirectory.tests.test_transmutations.rst", ".apidocs/armi.nucDirectory.thermalScattering.rst", ".apidocs/armi.nucDirectory.transmutations.rst", ".apidocs/armi.nuclearDataIO.rst", ".apidocs/armi.nuclearDataIO.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.labels.rst", ".apidocs/armi.nuclearDataIO.cccc.nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.rzflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux.rst", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata.rst", ".apidocs/armi.nuclearDataIO.tests.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides.rst", ".apidocs/armi.nuclearDataIO.xsCollections.rst", ".apidocs/armi.nuclearDataIO.xsLibraries.rst", ".apidocs/armi.nuclearDataIO.xsNuclides.rst", ".apidocs/armi.operators.rst", ".apidocs/armi.operators.operator.rst", ".apidocs/armi.operators.operatorMPI.rst", ".apidocs/armi.operators.runTypes.rst", ".apidocs/armi.operators.settingsValidation.rst", ".apidocs/armi.operators.snapshots.rst", ".apidocs/armi.operators.tests.rst", ".apidocs/armi.operators.tests.test_operatorSnapshots.rst", ".apidocs/armi.operators.tests.test_operators.rst", ".apidocs/armi.physics.rst", ".apidocs/armi.physics.constants.rst", ".apidocs/armi.physics.executers.rst", ".apidocs/armi.physics.fuelCycle.rst", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelCycle.settings.rst", ".apidocs/armi.physics.fuelCycle.tests.rst", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelPerformance.rst", ".apidocs/armi.physics.fuelPerformance.executers.rst", ".apidocs/armi.physics.fuelPerformance.parameters.rst", ".apidocs/armi.physics.fuelPerformance.plugin.rst", ".apidocs/armi.physics.fuelPerformance.settings.rst", ".apidocs/armi.physics.fuelPerformance.tests.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_executers.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.rst", ".apidocs/armi.physics.fuelPerformance.utils.rst", ".apidocs/armi.physics.neutronics.rst", ".apidocs/armi.physics.neutronics.const.rst", ".apidocs/armi.physics.neutronics.crossSectionGroupManager.rst", ".apidocs/armi.physics.neutronics.crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.diffIsotxs.rst", ".apidocs/armi.physics.neutronics.energyGroups.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.globalFlux.rst", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.rst", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.parameters.rst", ".apidocs/armi.physics.neutronics.reports.rst", ".apidocs/armi.physics.neutronics.settings.rst", ".apidocs/armi.physics.neutronics.tests.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable.rst", ".apidocs/armi.physics.neutronics.tests.test_energyGroups.rst", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin.rst", ".apidocs/armi.physics.safety.rst", ".apidocs/armi.physics.tests.rst", ".apidocs/armi.physics.tests.test_executers.rst", ".apidocs/armi.physics.thermalHydraulics.rst", ".apidocs/armi.physics.thermalHydraulics.const.rst", ".apidocs/armi.physics.thermalHydraulics.parameters.rst", ".apidocs/armi.physics.thermalHydraulics.plugin.rst", ".apidocs/armi.physics.thermalHydraulics.settings.rst", ".apidocs/armi.physics.thermalHydraulics.tests.rst", ".apidocs/armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.rst", ".apidocs/armi.pluginManager.rst", ".apidocs/armi.plugins.rst", ".apidocs/armi.reactor.rst", ".apidocs/armi.reactor.assemblies.rst", ".apidocs/armi.reactor.assemblyParameters.rst", ".apidocs/armi.reactor.blockParameters.rst", ".apidocs/armi.reactor.blocks.rst", ".apidocs/armi.reactor.blueprints.rst", ".apidocs/armi.reactor.blueprints.assemblyBlueprint.rst", ".apidocs/armi.reactor.blueprints.blockBlueprint.rst", ".apidocs/armi.reactor.blueprints.componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.gridBlueprint.rst", ".apidocs/armi.reactor.blueprints.isotopicOptions.rst", ".apidocs/armi.reactor.blueprints.reactorBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.rst", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics.rst", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications.rst", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints.rst", ".apidocs/armi.reactor.components.rst", ".apidocs/armi.reactor.components.basicShapes.rst", ".apidocs/armi.reactor.components.complexShapes.rst", ".apidocs/armi.reactor.components.component.rst", ".apidocs/armi.reactor.components.componentParameters.rst", ".apidocs/armi.reactor.components.volumetricShapes.rst", ".apidocs/armi.reactor.composites.rst", ".apidocs/armi.reactor.converters.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.expansionData.rst", ".apidocs/armi.reactor.converters.blockConverters.rst", ".apidocs/armi.reactor.converters.geometryConverters.rst", ".apidocs/armi.reactor.converters.meshConverters.rst", ".apidocs/armi.reactor.converters.parameterSweeps.rst", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.rst", ".apidocs/armi.reactor.converters.pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.rst", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.tests.test_blockConverter.rst", ".apidocs/armi.reactor.converters.tests.test_geometryConverters.rst", ".apidocs/armi.reactor.converters.tests.test_meshConverters.rst", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.test_uniformMesh.rst", ".apidocs/armi.reactor.converters.uniformMesh.rst", ".apidocs/armi.reactor.cores.rst", ".apidocs/armi.reactor.excoreStructure.rst", ".apidocs/armi.reactor.flags.rst", ".apidocs/armi.reactor.geometry.rst", ".apidocs/armi.reactor.grids.rst", ".apidocs/armi.reactor.grids.axial.rst", ".apidocs/armi.reactor.grids.cartesian.rst", ".apidocs/armi.reactor.grids.constants.rst", ".apidocs/armi.reactor.grids.grid.rst", ".apidocs/armi.reactor.grids.hexagonal.rst", ".apidocs/armi.reactor.grids.locations.rst", ".apidocs/armi.reactor.grids.structuredGrid.rst", ".apidocs/armi.reactor.grids.thetarz.rst", ".apidocs/armi.reactor.parameters.rst", ".apidocs/armi.reactor.parameters.exceptions.rst", ".apidocs/armi.reactor.parameters.parameterCollections.rst", ".apidocs/armi.reactor.parameters.parameterDefinitions.rst", ".apidocs/armi.reactor.parameters.resolveCollections.rst", ".apidocs/armi.reactor.reactorParameters.rst", ".apidocs/armi.reactor.reactors.rst", ".apidocs/armi.reactor.spentFuelPool.rst", ".apidocs/armi.reactor.systemLayoutInput.rst", ".apidocs/armi.reactor.tests.rst", ".apidocs/armi.reactor.tests.test_assemblies.rst", ".apidocs/armi.reactor.tests.test_blocks.rst", ".apidocs/armi.reactor.tests.test_components.rst", ".apidocs/armi.reactor.tests.test_composites.rst", ".apidocs/armi.reactor.tests.test_excoreStructures.rst", ".apidocs/armi.reactor.tests.test_flags.rst", ".apidocs/armi.reactor.tests.test_geometry.rst", ".apidocs/armi.reactor.tests.test_parameters.rst", ".apidocs/armi.reactor.tests.test_reactors.rst", ".apidocs/armi.reactor.tests.test_rz_reactors.rst", ".apidocs/armi.reactor.tests.test_zones.rst", ".apidocs/armi.reactor.zones.rst", ".apidocs/armi.runLog.rst", ".apidocs/armi.settings.rst", ".apidocs/armi.settings.caseSettings.rst", ".apidocs/armi.settings.fwSettings.rst", ".apidocs/armi.settings.fwSettings.databaseSettings.rst", ".apidocs/armi.settings.fwSettings.globalSettings.rst", ".apidocs/armi.settings.fwSettings.reportSettings.rst", ".apidocs/armi.settings.fwSettings.tightCouplingSettings.rst", ".apidocs/armi.settings.setting.rst", ".apidocs/armi.settings.settingsIO.rst", ".apidocs/armi.settings.settingsValidation.rst", ".apidocs/armi.settings.tests.rst", ".apidocs/armi.settings.tests.test_inspectors.rst", ".apidocs/armi.settings.tests.test_settings.rst", ".apidocs/armi.settings.tests.test_settingsIO.rst", ".apidocs/armi.tests.rst", ".apidocs/armi.tests.mockRunLogs.rst", ".apidocs/armi.tests.refSmallReactorShuffleLogic.rst", ".apidocs/armi.tests.test_apps.rst", ".apidocs/armi.tests.test_armiTestHelper.rst", ".apidocs/armi.tests.test_cartesian.rst", ".apidocs/armi.tests.test_context.rst", ".apidocs/armi.tests.test_interfaces.rst", ".apidocs/armi.tests.test_lwrInputs.rst", ".apidocs/armi.tests.test_mpiActions.rst", ".apidocs/armi.tests.test_mpiFeatures.rst", ".apidocs/armi.tests.test_mpiParameters.rst", ".apidocs/armi.tests.test_notebooks.rst", ".apidocs/armi.tests.test_plugins.rst", ".apidocs/armi.tests.test_runLog.rst", ".apidocs/armi.tests.test_tests.rst", ".apidocs/armi.tests.test_user_plugins.rst", ".apidocs/armi.utils.rst", ".apidocs/armi.utils.asciimaps.rst", ".apidocs/armi.utils.codeTiming.rst", ".apidocs/armi.utils.customExceptions.rst", ".apidocs/armi.utils.densityTools.rst", ".apidocs/armi.utils.directoryChangers.rst", ".apidocs/armi.utils.directoryChangersMpi.rst", ".apidocs/armi.utils.dynamicImporter.rst", ".apidocs/armi.utils.flags.rst", ".apidocs/armi.utils.gridEditor.rst", ".apidocs/armi.utils.hexagon.rst", ".apidocs/armi.utils.iterables.rst", ".apidocs/armi.utils.mathematics.rst", ".apidocs/armi.utils.outputCache.rst", ".apidocs/armi.utils.parsing.rst", ".apidocs/armi.utils.pathTools.rst", ".apidocs/armi.utils.plotting.rst", ".apidocs/armi.utils.properties.rst", ".apidocs/armi.utils.reportPlotting.rst", ".apidocs/armi.utils.tabulate.rst", ".apidocs/armi.utils.tests.rst", ".apidocs/armi.utils.tests.test_asciimaps.rst", ".apidocs/armi.utils.tests.test_codeTiming.rst", ".apidocs/armi.utils.tests.test_custom_exceptions.rst", ".apidocs/armi.utils.tests.test_densityTools.rst", ".apidocs/armi.utils.tests.test_directoryChangers.rst", ".apidocs/armi.utils.tests.test_directoryChangersMpi.rst", ".apidocs/armi.utils.tests.test_flags.rst", ".apidocs/armi.utils.tests.test_hexagon.rst", ".apidocs/armi.utils.tests.test_iterables.rst", ".apidocs/armi.utils.tests.test_mathematics.rst", ".apidocs/armi.utils.tests.test_outputCache.rst", ".apidocs/armi.utils.tests.test_parsing.rst", ".apidocs/armi.utils.tests.test_pathTools.rst", ".apidocs/armi.utils.tests.test_plotting.rst", ".apidocs/armi.utils.tests.test_properties.rst", ".apidocs/armi.utils.tests.test_reportPlotting.rst", ".apidocs/armi.utils.tests.test_tabulate.rst", ".apidocs/armi.utils.tests.test_textProcessors.rst", ".apidocs/armi.utils.tests.test_triangle.rst", ".apidocs/armi.utils.tests.test_units.rst", ".apidocs/armi.utils.tests.test_utils.rst", ".apidocs/armi.utils.textProcessors.rst", ".apidocs/armi.utils.triangle.rst", ".apidocs/armi.utils.units.rst", ".apidocs/modules.rst", "developer/documenting.rst", "developer/entrypoints.rst", "developer/first_time_contributors.rst", "developer/guide.rst", "developer/index.rst", "developer/making_armi_based_apps.rst", "developer/parallel_coding.rst", "developer/profiling.rst", "developer/reports.rst", "developer/standards_and_practices.rst", "developer/tooling.rst", "gallery-src/README.rst", "gallery-src/analysis/README.rst", "gallery-src/applications/README.rst", "gallery-src/framework/README.rst", "gallery/analysis/index.rst", "gallery/analysis/run_blockMcnpMaterialCard.rst", "gallery/analysis/run_hexBlockToRZConversion.rst", "gallery/analysis/run_hexReactorToRZ.rst", "gallery/analysis/sg_execution_times.rst", "gallery/applications/index.rst", "gallery/framework/index.rst", "gallery/framework/run_blockVolumeFractions.rst", "gallery/framework/run_chartOfNuclides.rst", "gallery/framework/run_computeReactionRates.rst", "gallery/framework/run_fuelManagement.rst", "gallery/framework/run_grids1_hex.rst", "gallery/framework/run_grids2_cartesian.rst", "gallery/framework/run_grids3_rzt.rst", "gallery/framework/run_isotxs.rst", "gallery/framework/run_isotxs2_matrix.rst", "gallery/framework/run_materials.rst", "gallery/framework/run_programmaticReactorDefinition.rst", "gallery/framework/run_reactorFacemap.rst", "gallery/framework/run_transmutationMatrix.rst", "gallery/framework/sg_execution_times.rst", "gallery/index.rst", "glossary.rst", "index.rst", "installation.rst", "release/0.1.rst", "release/0.2.rst", "release/0.3.rst", "release/0.4.rst", "release/index.rst", "tutorials/data_model.nblink", "tutorials/index.rst", "tutorials/making_your_first_app.rst", "tutorials/materials_demo.ipynb", "tutorials/nuclide_demo.ipynb", "tutorials/param_sweep.nblink", "tutorials/walkthrough_inputs.rst", "tutorials/walkthrough_lwr_inputs.rst", "user/_gallery/index.rst", "user/accessingEntryPoints.rst", "user/assembly_parameters_report.rst", "user/block_parameters_report.rst", "user/component_parameters_report.rst", "user/core_parameters_report.rst", "user/index.rst", "user/inputs.rst", "user/manual_data_access.rst", "user/outputs.rst", "user/physics_coupling.rst", "user/radial_and_axial_expansion.rst", "user/reactor_parameters_report.rst", "user/user_install.rst"], "titles": ["armi package", "armi.apps module", "armi.bookkeeping package", "armi.bookkeeping.db package", "armi.bookkeeping.db.compareDB3 module", "armi.bookkeeping.db.database3 module", "armi.bookkeeping.db.databaseInterface module", "armi.bookkeeping.db.factory module", "armi.bookkeeping.db.jaggedArray module", "armi.bookkeeping.db.layout module", "armi.bookkeeping.db.passiveDBLoadPlugin module", "armi.bookkeeping.db.permissions module", "armi.bookkeeping.db.tests package", "armi.bookkeeping.db.tests.test_comparedb3 module", "armi.bookkeeping.db.tests.test_database3 module", "armi.bookkeeping.db.tests.test_databaseInterface module", "armi.bookkeeping.db.tests.test_jaggedArray module", "armi.bookkeeping.db.tests.test_layout module", "armi.bookkeeping.db.typedefs module", "armi.bookkeeping.historyTracker module", "armi.bookkeeping.mainInterface module", "armi.bookkeeping.memoryProfiler module", "armi.bookkeeping.report package", "armi.bookkeeping.report.data module", "armi.bookkeeping.report.html module", "armi.bookkeeping.report.newReportUtils module", "armi.bookkeeping.report.newReports module", "armi.bookkeeping.report.reportInterface module", "armi.bookkeeping.report.reportingUtils module", "armi.bookkeeping.report.tests package", "armi.bookkeeping.report.tests.test_newReport module", "armi.bookkeeping.report.tests.test_report module", "armi.bookkeeping.snapshotInterface module", "armi.bookkeeping.tests package", "armi.bookkeeping.tests.test_historyTracker module", "armi.bookkeeping.tests.test_memoryProfiler module", "armi.bookkeeping.tests.test_snapshot module", "armi.bookkeeping.visualization package", "armi.bookkeeping.visualization.dumper module", "armi.bookkeeping.visualization.entryPoint module", "armi.bookkeeping.visualization.tests package", "armi.bookkeeping.visualization.tests.test_vis module", "armi.bookkeeping.visualization.tests.test_xdmf module", "armi.bookkeeping.visualization.utils module", "armi.bookkeeping.visualization.vtk module", "armi.bookkeeping.visualization.xdmf module", "armi.cases package", "armi.cases.case module", "armi.cases.inputModifiers package", "armi.cases.inputModifiers.inputModifiers module", "armi.cases.inputModifiers.neutronicsModifiers module", "armi.cases.inputModifiers.pinTypeInputModifiers module", "armi.cases.inputModifiers.tests package", "armi.cases.inputModifiers.tests.test_inputModifiers module", "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module", "armi.cases.suite module", "armi.cases.suiteBuilder module", "armi.cases.tests package", "armi.cases.tests.test_cases module", "armi.cases.tests.test_suiteBuilder module", "armi.cli package", "armi.cli.checkInputs module", "armi.cli.cleanTemps module", "armi.cli.clone module", "armi.cli.compareCases module", "armi.cli.database module", "armi.cli.entryPoint module", "armi.cli.gridGui module", "armi.cli.migrateInputs module", "armi.cli.modify module", "armi.cli.reportsEntryPoint module", "armi.cli.run module", "armi.cli.runSuite module", "armi.cli.tests package", "armi.cli.tests.test_runEntryPoint module", "armi.cli.tests.test_runSuite module", "armi.conftest module", "armi.context module", "armi.interfaces module", "armi.materials package", "armi.materials.air module", "armi.materials.alloy200 module", "armi.materials.b4c module", "armi.materials.be9 module", "armi.materials.caH2 module", "armi.materials.californium module", "armi.materials.concrete module", "armi.materials.copper module", "armi.materials.cs module", "armi.materials.custom module", "armi.materials.graphite module", "armi.materials.hafnium module", "armi.materials.hastelloyN module", "armi.materials.ht9 module", "armi.materials.inconel module", "armi.materials.inconel600 module", "armi.materials.inconel625 module", "armi.materials.inconel800 module", "armi.materials.inconelPE16 module", "armi.materials.inconelX750 module", "armi.materials.lead module", "armi.materials.leadBismuth module", "armi.materials.lithium module", "armi.materials.magnesium module", "armi.materials.material module", "armi.materials.mgO module", "armi.materials.mixture module", "armi.materials.molybdenum module", "armi.materials.mox module", "armi.materials.nZ module", "armi.materials.potassium module", "armi.materials.scandiumOxide module", "armi.materials.siC module", "armi.materials.sodium module", "armi.materials.sodiumChloride module", "armi.materials.sulfur module", "armi.materials.tZM module", "armi.materials.tantalum module", "armi.materials.tests package", "armi.materials.tests.test__init__ module", "armi.materials.tests.test_air module", "armi.materials.tests.test_b4c module", "armi.materials.tests.test_be9 module", "armi.materials.tests.test_graphite module", "armi.materials.tests.test_lithium module", "armi.materials.tests.test_materials module", "armi.materials.tests.test_sic module", "armi.materials.tests.test_sulfur module", "armi.materials.tests.test_thoriumOxide module", "armi.materials.tests.test_uZr module", "armi.materials.tests.test_water module", "armi.materials.thU module", "armi.materials.thorium module", "armi.materials.thoriumOxide module", "armi.materials.uThZr module", "armi.materials.uZr module", "armi.materials.uranium module", "armi.materials.uraniumOxide module", "armi.materials.void module", "armi.materials.water module", "armi.materials.yttriumOxide module", "armi.materials.zincOxide module", "armi.materials.zr module", "armi.meta module", "armi.migration package", "armi.migration.base module", "armi.migration.m0_1_3 module", "armi.migration.m0_1_6 module", "armi.migration.tests package", "armi.migration.tests.test_m0_1_6 module", "armi.migration.tests.test_migration_base module", "armi.mpiActions module", "armi.nucDirectory package", "armi.nucDirectory.elements module", "armi.nucDirectory.nucDir module", "armi.nucDirectory.nuclideBases module", "armi.nucDirectory.tests package", "armi.nucDirectory.tests.test_elements module", "armi.nucDirectory.tests.test_nucDirectory module", "armi.nucDirectory.tests.test_nuclideBases module", "armi.nucDirectory.tests.test_thermalScattering module", "armi.nucDirectory.tests.test_transmutations module", "armi.nucDirectory.thermalScattering module", "armi.nucDirectory.transmutations module", "armi.nuclearDataIO package", "armi.nuclearDataIO.cccc package", "armi.nuclearDataIO.cccc.cccc module", "armi.nuclearDataIO.cccc.compxs module", "armi.nuclearDataIO.cccc.dif3d module", "armi.nuclearDataIO.cccc.dlayxs module", "armi.nuclearDataIO.cccc.fixsrc module", "armi.nuclearDataIO.cccc.gamiso module", "armi.nuclearDataIO.cccc.geodst module", "armi.nuclearDataIO.cccc.isotxs module", "armi.nuclearDataIO.cccc.labels module", "armi.nuclearDataIO.cccc.nhflux module", "armi.nuclearDataIO.cccc.pmatrx module", "armi.nuclearDataIO.cccc.pwdint module", "armi.nuclearDataIO.cccc.rtflux module", "armi.nuclearDataIO.cccc.rzflux module", "armi.nuclearDataIO.cccc.tests package", "armi.nuclearDataIO.cccc.tests.test_cccc module", "armi.nuclearDataIO.cccc.tests.test_compxs module", "armi.nuclearDataIO.cccc.tests.test_dif3d module", "armi.nuclearDataIO.cccc.tests.test_dlayxs module", "armi.nuclearDataIO.cccc.tests.test_fixsrc module", "armi.nuclearDataIO.cccc.tests.test_gamiso module", "armi.nuclearDataIO.cccc.tests.test_geodst module", "armi.nuclearDataIO.cccc.tests.test_isotxs module", "armi.nuclearDataIO.cccc.tests.test_labels module", "armi.nuclearDataIO.cccc.tests.test_nhflux module", "armi.nuclearDataIO.cccc.tests.test_pmatrx module", "armi.nuclearDataIO.cccc.tests.test_pwdint module", "armi.nuclearDataIO.cccc.tests.test_rtflux module", "armi.nuclearDataIO.cccc.tests.test_rzflux module", "armi.nuclearDataIO.nuclearFileMetadata module", "armi.nuclearDataIO.tests package", "armi.nuclearDataIO.tests.test_xsCollections module", "armi.nuclearDataIO.tests.test_xsLibraries module", "armi.nuclearDataIO.tests.test_xsNuclides module", "armi.nuclearDataIO.xsCollections module", "armi.nuclearDataIO.xsLibraries module", "armi.nuclearDataIO.xsNuclides module", "armi.operators package", "armi.operators.operator module", "armi.operators.operatorMPI module", "armi.operators.runTypes module", "armi.operators.settingsValidation module", "armi.operators.snapshots module", "armi.operators.tests package", "armi.operators.tests.test_operatorSnapshots module", "armi.operators.tests.test_operators module", "armi.physics package", "armi.physics.constants module", "armi.physics.executers module", "armi.physics.fuelCycle package", "armi.physics.fuelCycle.assemblyRotationAlgorithms module", "armi.physics.fuelCycle.fuelHandlerFactory module", "armi.physics.fuelCycle.fuelHandlerInterface module", "armi.physics.fuelCycle.fuelHandlers module", "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module", "armi.physics.fuelCycle.settings module", "armi.physics.fuelCycle.tests package", "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module", "armi.physics.fuelCycle.tests.test_fuelHandlers module", "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module", "armi.physics.fuelPerformance package", "armi.physics.fuelPerformance.executers module", "armi.physics.fuelPerformance.parameters module", "armi.physics.fuelPerformance.plugin module", "armi.physics.fuelPerformance.settings module", "armi.physics.fuelPerformance.tests package", "armi.physics.fuelPerformance.tests.test_executers module", "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module", "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module", "armi.physics.fuelPerformance.utils module", "armi.physics.neutronics package", "armi.physics.neutronics.const module", "armi.physics.neutronics.crossSectionGroupManager module", "armi.physics.neutronics.crossSectionSettings module", "armi.physics.neutronics.diffIsotxs module", "armi.physics.neutronics.energyGroups module", "armi.physics.neutronics.fissionProductModel package", "armi.physics.neutronics.fissionProductModel.fissionProductModel module", "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module", "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module", "armi.physics.neutronics.fissionProductModel.tests package", "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module", "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module", "armi.physics.neutronics.globalFlux package", "armi.physics.neutronics.globalFlux.globalFluxInterface module", "armi.physics.neutronics.globalFlux.tests package", "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module", "armi.physics.neutronics.latticePhysics package", "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module", "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module", "armi.physics.neutronics.latticePhysics.tests package", "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module", "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module", "armi.physics.neutronics.macroXSGenerationInterface module", "armi.physics.neutronics.parameters module", "armi.physics.neutronics.reports module", "armi.physics.neutronics.settings module", "armi.physics.neutronics.tests package", "armi.physics.neutronics.tests.test_crossSectionManager module", "armi.physics.neutronics.tests.test_crossSectionSettings module", "armi.physics.neutronics.tests.test_crossSectionTable module", "armi.physics.neutronics.tests.test_energyGroups module", "armi.physics.neutronics.tests.test_macroXSGenerationInterface module", "armi.physics.neutronics.tests.test_neutronicsPlugin module", "armi.physics.safety package", "armi.physics.tests package", "armi.physics.tests.test_executers module", "armi.physics.thermalHydraulics package", "armi.physics.thermalHydraulics.const module", "armi.physics.thermalHydraulics.parameters module", "armi.physics.thermalHydraulics.plugin module", "armi.physics.thermalHydraulics.settings module", "armi.physics.thermalHydraulics.tests package", "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin module", "armi.pluginManager module", "armi.plugins module", "armi.reactor package", "armi.reactor.assemblies module", "armi.reactor.assemblyParameters module", "armi.reactor.blockParameters module", "armi.reactor.blocks module", "armi.reactor.blueprints package", "armi.reactor.blueprints.assemblyBlueprint module", "armi.reactor.blueprints.blockBlueprint module", "armi.reactor.blueprints.componentBlueprint module", "armi.reactor.blueprints.gridBlueprint module", "armi.reactor.blueprints.isotopicOptions module", "armi.reactor.blueprints.reactorBlueprint module", "armi.reactor.blueprints.tests package", "armi.reactor.blueprints.tests.test_assemblyBlueprints module", "armi.reactor.blueprints.tests.test_blockBlueprints module", "armi.reactor.blueprints.tests.test_blueprints module", "armi.reactor.blueprints.tests.test_componentBlueprint module", "armi.reactor.blueprints.tests.test_customIsotopics module", "armi.reactor.blueprints.tests.test_gridBlueprints module", "armi.reactor.blueprints.tests.test_materialModifications module", "armi.reactor.blueprints.tests.test_reactorBlueprints module", "armi.reactor.components package", "armi.reactor.components.basicShapes module", "armi.reactor.components.complexShapes module", "armi.reactor.components.component module", "armi.reactor.components.componentParameters module", "armi.reactor.components.volumetricShapes module", "armi.reactor.composites module", "armi.reactor.converters package", "armi.reactor.converters.axialExpansionChanger package", "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage module", "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger module", "armi.reactor.converters.axialExpansionChanger.expansionData module", "armi.reactor.converters.blockConverters module", "armi.reactor.converters.geometryConverters module", "armi.reactor.converters.meshConverters module", "armi.reactor.converters.parameterSweeps package", "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module", "armi.reactor.converters.pinTypeBlockConverters module", "armi.reactor.converters.tests package", "armi.reactor.converters.tests.test_axialExpansionChanger module", "armi.reactor.converters.tests.test_blockConverter module", "armi.reactor.converters.tests.test_geometryConverters module", "armi.reactor.converters.tests.test_meshConverters module", "armi.reactor.converters.tests.test_pinTypeBlockConverters module", "armi.reactor.converters.tests.test_uniformMesh module", "armi.reactor.converters.uniformMesh module", "armi.reactor.cores module", "armi.reactor.excoreStructure module", "armi.reactor.flags module", "armi.reactor.geometry module", "armi.reactor.grids package", "armi.reactor.grids.axial module", "armi.reactor.grids.cartesian module", "armi.reactor.grids.constants module", "armi.reactor.grids.grid module", "armi.reactor.grids.hexagonal module", "armi.reactor.grids.locations module", "armi.reactor.grids.structuredGrid module", "armi.reactor.grids.thetarz module", "armi.reactor.parameters package", "armi.reactor.parameters.exceptions module", "armi.reactor.parameters.parameterCollections module", "armi.reactor.parameters.parameterDefinitions module", "armi.reactor.parameters.resolveCollections module", "armi.reactor.reactorParameters module", "armi.reactor.reactors module", "armi.reactor.spentFuelPool module", "armi.reactor.systemLayoutInput module", "armi.reactor.tests package", "armi.reactor.tests.test_assemblies module", "armi.reactor.tests.test_blocks module", "armi.reactor.tests.test_components module", "armi.reactor.tests.test_composites module", "armi.reactor.tests.test_excoreStructures module", "armi.reactor.tests.test_flags module", "armi.reactor.tests.test_geometry module", "armi.reactor.tests.test_parameters module", "armi.reactor.tests.test_reactors module", "armi.reactor.tests.test_rz_reactors module", "armi.reactor.tests.test_zones module", "armi.reactor.zones module", "armi.runLog module", "armi.settings package", "armi.settings.caseSettings module", "armi.settings.fwSettings package", "armi.settings.fwSettings.databaseSettings module", "armi.settings.fwSettings.globalSettings module", "armi.settings.fwSettings.reportSettings module", "armi.settings.fwSettings.tightCouplingSettings module", "armi.settings.setting module", "armi.settings.settingsIO module", "armi.settings.settingsValidation module", "armi.settings.tests package", "armi.settings.tests.test_inspectors module", "armi.settings.tests.test_settings module", "armi.settings.tests.test_settingsIO module", "armi.tests package", "armi.tests.mockRunLogs module", "armi.tests.refSmallReactorShuffleLogic module", "armi.tests.test_apps module", "armi.tests.test_armiTestHelper module", "armi.tests.test_cartesian module", "armi.tests.test_context module", "armi.tests.test_interfaces module", "armi.tests.test_lwrInputs module", "armi.tests.test_mpiActions module", "armi.tests.test_mpiFeatures module", "armi.tests.test_mpiParameters module", "armi.tests.test_notebooks module", "armi.tests.test_plugins module", "armi.tests.test_runLog module", "armi.tests.test_tests module", "armi.tests.test_user_plugins module", "armi.utils package", "armi.utils.asciimaps module", "armi.utils.codeTiming module", "armi.utils.customExceptions module", "armi.utils.densityTools module", "armi.utils.directoryChangers module", "armi.utils.directoryChangersMpi module", "armi.utils.dynamicImporter module", "armi.utils.flags module", "armi.utils.gridEditor module", "armi.utils.hexagon module", "armi.utils.iterables module", "armi.utils.mathematics module", "armi.utils.outputCache module", "armi.utils.parsing module", "armi.utils.pathTools module", "armi.utils.plotting module", "armi.utils.properties module", "armi.utils.reportPlotting module", "armi.utils.tabulate module", "armi.utils.tests package", "armi.utils.tests.test_asciimaps module", "armi.utils.tests.test_codeTiming module", "armi.utils.tests.test_custom_exceptions module", "armi.utils.tests.test_densityTools module", "armi.utils.tests.test_directoryChangers module", "armi.utils.tests.test_directoryChangersMpi module", "armi.utils.tests.test_flags module", "armi.utils.tests.test_hexagon module", "armi.utils.tests.test_iterables module", "armi.utils.tests.test_mathematics module", "armi.utils.tests.test_outputCache module", "armi.utils.tests.test_parsing module", "armi.utils.tests.test_pathTools module", "armi.utils.tests.test_plotting module", "armi.utils.tests.test_properties module", "armi.utils.tests.test_reportPlotting module", "armi.utils.tests.test_tabulate module", "armi.utils.tests.test_textProcessors module", "armi.utils.tests.test_triangle module", "armi.utils.tests.test_units module", "armi.utils.tests.test_utils module", "armi.utils.textProcessors module", "armi.utils.triangle module", "armi.utils.units module", "armi", "<span class=\"section-number\">4. </span>Documenting ARMI", "<span class=\"section-number\">3. </span>Entry Points", "<span class=\"section-number\">8. </span>First Time Contributors Guide", "<span class=\"section-number\">1. </span>Framework Architecture", "Developer Docs", "<span class=\"section-number\">2. </span>Making ARMI-based Apps", "<span class=\"section-number\">5. </span>Parallel Code in ARMI", "<span class=\"section-number\">6. </span>Profiling ARMI", "<span class=\"section-number\">7. </span>Reports in ARMI", "<span class=\"section-number\">9. </span>Standards and Practices for Coding", "<span class=\"section-number\">10. </span>Tooling and Infrastructure", "Gallery", "Analysis", "Applications", "Framework", "Analysis", "Write MCNP Material Cards", "Hex block to RZ geometry conversion", "Hex reactor to RZ geometry conversion", "Computation times", "Applications", "Framework", "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion", "Plot a chart of the nuclides.", "Computing Reaction Rates on a Block.", "&lt;no title&gt;", "Make a hex grid.", "Make a Cartesian grid.", "Make a Theta-R-Z grid.", "Plotting Multi-group XS from ISOTXS.", "Plotting a multi-group scatter matrix.", "Listing of Material Library.", "Build Reactor Inputs Programmatically.", "Plot a reactor facemap.", "Transmutation and decay reactions.", "Computation times", "Gallery", "Glossary", "ARMI", "Installation", "ARMI v0.1 Release Notes", "ARMI v0.2 Release Notes", "ARMI v0.3 Release Notes", "ARMI v0.4 Release Notes", "Release Notes", "<span class=\"section-number\">5. </span>Hands-on at the ARMI Terminal", "Tutorials", "<span class=\"section-number\">6. </span>Making your first ARMI-based App", "<span class=\"section-number\">2. </span>The ARMI Material Library", "<span class=\"section-number\">1. </span>The ARMI Nuclide and Element Packages", "<span class=\"section-number\">7. </span>Parameter sweeps", "<span class=\"section-number\">3. </span>Building input files for a fast reactor", "<span class=\"section-number\">4. </span>Building input files for a thermal reactor", "Gallery", "<span class=\"section-number\">12. </span>Accessing Entry Points", "<span class=\"section-number\">8. </span>Assembly Parameters", "<span class=\"section-number\">9. </span>Block Parameters", "<span class=\"section-number\">7. </span>Component Parameters", "<span class=\"section-number\">6. </span>Core Parameters", "User Docs", "<span class=\"section-number\">2. </span>Inputs", "<span class=\"section-number\">4. </span>Accessing Data in ARMI", "<span class=\"section-number\">3. </span>Outputs", "<span class=\"section-number\">10. </span>Physics Coupling", "<span class=\"section-number\">11. </span>Radial and Axial Expansion and Contraction", "<span class=\"section-number\">5. </span>Reactor Parameters", "<span class=\"section-number\">1. </span>Installation"], "terms": {"welcom": [0, 28, 310, 483], "advanc": [0, 3, 7, 92, 238, 239, 309, 310, 371, 406, 479, 480, 481, 487, 492, 508], "reactor": [0, 2, 3, 5, 6, 9, 10, 14, 15, 19, 20, 21, 25, 26, 28, 31, 32, 34, 38, 41, 43, 44, 45, 46, 47, 48, 58, 60, 61, 70, 78, 79, 82, 85, 89, 90, 92, 101, 104, 151, 155, 160, 164, 165, 166, 169, 175, 176, 187, 192, 201, 203, 204, 211, 212, 214, 215, 216, 218, 219, 220, 224, 225, 226, 227, 238, 243, 245, 247, 250, 252, 254, 261, 264, 276, 281, 372, 379, 384, 386, 388, 389, 390, 392, 395, 396, 397, 400, 402, 404, 406, 414, 441, 444, 446, 447, 448, 450, 451, 453, 456, 457, 458, 459, 461, 463, 464, 466, 467, 468, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 485, 488, 489, 490, 495, 497, 498, 499, 500, 501, 502, 503, 508], "model": [0, 3, 5, 6, 9, 10, 21, 34, 46, 47, 56, 60, 78, 80, 81, 82, 83, 87, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142, 159, 160, 163, 174, 203, 211, 212, 214, 226, 235, 236, 238, 239, 242, 243, 244, 247, 248, 265, 276, 281, 282, 286, 287, 288, 289, 290, 291, 292, 297, 303, 305, 306, 309, 310, 315, 316, 320, 329, 331, 335, 342, 344, 345, 346, 348, 359, 361, 365, 374, 390, 396, 446, 447, 454, 456, 457, 459, 463, 466, 476, 478, 479, 480, 481, 482, 483, 485, 488, 489, 490, 492, 493, 494, 495, 498, 500, 502, 504, 508], "interfac": [0, 1, 3, 4, 5, 6, 7, 9, 15, 19, 20, 21, 27, 32, 34, 47, 58, 151, 155, 165, 166, 174, 175, 178, 179, 189, 203, 204, 205, 211, 214, 215, 218, 219, 224, 229, 236, 238, 243, 247, 250, 252, 253, 254, 257, 259, 266, 268, 276, 281, 283, 309, 329, 332, 337, 342, 368, 370, 371, 382, 386, 389, 392, 395, 404, 407, 414, 415, 441, 442, 443, 447, 448, 451, 452, 467, 474, 475, 479, 480, 481, 482, 483, 485, 487, 492, 502, 504, 508], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 19, 20, 21, 23, 25, 26, 27, 28, 31, 32, 33, 34, 37, 39, 42, 43, 44, 45, 47, 49, 50, 51, 55, 56, 58, 60, 61, 62, 65, 66, 69, 70, 74, 76, 77, 78, 79, 80, 82, 89, 90, 93, 94, 101, 103, 104, 105, 108, 113, 114, 115, 116, 119, 125, 133, 134, 135, 137, 138, 139, 145, 151, 152, 153, 154, 155, 160, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 187, 188, 190, 191, 192, 195, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 224, 227, 235, 236, 238, 239, 240, 241, 243, 245, 247, 250, 252, 254, 257, 259, 261, 264, 265, 272, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 297, 298, 301, 303, 304, 306, 308, 309, 310, 313, 314, 315, 316, 317, 320, 322, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 379, 380, 382, 386, 388, 389, 390, 392, 393, 395, 396, 397, 398, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 420, 432, 433, 434, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 466, 467, 468, 469, 470, 471, 473, 474, 476, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508], "modul": [0, 2, 3, 12, 22, 29, 33, 37, 40, 46, 48, 52, 57, 60, 73, 79, 118, 144, 148, 152, 156, 164, 165, 180, 196, 203, 209, 212, 215, 222, 226, 231, 236, 242, 246, 249, 251, 253, 256, 263, 271, 273, 278, 282, 287, 294, 303, 310, 311, 318, 321, 333, 342, 351, 365, 367, 375, 379, 396, 416, 441, 443, 445, 447, 448, 451, 479, 480, 482, 483, 489, 491, 492, 493, 502, 504], "initi": [0, 1, 3, 6, 47, 59, 61, 74, 78, 151, 153, 162, 166, 167, 170, 175, 201, 204, 216, 243, 253, 261, 281, 286, 288, 289, 290, 291, 292, 293, 301, 306, 309, 313, 314, 322, 328, 329, 342, 345, 354, 372, 374, 392, 398, 400, 401, 413, 415, 416, 424, 431, 445, 464, 467, 474, 475, 479, 480, 482, 483, 485, 488, 498, 499, 502], "platform": [0, 55, 480, 481, 483, 508], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 32, 37, 39, 42, 44, 45, 47, 50, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 81, 82, 88, 89, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 108, 112, 116, 136, 137, 139, 142, 145, 151, 152, 153, 154, 155, 159, 162, 163, 165, 166, 167, 169, 170, 172, 173, 174, 175, 178, 179, 188, 190, 197, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 214, 215, 217, 218, 219, 220, 224, 226, 235, 236, 238, 239, 240, 242, 243, 244, 245, 250, 254, 259, 262, 265, 280, 281, 282, 283, 286, 287, 288, 289, 291, 292, 293, 303, 304, 305, 306, 308, 309, 313, 315, 316, 323, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 353, 354, 355, 360, 361, 363, 364, 365, 366, 371, 372, 373, 374, 378, 379, 386, 389, 393, 395, 396, 397, 400, 406, 407, 408, 411, 412, 413, 414, 415, 438, 440, 442, 443, 444, 446, 447, 448, 449, 451, 452, 459, 474, 476, 479, 482, 483, 484, 487, 488, 489, 492, 493, 496, 497, 498, 499, 500, 501, 503, 506, 507], "bootstrap": 0, "process": [0, 3, 4, 5, 21, 23, 39, 45, 47, 77, 104, 151, 175, 204, 214, 215, 218, 219, 224, 226, 227, 236, 239, 250, 254, 281, 309, 322, 328, 329, 344, 366, 373, 388, 389, 390, 399, 415, 438, 443, 444, 445, 448, 451, 452, 479, 480, 482, 483, 485, 486, 487, 488, 489, 500, 502, 504, 505], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 19, 20, 21, 23, 25, 26, 27, 28, 31, 32, 33, 34, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 108, 111, 112, 113, 114, 115, 116, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 145, 151, 152, 153, 154, 155, 157, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 188, 190, 195, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 224, 226, 227, 235, 236, 238, 239, 240, 241, 243, 245, 248, 250, 252, 254, 257, 258, 259, 261, 264, 265, 272, 276, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 297, 298, 301, 302, 303, 304, 305, 306, 308, 309, 310, 312, 313, 314, 315, 316, 317, 320, 322, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 357, 359, 360, 361, 363, 364, 366, 371, 372, 373, 374, 376, 377, 378, 379, 380, 383, 386, 389, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 415, 420, 421, 424, 426, 429, 430, 432, 433, 434, 435, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 458, 459, 464, 466, 467, 468, 469, 470, 473, 474, 476, 479, 480, 481, 482, 483, 485, 487, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 502, 504, 505, 506, 507, 508], "broken": [0, 151, 286, 338, 407, 415, 451, 482, 485, 489, 502], "sever": [0, 77, 165, 219, 254, 281, 328, 342, 415, 442, 445, 451, 471, 480, 483, 485, 489, 491, 502], "phase": [0, 111, 140, 153, 162, 248, 502], "import": [0, 1, 3, 5, 6, 33, 44, 76, 77, 79, 152, 154, 155, 165, 167, 173, 175, 212, 215, 219, 237, 238, 243, 254, 281, 306, 316, 328, 329, 331, 340, 342, 353, 364, 377, 396, 399, 402, 403, 411, 412, 415, 438, 441, 443, 446, 447, 448, 449, 450, 452, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 483, 487, 489, 490, 491, 492, 493, 494, 502, 504, 508], "fundament": [0, 46, 60, 79, 80, 120, 141, 152, 153, 155, 309, 345, 406, 493], "depend": [0, 19, 26, 31, 32, 37, 46, 47, 55, 56, 58, 78, 79, 104, 151, 152, 165, 168, 169, 174, 204, 205, 206, 224, 235, 238, 239, 243, 281, 283, 286, 291, 292, 306, 308, 309, 316, 328, 329, 335, 337, 338, 345, 354, 360, 377, 379, 415, 438, 442, 444, 445, 446, 450, 473, 476, 480, 481, 482, 483, 485, 489, 490, 492, 500, 502, 503, 508], "python": [0, 1, 21, 37, 39, 66, 69, 70, 78, 79, 165, 166, 212, 219, 281, 286, 339, 342, 345, 372, 389, 396, 404, 407, 410, 411, 415, 422, 433, 438, 442, 443, 444, 445, 447, 448, 449, 451, 452, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 482, 483, 485, 487, 492, 493, 494, 502, 504], "librari": [0, 21, 37, 154, 155, 162, 163, 167, 169, 171, 173, 175, 176, 182, 188, 191, 195, 197, 200, 201, 202, 243, 250, 254, 259, 286, 292, 299, 306, 309, 329, 364, 404, 412, 443, 444, 447, 448, 451, 452, 463, 466, 471, 472, 477, 478, 480, 482, 483, 488, 489, 494, 495, 502], "some": [0, 2, 3, 4, 5, 7, 9, 14, 19, 20, 21, 28, 31, 32, 39, 41, 44, 46, 49, 55, 56, 77, 78, 89, 104, 108, 145, 151, 152, 154, 155, 160, 165, 166, 167, 169, 172, 175, 179, 195, 199, 200, 204, 212, 213, 214, 219, 224, 225, 226, 236, 238, 239, 243, 250, 262, 276, 281, 286, 287, 290, 291, 292, 302, 306, 309, 310, 313, 314, 327, 328, 329, 330, 331, 336, 337, 338, 340, 342, 344, 345, 346, 349, 352, 353, 360, 363, 364, 365, 366, 372, 373, 377, 379, 388, 390, 392, 397, 404, 407, 408, 411, 412, 414, 415, 417, 424, 426, 430, 433, 437, 438, 442, 444, 445, 446, 448, 450, 451, 452, 453, 459, 473, 476, 478, 480, 481, 482, 483, 487, 489, 492, 493, 494, 495, 497, 499, 501, 504, 508], "third": [0, 32, 97, 167, 178, 211, 250, 281, 283, 291, 309, 316, 324, 329, 337, 360, 408, 415, 439, 444, 451, 474, 480, 493, 502], "parti": [0, 32, 204, 444, 451, 480], "lib": [0, 83, 167, 171, 173, 176, 200, 201, 214, 250, 257, 259, 282, 309, 329, 396, 413, 451, 466, 471, 472], "investig": [0, 490], "environ": [0, 76, 77, 366, 372, 389, 422, 442, 451, 480, 482, 493, 501], "check": [0, 1, 4, 31, 36, 42, 47, 55, 61, 74, 78, 104, 125, 165, 190, 198, 199, 211, 214, 219, 236, 238, 239, 250, 252, 264, 269, 281, 286, 297, 306, 309, 314, 315, 317, 322, 324, 327, 329, 331, 332, 338, 341, 344, 352, 353, 354, 372, 374, 376, 379, 380, 387, 392, 396, 407, 408, 409, 411, 413, 417, 421, 424, 430, 437, 444, 445, 447, 450, 451, 479, 481, 482, 483, 485, 487, 488, 492, 493, 502, 508], "version": [0, 1, 2, 4, 5, 6, 7, 9, 14, 28, 44, 49, 60, 65, 68, 104, 144, 162, 165, 175, 211, 239, 280, 281, 282, 292, 309, 329, 342, 345, 365, 371, 372, 373, 374, 404, 407, 408, 412, 437, 445, 446, 480, 481, 482, 483, 485, 487, 489, 492, 493, 494, 502, 504, 508], "code": [0, 1, 3, 4, 5, 6, 7, 19, 20, 21, 27, 32, 48, 60, 66, 68, 78, 79, 144, 151, 152, 154, 155, 160, 162, 165, 166, 167, 168, 169, 173, 176, 200, 203, 204, 212, 214, 215, 218, 219, 221, 236, 238, 243, 252, 254, 255, 270, 281, 287, 289, 290, 292, 310, 320, 328, 331, 332, 337, 338, 340, 345, 350, 364, 366, 386, 392, 395, 397, 398, 401, 404, 408, 418, 430, 438, 442, 443, 444, 445, 446, 447, 449, 450, 452, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 482, 483, 485, 489, 491, 493, 498, 501, 502, 504], "mpi": [0, 2, 3, 5, 21, 27, 78, 129, 204, 205, 218, 219, 239, 259, 281, 309, 344, 388, 389, 390, 396, 402, 411, 422, 429, 446, 479, 480, 481, 483, 502, 508], "situat": [0, 9, 290, 303, 309, 331, 332, 339, 364, 374, 393, 415, 480, 489, 502], "tty": 0, "gui": [0, 60, 65, 66, 67, 77, 281, 335, 366, 372, 374, 408, 443, 445, 479, 480, 482, 483, 489, 493, 503], "interact": [0, 3, 5, 6, 7, 9, 15, 19, 20, 63, 65, 66, 77, 78, 155, 167, 202, 203, 204, 211, 226, 236, 238, 252, 254, 257, 281, 344, 362, 389, 442, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 498, 500, 502, 504, 505, 508], "set": [0, 1, 3, 4, 5, 6, 9, 10, 14, 20, 21, 25, 28, 31, 32, 36, 39, 43, 44, 45, 46, 47, 49, 50, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 89, 90, 95, 96, 99, 104, 145, 147, 149, 151, 154, 155, 163, 164, 167, 171, 173, 174, 175, 176, 197, 200, 201, 203, 204, 205, 206, 207, 211, 212, 214, 215, 216, 217, 219, 226, 227, 229, 236, 238, 239, 240, 241, 243, 244, 245, 247, 250, 252, 254, 257, 261, 264, 265, 269, 270, 272, 273, 276, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 297, 299, 306, 309, 313, 314, 315, 316, 317, 319, 322, 326, 327, 328, 329, 330, 331, 332, 337, 339, 340, 342, 343, 344, 345, 348, 350, 353, 354, 355, 360, 363, 386, 389, 393, 395, 396, 399, 400, 407, 408, 409, 411, 412, 413, 414, 415, 423, 434, 437, 438, 441, 443, 445, 447, 448, 450, 451, 452, 459, 460, 464, 466, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 496, 497, 498, 500, 501, 505, 506, 508], "up": [0, 3, 4, 5, 9, 19, 21, 26, 31, 45, 47, 67, 77, 78, 79, 93, 104, 144, 146, 151, 152, 153, 154, 155, 162, 163, 165, 200, 202, 204, 212, 214, 219, 235, 238, 250, 265, 272, 283, 286, 290, 292, 301, 306, 309, 313, 316, 328, 329, 331, 335, 338, 339, 340, 344, 345, 353, 363, 374, 386, 390, 396, 397, 400, 406, 408, 412, 414, 417, 421, 426, 442, 443, 445, 448, 450, 451, 452, 476, 480, 481, 482, 483, 485, 487, 488, 489, 490, 492, 497, 498, 500, 502, 504, 508], "temp": [0, 25, 62, 74, 77, 108, 306, 313, 314, 322, 412, 483, 489, 502], "dir": [0, 62, 214, 401, 483, 502], "printout": [0, 21, 55, 250, 302, 329, 482], "tabl": [0, 2, 4, 22, 23, 24, 25, 26, 55, 61, 80, 90, 92, 97, 105, 111, 113, 116, 123, 136, 140, 153, 154, 162, 184, 219, 261, 266, 283, 317, 329, 357, 396, 406, 433, 446, 448, 492, 493, 494, 502, 503, 504], "format": [0, 1, 3, 4, 5, 14, 16, 23, 24, 28, 37, 43, 45, 46, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 125, 131, 132, 133, 136, 137, 140, 141, 142, 155, 165, 166, 167, 172, 173, 174, 175, 177, 178, 179, 185, 193, 194, 219, 245, 283, 288, 291, 292, 298, 299, 306, 329, 350, 358, 364, 366, 380, 396, 400, 412, 414, 420, 433, 446, 448, 450, 471, 472, 480, 482, 485, 487, 492, 494, 502], "prepar": [0, 78, 171, 211, 219, 243, 254, 309, 316, 328, 329, 396, 397, 490, 501], "log": [0, 3, 5, 55, 204, 360, 364, 366, 379, 380, 389, 393, 399, 414, 446, 466, 471, 483, 485, 489, 492, 504], "info": [0, 19, 21, 78, 113, 136, 169, 175, 183, 190, 281, 309, 340, 342, 350, 364, 380, 396, 399, 441, 445, 452, 473, 487, 489, 492, 493, 498, 501, 502, 504], "all": [0, 1, 3, 4, 5, 6, 8, 9, 11, 19, 20, 21, 37, 44, 45, 47, 50, 51, 55, 60, 62, 66, 69, 72, 74, 77, 78, 79, 89, 104, 125, 129, 151, 152, 153, 154, 155, 157, 159, 160, 162, 163, 165, 166, 167, 169, 171, 173, 174, 175, 176, 184, 188, 191, 195, 198, 200, 202, 204, 205, 206, 212, 214, 216, 218, 219, 220, 227, 236, 238, 239, 243, 245, 247, 250, 254, 255, 257, 259, 264, 281, 283, 286, 287, 290, 292, 303, 306, 309, 314, 316, 322, 324, 328, 329, 330, 331, 332, 333, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 360, 363, 364, 373, 378, 379, 380, 388, 395, 396, 397, 398, 400, 402, 403, 404, 407, 408, 409, 412, 414, 415, 421, 426, 438, 442, 444, 445, 447, 448, 450, 451, 452, 464, 473, 476, 479, 480, 481, 483, 484, 487, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 504, 507, 508], "possibl": [0, 3, 5, 6, 19, 20, 77, 78, 151, 165, 166, 204, 220, 250, 280, 281, 283, 286, 287, 288, 292, 306, 316, 329, 331, 340, 342, 344, 345, 360, 372, 374, 379, 404, 408, 409, 411, 412, 415, 438, 450, 451, 452, 476, 480, 484, 489, 493, 496, 502], "nuclid": [0, 5, 79, 82, 83, 89, 90, 102, 104, 108, 112, 131, 134, 135, 136, 137, 139, 146, 153, 154, 155, 158, 159, 160, 162, 163, 164, 165, 169, 171, 173, 174, 176, 195, 197, 199, 200, 201, 202, 238, 239, 243, 245, 247, 248, 255, 286, 287, 289, 290, 292, 297, 299, 301, 306, 309, 315, 322, 324, 328, 329, 360, 400, 412, 420, 441, 463, 466, 467, 474, 475, 476, 477, 478, 479, 482, 483, 487, 488, 490, 495, 497, 498, 499, 500], "object": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 36, 43, 45, 46, 47, 48, 49, 53, 54, 55, 56, 58, 60, 66, 70, 77, 78, 79, 104, 145, 151, 152, 153, 154, 155, 162, 163, 165, 166, 167, 169, 171, 173, 175, 176, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 214, 216, 217, 218, 219, 220, 227, 236, 239, 243, 245, 250, 252, 254, 259, 265, 269, 272, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 297, 303, 304, 305, 306, 308, 309, 312, 313, 314, 315, 316, 317, 319, 320, 322, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 344, 345, 347, 348, 349, 350, 352, 355, 359, 360, 362, 363, 364, 365, 366, 371, 372, 373, 374, 377, 379, 386, 388, 389, 390, 395, 396, 397, 398, 400, 401, 404, 407, 408, 410, 412, 413, 414, 415, 431, 438, 443, 447, 448, 450, 451, 453, 474, 478, 479, 480, 482, 483, 485, 487, 490, 492, 495, 497, 498, 499, 502, 504], "directori": [0, 3, 5, 15, 46, 47, 55, 56, 58, 62, 63, 69, 74, 76, 77, 78, 154, 158, 162, 201, 204, 214, 250, 272, 329, 360, 364, 365, 379, 401, 402, 411, 421, 438, 443, 451, 465, 480, 481, 482, 483, 487, 489, 494, 502, 504, 508], "discov": [0, 46, 47, 55, 56, 204, 224, 281, 445, 481, 492, 493, 508], "regist": [0, 1, 47, 75, 78, 280, 281, 365, 377, 392, 447, 480, 488, 502, 505], "avail": [0, 1, 3, 5, 6, 19, 60, 66, 151, 152, 154, 162, 175, 200, 202, 204, 206, 211, 214, 238, 239, 243, 247, 286, 292, 297, 309, 328, 345, 365, 377, 396, 404, 437, 442, 444, 445, 447, 448, 450, 453, 478, 480, 487, 490, 491, 493, 494, 495, 500, 502, 503, 504, 505, 507], "built": [0, 9, 60, 201, 209, 219, 227, 236, 259, 264, 276, 281, 282, 283, 286, 287, 293, 309, 315, 322, 333, 395, 442, 443, 445, 447, 451, 466, 479, 480, 487, 489, 502, 504], "plugin": [0, 1, 2, 10, 25, 32, 47, 50, 55, 58, 60, 76, 78, 79, 93, 104, 113, 135, 152, 203, 206, 212, 213, 215, 219, 224, 226, 227, 228, 231, 233, 236, 243, 244, 250, 260, 263, 269, 270, 273, 275, 278, 279, 280, 282, 286, 290, 292, 306, 310, 328, 342, 344, 345, 365, 366, 369, 374, 377, 379, 382, 391, 392, 395, 404, 441, 446, 450, 458, 467, 473, 476, 480, 482, 484, 485, 487, 488, 490, 494, 504], "custom": [0, 1, 60, 66, 79, 93, 104, 108, 151, 203, 215, 218, 219, 224, 236, 239, 245, 250, 254, 265, 280, 281, 287, 290, 292, 299, 319, 328, 364, 365, 371, 372, 373, 384, 389, 397, 400, 411, 412, 413, 415, 419, 425, 433, 438, 445, 447, 452, 474, 480, 482, 485, 487, 488, 493, 504], "ones": [0, 60, 89, 155, 163, 166, 200, 224, 238, 286, 309, 329, 397, 467, 487, 489, 502], "after": [0, 2, 8, 15, 26, 55, 72, 77, 78, 89, 104, 152, 167, 169, 175, 202, 204, 214, 219, 250, 254, 276, 281, 283, 286, 299, 306, 309, 313, 316, 327, 328, 329, 339, 340, 342, 344, 346, 353, 354, 360, 364, 366, 389, 395, 398, 404, 406, 407, 408, 412, 413, 414, 415, 445, 447, 448, 451, 452, 479, 483, 484, 485, 487, 489, 492, 498, 500, 502], "input": [0, 1, 3, 5, 6, 8, 14, 19, 20, 25, 28, 32, 39, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 68, 69, 74, 78, 79, 89, 104, 125, 135, 144, 145, 146, 155, 159, 168, 169, 170, 173, 183, 186, 188, 199, 200, 204, 211, 214, 215, 218, 219, 224, 238, 239, 243, 250, 254, 255, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 297, 299, 300, 303, 304, 306, 309, 310, 316, 320, 322, 328, 331, 332, 340, 341, 348, 350, 353, 354, 358, 360, 363, 365, 366, 371, 372, 379, 387, 396, 397, 399, 400, 403, 408, 409, 410, 415, 420, 426, 433, 434, 437, 440, 443, 445, 446, 453, 463, 466, 467, 475, 476, 477, 478, 480, 482, 483, 487, 488, 489, 492, 495, 497, 498, 499, 501, 503, 504], "defin": [0, 1, 3, 5, 7, 8, 10, 19, 20, 26, 32, 49, 58, 70, 78, 79, 80, 88, 102, 103, 104, 108, 110, 115, 139, 145, 153, 155, 159, 162, 163, 165, 166, 172, 173, 175, 178, 179, 197, 198, 200, 201, 204, 205, 206, 211, 215, 216, 219, 221, 223, 229, 230, 236, 238, 244, 250, 254, 262, 265, 270, 276, 277, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 297, 300, 301, 303, 304, 306, 308, 309, 314, 315, 327, 328, 329, 331, 333, 337, 339, 340, 342, 343, 344, 345, 346, 354, 357, 358, 366, 368, 370, 372, 374, 377, 386, 389, 392, 395, 397, 404, 408, 411, 412, 414, 415, 439, 440, 445, 447, 450, 451, 452, 453, 459, 464, 466, 474, 476, 478, 479, 482, 483, 485, 487, 488, 490, 492, 495, 498, 500, 504], "potenti": [0, 21, 49, 78, 104, 131, 132, 133, 162, 163, 204, 214, 281, 337, 348, 373, 374, 402, 409, 444, 445, 447, 450, 452, 480, 489, 492, 497, 500, 502, 507], "configur": [0, 1, 4, 76, 77, 239, 265, 281, 316, 372, 441, 445, 447, 451, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 480, 481, 482, 483, 487, 489, 492, 494, 497, 502, 508], "from": [0, 1, 3, 4, 5, 6, 8, 9, 10, 14, 15, 19, 20, 21, 25, 26, 28, 32, 33, 34, 37, 39, 43, 44, 46, 47, 49, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 82, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 108, 110, 111, 113, 114, 116, 120, 123, 125, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 144, 145, 146, 151, 152, 153, 154, 155, 159, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 187, 190, 191, 192, 195, 197, 200, 201, 202, 203, 204, 205, 208, 211, 214, 215, 219, 220, 224, 227, 236, 238, 239, 240, 241, 243, 245, 247, 248, 250, 252, 254, 259, 264, 265, 269, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 299, 300, 301, 303, 305, 306, 309, 310, 313, 314, 315, 316, 320, 322, 324, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 342, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 357, 359, 360, 363, 364, 365, 366, 372, 373, 374, 378, 379, 380, 386, 387, 389, 390, 395, 396, 397, 400, 401, 404, 406, 407, 408, 409, 412, 414, 415, 420, 422, 433, 438, 440, 443, 444, 445, 447, 448, 450, 451, 452, 453, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 502, 504, 506, 508], "read": [0, 3, 4, 5, 6, 7, 8, 9, 11, 14, 16, 19, 34, 47, 78, 145, 155, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 218, 219, 224, 239, 245, 252, 265, 281, 287, 288, 293, 297, 300, 306, 309, 328, 329, 339, 344, 345, 347, 350, 358, 359, 366, 373, 378, 387, 397, 408, 413, 417, 437, 438, 442, 443, 447, 448, 451, 480, 482, 483, 485, 492, 493, 502, 504], "file": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 14, 19, 20, 23, 25, 26, 28, 32, 33, 34, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 81, 119, 144, 145, 151, 152, 155, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 204, 205, 207, 214, 216, 218, 219, 224, 237, 238, 239, 240, 243, 245, 247, 248, 250, 254, 261, 264, 281, 283, 287, 288, 290, 291, 292, 293, 295, 296, 297, 300, 309, 310, 328, 329, 331, 342, 345, 348, 349, 350, 358, 360, 363, 364, 365, 366, 372, 373, 374, 376, 378, 379, 387, 393, 396, 397, 398, 399, 401, 402, 404, 409, 410, 411, 412, 414, 415, 421, 433, 438, 442, 443, 444, 445, 446, 449, 450, 452, 461, 466, 467, 471, 474, 475, 477, 480, 481, 482, 483, 485, 487, 488, 492, 496, 501, 508], "updat": [0, 2, 6, 47, 49, 58, 78, 104, 144, 146, 155, 159, 164, 165, 175, 195, 200, 202, 204, 208, 213, 214, 218, 236, 238, 243, 250, 252, 254, 257, 264, 272, 282, 283, 286, 290, 292, 303, 306, 308, 309, 313, 314, 316, 317, 322, 328, 329, 340, 342, 344, 345, 350, 353, 354, 359, 360, 366, 372, 374, 377, 379, 397, 400, 412, 446, 448, 451, 464, 480, 482, 483, 485, 486, 487, 489, 502, 505], "deplet": [0, 78, 155, 163, 212, 238, 239, 243, 247, 250, 253, 255, 266, 282, 283, 286, 290, 292, 331, 342, 345, 396, 408, 445, 467, 479, 482, 483, 487, 493, 497, 498, 502], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 149, 150, 151, 153, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 229, 232, 233, 234, 236, 238, 239, 240, 243, 245, 247, 248, 250, 252, 254, 255, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 272, 276, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 407, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 445, 446, 450, 451, 452, 455, 459, 460, 462, 465, 476, 478, 480, 482, 483, 487, 488, 490, 491, 492, 493, 494, 495, 498, 500, 502, 505], "config": [0, 76, 442], "state": [0, 1, 2, 3, 5, 6, 19, 20, 38, 44, 77, 78, 80, 90, 93, 104, 113, 129, 136, 151, 155, 162, 169, 171, 175, 176, 200, 204, 208, 211, 212, 214, 218, 236, 238, 250, 252, 254, 276, 281, 286, 306, 309, 314, 316, 322, 327, 328, 329, 337, 342, 344, 345, 350, 366, 374, 390, 395, 445, 447, 448, 450, 451, 456, 463, 476, 478, 479, 480, 485, 488, 489, 493, 495, 500, 501, 502, 506], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 20, 22, 25, 26, 28, 32, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 58, 60, 66, 70, 74, 77, 78, 79, 80, 81, 82, 92, 95, 96, 97, 99, 104, 108, 113, 116, 139, 151, 153, 154, 155, 162, 166, 167, 170, 171, 172, 173, 175, 176, 177, 178, 179, 183, 200, 201, 202, 203, 204, 211, 212, 216, 219, 220, 226, 229, 235, 236, 238, 239, 245, 250, 254, 259, 261, 273, 276, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 322, 327, 328, 329, 330, 331, 335, 337, 338, 340, 341, 347, 348, 349, 350, 353, 354, 355, 359, 360, 363, 365, 366, 371, 372, 373, 374, 379, 386, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 404, 406, 407, 408, 411, 412, 413, 414, 415, 433, 438, 439, 440, 446, 447, 448, 474, 475, 479, 480, 482, 483, 484, 485, 487, 488, 493, 501, 502, 503, 504, 505], "data": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 16, 19, 22, 24, 26, 27, 43, 44, 45, 56, 77, 78, 80, 81, 92, 95, 96, 99, 105, 112, 116, 131, 132, 133, 137, 145, 152, 153, 154, 155, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 195, 199, 201, 202, 211, 213, 214, 218, 219, 239, 243, 245, 250, 254, 259, 276, 280, 281, 282, 283, 286, 288, 292, 293, 297, 300, 302, 304, 306, 309, 313, 314, 316, 317, 328, 329, 330, 337, 340, 342, 344, 345, 350, 353, 371, 372, 374, 379, 396, 397, 404, 412, 414, 415, 433, 434, 438, 443, 445, 446, 448, 450, 454, 456, 457, 460, 463, 464, 467, 474, 475, 478, 479, 480, 483, 485, 487, 488, 489, 492, 493, 494, 495, 497, 501, 502, 504], "possibli": [0, 3, 5, 55, 203, 303, 315, 412, 415, 479, 487, 489, 502], "entri": [0, 1, 5, 37, 39, 46, 47, 55, 60, 61, 65, 66, 67, 68, 69, 74, 75, 77, 78, 163, 219, 236, 281, 286, 289, 290, 291, 306, 309, 322, 350, 401, 407, 408, 446, 482, 488, 493, 501, 502, 504], "point": [0, 1, 3, 5, 26, 32, 37, 39, 45, 46, 47, 49, 50, 55, 56, 60, 61, 65, 66, 67, 68, 69, 74, 75, 77, 78, 108, 112, 115, 125, 131, 132, 133, 136, 137, 155, 163, 166, 169, 173, 183, 184, 202, 203, 204, 219, 236, 239, 243, 250, 280, 281, 283, 287, 289, 291, 292, 295, 298, 299, 301, 310, 314, 316, 317, 328, 329, 333, 335, 338, 339, 340, 345, 353, 355, 386, 408, 412, 415, 433, 435, 439, 446, 448, 450, 452, 459, 460, 479, 482, 487, 488, 492, 493, 494, 497, 498, 501, 502, 504], "choos": [0, 79, 145, 162, 203, 214, 292, 415, 481, 489, 493, 508], "user": [0, 1, 3, 5, 7, 19, 23, 27, 32, 39, 47, 49, 55, 56, 60, 77, 79, 89, 93, 94, 104, 113, 135, 144, 152, 162, 163, 165, 167, 173, 201, 202, 203, 204, 215, 216, 217, 219, 236, 238, 239, 243, 245, 250, 254, 265, 281, 282, 286, 288, 290, 292, 293, 297, 306, 309, 314, 329, 331, 332, 340, 342, 360, 363, 364, 365, 366, 372, 373, 374, 378, 393, 396, 397, 399, 401, 408, 411, 433, 443, 444, 445, 447, 450, 451, 452, 476, 479, 480, 481, 483, 487, 489, 490, 494, 502, 503, 504, 505, 508], "command": [0, 19, 28, 39, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 167, 205, 218, 219, 240, 281, 366, 372, 374, 378, 398, 409, 422, 442, 443, 448, 449, 451, 479, 480, 485, 487, 489, 492, 502, 504], "If": [0, 1, 3, 5, 6, 19, 21, 27, 39, 43, 47, 49, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 104, 135, 151, 152, 154, 155, 163, 164, 166, 167, 169, 170, 200, 201, 203, 204, 205, 212, 214, 219, 220, 238, 239, 240, 243, 250, 254, 259, 280, 281, 283, 286, 287, 288, 292, 301, 303, 306, 309, 310, 313, 314, 315, 316, 322, 327, 328, 329, 330, 333, 335, 337, 338, 340, 342, 344, 345, 346, 349, 350, 353, 364, 366, 372, 373, 374, 378, 379, 396, 400, 401, 406, 407, 408, 411, 412, 414, 415, 438, 442, 445, 448, 450, 451, 452, 480, 481, 487, 489, 493, 494, 497, 498, 502, 504, 505, 508], "us": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 47, 48, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 92, 95, 96, 97, 99, 104, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 137, 138, 139, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 173, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 214, 216, 218, 219, 220, 223, 224, 225, 227, 232, 233, 234, 235, 238, 239, 240, 241, 243, 245, 247, 248, 250, 252, 254, 255, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 272, 279, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 313, 314, 315, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 371, 372, 373, 374, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 407, 408, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 457, 459, 460, 465, 467, 468, 474, 476, 478, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508], "run": [0, 1, 3, 4, 5, 6, 15, 19, 20, 21, 25, 27, 31, 32, 33, 34, 37, 39, 46, 47, 48, 55, 56, 58, 60, 61, 62, 65, 66, 68, 69, 70, 72, 74, 75, 76, 77, 78, 104, 151, 155, 162, 165, 181, 191, 197, 198, 203, 204, 205, 206, 208, 212, 214, 218, 219, 227, 236, 238, 239, 250, 252, 253, 254, 259, 264, 272, 281, 283, 286, 297, 309, 310, 315, 316, 322, 329, 342, 345, 360, 364, 365, 366, 374, 379, 388, 389, 390, 391, 396, 398, 409, 422, 430, 433, 442, 443, 444, 445, 446, 448, 449, 450, 452, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 487, 488, 490, 492, 493, 494, 497, 498, 500, 501, 504, 508], "addit": [0, 1, 2, 47, 60, 66, 151, 155, 165, 167, 173, 203, 204, 219, 239, 276, 281, 286, 288, 303, 306, 309, 316, 329, 331, 339, 344, 346, 372, 444, 445, 450, 452, 480, 483, 502], "work": [0, 3, 5, 14, 15, 21, 43, 44, 45, 46, 47, 53, 55, 56, 77, 78, 89, 104, 125, 144, 151, 188, 191, 201, 214, 219, 220, 245, 250, 252, 267, 286, 291, 292, 293, 296, 297, 301, 306, 309, 313, 316, 320, 329, 331, 332, 337, 346, 350, 353, 354, 357, 360, 364, 372, 377, 379, 380, 386, 390, 393, 396, 397, 398, 401, 406, 407, 411, 413, 420, 423, 429, 433, 438, 442, 444, 445, 447, 448, 450, 452, 459, 460, 479, 480, 481, 483, 487, 489, 491, 493, 494, 496, 497, 502, 504, 507, 508], "done": [0, 3, 21, 32, 47, 100, 101, 169, 219, 235, 243, 250, 252, 280, 306, 309, 310, 322, 329, 331, 337, 344, 379, 407, 408, 409, 442, 443, 444, 445, 448, 452, 466, 480, 487, 489, 494, 502], "build": [0, 3, 25, 28, 34, 46, 53, 56, 60, 74, 79, 152, 184, 201, 202, 203, 204, 214, 215, 219, 220, 238, 243, 245, 250, 259, 269, 281, 283, 286, 290, 291, 293, 303, 313, 315, 323, 328, 329, 330, 333, 335, 338, 341, 348, 350, 352, 353, 360, 363, 372, 392, 446, 447, 452, 453, 459, 460, 463, 466, 468, 469, 470, 477, 478, 479, 480, 487, 488, 489, 490, 492, 495, 502, 503], "oper": [0, 1, 2, 3, 5, 6, 9, 15, 28, 31, 46, 47, 60, 77, 78, 151, 152, 202, 217, 218, 219, 243, 281, 286, 292, 306, 309, 316, 320, 322, 327, 329, 331, 332, 338, 340, 344, 345, 360, 374, 377, 381, 389, 396, 397, 407, 411, 413, 423, 441, 446, 447, 448, 451, 475, 479, 481, 482, 483, 485, 487, 488, 489, 493, 494, 499, 507, 508], "specif": [0, 1, 2, 3, 4, 5, 9, 19, 20, 25, 32, 41, 42, 43, 47, 49, 56, 58, 66, 78, 79, 80, 92, 95, 96, 99, 104, 108, 113, 139, 152, 153, 154, 155, 159, 166, 167, 169, 172, 174, 177, 200, 201, 202, 203, 204, 205, 211, 213, 214, 219, 225, 239, 243, 250, 254, 269, 280, 281, 283, 286, 288, 291, 292, 303, 306, 309, 310, 317, 320, 322, 328, 329, 331, 342, 344, 345, 346, 349, 353, 354, 364, 380, 386, 389, 392, 395, 397, 404, 408, 409, 414, 415, 442, 443, 444, 445, 447, 450, 451, 452, 458, 479, 480, 483, 489, 491, 492, 493, 494, 497, 502, 503, 504, 505], "calcul": [0, 3, 5, 32, 78, 82, 92, 95, 96, 99, 104, 108, 110, 134, 139, 151, 154, 155, 163, 169, 175, 197, 202, 203, 204, 211, 214, 227, 235, 236, 238, 239, 241, 243, 250, 253, 254, 257, 264, 281, 283, 286, 304, 306, 309, 310, 313, 314, 315, 316, 322, 328, 329, 340, 345, 352, 353, 354, 400, 406, 409, 415, 424, 435, 445, 459, 464, 479, 480, 482, 483, 487, 489, 490, 492, 493, 494, 498, 500, 502, 505], "loop": [0, 15, 19, 151, 203, 204, 205, 208, 211, 219, 227, 329, 352, 374, 396, 412, 414, 445, 451, 476, 480, 487, 489, 492, 500, 504], "order": [0, 3, 6, 9, 56, 78, 79, 92, 95, 96, 97, 99, 105, 151, 152, 155, 163, 165, 166, 167, 169, 173, 175, 178, 204, 208, 211, 219, 220, 238, 264, 281, 283, 286, 306, 314, 315, 328, 329, 338, 344, 352, 353, 357, 359, 363, 390, 396, 407, 409, 412, 413, 415, 445, 448, 450, 459, 480, 481, 482, 483, 485, 487, 489, 493, 498, 502, 504, 508], "stack": [0, 3, 6, 9, 19, 20, 78, 204, 205, 281, 283, 286, 322, 395, 467, 474, 475, 479, 483, 487, 489, 493, 494, 502], "begin": [0, 2, 3, 5, 6, 20, 22, 25, 26, 70, 78, 165, 166, 204, 218, 236, 238, 261, 281, 283, 315, 329, 338, 396, 397, 415, 445, 450, 479, 487, 489, 490, 491, 497, 498, 500, 502, 504, 506], "over": [0, 1, 19, 28, 33, 79, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142, 151, 162, 169, 175, 203, 204, 208, 211, 243, 252, 254, 283, 286, 308, 309, 315, 316, 322, 328, 329, 339, 342, 344, 345, 352, 407, 409, 412, 423, 445, 464, 466, 476, 480, 481, 485, 492, 498, 502, 505, 507, 508], "upon": [0, 5, 26, 44, 61, 66, 78, 152, 155, 203, 204, 214, 217, 306, 309, 329, 331, 340, 344, 345, 353, 379, 404, 423, 443, 445, 466, 480, 502], "accord": [0, 22, 56, 63, 169, 175, 238, 286, 329, 397, 415, 445, 490, 502, 504], "design": [0, 1, 2, 10, 19, 21, 22, 25, 28, 47, 49, 55, 56, 61, 78, 83, 104, 125, 153, 155, 213, 219, 239, 281, 282, 283, 286, 287, 290, 293, 309, 310, 313, 316, 320, 326, 329, 333, 340, 353, 366, 445, 446, 447, 450, 451, 459, 479, 480, 482, 488, 490, 493, 502, 503, 506], "until": [0, 45, 219, 281, 293, 303, 306, 315, 344, 346, 372, 406, 408, 415, 438, 448, 450, 480, 502, 505], "complet": [0, 3, 15, 55, 66, 74, 78, 152, 214, 250, 292, 293, 304, 305, 309, 315, 328, 329, 339, 353, 379, 396, 415, 444, 447, 451, 452, 467, 474, 475, 487, 489, 492, 493, 502, 504], "wrap": [0, 21, 23, 26, 104, 204, 286, 305, 306, 353, 379, 396, 437, 447, 450, 484, 487, 492, 493], "quit": [0, 1, 212, 315, 389, 480, 489, 490, 493, 502], "disablefutureconfigur": [0, 441], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 247, 248, 250, 252, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 486, 487, 489, 491, 498, 500, 502, 503, 508], "expos": [0, 6, 19, 20, 21, 27, 32, 229, 236, 238, 243, 276, 280, 281, 282, 392, 395, 447, 487], "function": [0, 1, 3, 5, 6, 9, 19, 20, 21, 27, 28, 32, 37, 42, 43, 47, 53, 56, 58, 60, 61, 66, 74, 78, 81, 89, 104, 108, 116, 125, 155, 166, 178, 204, 209, 211, 219, 220, 238, 239, 243, 245, 249, 250, 253, 254, 257, 259, 262, 281, 283, 286, 287, 292, 296, 297, 309, 326, 328, 329, 332, 338, 340, 342, 344, 345, 348, 350, 353, 354, 359, 364, 367, 371, 372, 374, 377, 379, 382, 383, 386, 388, 392, 393, 395, 396, 398, 404, 407, 408, 409, 411, 412, 414, 415, 433, 434, 437, 438, 440, 443, 445, 447, 448, 450, 451, 452, 466, 479, 480, 482, 483, 484, 485, 487, 489, 490, 492, 502, 505, 506], "ensur": [0, 15, 53, 58, 74, 75, 153, 166, 187, 192, 193, 194, 199, 211, 214, 224, 238, 243, 247, 248, 250, 252, 265, 290, 296, 297, 299, 303, 317, 322, 324, 327, 328, 329, 339, 353, 354, 355, 357, 358, 360, 364, 377, 380, 386, 415, 420, 423, 442, 448, 450, 451, 452, 482, 489, 494, 502], "isn": [0, 9, 42, 78, 198, 202, 329, 331, 450, 451, 452, 489, 493], "t": [0, 2, 3, 4, 5, 6, 9, 19, 20, 34, 42, 44, 47, 55, 58, 78, 79, 81, 83, 89, 90, 92, 93, 94, 95, 96, 97, 99, 104, 105, 108, 111, 112, 116, 136, 139, 140, 142, 153, 155, 159, 162, 163, 167, 188, 198, 200, 201, 202, 204, 205, 208, 219, 235, 238, 239, 248, 250, 259, 265, 276, 281, 286, 287, 306, 309, 315, 329, 331, 332, 333, 338, 339, 342, 344, 346, 358, 360, 366, 371, 374, 379, 398, 400, 406, 407, 408, 411, 412, 413, 415, 421, 426, 430, 438, 440, 442, 443, 444, 446, 447, 448, 450, 473, 480, 481, 483, 487, 489, 490, 492, 493, 494, 497, 498, 502, 504, 506, 508], "call": [0, 3, 5, 6, 9, 15, 19, 20, 26, 31, 32, 39, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 104, 145, 151, 153, 155, 162, 204, 205, 212, 214, 216, 217, 219, 220, 224, 236, 238, 239, 240, 243, 245, 250, 254, 280, 281, 283, 286, 291, 293, 301, 306, 309, 313, 316, 324, 328, 329, 332, 334, 335, 338, 340, 341, 344, 345, 346, 353, 359, 364, 366, 372, 374, 378, 379, 380, 390, 393, 395, 396, 398, 401, 404, 407, 409, 411, 415, 430, 447, 448, 450, 451, 452, 483, 487, 489, 493, 494, 496, 502, 504], "more": [0, 1, 3, 4, 5, 6, 9, 10, 19, 32, 34, 37, 43, 44, 47, 50, 55, 56, 60, 79, 93, 104, 125, 144, 155, 160, 162, 163, 165, 166, 173, 175, 202, 204, 219, 220, 227, 239, 243, 245, 250, 281, 286, 287, 291, 293, 297, 306, 308, 309, 310, 313, 315, 328, 329, 331, 332, 333, 335, 337, 339, 340, 342, 344, 363, 366, 372, 374, 379, 397, 398, 404, 406, 412, 414, 415, 433, 438, 439, 444, 445, 447, 448, 450, 451, 452, 453, 467, 468, 469, 470, 473, 476, 478, 480, 483, 485, 487, 488, 489, 490, 492, 493, 494, 495, 502, 503, 504], "than": [0, 3, 4, 5, 19, 34, 44, 48, 49, 56, 77, 104, 125, 135, 139, 154, 155, 160, 163, 166, 167, 175, 178, 201, 204, 208, 211, 214, 219, 236, 238, 239, 250, 281, 283, 286, 292, 303, 305, 306, 309, 322, 329, 331, 334, 335, 337, 338, 340, 341, 363, 366, 372, 397, 398, 404, 406, 407, 411, 412, 414, 415, 451, 452, 466, 474, 476, 480, 482, 485, 487, 489, 493, 494, 497, 498, 502, 504], "onc": [0, 5, 155, 165, 212, 265, 286, 287, 316, 320, 323, 327, 328, 347, 353, 366, 445, 447, 449, 450, 452, 487, 489, 492, 496, 497, 502], "isstablereleasevers": [0, 441], "none": [0, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 32, 39, 44, 45, 47, 49, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 151, 153, 154, 155, 162, 163, 164, 166, 183, 197, 200, 201, 202, 204, 211, 214, 218, 219, 220, 224, 227, 238, 239, 240, 243, 245, 250, 252, 254, 255, 257, 259, 281, 282, 283, 286, 287, 290, 293, 303, 304, 305, 306, 308, 309, 313, 314, 315, 316, 317, 319, 320, 322, 328, 329, 330, 333, 334, 335, 337, 338, 340, 341, 344, 345, 346, 348, 349, 352, 355, 359, 360, 363, 364, 365, 366, 371, 372, 374, 378, 379, 380, 381, 386, 389, 390, 392, 395, 396, 400, 401, 402, 407, 408, 409, 412, 414, 415, 420, 426, 433, 437, 438, 440, 442, 443, 448, 450, 469, 474, 475, 482, 487, 489, 492, 493, 502, 504], "determin": [0, 3, 5, 9, 10, 26, 28, 47, 55, 56, 78, 151, 154, 155, 163, 165, 166, 167, 197, 201, 203, 204, 206, 219, 220, 238, 239, 243, 250, 254, 281, 283, 286, 288, 292, 303, 304, 306, 309, 312, 313, 314, 315, 316, 322, 329, 342, 344, 353, 354, 365, 379, 380, 406, 408, 409, 412, 429, 438, 445, 451, 480, 483, 485, 487, 489, 498, 502], "should": [0, 1, 3, 4, 5, 6, 19, 21, 31, 43, 47, 55, 56, 58, 61, 66, 77, 78, 93, 104, 139, 144, 151, 152, 153, 155, 160, 162, 163, 165, 166, 167, 169, 175, 198, 200, 201, 202, 204, 206, 211, 214, 216, 220, 235, 236, 239, 243, 245, 250, 254, 259, 281, 283, 286, 287, 288, 290, 292, 293, 304, 305, 306, 308, 309, 313, 314, 315, 316, 317, 322, 328, 329, 331, 332, 335, 337, 339, 340, 342, 344, 345, 346, 353, 355, 359, 364, 366, 369, 372, 379, 380, 382, 388, 390, 393, 397, 398, 404, 407, 408, 409, 412, 413, 414, 417, 436, 442, 444, 445, 446, 448, 452, 480, 481, 488, 489, 492, 493, 494, 497, 498, 500, 502, 508], "consid": [0, 47, 78, 104, 154, 166, 239, 243, 245, 250, 254, 281, 283, 286, 309, 310, 313, 322, 329, 337, 339, 345, 372, 404, 444, 451, 452, 459, 460, 464, 480, 494, 502], "stabl": [0, 3, 5, 155, 337, 452, 483, 492], "releas": [0, 139, 155, 165, 169, 226, 446, 480, 502], "init": [0, 77, 162, 204, 313, 331, 355, 366, 404, 423, 441, 442, 467, 474, 475, 483, 485, 487, 494, 502], "choic": [0, 281, 292, 365, 487, 492], "fname": [0, 3, 4, 6, 19, 26, 78, 175, 202, 219, 250, 283, 286, 315, 329, 350, 366, 396, 412, 414, 438, 487, 494], "c": [0, 1, 2, 3, 4, 5, 6, 9, 10, 14, 15, 19, 20, 21, 25, 27, 28, 32, 36, 46, 47, 49, 55, 56, 58, 66, 70, 78, 79, 80, 81, 82, 83, 90, 92, 93, 95, 96, 97, 99, 104, 110, 112, 113, 116, 125, 151, 153, 155, 160, 162, 165, 171, 175, 197, 200, 201, 203, 204, 205, 208, 211, 214, 215, 218, 219, 220, 224, 227, 229, 236, 238, 239, 243, 245, 250, 252, 254, 257, 259, 261, 276, 281, 282, 286, 287, 288, 289, 290, 292, 293, 299, 301, 305, 306, 309, 313, 314, 316, 317, 319, 322, 327, 328, 329, 331, 348, 350, 351, 355, 360, 366, 371, 373, 374, 381, 386, 389, 392, 395, 396, 401, 408, 440, 443, 448, 450, 451, 460, 464, 465, 466, 474, 482, 487, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 502, 504], "scan": [0, 21, 365, 379, 438], "load": [0, 1, 2, 3, 5, 6, 10, 14, 15, 19, 20, 25, 28, 34, 47, 55, 65, 67, 89, 104, 125, 152, 153, 155, 165, 200, 204, 208, 211, 218, 219, 224, 227, 236, 239, 245, 247, 248, 250, 269, 279, 281, 282, 283, 286, 287, 293, 295, 297, 301, 322, 325, 327, 329, 348, 350, 354, 358, 360, 361, 365, 366, 373, 387, 388, 395, 397, 407, 445, 447, 448, 451, 458, 475, 476, 482, 483, 485, 488, 489, 492, 493, 494, 500, 502, 503], "one": [0, 1, 3, 4, 5, 6, 8, 9, 15, 19, 20, 21, 26, 27, 32, 43, 44, 46, 47, 55, 56, 58, 60, 72, 76, 77, 78, 104, 144, 145, 151, 153, 160, 162, 163, 165, 169, 172, 175, 190, 200, 201, 204, 205, 211, 215, 218, 219, 220, 224, 238, 239, 243, 245, 250, 252, 254, 259, 281, 286, 301, 303, 304, 305, 306, 308, 309, 310, 315, 316, 323, 328, 329, 333, 334, 335, 339, 340, 341, 342, 344, 345, 346, 347, 348, 350, 353, 360, 363, 364, 365, 366, 372, 373, 374, 379, 380, 386, 389, 395, 396, 397, 404, 407, 408, 411, 412, 414, 415, 417, 426, 442, 445, 448, 450, 451, 452, 458, 476, 480, 481, 483, 487, 488, 489, 493, 494, 499, 502, 504, 505, 506, 508], "int": [0, 3, 4, 5, 6, 9, 19, 26, 47, 50, 55, 56, 60, 65, 66, 74, 77, 78, 95, 96, 99, 153, 154, 155, 166, 169, 175, 204, 219, 220, 235, 238, 239, 250, 254, 281, 283, 289, 290, 309, 315, 329, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 348, 349, 365, 396, 400, 404, 406, 407, 408, 412, 414, 424, 440, 504], "option": [0, 3, 4, 5, 6, 7, 9, 15, 19, 20, 21, 26, 27, 32, 37, 39, 44, 45, 47, 49, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 95, 96, 99, 104, 113, 136, 137, 138, 139, 151, 153, 154, 155, 162, 163, 166, 167, 170, 175, 200, 201, 204, 211, 214, 216, 218, 219, 220, 224, 227, 235, 236, 238, 239, 240, 243, 245, 250, 252, 254, 259, 265, 281, 283, 286, 287, 288, 290, 292, 293, 303, 306, 308, 309, 313, 315, 316, 320, 322, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344, 345, 348, 349, 355, 359, 360, 363, 364, 365, 366, 372, 373, 378, 379, 386, 389, 390, 392, 395, 396, 398, 400, 401, 402, 407, 408, 412, 414, 415, 437, 438, 443, 445, 447, 448, 450, 452, 480, 482, 483, 487, 489, 491, 492, 493, 494, 501, 502, 503, 505], "automat": [0, 56, 78, 155, 162, 236, 239, 243, 286, 309, 329, 345, 346, 371, 372, 404, 415, 451, 459, 460, 463, 477, 478, 480, 481, 487, 490, 493, 495, 502, 508], "item": [0, 21, 22, 26, 55, 56, 119, 152, 162, 163, 166, 219, 242, 245, 283, 288, 289, 309, 333, 337, 340, 342, 344, 345, 362, 363, 365, 366, 396, 397, 398, 406, 407, 408, 414, 415, 442, 450, 451, 458, 465, 469, 473, 474, 481, 487, 491, 508], "out": [0, 3, 4, 5, 7, 9, 15, 19, 21, 23, 28, 32, 43, 45, 47, 48, 55, 56, 78, 104, 153, 155, 160, 165, 167, 188, 200, 201, 202, 204, 219, 220, 224, 226, 238, 243, 281, 286, 287, 305, 306, 308, 309, 316, 328, 329, 331, 335, 342, 350, 366, 373, 393, 395, 397, 398, 400, 414, 415, 426, 433, 438, 444, 445, 446, 447, 448, 452, 458, 464, 480, 482, 483, 487, 489, 492, 493, 494, 497, 498, 502, 503, 504, 505], "menu": [0, 502], "would": [0, 1, 2, 3, 5, 9, 19, 31, 45, 56, 61, 66, 77, 78, 104, 151, 155, 162, 165, 169, 219, 239, 243, 245, 281, 283, 286, 306, 309, 315, 329, 331, 332, 334, 337, 340, 342, 344, 345, 346, 360, 363, 372, 374, 389, 396, 397, 402, 404, 408, 414, 415, 438, 445, 448, 450, 451, 458, 467, 476, 479, 482, 483, 487, 489, 490, 492, 493, 494, 502, 505], "produc": [0, 1, 4, 37, 39, 45, 47, 56, 61, 66, 82, 85, 104, 116, 129, 169, 174, 175, 191, 197, 198, 200, 204, 238, 239, 245, 281, 286, 291, 322, 329, 332, 334, 340, 341, 344, 373, 398, 399, 409, 412, 414, 415, 430, 449, 479, 480, 482, 489, 492, 498, 500, 502, 504, 507], "exist": [0, 3, 5, 6, 37, 44, 46, 47, 55, 60, 63, 65, 69, 77, 78, 79, 152, 153, 155, 157, 162, 163, 170, 200, 201, 202, 204, 207, 243, 250, 254, 259, 264, 265, 267, 281, 283, 286, 289, 293, 306, 309, 316, 324, 328, 329, 342, 344, 345, 350, 364, 366, 374, 399, 401, 404, 409, 411, 414, 421, 429, 443, 445, 447, 448, 450, 451, 452, 471, 479, 480, 481, 482, 489, 491, 498, 500, 502, 504, 508], "yaml": [0, 14, 46, 47, 69, 74, 159, 163, 224, 243, 265, 281, 287, 288, 289, 290, 291, 293, 297, 322, 332, 350, 358, 360, 365, 366, 372, 373, 378, 387, 438, 443, 451, 467, 476, 482, 483, 487, 489, 492, 493, 494, 496, 501], "str": [0, 1, 3, 4, 5, 6, 7, 8, 9, 15, 19, 20, 21, 22, 27, 28, 32, 39, 43, 44, 45, 47, 49, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 104, 153, 154, 155, 162, 163, 166, 168, 170, 172, 174, 175, 177, 178, 179, 200, 201, 204, 211, 214, 218, 219, 224, 238, 239, 240, 243, 245, 250, 254, 259, 281, 282, 283, 286, 287, 289, 291, 292, 301, 303, 306, 309, 315, 316, 317, 322, 328, 329, 332, 333, 335, 337, 342, 344, 345, 350, 354, 360, 363, 364, 365, 366, 371, 372, 373, 374, 378, 379, 386, 389, 395, 396, 397, 398, 400, 401, 402, 404, 408, 411, 412, 413, 414, 415, 438, 440, 450, 458, 485], "path": [0, 1, 3, 4, 5, 7, 15, 26, 43, 46, 47, 55, 56, 58, 74, 76, 77, 78, 79, 145, 146, 147, 172, 177, 178, 179, 201, 214, 219, 239, 245, 250, 272, 286, 291, 350, 353, 360, 365, 366, 373, 374, 379, 396, 398, 399, 401, 409, 411, 421, 438, 442, 443, 451, 474, 476, 481, 482, 483, 484, 487, 489, 502, 508], "my_cas": 0, "suppli": [0, 3, 19, 47, 50, 56, 63, 78, 104, 151, 202, 287, 309, 344, 350, 409, 412, 415, 433, 480, 502], "superced": [0, 452], "other": [0, 3, 4, 5, 6, 8, 19, 20, 21, 27, 31, 32, 37, 43, 47, 49, 55, 56, 60, 66, 72, 76, 77, 78, 104, 135, 151, 152, 162, 163, 165, 167, 169, 173, 183, 184, 195, 200, 201, 202, 204, 208, 214, 219, 226, 238, 239, 243, 248, 250, 257, 259, 281, 286, 287, 291, 293, 303, 304, 305, 306, 309, 310, 313, 314, 315, 316, 329, 333, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 353, 360, 366, 371, 379, 395, 396, 397, 404, 407, 408, 412, 415, 429, 443, 445, 447, 448, 450, 451, 452, 479, 480, 481, 482, 487, 489, 490, 491, 492, 493, 494, 499, 502, 503, 504, 505, 508], "case": [0, 2, 3, 5, 6, 7, 9, 14, 25, 28, 32, 45, 60, 61, 63, 64, 65, 71, 72, 77, 78, 79, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 144, 151, 152, 153, 155, 160, 162, 163, 165, 169, 173, 203, 204, 214, 218, 219, 224, 226, 236, 239, 250, 252, 254, 261, 264, 265, 272, 279, 281, 286, 288, 292, 305, 306, 309, 310, 316, 320, 322, 328, 329, 331, 335, 337, 342, 345, 358, 360, 364, 366, 372, 376, 387, 388, 393, 396, 397, 408, 409, 411, 414, 415, 426, 433, 441, 443, 445, 450, 451, 452, 453, 458, 459, 460, 467, 474, 475, 478, 479, 481, 482, 483, 485, 487, 489, 490, 492, 494, 495, 497, 500, 504, 506, 508], "method": [0, 1, 3, 4, 5, 13, 14, 15, 16, 17, 19, 21, 23, 30, 31, 34, 35, 36, 41, 42, 47, 49, 53, 54, 55, 56, 58, 59, 66, 74, 75, 78, 82, 89, 102, 104, 108, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 145, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 165, 166, 171, 173, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 204, 205, 208, 210, 211, 214, 216, 219, 223, 224, 225, 232, 233, 234, 235, 238, 239, 244, 245, 247, 248, 250, 252, 255, 257, 258, 259, 262, 264, 265, 266, 267, 268, 269, 272, 279, 281, 283, 286, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 313, 315, 316, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 333, 335, 340, 342, 344, 345, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 373, 374, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 404, 406, 407, 408, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 443, 445, 446, 447, 448, 450, 452, 468, 479, 480, 481, 483, 485, 487, 489, 502, 504, 505, 508], "directli": [0, 3, 4, 5, 19, 45, 77, 79, 104, 155, 163, 172, 177, 198, 243, 281, 286, 288, 291, 303, 306, 309, 312, 329, 334, 335, 338, 340, 341, 346, 372, 374, 379, 450, 466, 474, 476, 480, 483, 489, 492, 494, 502, 504], "exampl": [0, 1, 3, 5, 8, 9, 19, 26, 46, 49, 55, 56, 60, 76, 78, 79, 104, 145, 151, 152, 153, 154, 155, 160, 162, 163, 164, 165, 167, 172, 173, 174, 175, 177, 178, 179, 200, 201, 204, 216, 219, 220, 238, 239, 245, 250, 281, 283, 286, 287, 288, 290, 291, 292, 293, 306, 309, 310, 315, 316, 328, 329, 330, 331, 333, 335, 339, 340, 341, 344, 345, 346, 353, 359, 363, 371, 372, 379, 392, 396, 398, 404, 407, 408, 409, 412, 413, 415, 433, 434, 438, 442, 443, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 482, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 500, 504, 505], "o": [0, 3, 21, 28, 31, 78, 108, 110, 137, 146, 151, 153, 165, 214, 245, 250, 257, 286, 292, 309, 316, 345, 360, 374, 379, 401, 411, 448, 449, 451, 460, 467, 474, 476, 483, 487, 490, 494, 498, 502, 503], "getdefaultplugin": [0, 441], "list": [0, 1, 3, 5, 8, 9, 10, 19, 21, 26, 32, 33, 34, 39, 44, 47, 49, 55, 56, 59, 60, 66, 70, 78, 79, 95, 96, 99, 104, 151, 152, 154, 155, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 195, 197, 200, 201, 204, 211, 214, 218, 219, 220, 238, 239, 243, 245, 250, 254, 281, 283, 286, 288, 289, 290, 291, 292, 303, 306, 309, 312, 313, 314, 315, 317, 322, 328, 329, 331, 332, 334, 337, 338, 339, 341, 344, 345, 349, 350, 355, 359, 363, 365, 366, 367, 369, 372, 377, 379, 380, 386, 390, 396, 397, 400, 401, 403, 404, 407, 408, 409, 411, 412, 414, 415, 420, 433, 438, 442, 445, 448, 450, 452, 463, 464, 477, 478, 479, 482, 483, 487, 491, 493, 494, 495, 497, 498, 499, 500, 502, 504, 507], "type": [0, 3, 4, 5, 7, 8, 9, 14, 15, 19, 25, 26, 28, 41, 43, 47, 49, 55, 56, 66, 70, 74, 77, 78, 79, 80, 81, 82, 84, 92, 94, 95, 96, 97, 98, 99, 102, 104, 112, 113, 116, 125, 136, 137, 139, 142, 151, 153, 154, 155, 159, 160, 163, 166, 167, 174, 178, 195, 200, 201, 202, 203, 204, 206, 219, 220, 224, 235, 236, 238, 239, 245, 250, 252, 254, 281, 282, 283, 286, 287, 288, 291, 292, 293, 295, 298, 299, 301, 303, 306, 309, 310, 313, 315, 316, 320, 322, 324, 326, 328, 329, 331, 332, 334, 337, 338, 340, 341, 342, 344, 345, 346, 348, 349, 355, 360, 363, 365, 366, 372, 374, 377, 382, 392, 396, 397, 400, 404, 406, 407, 408, 410, 411, 412, 413, 414, 415, 438, 440, 443, 444, 445, 447, 448, 450, 451, 459, 466, 476, 480, 481, 482, 483, 485, 487, 489, 491, 493, 494, 497, 498, 499, 504, 506, 508], "armiplugin": [0, 1, 2, 10, 58, 60, 215, 229, 236, 270, 276, 281, 282, 377, 382, 392, 441, 447, 489, 502], "return": [0, 1, 3, 4, 5, 6, 7, 8, 9, 15, 19, 24, 25, 26, 28, 31, 32, 43, 47, 55, 56, 60, 66, 70, 74, 78, 79, 80, 81, 82, 83, 84, 87, 89, 90, 92, 93, 95, 96, 97, 99, 103, 104, 105, 108, 111, 112, 113, 114, 116, 137, 139, 140, 141, 142, 151, 153, 154, 155, 160, 162, 164, 166, 167, 169, 171, 173, 175, 176, 178, 182, 197, 199, 200, 201, 202, 203, 204, 211, 217, 219, 220, 228, 235, 236, 238, 239, 241, 243, 245, 250, 252, 254, 260, 275, 281, 283, 286, 291, 292, 293, 303, 304, 305, 306, 307, 309, 313, 314, 315, 322, 323, 327, 328, 329, 332, 334, 335, 337, 338, 339, 340, 341, 344, 345, 348, 349, 350, 353, 355, 357, 359, 360, 363, 365, 366, 369, 371, 372, 373, 374, 379, 395, 396, 398, 400, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 414, 415, 421, 424, 438, 439, 440, 447, 448, 450, 451, 466, 474, 476, 483, 487, 489, 492, 493, 502, 506], "contain": [0, 1, 3, 5, 9, 16, 21, 26, 37, 43, 45, 47, 55, 56, 77, 78, 92, 95, 96, 99, 104, 151, 152, 155, 159, 160, 162, 163, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 195, 198, 200, 201, 202, 204, 208, 212, 219, 236, 238, 239, 241, 243, 245, 247, 250, 255, 259, 267, 281, 282, 283, 286, 288, 289, 290, 291, 293, 303, 304, 306, 309, 310, 313, 314, 316, 322, 323, 328, 329, 330, 331, 332, 333, 337, 342, 345, 346, 348, 350, 353, 363, 366, 367, 369, 371, 373, 374, 379, 380, 392, 396, 397, 399, 400, 404, 406, 407, 408, 410, 411, 413, 414, 415, 434, 438, 440, 445, 447, 448, 449, 450, 452, 454, 455, 457, 462, 466, 478, 479, 480, 481, 487, 489, 492, 494, 495, 497, 498, 502, 503, 504, 508], "default": [0, 1, 3, 4, 5, 11, 19, 25, 26, 28, 32, 44, 46, 47, 49, 56, 60, 65, 66, 74, 78, 79, 82, 84, 89, 92, 104, 125, 153, 155, 163, 173, 200, 201, 204, 211, 214, 219, 220, 235, 236, 239, 250, 252, 254, 265, 281, 283, 286, 287, 291, 292, 293, 309, 313, 328, 329, 331, 340, 342, 343, 344, 345, 349, 354, 360, 363, 364, 365, 366, 372, 373, 374, 377, 378, 382, 392, 396, 401, 408, 412, 415, 433, 438, 442, 443, 447, 450, 452, 481, 482, 483, 487, 489, 492, 494, 497, 502, 505, 508], "framework": [0, 1, 76, 78, 79, 152, 153, 155, 160, 203, 204, 212, 219, 236, 239, 243, 281, 331, 346, 365, 367, 369, 379, 382, 402, 444, 446, 447, 454, 457, 458, 467, 480, 481, 483, 487, 489, 490, 492, 502, 504, 508], "an": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 39, 41, 42, 43, 45, 46, 47, 49, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 83, 91, 93, 104, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 139, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 203, 204, 208, 210, 211, 212, 214, 216, 217, 218, 219, 220, 223, 224, 225, 232, 233, 234, 236, 237, 238, 239, 240, 243, 245, 247, 248, 250, 252, 254, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 272, 279, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 312, 313, 315, 316, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 342, 344, 345, 346, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 372, 373, 374, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 443, 445, 446, 447, 448, 449, 450, 451, 452, 459, 460, 464, 466, 468, 471, 472, 479, 480, 482, 483, 486, 487, 489, 490, 491, 492, 493, 494, 496, 497, 498, 500, 502, 504, 505, 506], "applic": [0, 1, 10, 56, 58, 60, 66, 76, 78, 144, 153, 155, 236, 239, 243, 281, 282, 328, 345, 353, 380, 397, 415, 443, 444, 446, 451, 480, 481, 483, 489, 491, 493, 498, 502, 508], "fold": 0, "": [0, 1, 3, 4, 5, 6, 9, 15, 19, 20, 21, 26, 27, 32, 34, 39, 45, 47, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 81, 85, 101, 104, 108, 113, 135, 136, 137, 139, 142, 144, 151, 152, 153, 155, 157, 160, 162, 165, 166, 167, 169, 178, 200, 201, 202, 203, 204, 208, 214, 218, 219, 235, 238, 240, 243, 250, 281, 283, 286, 287, 289, 291, 303, 306, 309, 310, 316, 329, 330, 331, 333, 335, 339, 340, 342, 344, 345, 346, 349, 352, 353, 354, 363, 364, 366, 372, 374, 378, 393, 395, 396, 397, 400, 404, 406, 407, 408, 409, 411, 412, 414, 415, 438, 439, 442, 444, 445, 446, 447, 448, 449, 450, 452, 454, 457, 465, 466, 474, 478, 480, 481, 485, 487, 489, 490, 491, 493, 494, 495, 497, 498, 500, 502, 503, 504, 508], "capabl": [0, 47, 55, 170, 204, 212, 219, 224, 236, 353, 430, 438, 447, 448, 453, 478, 482, 483, 487, 493, 494, 495, 502], "its": [0, 1, 3, 5, 6, 15, 78, 104, 116, 125, 151, 152, 155, 169, 204, 220, 235, 248, 282, 283, 286, 291, 297, 303, 306, 308, 309, 315, 325, 328, 329, 342, 344, 346, 360, 365, 366, 372, 374, 380, 382, 400, 408, 412, 415, 442, 445, 447, 450, 451, 456, 463, 478, 479, 480, 481, 482, 487, 490, 495, 497, 498, 500, 501, 502, 504, 505, 508], "own": [0, 1, 15, 26, 56, 151, 162, 165, 169, 214, 219, 239, 243, 245, 250, 281, 297, 309, 310, 342, 346, 365, 372, 382, 404, 443, 451, 453, 459, 460, 473, 476, 478, 480, 482, 483, 489, 492, 495, 502, 505, 506], "getdefaultpluginmanag": [0, 441], "armipluginmanag": [0, 1, 280, 281, 441], "manag": [0, 1, 3, 6, 27, 44, 47, 49, 151, 152, 204, 208, 212, 215, 218, 219, 220, 224, 236, 238, 239, 243, 245, 264, 280, 281, 309, 313, 322, 329, 331, 345, 371, 374, 379, 382, 386, 401, 445, 446, 463, 467, 478, 479, 480, 481, 483, 488, 489, 492, 495, 498, 501, 504, 508], "when": [0, 2, 4, 5, 9, 13, 14, 15, 16, 17, 19, 21, 23, 26, 30, 31, 32, 34, 35, 36, 39, 41, 42, 44, 45, 47, 50, 53, 54, 55, 56, 58, 59, 65, 66, 70, 74, 75, 76, 77, 78, 79, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 140, 142, 149, 150, 151, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 172, 173, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 204, 205, 210, 211, 214, 219, 220, 223, 224, 225, 232, 233, 234, 236, 238, 239, 243, 247, 248, 250, 252, 254, 257, 258, 261, 264, 265, 266, 267, 268, 269, 272, 279, 280, 281, 283, 286, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 309, 313, 315, 316, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 337, 339, 340, 342, 344, 345, 346, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 372, 373, 374, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 404, 407, 408, 409, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 450, 451, 452, 474, 480, 481, 482, 483, 484, 485, 489, 491, 492, 493, 494, 496, 497, 498, 499, 502, 504, 505, 508], "standalon": [0, 23, 201, 480], "facil": 0, "without": [0, 3, 9, 10, 42, 45, 47, 55, 78, 89, 104, 125, 137, 144, 151, 154, 160, 201, 204, 219, 239, 250, 286, 290, 292, 297, 315, 328, 335, 340, 342, 353, 364, 374, 379, 380, 389, 407, 409, 411, 412, 415, 422, 433, 442, 450, 451, 452, 476, 479, 480, 481, 482, 483, 493, 498, 502, 508], "isconfigur": [0, 441, 487, 492], "whether": [0, 3, 5, 9, 26, 39, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 104, 145, 155, 175, 199, 204, 236, 240, 243, 250, 286, 292, 293, 306, 309, 313, 335, 337, 338, 342, 345, 363, 365, 372, 373, 374, 378, 380, 392, 396, 411, 438, 450, 451, 480, 481, 483, 493, 502, 504, 508], "ha": [0, 1, 3, 5, 9, 15, 19, 21, 26, 34, 37, 47, 55, 56, 61, 77, 78, 83, 85, 91, 92, 104, 119, 125, 151, 152, 154, 160, 165, 166, 175, 178, 197, 204, 205, 207, 211, 214, 219, 220, 243, 245, 250, 252, 257, 259, 265, 280, 281, 283, 286, 288, 292, 296, 297, 299, 303, 306, 308, 309, 313, 316, 322, 323, 324, 327, 328, 329, 331, 332, 335, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 350, 353, 354, 355, 358, 359, 360, 365, 366, 372, 374, 377, 379, 396, 401, 404, 407, 408, 411, 413, 432, 434, 438, 445, 448, 450, 452, 468, 476, 479, 480, 481, 482, 483, 486, 487, 489, 490, 492, 493, 494, 497, 498, 500, 502, 504, 508], "been": [0, 3, 4, 5, 6, 19, 44, 45, 47, 55, 78, 165, 167, 197, 200, 205, 207, 214, 218, 219, 265, 280, 281, 283, 286, 288, 299, 306, 309, 313, 329, 331, 339, 342, 343, 344, 345, 346, 349, 350, 354, 355, 359, 377, 379, 401, 403, 404, 407, 408, 413, 445, 450, 451, 476, 479, 480, 482, 489, 492, 494, 498, 502, 505], "app": [0, 10, 55, 60, 79, 212, 260, 281, 374, 382, 441, 443, 445, 446, 482, 487, 488, 492, 494, 502, 505], "getpluginmanag": [0, 441], "getpluginmanagerorfail": [0, 281, 441], "rais": [0, 3, 6, 13, 14, 15, 16, 17, 19, 20, 30, 31, 32, 34, 35, 36, 41, 42, 47, 53, 54, 55, 56, 58, 59, 74, 75, 77, 78, 79, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 151, 155, 157, 158, 159, 160, 161, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 203, 204, 210, 211, 223, 224, 225, 232, 233, 234, 236, 238, 239, 247, 248, 250, 252, 254, 257, 258, 264, 265, 266, 267, 268, 269, 272, 279, 281, 283, 286, 287, 293, 295, 296, 297, 298, 299, 300, 301, 302, 314, 322, 323, 324, 325, 326, 327, 331, 338, 343, 344, 345, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 372, 374, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 401, 406, 411, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 452, 485], "error": [0, 1, 3, 5, 6, 58, 60, 61, 78, 104, 125, 151, 160, 162, 167, 198, 200, 204, 205, 214, 239, 250, 281, 293, 297, 299, 301, 309, 310, 331, 332, 338, 341, 342, 343, 346, 353, 364, 365, 372, 373, 374, 377, 382, 396, 399, 401, 407, 408, 413, 424, 438, 441, 445, 450, 451, 452, 480, 481, 483, 485, 489, 492, 493, 498, 500, 502, 504, 508], "getapp": [0, 441], "permiss": [0, 2, 3, 5, 7, 411, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 480, 485, 493], "fals": [0, 3, 5, 6, 15, 19, 25, 28, 47, 55, 61, 66, 78, 104, 125, 151, 153, 155, 166, 167, 169, 171, 173, 175, 176, 200, 201, 204, 211, 214, 219, 238, 239, 243, 254, 255, 257, 259, 283, 286, 287, 291, 293, 295, 299, 301, 303, 304, 305, 306, 308, 309, 313, 314, 316, 317, 322, 328, 329, 332, 334, 335, 337, 338, 339, 340, 341, 354, 355, 363, 364, 366, 372, 374, 380, 381, 392, 396, 398, 400, 408, 410, 411, 412, 414, 415, 438, 443, 445, 483, 487, 491, 492, 494, 502], "intern": [0, 3, 4, 6, 45, 56, 92, 139, 163, 175, 200, 220, 239, 306, 329, 332, 337, 340, 344, 359, 390, 433, 445, 447, 451, 479, 484, 486, 489, 502], "those": [0, 5, 42, 45, 56, 78, 155, 167, 219, 281, 283, 286, 292, 306, 309, 310, 328, 329, 331, 332, 342, 345, 353, 357, 396, 407, 412, 415, 445, 447, 450, 451, 481, 487, 489, 493, 494, 502, 508], "instanc": [0, 3, 4, 5, 8, 9, 13, 14, 15, 16, 17, 21, 30, 31, 34, 35, 36, 41, 42, 44, 53, 54, 56, 58, 59, 74, 75, 77, 78, 83, 90, 104, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 137, 139, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 166, 167, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 202, 210, 211, 219, 223, 224, 225, 232, 233, 234, 239, 247, 248, 252, 254, 257, 258, 264, 265, 266, 267, 268, 269, 272, 279, 281, 287, 288, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 315, 316, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 337, 340, 342, 344, 345, 346, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 372, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 404, 407, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 444, 445, 447, 448, 451, 452, 476, 480, 482, 487, 490, 491, 497, 502, 504], "which": [0, 1, 3, 4, 5, 8, 9, 19, 26, 42, 43, 45, 47, 55, 56, 65, 66, 76, 77, 78, 79, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 139, 140, 141, 142, 151, 152, 155, 159, 163, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 197, 200, 201, 202, 203, 204, 205, 206, 217, 219, 220, 224, 226, 238, 239, 241, 243, 245, 250, 252, 254, 260, 261, 281, 283, 286, 288, 291, 292, 293, 303, 304, 305, 306, 309, 313, 314, 316, 322, 328, 329, 331, 332, 337, 338, 339, 342, 345, 346, 348, 350, 359, 360, 365, 366, 373, 374, 379, 380, 396, 398, 401, 404, 406, 407, 408, 414, 415, 438, 445, 447, 448, 449, 450, 451, 452, 459, 460, 476, 480, 481, 482, 487, 489, 490, 492, 493, 494, 497, 498, 502, 504, 505, 508], "provid": [0, 1, 3, 5, 6, 10, 19, 21, 28, 33, 39, 43, 47, 49, 56, 60, 66, 70, 74, 77, 78, 79, 86, 93, 104, 113, 135, 151, 152, 153, 155, 162, 165, 171, 173, 176, 195, 201, 204, 207, 212, 219, 238, 239, 244, 245, 250, 254, 255, 262, 272, 281, 283, 286, 291, 292, 293, 306, 309, 313, 314, 315, 322, 328, 329, 330, 331, 332, 340, 342, 345, 349, 353, 354, 364, 366, 372, 374, 377, 379, 392, 395, 398, 401, 404, 407, 412, 415, 438, 440, 442, 443, 447, 450, 451, 452, 456, 463, 467, 469, 473, 476, 478, 480, 481, 483, 485, 489, 490, 493, 494, 495, 497, 498, 499, 500, 502, 504, 507, 508], "onli": [0, 2, 3, 5, 6, 7, 8, 9, 15, 16, 19, 23, 32, 37, 44, 45, 56, 76, 78, 104, 135, 145, 151, 152, 155, 162, 163, 166, 175, 184, 200, 201, 202, 204, 207, 211, 214, 216, 217, 219, 220, 236, 238, 245, 250, 252, 254, 259, 265, 281, 283, 286, 287, 291, 293, 299, 303, 304, 305, 306, 309, 314, 316, 320, 322, 327, 328, 329, 331, 333, 335, 337, 338, 339, 342, 344, 345, 347, 348, 350, 353, 354, 359, 360, 364, 366, 369, 372, 373, 378, 379, 380, 389, 390, 396, 399, 403, 404, 407, 408, 409, 414, 415, 420, 433, 438, 444, 447, 448, 450, 451, 452, 459, 460, 480, 483, 487, 489, 492, 493, 494, 497, 498, 500, 502, 503, 504, 505], "true": [0, 3, 5, 15, 21, 25, 26, 28, 46, 47, 55, 60, 66, 78, 104, 125, 151, 152, 153, 155, 166, 167, 169, 171, 173, 176, 194, 198, 200, 201, 204, 219, 236, 238, 239, 243, 245, 250, 252, 254, 259, 264, 281, 283, 286, 287, 292, 293, 295, 299, 301, 303, 304, 306, 308, 309, 313, 314, 315, 316, 322, 328, 329, 331, 332, 335, 339, 344, 345, 353, 354, 355, 365, 366, 372, 373, 374, 396, 401, 407, 408, 410, 411, 412, 415, 433, 438, 442, 452, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 480, 485, 487, 491, 493, 494, 502, 503, 505], "under": [0, 3, 5, 76, 108, 214, 219, 236, 281, 289, 303, 306, 309, 352, 363, 389, 444, 445, 451, 452, 480, 481, 489, 493, 502, 504, 505, 508], "test": [0, 2, 3, 22, 37, 46, 47, 48, 55, 60, 61, 76, 77, 79, 144, 152, 164, 165, 201, 203, 212, 215, 226, 236, 242, 249, 253, 273, 280, 282, 286, 287, 293, 309, 310, 331, 333, 337, 338, 342, 365, 366, 372, 396, 409, 439, 441, 442, 445, 446, 453, 458, 459, 460, 464, 466, 467, 471, 472, 475, 478, 479, 480, 481, 482, 483, 484, 485, 489, 492, 494, 495, 502, 508], "demonstr": [0, 264, 353, 354, 360, 383, 430, 450, 453, 466, 467, 478, 479, 482, 488, 494, 495], "purpos": [0, 3, 5, 79, 152, 166, 201, 203, 214, 236, 238, 265, 286, 309, 329, 332, 337, 369, 450, 451, 452, 467, 479, 482, 502], "where": [0, 2, 3, 5, 9, 19, 20, 26, 28, 32, 43, 54, 56, 58, 78, 79, 104, 108, 152, 153, 154, 155, 162, 166, 167, 175, 202, 204, 211, 212, 214, 219, 220, 224, 238, 239, 243, 254, 265, 281, 283, 286, 301, 303, 306, 309, 313, 314, 316, 322, 323, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 342, 344, 345, 346, 359, 376, 386, 389, 395, 396, 408, 411, 415, 438, 447, 450, 451, 452, 480, 482, 483, 485, 489, 494, 497, 498, 500, 502, 504, 505, 506], "content": [0, 2, 3, 5, 9, 23, 25, 26, 166, 175, 198, 236, 245, 261, 281, 291, 337, 379, 380, 397, 401, 438, 450, 452, 473, 487, 502], "otherwis": [0, 1, 3, 5, 6, 47, 78, 151, 155, 162, 163, 166, 219, 250, 281, 283, 286, 290, 306, 328, 329, 331, 335, 337, 338, 340, 342, 344, 379, 397, 408, 409, 411, 415, 438, 448, 480, 490, 500, 502, 505], "independ": [0, 3, 5, 47, 49, 55, 56, 167, 169, 208, 236, 237, 243, 315, 328, 448, 452, 480, 489, 493, 502, 506], "script": [0, 2, 22, 24, 77, 236, 240, 448, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 489, 492, 493, 494, 502, 504, 508], "need": [0, 3, 5, 7, 9, 10, 19, 27, 31, 44, 47, 49, 55, 56, 58, 65, 74, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 144, 145, 151, 152, 155, 165, 169, 175, 197, 201, 204, 205, 206, 214, 219, 238, 239, 243, 250, 254, 259, 281, 283, 286, 287, 288, 291, 292, 293, 306, 309, 310, 313, 314, 316, 328, 329, 330, 331, 332, 335, 338, 340, 342, 345, 346, 353, 360, 364, 366, 372, 374, 379, 389, 397, 404, 408, 409, 412, 413, 415, 420, 433, 438, 442, 443, 444, 445, 447, 448, 450, 451, 452, 458, 467, 480, 481, 482, 487, 489, 490, 491, 492, 493, 494, 497, 502, 503, 504, 508], "same": [0, 3, 4, 5, 6, 19, 47, 49, 55, 66, 77, 80, 88, 102, 103, 104, 110, 115, 139, 151, 152, 155, 160, 166, 175, 178, 181, 182, 188, 200, 204, 205, 238, 239, 243, 281, 283, 286, 309, 313, 315, 316, 328, 329, 331, 332, 338, 341, 342, 343, 344, 345, 353, 355, 364, 388, 390, 398, 408, 409, 411, 412, 413, 415, 433, 438, 442, 445, 448, 450, 451, 452, 464, 480, 481, 483, 487, 489, 491, 493, 494, 498, 502, 508], "sinc": [0, 1, 3, 6, 7, 19, 45, 47, 56, 78, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 119, 140, 142, 151, 155, 162, 165, 166, 167, 169, 171, 173, 176, 183, 202, 204, 205, 208, 238, 239, 250, 254, 259, 264, 281, 283, 286, 291, 303, 306, 309, 315, 329, 331, 334, 340, 342, 344, 345, 346, 353, 360, 382, 396, 398, 402, 404, 438, 450, 476, 480, 482, 487, 489, 491, 493, 494, 497, 500, 502], "affect": [0, 5, 76, 104, 226, 286, 309, 331, 347, 395, 396, 412, 451, 452, 483, 493, 502], "behavior": [0, 1, 3, 5, 34, 78, 119, 145, 179, 205, 220, 226, 236, 239, 247, 281, 290, 291, 303, 309, 328, 331, 342, 345, 365, 372, 399, 404, 413, 447, 482, 483], "time": [0, 1, 2, 3, 4, 5, 6, 14, 15, 19, 26, 32, 44, 45, 47, 50, 77, 78, 104, 144, 151, 152, 155, 160, 163, 167, 175, 203, 204, 208, 211, 212, 219, 236, 238, 239, 243, 250, 252, 254, 259, 261, 280, 281, 283, 292, 306, 309, 315, 322, 328, 329, 339, 345, 364, 379, 380, 393, 395, 396, 398, 407, 408, 409, 411, 412, 414, 418, 445, 446, 448, 450, 452, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 487, 489, 493, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508], "gener": [0, 2, 3, 4, 5, 19, 22, 23, 25, 27, 28, 34, 39, 43, 45, 46, 56, 61, 66, 70, 77, 78, 89, 144, 145, 146, 151, 152, 153, 155, 159, 160, 162, 165, 174, 176, 197, 200, 203, 204, 212, 214, 219, 220, 221, 226, 229, 230, 232, 233, 236, 238, 239, 243, 245, 250, 252, 254, 255, 261, 262, 264, 268, 270, 272, 276, 277, 281, 283, 286, 287, 292, 293, 303, 306, 309, 310, 313, 315, 316, 317, 319, 328, 329, 330, 331, 337, 338, 340, 342, 346, 365, 369, 370, 373, 374, 379, 389, 396, 397, 398, 401, 406, 407, 412, 414, 422, 438, 439, 442, 444, 445, 446, 448, 450, 452, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 482, 483, 489, 490, 492, 493, 494, 495, 496, 498, 500, 502, 504, 505], "safe": [0, 47, 280, 281, 306, 332, 340, 344, 364, 372, 382, 500], "re": [0, 3, 5, 8, 20, 65, 84, 104, 113, 145, 153, 155, 162, 166, 219, 283, 303, 309, 310, 316, 328, 339, 353, 363, 386, 407, 409, 415, 438, 445, 451, 467, 476, 481, 482, 489, 492, 493, 494, 497, 498, 502, 508], "therefor": [0, 3, 5, 151, 169, 204, 238, 243, 281, 297, 309, 322, 329, 331, 335, 345, 409, 412, 414, 432, 445, 451, 502, 504], "runtimeerror": [0, 3, 6, 20, 32, 47, 56, 58, 78, 160, 204, 211, 250, 281, 286, 314, 322, 353, 374, 386, 389, 395], "attempt": [0, 3, 4, 5, 47, 49, 55, 58, 65, 238, 281, 288, 291, 293, 328, 331, 343, 344, 346, 366, 373, 396, 397, 407, 409, 413, 438, 480, 482, 484, 502, 505], "unless": [0, 20, 44, 153, 155, 162, 329, 337, 407, 415, 447, 448, 450, 451, 452, 480, 481, 493, 502, 508], "we": [0, 1, 2, 3, 4, 5, 6, 9, 14, 16, 19, 26, 31, 45, 55, 58, 74, 77, 80, 81, 83, 88, 89, 90, 92, 93, 95, 96, 97, 99, 102, 104, 105, 110, 111, 112, 115, 116, 129, 139, 140, 142, 154, 155, 159, 160, 162, 165, 166, 169, 175, 187, 188, 192, 193, 194, 197, 201, 204, 205, 211, 212, 219, 220, 227, 236, 238, 248, 250, 254, 257, 260, 261, 264, 265, 281, 283, 286, 287, 290, 291, 292, 293, 297, 301, 303, 306, 309, 310, 314, 327, 328, 329, 332, 337, 339, 340, 342, 344, 345, 346, 348, 353, 354, 357, 358, 359, 360, 363, 364, 372, 377, 380, 387, 388, 389, 390, 391, 393, 395, 397, 404, 408, 409, 411, 415, 417, 423, 433, 438, 442, 444, 445, 447, 448, 449, 450, 451, 452, 458, 469, 472, 479, 480, 481, 485, 486, 487, 489, 490, 491, 492, 493, 494, 497, 502, 504, 505, 506, 508], "ar": [0, 1, 3, 4, 5, 6, 8, 9, 10, 15, 19, 20, 21, 26, 32, 33, 37, 39, 42, 43, 44, 45, 46, 47, 50, 55, 56, 58, 60, 66, 77, 78, 79, 80, 81, 82, 83, 87, 89, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 108, 110, 111, 112, 113, 115, 116, 125, 129, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 144, 145, 151, 152, 153, 154, 155, 159, 162, 163, 165, 167, 168, 169, 173, 174, 175, 182, 184, 188, 190, 194, 197, 200, 201, 202, 203, 204, 205, 208, 211, 212, 213, 214, 216, 219, 220, 223, 224, 226, 227, 238, 239, 241, 243, 245, 247, 248, 250, 252, 254, 259, 261, 264, 269, 276, 279, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 293, 296, 297, 299, 301, 303, 304, 306, 308, 309, 310, 313, 314, 315, 316, 317, 320, 322, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 357, 360, 363, 365, 366, 369, 371, 372, 373, 374, 377, 378, 379, 386, 387, 389, 390, 392, 395, 396, 397, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417, 422, 424, 426, 430, 438, 440, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 464, 466, 471, 473, 476, 478, 479, 480, 481, 482, 483, 486, 487, 490, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508], "plan": [0, 167, 447, 481, 493, 502, 508], "encapsul": [0, 1, 200], "much": [0, 1, 3, 5, 19, 51, 93, 136, 152, 198, 204, 239, 281, 286, 287, 288, 329, 331, 335, 337, 354, 360, 397, 404, 438, 445, 447, 448, 452, 479, 480, 487, 489, 493, 502], "global": [0, 1, 77, 79, 153, 155, 169, 173, 175, 204, 214, 243, 245, 247, 249, 250, 252, 265, 281, 283, 286, 306, 309, 328, 329, 333, 339, 340, 342, 345, 364, 366, 369, 399, 415, 433, 446, 467, 480, 482, 483, 491, 494, 500, 502, 503], "get": [0, 2, 3, 4, 5, 6, 14, 21, 22, 26, 28, 33, 45, 47, 55, 56, 60, 77, 78, 79, 82, 89, 93, 102, 104, 135, 144, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 167, 173, 183, 200, 201, 202, 204, 214, 219, 220, 238, 245, 250, 267, 281, 283, 286, 288, 291, 292, 296, 303, 306, 309, 316, 322, 326, 328, 329, 337, 338, 339, 340, 342, 343, 344, 345, 349, 352, 353, 354, 355, 360, 363, 364, 372, 377, 380, 387, 388, 396, 397, 400, 402, 408, 409, 414, 417, 420, 421, 438, 439, 443, 444, 446, 447, 448, 449, 450, 452, 482, 487, 489, 490, 492, 493, 501, 502, 503, 504], "itself": [0, 3, 5, 45, 49, 65, 151, 152, 200, 286, 303, 329, 340, 342, 346, 353, 365, 396, 397, 438, 442, 443, 445, 447, 450, 474, 480, 482, 487, 489, 492, 493, 502, 505], "thing": [0, 1, 3, 5, 6, 10, 19, 23, 25, 28, 55, 60, 104, 151, 154, 163, 198, 215, 243, 250, 281, 286, 291, 292, 301, 303, 309, 328, 329, 330, 331, 332, 333, 337, 339, 340, 342, 344, 355, 364, 365, 366, 374, 380, 397, 408, 411, 443, 445, 447, 448, 450, 451, 452, 453, 478, 479, 480, 482, 487, 489, 492, 493, 494, 495, 502, 504], "go": [0, 9, 19, 104, 155, 216, 219, 269, 281, 283, 286, 287, 306, 316, 329, 331, 344, 408, 412, 442, 447, 448, 452, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 489, 502, 503, 508], "number": [0, 3, 4, 5, 9, 10, 19, 26, 31, 44, 47, 50, 55, 74, 78, 82, 89, 104, 120, 137, 151, 152, 153, 154, 155, 166, 167, 169, 172, 175, 182, 197, 200, 201, 204, 211, 219, 220, 224, 235, 238, 239, 243, 245, 250, 254, 259, 264, 283, 286, 289, 290, 299, 301, 305, 306, 309, 314, 315, 316, 317, 322, 324, 327, 328, 329, 331, 335, 338, 340, 342, 344, 348, 349, 353, 354, 355, 357, 360, 364, 366, 372, 380, 386, 388, 396, 397, 400, 404, 406, 407, 408, 412, 413, 414, 420, 424, 431, 433, 438, 445, 448, 452, 465, 473, 482, 483, 484, 485, 488, 489, 490, 491, 493, 494, 497, 498, 499, 500, 502, 503, 504, 507], "benefit": [0, 3, 45, 56, 131, 132, 133, 338, 339, 342, 442, 445, 474, 480], "main": [0, 3, 5, 6, 20, 42, 45, 60, 74, 80, 151, 152, 167, 201, 204, 205, 214, 236, 280, 281, 286, 289, 290, 309, 344, 350, 389, 415, 444, 445, 452, 467, 474, 475, 481, 483, 487, 489, 502, 504, 508], "being": [0, 3, 4, 5, 19, 21, 37, 47, 49, 66, 78, 79, 104, 145, 151, 152, 155, 163, 166, 172, 177, 178, 179, 183, 204, 219, 220, 224, 226, 236, 239, 243, 254, 281, 283, 286, 291, 298, 306, 309, 315, 316, 322, 327, 328, 331, 333, 337, 346, 359, 374, 386, 396, 403, 408, 411, 413, 414, 438, 439, 452, 476, 480, 483, 489, 497, 502, 504, 505], "becom": [0, 19, 43, 163, 281, 286, 305, 306, 315, 329, 339, 341, 342, 377, 412, 415, 443, 444, 445, 480, 502], "trivial": [0, 49, 306, 309, 332, 345, 392, 404, 409, 448, 452], "current": [0, 2, 3, 5, 6, 19, 26, 32, 47, 49, 55, 63, 77, 78, 104, 151, 162, 164, 165, 167, 170, 171, 173, 175, 176, 190, 200, 201, 204, 212, 214, 219, 220, 238, 239, 243, 250, 254, 261, 281, 286, 287, 291, 306, 309, 314, 316, 329, 331, 333, 340, 345, 348, 350, 353, 366, 372, 373, 374, 396, 397, 399, 408, 415, 438, 447, 448, 450, 451, 452, 459, 482, 485, 487, 497, 498, 499, 502, 505, 507], "applyasynciowindowsworkaround": [0, 441], "appli": [0, 1, 3, 6, 56, 78, 79, 82, 89, 104, 105, 135, 144, 145, 155, 200, 214, 220, 238, 239, 250, 265, 269, 279, 281, 283, 286, 287, 288, 290, 291, 292, 293, 299, 306, 309, 313, 314, 328, 329, 331, 337, 340, 342, 344, 346, 365, 396, 407, 415, 442, 444, 448, 452, 466, 467, 474, 475, 482, 483, 487, 489, 493, 494, 497, 498, 499, 502, 504], "asyncio": 0, "workaround": 0, "window": [0, 1, 21, 28, 31, 77, 411, 442, 480, 481, 485, 502, 508], "3": [0, 3, 5, 9, 19, 21, 26, 34, 46, 56, 69, 70, 78, 80, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 108, 111, 112, 113, 116, 129, 135, 136, 137, 139, 140, 142, 146, 151, 152, 153, 155, 163, 167, 171, 173, 176, 177, 179, 187, 192, 200, 211, 219, 220, 235, 236, 243, 247, 283, 286, 290, 291, 299, 303, 306, 308, 309, 310, 316, 324, 327, 329, 331, 332, 335, 338, 339, 340, 353, 354, 363, 374, 396, 397, 406, 407, 408, 415, 417, 434, 437, 442, 445, 448, 452, 458, 460, 466, 468, 470, 476, 480, 481, 485, 486, 487, 490, 491, 492, 493, 497, 498, 499, 500, 502, 504, 506, 508], "8": [0, 9, 78, 81, 112, 137, 142, 153, 220, 239, 245, 291, 315, 316, 331, 332, 335, 339, 340, 355, 361, 400, 404, 407, 412, 415, 450, 458, 465, 466, 467, 468, 469, 487, 491, 492, 493, 494, 502], "prevent": [0, 2, 33, 250, 281, 328, 342, 344, 359, 380, 391, 413, 481, 508], "notimplementederror": [0, 24, 489], "hi": [0, 497, 498], "show": [0, 19, 21, 27, 28, 34, 45, 159, 167, 173, 188, 190, 191, 202, 265, 301, 328, 339, 353, 354, 380, 391, 395, 396, 398, 408, 412, 414, 415, 448, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 476, 479, 491, 494, 502, 504], "dure": [0, 1, 3, 5, 14, 15, 19, 21, 32, 76, 78, 79, 89, 104, 151, 155, 162, 163, 165, 169, 202, 204, 214, 226, 236, 238, 250, 254, 281, 282, 286, 290, 306, 309, 312, 313, 314, 320, 322, 326, 328, 329, 344, 353, 354, 359, 364, 374, 391, 424, 442, 443, 445, 452, 479, 480, 481, 483, 485, 487, 489, 498, 502, 504, 508], "jupyt": [0, 33, 34, 391, 446, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 487], "notebook": [0, 33, 34, 391, 446, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "document": [0, 23, 26, 27, 33, 34, 94, 95, 96, 97, 98, 99, 104, 165, 167, 174, 200, 283, 287, 293, 331, 338, 342, 438, 444, 445, 446, 447, 450, 451, 479, 480, 482, 483, 487, 489, 492, 493, 494, 497, 498, 499, 500, 502, 504, 505, 507], "see": [0, 1, 3, 5, 7, 19, 26, 66, 104, 116, 142, 155, 162, 165, 171, 176, 178, 200, 204, 205, 239, 281, 282, 283, 286, 287, 293, 306, 309, 314, 316, 320, 322, 328, 329, 331, 333, 335, 338, 341, 342, 345, 359, 374, 396, 397, 404, 409, 412, 414, 439, 442, 444, 447, 448, 451, 472, 480, 481, 483, 487, 489, 490, 492, 493, 494, 497, 498, 499, 500, 502, 504, 505, 507, 508], "http": [0, 21, 80, 81, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 108, 113, 130, 131, 132, 133, 135, 137, 139, 152, 162, 165, 167, 173, 175, 184, 304, 305, 345, 412, 415, 433, 438, 439, 442, 480, 481, 483, 485, 493, 508], "bug": [0, 144, 173, 281, 339, 444, 447, 451, 452, 480], "org": [0, 21, 84, 85, 86, 88, 99, 101, 130, 131, 132, 133, 135, 139, 165, 412, 439, 442, 480, 493], "issue37373": 0, "bookkeep": [0, 78, 138, 286, 329, 345, 414, 441, 450, 483, 485, 487, 502, 504], "bookkeepingplugin": [0, 2, 441], "exposeinterfac": [0, 2, 57, 58, 212, 215, 226, 229, 236, 273, 276, 281, 379, 392, 395, 489], "defineentrypoint": [0, 2, 60, 212, 236, 281, 489], "definecasedepend": [0, 2, 281, 489], "mpiactionrequiresreset": [0, 2, 281, 482], "getreportcont": [0, 2, 212, 236, 281, 446], "db": [0, 2, 19, 20, 34, 74, 145, 153, 154, 204, 211, 329, 345, 360, 395, 414, 451, 482, 485, 487, 492, 494, 502, 504], "databas": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 39, 45, 46, 47, 60, 64, 70, 74, 78, 144, 145, 155, 204, 208, 236, 254, 281, 282, 283, 306, 309, 332, 337, 339, 342, 344, 345, 359, 368, 396, 412, 445, 451, 467, 474, 475, 479, 480, 482, 483, 485, 488, 489, 492, 494, 501, 502], "revis": [0, 2, 139, 442], "changelog": [0, 2], "database3": [0, 2, 3, 6, 9, 14, 345, 359, 482, 483, 487, 504], "databaseinterfac": [0, 2, 3, 5, 15, 414, 483, 485, 502], "comparedatabas": [0, 2, 3, 4, 13], "databasefactori": [0, 2, 3, 7, 487, 504], "loadoper": [0, 2, 3, 204, 483], "report": [0, 2, 4, 21, 34, 41, 61, 70, 78, 101, 116, 167, 212, 218, 236, 281, 286, 306, 370, 372, 393, 396, 398, 412, 414, 445, 446, 467, 474, 480, 483, 487, 492, 494, 501, 503], "setdata": [0, 2, 22], "visual": [0, 2, 5, 238, 305, 412, 449, 479, 480, 482, 489, 498], "historytrack": [0, 2, 414, 487], "histori": [0, 2, 3, 5, 6, 34, 78, 211, 219, 250, 254, 281, 329, 331, 344, 408, 414, 437, 445, 451, 467, 474, 475, 482, 487], "inform": [0, 2, 3, 5, 6, 9, 10, 21, 23, 27, 28, 31, 45, 47, 55, 56, 77, 78, 83, 90, 104, 112, 137, 139, 151, 152, 153, 155, 162, 166, 167, 169, 171, 172, 173, 176, 179, 182, 195, 201, 202, 204, 205, 214, 219, 238, 250, 257, 276, 281, 283, 286, 288, 289, 291, 309, 313, 315, 328, 329, 331, 339, 340, 342, 344, 353, 364, 373, 374, 400, 412, 414, 420, 438, 439, 444, 445, 448, 450, 451, 467, 474, 475, 480, 485, 487, 493, 494, 498, 502, 503, 504], "describeinterfac": [0, 2, 3, 6, 19, 20, 21, 22, 27, 32, 78, 212, 236, 238, 242, 243, 281], "historytrackerinterfac": [0, 2, 19, 414, 487], "maininterfac": [0, 2], "memoryprofil": [0, 2, 35, 467, 474, 475, 487], "klasscount": [0, 2, 21], "instancecount": [0, 2, 21], "profilememoryusageact": [0, 2, 21], "systemandprocessmemoryusag": [0, 2, 21], "printsystemmemoryusageact": [0, 2, 21], "snapshotinterfac": [0, 2, 483], "extractcyclenodefromstamp": [0, 2, 32], "getcyclenodestamp": [0, 2, 32], "inputmodifi": [0, 46, 56, 59, 310, 320, 492], "copyinterfaceinput": [0, 46, 47, 58, 483, 485], "suit": [0, 2, 46, 47, 53, 56, 58, 59, 60, 63, 64, 72, 75, 281, 310, 327, 333, 443, 445, 475, 482, 483, 489, 492], "casesuit": [0, 46, 47, 55, 56, 58, 64, 78, 281, 492], "suitebuild": [0, 46, 47, 59, 482, 492], "getinputmodifi": [0, 46, 56], "fullfactorialsuitebuild": [0, 46, 56, 59, 492], "fullfactorialsuitebuildernoisi": [0, 46, 56], "separateeffectssuitebuild": [0, 46, 56, 492], "latinhypercubesuitebuild": [0, 46, 56, 59], "cli": [0, 46, 77, 281, 441, 443, 445, 452, 479, 483, 485, 489, 503], "entrypointsplugin": [0, 60, 441], "armipars": [0, 60, 441], "print_help": [0, 60], "armicli": [0, 60, 75, 441, 489], "showvers": [0, 60, 75], "listcommand": [0, 60], "executecommand": [0, 60, 74], "splash": [0, 1, 60, 61, 66, 441, 481, 489, 508], "checkinput": [0, 46, 47, 58, 60], "expandblueprint": [0, 60, 61], "checkinputentrypoint": [0, 60, 61], "cleantemp": [0, 60], "clone": [0, 46, 47, 55, 58, 60, 74, 78, 281, 366, 407, 442, 480, 481, 482, 483, 508], "clonearmiruncommandbatch": [0, 60, 63], "clonearmiruncommandinteract": [0, 60, 63], "clonesuitecommand": [0, 60, 63], "comparecas": [0, 60, 485], "comparesuit": [0, 60, 64], "extractinput": [0, 60, 65], "injectinput": [0, 60, 65], "entrypoint": [0, 2, 37, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 74, 240, 281, 378, 443, 483], "storebool": [0, 60, 66], "setset": [0, 60, 66], "setcasetitl": [0, 60, 66], "loadset": [0, 60, 66], "gridgui": [0, 60], "gridguientrypoint": [0, 60, 67], "migrateinput": [0, 60], "modifi": [0, 3, 47, 49, 50, 53, 54, 56, 60, 63, 65, 104, 152, 155, 159, 173, 187, 192, 193, 194, 197, 238, 243, 245, 252, 254, 280, 283, 286, 306, 310, 312, 313, 316, 319, 320, 324, 327, 328, 329, 337, 344, 345, 347, 350, 354, 355, 360, 365, 366, 372, 377, 400, 407, 413, 452, 464, 480, 481, 483, 485, 488, 493, 502, 508], "modifycasesettingscommand": [0, 60, 69], "reportsentrypoint": [0, 60, 485], "createreportfromset": [0, 60, 70], "runentrypoint": [0, 60, 71, 72, 445], "runsuit": [0, 60, 75], "runsuitecommand": [0, 60, 72], "materi": [0, 9, 154, 155, 162, 213, 226, 235, 239, 250, 281, 282, 283, 286, 287, 288, 289, 290, 292, 293, 295, 298, 299, 301, 302, 303, 304, 305, 306, 308, 309, 314, 316, 317, 322, 328, 331, 352, 353, 354, 355, 379, 384, 400, 412, 420, 441, 444, 445, 447, 457, 459, 461, 463, 464, 466, 467, 474, 475, 477, 478, 479, 480, 482, 483, 485, 487, 488, 493, 494, 495, 497, 498, 499, 502, 503, 504, 507], "setmaterialnamespaceord": [0, 79, 441, 489], "importmaterialsintomodulenamespac": [0, 79, 441], "iterallmaterialclassesinnamespac": [0, 79, 441, 473], "resolvematerialclassbynam": [0, 79, 125, 441], "air": [0, 79, 120], "alloy200": [0, 79, 125, 483], "b4c": [0, 79, 121, 301, 483, 487, 492, 493, 498, 502], "be9": [0, 79, 122], "cah2": [0, 79, 125], "californium": [0, 79, 125, 153, 473], "concret": [0, 3, 6, 15, 19, 20, 21, 27, 32, 58, 78, 79, 145, 155, 160, 166, 211, 218, 224, 238, 243, 250, 259, 291, 309, 328, 386, 389, 395, 483, 485], "copper": [0, 79, 153, 483], "cu": [0, 79, 81, 87, 125, 153, 502], "graphit": [0, 79, 123, 160, 162], "hafnium": [0, 79, 125, 153], "hastelloyn": [0, 79, 125], "ht9": [0, 79, 104, 160, 299, 322, 354, 355, 466, 474, 482, 487, 493, 502, 503], "inconel": [0, 79, 95, 96, 98, 99, 483], "inconel617": [0, 79, 94], "inconel600": [0, 79, 125], "inconel625": [0, 79, 125], "inconel800": [0, 79], "inconelpe16": [0, 79], "inconelx750": [0, 79, 125], "lead": [0, 3, 4, 5, 78, 79, 101, 125, 153, 165, 166, 200, 219, 247, 281, 286, 309, 331, 342, 382, 393, 398, 404, 415, 423, 445, 447, 451, 482, 485, 502], "leadbismuth": [0, 79, 125], "lithium": [0, 79, 124, 153, 483, 502], "magnesium": [0, 79, 105, 125, 153], "parentawaredensityredirect": [0, 79, 104], "fluid": [0, 79, 80, 88, 100, 101, 102, 103, 104, 110, 113, 115, 138, 139, 212, 219, 314, 331, 485, 502], "simplesolid": [0, 79, 84, 85, 91, 94, 98, 104, 107, 109, 114, 117, 133, 137], "fuelmateri": [0, 79, 104, 131, 132, 133, 134, 135, 136, 137, 400, 502], "mgo": [0, 79, 125], "mixtur": [0, 79, 108, 286, 322, 340, 400, 482, 502], "molybdenum": [0, 79, 125, 153], "mox": [0, 79, 125, 137, 282, 292, 331, 355, 483], "nz": [0, 79, 125], "potassium": [0, 79, 125, 153, 483], "scandiumoxid": [0, 79], "sc2o3": [0, 79, 111, 125], "sic": [0, 79, 126], "sodium": [0, 79, 110, 114, 125, 153, 226, 283, 292, 353, 354, 355, 447, 466, 474, 479, 480, 487, 489, 493, 494, 502], "sodiumchlorid": [0, 79], "nacl": [0, 79, 114, 125], "sulfur": [0, 79, 125, 127, 153, 502], "tzm": [0, 79, 125], "tantalum": [0, 79, 125, 153], "thu": [0, 34, 49, 79, 125, 162, 172, 212, 214, 239, 283, 286, 309, 316, 339, 340, 389, 397, 467, 480, 493, 494, 502], "thorium": [0, 79, 125, 131, 133, 134, 153, 502], "thoriumoxid": [0, 79, 125, 128, 483, 502], "tho2": [0, 79, 128, 133], "uthzr": [0, 79, 352, 502], "uzr": [0, 79, 104, 125, 129, 295, 299, 301, 309, 352, 355, 466, 487, 493, 502], "uranium": [0, 79, 104, 125, 131, 134, 137, 152, 153, 155, 299, 306, 309, 480, 487, 490, 491, 493, 502], "uraniumoxid": [0, 79, 108, 125, 299, 396, 416, 420, 483, 490, 502], "heatcapacityconst": [0, 79, 137], "uo2": [0, 79, 108, 137, 299, 309, 490], "void": [0, 79, 93, 104, 125, 238, 254, 282, 286, 299, 304, 306, 309, 315, 331, 354, 361, 474, 487, 493, 494, 498, 500, 502], "water": [0, 79, 130, 160, 243, 479, 494], "saturatedwat": [0, 79, 139, 494], "saturatedsteam": [0, 79, 139], "yttriumoxid": [0, 79], "y2o3": [0, 79, 125, 140], "zincoxid": [0, 79], "zno": [0, 79, 125, 141], "zr": [0, 79, 104, 125, 134, 135, 153, 154, 155, 286, 292, 295, 297, 299, 301, 309, 487, 492, 494, 499], "migrat": [0, 3, 5, 47, 60, 65, 68, 281, 282, 287, 293, 310, 329, 331, 350, 372, 373, 441, 482, 487], "blueprintsmigr": [0, 144, 145, 146], "settingsmigr": [0, 144, 145, 147], "databasemigr": [0, 144, 145], "m0_1_3": [0, 144], "removecentersfromblueprint": [0, 144, 146], "updateelementalnuclid": [0, 144, 146], "m0_1_6": [0, 144], "convertalphanumlocationsettingstonum": [0, 144, 147], "getindicesfromdif3dstylelocatorlabel": [0, 144, 147], "nucdirectori": [0, 1, 167, 202, 309, 412, 441, 458, 465, 473, 476, 491], "element": [0, 4, 5, 8, 9, 26, 45, 80, 82, 85, 91, 104, 146, 154, 155, 157, 162, 215, 281, 290, 292, 306, 308, 309, 340, 350, 353, 379, 396, 400, 404, 407, 408, 415, 420, 441, 445, 446, 466, 473, 480, 482, 487, 488, 492, 494, 502], "name": [0, 1, 2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 44, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 81, 82, 83, 87, 89, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 145, 149, 150, 153, 154, 155, 157, 158, 159, 160, 161, 163, 165, 166, 167, 170, 173, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 204, 209, 210, 211, 212, 214, 215, 218, 219, 222, 223, 224, 225, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 252, 254, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 272, 279, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 315, 316, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 339, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 404, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 443, 445, 446, 450, 452, 464, 465, 473, 474, 476, 479, 481, 482, 483, 487, 489, 491, 492, 493, 494, 497, 498, 499, 500, 504, 507, 508], "label": [0, 3, 5, 26, 83, 90, 104, 112, 137, 139, 147, 154, 155, 159, 162, 164, 165, 189, 201, 202, 214, 219, 227, 238, 250, 252, 261, 272, 282, 283, 286, 309, 332, 333, 337, 338, 363, 364, 372, 380, 397, 412, 414, 450, 464, 466, 471, 476, 482, 483, 489, 491, 499, 502], "id": [0, 26, 43, 54, 155, 159, 201, 238, 239, 254, 264, 283, 291, 299, 304, 305, 306, 308, 315, 320, 330, 354, 355, 415, 466, 467, 474, 475, 483, 487, 493, 494, 498, 502, 503], "indic": [0, 3, 8, 9, 19, 26, 43, 78, 104, 147, 155, 162, 165, 166, 167, 172, 175, 177, 178, 179, 182, 190, 201, 202, 204, 239, 243, 281, 283, 286, 291, 292, 309, 313, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344, 345, 350, 374, 379, 392, 397, 408, 412, 414, 415, 424, 433, 445, 451, 468, 482, 493, 498, 502, 504], "rapid": [0, 480], "access": [0, 1, 19, 20, 101, 151, 160, 166, 167, 204, 211, 245, 255, 281, 286, 287, 306, 309, 313, 328, 330, 342, 344, 345, 399, 411, 413, 415, 445, 450, 480, 482, 487, 488, 489, 501, 502], "chemicalphas": [0, 152, 153, 491], "chemicalgroup": [0, 152, 153, 491], "getelementsbychemicalphas": [0, 152, 153], "getelementsbychemicalgroup": [0, 152, 153], "getnam": [0, 19, 79, 104, 152, 153, 282, 309, 355, 487], "getsymbol": [0, 152, 153], "getelementz": [0, 152, 153], "factori": [0, 2, 3, 56, 59, 79, 152, 153, 155, 162, 203, 204, 217, 282, 303, 306, 345, 348, 441, 445, 448, 468, 488], "addglobalel": [0, 152, 153], "destroyglobalel": [0, 152, 153], "nucdir": [0, 152], "getnuclidefromnam": [0, 152, 154], "getnaturalisotop": [0, 152, 153, 154, 155], "getnaturalmassisotop": [0, 152, 154], "getmc2label": [0, 152, 154], "getelementnam": [0, 152, 154], "getelementsymbol": [0, 152, 154], "getnuclid": [0, 79, 104, 152, 154, 164, 173, 196, 197, 201, 282, 303, 306, 309, 355, 471, 472], "getnuclidenam": [0, 152, 154], "getatomicweight": [0, 152, 154, 282, 309], "isheavymet": [0, 152, 153, 154, 155, 491], "isfissil": [0, 152, 154, 155, 165, 167], "getthresholddisplacementenergi": [0, 152, 154], "nuclidebas": [0, 1, 152, 154, 159, 160, 162, 163, 169, 245, 292, 309, 400, 458, 465, 466, 473, 476, 491], "nuclideinterfac": [0, 152, 155], "nuclidewrapp": [0, 152, 155, 202], "inuclid": [0, 152, 154, 155, 162, 202], "imcnpnuclid": [0, 152, 155], "naturalnuclidebas": [0, 83, 90, 112, 137, 139, 152, 153, 154, 155, 162, 292, 491], "dummynuclidebas": [0, 152, 155, 491], "lumpnuclidebas": [0, 152, 155, 491], "initreachableactivenuclidesthroughburnchain": [0, 152, 155], "isotop": [0, 89, 91, 104, 108, 125, 152, 154, 155, 162, 165, 173, 200, 239, 243, 245, 266, 286, 287, 290, 292, 297, 298, 299, 303, 304, 305, 306, 308, 309, 354, 400, 412, 420, 445, 479, 482, 485, 487, 491, 492, 493, 499], "getisotop": [0, 152, 155], "fromnam": [0, 152, 155, 476], "ismonoisotopicel": [0, 152, 155], "singl": [0, 3, 5, 6, 8, 19, 38, 45, 47, 56, 152, 155, 166, 167, 200, 202, 204, 219, 238, 239, 283, 286, 290, 292, 303, 305, 306, 309, 316, 324, 329, 331, 333, 335, 340, 352, 353, 354, 363, 364, 380, 388, 392, 395, 396, 404, 407, 412, 415, 433, 448, 450, 451, 452, 466, 476, 480, 483, 485, 489, 493, 498, 502, 504, 505], "changelabel": [0, 152, 155], "getdepletablenuclid": [0, 152, 155], "imposeburnchain": [0, 152, 155, 476], "addnuclidebas": [0, 152, 155], "readmccnuclidedata": [0, 152, 155], "updatenuclidebasesforspecialcas": [0, 152, 155], "addglobalnuclid": [0, 152, 155], "destroyglobalnuclid": [0, 152, 155], "thermalscatt": [0, 83, 90, 104, 112, 137, 139, 152, 160], "transmut": [0, 152, 155, 159, 161, 202, 236, 292, 463, 477, 478, 495, 498, 502], "decaymod": [0, 152, 155, 163], "nucleardataio": [0, 259, 329, 441, 466, 471, 472], "getexpectedisotxsfilenam": [0, 164, 441], "getexpectedcompxsfilenam": [0, 164, 441], "getexpectedgamisofilenam": [0, 164, 441], "getexpectedpmatrxfilenam": [0, 164, 441], "cccc": [0, 152, 164, 201, 466, 471, 472, 482], "system": [0, 3, 5, 6, 19, 27, 28, 31, 33, 37, 77, 155, 164, 175, 203, 204, 205, 212, 214, 218, 219, 226, 239, 243, 250, 281, 282, 287, 291, 293, 302, 306, 331, 332, 333, 335, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 357, 372, 374, 376, 377, 389, 390, 397, 398, 401, 404, 409, 411, 442, 445, 447, 452, 459, 460, 474, 479, 481, 482, 485, 486, 487, 492, 493, 504, 508], "implement": [0, 1, 3, 5, 8, 20, 32, 44, 45, 49, 56, 58, 60, 66, 78, 79, 93, 104, 139, 145, 151, 152, 155, 164, 166, 169, 173, 211, 215, 219, 236, 238, 239, 243, 250, 254, 280, 281, 286, 291, 309, 316, 317, 322, 328, 329, 335, 337, 340, 342, 344, 349, 353, 386, 389, 392, 395, 396, 397, 404, 407, 443, 445, 450, 452, 483, 484, 485, 489, 491, 494, 502, 504, 505], "detail": [0, 3, 5, 6, 19, 32, 39, 61, 66, 70, 74, 78, 93, 104, 164, 203, 211, 216, 219, 220, 235, 239, 243, 250, 254, 281, 286, 287, 289, 291, 309, 310, 329, 331, 386, 437, 445, 452, 459, 460, 480, 482, 483, 485, 487, 488, 490, 492, 493, 494, 498, 503, 504], "discuss": [0, 5, 152, 164, 212, 243, 281, 342, 445, 447, 448, 480, 489, 493, 502], "nuclearfilemetadata": [0, 164], "filemetadata": [0, 164, 195], "nuclidexsmetadata": [0, 164, 195], "regionxsmetadata": [0, 164, 195], "nuclidemetadata": [0, 164, 195], "xscollect": [0, 164, 197, 202, 353, 412], "macroscopiccrosssectioncr": [0, 164, 200], "computeblockaveragechi": [0, 164, 200], "computeneutronenergydepositionconst": [0, 164, 200], "computegammaenergydepositionconst": [0, 164, 200], "computefissionenergygenerationconst": [0, 164, 200], "computecaptureenergygenerationconst": [0, 164, 200], "computemacroscopicgroupconst": [0, 164, 200], "xslibrari": [0, 164, 167, 169, 171, 173, 176, 198, 200, 202, 250], "compar": [0, 1, 3, 4, 32, 46, 47, 55, 56, 58, 64, 164, 165, 167, 169, 171, 172, 173, 176, 182, 186, 199, 200, 201, 202, 219, 224, 240, 322, 329, 332, 339, 340, 361, 374, 379, 412, 414, 502], "comparexslibraryattribut": [0, 164, 201], "comparelibraryneutronenergi": [0, 164, 201], "getsuffixfromnuclidelabel": [0, 164, 201], "getisotxslibrariestomerg": [0, 164, 201], "mergexslibrariesinworkingdirectori": [0, 164, 201], "isotxslibrari": [0, 164, 172, 176, 179, 198, 201, 329, 412], "compxslibrari": [0, 164, 167, 201], "xsnuclid": [0, 164, 167, 200, 472], "plotscattermatrix": [0, 164, 202, 412, 472], "plotcomparescattermatrix": [0, 164, 202], "getoperatorclassfromset": [0, 203, 441], "operatormpi": [0, 2, 151, 203, 208, 281, 445], "runtyp": [0, 203, 211, 281, 437, 445, 502], "settingsvalid": [0, 203, 281, 365, 483, 485, 489], "snapshot": [0, 3, 5, 25, 32, 36, 47, 78, 203, 204, 206, 210, 236, 254, 283, 467, 474, 475, 482, 483, 487, 502], "operatorsnapshot": [0, 203, 204, 208, 445], "physic": [0, 32, 50, 78, 79, 86, 87, 103, 105, 137, 152, 155, 162, 163, 164, 165, 166, 169, 173, 184, 203, 204, 208, 281, 283, 286, 290, 292, 306, 308, 309, 310, 313, 314, 315, 328, 329, 337, 342, 345, 353, 369, 441, 442, 445, 447, 459, 467, 471, 479, 482, 483, 485, 487, 488, 490, 492, 493, 497, 501, 502, 504], "fuelcycl": [0, 212, 254, 281, 467, 487, 493], "fuelhandlerplugin": [0, 212, 215], "fuelperform": [0, 212], "neutron": [0, 28, 50, 78, 85, 101, 154, 155, 159, 162, 163, 165, 167, 169, 170, 179, 200, 201, 202, 212, 226, 281, 283, 286, 289, 290, 303, 306, 309, 310, 319, 328, 342, 345, 412, 447, 450, 465, 471, 476, 480, 482, 483, 485, 489, 490, 491, 493, 494, 498, 500, 502], "neutronicsplugin": [0, 212, 236, 269, 281, 447], "gammatransportisrequest": [0, 212, 236], "gammaxsarerequest": [0, 212, 236], "adjointcalculationrequest": [0, 212, 236], "realcalculationrequest": [0, 212, 236], "applyeffectivedelayedneutronfractiontocor": [0, 212, 236], "latticephysicsfrequ": [0, 212, 236, 238, 257, 483, 502], "safeti": [0, 169, 212, 404, 411, 480], "safetyplugin": [0, 212, 270], "thermalhydraul": [0, 212, 342, 345, 505], "constant": [0, 25, 77, 78, 81, 89, 103, 104, 159, 165, 169, 184, 200, 206, 212, 236, 237, 241, 254, 261, 269, 282, 286, 306, 309, 320, 332, 333, 337, 338, 340, 353, 369, 400, 440, 451, 466, 476, 483, 485, 489, 498, 500, 502], "dpa_cross_sect": [0, 212, 213], "execut": [0, 13, 14, 15, 16, 17, 30, 31, 34, 35, 36, 41, 42, 47, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 77, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 151, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 204, 210, 211, 212, 223, 224, 225, 226, 232, 233, 234, 239, 247, 248, 250, 252, 254, 257, 258, 264, 265, 266, 267, 268, 269, 272, 279, 281, 286, 295, 296, 297, 298, 299, 300, 301, 302, 309, 322, 323, 324, 325, 326, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 401, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 442, 445, 448, 459, 461, 477, 480, 481, 482, 483, 489, 502, 504, 508], "executionopt": [0, 212, 214, 227, 250], "defaultexecut": [0, 212, 214, 227, 250], "reactorplugin": [0, 281, 282, 441, 502], "beforereactorconstruct": [0, 281, 282, 379, 392, 485], "defineblocktyp": [0, 281, 282], "defineassemblytyp": [0, 281, 282], "definesystembuild": [0, 281, 282, 502], "getaxialexpansionchang": [0, 281, 282, 379, 392, 485], "blueprint": [0, 2, 3, 5, 10, 25, 47, 49, 55, 56, 61, 89, 104, 108, 145, 146, 155, 195, 204, 236, 238, 243, 281, 282, 283, 286, 306, 309, 322, 327, 329, 331, 345, 348, 350, 353, 360, 397, 412, 450, 451, 466, 474, 482, 483, 485, 487, 488, 489, 492, 497, 499, 501], "loadfromc": [0, 282, 287, 348, 350], "compon": [0, 3, 4, 5, 9, 25, 44, 49, 51, 78, 104, 146, 153, 167, 182, 238, 239, 243, 264, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 301, 309, 311, 312, 313, 314, 315, 322, 323, 324, 329, 331, 339, 342, 348, 353, 354, 355, 411, 412, 445, 447, 450, 458, 463, 466, 474, 477, 478, 479, 480, 482, 483, 484, 485, 487, 490, 492, 493, 494, 495, 498, 501, 503, 504], "nullcompon": [0, 282, 303, 354, 502], "unshapedcompon": [0, 282, 303, 307, 354, 502], "unshapedvolumetriccompon": [0, 282, 303, 502], "zeromasscompon": [0, 282, 303, 502], "positiveornegativevolumecompon": [0, 282, 303, 502], "derivedshap": [0, 282, 286, 303, 306, 354, 355, 358, 464, 466, 474, 485, 487, 493, 494, 502], "convert": [0, 3, 4, 5, 9, 26, 39, 48, 70, 95, 96, 99, 104, 147, 154, 155, 166, 190, 200, 219, 238, 250, 259, 281, 282, 286, 306, 309, 329, 331, 332, 333, 338, 339, 345, 347, 350, 357, 372, 377, 392, 397, 400, 404, 407, 408, 410, 411, 415, 436, 440, 450, 458, 459, 460, 482, 483, 485, 487, 502], "grid": [0, 3, 5, 9, 14, 45, 49, 67, 239, 250, 281, 282, 283, 286, 287, 291, 293, 296, 300, 309, 313, 314, 315, 322, 329, 330, 349, 350, 353, 360, 397, 406, 412, 415, 417, 433, 445, 463, 464, 466, 471, 473, 474, 477, 478, 479, 480, 481, 482, 483, 485, 487, 490, 493, 495, 500, 508], "locatorlabeltoindic": [0, 282, 333], "basic": [0, 4, 14, 16, 20, 28, 31, 32, 46, 139, 151, 152, 155, 252, 257, 258, 259, 282, 287, 297, 304, 309, 319, 328, 333, 338, 353, 355, 372, 387, 393, 400, 419, 421, 430, 433, 435, 438, 443, 445, 448, 449, 452, 479, 480, 489, 492, 493, 494, 502, 503], "usag": [0, 4, 21, 60, 151, 202, 282, 343, 396, 397, 412, 414, 448, 451, 483, 502], "consider": [0, 44, 236, 238, 281, 282, 340, 398, 445], "reset": [0, 2, 78, 250, 281, 282, 303, 309, 310, 311, 313, 316, 328, 342, 366, 380, 389, 393, 396, 438, 485, 487, 498], "assembli": [0, 2, 3, 5, 14, 15, 25, 26, 27, 28, 43, 44, 47, 50, 78, 82, 89, 175, 216, 219, 220, 223, 224, 225, 250, 252, 261, 276, 281, 282, 284, 286, 287, 288, 289, 293, 295, 298, 301, 303, 306, 309, 310, 311, 312, 313, 314, 315, 316, 322, 324, 327, 328, 329, 331, 333, 335, 337, 338, 339, 340, 342, 348, 349, 350, 352, 355, 360, 363, 372, 386, 392, 396, 397, 400, 408, 412, 414, 445, 448, 450, 451, 459, 466, 467, 474, 475, 479, 480, 482, 483, 484, 485, 487, 489, 492, 498, 500, 501, 503, 504, 505, 507], "hexassembli": [0, 281, 282, 283, 466], "cartesianassembli": [0, 281, 282, 283], "rzassembli": [0, 282, 283], "thrzassembli": [0, 281, 282, 283], "assemblyparamet": [0, 282], "getassemblyparameterdefinit": [0, 282, 284], "blockparamet": [0, 282], "getblockparameterdefinit": [0, 282, 285], "block": [0, 2, 3, 4, 5, 14, 15, 25, 28, 41, 43, 44, 49, 50, 79, 125, 151, 152, 160, 166, 175, 197, 200, 219, 224, 235, 238, 239, 243, 245, 247, 250, 254, 258, 259, 264, 265, 281, 282, 283, 285, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 301, 303, 304, 306, 308, 309, 312, 313, 314, 315, 316, 317, 320, 322, 323, 324, 326, 327, 328, 329, 331, 333, 334, 339, 342, 344, 345, 346, 348, 349, 352, 353, 354, 355, 360, 363, 386, 395, 396, 400, 408, 412, 445, 448, 450, 451, 457, 458, 461, 463, 474, 475, 477, 478, 479, 482, 483, 484, 485, 487, 489, 490, 492, 495, 497, 500, 501, 503, 504], "hexblock": [0, 9, 197, 281, 282, 286, 309, 315, 316, 322, 352, 466, 483, 485], "cartesianblock": [0, 281, 282, 286, 315], "thrzblock": [0, 281, 282, 286], "composit": [0, 3, 5, 9, 79, 80, 81, 104, 152, 167, 169, 174, 182, 200, 226, 238, 239, 264, 281, 282, 283, 286, 287, 292, 293, 303, 306, 315, 316, 317, 329, 330, 331, 335, 337, 339, 340, 342, 344, 345, 346, 348, 355, 390, 438, 445, 448, 460, 467, 474, 475, 479, 482, 483, 485, 487, 490, 493, 494, 502, 504], "flagseri": [0, 282, 309, 345], "compositemodeltyp": [0, 281, 282, 306, 309], "armiobject": [0, 3, 5, 6, 228, 245, 250, 260, 275, 281, 282, 291, 309, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 346, 349, 451, 466, 485], "stateretain": [0, 282, 309, 355], "gathermaterialsbyvolum": [0, 282, 309], "getdominantmateri": [0, 282, 309], "getreactionratedict": [0, 282, 309], "core": [0, 3, 5, 9, 10, 14, 19, 25, 26, 28, 31, 44, 49, 53, 89, 167, 170, 175, 204, 215, 216, 219, 220, 224, 236, 238, 239, 243, 247, 250, 257, 259, 261, 281, 282, 283, 286, 287, 291, 293, 302, 309, 313, 315, 316, 317, 319, 322, 324, 328, 330, 331, 333, 335, 337, 338, 339, 340, 341, 342, 344, 347, 348, 349, 350, 352, 360, 361, 363, 366, 395, 397, 412, 414, 417, 445, 450, 452, 458, 459, 460, 466, 467, 474, 475, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 492, 494, 497, 498, 501, 502, 503, 504, 505, 508], "excorestructur": [0, 281, 282, 349, 502], "excorecollect": [0, 282, 330], "flag": [0, 1, 11, 19, 26, 78, 104, 125, 146, 179, 204, 219, 236, 243, 247, 250, 281, 282, 283, 286, 287, 290, 291, 292, 295, 296, 297, 298, 299, 301, 303, 309, 314, 316, 317, 322, 329, 342, 344, 345, 353, 355, 357, 372, 377, 392, 395, 396, 401, 406, 411, 412, 414, 423, 440, 445, 448, 458, 459, 464, 466, 467, 482, 483, 485, 487, 489, 492, 503, 504], "invalidflagserror": [0, 282, 331], "geometri": [0, 3, 5, 45, 47, 55, 56, 165, 172, 174, 175, 178, 187, 192, 204, 214, 238, 239, 250, 281, 282, 283, 286, 288, 291, 293, 306, 308, 310, 315, 316, 317, 322, 324, 327, 328, 329, 333, 335, 337, 338, 340, 341, 348, 350, 358, 397, 445, 457, 461, 466, 467, 470, 474, 475, 478, 480, 482, 487, 493, 494, 495, 502, 504], "geomtyp": [0, 52, 53, 54, 250, 282, 329, 332, 333, 334, 335, 337, 338, 340, 341, 397, 466, 482], "domaintyp": [0, 282, 332, 397, 466], "boundarytyp": [0, 282, 332, 466], "symmetrytyp": [0, 282, 316, 329, 332, 337, 466], "checkvalidgeomsymmetrycombo": [0, 282, 332], "reactorparamet": [0, 282], "definereactorparamet": [0, 282, 347], "definecoreparamet": [0, 282, 347], "makeparametersreadonli": [0, 282, 347], "spentfuelpool": [0, 281, 282, 475, 502], "systemlayoutinput": [0, 47, 49, 56, 282, 293, 341, 348, 482], "zone": [0, 165, 172, 174, 178, 179, 219, 282, 316, 329, 362, 467, 474, 475, 483, 487, 493, 494, 497, 498, 502], "isboolset": [0, 365, 441], "recursivelyloadsettingsfil": [0, 365, 441], "promptforsettingsfil": [0, 365, 441], "fwset": [0, 365, 489], "getframeworkset": [0, 365, 367], "caseset": [0, 25, 28, 151, 365, 474, 502], "flaglistset": [0, 365, 372], "settingsio": [0, 365, 378], "root": [0, 3, 5, 9, 47, 55, 77, 151, 155, 212, 288, 346, 365, 373, 379, 399, 401, 408, 438, 448, 451, 489, 504], "settingrenam": [0, 365, 373], "settingsread": [0, 365, 373], "settingswrit": [0, 365, 366, 373, 483], "prompt": [0, 365, 373, 374, 452, 489, 500, 502], "runlogpromptcancel": [0, 365, 373], "runlogpromptunresolv": [0, 365, 373], "queri": [0, 219, 281, 309, 365, 374, 376, 489], "inspector": [0, 203, 204, 215, 221, 229, 230, 236, 244, 262, 276, 277, 281, 365, 374, 489], "createqueryrevertbadpathtodefault": [0, 365, 374], "validatevers": [0, 365, 374], "getemptyhexreactor": [0, 379, 441], "getemptycartesianreactor": [0, 379, 441], "fixtur": [0, 34, 379, 441], "requires_fixtur": [0, 379, 441], "armitesthelp": [0, 34, 224, 225, 379, 383, 441], "comparefileslinebylin": [0, 379], "comparelin": [0, 379], "rebaselinetextcomparison": [0, 379, 441], "mockrunlog": [0, 379], "bufferlog": [0, 379, 380], "logcount": [0, 379, 380], "refsmallreactorshufflelog": [0, 379], "equilibriumshuffl": [0, 379, 381], "getfactorlist": [0, 215, 219, 379, 381, 493, 502], "test_app": [0, 379], "testplugin1": [0, 379, 382], "testplugin2": [0, 379, 382], "testplugin3": [0, 379, 382], "testplugin4": [0, 379, 382], "testapp": [0, 379, 382], "testarmihighlevel": [0, 379, 382], "test_armitesthelp": [0, 379], "testarmitesthelp": [0, 379, 383], "test_cartesian": [0, 379, 416, 417], "cartesianreactortest": [0, 282, 351, 360, 379, 384], "test_context": [0, 379], "testcontextseri": [0, 379, 385], "test_interfac": [0, 379], "dummyinterfac": [0, 379, 386], "testcodeinterfac": [0, 379, 386], "testtextprocessor": [0, 379, 386], "testtightcoupl": [0, 203, 209, 211, 379, 386], "test_lwrinput": [0, 379], "c5g7reactortest": [0, 379, 387], "test_mpiact": [0, 379, 416, 421], "mpiitertest": [0, 379, 388], "queueactionstest": [0, 379, 388], "passer": [0, 364, 379, 380, 388], "test_mpifeatur": [0, 379], "failinginterface1": [0, 379, 389], "failinginterface2": [0, 379, 389], "failinginterface3": [0, 379, 389], "mockinterfac": [0, 3, 12, 15, 379, 389], "mpioperatortest": [0, 379, 389], "bcastaction1": [0, 379, 389], "bcastaction2": [0, 379, 389], "mpidistributestatetest": [0, 379, 389], "mpipathtoolstest": [0, 379, 389], "testcontextmpi": [0, 379, 389], "test_mpiparamet": [0, 379], "mocksyncpc": [0, 379, 390], "makecomp": [0, 379, 390], "synchronizationtest": [0, 379, 390], "test_notebook": [0, 379], "notebooktest": [0, 379, 391], "runnotebook": [0, 379, 391], "test_plugin": [0, 379], "pluginflags1": [0, 379, 392], "sillyaxialexpansionchang": [0, 379, 392], "sillyaxialplugin": [0, 379, 392], "beforereactorplugin": [0, 379, 392], "testpluginregistr": [0, 379, 392], "testpluginbas": [0, 379, 392], "testplugin": [0, 233, 269, 279, 379, 392], "test_runlog": [0, 379], "testrunlog": [0, 379, 393], "testrunlogg": [0, 379, 393], "test_test": [0, 379], "testcomparefil": [0, 379, 394], "test_user_plugin": [0, 379, 489], "userpluginflag": [0, 379, 395], "userpluginflags2": [0, 379, 395], "userpluginflags3": [0, 379, 395], "userpluginbaddefinesset": [0, 379, 395], "userpluginbaddefineparameterrenam": [0, 379, 395], "userpluginonprocesscoreload": [0, 379, 395], "upinterfac": [0, 379, 395], "userpluginwithinterfac": [0, 379, 395], "testuserplugin": [0, 379, 395], "util": [0, 2, 4, 31, 37, 41, 61, 66, 77, 198, 200, 212, 214, 220, 226, 234, 281, 288, 289, 291, 313, 320, 328, 331, 333, 373, 377, 389, 392, 441, 442, 445, 448, 456, 458, 460, 463, 464, 467, 474, 475, 478, 480, 482, 483, 485, 487, 489, 493, 495, 502], "getfilesha1hash": [0, 396, 441], "copywithoutblock": [0, 396, 441], "getpowerfract": [0, 396, 441], "getcyclenam": [0, 396, 441], "getavailabilityfactor": [0, 396, 441], "getsteplength": [0, 396, 441], "getcyclelength": [0, 396, 441], "getburnstep": [0, 396, 441], "hasburnup": [0, 396, 441], "getmaxburnstep": [0, 396, 441], "getcumulativenodenum": [0, 396, 441], "getcyclenodefromcumulativestep": [0, 396, 441], "getcyclenodefromcumulativenod": [0, 396, 441], "getnodespercycl": [0, 396, 441], "getprevioustimenod": [0, 396, 441], "trypickleonallcont": [0, 396, 441], "dotestpickleonallcontents2": [0, 396, 441], "mypickl": [0, 396, 441], "save": [0, 6, 39, 78, 204, 236, 259, 286, 291, 300, 309, 328, 329, 342, 366, 396, 412, 414, 415, 445, 450, 452, 480, 483, 488, 502], "trypickleonallcontents3": [0, 396, 441], "classesinhierarchi": [0, 396, 437, 441], "slantsplit": [0, 396, 441], "prependtolist": [0, 396, 441], "capstrlen": [0, 396, 441], "list2str": [0, 396, 441], "createformattedstrwithdelimit": [0, 396, 441], "plotmatrix": [0, 396, 441], "usernam": [0, 396, 441], "mergeabledict": [0, 78, 396, 441], "merg": [0, 1, 164, 165, 166, 167, 182, 188, 198, 200, 201, 202, 239, 286, 306, 315, 382, 396, 482, 485, 499], "safecopi": [0, 396, 441, 485], "asciimap": [0, 291, 396, 483], "asciimapcartesian": [0, 396, 397], "asciimaphexthirdflatsup": [0, 396, 397], "asciimaphexfullflatsup": [0, 396, 397], "asciimaphexfulltipsup": [0, 396, 397], "asciimapfromgeomanddomain": [0, 396, 397], "codetim": [0, 396, 437, 484], "getmastertim": [0, 396, 398], "mastertim": [0, 396, 398], "customexcept": [0, 396, 482], "warn": [0, 3, 5, 78, 89, 104, 200, 201, 211, 239, 283, 299, 309, 332, 364, 373, 380, 387, 393, 396, 399, 401, 411, 438, 441, 446, 452, 487, 489, 492, 494, 502, 504], "warn_when_root": [0, 396, 399], "inputerror": [0, 396, 399], "settingexcept": [0, 396, 399], "invalidsettingsstopprocess": [0, 396, 399], "nonexistentset": [0, 396, 399], "invalidsettingsfileerror": [0, 396, 399], "nonexistentsettingsfileerror": [0, 396, 399], "densitytool": [0, 396, 420, 458], "getndensfrommass": [0, 396, 400], "getmassfract": [0, 396, 400], "calculatemassdens": [0, 396, 400], "calculatenumberdens": [0, 396, 400], "getmassingram": [0, 396, 400], "formatmaterialcard": [0, 396, 400, 458], "filternuclidelist": [0, 396, 400], "normalizenuclidelist": [0, 396, 400], "expandelementalmassfracstonuclid": [0, 396, 400], "expandelementalnuclidemassfrac": [0, 396, 400], "getchem": [0, 396, 400], "applyisotopicsmix": [0, 396, 400], "directorychang": [0, 214, 396, 402, 421, 483], "temporarydirectorychang": [0, 272, 396, 401, 483], "forcedcreationdirectorychang": [0, 46, 272, 396, 401], "directorychangerfactori": [0, 396, 401], "directorychangersmpi": [0, 396], "mpidirectorychang": [0, 396, 402, 422, 485], "dynamicimport": [0, 396], "getentirefamilytre": [0, 396, 403], "auto": [0, 3, 5, 7, 77, 104, 146, 214, 250, 281, 283, 290, 309, 355, 358, 374, 396, 404, 423, 442, 452, 482, 483, 502], "grideditor": [0, 67, 396, 502], "hexagon": [0, 45, 125, 175, 281, 282, 283, 286, 295, 298, 299, 301, 303, 304, 305, 306, 307, 309, 310, 315, 316, 329, 333, 337, 340, 352, 353, 354, 355, 396, 397, 424, 445, 464, 466, 468, 474, 480, 485, 487, 493, 498, 502, 503], "area": [0, 25, 54, 174, 220, 264, 281, 283, 286, 303, 304, 305, 306, 308, 309, 315, 323, 338, 352, 353, 354, 358, 396, 406, 424, 435, 439, 450, 479, 485, 489, 493, 497, 498, 499], "side": [0, 26, 219, 286, 304, 305, 315, 337, 338, 379, 396, 406, 412, 459], "corner": [0, 190, 220, 286, 306, 309, 335, 338, 342, 345, 396, 397, 406, 417, 424, 485, 498], "pitch": [0, 14, 286, 291, 304, 305, 306, 315, 316, 329, 333, 334, 335, 338, 340, 341, 351, 353, 379, 396, 406, 468, 487, 492, 493, 494, 502, 503], "numringstoholdnumcel": [0, 396, 406], "numpositionsinr": [0, 396, 406, 424], "totalpositionsuptor": [0, 396, 406, 424], "getindexofrotatedcel": [0, 396, 406, 485], "iter": [0, 3, 5, 8, 9, 32, 47, 78, 79, 155, 204, 211, 236, 238, 250, 254, 257, 283, 286, 309, 316, 329, 337, 340, 344, 348, 379, 396, 408, 412, 414, 415, 423, 425, 433, 448, 464, 466, 485, 489, 500, 502, 505], "flatten": [0, 3, 8, 16, 151, 396, 407, 448, 504], "chunk": [0, 9, 286, 396, 404, 407, 438, 448, 451], "split": [0, 45, 151, 283, 286, 316, 327, 335, 337, 342, 379, 396, 407, 448, 480, 483, 493, 497, 502], "unpackbinarystr": [0, 396, 407], "packbinarystr": [0, 396, 407], "unpackhexstr": [0, 396, 407], "packhexstr": [0, 396, 407], "sequenc": [0, 3, 4, 5, 6, 47, 55, 56, 60, 104, 211, 214, 254, 281, 288, 289, 290, 291, 292, 293, 309, 340, 345, 355, 396, 404, 407, 412, 414, 415, 445, 479, 480, 502], "pivot": [0, 396, 407], "mathemat": [0, 104, 396, 426], "average1dwithintoler": [0, 328, 396, 408], "converttoslic": [0, 396, 408], "efmt": [0, 396, 408], "expandrepeatedfloat": [0, 396, 408], "findclosest": [0, 396, 408], "findnearestvalu": [0, 396, 408], "findnearestvalueandindex": [0, 396, 408], "fixthreedigitexp": [0, 396, 408], "getfloat": [0, 396, 408], "getstepsfromvalu": [0, 396, 408], "ismonoton": [0, 396, 408], "linearinterpol": [0, 396, 408], "minimizescalarfunc": [0, 396, 408], "newtonsmethod": [0, 396, 408], "parabolafrompoint": [0, 396, 408], "parabolicinterpol": [0, 396, 408], "relerr": [0, 396, 408], "resamplestepwis": [0, 396, 408, 426], "rotatexi": [0, 396, 408], "outputcach": [0, 396], "api": [0, 281, 309, 396, 433, 442, 445, 447, 451, 452, 467, 480, 483, 487, 492, 502], "retrieveoutput": [0, 396, 409], "store": [0, 3, 4, 5, 8, 9, 19, 22, 26, 32, 43, 45, 47, 78, 104, 153, 155, 170, 172, 175, 178, 182, 195, 200, 204, 219, 239, 254, 283, 286, 293, 306, 309, 312, 313, 314, 315, 322, 328, 329, 331, 332, 337, 339, 340, 342, 344, 345, 346, 373, 396, 404, 407, 409, 414, 420, 445, 450, 451, 482, 483, 487, 489, 497, 498, 499, 502, 503, 504, 505], "deletecach": [0, 396, 409], "cachecal": [0, 396, 409], "pars": [0, 37, 39, 47, 60, 64, 66, 218, 332, 379, 396, 428, 433, 438, 485, 502], "tryliteralev": [0, 396, 410], "parsevalu": [0, 396, 410], "datetimefromstr": [0, 396, 410], "pathtool": [0, 396, 429], "armiabspath": [0, 396, 411], "copyorwarn": [0, 396, 411], "isfilepathnew": [0, 396, 411], "isaccess": [0, 396, 411], "separatemoduleandattribut": [0, 396, 411], "importcustompymodul": [0, 396, 411, 429], "moduleandattributeexist": [0, 396, 411], "cleanpath": [0, 396, 411, 429], "plot": [0, 22, 25, 26, 28, 45, 49, 167, 197, 202, 219, 261, 316, 340, 396, 414, 430, 432, 450, 459, 460, 463, 464, 466, 467, 469, 474, 476, 477, 478, 480, 482, 483, 485, 487, 488, 489, 490, 492, 494, 495, 502], "colorgener": [0, 396, 412], "plotblockdepthmap": [0, 396, 412, 487], "plotfacemap": [0, 396, 412, 460, 467, 475, 487], "close": [0, 2, 3, 5, 6, 77, 159, 165, 166, 219, 309, 364, 393, 396, 400, 401, 402, 412, 414, 438, 441, 460, 467, 475, 487, 502], "depthslid": [0, 396, 412], "plotassemblytyp": [0, 396, 412, 474], "plotblockflux": [0, 396, 412], "makehistogram": [0, 396, 412], "plotblockdiagram": [0, 396, 412], "plotnucx": [0, 396, 412], "properti": [0, 1, 3, 4, 5, 6, 21, 43, 47, 79, 80, 81, 82, 83, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 115, 116, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 151, 155, 167, 169, 175, 182, 197, 198, 201, 202, 204, 208, 219, 226, 238, 239, 280, 286, 287, 288, 291, 292, 306, 309, 315, 328, 329, 330, 332, 334, 335, 337, 338, 339, 340, 342, 344, 345, 353, 355, 363, 366, 372, 379, 396, 431, 445, 447, 473, 479, 480, 482, 485, 487, 489, 490, 494, 499, 502], "areequ": [0, 396, 413], "numpyhackforequ": [0, 396, 413], "createimmutableproperti": [0, 396, 413], "immutablepropertyerror": [0, 396, 413], "unlockimmutableproperti": [0, 396, 413], "lockimmutableproperti": [0, 396, 413], "reportplot": [0, 396], "plotreactorperform": [0, 396, 414], "valuevstim": [0, 396, 414], "keffvstim": [0, 396, 414], "buvstim": [0, 396, 414], "xshistoryvstim": [0, 396, 414], "movesvscycl": [0, 396, 414], "plotcoreoverviewradar": [0, 396, 414], "createplotmetadata": [0, 396, 414], "plotaxialprofil": [0, 396, 414], "tabul": [0, 396, 433, 464, 485], "header": [0, 23, 26, 364, 396, 433, 441, 447, 450, 452, 464, 483, 505], "column": [0, 26, 166, 167, 182, 202, 396, 397, 414, 433, 438, 485, 493], "align": [0, 315, 328, 396, 406, 412, 433, 480, 502, 506], "width": [0, 219, 220, 224, 335, 340, 396, 404, 466, 476, 500], "line": [0, 4, 26, 39, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 137, 146, 166, 204, 212, 240, 250, 281, 283, 286, 309, 310, 316, 329, 335, 337, 338, 353, 359, 366, 372, 374, 378, 379, 396, 397, 398, 408, 411, 417, 422, 426, 430, 433, 434, 438, 440, 443, 448, 450, 451, 452, 466, 479, 481, 485, 487, 489, 493, 502, 504, 508], "datarow": [0, 396, 415], "size": [0, 21, 26, 56, 165, 166, 202, 219, 309, 328, 329, 340, 360, 396, 397, 404, 408, 412, 415, 493, 494, 502], "tableformat": [0, 396, 415], "textwrapp": [0, 396, 415], "chain": [0, 155, 159, 163, 219, 236, 243, 292, 309, 333, 339, 396, 407, 414, 415, 476, 480, 502], "namedtupl": [0, 78, 339, 396, 415], "partial": [0, 175, 190, 250, 281, 286, 291, 329, 338, 364, 396, 407, 415, 502], "reduc": [0, 5, 283, 309, 328, 333, 337, 340, 344, 360, 396, 415, 482, 487, 502], "zip_longest": [0, 396, 415], "textprocessor": [0, 396, 434], "scientific_pattern": [0, 396, 438], "floating_pattern": [0, 396, 438], "decimal_pattern": [0, 396, 438], "filemark": [0, 396, 438], "resolvemarkupinclus": [0, 396, 434, 438], "findyamlinclus": [0, 396, 438], "sequentialread": [0, 396, 438], "sequentialstringioread": [0, 396, 438], "smartlist": [0, 396, 438], "triangl": [0, 282, 303, 304, 307, 338, 354, 396, 435, 502], "gettrianglearea": [0, 396, 435, 439], "gettrianglecentroid": [0, 396, 439], "checkifpointisintriangl": [0, 396, 439], "unit": [0, 10, 15, 53, 54, 58, 59, 76, 77, 80, 90, 93, 104, 113, 120, 122, 125, 130, 136, 161, 171, 175, 176, 200, 269, 279, 286, 299, 322, 325, 326, 329, 333, 334, 335, 340, 342, 345, 353, 372, 379, 388, 391, 394, 396, 406, 418, 428, 429, 436, 444, 446, 452, 479, 483, 485, 489, 493, 497, 498, 499, 500, 502, 507], "gettk": [0, 396, 440], "gettc": [0, 396, 440, 489], "gettf": [0, 396, 440], "gettemperatur": [0, 396, 440], "gettmev": [0, 396, 440], "convertmmhgtopasc": [0, 396, 440], "convertbartopasc": [0, 396, 440], "convertatmtopasc": [0, 396, 440], "sanitizeangl": [0, 396, 440], "getxylineparamet": [0, 396, 440], "pluginmanag": [0, 1, 281, 441, 447], "getset": [0, 1, 365, 366], "getparamrenam": [0, 1], "registerpluginflag": [0, 1], "registeruserplugin": [0, 1, 365, 366], "splashtext": [0, 1, 447, 489], "conftest": [0, 441], "pytest_sessionstart": [0, 76, 441], "bootstraparmitestenv": [0, 76, 441], "context": [0, 28, 44, 47, 151, 259, 286, 293, 332, 385, 389, 396, 401, 441, 448, 452, 476, 480, 482, 494, 504], "mode": [0, 3, 5, 60, 65, 66, 77, 85, 147, 152, 155, 166, 250, 291, 329, 347, 373, 386, 441, 452, 485, 493, 500], "batch": [0, 63, 65, 66, 74, 77, 254, 303, 485, 493], "setmod": [0, 77], "activatelocalfastpath": [0, 77, 441], "getfastpath": [0, 77, 441, 482], "cleantempdir": [0, 77, 441], "cleanallarmitempdir": [0, 77, 441], "disconnectallhdfdb": [0, 77, 441], "stack_ord": [0, 78, 204, 441, 489], "befor": [0, 3, 5, 10, 19, 47, 78, 151, 201, 204, 212, 214, 218, 219, 220, 235, 238, 239, 264, 281, 282, 286, 306, 309, 314, 315, 316, 327, 329, 332, 342, 344, 364, 392, 393, 396, 397, 403, 408, 415, 442, 444, 447, 448, 450, 451, 467, 480, 481, 482, 483, 485, 487, 489, 498, 500, 502, 508], "preprocess": [0, 78], "fuel_manag": [0, 78, 219], "fuel_perform": [0, 78], "cross_sect": [0, 78], "critical_control": [0, 78], "flux": [0, 19, 34, 78, 165, 167, 169, 171, 173, 175, 178, 179, 190, 200, 220, 238, 239, 243, 249, 250, 252, 260, 264, 281, 283, 286, 303, 306, 309, 327, 328, 329, 331, 342, 345, 353, 412, 445, 466, 467, 479, 480, 482, 483, 487, 498, 500, 502], "thermal_hydraul": [0, 78, 489], "reactivity_coeff": [0, 78], "transient": [0, 32, 78, 203, 208, 212, 450, 480, 502], "postprocess": [0, 78], "tightcoupl": [0, 15, 78, 252, 386, 441, 502, 505], "storepreviousiterationvalu": [0, 78], "isconverg": [0, 78, 386], "getlistdimens": [0, 78], "getdepend": [0, 78], "getinputfil": [0, 78], "distribut": [0, 2, 3, 5, 6, 22, 27, 78, 143, 151, 152, 165, 219, 220, 236, 252, 286, 309, 313, 314, 315, 340, 412, 448, 467, 475, 480, 483, 485, 487, 489, 493, 494, 498, 500, 502, 505], "duplic": [0, 21, 44, 56, 58, 78, 79, 104, 125, 129, 153, 242, 245, 248, 282, 283, 297, 309, 329, 340, 354, 364, 365, 366, 398, 409, 420, 423, 483, 493, 502, 504], "new": [0, 3, 4, 5, 16, 19, 26, 30, 45, 47, 55, 56, 63, 65, 78, 80, 92, 104, 110, 120, 137, 142, 144, 147, 149, 151, 155, 182, 200, 202, 208, 212, 214, 217, 238, 239, 250, 254, 259, 264, 276, 281, 283, 286, 287, 290, 292, 303, 309, 314, 315, 316, 317, 320, 328, 329, 331, 340, 344, 345, 346, 348, 349, 350, 359, 360, 363, 366, 372, 377, 390, 392, 395, 396, 401, 402, 404, 406, 407, 408, 415, 438, 442, 443, 444, 446, 447, 450, 451, 460, 481, 482, 487, 488, 492, 493, 494, 502, 504, 505, 506, 508], "skip": [0, 55, 78, 162, 169, 175, 200, 204, 211, 239, 286, 328, 346, 360, 371, 372, 401, 412, 447, 476, 483, 485, 494, 502], "namecontain": [0, 78, 282, 309], "predistributest": [0, 78], "postdistributest": [0, 78], "attachreactor": [0, 78], "detachreactor": [0, 78], "gethistoryparam": [0, 19, 78, 249, 250], "getinterfac": [0, 19, 78, 203, 204, 445, 487], "interactinit": [0, 78, 204, 379, 389, 445], "interactbol": [0, 2, 3, 6, 19, 20, 21, 22, 27, 32, 78, 204, 236, 238, 239, 242, 243, 253, 254, 257, 329, 445], "interacteol": [0, 2, 3, 6, 19, 20, 21, 22, 27, 78, 204, 215, 218, 445], "interactboc": [0, 2, 19, 20, 22, 27, 78, 215, 218, 222, 224, 236, 238, 242, 243, 249, 250, 251, 252, 253, 254, 257, 445], "interacteoc": [0, 2, 3, 6, 22, 27, 78, 215, 218, 236, 238, 253, 254, 445, 485], "interacteverynod": [0, 2, 3, 6, 12, 15, 20, 21, 22, 27, 32, 78, 204, 236, 238, 249, 250, 251, 252, 253, 254, 257, 379, 389, 395, 445, 448, 489], "interactcoupl": [0, 2, 32, 78, 236, 238, 249, 250, 253, 254, 257, 445, 483, 502], "gettightcouplingvalu": [0, 78, 249, 250, 252], "interacterror": [0, 2, 3, 6, 78, 445], "interactdistributest": [0, 2, 3, 6, 78, 242, 243], "isrequesteddetailpoint": [0, 32, 78], "workeroper": [0, 2, 78, 151, 203, 204, 205, 215, 218, 219, 281, 379, 389], "enabl": [0, 3, 6, 47, 78, 94, 104, 170, 204, 239, 243, 247, 248, 250, 260, 283, 287, 288, 290, 311, 313, 329, 339, 366, 442, 445, 447, 452, 480, 482, 483, 485, 487, 492, 498, 502, 505, 506], "bolforc": [0, 78, 204], "writeinput": [0, 46, 47, 55, 78, 212, 214, 316, 474, 492], "readoutput": [0, 78], "specifyinput": [0, 57, 58, 78, 215, 218, 281], "updatephysicscouplingcontrol": [0, 78, 253, 254], "inputwrit": [0, 78, 255, 441], "write": [0, 3, 5, 6, 7, 9, 11, 14, 16, 19, 22, 23, 24, 28, 31, 37, 43, 44, 47, 48, 55, 78, 145, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 214, 219, 224, 253, 254, 255, 256, 258, 265, 269, 283, 287, 297, 310, 317, 329, 345, 350, 358, 364, 366, 372, 373, 379, 393, 397, 398, 399, 408, 412, 445, 447, 450, 451, 452, 457, 461, 464, 474, 478, 480, 481, 482, 483, 485, 487, 489, 492, 493, 495, 502, 504, 505, 508], "outputread": [0, 78, 250, 252, 441], "getactiveinterfaceinfo": [0, 78, 204, 441], "isinterfaceact": [0, 78, 441], "interfaceinfo": [0, 78, 441, 489], "interfacecl": [0, 78], "kwarg": [0, 10, 78, 82, 89, 102, 104, 108, 131, 133, 134, 135, 136, 137, 151, 169, 197, 238, 239, 280, 281, 288, 289, 290, 291, 292, 293, 303, 329, 341, 345, 355, 364, 380, 395, 412, 419], "meta": [0, 155, 202, 213, 292, 299, 306, 342, 345, 355, 441], "mpiaction": [0, 21, 205, 214, 259, 281, 389, 422, 441, 445, 448, 483], "parallel": [0, 72, 77, 151, 204, 205, 254, 259, 309, 389, 445, 446, 452, 479, 480, 481, 502, 508], "invokeasmast": [0, 151, 448], "broadcast": [0, 27, 78, 151, 205, 309, 402, 448], "gather": [0, 2, 3, 5, 19, 55, 151, 286, 340, 448, 503], "invok": [0, 1, 37, 39, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 151, 236, 240, 319, 346, 413, 438, 442, 443, 445, 448, 481, 482, 508], "mpiflatten": [0, 151, 448], "mpiiter": [0, 151, 448], "invokehook": [0, 2, 21, 151, 236, 259, 379, 389, 416, 422, 448], "runact": [0, 151, 441, 448], "runactionsinseri": [0, 151, 441], "distributionact": [0, 151, 441], "mpiactionerror": [0, 151, 441], "distributestateact": [0, 151, 441, 448], "counter": [0, 78, 280, 283, 286, 335, 338, 344, 406, 407, 498], "unregist": [0, 280], "defineparamet": [0, 3, 10, 212, 226, 229, 236, 273, 276, 281, 489], "afterconstructionofassembli": [0, 273, 276, 281], "onprocesscoreload": [0, 212, 236, 281, 379, 395, 489], "defineflag": [0, 1, 281, 379, 392, 395, 502], "defineblueprintssect": [0, 3, 10, 281, 392], "defineset": [0, 57, 58, 212, 215, 226, 229, 230, 236, 242, 244, 262, 270, 273, 276, 277, 281, 365, 367, 368, 369, 370, 375, 377, 379, 395, 489], "definesettingsvalid": [0, 212, 215, 226, 229, 236, 273, 276, 281, 489], "defineguiwidget": [0, 281], "getoperatorclassfromruntyp": [0, 281], "defineparameterrenam": [0, 281, 379, 382, 395, 489], "userplugin": [0, 281, 395, 441, 483, 488, 502], "getnewpluginmanag": [0, 281, 441], "collectinterfacedescript": [0, 281, 441], "pluginerror": [0, 281, 441], "runlog": [0, 4, 28, 60, 211, 315, 373, 380, 393, 441, 446, 451, 483, 489, 504], "concatenatelog": [0, 364, 441], "raw": [0, 364, 438, 441, 448], "extra": [0, 1, 4, 32, 58, 287, 309, 339, 342, 364, 372, 441, 442, 445, 452, 502, 504], "debug": [0, 2, 21, 329, 364, 396, 441, 445, 452, 483, 488, 502, 504], "warningreport": [0, 364, 393, 441], "setverbos": [0, 364, 393, 441, 452], "getverbos": [0, 364, 441], "deduplicationfilt": [0, 364, 441], "filter": [0, 19, 21, 55, 153, 155, 309, 327, 331, 345, 359, 364, 400, 407, 412, 467, 504], "runlogg": [0, 364, 441], "fmt": [0, 364, 373, 396, 466], "allowstopdupl": [0, 364], "flush": [0, 364, 415, 483], "getduplicatesfilt": [0, 364], "nulllogg": [0, 364, 441], "addhandl": [0, 364], "createlogdir": [0, 364, 393, 441], "logfactori": [0, 364, 441], "k": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508], "class": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 26, 27, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 149, 150, 151, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 214, 215, 218, 219, 223, 224, 225, 227, 229, 232, 233, 234, 236, 238, 239, 240, 243, 245, 247, 248, 250, 252, 254, 255, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 272, 276, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 312, 313, 314, 315, 316, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 407, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 445, 447, 448, 450, 451, 452, 482, 483, 485, 488, 490, 491, 492, 493, 502, 505], "simpl": [1, 3, 6, 15, 31, 37, 70, 74, 79, 80, 86, 93, 104, 113, 114, 151, 152, 160, 182, 195, 214, 238, 239, 281, 283, 286, 292, 323, 328, 332, 340, 347, 349, 353, 371, 392, 393, 395, 397, 415, 424, 429, 433, 437, 445, 448, 452, 455, 462, 478, 480, 483, 488, 489, 493, 494, 495, 502], "histor": [1, 3, 5, 6, 94, 306, 331, 332, 348, 364, 414, 445, 494, 502], "fun": [1, 219], "fact": [1, 329, 448, 493], "pattern": [1, 47, 55, 78, 165, 166, 214, 250, 309, 340, 355, 365, 434, 438, 445, 492, 498, 502], "mani": [1, 3, 7, 9, 19, 21, 34, 44, 47, 55, 60, 66, 104, 144, 152, 155, 163, 165, 166, 169, 200, 214, 226, 238, 243, 250, 254, 286, 304, 309, 315, 328, 329, 331, 339, 340, 342, 344, 345, 353, 365, 366, 379, 406, 407, 415, 433, 438, 444, 445, 450, 451, 453, 473, 476, 478, 479, 480, 481, 482, 483, 484, 487, 489, 490, 494, 495, 498, 499, 502, 504, 508], "wai": [1, 3, 5, 6, 10, 21, 45, 47, 49, 55, 89, 104, 151, 152, 163, 165, 183, 204, 214, 238, 250, 281, 283, 286, 309, 316, 328, 329, 331, 340, 342, 345, 353, 360, 363, 364, 372, 388, 408, 409, 415, 442, 445, 449, 450, 452, 479, 480, 481, 483, 487, 490, 493, 496, 502, 505, 508], "what": [1, 3, 4, 5, 9, 15, 19, 31, 32, 89, 104, 152, 153, 155, 162, 166, 198, 205, 214, 219, 220, 243, 254, 261, 281, 283, 286, 291, 310, 329, 331, 337, 342, 345, 346, 353, 365, 377, 397, 404, 407, 409, 417, 438, 443, 444, 445, 446, 447, 448, 452, 480, 487, 488, 490, 491, 493, 502, 504], "made": [1, 3, 5, 6, 44, 46, 55, 85, 104, 152, 243, 283, 286, 287, 288, 309, 315, 316, 329, 346, 379, 398, 401, 415, 433, 445, 448, 450, 452, 458, 480, 482, 483, 487, 489, 493, 494, 502], "heavi": [1, 61, 101, 153, 155, 286, 309, 329, 400, 412, 414, 479, 491, 498, 499, 500, 502], "e": [1, 3, 4, 5, 7, 8, 9, 21, 26, 32, 37, 47, 60, 77, 78, 79, 89, 93, 95, 96, 99, 142, 151, 152, 153, 154, 155, 160, 162, 163, 165, 166, 167, 175, 195, 200, 201, 202, 203, 204, 220, 226, 238, 239, 243, 250, 254, 281, 282, 283, 286, 287, 290, 291, 303, 306, 309, 313, 314, 316, 322, 328, 329, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 344, 345, 364, 366, 371, 372, 380, 396, 400, 407, 408, 411, 412, 415, 438, 442, 444, 445, 447, 448, 451, 474, 479, 480, 481, 482, 483, 487, 489, 492, 493, 498, 499, 502, 505, 508], "g": [1, 3, 5, 7, 9, 21, 32, 37, 47, 60, 77, 78, 79, 80, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 116, 133, 134, 135, 136, 137, 139, 140, 142, 151, 153, 154, 155, 160, 162, 163, 165, 167, 169, 175, 178, 184, 195, 200, 201, 202, 203, 204, 220, 226, 235, 238, 239, 250, 254, 259, 281, 283, 286, 287, 290, 291, 303, 306, 309, 316, 322, 328, 329, 331, 332, 333, 337, 338, 340, 342, 344, 345, 364, 372, 380, 396, 400, 407, 411, 412, 415, 444, 445, 447, 448, 451, 471, 474, 479, 480, 481, 482, 483, 487, 489, 490, 492, 493, 498, 499, 500, 502, 505, 508], "take": [1, 8, 19, 28, 34, 48, 56, 108, 133, 145, 151, 173, 202, 204, 205, 214, 219, 238, 239, 250, 281, 283, 286, 309, 329, 340, 342, 374, 396, 398, 408, 412, 415, 438, 447, 448, 449, 450, 451, 452, 480, 482, 487, 489, 490, 500, 502, 506], "bit": [1, 20, 33, 56, 162, 166, 173, 243, 281, 283, 286, 306, 309, 335, 404, 415, 448, 451, 476, 489, 493, 497, 503, 504], "effort": [1, 44, 286, 320, 328, 340, 408, 452, 480, 502], "refactor": [1, 290, 332, 442, 451, 485], "through": [1, 14, 32, 47, 69, 77, 113, 151, 152, 154, 155, 163, 167, 172, 177, 178, 179, 201, 202, 204, 205, 238, 243, 281, 283, 286, 303, 306, 309, 322, 328, 329, 331, 335, 337, 338, 339, 340, 342, 343, 344, 347, 354, 359, 360, 372, 374, 388, 395, 396, 400, 408, 412, 424, 436, 438, 445, 446, 447, 448, 450, 451, 452, 479, 480, 481, 483, 487, 489, 493, 496, 497, 498, 500, 502, 504, 505, 508], "highest": [1, 216, 219, 220, 241, 283, 348, 396, 467, 487, 498, 500, 502], "level": [1, 3, 4, 5, 26, 27, 32, 78, 79, 80, 155, 162, 165, 171, 173, 176, 200, 205, 219, 224, 239, 243, 245, 252, 259, 281, 286, 290, 291, 293, 297, 306, 309, 313, 315, 322, 328, 329, 333, 339, 345, 346, 347, 348, 353, 360, 364, 366, 367, 379, 407, 445, 448, 450, 451, 467, 480, 483, 489, 490, 491, 492, 493, 498, 500, 502, 504], "abstract": [1, 23, 26, 38, 43, 47, 49, 66, 78, 139, 151, 155, 165, 166, 173, 175, 250, 258, 306, 308, 309, 319, 337, 339, 340, 345, 354, 373, 489], "happen": [1, 2, 47, 58, 144, 145, 151, 155, 212, 219, 220, 250, 254, 281, 286, 301, 309, 316, 328, 329, 342, 365, 445, 447, 448, 450, 452, 490, 502, 504], "mostli": [1, 3, 5, 6, 58, 137, 250, 281, 293, 309, 316, 366, 380, 393, 395, 411, 476, 480, 494], "subclass": [1, 9, 49, 56, 60, 66, 74, 78, 79, 145, 162, 165, 178, 203, 219, 227, 239, 250, 254, 257, 258, 280, 281, 283, 303, 306, 308, 309, 316, 328, 331, 337, 342, 344, 345, 346, 372, 380, 403, 415, 438, 443, 445, 447, 448, 483, 489, 502], "free": [1, 104, 162, 286, 353, 412, 414, 447, 485, 502], "adopt": [1, 346, 447], "throw": [1, 483], "awai": [1, 335], "start": [1, 3, 6, 9, 26, 78, 155, 165, 172, 204, 219, 238, 239, 243, 250, 254, 310, 328, 329, 338, 340, 349, 396, 397, 398, 406, 407, 408, 412, 414, 415, 433, 438, 444, 445, 446, 447, 449, 450, 451, 452, 458, 459, 460, 481, 483, 484, 488, 492, 493, 499, 500, 502, 504, 508], "scratch": [1, 77, 286, 474, 487, 489, 493, 494, 502], "thei": [1, 4, 5, 34, 47, 56, 66, 77, 78, 79, 104, 125, 144, 151, 152, 155, 165, 172, 174, 175, 200, 202, 204, 205, 208, 214, 216, 220, 223, 236, 239, 243, 245, 250, 254, 265, 281, 283, 286, 287, 288, 293, 301, 303, 309, 310, 313, 329, 331, 333, 337, 339, 340, 341, 342, 344, 345, 346, 349, 353, 355, 360, 363, 365, 373, 374, 378, 379, 396, 398, 408, 415, 417, 430, 443, 444, 445, 447, 448, 450, 451, 452, 474, 480, 482, 483, 487, 489, 492, 493, 494, 498, 502, 504], "do": [1, 3, 4, 7, 15, 19, 20, 21, 27, 34, 44, 45, 46, 47, 49, 50, 58, 60, 64, 77, 78, 79, 104, 129, 151, 152, 153, 155, 162, 163, 165, 169, 200, 201, 214, 219, 220, 238, 243, 281, 283, 286, 309, 313, 316, 322, 328, 329, 331, 337, 339, 340, 341, 342, 344, 346, 363, 364, 373, 379, 386, 388, 389, 398, 401, 402, 407, 408, 409, 415, 421, 422, 430, 438, 442, 443, 445, 446, 447, 448, 450, 452, 467, 480, 481, 482, 487, 489, 490, 492, 493, 494, 500, 502, 504, 508], "wish": [1, 3, 4, 5, 175, 243, 287, 288, 438, 447, 487, 489], "For": [1, 3, 4, 5, 7, 8, 9, 19, 26, 44, 49, 55, 56, 60, 77, 78, 103, 104, 139, 145, 151, 152, 153, 163, 164, 165, 169, 175, 182, 204, 207, 219, 239, 250, 254, 281, 286, 288, 291, 292, 303, 304, 305, 306, 309, 310, 315, 316, 322, 328, 329, 331, 332, 335, 337, 339, 340, 342, 345, 346, 353, 360, 372, 396, 397, 404, 407, 408, 415, 417, 438, 442, 444, 445, 447, 448, 450, 451, 452, 459, 460, 476, 480, 487, 489, 490, 491, 492, 493, 494, 497, 498, 500, 502, 504, 505], "descript": [1, 20, 21, 23, 37, 39, 45, 60, 66, 70, 104, 114, 165, 166, 195, 287, 291, 309, 329, 342, 345, 372, 411, 413, 415, 443, 450, 451, 452, 459, 480, 483, 487, 489, 493, 497, 498, 499, 500, 502, 504, 507], "can": [1, 3, 4, 5, 6, 8, 9, 10, 14, 16, 19, 21, 26, 32, 42, 44, 45, 46, 47, 48, 50, 55, 56, 58, 60, 61, 65, 66, 76, 77, 78, 79, 86, 89, 93, 104, 125, 129, 144, 151, 152, 155, 160, 162, 163, 165, 166, 167, 169, 172, 173, 175, 177, 179, 182, 187, 188, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205, 208, 211, 212, 213, 214, 215, 216, 218, 219, 220, 226, 227, 238, 239, 243, 245, 247, 250, 254, 257, 259, 264, 265, 269, 272, 281, 283, 286, 287, 290, 291, 292, 297, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 313, 316, 322, 324, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 340, 342, 344, 345, 346, 349, 353, 354, 358, 360, 363, 364, 366, 372, 373, 374, 377, 379, 380, 386, 389, 391, 392, 393, 395, 396, 398, 400, 403, 404, 406, 407, 408, 411, 412, 415, 417, 423, 433, 435, 438, 442, 443, 444, 445, 447, 448, 450, 451, 452, 459, 460, 473, 474, 475, 476, 479, 480, 481, 482, 483, 485, 487, 489, 490, 492, 493, 494, 497, 502, 503, 504, 505, 506, 508], "program": [1, 116, 342, 343, 374, 449, 451, 452, 479, 480, 489, 492, 502], "actual": [1, 3, 5, 34, 45, 77, 78, 163, 165, 166, 204, 207, 212, 215, 219, 238, 239, 286, 299, 302, 306, 309, 316, 332, 337, 338, 339, 340, 342, 345, 366, 373, 379, 397, 412, 438, 442, 443, 447, 452, 467, 476, 483, 489, 493, 494, 502], "appropri": [1, 3, 7, 20, 21, 26, 32, 47, 58, 76, 78, 154, 162, 165, 175, 178, 211, 228, 236, 260, 275, 281, 288, 289, 322, 328, 342, 354, 386, 389, 395, 438, 448, 459, 460, 480, 481, 489, 502, 508], "__main__": [1, 445, 447, 474, 476], "expect": [1, 3, 4, 6, 31, 74, 79, 101, 149, 159, 162, 166, 169, 197, 217, 219, 220, 238, 243, 254, 264, 281, 283, 287, 292, 297, 303, 309, 315, 317, 322, 324, 329, 330, 354, 361, 364, 379, 388, 403, 409, 410, 415, 445, 447, 448, 453, 478, 487, 489, 490, 492, 495, 502, 505], "m": [1, 39, 66, 69, 70, 77, 80, 83, 92, 93, 95, 96, 97, 99, 101, 104, 112, 113, 129, 131, 132, 133, 136, 142, 165, 166, 171, 175, 340, 389, 396, 408, 415, 422, 443, 445, 449, 451, 452, 473, 481, 482, 489, 492, 494, 497, 498, 500, 504, 508], "myapp": [1, 443, 447, 489], "grab": [1, 14, 19, 152, 283, 366, 487, 504], "ridabl": 1, "develop": [1, 21, 47, 76, 144, 152, 219, 243, 281, 282, 286, 309, 315, 331, 346, 352, 374, 398, 408, 413, 442, 443, 444, 445, 447, 451, 452, 474, 479, 480, 489, 494, 502, 505], "dict": [1, 3, 5, 6, 21, 47, 49, 78, 79, 104, 155, 160, 166, 169, 200, 202, 219, 238, 239, 245, 254, 281, 282, 289, 291, 292, 303, 306, 309, 312, 316, 317, 322, 329, 330, 342, 344, 345, 350, 360, 371, 373, 396, 400, 404, 413, 414, 415, 433, 476, 492], "dictionari": [1, 3, 4, 5, 47, 78, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142, 152, 153, 155, 160, 169, 195, 219, 238, 239, 241, 243, 245, 254, 281, 290, 291, 303, 309, 317, 322, 328, 329, 330, 342, 344, 345, 350, 360, 366, 371, 372, 396, 400, 404, 407, 414, 415, 433, 445, 450, 483, 491, 502, 504], "renam": [1, 47, 214, 281, 329, 343, 348, 349, 373, 415, 421, 451, 482, 485, 487, 489, 492], "render": [1, 3, 5, 22, 23, 26, 27, 45, 315, 442, 447, 449, 450], "It": [1, 3, 4, 5, 9, 15, 19, 20, 21, 31, 43, 47, 56, 77, 79, 81, 83, 85, 86, 89, 90, 92, 93, 95, 96, 97, 99, 101, 104, 105, 111, 112, 113, 116, 137, 140, 142, 151, 152, 153, 163, 166, 169, 175, 178, 179, 202, 204, 214, 218, 219, 238, 239, 243, 254, 259, 281, 282, 283, 286, 290, 292, 309, 313, 315, 328, 329, 334, 335, 338, 339, 340, 341, 344, 345, 346, 347, 353, 359, 364, 366, 372, 380, 406, 407, 408, 409, 411, 412, 414, 445, 446, 447, 450, 451, 469, 479, 480, 487, 489, 493, 496, 498, 501, 502, 504], "also": [1, 3, 4, 5, 8, 9, 33, 44, 47, 49, 61, 66, 77, 79, 86, 104, 151, 152, 155, 163, 165, 166, 172, 178, 179, 201, 202, 204, 212, 216, 218, 219, 236, 238, 243, 250, 252, 254, 264, 281, 283, 286, 292, 305, 306, 309, 320, 322, 329, 331, 332, 335, 339, 342, 344, 345, 347, 349, 372, 387, 397, 404, 407, 408, 412, 415, 438, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 465, 466, 469, 472, 474, 479, 480, 481, 482, 485, 487, 489, 492, 493, 494, 496, 497, 498, 502, 504, 508], "perform": [1, 3, 5, 9, 19, 20, 46, 47, 50, 55, 60, 61, 65, 76, 77, 78, 87, 104, 151, 152, 165, 169, 202, 203, 211, 214, 218, 219, 226, 227, 228, 229, 230, 232, 233, 234, 235, 239, 250, 254, 281, 286, 287, 292, 309, 313, 315, 316, 328, 329, 331, 340, 344, 345, 354, 372, 379, 386, 407, 408, 411, 413, 445, 448, 451, 454, 457, 459, 464, 478, 479, 480, 482, 487, 489, 491, 492, 493, 495, 498, 502, 503, 504, 505], "result": [1, 3, 5, 9, 19, 21, 26, 37, 47, 56, 61, 78, 82, 104, 120, 123, 130, 144, 151, 163, 165, 167, 183, 197, 201, 214, 226, 238, 239, 245, 250, 252, 254, 280, 281, 286, 293, 296, 303, 309, 313, 315, 322, 328, 329, 344, 345, 372, 377, 398, 407, 409, 415, 433, 438, 445, 448, 450, 452, 467, 479, 480, 481, 485, 488, 489, 498, 502, 503, 504, 505, 508], "cach": [1, 19, 47, 104, 129, 201, 280, 283, 306, 309, 327, 328, 329, 354, 373, 409, 427, 492, 502], "somewhat": [1, 4, 43, 165, 250, 303, 309, 329, 339, 340, 452, 480, 489, 502], "expens": [1, 78, 280, 286, 309, 448], "detect": [1, 3, 5, 7, 9, 77, 280, 281, 301, 345, 415], "chang": [1, 3, 4, 5, 19, 47, 48, 77, 79, 104, 108, 151, 155, 173, 175, 212, 226, 236, 254, 281, 283, 286, 287, 292, 303, 306, 309, 312, 313, 314, 315, 316, 320, 324, 328, 329, 335, 337, 338, 340, 344, 345, 364, 372, 377, 379, 401, 402, 408, 413, 415, 433, 442, 443, 445, 446, 448, 451, 452, 464, 480, 481, 487, 489, 490, 492, 497, 498, 502, 505, 506, 508], "invalid": [1, 3, 56, 58, 78, 145, 146, 254, 286, 297, 301, 306, 309, 342, 354, 393, 395, 399, 424, 440, 452, 482, 483, 487, 492, 502], "recomput": [1, 104, 238, 286, 303, 306, 309], "specifi": [1, 2, 3, 5, 6, 13, 14, 15, 16, 17, 22, 30, 31, 34, 35, 36, 39, 41, 42, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 142, 149, 150, 155, 157, 158, 159, 160, 161, 163, 166, 173, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 204, 210, 211, 223, 224, 225, 232, 233, 234, 236, 238, 239, 240, 243, 245, 247, 248, 250, 252, 254, 257, 258, 259, 264, 265, 266, 267, 268, 269, 272, 279, 283, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 306, 309, 314, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 404, 411, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 450, 452, 460, 470, 474, 482, 483, 485, 487, 488, 494, 497, 498, 502, 504, 505], "pass": [1, 3, 5, 6, 8, 9, 19, 25, 31, 43, 47, 56, 58, 77, 78, 79, 151, 155, 166, 198, 214, 238, 281, 283, 286, 287, 291, 309, 314, 322, 329, 335, 337, 340, 344, 345, 359, 365, 366, 372, 373, 374, 379, 390, 400, 401, 408, 436, 438, 443, 444, 447, 448, 452, 473, 476, 479, 492, 502], "pluginpath": 1, "These": [1, 4, 5, 19, 26, 34, 46, 48, 49, 60, 78, 108, 152, 155, 162, 163, 175, 200, 204, 206, 208, 216, 219, 223, 227, 239, 243, 245, 247, 250, 259, 281, 283, 291, 303, 304, 309, 316, 320, 328, 329, 331, 335, 342, 345, 369, 371, 372, 374, 380, 389, 397, 422, 430, 445, 448, 450, 451, 452, 479, 480, 481, 482, 489, 490, 493, 498, 502, 503, 504, 505, 506, 508], "mai": [1, 3, 4, 5, 19, 20, 26, 32, 33, 37, 43, 44, 46, 47, 49, 50, 55, 58, 60, 66, 69, 78, 79, 81, 104, 108, 151, 152, 153, 154, 155, 163, 165, 166, 173, 200, 203, 204, 208, 211, 214, 215, 219, 236, 239, 243, 245, 250, 254, 281, 283, 286, 287, 288, 291, 303, 306, 308, 309, 310, 313, 315, 316, 328, 329, 331, 332, 333, 337, 340, 342, 344, 345, 349, 355, 364, 365, 374, 386, 389, 393, 395, 404, 407, 412, 414, 438, 443, 445, 447, 450, 451, 452, 465, 480, 481, 482, 483, 487, 489, 492, 493, 494, 497, 498, 499, 502, 503, 504, 505, 508], "startup": [1, 204, 211], "full": [1, 3, 5, 10, 14, 19, 28, 47, 49, 53, 55, 56, 59, 60, 79, 89, 163, 167, 200, 201, 204, 239, 250, 286, 291, 292, 305, 309, 310, 315, 316, 324, 327, 329, 338, 339, 340, 347, 350, 358, 360, 361, 366, 373, 378, 397, 411, 412, 414, 417, 421, 445, 447, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 487, 488, 489, 493, 494, 497, 498, 500, 502, 504, 507, 508], "namespac": [1, 9, 39, 79, 125, 212, 281, 345, 420, 447, 451, 483, 489, 502], "There": [1, 3, 5, 10, 21, 60, 78, 152, 165, 169, 184, 215, 224, 236, 243, 250, 286, 287, 292, 303, 315, 328, 329, 332, 342, 345, 350, 391, 407, 415, 444, 445, 448, 450, 451, 483, 489, 492, 493, 494, 496, 502, 504], "comma": [1, 451], "between": [1, 3, 4, 5, 6, 14, 19, 50, 64, 77, 78, 104, 160, 162, 163, 165, 166, 172, 175, 200, 202, 203, 204, 219, 220, 224, 238, 243, 250, 264, 281, 283, 286, 287, 292, 305, 309, 310, 320, 322, 323, 328, 329, 331, 335, 337, 338, 339, 340, 342, 345, 354, 372, 379, 396, 402, 406, 408, 412, 415, 440, 448, 450, 451, 466, 479, 480, 482, 483, 487, 489, 490, 491, 492, 493, 497, 498, 499, 502, 504, 505, 506], "individu": [1, 3, 5, 19, 46, 55, 60, 72, 78, 155, 204, 205, 219, 236, 243, 245, 286, 293, 309, 316, 327, 331, 354, 374, 398, 448, 451, 487, 488, 493, 502], "dot": [1, 340, 433, 449, 489], "repres": [1, 3, 5, 8, 46, 70, 77, 94, 104, 151, 153, 155, 162, 165, 169, 175, 200, 201, 202, 214, 219, 220, 238, 239, 243, 245, 250, 253, 254, 255, 264, 281, 282, 283, 286, 287, 289, 291, 304, 305, 306, 308, 309, 328, 329, 330, 333, 335, 337, 338, 339, 340, 342, 345, 348, 354, 355, 363, 365, 397, 404, 415, 445, 483, 484, 487, 489, 493, 494, 497, 498, 500, 502, 504], "stuff": [1, 5, 47, 287, 398, 402, 438, 448, 451, 452], "plugindir": 1, "pluginmod": 1, "plugincl": 1, "whatev": [1, 3, 4, 7, 55, 66, 214, 346, 398, 401, 408, 447, 448, 489, 502], "plugmod2": 1, "plugcls2": 1, "linux": [1, 28, 31, 480, 481, 483, 485, 489, 504, 508], "unix": [1, 489], "py": [1, 3, 6, 28, 119, 125, 155, 201, 206, 207, 212, 216, 219, 223, 309, 352, 353, 360, 389, 411, 422, 423, 425, 434, 436, 442, 445, 447, 448, 451, 452, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 482, 483, 485, 487, 493, 495, 502, 504], "meant": [1, 155, 281, 306, 328, 330, 366, 430, 444, 450, 452, 480, 494, 497], "taken": [1, 238, 239, 309, 338, 342, 346, 354, 438, 492, 494], "though": [1, 4, 101, 165, 200, 252, 286, 309, 341, 353, 397, 415, 433, 438, 445, 452, 482, 489, 502], "public": [1, 4, 56, 80, 131, 132, 133, 165, 175, 309, 415, 446, 452, 482], "idea": [1, 208, 297, 306, 330, 348, 438, 443, 447, 448, 451, 480, 489], "differ": [1, 3, 4, 5, 7, 14, 21, 28, 47, 50, 55, 77, 78, 79, 82, 104, 125, 162, 165, 167, 173, 175, 193, 197, 203, 204, 206, 208, 214, 224, 235, 236, 238, 239, 243, 250, 254, 257, 283, 286, 292, 293, 298, 306, 309, 310, 314, 316, 322, 328, 329, 331, 338, 339, 342, 349, 353, 360, 366, 379, 386, 397, 401, 404, 408, 409, 412, 415, 420, 433, 448, 450, 451, 452, 459, 480, 483, 487, 489, 490, 493, 494, 497, 498, 502, 504, 505, 506], "regular": [1, 39, 47, 165, 178, 179, 338, 340, 415, 434, 438, 489, 494, 502], "becaus": [1, 2, 3, 5, 10, 14, 15, 19, 37, 56, 74, 77, 93, 104, 155, 160, 162, 163, 166, 173, 175, 197, 200, 202, 204, 216, 219, 226, 239, 241, 250, 254, 281, 283, 286, 287, 303, 305, 306, 309, 313, 315, 328, 329, 335, 337, 338, 339, 340, 345, 358, 363, 372, 388, 395, 396, 397, 402, 408, 409, 413, 414, 415, 438, 444, 447, 448, 450, 467, 480, 481, 487, 492, 502, 508], "As": [1, 3, 5, 47, 55, 58, 79, 135, 165, 227, 281, 286, 293, 306, 309, 316, 331, 342, 396, 397, 420, 445, 447, 452, 480, 486, 487, 490, 493, 494, 498, 502, 504], "restrict": [1, 55, 201, 281, 283, 309, 316, 329, 342, 502, 505], "flexibl": [1, 3, 204, 214, 281, 328, 467, 480, 482, 489, 502], "power": [1, 28, 56, 95, 96, 99, 139, 144, 165, 167, 177, 178, 200, 204, 211, 212, 216, 218, 219, 220, 236, 238, 250, 252, 254, 286, 309, 316, 328, 329, 342, 365, 366, 396, 397, 437, 438, 445, 447, 450, 475, 480, 483, 487, 489, 492, 493, 494, 497, 498, 500, 502, 503, 504, 507], "usual": [1, 3, 5, 34, 79, 103, 155, 159, 175, 200, 219, 250, 281, 286, 329, 331, 345, 396, 447, 451, 452, 482, 494, 502], "textual": [1, 474, 494], "screen": [1, 412, 481, 489, 508], "want": [1, 2, 3, 5, 7, 10, 21, 32, 47, 55, 74, 78, 79, 104, 144, 162, 165, 166, 169, 173, 178, 212, 214, 219, 236, 238, 250, 254, 281, 283, 286, 291, 293, 303, 306, 309, 310, 328, 329, 342, 345, 346, 349, 353, 363, 364, 366, 396, 397, 404, 408, 412, 415, 423, 442, 445, 446, 447, 448, 450, 451, 452, 474, 480, 481, 487, 489, 492, 494, 502, 504, 505, 508], "handl": [2, 3, 5, 6, 14, 16, 26, 28, 43, 44, 47, 55, 60, 77, 78, 79, 92, 104, 151, 160, 162, 166, 205, 219, 224, 225, 236, 238, 281, 283, 286, 290, 291, 309, 317, 329, 331, 337, 340, 345, 353, 364, 372, 380, 396, 399, 407, 421, 434, 438, 480, 482, 483, 485, 487, 490, 494, 497, 502], "persist": [2, 3, 6, 331, 342, 445, 450, 480, 483], "static": [2, 3, 5, 8, 9, 10, 14, 16, 21, 27, 43, 55, 58, 60, 70, 78, 82, 151, 200, 204, 205, 208, 215, 218, 219, 229, 236, 250, 270, 276, 281, 282, 283, 286, 303, 309, 316, 328, 334, 335, 337, 338, 340, 341, 345, 372, 374, 377, 379, 382, 392, 395, 397, 398, 447, 458, 479, 480, 485], "cmd": [2, 218, 219, 281, 389, 448], "bool": [2, 3, 5, 6, 25, 28, 47, 55, 66, 78, 104, 155, 166, 167, 175, 201, 204, 211, 214, 219, 236, 239, 250, 254, 281, 283, 286, 291, 292, 293, 303, 306, 309, 313, 314, 316, 322, 328, 329, 332, 334, 335, 337, 338, 340, 341, 344, 345, 363, 365, 366, 372, 373, 374, 392, 396, 398, 401, 408, 411, 412, 414, 415, 438, 439, 485], "certain": [2, 60, 152, 204, 238, 250, 281, 283, 286, 292, 309, 310, 320, 331, 345, 374, 380, 396, 447, 448, 450, 459, 480, 482, 489, 492, 493, 502, 504], "action": [2, 15, 39, 66, 70, 211, 259, 306, 322, 345, 374, 388, 398, 402, 413, 443, 445, 448, 450, 483], "memori": [2, 3, 4, 5, 6, 19, 21, 47, 77, 78, 152, 205, 214, 238, 250, 281, 309, 329, 340, 342, 407, 412, 414, 448, 483, 485, 494, 497, 500, 502], "profil": [2, 21, 47, 398, 414, 444, 446, 451, 481, 483, 492, 502, 508], "small": [2, 173, 187, 192, 329, 331, 468, 479, 480, 483, 489, 490, 498, 502], "enough": [2, 37, 43, 56, 139, 160, 165, 169, 205, 220, 224, 286, 309, 322, 406, 407, 451, 452, 480, 490, 493, 500, 504], "don": [2, 3, 9, 19, 78, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 153, 155, 162, 204, 208, 219, 248, 281, 286, 306, 309, 329, 360, 366, 406, 407, 408, 415, 426, 430, 443, 446, 448, 450, 473, 481, 487, 502, 504, 508], "undon": 2, "so": [2, 3, 4, 5, 6, 9, 19, 20, 21, 33, 37, 43, 44, 47, 49, 77, 78, 89, 104, 129, 144, 151, 152, 153, 155, 162, 166, 169, 175, 178, 202, 204, 214, 215, 219, 220, 238, 241, 243, 245, 247, 257, 258, 281, 283, 286, 287, 290, 291, 292, 297, 301, 303, 304, 306, 309, 310, 313, 315, 316, 328, 329, 331, 335, 337, 338, 339, 340, 342, 344, 345, 346, 348, 349, 353, 364, 366, 373, 379, 380, 396, 404, 406, 407, 408, 409, 412, 414, 415, 438, 442, 444, 445, 447, 448, 449, 450, 451, 452, 458, 469, 476, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 498, 500, 502, 504, 507, 508], "r": [2, 3, 5, 6, 7, 9, 11, 15, 19, 20, 21, 25, 26, 27, 28, 32, 38, 43, 44, 45, 47, 58, 78, 92, 93, 115, 142, 151, 165, 166, 171, 175, 196, 197, 201, 204, 211, 215, 218, 219, 220, 224, 236, 238, 243, 250, 252, 254, 255, 257, 258, 259, 261, 281, 282, 286, 300, 305, 309, 310, 313, 316, 317, 319, 324, 328, 329, 330, 333, 338, 341, 342, 344, 347, 352, 360, 386, 389, 395, 396, 408, 412, 415, 445, 448, 450, 451, 458, 459, 460, 463, 466, 471, 476, 477, 478, 480, 482, 483, 487, 489, 492, 493, 494, 495, 502, 503, 504], "stage": [2, 25, 236, 261, 281, 450], "diagram": [2, 25, 155, 238, 303, 412, 442, 450, 483], "come": [2, 4, 44, 65, 77, 79, 104, 165, 172, 177, 200, 201, 203, 205, 212, 236, 250, 281, 286, 330, 342, 344, 345, 359, 390, 396, 404, 415, 438, 443, 445, 447, 452, 455, 462, 467, 476, 478, 480, 483, 487, 489, 490, 492, 493, 495, 502], "togeth": [2, 9, 45, 151, 201, 238, 239, 243, 286, 291, 333, 339, 346, 363, 438, 447, 450, 479, 489, 504], "end": [2, 3, 5, 6, 13, 19, 20, 21, 22, 25, 26, 45, 77, 78, 104, 152, 163, 165, 166, 169, 204, 252, 254, 261, 281, 290, 315, 339, 364, 386, 396, 397, 415, 445, 450, 452, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 490, 492, 493, 498, 502, 504, 506], "section": [2, 3, 5, 10, 22, 25, 26, 91, 136, 137, 152, 155, 163, 165, 167, 171, 173, 174, 176, 182, 195, 197, 199, 200, 201, 202, 212, 213, 224, 236, 238, 239, 243, 250, 252, 254, 259, 261, 264, 265, 266, 281, 283, 286, 291, 292, 297, 300, 309, 315, 329, 342, 350, 412, 414, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 462, 463, 466, 471, 472, 478, 480, 481, 482, 483, 486, 487, 493, 494, 495, 497, 498, 499, 504, 505, 506, 508], "creat": [2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 25, 26, 28, 30, 31, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 58, 59, 60, 61, 62, 66, 70, 74, 75, 77, 78, 104, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 137, 149, 150, 151, 153, 155, 157, 158, 159, 160, 161, 163, 165, 166, 167, 169, 171, 173, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 202, 203, 204, 210, 211, 218, 219, 223, 224, 225, 232, 233, 234, 238, 239, 245, 247, 248, 252, 254, 255, 257, 258, 261, 264, 265, 266, 267, 268, 269, 272, 279, 281, 283, 286, 287, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 309, 316, 322, 323, 324, 325, 326, 327, 328, 329, 332, 337, 339, 340, 342, 343, 344, 345, 346, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 372, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 442, 444, 445, 446, 447, 448, 450, 455, 462, 466, 467, 468, 474, 475, 478, 480, 481, 483, 485, 487, 488, 492, 493, 494, 495, 502, 504, 506, 507, 508], "graph": [2, 26, 414, 450, 466], "across": [2, 47, 56, 91, 162, 165, 171, 173, 176, 309, 329, 342, 349, 363, 379, 390, 406, 411, 412, 448, 480, 482, 491, 492, 493, 497, 502, 503, 504], "timenodegrouppattern": [2, 3, 5], "versionmajor": [2, 3, 5], "versionminor": [2, 3, 5], "open": [2, 3, 5, 6, 10, 45, 60, 77, 165, 166, 235, 329, 396, 401, 402, 442, 443, 444, 451, 476, 480, 481, 485, 486, 487, 493, 502, 504, 508], "isopen": [2, 3, 5], "writesystemattribut": [2, 3, 5, 15], "grablocalcommithash": [2, 3, 5], "splitdatabas": [2, 3, 5], "filenam": [2, 3, 5, 6, 74, 78, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 195, 204, 365, 391, 401, 411, 412, 450], "loadc": [2, 3, 5, 487], "loadblueprint": [2, 3, 5], "loadgeometri": [2, 3, 5], "writeinputstodb": [2, 3, 5], "readinputsfromdb": [2, 3, 5], "mergehistori": [2, 3, 5], "gentimestepgroup": [2, 3, 5], "getlayout": [2, 3, 5], "gentimestep": [2, 3, 5], "genauxiliarydata": [2, 3, 5], "getauxiliarydatapath": [2, 3, 5], "kei": [2, 3, 5, 19, 26, 47, 78, 104, 144, 155, 160, 166, 169, 197, 200, 202, 219, 238, 239, 242, 243, 245, 254, 265, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 303, 306, 308, 309, 312, 322, 329, 342, 344, 355, 360, 365, 366, 371, 396, 397, 400, 404, 412, 414, 415, 433, 450, 458, 466, 467, 481, 487, 491, 492, 497, 498, 500, 502, 508], "geth5group": [2, 3, 5], "hastimestep": [2, 3, 5], "writetodb": [2, 3, 5, 9, 487], "synctosharedfold": [2, 3, 5], "loadreadonli": [2, 3, 5], "gethistorybyloc": [2, 3, 5], "gethistoriesbyloc": [2, 3, 5], "gethistori": [2, 3, 5, 6, 504], "initdb": [2, 3, 6, 487], "writedbeverynod": [2, 3, 6], "closedb": [2, 3, 6], "preprestartrun": [2, 3, 6], "loadstat": [2, 3, 6, 203, 204], "comparedb3": [2, 3, 13], "outputwrit": [2, 3, 4], "diffresult": [2, 3, 4], "geth5groupnam": [2, 3, 5], "packspecialdata": [2, 3, 5, 345, 504], "unpackspecialdata": [2, 3, 5, 345, 504], "collectblocknumberdens": [2, 3, 5], "jaggedarrai": [2, 3, 5, 16, 485], "layout": [2, 3, 5, 17, 281, 287, 293, 315, 328, 339, 350, 397, 450, 502, 504], "replacenoneswithnonsens": [2, 3, 9], "replacenonsensewithnon": [2, 3, 9], "passivedbloadplugin": [2, 3], "passthroughyaml": [2, 3, 10], "typedef": [2, 3], "group": [2, 3, 4, 5, 9, 22, 23, 26, 34, 44, 47, 152, 153, 165, 167, 169, 173, 174, 175, 178, 179, 182, 184, 193, 197, 200, 201, 202, 204, 224, 236, 238, 239, 241, 243, 250, 252, 254, 264, 267, 281, 286, 289, 290, 297, 306, 309, 316, 328, 329, 340, 345, 363, 400, 414, 445, 448, 450, 451, 463, 466, 477, 478, 483, 485, 487, 494, 495, 498, 500, 502, 504], "imag": [2, 22, 23, 24, 26, 308, 315, 328, 398, 412, 414, 430, 446, 449, 467, 483], "html": [2, 21, 22, 23, 26, 31, 47, 70, 83, 101, 165, 173, 305, 345, 412, 439, 442, 446, 480, 496, 502], "htmlfile": [2, 22, 24], "tag": [2, 22, 24, 26, 155, 250, 316, 438, 452, 502], "head": [2, 22, 24, 26, 261, 329, 450, 480, 502], "bodi": [2, 22, 24, 66, 151, 479], "img": [2, 22, 24, 26], "b": [2, 10, 22, 24, 43, 49, 55, 82, 93, 95, 96, 99, 116, 136, 137, 153, 155, 162, 175, 184, 200, 201, 219, 220, 235, 238, 243, 250, 282, 283, 286, 299, 301, 309, 314, 328, 329, 331, 342, 346, 351, 355, 360, 408, 438, 440, 445, 448, 464, 466, 467, 471, 475, 482, 483, 487, 489, 492, 493, 494, 498, 500, 502, 503, 505], "p": [2, 3, 22, 24, 26, 80, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 103, 104, 105, 111, 112, 113, 115, 116, 120, 136, 140, 142, 153, 163, 169, 171, 175, 176, 286, 305, 306, 309, 314, 328, 342, 344, 360, 406, 415, 438, 443, 448, 450, 466, 467, 475, 483, 487, 489, 493, 497, 498, 500, 502, 504], "A": [2, 3, 5, 8, 9, 10, 20, 22, 23, 24, 26, 27, 28, 32, 39, 43, 44, 46, 47, 55, 56, 58, 66, 70, 78, 79, 80, 83, 90, 93, 104, 105, 108, 112, 125, 137, 138, 139, 145, 151, 152, 153, 154, 155, 160, 163, 165, 166, 167, 171, 173, 175, 198, 200, 201, 202, 204, 211, 214, 216, 218, 219, 220, 224, 235, 238, 239, 243, 245, 250, 254, 281, 282, 283, 286, 288, 289, 290, 291, 293, 295, 298, 299, 301, 303, 304, 305, 306, 308, 309, 313, 316, 317, 322, 328, 329, 330, 331, 332, 338, 339, 340, 341, 344, 345, 346, 348, 349, 351, 355, 363, 364, 366, 372, 374, 379, 386, 389, 392, 393, 395, 396, 397, 404, 408, 412, 414, 415, 420, 438, 440, 442, 445, 447, 450, 451, 452, 466, 474, 476, 479, 480, 482, 487, 488, 489, 491, 493, 494, 497, 498, 499, 502, 503, 504], "titl": [2, 22, 23, 24, 26, 46, 47, 55, 56, 214, 272, 366, 396, 412, 414, 443, 450, 465, 466, 487, 490, 491, 492, 502], "h1": [2, 22, 24, 26], "h2": [2, 22, 24, 26, 84], "h3": [2, 22, 24], "h4": [2, 22, 24, 26], "ul": [2, 22, 24], "li": [2, 22, 24, 153, 175, 254, 304, 309, 329, 438], "style": [2, 22, 24, 47, 55, 104, 147, 155, 166, 281, 329, 342, 344, 350, 366, 373, 451, 480, 483, 502], "div": [2, 22, 24, 26, 450], "caption": [2, 22, 24, 26, 261, 450], "tbodi": [2, 22, 24], "thead": [2, 22, 24], "tr": [2, 22, 24], "th": [2, 9, 22, 24, 26, 133, 153, 175, 204, 309, 340, 415, 445, 489, 498, 500, 502, 505], "td": [2, 22, 24, 82, 115], "span": [2, 22, 24, 335, 364], "footer": [2, 22, 24], "link": [2, 22, 24, 26, 104, 163, 204, 219, 286, 290, 293, 299, 303, 306, 309, 312, 313, 316, 323, 329, 339, 354, 433, 445, 450, 451, 452, 479, 482, 493, 498, 503], "encode64": [2, 22, 24, 26], "writestandardreporttempl": [2, 22, 24], "newreportutil": [2, 22, 450], "insertblueprintcont": [2, 22, 25], "insertgeneralreportcont": [2, 22, 25], "comprehensivebolcont": [2, 22, 25], "insertdesigncont": [2, 22, 25], "insertblockdesignreport": [2, 22, 25], "insertcoredesignreport": [2, 22, 25], "insertendoflifecont": [2, 22, 25], "insertblockdiagram": [2, 22, 25], "insertmetat": [2, 22, 25], "insertsettingsdata": [2, 22, 25], "getpindesignt": [2, 22, 25], "insertareafractionsreport": [2, 22, 25], "createdimensionreport": [2, 22, 25], "insertcoreandassemblymap": [2, 22, 25], "newreport": [2, 22, 25, 450, 483], "reportcont": [2, 22, 25, 26, 261, 281, 446], "reportnod": [2, 22, 26], "timeseri": [2, 22, 26, 30, 261, 446], "reportstag": [2, 22, 26, 261, 281, 450], "reportinterfac": [2, 22, 28, 47, 445], "reportingutil": [2, 22], "writewelcomehead": [2, 22, 28], "getnodenam": [2, 22, 28, 31], "getsysteminfo": [2, 22, 28, 31], "getinterfacestacksummari": [2, 22, 28], "writetightcouplingconvergencesummari": [2, 22, 28], "writeassemblymasssummari": [2, 22, 28], "writecyclesummari": [2, 22, 28], "setneutronbalancesreport": [2, 22, 28], "summarizepindesign": [2, 22, 28], "summarizepowerpeak": [2, 22, 28], "summarizepow": [2, 22, 28], "makecoredesignreport": [2, 22, 28], "makeblockdesignreport": [2, 22, 28], "makecoreandassemblymap": [2, 22, 28], "test_historytrack": [2, 33], "runtutorialnotebook": [2, 33, 34], "testhistorytrack": [2, 33, 34], "testhistorytrackernomodel": [2, 33, 34], "test_memoryprofil": [2, 33], "testmemoryprofil": [2, 33, 35], "klasscountertest": [2, 33, 35], "test_snapshot": [2, 33], "mockreactorparam": [2, 33, 36, 249, 251, 252], "mockreactor": [2, 33, 36, 164, 196, 197, 212, 249, 251, 252, 271, 272], "testsnapshotinterfac": [2, 33, 36], "dumper": [2, 37, 44, 45, 290], "visfiledump": [2, 37, 38, 44, 45], "visfileentrypoint": [2, 37, 39], "vtkmesh": [2, 37, 41, 43], "createreactorblockmesh": [2, 37, 43], "createreactorassemmesh": [2, 37, 43], "createblockmesh": [2, 37, 43], "createassemmesh": [2, 37, 43], "vtk": [2, 37, 43, 481, 482, 489, 508], "limit": [2, 3, 5, 37, 104, 155, 219, 226, 250, 254, 281, 286, 287, 310, 340, 341, 404, 438, 447, 451, 480, 482, 489, 493, 497, 498, 499, 502, 505, 506], "vtkdumper": [2, 37, 44], "xdmf": [2, 37, 42, 481, 482, 508], "xdmfdumper": [2, 37, 45], "tracker": [2, 34, 78, 414, 480], "add": [2, 4, 21, 22, 25, 26, 27, 43, 46, 47, 55, 56, 58, 66, 78, 104, 151, 153, 155, 171, 173, 176, 204, 208, 243, 250, 252, 261, 281, 282, 283, 286, 303, 309, 315, 316, 322, 324, 329, 330, 339, 342, 344, 345, 346, 348, 349, 353, 359, 363, 364, 366, 374, 380, 395, 396, 398, 411, 412, 414, 438, 442, 443, 444, 445, 448, 450, 451, 466, 476, 481, 482, 483, 485, 487, 489, 492, 494, 499, 502, 508], "eol": [2, 3, 32, 78, 204, 208, 218, 281, 445, 450, 487, 502], "track": [2, 3, 4, 6, 21, 44, 47, 153, 163, 167, 219, 243, 250, 261, 283, 286, 309, 316, 329, 344, 366, 393, 438, 442, 452, 482, 483, 502], "adddetailassembliesbol": [2, 19], "addallfuelassem": [2, 19], "adddetailassemsbyassemnum": [2, 19], "gettrackedparam": [2, 19], "adddetailassembli": [2, 19], "getdetailassembli": [2, 19], "getdetailblock": [2, 19], "filtertimeindic": [2, 19], "writeassemhistori": [2, 19], "preloadblockhistoryv": [2, 19], "unloadblockhistoryv": [2, 19], "getblockhistoryv": [2, 19], "gettimestep": [2, 19], "cleanarmifil": [2, 20], "cleanlastcyclefil": [2, 20], "displaymemoryusag": [2, 21], "checkforduplicateobjectsonarmimodel": [2, 21], "getreferr": [2, 21], "countobject": [2, 21], "minprocessmemoryinmb": [2, 21, 500], "maxprocessmemoryinmb": [2, 21, 500], "printusag": [2, 21], "activatedefaultsnapshot": [2, 32], "respons": [3, 9, 47, 55, 151, 254, 281, 288, 292, 304, 306, 329, 346, 452, 487, 489, 502], "disk": [3, 47, 165, 204, 214, 488], "progress": [3, 9, 214, 445, 480, 504], "period": [3, 77, 91, 153, 204, 282, 291, 332, 354, 451, 466, 474, 493, 498, 500, 502], "primari": [3, 6, 60, 78, 151, 182, 204, 205, 224, 281, 282, 313, 329, 331, 445, 447, 448, 451, 487, 489, 492, 497, 500, 502, 504], "output": [3, 4, 5, 20, 21, 44, 46, 47, 61, 65, 66, 68, 78, 144, 145, 173, 175, 188, 204, 214, 219, 250, 272, 286, 291, 309, 315, 316, 328, 337, 340, 350, 366, 378, 380, 393, 401, 402, 407, 409, 415, 421, 427, 433, 438, 442, 445, 449, 450, 480, 482, 483, 488, 492, 494, 496, 501, 502], "follow": [3, 4, 9, 19, 32, 144, 152, 163, 165, 201, 203, 204, 212, 219, 226, 243, 245, 281, 306, 309, 315, 322, 328, 329, 331, 335, 338, 346, 373, 379, 407, 408, 411, 413, 415, 438, 442, 443, 445, 447, 448, 450, 451, 452, 480, 481, 487, 488, 489, 491, 493, 494, 496, 502, 503, 504, 505, 506, 508], "analysi": [3, 5, 19, 21, 32, 47, 55, 79, 165, 176, 203, 204, 212, 214, 226, 235, 243, 281, 363, 397, 409, 414, 445, 447, 450, 459, 476, 479, 487, 489, 492, 493, 494, 502, 503], "restart": [3, 5, 6, 15, 20, 208, 218, 219, 250, 292, 396, 398, 445, 483, 504], "select": [3, 5, 37, 78, 165, 220, 238, 239, 243, 272, 292, 345, 365, 396, 407, 408, 412, 424, 433, 467, 480, 487, 491, 502], "relat": [3, 5, 15, 33, 44, 46, 50, 55, 60, 77, 139, 153, 169, 191, 200, 212, 227, 230, 238, 244, 262, 270, 277, 286, 309, 328, 342, 344, 345, 346, 368, 369, 370, 398, 408, 411, 447, 482, 484, 489, 492, 497, 498, 502, 506], "associ": [3, 5, 17, 26, 44, 47, 49, 63, 139, 144, 151, 153, 164, 212, 236, 243, 288, 309, 329, 330, 333, 339, 340, 342, 344, 345, 346, 374, 396, 445, 447, 474, 489, 497, 502, 504], "repeat": [3, 167, 174, 218, 219, 224, 281, 315, 316, 329, 340, 399, 408, 412, 438, 446, 450, 480, 482, 502, 505], "yourself": [3, 89, 152, 412, 451], "dry": [3, 5, 80, 502], "practic": [3, 5, 89, 162, 281, 306, 322, 345, 346, 374, 404, 444, 446, 448, 452, 480, 489, 502], "share": [3, 32, 169, 198, 204, 205, 214, 243, 283, 320, 342, 346, 379, 397, 448, 493, 494, 502], "major": [3, 204, 212, 287, 340, 342, 414, 445, 450, 452, 480], "you": [3, 5, 6, 7, 10, 19, 20, 21, 32, 39, 47, 55, 56, 58, 66, 70, 78, 89, 102, 104, 135, 152, 153, 154, 155, 162, 163, 165, 169, 172, 173, 178, 191, 198, 200, 204, 212, 214, 219, 238, 239, 245, 250, 281, 283, 286, 291, 293, 297, 303, 306, 309, 310, 329, 330, 338, 339, 346, 347, 349, 353, 364, 366, 374, 389, 396, 397, 406, 408, 411, 412, 413, 414, 415, 422, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 473, 474, 475, 478, 480, 481, 487, 488, 489, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 508], "1": [3, 9, 14, 15, 21, 26, 34, 43, 49, 54, 56, 65, 70, 74, 77, 78, 80, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 108, 110, 111, 112, 113, 116, 120, 125, 133, 135, 136, 137, 139, 140, 141, 142, 146, 147, 151, 153, 155, 159, 163, 166, 167, 169, 172, 173, 174, 175, 179, 182, 184, 187, 192, 197, 200, 204, 211, 219, 220, 235, 236, 238, 239, 245, 250, 252, 254, 259, 281, 283, 286, 291, 295, 298, 299, 301, 304, 305, 306, 308, 309, 312, 313, 315, 316, 320, 322, 324, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 345, 350, 352, 353, 354, 355, 363, 372, 373, 374, 388, 395, 396, 397, 398, 400, 404, 406, 407, 408, 413, 414, 415, 417, 423, 437, 438, 445, 450, 451, 452, 458, 459, 460, 466, 468, 469, 470, 473, 474, 476, 480, 486, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 502, 505, 506], "origin": [3, 4, 5, 8, 14, 39, 45, 47, 55, 151, 152, 154, 159, 165, 190, 191, 202, 204, 205, 236, 238, 248, 264, 286, 291, 303, 309, 312, 316, 322, 324, 327, 328, 329, 331, 335, 338, 339, 373, 377, 396, 397, 401, 406, 448, 452, 474, 480, 483, 489, 493, 494, 498, 499, 502, 504], "were": [3, 4, 5, 55, 77, 151, 165, 205, 206, 216, 219, 224, 243, 281, 286, 293, 306, 309, 320, 328, 329, 330, 331, 342, 346, 380, 445, 450, 451, 480, 482, 483, 484, 487, 489, 494, 502, 504], "sql": [3, 78], "2": [3, 4, 9, 14, 21, 26, 34, 36, 54, 56, 77, 78, 83, 84, 90, 92, 93, 95, 96, 99, 104, 108, 110, 112, 113, 123, 125, 133, 135, 136, 137, 139, 146, 151, 152, 153, 154, 155, 163, 167, 171, 172, 175, 178, 179, 188, 200, 201, 211, 219, 220, 235, 236, 238, 239, 245, 248, 250, 286, 291, 299, 303, 304, 305, 306, 309, 315, 316, 320, 322, 324, 329, 331, 332, 333, 335, 338, 339, 340, 341, 342, 345, 350, 352, 353, 354, 355, 360, 363, 374, 389, 396, 397, 400, 406, 407, 408, 413, 414, 415, 417, 422, 423, 434, 437, 438, 440, 445, 450, 451, 458, 460, 466, 467, 468, 470, 471, 473, 475, 476, 480, 486, 487, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 502, 504, 505], "storag": [3, 6, 23, 77, 281, 339, 342, 349, 359, 414, 502], "wa": [3, 4, 5, 6, 10, 37, 77, 80, 92, 104, 151, 155, 159, 165, 166, 169, 184, 187, 191, 192, 197, 204, 219, 220, 236, 254, 281, 286, 287, 293, 306, 309, 315, 329, 331, 338, 339, 340, 348, 373, 374, 380, 391, 398, 408, 411, 438, 440, 450, 451, 452, 474, 480, 482, 483, 484, 487, 489, 492, 493, 494, 497, 502, 503, 504], "hdf5": [3, 4, 5, 8, 11, 34, 45, 77, 345, 404, 482, 485, 489, 492, 504], "requir": [3, 14, 20, 31, 32, 34, 37, 39, 45, 49, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 104, 151, 154, 155, 163, 200, 204, 211, 214, 219, 224, 238, 239, 240, 243, 247, 250, 254, 281, 282, 283, 286, 288, 290, 291, 292, 297, 305, 309, 310, 316, 317, 320, 329, 331, 333, 334, 340, 342, 345, 350, 358, 363, 371, 372, 378, 379, 386, 389, 395, 402, 406, 409, 438, 442, 443, 444, 448, 450, 451, 476, 479, 481, 482, 483, 484, 489, 490, 491, 493, 494, 497, 500, 502, 507, 508], "less": [3, 49, 104, 155, 163, 166, 167, 204, 220, 286, 305, 306, 315, 329, 332, 337, 398, 406, 407, 408, 414, 415, 438, 450, 451, 482, 483, 489, 492, 502], "extern": [3, 78, 80, 169, 175, 204, 214, 218, 238, 239, 250, 272, 281, 329, 400, 408, 445, 447, 451, 479, 480, 483, 489, 498, 502, 504], "infrastructur": [3, 281, 444, 446, 480], "howev": [3, 5, 7, 8, 9, 49, 78, 152, 195, 238, 286, 292, 303, 309, 316, 329, 331, 337, 342, 345, 353, 389, 404, 415, 447, 449, 450, 451, 487, 489, 493, 502], "did": [3, 4, 306, 309, 339, 438, 482, 494], "ghost": 3, "could": [3, 4, 5, 37, 47, 49, 55, 56, 78, 104, 152, 160, 162, 163, 195, 198, 201, 204, 212, 236, 239, 243, 250, 254, 286, 287, 292, 306, 329, 341, 342, 345, 372, 396, 406, 407, 408, 409, 411, 412, 438, 450, 452, 480, 483, 487, 489, 492, 494, 497, 498, 502, 504], "long": [3, 5, 32, 39, 66, 70, 104, 173, 204, 281, 286, 309, 338, 396, 397, 398, 415, 433, 443, 450, 452, 480, 489], "dimens": [3, 4, 5, 8, 25, 28, 49, 56, 78, 92, 97, 104, 167, 235, 238, 283, 286, 287, 290, 291, 297, 303, 304, 306, 308, 309, 320, 322, 335, 340, 345, 352, 354, 386, 397, 445, 470, 479, 482, 483, 485, 487, 493, 498, 502, 503, 506], "consist": [3, 47, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 151, 155, 159, 165, 166, 169, 171, 173, 176, 184, 200, 212, 214, 238, 254, 283, 286, 292, 309, 315, 322, 329, 337, 353, 355, 379, 397, 415, 424, 438, 448, 451, 479, 480, 482, 483, 489, 493, 498, 502], "inconveni": 3, "prone": [3, 310, 331, 332, 346, 480], "kept": [3, 104, 331], "schema": [3, 239, 281, 297, 365, 371, 372, 377], "permit": [3, 5, 9, 283, 309, 404, 482], "entir": [3, 5, 10, 78, 104, 166, 204, 238, 281, 286, 288, 291, 309, 313, 329, 332, 349, 366, 401, 411, 415, 417, 438, 451, 452, 460, 493, 494, 500, 502, 504], "written": [3, 4, 5, 6, 8, 15, 19, 44, 45, 47, 55, 58, 165, 166, 170, 172, 174, 175, 177, 178, 179, 183, 184, 188, 190, 191, 211, 300, 339, 345, 359, 366, 412, 445, 450, 451, 452, 480, 482, 483, 487, 494, 502], "recov": [3, 9, 65, 322, 504], "just": [3, 5, 7, 9, 10, 19, 21, 33, 45, 46, 49, 58, 78, 79, 104, 113, 115, 144, 151, 152, 154, 162, 163, 165, 198, 205, 208, 216, 239, 250, 281, 282, 283, 286, 287, 291, 301, 303, 306, 309, 322, 328, 329, 337, 339, 340, 342, 353, 361, 364, 366, 393, 395, 396, 406, 407, 408, 412, 415, 429, 436, 438, 443, 447, 448, 450, 451, 452, 469, 480, 483, 487, 489, 491, 492, 493, 494, 502, 503, 504, 505], "improv": [3, 44, 47, 162, 281, 286, 331, 482, 483, 486, 502, 505], "strategi": [3, 45], "larg": [3, 14, 78, 85, 144, 220, 236, 239, 247, 281, 309, 310, 328, 329, 360, 379, 396, 402, 403, 406, 412, 445, 448, 451, 480, 482, 489, 493, 497, 502, 503], "attribut": [3, 4, 5, 8, 9, 10, 24, 26, 55, 66, 78, 104, 151, 153, 155, 162, 167, 169, 175, 200, 201, 202, 238, 239, 243, 259, 264, 265, 281, 282, 287, 288, 289, 290, 291, 292, 293, 306, 309, 316, 327, 328, 329, 330, 333, 342, 344, 345, 346, 359, 371, 380, 411, 413, 415, 429, 437, 438, 443, 445, 448, 451, 482, 483, 484, 487, 488, 489, 502, 504], "special": [3, 4, 5, 9, 32, 46, 79, 97, 104, 155, 162, 163, 166, 173, 204, 219, 238, 239, 269, 281, 290, 305, 309, 329, 342, 345, 364, 389, 398, 411, 415, 438, 442, 445, 450, 452, 479, 482, 487, 489, 493, 504], "string": [3, 5, 7, 10, 26, 31, 33, 39, 56, 66, 70, 78, 79, 155, 166, 172, 173, 177, 178, 179, 195, 201, 204, 205, 211, 214, 219, 239, 254, 261, 281, 283, 286, 288, 289, 290, 291, 292, 293, 298, 303, 306, 309, 322, 329, 331, 332, 337, 338, 342, 345, 352, 357, 364, 366, 371, 372, 373, 377, 379, 393, 396, 397, 398, 400, 407, 408, 410, 412, 413, 415, 433, 438, 448, 451, 452, 482, 493, 497, 498, 502, 504], "symbol": [3, 104, 152, 153, 154, 155, 157, 400], "c00n00": [3, 5, 487], "attr": [3, 4, 5, 24, 306, 309, 345, 346, 411], "5_linkeddim": 3, "support": [3, 5, 8, 9, 10, 19, 37, 43, 45, 47, 76, 78, 79, 86, 152, 155, 159, 162, 163, 165, 205, 206, 238, 243, 281, 286, 293, 316, 322, 335, 342, 345, 348, 350, 354, 364, 374, 393, 397, 404, 407, 415, 438, 445, 451, 452, 480, 482, 483, 485, 489, 494, 502, 504, 505, 506], "copi": [3, 5, 15, 32, 47, 78, 104, 151, 171, 173, 176, 204, 214, 227, 239, 241, 245, 250, 264, 272, 286, 291, 309, 328, 329, 339, 363, 366, 377, 396, 401, 407, 409, 411, 421, 442, 447, 451, 480, 482, 483, 484, 492, 493, 494, 502], "node": [3, 5, 6, 9, 10, 15, 19, 20, 21, 26, 27, 28, 32, 44, 60, 74, 77, 78, 151, 164, 175, 190, 201, 204, 205, 208, 211, 219, 236, 238, 250, 252, 254, 257, 283, 290, 292, 309, 329, 373, 389, 395, 396, 399, 402, 412, 414, 445, 448, 450, 479, 485, 487, 489, 498, 502, 504, 505, 507], "dataset": [3, 4, 5, 8, 45, 190, 504], "anoth": [3, 5, 32, 43, 47, 55, 56, 78, 133, 137, 144, 160, 163, 183, 195, 202, 219, 239, 250, 252, 281, 303, 306, 309, 310, 315, 316, 323, 328, 339, 340, 345, 374, 396, 408, 414, 415, 426, 438, 448, 450, 451, 452, 476, 480, 481, 485, 492, 499, 502, 506, 508], "refer": [3, 4, 5, 26, 47, 79, 80, 81, 83, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 102, 104, 105, 111, 112, 116, 133, 136, 137, 139, 140, 142, 151, 152, 153, 154, 155, 166, 174, 195, 219, 239, 248, 283, 286, 291, 306, 309, 312, 313, 314, 329, 333, 353, 354, 366, 379, 396, 412, 438, 442, 445, 447, 448, 450, 452, 453, 478, 481, 483, 484, 485, 493, 495, 498, 500, 502, 504, 506, 508], "maintain": [3, 104, 138, 154, 155, 169, 204, 283, 309, 322, 346, 424, 459, 480, 481, 482, 502, 508], "previou": [3, 5, 20, 78, 144, 175, 188, 203, 208, 219, 220, 250, 281, 286, 309, 372, 396, 412, 438, 445, 482, 489, 494, 498, 502, 505], "old": [3, 4, 5, 16, 144, 145, 147, 149, 166, 281, 287, 293, 306, 309, 315, 345, 348, 350, 365, 372, 395, 401, 451, 480, 482, 483, 484, 485, 502, 504, 505], "cannot": [3, 4, 78, 79, 104, 151, 155, 203, 238, 239, 303, 306, 309, 310, 342, 343, 345, 346, 347, 354, 373, 379, 396, 408, 412, 413, 415, 423, 487, 489, 492, 502], "compress": 3, "locat": [3, 5, 8, 9, 16, 17, 39, 43, 47, 55, 77, 78, 147, 214, 219, 220, 224, 281, 282, 283, 286, 291, 293, 296, 309, 313, 314, 322, 324, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 345, 349, 350, 352, 353, 360, 362, 363, 366, 379, 397, 403, 424, 438, 445, 467, 481, 482, 483, 485, 487, 492, 494, 497, 498, 500, 502, 504, 508], "allow": [3, 4, 5, 6, 7, 10, 21, 39, 45, 47, 55, 56, 60, 66, 70, 78, 79, 104, 151, 152, 159, 162, 163, 165, 167, 173, 201, 204, 214, 218, 219, 220, 243, 250, 280, 281, 286, 287, 290, 292, 298, 303, 309, 315, 317, 328, 329, 330, 331, 339, 342, 344, 345, 364, 365, 371, 372, 373, 374, 396, 397, 404, 408, 409, 411, 415, 443, 444, 445, 447, 450, 451, 452, 459, 467, 480, 482, 483, 485, 492, 493, 494, 502, 505], "multiindex": 3, "4": [3, 5, 9, 21, 34, 54, 56, 77, 78, 80, 81, 82, 83, 84, 90, 108, 111, 112, 125, 136, 137, 139, 152, 153, 155, 159, 163, 166, 175, 184, 219, 220, 235, 236, 239, 286, 291, 299, 315, 316, 324, 329, 331, 332, 335, 338, 340, 345, 353, 354, 355, 396, 407, 415, 423, 434, 437, 444, 448, 458, 466, 467, 469, 474, 475, 476, 480, 486, 487, 490, 491, 492, 493, 494, 502, 505, 506], "includ": [3, 5, 14, 26, 44, 47, 56, 61, 78, 79, 108, 137, 144, 152, 153, 163, 165, 169, 175, 182, 200, 204, 212, 215, 219, 235, 238, 239, 243, 250, 259, 261, 281, 286, 291, 292, 306, 309, 316, 328, 329, 331, 340, 342, 343, 346, 349, 355, 359, 360, 361, 369, 378, 396, 400, 404, 411, 415, 438, 442, 444, 445, 447, 451, 452, 459, 473, 476, 479, 480, 482, 483, 487, 489, 493, 496, 498, 502, 507], "compos": [3, 4, 23, 55, 332, 342, 348], "multipl": [3, 5, 26, 28, 47, 49, 50, 58, 61, 72, 77, 91, 151, 163, 175, 204, 214, 238, 239, 281, 286, 290, 296, 301, 306, 309, 314, 315, 316, 322, 323, 328, 329, 333, 339, 342, 353, 354, 357, 360, 363, 374, 393, 396, 408, 434, 448, 450, 451, 452, 480, 483, 487, 489, 492, 493, 497, 498, 499, 500, 502, 503], "have": [3, 4, 5, 6, 9, 13, 14, 15, 16, 17, 19, 26, 30, 31, 33, 34, 35, 36, 41, 42, 44, 45, 46, 47, 49, 53, 54, 55, 58, 59, 74, 75, 76, 77, 78, 79, 89, 104, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 144, 147, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 169, 175, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 204, 208, 210, 211, 212, 214, 218, 219, 220, 223, 224, 225, 232, 233, 234, 238, 239, 243, 247, 248, 252, 254, 257, 258, 261, 264, 265, 266, 267, 268, 269, 272, 279, 281, 283, 286, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 309, 313, 314, 315, 316, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 335, 337, 339, 340, 342, 344, 345, 346, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 372, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 407, 408, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 473, 474, 479, 480, 481, 483, 487, 488, 489, 492, 493, 494, 498, 500, 502, 503, 504, 505, 506, 508], "effici": [3, 9, 56, 152, 162, 200, 239, 309, 329, 332, 340, 344, 397, 459, 480, 483, 485, 493], "mean": [3, 4, 9, 92, 95, 96, 97, 99, 166, 214, 239, 257, 286, 309, 331, 338, 353, 366, 396, 406, 408, 445, 447, 451, 452, 480, 482, 493, 494, 497, 498, 502], "extract": [3, 5, 47, 65, 214, 219, 245, 255, 296, 309, 445, 479, 492], "pathlik": [3, 5, 6], "serial": [3, 4, 5, 9, 151, 166, 236, 239, 282, 283, 288, 289, 290, 309, 342, 344, 345, 357, 359, 371, 372, 385, 482, 483, 485, 504], "push": [3, 5, 235, 353, 447, 451, 452, 482, 498], "aid": [3, 5, 212, 331, 342, 345, 349, 372, 482, 498], "pack": [3, 5, 9, 282, 286, 309, 340, 342, 345, 359, 482, 502], "unpack": [3, 5, 8, 9, 16, 47, 282, 309, 342, 345, 359, 407, 415, 482], "structur": [3, 4, 5, 8, 49, 55, 78, 86, 92, 104, 152, 153, 155, 162, 165, 166, 167, 169, 172, 173, 174, 177, 178, 179, 204, 206, 213, 214, 218, 219, 239, 241, 245, 250, 255, 267, 281, 282, 283, 287, 291, 292, 293, 317, 328, 329, 330, 331, 333, 337, 341, 342, 344, 348, 356, 371, 397, 445, 446, 464, 466, 479, 480, 482, 483, 485, 487, 489, 494, 498, 500, 502], "relationship": [3, 5, 333, 354, 506], "non": [3, 4, 5, 8, 16, 31, 77, 78, 104, 151, 166, 167, 201, 216, 238, 239, 250, 252, 255, 257, 267, 281, 283, 286, 291, 293, 296, 303, 305, 306, 309, 315, 322, 327, 328, 329, 332, 339, 340, 344, 345, 348, 353, 377, 399, 404, 409, 410, 412, 424, 443, 445, 452, 483, 485, 492, 498, 502, 506], "doc": [3, 5, 21, 60, 92, 239, 282, 290, 309, 404, 413, 442, 445, 447, 451, 452, 465, 483, 487, 489, 494, 502], "w": [3, 5, 11, 80, 83, 90, 92, 93, 95, 96, 99, 101, 104, 112, 113, 131, 132, 133, 136, 137, 139, 142, 146, 153, 155, 166, 235, 245, 299, 338, 360, 415, 438, 480, 487, 491, 492, 497, 498, 500], "compil": [3, 5, 287, 344, 346, 415, 442], "d": [3, 5, 19, 43, 79, 93, 139, 142, 153, 162, 163, 164, 167, 175, 219, 220, 281, 282, 283, 290, 291, 299, 306, 309, 310, 329, 331, 333, 334, 335, 338, 339, 340, 341, 350, 351, 355, 364, 415, 438, 440, 443, 445, 448, 451, 459, 460, 467, 468, 470, 480, 481, 487, 489, 493, 498, 502, 508], "n": [3, 5, 14, 76, 78, 83, 90, 92, 93, 113, 125, 135, 136, 146, 153, 163, 166, 171, 175, 176, 178, 200, 211, 235, 236, 286, 295, 298, 299, 301, 305, 306, 309, 316, 328, 334, 335, 338, 340, 341, 345, 355, 389, 396, 407, 412, 415, 422, 437, 444, 448, 451, 464, 465, 471, 472, 476, 480, 482, 487, 491, 492, 493, 498, 500, 502, 504], "h5db": [3, 5, 496], "try": [3, 5, 10, 28, 104, 200, 219, 250, 283, 286, 292, 297, 332, 342, 364, 366, 379, 389, 408, 411, 413, 420, 422, 445, 448, 451, 452, 473, 480, 487, 489, 491, 502], "local": [3, 5, 14, 72, 77, 214, 250, 286, 333, 339, 340, 364, 444, 448, 480, 482, 483, 489, 492, 498], "git": [3, 5, 415, 442, 451, 452, 480, 481, 483, 489, 508], "commit": [3, 5, 14, 442, 444, 446, 451, 489], "sure": [3, 5, 58, 66, 125, 149, 159, 165, 182, 191, 224, 265, 281, 286, 296, 297, 299, 301, 309, 342, 346, 353, 354, 355, 357, 360, 363, 374, 376, 377, 380, 389, 390, 391, 392, 404, 417, 421, 423, 430, 442, 447, 450, 451, 452, 480, 483, 489, 493, 494, 502], "doesn": [3, 5, 6, 20, 47, 55, 93, 94, 200, 201, 202, 204, 205, 286, 287, 306, 309, 315, 342, 344, 360, 379, 407, 411, 415, 421, 442, 447, 452, 489, 493, 494, 502], "instal": [3, 5, 389, 422, 442, 444, 449, 450, 452, 480, 482, 488, 489, 501], "Or": [3, 5, 330, 342, 364, 452, 481, 502, 508], "simpli": [3, 4, 5, 21, 78, 151, 154, 160, 184, 214, 219, 220, 281, 309, 340, 342, 353, 445, 448, 480, 487, 493, 494, 502], "insid": [3, 5, 21, 51, 74, 219, 226, 239, 281, 286, 303, 304, 309, 315, 339, 340, 395, 397, 435, 479, 489, 493, 498, 502, 504], "repo": [3, 5, 104, 444, 451, 452, 489], "hash": [3, 5, 14, 281, 328, 396, 452, 483, 487], "unknown": [3, 5, 10, 152, 153, 345, 485], "completedsuccessfulli": [3, 5], "cleanup": [3, 5, 20, 77, 155, 309, 483], "convers": [3, 4, 5, 53, 104, 163, 167, 172, 201, 212, 250, 292, 309, 310, 315, 316, 317, 323, 327, 328, 329, 332, 440, 457, 461, 478, 482, 483, 490, 495, 498, 500, 502], "keeptimestep": [3, 5], "tupl": [3, 4, 5, 6, 8, 9, 19, 21, 56, 70, 78, 83, 90, 104, 112, 137, 139, 154, 162, 204, 214, 219, 281, 283, 286, 309, 322, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344, 345, 372, 373, 400, 407, 408, 412, 415, 433, 438, 451, 498, 499, 502, 504], "discard": [3, 5, 202, 238, 315, 447, 483], "except": [3, 5, 77, 151, 155, 159, 166, 175, 178, 200, 204, 281, 282, 286, 322, 331, 342, 344, 345, 357, 372, 373, 388, 399, 401, 404, 413, 419, 421, 438, 446, 452, 473, 480, 482, 493], "step": [3, 4, 5, 6, 14, 19, 45, 46, 151, 172, 177, 178, 179, 204, 211, 214, 218, 252, 286, 293, 309, 322, 328, 329, 333, 335, 337, 338, 340, 345, 352, 396, 408, 437, 442, 445, 447, 471, 480, 482, 483, 487, 489, 492, 493, 497, 498, 502, 504, 507], "retain": [3, 5, 8, 39, 66, 70, 78, 195, 219, 303, 309, 315, 345, 355, 373, 390, 482, 504], "separ": [3, 5, 23, 45, 55, 59, 79, 162, 204, 212, 239, 243, 309, 316, 327, 328, 329, 331, 340, 396, 402, 411, 412, 415, 433, 451, 480, 481, 483, 489, 493, 494, 502, 507, 508], "exot": [3, 5], "analys": [3, 5, 48, 55, 200, 331, 445, 454, 457, 478, 480, 489, 493, 495, 502], "each": [3, 5, 6, 8, 9, 19, 26, 27, 32, 43, 45, 47, 55, 56, 72, 77, 78, 82, 151, 153, 154, 155, 162, 165, 166, 167, 169, 175, 179, 202, 204, 205, 211, 219, 220, 228, 236, 238, 241, 243, 254, 260, 275, 281, 283, 286, 288, 289, 292, 303, 304, 306, 308, 309, 313, 315, 316, 317, 322, 328, 329, 331, 333, 334, 339, 340, 342, 344, 345, 346, 353, 360, 363, 366, 371, 372, 374, 391, 396, 397, 398, 406, 408, 409, 412, 414, 415, 433, 438, 445, 447, 448, 450, 451, 452, 458, 459, 486, 487, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 502, 504, 505, 506], "someth": [3, 5, 21, 32, 33, 46, 79, 151, 160, 191, 201, 204, 286, 309, 316, 329, 331, 337, 342, 366, 379, 438, 444, 445, 448, 450, 451, 452, 489, 493, 494, 502], "nuanc": [3, 5, 452], "equilibrium": [3, 5, 19, 203, 206, 254, 286, 350, 381, 480, 493, 498, 500, 502], "cycl": [3, 5, 6, 15, 19, 20, 21, 27, 28, 32, 36, 74, 78, 131, 132, 133, 134, 164, 175, 203, 204, 211, 212, 215, 217, 218, 219, 221, 224, 236, 238, 243, 250, 252, 254, 257, 329, 345, 350, 365, 366, 381, 389, 395, 396, 400, 408, 412, 414, 437, 438, 445, 448, 450, 452, 467, 474, 475, 479, 480, 483, 485, 487, 489, 493, 494, 497, 498, 500, 504, 505, 507], "converg": [3, 5, 50, 78, 164, 165, 179, 183, 211, 212, 220, 250, 254, 319, 328, 371, 381, 493, 500, 505], "At": [3, 4, 5, 19, 32, 204, 217, 281, 287, 320, 353, 445, 450, 451, 486, 492, 504], "last": [3, 5, 151, 152, 175, 201, 204, 208, 220, 250, 317, 333, 337, 398, 406, 407, 415, 438, 448, 483, 485, 498, 502], "wherea": [3, 5, 335, 340, 502], "constitut": [3, 5, 281, 309, 445, 447], "typic": [3, 4, 5, 20, 55, 60, 78, 82, 104, 153, 155, 169, 200, 201, 218, 219, 226, 238, 239, 241, 243, 245, 250, 281, 286, 292, 305, 306, 309, 313, 335, 342, 345, 365, 388, 445, 447, 479, 480, 487, 489, 493, 497, 502, 504], "further": [3, 5, 243, 316, 329, 344, 397, 415, 448, 450], "collect": [3, 4, 5, 10, 21, 26, 28, 32, 44, 45, 46, 47, 55, 60, 78, 151, 166, 200, 201, 204, 236, 238, 239, 243, 245, 248, 254, 261, 264, 281, 283, 286, 306, 309, 330, 332, 333, 339, 342, 344, 345, 363, 390, 400, 404, 408, 412, 443, 445, 447, 448, 450, 464, 466, 468, 476, 480, 483, 487, 489, 490, 491, 502, 504], "back": [3, 5, 39, 47, 48, 55, 78, 165, 188, 214, 220, 241, 250, 269, 272, 309, 316, 322, 328, 331, 342, 344, 345, 363, 366, 372, 377, 401, 408, 409, 421, 448, 452, 480, 482, 483, 489, 493, 502, 504], "like": [3, 4, 5, 6, 8, 9, 19, 20, 21, 28, 33, 46, 47, 49, 69, 78, 79, 104, 144, 147, 152, 154, 160, 162, 165, 169, 201, 202, 204, 206, 214, 215, 219, 238, 239, 243, 245, 250, 281, 283, 286, 287, 290, 291, 293, 308, 309, 310, 315, 316, 328, 329, 330, 332, 335, 337, 338, 339, 342, 346, 349, 353, 358, 365, 366, 373, 374, 396, 397, 407, 408, 409, 413, 415, 429, 438, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 466, 480, 481, 482, 483, 487, 489, 491, 492, 493, 498, 502, 504, 508], "Will": [3, 5, 6, 49, 78, 102, 204, 219, 245, 254, 281, 286, 306, 309, 316, 329, 398, 412, 414, 487, 492, 502], "interpos": [3, 5], "h5": [3, 4, 5, 7, 14, 26, 487, 489, 496, 502, 504], "extens": [3, 5, 26, 43, 45, 281, 283, 316, 398, 404, 414, 482, 483, 498, 502], "guarante": [3, 5, 9, 188, 243, 335, 401, 448, 498], "here": [3, 5, 8, 14, 31, 44, 47, 60, 66, 78, 79, 145, 152, 153, 155, 162, 166, 167, 172, 174, 177, 188, 197, 200, 205, 206, 212, 214, 219, 220, 236, 238, 243, 250, 281, 287, 291, 292, 297, 303, 306, 309, 310, 316, 320, 322, 327, 329, 330, 337, 338, 339, 353, 364, 372, 391, 397, 404, 438, 443, 445, 447, 448, 450, 451, 452, 458, 466, 472, 473, 479, 480, 487, 489, 490, 491, 493, 494, 496, 498, 501, 502, 504], "usabl": [3, 5, 429, 504], "vastli": [3, 5], "futur": [3, 4, 5, 19, 44, 47, 49, 78, 79, 206, 239, 281, 286, 287, 291, 293, 329, 331, 332, 344, 355, 404, 415, 438, 494, 502], "primarili": [3, 5, 104, 167, 219, 480], "replac": [3, 5, 9, 10, 79, 219, 224, 281, 286, 293, 306, 309, 329, 332, 339, 345, 350, 406, 415, 438, 476, 482, 483, 485, 493, 502], "csstring": [3, 5], "geomstr": [3, 5, 332], "bpstring": [3, 5], "goal": [3, 5, 8, 332, 360, 408, 451, 452, 480, 487], "ani": [3, 4, 5, 6, 9, 10, 15, 19, 20, 21, 22, 27, 31, 32, 55, 58, 62, 65, 76, 77, 78, 79, 82, 94, 104, 151, 153, 155, 165, 166, 178, 200, 201, 204, 205, 211, 218, 219, 220, 224, 235, 236, 238, 239, 243, 245, 250, 259, 280, 281, 283, 286, 292, 293, 299, 303, 305, 306, 308, 309, 313, 329, 330, 331, 333, 338, 339, 340, 342, 344, 345, 346, 347, 348, 350, 353, 354, 359, 360, 363, 364, 366, 369, 379, 380, 386, 389, 390, 395, 396, 397, 401, 406, 412, 414, 415, 429, 438, 442, 444, 445, 447, 448, 450, 451, 452, 475, 476, 480, 481, 482, 483, 487, 489, 490, 491, 493, 494, 498, 500, 502, 504, 505, 508], "particular": [3, 5, 14, 23, 32, 46, 47, 78, 79, 89, 116, 154, 162, 163, 202, 204, 214, 219, 235, 236, 238, 239, 286, 292, 303, 309, 329, 330, 339, 342, 363, 369, 372, 415, 444, 452, 481, 487, 491, 494, 508], "veri": [3, 4, 5, 13, 15, 20, 21, 32, 82, 114, 152, 163, 173, 174, 203, 208, 212, 281, 286, 309, 310, 328, 329, 331, 337, 342, 345, 366, 374, 408, 438, 445, 447, 448, 451, 452, 467, 480, 485, 487, 489, 492, 493, 494, 502], "dont": [3, 5, 6], "easi": [3, 5, 19, 250, 283, 339, 340, 408, 438, 447, 450, 451, 452, 480, 493, 502], "hard": [3, 5, 31, 42, 45, 77, 79, 214, 297, 331, 446, 480], "geom": [3, 5, 14, 46, 47, 56, 172, 287, 291, 293, 341, 348, 474, 482, 492, 493, 494, 502], "In": [3, 5, 7, 14, 21, 39, 45, 47, 66, 70, 79, 80, 88, 89, 102, 104, 110, 115, 139, 151, 160, 162, 165, 215, 218, 219, 226, 235, 237, 250, 254, 281, 286, 288, 299, 305, 309, 310, 315, 316, 328, 329, 331, 333, 335, 338, 339, 340, 342, 344, 364, 374, 377, 388, 396, 397, 404, 408, 409, 411, 438, 444, 445, 448, 450, 451, 452, 466, 471, 474, 479, 480, 481, 487, 489, 490, 493, 494, 502, 504, 505, 508], "abl": [3, 4, 5, 16, 45, 47, 144, 281, 346, 397, 423, 451, 481, 502, 504, 508], "reproduc": [3, 5, 120, 123, 130, 504], "confid": [3, 5], "ident": [3, 5, 155, 162, 169, 178, 190, 191, 194, 264, 316, 329, 448, 480], "inputdb": [3, 5], "startcycl": [3, 5, 6, 14, 502], "startnod": [3, 5, 6, 14, 502], "standard": [3, 5, 15, 21, 22, 26, 56, 61, 66, 70, 78, 139, 151, 152, 153, 165, 166, 170, 178, 184, 203, 204, 205, 206, 211, 214, 218, 220, 244, 250, 254, 261, 262, 281, 286, 315, 322, 329, 332, 374, 379, 390, 399, 404, 414, 437, 442, 443, 444, 446, 450, 480, 482, 483, 487, 498, 501, 502, 506], "timestep": [3, 5, 6, 19, 27, 34, 45, 250, 344, 502], "request": [3, 5, 6, 19, 32, 77, 78, 151, 155, 197, 200, 204, 208, 211, 218, 236, 238, 250, 254, 257, 283, 292, 306, 309, 329, 331, 337, 338, 344, 346, 401, 404, 406, 421, 444, 445, 446, 451, 480, 487, 489, 502], "present": [3, 5, 6, 7, 19, 78, 135, 160, 162, 167, 172, 174, 175, 177, 197, 201, 224, 248, 257, 281, 309, 329, 332, 340, 344, 346, 365, 374, 379, 396, 409, 415, 445, 452, 494, 502], "auxiliari": [3, 5, 139, 204, 214], "statepointnam": [3, 5], "h5group": [3, 5, 9, 504], "place": [3, 5, 9, 21, 26, 27, 45, 47, 55, 78, 104, 151, 155, 214, 218, 219, 220, 238, 239, 281, 283, 287, 289, 316, 320, 329, 335, 340, 344, 349, 396, 400, 406, 407, 415, 444, 445, 451, 452, 480, 481, 482, 487, 489, 494, 502, 504, 508], "correct": [3, 5, 15, 23, 47, 159, 199, 224, 235, 239, 250, 252, 257, 264, 286, 299, 306, 309, 322, 324, 339, 353, 354, 364, 374, 376, 377, 451, 481, 502, 508], "timenod": [3, 5, 6, 14, 32, 78, 203, 204, 238, 309, 487, 489, 502, 504, 507], "fuel": [3, 5, 19, 26, 27, 49, 51, 54, 93, 104, 108, 125, 131, 132, 133, 134, 135, 136, 137, 142, 153, 201, 212, 215, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 243, 247, 250, 255, 261, 281, 282, 283, 286, 287, 291, 293, 295, 299, 301, 306, 309, 313, 314, 315, 316, 320, 322, 323, 324, 328, 329, 331, 333, 347, 349, 350, 352, 353, 354, 355, 356, 360, 361, 412, 445, 450, 458, 459, 463, 464, 466, 467, 474, 475, 478, 479, 480, 482, 483, 488, 489, 492, 495, 497, 498, 500, 501, 503, 504], "varieti": [3, 5, 56, 162, 281, 286, 309, 340, 355, 379, 445, 450, 451, 480, 487, 490, 502], "client": [3, 5, 7, 160, 162, 250, 280, 309, 329, 332], "server": [3, 5], "kind": [3, 5, 23, 104, 157, 166, 204, 208, 212, 214, 250, 283, 286, 291, 309, 331, 339, 397, 452, 459, 479, 480, 492, 493, 501, 502], "unnecessari": [3, 5, 56, 286], "bp": [3, 5, 10, 46, 47, 56, 61, 287, 293, 348, 408, 466, 474, 492, 502], "allowmiss": [3, 5, 483], "mid": [3, 5, 155, 366], "simul": [3, 5, 6, 20, 32, 60, 137, 212, 219, 236, 252, 254, 281, 282, 289, 329, 364, 365, 395, 448, 451, 452, 480, 487, 489, 493, 494, 500, 502, 505, 507], "valu": [3, 4, 5, 6, 9, 16, 19, 22, 23, 24, 26, 47, 49, 50, 51, 56, 59, 66, 77, 78, 79, 80, 89, 95, 96, 99, 104, 144, 147, 149, 151, 153, 155, 160, 163, 166, 167, 179, 190, 197, 200, 201, 202, 206, 213, 219, 227, 236, 238, 239, 241, 242, 245, 250, 252, 254, 261, 265, 269, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 299, 306, 309, 312, 313, 314, 316, 317, 320, 322, 328, 329, 332, 337, 342, 343, 344, 345, 348, 355, 359, 360, 365, 366, 371, 372, 373, 374, 377, 378, 379, 390, 393, 396, 400, 404, 407, 408, 410, 412, 413, 414, 415, 423, 426, 433, 438, 443, 448, 450, 452, 480, 482, 483, 487, 489, 491, 492, 493, 497, 498, 499, 502, 504, 505], "neg": [3, 5, 250, 283, 286, 299, 303, 309, 313, 322, 323, 338, 345, 353, 374, 408, 502], "index": [3, 4, 5, 9, 43, 56, 152, 153, 163, 166, 175, 202, 204, 241, 245, 250, 267, 282, 283, 286, 289, 309, 312, 329, 333, 335, 337, 338, 339, 340, 396, 397, 400, 408, 412, 415, 433, 442, 476, 480, 482, 483, 485, 487, 498, 502, 504], "eoc": [3, 5, 19, 78, 204, 238, 445, 498, 500], "backward": [3, 5, 104, 178, 207, 219, 287, 412], "statepoint": [3, 5, 487], "emit": [3, 5, 60, 163, 169, 299, 380], "rather": [3, 5, 9, 19, 45, 47, 78, 104, 119, 139, 153, 154, 155, 166, 178, 204, 214, 219, 238, 239, 250, 281, 292, 309, 329, 331, 334, 335, 338, 340, 341, 342, 346, 366, 372, 397, 412, 415, 447, 466, 474, 476, 480, 482, 485, 487, 489, 493, 494, 497, 502], "crash": [3, 5, 62, 77, 160, 204, 364, 396, 446, 447, 482, 502], "undefin": [3, 5, 6, 15, 19, 20, 21, 27, 32, 58, 78, 211, 218, 224, 238, 243, 250, 259, 303, 304, 305, 331, 386, 389, 395, 502], "top": [3, 5, 21, 26, 79, 206, 219, 283, 286, 289, 290, 293, 297, 309, 322, 328, 329, 333, 334, 339, 340, 342, 345, 348, 352, 353, 408, 433, 447, 452, 487, 489, 497, 498, 500, 502, 504], "comp": [3, 5, 6, 9, 25, 286, 504], "param": [3, 5, 6, 9, 10, 19, 44, 78, 219, 250, 252, 283, 286, 309, 316, 328, 329, 344, 345, 353, 382, 390, 400, 412, 448, 467, 475, 482, 483, 485, 487, 489, 492, 497, 498, 502], "too": [3, 5, 44, 173, 309, 329, 345, 353, 396, 415, 433, 448, 483, 492, 493, 502], "must": [3, 5, 6, 14, 15, 19, 20, 21, 27, 32, 49, 55, 58, 66, 76, 77, 78, 145, 151, 159, 162, 163, 166, 169, 172, 201, 204, 211, 218, 219, 220, 224, 238, 239, 243, 250, 258, 259, 281, 283, 286, 292, 303, 306, 309, 315, 320, 328, 329, 331, 337, 339, 340, 342, 344, 345, 346, 357, 374, 386, 389, 390, 395, 400, 412, 413, 438, 442, 443, 444, 445, 448, 451, 452, 459, 480, 481, 483, 489, 493, 496, 502, 505, 508], "indexloc": [3, 5, 282, 333, 337, 338, 339, 340, 445], "make": [3, 5, 8, 15, 19, 26, 27, 50, 55, 56, 58, 61, 66, 78, 79, 125, 144, 149, 151, 152, 159, 160, 163, 165, 166, 169, 172, 182, 191, 212, 214, 218, 219, 220, 224, 238, 245, 250, 259, 265, 266, 280, 281, 283, 286, 287, 291, 292, 293, 296, 297, 299, 301, 306, 309, 313, 315, 316, 319, 329, 331, 332, 333, 339, 340, 342, 344, 345, 346, 347, 353, 354, 355, 357, 360, 363, 374, 376, 377, 379, 380, 389, 390, 391, 392, 396, 397, 404, 408, 411, 412, 414, 415, 417, 421, 423, 430, 433, 438, 442, 443, 444, 445, 446, 448, 450, 451, 452, 460, 463, 474, 476, 477, 478, 479, 480, 482, 483, 487, 488, 490, 492, 493, 494, 495, 497, 501], "sens": [3, 5, 9, 50, 55, 79, 281, 286, 292, 306, 329, 344, 363, 396, 448, 493], "hierarchi": [3, 5, 9, 227, 309, 342, 346, 348, 360, 438, 445, 487, 502, 504], "serv": [3, 5, 27, 78, 252, 281, 332, 344, 345, 407, 415, 482, 489], "anchor": [3, 5, 291, 293, 338, 339, 340, 352, 438, 493, 494, 502], "fulli": [3, 5, 9, 79, 104, 166, 216, 283, 291, 309, 340, 354, 366, 450, 480, 482, 490, 494, 497, 500, 502, 504], "extend": [3, 5, 6, 15, 19, 20, 21, 23, 27, 32, 58, 78, 152, 206, 211, 218, 224, 238, 243, 250, 259, 281, 282, 283, 309, 328, 333, 339, 342, 345, 372, 386, 389, 395, 396, 404, 407, 423, 438, 447, 465, 474, 487, 490, 502], "littl": [3, 4, 5, 9, 33, 34, 58, 166, 281, 395, 397, 404, 451, 466, 487, 489, 504], "complic": [3, 5, 9, 14, 250, 292, 303, 306, 309, 374, 389, 397, 448, 489, 493, 502], "depth": [3, 5, 9, 412, 447, 448, 487], "below": [3, 4, 5, 47, 66, 152, 163, 169, 219, 235, 281, 282, 283, 308, 309, 328, 329, 333, 335, 342, 346, 379, 408, 434, 445, 447, 448, 450, 480, 481, 489, 492, 493, 494, 502, 504, 508], "occupi": [3, 5, 51, 220, 350, 498, 502], "easier": [3, 5, 204, 309, 338, 386, 447, 451], "figur": [3, 5, 7, 26, 32, 43, 87, 125, 141, 200, 204, 220, 286, 328, 329, 331, 341, 400, 412, 414, 452, 465, 469, 470, 472, 480, 487, 491, 493], "given": [3, 4, 5, 9, 19, 43, 70, 78, 80, 82, 83, 104, 108, 113, 145, 153, 154, 155, 158, 163, 200, 203, 204, 211, 219, 238, 239, 241, 243, 245, 250, 255, 281, 283, 286, 287, 291, 292, 309, 313, 314, 315, 316, 320, 324, 328, 329, 332, 335, 337, 338, 340, 341, 342, 344, 345, 360, 363, 404, 406, 407, 408, 411, 412, 414, 415, 438, 439, 440, 445, 448, 450, 451, 459, 464, 467, 480, 485, 489, 493, 497, 500, 502, 504, 505, 506], "pair": [3, 5, 26, 49, 214, 239, 283, 286, 287, 288, 289, 290, 291, 292, 293, 306, 309, 329, 338, 339, 340, 365, 371, 379, 400, 448, 502], "unawar": [3, 5], "outsid": [3, 5, 77, 212, 219, 226, 236, 239, 297, 309, 315, 316, 330, 337, 343, 344, 366, 396, 435, 480, 487, 493, 498, 502], "normal": [3, 4, 5, 104, 139, 165, 169, 178, 184, 202, 204, 239, 250, 259, 281, 286, 315, 338, 348, 364, 371, 389, 400, 420, 438, 445, 452, 458, 476, 480, 487, 489, 493, 502], "know": [3, 4, 5, 6, 31, 94, 152, 153, 162, 165, 212, 281, 283, 286, 292, 301, 303, 309, 329, 331, 342, 345, 346, 366, 397, 400, 407, 408, 409, 413, 450, 489, 491, 493, 502, 503, 504], "about": [3, 4, 5, 19, 21, 28, 46, 55, 78, 83, 90, 104, 112, 137, 139, 151, 152, 165, 166, 169, 184, 195, 200, 204, 219, 281, 283, 286, 291, 292, 309, 315, 331, 332, 337, 342, 344, 345, 346, 353, 366, 438, 447, 448, 450, 452, 468, 469, 470, 473, 480, 483, 487, 489, 491, 493, 494, 497, 498, 502, 504], "plu": [3, 5, 43, 155, 220, 283, 340, 346, 396, 480, 490, 502], "similar": [3, 5, 19, 47, 55, 60, 79, 151, 152, 155, 163, 165, 167, 169, 173, 174, 175, 239, 264, 283, 309, 329, 337, 340, 344, 379, 404, 412, 415, 448, 480, 489, 494], "omit": [3, 5, 286, 306, 309, 330, 396, 397, 502], "help": [3, 6, 8, 9, 21, 39, 55, 60, 66, 70, 77, 78, 152, 162, 198, 281, 309, 328, 373, 400, 403, 407, 408, 409, 415, 438, 442, 443, 446, 447, 448, 451, 452, 482, 485, 487, 489, 493, 502, 504], "deriv": [3, 6, 20, 32, 43, 56, 58, 78, 139, 162, 195, 211, 214, 238, 250, 280, 281, 286, 303, 309, 328, 331, 340, 346, 353, 372, 373, 386, 389, 395, 404, 408, 480, 492, 498, 502], "overridden": [3, 6, 15, 19, 20, 21, 27, 32, 58, 66, 78, 104, 151, 211, 218, 224, 238, 243, 250, 259, 306, 309, 386, 389, 395, 500, 502], "life": [3, 6, 21, 25, 78, 82, 87, 159, 204, 236, 238, 445, 450, 451, 479, 487, 491, 502, 507], "underli": [3, 5, 6, 10, 47, 153, 155, 309, 337, 339, 342, 345, 404, 452, 487, 492, 504, 506], "earli": [3, 6, 20, 207, 447, 502], "while": [3, 6, 21, 37, 39, 43, 45, 66, 70, 78, 138, 160, 165, 195, 205, 214, 235, 236, 254, 281, 286, 306, 309, 310, 315, 316, 320, 327, 328, 329, 332, 333, 340, 346, 396, 401, 404, 407, 438, 445, 447, 451, 459, 480, 481, 489, 490, 493, 502, 504, 508], "first": [3, 5, 6, 9, 14, 20, 28, 34, 43, 45, 47, 78, 79, 104, 151, 155, 165, 166, 167, 169, 175, 201, 204, 211, 218, 219, 220, 236, 238, 239, 257, 281, 283, 286, 290, 301, 306, 309, 315, 316, 329, 330, 337, 338, 340, 342, 344, 350, 360, 396, 406, 407, 408, 412, 415, 417, 424, 433, 438, 439, 443, 445, 446, 447, 448, 450, 451, 452, 464, 469, 476, 480, 483, 487, 488, 492, 493, 496, 502, 504], "receiv": [3, 6, 78, 151, 297, 346, 388, 448], "tight": [3, 6, 78, 204, 211, 252, 254, 286, 371, 386, 433, 445, 483, 501, 502], "coupl": [3, 6, 9, 15, 32, 43, 58, 78, 204, 211, 226, 236, 238, 243, 250, 252, 254, 281, 286, 329, 360, 371, 433, 445, 447, 483, 491, 498, 500, 501, 502], "_timenodeloop": [3, 6], "via": [3, 6, 76, 93, 104, 135, 169, 203, 250, 281, 286, 292, 299, 306, 309, 313, 314, 322, 342, 392, 445, 448, 473, 476, 480, 483, 485, 489, 493, 502], "tend": [3, 6, 37, 43, 306, 331, 345, 443, 490, 504], "decai": [3, 6, 85, 152, 155, 157, 159, 163, 164, 169, 184, 202, 204, 236, 269, 292, 463, 477, 478, 480, 495, 497, 498, 500, 502], "next": [3, 6, 20, 43, 217, 238, 254, 286, 306, 309, 315, 329, 348, 396, 412, 415, 438, 442, 443, 447, 448, 452, 487, 489, 490, 492, 493, 494, 502, 504], "shutdown": [3, 6, 211, 282, 331, 364, 480, 487, 492, 493, 500, 502], "even": [3, 4, 6, 10, 21, 55, 77, 78, 144, 151, 155, 175, 204, 219, 220, 259, 281, 283, 287, 303, 309, 322, 329, 335, 338, 353, 373, 398, 407, 412, 414, 421, 445, 447, 448, 452, 480, 489, 493, 502], "encount": [3, 4, 5, 6, 19, 55], "reconnect": [3, 6], "pre": [3, 6, 9, 10, 19, 201, 218, 238, 239, 264, 281, 286, 328, 329, 338, 396, 438, 483, 489, 500, 502], "still": [3, 5, 6, 10, 19, 55, 77, 78, 104, 152, 159, 188, 205, 214, 219, 220, 236, 239, 280, 281, 286, 287, 293, 304, 306, 309, 329, 330, 331, 339, 345, 350, 363, 391, 393, 404, 421, 444, 445, 451, 452, 459, 480, 482, 489, 494, 502, 504], "connect": [3, 6, 43, 167, 286, 340, 502], "worker": [3, 6, 21, 78, 151, 201, 204, 205, 219, 309, 389, 402, 448, 485, 492], "reloaddbnam": [3, 6, 14, 445, 502], "put": [3, 6, 104, 166, 214, 216, 238, 281, 283, 286, 309, 329, 349, 408, 414, 452, 483, 489, 504], "prior": [3, 6, 78, 204, 281, 316, 379, 448, 482, 502], "mix": [3, 6, 108, 219, 235, 243, 286, 309, 420, 423, 480, 489, 493, 502], "v": [3, 6, 28, 78, 79, 100, 101, 153, 155, 165, 200, 204, 212, 219, 235, 261, 281, 286, 299, 306, 309, 408, 414, 479, 480, 483, 487, 490, 493], "equival": [3, 6, 104, 108, 169, 175, 183, 184, 190, 315, 316, 338, 339, 407, 448, 459, 481, 508], "reload": [3, 6, 20, 204, 219, 250, 254, 502], "doe": [3, 4, 6, 9, 10, 13, 14, 15, 16, 17, 21, 30, 31, 32, 34, 35, 36, 41, 42, 45, 49, 53, 54, 58, 59, 74, 75, 77, 78, 104, 108, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 151, 155, 157, 158, 159, 160, 161, 166, 167, 171, 173, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 204, 210, 211, 214, 219, 220, 223, 224, 225, 232, 233, 234, 238, 239, 241, 247, 248, 250, 252, 257, 258, 259, 264, 265, 266, 267, 268, 269, 272, 279, 281, 283, 286, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 309, 310, 315, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 337, 338, 339, 345, 346, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 373, 374, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 404, 408, 411, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 444, 448, 451, 452, 467, 480, 487, 489, 492, 493, 494, 498, 502], "gaurante": [3, 6], "decad": [3, 6, 175, 480], "ago": [3, 5, 6], "easili": [3, 4, 6, 9, 10, 250, 309, 333, 374, 388, 396, 398, 406, 408, 451, 480, 492, 494], "timestepnam": [3, 6, 204], "fresh": [3, 6, 204, 309, 479, 480, 484, 490, 493, 502], "preferenti": [3, 6], "neither": [3, 6, 239, 287], "nor": [3, 6, 287], "mutablesequ": [3, 6], "byloc": [3, 6], "wrapper": [3, 6, 151, 155, 188, 191, 202, 287, 332, 364, 380, 412], "around": [3, 6, 7, 47, 77, 151, 163, 202, 215, 219, 281, 286, 287, 305, 316, 329, 335, 364, 380, 438, 443, 448, 468, 479, 480, 487, 493, 494, 497, 498, 500, 502], "how": [3, 4, 5, 6, 7, 8, 9, 31, 44, 45, 51, 56, 125, 163, 166, 167, 195, 200, 219, 220, 239, 243, 245, 281, 283, 286, 290, 291, 293, 309, 315, 316, 331, 333, 337, 340, 342, 345, 346, 353, 354, 365, 366, 395, 397, 398, 412, 413, 415, 430, 438, 446, 447, 448, 450, 452, 459, 460, 466, 474, 479, 480, 482, 483, 487, 488, 489, 490, 498, 499, 501, 502, 503, 504], "well": [3, 4, 5, 6, 9, 19, 43, 45, 49, 55, 56, 78, 79, 137, 152, 162, 224, 226, 243, 281, 286, 290, 292, 306, 309, 310, 328, 329, 340, 342, 344, 365, 400, 404, 407, 411, 412, 442, 445, 450, 451, 472, 474, 480, 487, 489, 492, 493, 502, 504], "reffilenam": [3, 4], "srcfilenam": [3, 4], "exclus": [3, 4, 47, 55, 219, 239, 287, 291, 329, 332, 340, 360, 363, 483, 487, 502], "toler": [3, 4, 47, 55, 78, 167, 173, 201, 408, 505], "float": [3, 4, 5, 26, 49, 78, 80, 81, 82, 83, 84, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 113, 116, 136, 137, 138, 139, 140, 142, 154, 155, 163, 166, 167, 173, 175, 183, 200, 204, 219, 220, 235, 239, 245, 250, 283, 286, 289, 290, 291, 303, 306, 309, 313, 314, 315, 320, 322, 328, 329, 332, 334, 335, 338, 339, 340, 341, 342, 345, 371, 379, 386, 396, 398, 400, 407, 408, 412, 414, 433, 439, 440, 483, 492, 504, 505], "0": [3, 4, 14, 23, 26, 34, 47, 54, 55, 56, 78, 81, 82, 83, 84, 89, 92, 95, 96, 97, 99, 104, 108, 112, 113, 116, 124, 125, 135, 136, 137, 139, 146, 147, 151, 155, 159, 162, 163, 164, 166, 167, 169, 173, 174, 175, 178, 179, 200, 201, 202, 204, 211, 219, 220, 235, 236, 238, 239, 245, 248, 250, 252, 254, 259, 281, 283, 286, 290, 291, 295, 298, 299, 301, 303, 304, 305, 306, 308, 309, 312, 315, 317, 320, 322, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 349, 352, 354, 355, 372, 379, 395, 396, 397, 398, 400, 404, 406, 407, 408, 411, 412, 413, 415, 423, 434, 437, 438, 440, 445, 448, 450, 452, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 487, 489, 490, 491, 492, 493, 494, 497, 498, 500, 502, 504, 505], "timestepcompar": [3, 4, 47, 55], "high": [3, 4, 5, 27, 77, 87, 91, 92, 94, 200, 224, 226, 250, 281, 282, 286, 329, 331, 347, 408, 412, 467, 480, 483, 487, 492, 494, 497, 498, 500, 502, 504], "two": [3, 4, 9, 10, 47, 64, 70, 115, 151, 152, 155, 163, 167, 169, 171, 173, 176, 190, 194, 200, 201, 202, 203, 204, 212, 224, 236, 239, 240, 281, 283, 286, 288, 292, 304, 309, 315, 316, 322, 328, 329, 332, 337, 338, 339, 342, 343, 350, 353, 379, 400, 408, 414, 415, 445, 448, 450, 451, 476, 481, 482, 485, 489, 492, 493, 496, 502, 505, 508], "dbname": [3, 7, 46, 47, 491], "basecas": [3, 7, 46, 56], "bookeep": [3, 7, 34, 204], "proper": [3, 7, 138, 203, 238, 286, 339, 353, 445, 451, 502], "common": [3, 4, 7, 79, 137, 151, 152, 155, 166, 214, 250, 255, 283, 292, 309, 322, 328, 331, 339, 340, 373, 379, 410, 448, 452, 453, 478, 480, 481, 493, 495, 502, 508], "least": [3, 7, 66, 254, 309, 350, 438, 442, 451, 480, 493, 502], "knowledg": [3, 4, 7, 46, 286, 309, 316, 481, 508], "probe": [3, 7, 47], "interrog": [3, 7], "pathtodb": 3, "loadcycl": 3, "loadnod": 3, "c0n2eoc": 3, "alreadi": [3, 5, 56, 60, 77, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 155, 169, 200, 204, 219, 243, 265, 286, 287, 309, 324, 329, 332, 345, 366, 372, 450, 489, 493, 502], "vari": [3, 4, 8, 56, 162, 254, 286, 293, 329, 335, 342, 480, 492, 502], "middl": [3, 48, 204, 282, 331, 338, 396, 476, 487, 492, 493], "attach": [3, 20, 32, 58, 78, 79, 204, 211, 243, 281, 315, 337, 386, 389, 395, 487, 498], "pathtodatabas": 3, "getfpmass": [3, 282, 309], "fission": [3, 85, 155, 159, 163, 167, 169, 173, 176, 184, 200, 201, 226, 236, 238, 239, 242, 243, 244, 245, 247, 248, 250, 255, 259, 286, 292, 306, 309, 328, 329, 331, 412, 471, 476, 479, 480, 483, 487, 491, 493, 494, 498, 500, 502], "product": [3, 44, 56, 157, 163, 176, 188, 191, 200, 201, 236, 238, 239, 242, 243, 244, 245, 247, 248, 250, 255, 292, 306, 309, 329, 340, 451, 469, 470, 476, 480, 483, 487, 498, 502], "12345": 3, "67": [3, 153], "test_comparedb3": [3, 12], "testcomparedb3": [3, 12, 13], "test_database3": [3, 12], "testdatabase3": [3, 12, 14], "testdatabase3smal": [3, 12, 14], "testwritereaddatabas": [3, 12, 14], "test_databaseinterfac": [3, 12], "getsimpledboper": [3, 12, 15], "testdatabaseinterfacebol": [3, 12, 15], "testdatabaseinterfac": [3, 12, 15], "testdatabasewrit": [3, 12, 15], "testdatabaseread": [3, 12, 15], "testbadnam": [3, 12, 15], "teststandardfollowon": [3, 12, 15], "test_jaggedarrai": [3, 12], "testjaggedarrai": [3, 12, 16], "test_layout": [3, 12], "testlocationpack": [3, 12, 17], "writeln": [3, 4], "adddiff": [3, 4], "addstructurediff": [3, 4], "addtimestep": [3, 4], "reportdiff": [3, 4], "ndiff": [3, 4], "fromh5": [3, 8], "tolist": [3, 8], "computeancestor": [3, 9], "allsubclass": [3, 9], "from_yaml": [3, 10, 287, 290, 292], "skip_bp_sect": [3, 10], "unknown_param": [3, 10], "buildparamcol": [3, 10], "read_only_fm": [3, 11], "read_write_fm": [3, 11], "create_file_ti": [3, 11], "create_file_fi": [3, 11], "create_file_fie2": [3, 11], "read_write_cr": [3, 11], "assum": [4, 28, 81, 104, 151, 170, 188, 200, 201, 235, 283, 286, 309, 313, 322, 329, 340, 353, 359, 391, 412, 447, 448, 481, 489, 492, 493, 494, 498, 502, 508], "intim": [4, 339], "h5py": [4, 77, 345, 504], "within": [4, 9, 23, 26, 55, 60, 72, 78, 104, 151, 152, 153, 155, 166, 171, 195, 197, 201, 204, 206, 211, 214, 226, 238, 239, 243, 247, 281, 283, 286, 287, 288, 289, 290, 293, 297, 303, 306, 309, 313, 314, 316, 317, 322, 328, 329, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 345, 352, 353, 354, 363, 401, 438, 439, 445, 446, 447, 450, 464, 480, 483, 486, 489, 493, 494, 497, 498, 502, 504, 505, 506], "correspond": [4, 9, 25, 152, 200, 201, 204, 219, 220, 281, 283, 286, 291, 292, 303, 308, 309, 322, 329, 341, 342, 346, 373, 396, 412, 440, 445, 450, 486, 493, 498, 500, 502, 504], "pull": [4, 47, 204, 219, 224, 286, 414, 444, 446, 451, 483, 485, 489, 492], "cross": [4, 91, 152, 155, 162, 163, 165, 167, 171, 173, 174, 176, 182, 195, 197, 199, 200, 201, 202, 212, 213, 224, 236, 238, 239, 243, 250, 252, 254, 259, 264, 265, 266, 281, 283, 286, 292, 309, 315, 329, 412, 414, 438, 442, 448, 451, 459, 466, 471, 472, 480, 483, 487, 493, 494, 497, 498, 499, 502, 504, 505], "probabl": [4, 39, 44, 47, 66, 70, 93, 152, 155, 245, 259, 281, 287, 306, 309, 344, 408, 409, 415, 438, 452, 480, 489, 497, 503], "speak": [4, 243], "issu": [4, 15, 21, 45, 77, 135, 163, 165, 201, 238, 239, 252, 281, 286, 315, 331, 342, 353, 380, 415, 438, 444, 450, 451, 452, 480, 482, 483, 489, 504], "aris": [4, 78, 152, 155, 281, 292, 390], "against": [4, 39, 47, 49, 78, 125, 238, 309, 329, 331, 361, 372, 374, 379, 398, 417, 444, 480, 483], "sometim": [4, 47, 77, 155, 201, 219, 239, 310, 342, 452, 474, 487, 489, 502, 504], "That": [4, 5, 58, 89, 252, 286, 290, 309, 363, 364, 372, 452, 487, 489, 493, 502], "worri": [4, 337, 346, 448, 450, 452, 489], "especi": [4, 243, 411, 451], "temperatur": [4, 9, 79, 80, 81, 82, 83, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 108, 110, 111, 112, 113, 115, 116, 125, 131, 132, 133, 136, 137, 139, 140, 141, 142, 153, 218, 226, 235, 236, 238, 254, 264, 276, 283, 286, 303, 306, 309, 310, 313, 314, 315, 316, 321, 322, 329, 342, 345, 352, 353, 354, 440, 445, 450, 464, 473, 479, 480, 483, 487, 489, 490, 492, 493, 494, 497, 498, 499, 500, 502, 503, 504, 505, 506], "uniformli": [4, 292, 464, 502], "realli": [4, 31, 44, 104, 202, 208, 291, 293, 329, 335, 364, 447, 448, 450, 480, 494], "suppos": [4, 291, 415, 450], "volum": [4, 80, 87, 104, 113, 135, 137, 138, 197, 200, 235, 238, 283, 286, 290, 297, 303, 306, 308, 309, 316, 328, 329, 341, 352, 353, 354, 361, 400, 463, 477, 478, 495, 498, 499, 500, 502], "rel": [4, 43, 47, 55, 78, 104, 166, 184, 214, 220, 291, 303, 306, 309, 310, 320, 322, 329, 331, 341, 342, 379, 408, 438, 451, 484, 489, 494, 498, 500, 502, 504, 506], "self": [4, 8, 19, 39, 56, 66, 78, 104, 151, 162, 165, 200, 219, 238, 245, 257, 259, 286, 287, 290, 306, 309, 314, 316, 322, 329, 338, 340, 345, 349, 377, 407, 413, 415, 438, 443, 447, 448, 451, 489, 492, 493, 502, 504], "evid": 4, "resourc": [4, 151, 342, 379], "hasn": [4, 200, 265, 413], "tee": 4, "msg": [4, 364, 380, 399, 438], "ignor": [4, 5, 10, 79, 166, 173, 238, 286, 292, 303, 316, 331, 338, 365, 389, 390, 396, 414, 415, 422, 487, 492, 502], "exce": [4, 317, 388], "organ": [4, 19, 33, 206, 214, 366, 445, 448, 483, 487], "later": [4, 22, 26, 37, 39, 78, 167, 175, 204, 239, 288, 363, 443, 445, 447, 450, 451, 480, 489, 498, 502], "keep": [4, 5, 9, 21, 44, 144, 220, 254, 261, 281, 283, 292, 306, 316, 320, 328, 346, 407, 438, 444, 447, 448, 449, 451, 452, 479, 480, 493, 497, 498, 502], "miss": [4, 10, 89, 239, 292, 309, 433, 487, 490, 492, 502], "incompat": 4, "weird": [4, 340, 415], "strang": [4, 5, 9, 58, 342, 404, 493], "smaller": [4, 14, 26, 239, 247, 309, 329, 360, 397, 404, 452, 489], "zero": [4, 9, 58, 66, 77, 104, 129, 138, 155, 166, 167, 172, 173, 190, 200, 204, 238, 243, 254, 283, 286, 303, 304, 305, 306, 309, 322, 323, 329, 338, 349, 353, 406, 408, 420, 451, 473, 482, 485, 487, 489, 493, 498, 499, 502], "diff": [4, 58, 240, 452], "infinit": [4, 239, 340, 407, 468, 469, 502], "rigor": [4, 480], "manner": [4, 239, 303, 438, 445, 480, 482, 489, 505], "fine": [4, 45, 172, 292, 301, 382, 408, 415, 493], "revisit": [4, 281, 505], "comptyp": [4, 281], "paramnam": [4, 5, 8, 9, 19, 309, 328, 342, 344, 448], "absmean": 4, "absmax": 4, "tsname": 4, "stream": [4, 145, 146, 147, 164, 165, 166, 169, 170, 172, 173, 175, 176, 177, 178, 179, 245, 247, 287, 291, 300, 350, 358, 366, 373, 393, 397, 404, 434, 438], "print": [4, 21, 28, 39, 55, 60, 66, 70, 78, 155, 172, 219, 283, 287, 306, 309, 344, 364, 396, 398, 404, 412, 415, 443, 445, 447, 448, 451, 452, 458, 464, 487, 489, 490, 491, 492, 502, 504], "exceed": [4, 78, 404, 406, 498, 499], "recover": 5, "down": [5, 9, 19, 21, 309, 342, 345, 353, 372, 414, 450, 451, 476, 483, 487, 489, 504], "bound": [5, 49, 56, 59, 162, 169, 201, 219, 241, 267, 283, 303, 306, 308, 309, 314, 317, 331, 333, 334, 335, 338, 340, 341, 352, 354, 439, 468, 469, 470, 473, 494], "hierarch": [5, 9, 281, 309, 330, 502], "furthermor": [5, 55, 308, 335, 342, 451, 487], "intend": [5, 23, 152, 201, 214, 238, 239, 250, 281, 291, 309, 315, 328, 331, 340, 374, 402, 404, 407, 415, 445, 446, 451, 479, 489, 505, 506], "dynam": [5, 47, 79, 101, 137, 204, 281, 309, 403, 411, 445, 502, 504], "yet": [5, 19, 46, 55, 201, 205, 219, 235, 239, 286, 290, 309, 313, 328, 396, 450, 480, 487, 497, 502], "undevelop": 5, "ad": [5, 25, 26, 37, 39, 44, 45, 47, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 155, 163, 171, 173, 176, 204, 208, 219, 239, 240, 243, 248, 250, 254, 281, 283, 286, 292, 293, 298, 303, 309, 315, 316, 320, 324, 329, 330, 334, 339, 344, 346, 350, 353, 362, 366, 378, 396, 412, 413, 442, 448, 450, 452, 467, 474, 475, 476, 479, 480, 482, 483, 484, 485, 487, 488, 492, 502], "most": [5, 15, 43, 45, 78, 79, 104, 113, 139, 151, 155, 162, 163, 165, 173, 227, 239, 281, 286, 303, 306, 309, 329, 335, 337, 340, 342, 344, 346, 353, 364, 366, 380, 397, 404, 415, 442, 445, 448, 450, 451, 452, 479, 480, 481, 482, 489, 493, 494, 497, 500, 502, 508], "dump": [5, 32, 38, 41, 42, 44, 45, 214, 236, 239, 282, 283, 329, 344, 365, 367, 371, 372, 476, 502], "again": [5, 9, 60, 188, 217, 281, 329, 345, 347, 380, 438, 447, 450, 451, 482, 493, 502, 504], "nitti": [5, 452], "gritti": [5, 452], "translat": [5, 281, 287, 327, 328, 340, 450, 480], "flat": [5, 8, 9, 286, 306, 315, 338, 397, 406, 417, 493], "pleas": [5, 19, 104, 283, 329, 401, 415, 443, 444, 445, 452, 481, 508], "convent": [5, 201, 214, 286, 331, 446, 452, 480, 502], "cxxnyi": 5, "arraydata": 5, "numpi": [5, 8, 9, 43, 78, 166, 309, 314, 339, 342, 345, 386, 407, 408, 415, 433, 451, 466, 470, 473, 483, 487, 489, 490, 492], "ndarrai": [5, 8, 9, 43, 78, 170, 178, 200, 283, 286, 309, 337, 338, 339, 340, 341, 345, 407, 408], "wouldn": [5, 44], "plai": [5, 281, 346, 445], "nice": [5, 83, 151, 165, 205, 212, 309, 332, 346, 396, 404, 415, 438, 445, 474, 489, 502], "arrai": [5, 8, 9, 43, 56, 78, 166, 167, 169, 283, 309, 314, 328, 329, 333, 338, 339, 342, 345, 386, 407, 408, 415, 426, 433, 483, 487, 489, 498, 504, 505], "conform": [5, 152, 281, 290, 306, 313, 335, 451, 482, 500], "both": [5, 47, 49, 78, 144, 151, 154, 160, 165, 166, 175, 201, 205, 212, 219, 286, 292, 309, 315, 322, 327, 328, 329, 331, 332, 344, 346, 353, 379, 412, 437, 443, 447, 459, 474, 480, 483, 485, 487, 489, 502, 506], "fit": [5, 92, 95, 96, 97, 99, 105, 137, 174, 204, 208, 239, 250, 286, 309, 329, 335, 338, 340, 345, 349, 406, 408, 415, 452, 502, 504], "ish": [5, 433], "accomplish": [5, 492, 504], "hand": [5, 26, 65, 165, 219, 322, 346, 354, 372, 379, 412, 442, 445, 447, 450, 480, 488, 492, 502], "known": [5, 56, 137, 152, 155, 250, 254, 281, 306, 329, 392, 400, 417, 445, 479, 502], "offend": 5, "variou": [5, 19, 21, 25, 28, 34, 60, 77, 78, 134, 152, 155, 162, 166, 174, 203, 204, 211, 215, 219, 269, 281, 287, 289, 309, 322, 329, 331, 345, 353, 354, 360, 365, 397, 408, 415, 426, 433, 437, 443, 445, 447, 454, 455, 457, 462, 478, 480, 481, 482, 487, 489, 493, 494, 495, 501, 502, 503, 504, 508], "necessari": [5, 20, 43, 45, 47, 113, 135, 151, 155, 171, 173, 175, 176, 195, 202, 257, 281, 283, 286, 290, 324, 327, 340, 342, 345, 401, 413, 438, 445, 480, 490, 502, 504], "mind": [5, 283, 346], "alwai": [5, 9, 58, 104, 162, 165, 166, 167, 172, 174, 175, 195, 204, 243, 250, 281, 286, 291, 303, 308, 309, 316, 322, 328, 335, 338, 340, 342, 345, 397, 409, 411, 412, 415, 438, 448, 450, 451, 489, 497, 502], "deal": [5, 9, 44, 166, 167, 226, 245, 309, 374, 407, 448, 450, 493], "routin": [5, 16, 281, 306, 342, 408, 445, 480, 483, 502], "find": [5, 9, 19, 21, 47, 55, 79, 83, 95, 96, 99, 104, 152, 155, 173, 200, 201, 219, 243, 261, 281, 283, 286, 303, 306, 309, 314, 316, 329, 331, 342, 346, 360, 364, 365, 396, 406, 408, 412, 438, 451, 452, 480, 481, 482, 483, 487, 489, 492, 493, 502, 506, 508], "themselv": [5, 8, 281, 329, 342, 345, 374, 450, 482, 492], "lack": [5, 450, 480, 486], "nan": [5, 283, 303], "jag": [5, 8, 16, 345, 483, 485, 504], "concaten": [5, 364, 407], "dimension": [5, 8, 167, 238, 286, 308, 315, 316, 353, 415, 488, 504], "describ": [5, 9, 43, 45, 47, 66, 78, 89, 143, 155, 163, 212, 214, 219, 227, 281, 283, 287, 290, 304, 309, 328, 331, 332, 337, 340, 342, 345, 373, 397, 438, 450, 480, 493, 502, 503, 504, 506, 507], "shape": [5, 8, 16, 43, 125, 166, 283, 295, 298, 299, 301, 303, 304, 305, 306, 308, 309, 332, 353, 354, 355, 474, 479, 493, 494, 498, 503], "offset": [5, 8, 16, 43, 315, 329, 333, 334, 335, 338, 340, 341, 352, 397, 398, 466, 469, 476], "them": [5, 8, 9, 14, 15, 19, 37, 45, 46, 47, 48, 55, 60, 78, 104, 108, 155, 162, 165, 166, 173, 202, 204, 205, 208, 238, 245, 250, 254, 281, 283, 286, 292, 293, 306, 309, 310, 314, 315, 316, 329, 331, 332, 339, 340, 342, 344, 345, 354, 355, 357, 364, 372, 373, 380, 389, 391, 396, 397, 406, 409, 415, 422, 442, 445, 447, 448, 450, 451, 452, 479, 480, 487, 489, 492, 493, 494, 499, 502], "magic": [5, 205, 212, 281, 342, 346, 447, 487], "shouldn": [5, 259, 331], "realist": [5, 502], "scenario": [5, 212, 215, 226, 286, 291, 293, 346, 429, 445, 451, 452, 502], "1d": [5, 8, 175, 238, 239, 264, 314, 315, 339, 345, 386, 408, 483], "diagnost": [5, 9], "invert": 5, "straight": [5, 9], "closest": [5, 219, 322, 408, 502], "represent": [5, 9, 26, 45, 78, 166, 172, 177, 179, 219, 238, 239, 265, 286, 287, 291, 309, 332, 333, 337, 338, 340, 345, 348, 349, 397, 415, 445, 450, 451, 479, 480, 494, 498, 502, 504], "np": [5, 8, 43, 153, 163, 170, 200, 259, 283, 286, 309, 408, 451, 466, 470, 473, 476, 487, 489, 490, 492], "homogen": [5, 106, 167, 200, 201, 216, 239, 259, 286, 309, 315, 316, 324, 342, 353, 482, 483, 498, 502, 504], "densiti": [5, 51, 54, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 129, 133, 134, 136, 137, 138, 139, 140, 141, 142, 152, 153, 155, 165, 177, 197, 200, 238, 239, 243, 245, 254, 259, 264, 282, 286, 287, 290, 292, 299, 301, 303, 306, 309, 314, 320, 322, 326, 327, 328, 329, 342, 353, 354, 355, 384, 400, 416, 420, 445, 459, 479, 480, 482, 483, 484, 485, 488, 490, 493, 494, 497, 498, 499, 500, 502, 504], "No": [5, 8, 44, 78, 80, 112, 116, 257, 259, 371, 397, 445, 451, 482, 487, 492, 494], "longer": [5, 34, 48, 239, 292, 305, 306, 355, 414, 415, 433, 451, 480, 482, 483, 485, 490, 498, 502], "numberdens": [5, 152, 200, 306, 309, 400, 499], "tool": [5, 8, 9, 17, 21, 28, 37, 45, 168, 198, 211, 223, 225, 250, 281, 330, 349, 359, 364, 393, 410, 412, 414, 424, 427, 430, 446, 447, 449, 479, 480, 481, 483, 485, 489, 493, 504, 508], "comput": [5, 28, 54, 78, 82, 92, 97, 104, 133, 163, 165, 166, 169, 200, 204, 208, 211, 236, 238, 250, 252, 254, 260, 286, 303, 304, 305, 306, 308, 309, 314, 316, 328, 339, 340, 353, 358, 363, 397, 408, 445, 446, 448, 451, 459, 463, 478, 480, 483, 487, 489, 492, 495, 502, 505], "slap": 5, "remov": [5, 19, 46, 55, 104, 146, 204, 219, 224, 238, 243, 245, 250, 265, 281, 282, 286, 287, 290, 293, 303, 306, 309, 316, 320, 329, 342, 360, 363, 377, 396, 409, 411, 446, 448, 480, 482, 483, 484, 485, 487, 497, 498, 500, 502], "better": [5, 19, 60, 78, 155, 162, 175, 204, 206, 281, 283, 331, 333, 348, 399, 415, 444, 451, 480, 482, 485, 502], "viz": [5, 44], "view": [5, 26, 27, 316, 338, 412, 450, 481, 487, 489, 502, 504, 508], "_readparam": 5, "throughout": [6, 153, 155, 243, 309, 332, 333, 445, 451, 494, 497, 502], "rectangular": [8, 283, 304, 308, 340, 353, 502], "jaggeddata": 8, "preserv": [8, 34, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 144, 313, 322, 360, 364, 373, 386, 408, 437, 484, 502], "multi": [8, 243, 252, 254, 286, 328, 339, 345, 359, 452, 463, 477, 478, 479, 482, 487, 492, 495, 502, 504], "popul": [8, 89, 167, 250, 291, 338, 340, 350, 397, 414, 445, 448, 450], "layer": [8, 9, 289, 331, 339, 479, 489], "jagged": 8, "length": [8, 26, 95, 96, 99, 155, 161, 166, 169, 198, 204, 211, 250, 286, 305, 313, 314, 315, 322, 329, 337, 396, 406, 407, 408, 415, 437, 448, 450, 451, 485, 487, 490, 492, 493, 497, 502, 506, 507], "reconstitut": 8, "exactli": [8, 219, 286, 309, 329, 346, 406, 413, 448, 482, 487, 502], "But": [8, 31, 74, 155, 188, 286, 306, 329, 339, 349, 364, 396, 408, 444, 448, 451, 452, 458, 480, 489, 490, 494, 503], "final": [8, 39, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 104, 226, 240, 243, 306, 329, 354, 378, 412, 413, 443, 448, 452, 467, 483, 489, 493, 502, 505], "nest": [8, 21, 26, 281, 339, 396], "round": [8, 14, 219, 287, 297, 329], "trip": [8, 14, 287], "constructor": [8, 49, 77, 145, 151, 155, 204, 306, 315, 334, 338, 339, 340, 342, 407, 415, 438], "x": [8, 11, 14, 37, 43, 45, 125, 145, 167, 173, 197, 199, 200, 201, 202, 218, 219, 238, 239, 254, 257, 259, 264, 265, 268, 286, 287, 291, 292, 295, 298, 299, 301, 308, 309, 316, 329, 333, 335, 339, 340, 355, 372, 396, 408, 412, 414, 415, 439, 440, 451, 463, 465, 466, 467, 468, 469, 470, 475, 476, 477, 478, 482, 483, 485, 487, 491, 492, 493, 494, 495, 498, 502, 504], "recurs": [8, 9, 16, 21, 46, 55, 72, 104, 151, 309, 339, 344, 347, 365, 396, 411, 483], "classmethod": [8, 10, 77, 78, 151, 165, 166, 200, 239, 287, 288, 290, 292, 309, 313, 331, 332, 334, 335, 341, 344, 345, 350, 373, 401, 404], "dtype": [8, 309, 342], "accompani": [8, 447], "zeroth": [8, 9, 175], "constitu": [8, 309], "obj": [8, 21, 151, 155, 171, 173, 176, 201, 250, 283, 309, 320, 328, 330, 396], "alia": [8, 24, 66, 78, 121, 122, 123, 124, 125, 126, 127, 128, 129, 137, 174, 197, 204, 233, 269, 279, 283, 286, 288, 289, 290, 291, 292, 293, 303, 304, 305, 306, 308, 309, 329, 330, 340, 344, 348, 349, 354, 355, 372, 415, 502], "respond": 8, "unpackedjaggeddata": 8, "groundwork": 9, "map": [9, 10, 11, 14, 160, 163, 169, 172, 175, 177, 178, 238, 250, 252, 281, 287, 288, 289, 290, 291, 292, 293, 300, 309, 327, 328, 329, 333, 335, 339, 340, 342, 345, 350, 358, 373, 395, 397, 404, 412, 417, 445, 450, 459, 474, 480, 481, 482, 483, 487, 488, 489, 492, 494, 498, 500, 502, 504, 508], "datbas": 9, "tree": [9, 26, 69, 206, 286, 309, 339, 340, 346, 373, 379, 401, 442], "append": [9, 26, 37, 43, 152, 153, 204, 282, 283, 309, 314, 333, 339, 396, 407, 415, 438, 448, 464, 465, 466, 468, 469, 470, 473, 476, 491, 494], "search": [9, 55, 69, 79, 165, 201, 219, 239, 254, 286, 301, 309, 314, 322, 329, 331, 403, 408, 438, 480, 500], "a1": [9, 81, 219, 309, 329, 502], "a1b1": 9, "a1b1c1": 9, "a1b1c2": 9, "a1b2": 9, "a1b2c1": 9, "a2": [9, 81, 219, 309, 502], "aren": [9, 20, 159, 219, 239, 250, 371, 447, 493, 502], "algorithm": [9, 44, 49, 56, 216, 223, 328, 415, 467, 480, 483, 493, 502], "travers": [9, 309, 340, 445], "region": [9, 164, 167, 172, 174, 182, 195, 200, 201, 239, 283, 316, 317, 353, 489, 498, 500, 502], "indexindata": [9, 504], "increas": [9, 252, 313, 317, 340, 348, 395, 404, 408, 452, 464, 480, 498, 500, 502], "monoton": [9, 408, 502], "children": [9, 104, 283, 286, 293, 309, 342, 345, 347, 352, 353, 355, 403, 450, 504], "parent": [9, 47, 60, 82, 104, 163, 200, 214, 254, 255, 286, 289, 291, 297, 303, 306, 309, 330, 333, 339, 340, 342, 346, 348, 349, 353, 360, 364, 393, 412, 448, 487, 498], "contigu": [9, 493], "interleav": 9, "sibl": [9, 286, 303, 309, 502], "asid": [9, 331], "necessarili": [9, 56, 152, 165, 201, 480, 502], "child": [9, 26, 286, 291, 309, 316, 328, 330, 333, 445, 452, 483, 504], "serialnum": [9, 342, 344, 504], "numchildren": [9, 504], "reach": [9, 155, 211, 401, 406, 452, 480, 489, 502], "desir": [9, 22, 27, 93, 155, 167, 200, 214, 238, 259, 286, 291, 309, 340, 342, 344, 364, 401, 404, 406, 411, 444, 452, 474, 480, 502, 504], "ancestor": [9, 286, 309, 342, 346], "yield": [9, 104, 167, 238, 243, 245, 248, 309, 315, 329, 407, 483, 491, 502], "direct": [9, 61, 79, 166, 167, 190, 250, 286, 293, 308, 309, 316, 328, 333, 334, 338, 340, 345, 356, 408, 438, 440, 450, 480, 498, 500, 502, 504], "elemen": 9, "subsequ": [9, 175, 236, 315, 344, 345, 406], "form": [9, 27, 78, 137, 139, 165, 211, 238, 239, 250, 254, 281, 286, 290, 291, 297, 303, 309, 316, 332, 342, 346, 371, 374, 386, 396, 440, 482, 489, 492, 493, 498, 502], "lightweight": [9, 83], "stitch": [9, 438], "troubl": [9, 306, 489], "laid": [9, 342], "approach": [9, 21, 204, 219, 281, 283, 313, 329, 342, 350, 408, 451, 480, 483, 493, 502], "reason": [9, 42, 104, 151, 152, 238, 243, 250, 287, 292, 315, 331, 339, 340, 344, 415, 438, 444, 447, 448, 452, 480, 489, 498], "bad": [9, 155, 299, 374, 395, 451], "second": [9, 77, 92, 167, 182, 202, 211, 219, 239, 281, 283, 309, 329, 337, 350, 408, 414, 415, 439, 448, 451, 452, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 484, 491, 502], "pretti": [9, 287, 347, 415, 433, 438, 476], "unwieldi": 9, "consum": [9, 259, 292, 332, 407, 438, 480], "cursor": 9, "slice": [9, 308, 340, 408], "ineffici": [9, 286, 303, 306, 309], "cl": [9, 56, 153, 344, 403, 492, 502], "nonsens": [9, 10], "who": [9, 144, 200, 204, 374, 396, 446, 451, 452, 480, 485, 502], "treat": [9, 235, 238, 243, 283, 286, 309, 328, 329, 331, 357, 379, 415, 438, 502, 506], "might": [9, 47, 60, 152, 195, 250, 283, 286, 306, 408, 412, 415, 438, 445, 447, 451, 452, 483, 487, 489, 502, 504], "valid": [9, 34, 47, 60, 66, 69, 78, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 125, 131, 132, 133, 136, 137, 140, 141, 142, 153, 163, 188, 236, 238, 239, 244, 254, 262, 280, 281, 292, 301, 302, 306, 309, 315, 316, 328, 329, 331, 332, 339, 345, 354, 363, 365, 366, 371, 372, 374, 376, 399, 408, 409, 442, 445, 479, 480, 483, 485, 487, 489, 492, 502, 505], "storabl": [9, 404], "numer": [9, 139, 147, 163, 238, 239, 281, 286, 290, 292, 328, 333, 415, 482, 483, 498, 502, 505], "7": [9, 78, 82, 95, 96, 99, 105, 108, 137, 142, 147, 153, 155, 173, 184, 220, 290, 291, 299, 316, 335, 339, 354, 355, 407, 415, 451, 452, 458, 466, 487, 492, 494, 500, 502, 506], "9": [9, 21, 78, 82, 83, 101, 108, 135, 142, 153, 155, 220, 316, 335, 396, 407, 408, 415, 458, 466, 480, 481, 487, 491, 492, 493, 494, 502, 508], "6": [9, 56, 76, 78, 90, 99, 112, 136, 142, 147, 152, 153, 155, 173, 175, 184, 220, 286, 291, 308, 315, 316, 329, 335, 338, 354, 355, 397, 406, 407, 415, 437, 458, 465, 466, 468, 470, 473, 476, 487, 491, 492, 494, 502, 506], "revers": [9, 175, 178, 204, 220, 267, 309, 328, 338, 363, 445, 487], "essenti": [9, 19, 104, 151, 175, 259, 281, 287, 438, 493], "abil": [10, 61, 104, 219, 224, 267, 286, 340, 352, 359, 360, 412, 430, 438, 450, 482, 483], "arg": [10, 24, 39, 60, 64, 65, 66, 74, 78, 82, 89, 102, 108, 131, 133, 134, 135, 136, 137, 151, 169, 197, 238, 239, 280, 281, 288, 289, 290, 291, 292, 293, 303, 329, 338, 341, 345, 355, 364, 366, 380, 395, 396, 398, 415, 443, 483], "helper": [10, 21, 23, 58, 219, 244, 262, 309, 345, 349, 360, 364, 374, 383, 388, 390, 394, 489], "loader": [10, 287, 290, 292, 306], "round_trip_data": 10, "yamliz": [10, 281, 287, 288, 289, 290, 291, 292, 293, 438], "attribute_collect": [10, 287, 288, 289, 290, 291, 292, 293], "attributecollect": [10, 287, 288, 290, 291, 292, 293], "passiv": 10, "metadata": [10, 15, 143, 160, 167, 168, 175, 178, 183, 195, 281, 290, 342, 344, 345, 377, 414, 482, 483, 504], "To": [10, 19, 26, 45, 60, 77, 82, 145, 154, 200, 219, 281, 283, 286, 316, 328, 329, 331, 348, 379, 389, 391, 396, 415, 422, 438, 442, 443, 444, 445, 447, 448, 450, 452, 480, 481, 489, 490, 492, 493, 502, 504, 505, 508], "variabl": [10, 19, 47, 49, 50, 56, 78, 104, 145, 155, 163, 169, 170, 175, 195, 204, 214, 239, 250, 264, 283, 286, 291, 292, 306, 309, 312, 313, 316, 317, 322, 329, 337, 344, 396, 411, 415, 438, 445, 448, 451, 452, 479, 481, 482, 483, 485, 489, 501, 502, 508], "instanti": [10, 20, 77, 125, 155, 162, 202, 203, 204, 217, 219, 281, 342, 344, 346, 359, 363, 366, 415, 445, 447], "obvious": [10, 216, 281, 348, 452], "huge": [10, 259, 438], "whole": [10, 41, 42, 61, 175, 200, 219, 296, 309, 329, 352, 444, 448, 452, 480, 482, 489, 493, 502], "lose": [10, 153, 155, 480], "claim": 10, "fidel": [10, 243, 286, 297, 480, 497, 498, 502], "your": [10, 19, 21, 31, 46, 77, 82, 104, 200, 214, 219, 239, 245, 250, 281, 310, 328, 329, 366, 374, 396, 398, 401, 408, 412, 414, 442, 443, 444, 445, 448, 451, 452, 453, 459, 460, 473, 478, 480, 481, 487, 488, 492, 493, 495, 502, 508], "understand": [10, 205, 338, 345, 443, 447, 448, 450, 452, 480], "unitless": [10, 104], "test_outputwrit": [12, 13], "test_compareset": [12, 13], "test_diffresultsbas": [12, 13], "test_comparedatabasedupl": [12, 13], "test_comparedatabasesim": [12, 13], "test_diffspecialdata": [12, 13], "test_diffsimpledata": [12, 13], "test_compareauxdata": [12, 13], "makeshufflehistori": [12, 14], "test_load": [12, 14], "test_loadsortset": [12, 14], "test_histori": [12, 14], "makehistori": [12, 14], "test_writetodb": [12, 14], "test_geth5fil": [12, 14], "test_auxdata": [12, 14], "test_replacenon": [12, 14], "test_mergehistori": [12, 14], "test_splitdatabas": [12, 14], "test_grablocalcommithash": [12, 14], "test_filenam": [12, 14], "test_readinputsfromdb": [12, 14], "test_delet": [12, 14], "test_open": [12, 14], "test_loadc": [12, 14], "test_loadblueprint": [12, 14], "test_preprestartrun": [12, 14], "test_computepar": [12, 14], "small_yaml": [12, 14], "test_readwriteroundtrip": [12, 14], "test_baddata": [12, 14], "test_interactbol": [12, 15, 256, 257, 263, 264], "test_distribut": [12, 15, 379, 386], "test_demonstratewritinginteract": [12, 15], "test_interacteverynodereturntightcoupl": [12, 15], "test_timenodeloop_tightcoupl": [12, 15], "test_syncdbafterwrit": [12, 15], "test_nosyncdbafterwrit": [12, 15], "test_writesystemattribut": [12, 15], "test_metadata_endsuccessfulli": [12, 15], "test_metadataendfail": [12, 15], "test_gethistori": [12, 15], "test_gethistorybyloc": [12, 15], "test_loadreadonli": [12, 15], "test_growtofullcor": [12, 15, 351, 358, 360], "test_growtofullcorewithc": [12, 15], "test_growtofullcorefromfactori": [12, 15], "test_growtofullcorefromfactorywithc": [12, 15], "test_readwritten": [12, 15], "test_readwithoutinput": [12, 15], "test_varioustypeswork": [12, 15], "test_timestep": [12, 15], "test_baddbnam": [12, 15], "test_standardrestart": [12, 15], "test_roundtrip": [12, 16, 294, 300], "test_roundtripbool": [12, 16], "test_flatten": [12, 16, 416, 425], "test_backwardscompat": [12, 16], "test_locationpack": [12, 17], "test_locationpackingoldervers": [12, 17], "test_locationpackingoldvers": [12, 17], "test_clos": [12, 17], "methodnam": [13, 14, 15, 16, 17, 30, 31, 34, 35, 36, 41, 42, 53, 54, 58, 59, 74, 75, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 210, 211, 223, 224, 225, 232, 233, 234, 247, 248, 252, 257, 258, 264, 265, 266, 267, 268, 269, 272, 279, 295, 296, 297, 298, 299, 300, 301, 302, 322, 323, 324, 325, 326, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "runtest": [13, 14, 15, 16, 17, 30, 31, 34, 35, 36, 41, 42, 53, 54, 58, 59, 74, 75, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 210, 211, 223, 224, 225, 232, 233, 234, 247, 248, 252, 257, 258, 264, 265, 266, 267, 268, 269, 272, 279, 295, 296, 297, 298, 299, 300, 301, 302, 321, 322, 323, 324, 325, 326, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "testcas": [13, 14, 15, 16, 17, 30, 31, 34, 35, 36, 41, 42, 53, 54, 58, 59, 74, 75, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 210, 211, 224, 232, 234, 247, 248, 252, 257, 258, 264, 265, 266, 267, 268, 269, 272, 295, 296, 297, 298, 299, 300, 301, 302, 322, 323, 324, 325, 326, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 376, 377, 378, 379, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 451], "valueerror": [13, 14, 15, 16, 17, 30, 31, 34, 35, 36, 41, 42, 53, 54, 58, 59, 74, 75, 78, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 157, 158, 159, 160, 161, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 203, 210, 211, 223, 224, 225, 232, 233, 234, 238, 239, 247, 248, 252, 254, 257, 258, 264, 265, 266, 267, 268, 269, 272, 279, 283, 286, 287, 293, 295, 296, 297, 298, 299, 300, 301, 302, 314, 315, 322, 323, 324, 325, 326, 327, 345, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 372, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 406, 411, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 485], "photocopi": 13, "simlar": 13, "walk": [14, 487, 493], "few": [14, 19, 32, 155, 236, 259, 329, 363, 445, 448, 451, 452, 466, 479, 480, 492, 493, 494, 502], "shuffl": [14, 216, 218, 219, 220, 224, 291, 319, 329, 331, 412, 483, 487, 493, 498, 500, 502], "languag": [14, 342, 467, 480, 493], "agnost": 14, "super": [14, 44, 56, 74, 136, 257, 258, 308, 404, 452], "correctli": [14, 16, 165, 211, 257, 264, 265, 272, 279, 283, 286, 308, 322, 327, 353, 354, 360, 361, 390, 392, 395, 430, 435, 452, 483, 485, 489], "armirun": [14, 224, 360], "setup": [14, 281, 316, 322, 366, 452, 483, 501], "abov": [14, 102, 151, 153, 163, 235, 250, 281, 283, 309, 322, 331, 339, 346, 360, 397, 407, 420, 440, 445, 447, 448, 450, 452, 466, 479, 480, 489, 493, 494, 498, 502, 504, 505], "reloadingdb": 14, "nonexist": [14, 377], "refoneblockreactor": 14, "nsystem": 14, "y": [14, 26, 37, 43, 93, 108, 114, 136, 142, 153, 219, 261, 286, 291, 308, 333, 335, 339, 340, 406, 408, 412, 414, 415, 434, 439, 440, 451, 465, 467, 468, 469, 470, 475, 476, 491, 493, 494, 498, 502, 504], "z": [14, 37, 43, 83, 90, 112, 137, 139, 152, 153, 154, 155, 157, 190, 283, 286, 291, 300, 309, 310, 316, 317, 322, 324, 328, 329, 333, 334, 335, 338, 339, 340, 415, 440, 445, 463, 465, 467, 468, 469, 473, 475, 476, 477, 478, 482, 487, 491, 493, 494, 495, 498, 502], "sfp": [14, 27, 34, 219, 224, 281, 283, 287, 291, 293, 329, 330, 348, 349, 360, 483, 487, 497, 502], "1000": [14, 139, 142, 155, 252, 448, 452, 487, 492, 493, 497, 502], "evst": 14, "excor": [14, 281, 330, 356, 487, 492, 502], "2000": [14, 108, 112, 113, 125, 137, 142, 490, 502], "ngrid": 14, "hex_corners_up": 14, "lattic": [14, 169, 173, 200, 218, 224, 236, 238, 239, 250, 253, 254, 255, 257, 258, 264, 286, 291, 292, 296, 300, 304, 309, 315, 340, 397, 406, 445, 459, 483, 485, 493, 494], "ic": [14, 125, 291, 295, 298, 299, 301, 474, 493, 502], "symmetri": [14, 250, 282, 283, 286, 291, 309, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 397, 466, 474, 480, 482, 483, 493, 494, 497, 502], "32": [14, 153, 331, 345, 404, 415, 480, 493], "hex": [14, 53, 54, 175, 178, 187, 190, 192, 216, 220, 223, 225, 239, 250, 282, 286, 291, 309, 315, 316, 324, 325, 329, 332, 333, 335, 337, 338, 339, 340, 350, 352, 353, 354, 358, 360, 379, 397, 406, 407, 417, 457, 461, 463, 466, 474, 477, 478, 479, 480, 482, 483, 485, 487, 493, 495, 497, 498, 500, 502], "And": [14, 212, 215, 283, 340, 364, 443, 444, 451, 452, 489, 493], "move": [14, 47, 58, 155, 165, 206, 207, 214, 215, 218, 219, 281, 283, 287, 290, 292, 309, 320, 322, 328, 329, 331, 340, 348, 355, 379, 396, 402, 412, 414, 467, 479, 480, 482, 483, 485, 487, 497], "cover": [15, 125, 160, 309, 327, 353, 379, 444, 451, 489, 501], "quickli": [15, 19, 204, 360, 379, 442, 449, 476, 480, 485, 489, 492, 494], "bol": [15, 19, 25, 32, 70, 78, 204, 212, 236, 254, 261, 264, 281, 286, 287, 309, 313, 329, 412, 445, 450, 479, 482, 483, 487, 492, 498, 499, 500, 502, 504, 507], "temporari": [15, 20, 62, 77, 250, 401, 414, 421], "NOT": [15, 77, 100, 101, 151, 175, 211, 219, 220, 309, 313, 353], "fast": [15, 21, 77, 176, 184, 214, 220, 241, 243, 250, 286, 310, 329, 333, 438, 447, 459, 479, 480, 482, 487, 488, 492, 494, 498, 500, 502], "everi": [15, 21, 56, 78, 159, 175, 204, 236, 238, 243, 250, 254, 283, 309, 329, 342, 363, 366, 379, 395, 397, 398, 407, 408, 412, 414, 415, 438, 445, 450, 452, 481, 485, 489, 492, 494, 497, 502, 508], "syncdbafterwrit": [15, 482, 485, 502], "either": [16, 26, 44, 47, 56, 58, 78, 79, 104, 164, 167, 169, 175, 178, 200, 204, 205, 214, 219, 239, 243, 254, 259, 281, 286, 290, 291, 292, 297, 309, 316, 331, 333, 337, 339, 340, 364, 372, 374, 379, 397, 398, 400, 412, 438, 447, 448, 451, 452, 474, 480, 489, 493, 494, 502], "text": [19, 21, 60, 61, 66, 78, 162, 286, 287, 306, 309, 315, 364, 379, 386, 393, 397, 412, 415, 433, 438, 443, 452, 468, 476, 483, 487, 493, 502, 504, 505], "mechan": [19, 78, 79, 87, 116, 226, 306, 329, 331, 377, 448, 480, 481, 489, 502, 505, 508], "etc": [19, 20, 26, 47, 78, 104, 108, 134, 152, 154, 162, 163, 200, 201, 202, 204, 208, 212, 219, 238, 243, 245, 250, 260, 281, 282, 283, 286, 287, 293, 304, 306, 309, 313, 315, 316, 329, 331, 340, 342, 345, 364, 366, 380, 396, 397, 411, 412, 438, 445, 447, 448, 450, 451, 479, 480, 487, 491, 492, 493, 494, 501, 502], "particularli": [19, 42, 66, 239, 322, 329, 340, 447, 451, 489, 494, 502], "eqhistorytrackerinterfac": 19, "unravel": 19, "interest": [19, 21, 49, 83, 85, 283, 314, 315, 322, 329, 445, 465, 480, 489, 501, 502], "armiblock": 19, "blocknam": 19, "historykei": 19, "paralyzingli": 19, "slow": [19, 309, 328, 438, 449, 483], "def": [19, 56, 281, 342, 345, 398, 407, 413, 443, 447, 448, 464, 466, 474, 476, 487, 489, 492, 493, 502], "percentbu": [19, 219, 467, 498, 499], "now": [19, 37, 47, 49, 104, 139, 146, 175, 188, 201, 207, 252, 281, 286, 309, 330, 338, 342, 442, 448, 450, 451, 452, 480, 481, 482, 483, 484, 485, 487, 488, 489, 492, 493, 497, 502, 503, 505, 508], "assemswithhistori": 19, "timestepsavail": 19, "gettimeindic": 19, "fluxattimestep3": 19, "b1003a": 19, "date": [19, 238, 250, 281, 329, 340, 372, 442, 452, 482, 483, 484, 485, 487, 489, 502], "stop": [19, 76, 339, 398, 438, 452, 473, 480], "detailassemblynam": 19, "year": [19, 104, 414, 452, 480, 500], "look": [19, 21, 28, 139, 152, 154, 155, 163, 204, 214, 219, 238, 243, 283, 286, 309, 316, 329, 331, 340, 342, 403, 415, 444, 447, 448, 449, 452, 487, 489, 490, 493, 502], "ask": [19, 21, 60, 286, 309, 374, 399, 411], "activ": [19, 32, 47, 60, 72, 78, 151, 155, 163, 201, 204, 281, 283, 290, 292, 306, 329, 373, 374, 412, 442, 444, 445, 447, 451, 452, 480, 481, 483, 489, 498, 502, 508], "treatment": [19, 32, 243, 292, 345, 502], "assem": [19, 219, 224, 301, 313, 316, 327, 328, 329, 330, 349, 396, 412, 487], "give": [19, 25, 93, 134, 139, 154, 219, 236, 286, 292, 303, 306, 309, 322, 339, 340, 364, 408, 409, 450, 484, 493, 494, 504], "signal": [19, 32, 77, 286, 345, 346], "timeindic": 19, "boc": [19, 78, 204, 212, 236, 250, 254, 257, 264, 286, 396, 445, 479, 498, 502, 504], "moc": [19, 78, 250], "fashion": [19, 451], "inexpens": 19, "simultan": [19, 408], "preload": 19, "keyerror": [19, 55, 79, 331], "found": [19, 26, 42, 58, 79, 167, 212, 214, 219, 281, 283, 286, 309, 314, 322, 329, 331, 332, 335, 337, 346, 399, 403, 408, 409, 434, 438, 445, 450, 480, 486, 487, 489, 492, 502], "manipul": [20, 47, 65, 76, 165, 204, 281, 336, 364, 411, 438, 502, 503, 504], "catch": [20, 163, 360, 423], "admittedli": 20, "_c": [20, 243], "databs": 20, "soon": [20, 281, 306, 309, 350, 451, 452, 455, 462, 478, 480, 482, 489, 490, 495], "construct": [20, 32, 56, 58, 70, 78, 79, 89, 152, 170, 182, 200, 211, 254, 260, 281, 282, 287, 288, 289, 290, 291, 293, 296, 297, 301, 302, 306, 309, 313, 322, 329, 331, 332, 335, 339, 340, 341, 342, 354, 374, 386, 389, 392, 395, 407, 467, 474, 475, 482, 487, 492, 502, 504], "argument": [20, 32, 39, 53, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 104, 151, 154, 211, 238, 240, 281, 291, 304, 306, 309, 322, 329, 337, 339, 340, 342, 345, 366, 374, 378, 379, 386, 389, 395, 415, 443, 445, 447, 450, 451, 452, 482, 483, 485, 487], "delet": [20, 21, 62, 77, 78, 144, 146, 153, 155, 175, 250, 316, 329, 363, 364, 379, 401, 402, 411, 442, 451, 483, 502], "clean": [20, 62, 77, 146, 155, 214, 309, 316, 401, 421, 442, 445, 452, 483, 502], "job": [20, 77, 239, 315, 430, 502], "cours": [20, 219, 310, 446, 480, 492, 493, 494], "diagnos": [21, 388], "psutil": 21, "perspect": [21, 144, 243, 281, 438, 489, 497], "great": [21, 101, 329, 342, 430, 442, 452, 480, 502], "gc": 21, "get_object": 21, "garbag": [21, 77], "collector": [21, 77], "count": [21, 22, 23, 27, 165, 166, 238, 286, 329, 335, 349, 380, 387, 396, 414, 415, 483, 494], "note": [21, 94, 152, 169, 404, 407, 414, 415, 432, 444, 448, 464, 476, 480, 487, 494, 497, 498, 502, 504], "sy": [21, 76, 489], "getsizeof": 21, "certainli": [21, 452, 494, 502], "slightli": [21, 65, 219, 280, 286, 292, 340, 482, 485, 489, 493, 502], "seem": [21, 33, 45, 220, 250, 340, 342, 372], "de": [21, 44, 286, 364], "alloc": [21, 167, 238, 239], "got": [21, 144], "2gb": 21, "pythonhost": 21, "hook": [21, 47, 78, 204, 252, 280, 281, 290, 392, 395, 446, 447, 480, 482, 485, 489, 502], "good": [21, 45, 47, 92, 139, 173, 204, 220, 257, 287, 306, 345, 379, 412, 415, 444, 446, 450, 451, 480, 481, 482, 487, 489, 502, 508], "summari": [21, 27, 28, 39, 61, 66, 70, 153, 214, 282, 293, 302, 309, 317, 329, 363, 446, 467, 474, 475, 487, 502, 504], "timedescript": 21, "stdout": [21, 214, 302, 364, 489, 504], "debugmem": [21, 502], "turn": [21, 83, 238, 250, 254, 281, 283, 286, 291, 329, 364, 386, 396, 438, 443, 445, 447, 474, 480, 482, 492, 494, 502, 505], "problem": [21, 55, 104, 163, 167, 169, 170, 182, 239, 250, 254, 255, 292, 299, 309, 328, 329, 339, 340, 341, 363, 374, 377, 414, 445, 452, 476, 480, 493, 494, 500, 502], "attrnam": 21, "refobject": 21, "thorugh": 21, "referr": 21, "oppos": [21, 286, 306, 386, 397], "gigabyt": 21, "reports": 21, "u": [21, 108, 125, 134, 135, 136, 137, 153, 154, 155, 165, 184, 220, 243, 281, 286, 287, 290, 291, 295, 301, 309, 331, 344, 364, 400, 451, 471, 472, 476, 480, 481, 487, 489, 493, 494, 508], "footprint": 21, "ao": 21, "arbitrarili": [21, 328, 329, 331, 395, 489, 502], "deepli": 21, "focus": [21, 338, 480, 494, 502], "held": [21, 309, 329], "classtyp": 21, "sys_mem": 21, "hostnam": 21, "14": [21, 112, 136, 153, 220, 335, 415, 466, 477, 487, 491, 493, 502], "ram": [21, 480], "proc": 21, "mem": 21, "mb": [21, 461, 477, 500], "491": 21, "472": 21, "471": 21, "470": [21, 502], "13": [21, 136, 153, 220, 335, 408, 415, 445, 466, 483, 487, 491, 502], "474": 21, "473": [21, 81, 92], "460": 21, "461": 21, "printabl": 22, "test_newreport": [22, 29], "testreportcontentcr": [22, 29, 30], "test_report": [22, 29], "testreportingutil": [22, 29, 31], "testreport": [22, 29, 31], "testreportinterfac": [22, 29, 31], "groupsorderfirst": [22, 23], "componentwellgroup": [22, 23], "addtoreport": [22, 23], "writehtml": [22, 23], "writegroupshtml": [22, 23], "writeescap": [22, 24], "writereport": [22, 26, 27, 450], "tableofcont": [22, 26], "leveldict": [22, 26], "addchildel": [22, 26, 450], "addrow": [22, 26, 450], "generatedesignreport": [22, 27], "printreport": [22, 27, 31], "writerunsummari": [22, 27], "reportsfp": [22, 27], "countassembliessfp": [22, 27], "insert": [23, 26, 65, 104, 204, 281, 282, 283, 286, 309, 349, 414, 445, 450, 497], "datum": [23, 408], "f": [23, 24, 93, 104, 153, 200, 220, 344, 408, 412, 415, 438, 443, 448, 449, 464, 468, 487, 489, 490, 491, 492, 494, 502, 504], "midst": [23, 309], "accept": [23, 49, 151, 155, 219, 283, 337, 341, 345, 372, 415, 440, 444, 451, 482, 502], "reportdatum": 23, "kwd": 24, "file_path": [24, 26], "embed": [24, 26, 45, 502], "src": [24, 26, 396, 438, 442, 472], "base64": [24, 26], "casetitl": [24, 214, 250, 365, 366, 474], "comprehens": [25, 261, 331, 450], "summar": [25, 28, 39, 55, 66, 70, 204, 363, 364, 450, 467, 474, 475, 483, 487, 502], "cold": [25, 104, 286, 303, 304, 305, 306, 308, 309, 313, 320, 322, 353, 354, 355, 412, 450, 483, 485, 493, 497, 498, 502, 503], "boolean": [25, 26, 78, 151, 155, 166, 204, 259, 283, 286, 309, 313, 315, 316, 322, 329, 332, 365, 372, 392, 408, 412, 414, 438, 498, 502], "part": [25, 56, 116, 167, 204, 239, 281, 309, 316, 320, 331, 335, 337, 345, 415, 438, 447, 450, 451, 459, 480, 483, 489, 492, 502], "tablesect": [25, 26], "control": [25, 32, 50, 82, 172, 174, 175, 177, 183, 190, 211, 219, 236, 238, 239, 282, 283, 286, 287, 291, 292, 309, 315, 316, 323, 328, 329, 331, 341, 342, 367, 415, 448, 452, 459, 479, 480, 482, 483, 487, 489, 492, 497, 498, 500, 502, 504], "pin": [25, 28, 216, 220, 226, 235, 250, 282, 283, 286, 291, 303, 305, 306, 309, 310, 313, 315, 320, 326, 329, 331, 333, 339, 345, 352, 353, 360, 397, 406, 445, 459, 479, 480, 483, 485, 487, 492, 493, 494, 498, 499, 500, 503], "fraction": [25, 80, 82, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 115, 125, 133, 134, 135, 137, 138, 154, 155, 163, 169, 204, 211, 235, 236, 238, 245, 269, 286, 290, 299, 303, 306, 309, 314, 316, 320, 328, 329, 337, 353, 354, 365, 396, 398, 400, 420, 437, 445, 450, 463, 473, 477, 478, 479, 480, 482, 483, 487, 490, 493, 495, 497, 498, 499, 500, 502, 507], "subsect": [25, 26, 220, 287, 442, 481, 508], "componenet": 25, "generatefullcoremap": [25, 27, 28], "showblockaxmesh": [25, 27, 28, 412, 474], "hold": [26, 78, 165, 178, 179, 203, 239, 283, 288, 303, 306, 309, 316, 340, 342, 344, 406, 479, 502], "abc": [26, 38, 287, 337, 339], "htmltree": [26, 450], "htmlelement": [26, 450], "idprefix": 26, "higher": [26, 175, 219, 281, 283, 306, 322, 445, 493, 504], "font": [26, 412], "rang": [26, 46, 56, 92, 103, 115, 329, 340, 342, 393, 407, 448, 452, 456, 463, 467, 469, 470, 478, 487, 492, 495, 502], "term": [26, 163, 166, 167, 212, 219, 238, 245, 250, 329, 333, 408, 479, 480, 493], "href": 26, "referenc": [26, 162, 165, 366], "left": [26, 155, 162, 218, 281, 306, 309, 335, 337, 339, 340, 372, 397, 408, 415, 450, 504, 505, 506], "subhead": 26, "imagepath": 26, "encod": 26, "hexplot": 26, "premad": 26, "png": [26, 316, 412, 449, 458, 502], "With": [26, 44, 283, 340, 346, 487, 493, 502, 505], "row": [26, 43, 166, 182, 202, 309, 397, 407, 415, 417, 433, 450, 504], "rname": [26, 450], "yaxi": [26, 261, 414, 450], "eventu": [26, 151, 287, 332, 397, 482, 502], "axi": [26, 175, 261, 286, 322, 339, 340, 397, 406, 412, 414, 440, 497, 498, 500], "identifi": [26, 77, 104, 152, 155, 281, 286, 287, 314, 396, 400, 435, 480, 493, 498, 502], "peakdpa": 26, "keff": [26, 211, 250, 252, 329, 371, 408, 414, 445, 450, 487, 498, 500, 502, 505], "seri": [26, 55, 56, 77, 151, 152, 173, 204, 408, 414, 442, 492, 502], "effect": [26, 51, 59, 108, 137, 155, 169, 238, 239, 254, 288, 292, 309, 315, 328, 329, 344, 379, 450, 480, 500, 502, 505], "uncertainti": [26, 450], "keffunc": [26, 414, 450, 500], "uncontrol": [26, 211, 414, 437, 493, 494, 500], "burn": [26, 125, 153, 155, 159, 163, 211, 238, 243, 250, 286, 287, 292, 295, 299, 301, 396, 437, 451, 476, 479, 494, 498, 502], "getassembli": [26, 282, 329, 349, 445, 467, 487, 504], "peakbu": 26, "bu": [26, 216, 219, 220, 238, 450, 451, 487, 492], "maxvalu": 26, "defaultdict": [26, 239, 464, 491], "max": [26, 81, 104, 211, 219, 224, 250, 261, 286, 309, 329, 342, 345, 348, 349, 483, 497, 500, 502, 505, 507], "maxpercentbu": [26, 219, 329, 497, 500, 502], "linetoaddto": 26, "our": [26, 45, 191, 364, 372, 404, 425, 444, 447, 450, 451, 452, 465, 480, 486, 489, 493, 502, 505, 506], "ymin": [26, 414, 468], "ext": [26, 90, 92, 123, 373, 379, 442], "minimum": [26, 104, 239, 309, 315, 328, 335, 338, 340, 400, 412, 414, 498, 500, 502], "enum": [26, 77, 78, 153, 179, 237, 239, 332, 373, 404, 482], "enumer": [26, 153, 236, 332, 373, 448, 458, 473, 476, 482], "pdf": [27, 80, 81, 92, 94, 95, 96, 97, 98, 99, 108, 130, 131, 132, 133, 137, 139, 154, 162, 175, 442, 483, 502], "disabl": [27, 78, 204, 239, 250, 254, 415, 421, 433, 445, 482, 498, 502], "spent": [27, 219, 224, 293, 329, 333, 347, 349, 356, 445, 475, 480, 482, 483, 487, 494, 497, 500, 502], "pool": [27, 219, 224, 293, 329, 333, 347, 349, 356, 445, 475, 482, 483, 487, 494, 497, 502], "miscellan": 28, "Then": [28, 46, 165, 238, 283, 286, 309, 489], "processor": [28, 77, 144, 151, 205, 239, 254, 386, 438, 448, 485, 487, 493], "convergencesummari": 28, "weight": [28, 55, 84, 152, 153, 154, 155, 169, 200, 201, 238, 264, 306, 309, 329, 400, 476, 483, 489, 491, 498, 500, 502], "balanc": [28, 179, 200, 239, 250, 252, 388, 448, 451, 498], "duct": [28, 93, 282, 286, 303, 306, 315, 322, 323, 329, 331, 353, 355, 412, 459, 464, 474, 480, 487, 492, 493, 498, 502], "simplist": [28, 502], "averag": [28, 92, 97, 104, 169, 175, 200, 238, 250, 264, 283, 286, 308, 309, 313, 314, 316, 328, 329, 331, 342, 345, 352, 408, 412, 426, 483, 487, 491, 493, 497, 498, 500, 502], "fz": 28, "fxy": 28, "fq": 28, "edit": [28, 56, 290, 443, 445, 452, 481, 493, 502, 504, 508], "test_timeseri": [29, 30], "test_tablecr": [29, 30], "test_reportcont": [29, 30], "test_reportcontentsend": [29, 30], "test_neutronicsplotfunct": [29, 30], "test_writereport": [29, 30, 31], "test_reportbas": [29, 30], "test_reportlog": [29, 30], "test_getsysteminfolinux": [29, 31], "test_getsysteminfowindow": [29, 31], "test_getsysteminfomac": [29, 31], "test_getsysteminfo": [29, 31], "test_getnodenam": [29, 31], "test_setdata": [29, 31], "test_getdata": [29, 31], "test_reactorspecificreport": [29, 31], "test_writewelcomehead": [29, 31], "test_printreport": [29, 31], "test_distributablereportint": [29, 31], "test_interactbolreportint": [29, 31], "test_interacteverynod": [29, 31, 33, 36, 256, 257, 263, 264], "test_interactboc": [29, 31, 222, 224, 256, 257, 263, 264], "test_interacteoc": [29, 31], "test_interacteol": [29, 31], "_getsysteminfolinux": 31, "mock": [31, 224, 252, 353, 380, 390], "mocksubprocess": 31, "_getsysteminfowindow": 31, "_getsysteminfomac": 31, "saniti": [31, 324, 392, 433], "wild": 31, "mainstream": [31, 144], "distro": 31, "fail": [31, 74, 77, 155, 201, 238, 267, 283, 335, 350, 365, 366, 374, 379, 389, 390, 393, 396, 409, 413, 421, 482, 483, 485, 502], "empti": [31, 37, 43, 78, 104, 138, 155, 201, 211, 238, 254, 281, 283, 286, 328, 344, 353, 354, 355, 360, 379, 404, 412, 415, 417, 433, 479, 483, 489, 493, 502], "machin": [31, 72, 205, 219, 224, 412, 414, 480, 481, 487, 508], "cluster": [31, 46, 55, 60, 77, 366, 411, 492, 502], "trigger": [32, 151, 162, 166, 236, 281, 346, 467, 474, 475, 479, 480, 487, 497, 504], "folder": [32, 61, 204, 212, 214, 409, 421, 442, 450, 451, 481, 489, 492, 504, 508], "review": [32, 137, 163, 204, 379, 444, 445, 451, 452], "collabor": [32, 281, 480], "dumpsnapshot": [32, 36, 502], "defaultsnapshot": [32, 502], "manageri": 32, "assign": [32, 78, 104, 153, 200, 219, 239, 265, 286, 306, 314, 331, 333, 339, 342, 344, 345, 354, 413, 483, 487, 498, 502], "mol": [32, 82, 108, 133, 137, 502], "stamp": 32, "cccnnn": [32, 502], "opposit": [32, 305, 340, 448], "engin": [33, 47, 83, 110, 163, 227, 446, 489, 490, 491, 492, 502], "world": [33, 250, 396, 433], "test_calcmgflu": [33, 34], "test_historyparamet": [33, 34], "test_historyreport": [33, 34], "test_getblockinassembli": [33, 34], "test_timestepfilt": [33, 34], "test_timestepfilteringwithgap": [33, 34], "test_blocknam": [33, 34], "test_fullbreakdown": [33, 35], "test_displaymemoryusag": [33, 35], "test_printfullmemorybreakdown": [33, 35], "test_getreferr": [33, 35], "test_checkforduplicateobjectsonarmimodel": [33, 35], "test_profilememoryusageact": [33, 35], "get_contain": [33, 35], "test_expandcontain": [33, 35], "test_counthandlesrecurs": [33, 35], "test_interactcoupl": [33, 36], "test_activeatedefaultsnapshots_30cycles2burnstep": [33, 36], "test_activeatedefaultsnapshots_17cycles5burnstep": [33, 36], "confirm": [34, 353, 374], "mg": [34, 153], "hdf": [34, 487], "hdfdb": [34, 77], "readblockshistori": 34, "historical_valu": 34, "historical_indic": 34, "cast": [34, 135], "energi": [34, 154, 158, 167, 169, 175, 178, 179, 182, 193, 200, 201, 241, 250, 252, 267, 286, 306, 309, 329, 353, 409, 412, 445, 471, 479, 480, 483, 489, 498, 500, 502], "retriev": [34, 78, 152, 153, 155, 184, 201, 202, 204, 211, 247, 306, 309, 314, 329, 331, 338, 342, 352, 353, 354, 355, 360, 401, 482, 487, 491, 502], "paramat": 34, "swap": [34, 144, 146, 219, 414, 467, 487, 502], "5": [34, 36, 54, 56, 78, 80, 83, 93, 96, 97, 101, 112, 120, 136, 139, 140, 142, 151, 153, 163, 167, 173, 175, 190, 211, 219, 220, 235, 236, 245, 283, 286, 295, 316, 322, 335, 338, 340, 352, 354, 396, 407, 415, 434, 437, 450, 452, 465, 466, 467, 469, 470, 474, 476, 485, 487, 489, 491, 492, 493, 494, 498, 502, 504, 506], "loc": [34, 329, 330, 345, 349, 363, 445, 494], "mocksnapshotrequest": 36, "30": [36, 108, 131, 132, 153, 162, 178, 211, 283, 329, 338, 354, 397, 407, 415, 437, 452, 474, 487, 493, 502], "burnstep": [36, 46, 203, 204, 396, 437, 493, 494, 502], "17": [36, 108, 153, 163, 167, 220, 335, 482, 487, 491, 502], "amen": 37, "theoret": [37, 82, 104, 129, 301, 306, 354, 483, 485, 499], "sort": [37, 78, 153, 175, 282, 286, 303, 309, 329, 331, 338, 342, 353, 360, 363, 404, 412, 438, 466, 467, 483, 487, 492, 502], "wide": [37, 170, 305, 309, 369, 379, 443, 490, 493, 500], "vi": [37, 38, 39, 489], "qualiti": [37, 93, 113, 135, 452, 473, 480, 490], "pure": [37, 81, 108, 110, 133, 136, 329, 364, 397, 404, 433, 438, 490], "silo": 37, "binari": [37, 45, 78, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 190, 407, 471, 489, 502, 504], "test_vi": [37, 40, 42], "testvtkmesh": [37, 40, 41], "testvisdump": [37, 40, 41], "test_xdmf": [37, 40], "testxdmf": [37, 40, 42], "dumpstat": [37, 38, 44, 45], "addopt": [37, 39, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 236, 240, 365, 372, 443], "settingsargu": [37, 39, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 236, 240, 375, 378, 443], "docstr": [39, 66, 70, 165, 413, 415, 442, 446, 447, 450, 452, 484], "decor": [39, 66, 70, 345, 379, 398, 399, 409, 419, 447], "instead": [39, 66, 70, 79, 104, 155, 204, 214, 219, 254, 257, 281, 283, 286, 291, 293, 303, 306, 309, 328, 329, 332, 338, 340, 345, 346, 366, 379, 380, 390, 396, 398, 409, 438, 448, 450, 451, 480, 482, 483, 487, 489, 493, 502], "suffici": [39, 66, 70, 108, 204, 254, 310, 493, 502], "short": [39, 47, 55, 60, 66, 70, 163, 214, 217, 250, 342, 344, 345, 366, 373, 447, 452, 481, 493, 502, 508], "express": [39, 47, 332, 407, 434, 438, 451, 452, 467, 480, 493, 502, 506], "One": [39, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 162, 167, 195, 240, 281, 306, 338, 342, 352, 374, 378, 403, 407, 445, 450, 487, 491, 502], "unspecifi": [39, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 240, 265, 378], "parser": [39, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 166, 240, 378, 443], "posit": [39, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 219, 240, 250, 283, 286, 308, 309, 313, 316, 329, 333, 335, 337, 338, 339, 340, 341, 378, 397, 406, 407, 408, 414, 415, 424, 450, 482, 483, 494, 498, 500, 502, 504], "test_testvtkmesh": [40, 41], "test_dumpreactorvtk": [40, 41], "test_dumpreactorxdmf": [40, 41], "test_hexmesh": [40, 41], "test_cartesianmesh": [40, 41], "test_deduptim": [40, 42], "funtion": 42, "vacuum": [42, 175, 329], "resort": 42, "goe": [43, 205, 329, 337, 338, 347, 353, 444, 452, 476], "vertic": [43, 44, 305, 313, 322, 412, 479, 502], "problemat": [43, 293, 480], "primit": [43, 303, 306, 479], "celltyp": 43, "unstructur": [43, 44, 337], "mesh": [43, 44, 45, 50, 125, 165, 170, 172, 177, 178, 183, 239, 250, 252, 283, 286, 287, 289, 295, 298, 299, 301, 308, 309, 313, 316, 317, 322, 325, 327, 328, 329, 333, 334, 335, 338, 339, 340, 341, 345, 355, 408, 412, 467, 474, 475, 482, 483, 487, 493, 494, 497, 498, 499, 500, 502], "vertex": 43, "cell": [43, 286, 329, 333, 335, 337, 338, 339, 340, 391, 397, 406, 424, 433, 442, 493, 494], "onto": [43, 238, 309, 328, 329, 344, 480, 482, 489, 504], "concept": [43, 47, 92, 204, 293, 329, 335, 447, 451, 483, 502], "bunch": [43, 144, 365, 409, 448, 487, 504], "nx3": 43, "per": [43, 44, 50, 76, 125, 155, 159, 163, 165, 169, 204, 213, 254, 286, 303, 309, 316, 317, 327, 329, 335, 366, 396, 414, 415, 433, 445, 451, 479, 480, 483, 493, 498, 500, 502], "belong": [43, 47, 104, 153, 212, 281, 309, 345, 349, 452, 458], "contin": 43, "relev": [43, 78, 160, 204, 219, 227, 254, 288, 313, 329, 331, 346, 348, 404, 444, 453, 478, 485, 494, 495, 502, 504], "writer": [44, 169, 181, 182, 191, 219, 254, 255, 258, 309, 366, 483], "aspect": [44, 224, 415, 445, 492], "export": [44, 218, 481, 489, 508], "total": [44, 55, 82, 108, 133, 165, 167, 178, 182, 197, 200, 212, 224, 235, 245, 283, 286, 306, 309, 315, 317, 322, 329, 353, 388, 397, 398, 400, 408, 448, 450, 452, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 487, 489, 492, 497, 498, 500, 502, 505, 507], "doabl": 44, "arbitrari": [44, 78, 139, 252, 292, 297, 328, 329, 330, 333, 353, 354, 366, 404, 410, 415, 426, 433, 440, 443, 445, 448, 482, 489, 502], "visualiz": 44, "fanci": [44, 47, 281, 342], "difficult": [44, 293, 331, 342, 345, 409, 504], "big": [44, 144, 238, 293, 316, 345, 445, 448, 493, 504], "basenam": [44, 45], "inputnam": [44, 45], "finish": [44, 236, 492, 502], "includeparam": [44, 45], "excludeparam": [44, 45], "exclud": [44, 55, 204, 219, 238, 239, 243, 292, 400], "interchang": 45, "interpret": [45, 66, 78, 79, 82, 89, 102, 104, 108, 131, 134, 135, 136, 137, 152, 175, 290, 291, 292, 322, 329, 331, 332, 397, 408, 487, 502, 505], "light": [45, 243, 476, 479, 494], "live": [45, 145, 163, 206, 212, 214, 217, 236, 250, 281, 292, 447, 504], "xml": [45, 350, 365, 373, 494], "paraview": [45, 481, 489, 508], "visit": [45, 396, 481, 489, 508], "properli": [45, 58, 169, 190, 310, 322, 324, 329, 354, 389, 392, 397, 415, 420, 445, 482], "polyhedra": 45, "unfortun": [45, 339, 404, 413, 451, 502], "__need__": 45, "prism": 45, "wedg": 45, "defeat": 45, "xmdf": 45, "cartesian": [45, 56, 175, 282, 283, 291, 309, 315, 329, 332, 333, 337, 340, 353, 360, 379, 384, 397, 417, 463, 467, 477, 478, 480, 482, 483, 494, 495, 502], "theta": [45, 79, 137, 139, 286, 300, 308, 309, 316, 317, 324, 329, 341, 361, 440, 463, 477, 478, 482, 495, 502], "elementtre": 45, "temporalcollect": 45, "analyz": [46, 49, 55, 56, 215, 235, 445, 447, 480, 487, 501, 504], "often": [46, 47, 48, 66, 77, 79, 85, 86, 90, 104, 145, 152, 162, 166, 169, 173, 204, 214, 226, 238, 282, 309, 310, 331, 333, 335, 336, 339, 345, 443, 459, 466, 480, 481, 482, 487, 489, 490, 492, 493, 502, 503, 504, 508], "sweep": [46, 47, 48, 56, 60, 250, 286, 318, 319, 320, 445, 474, 480, 482, 483, 488, 502], "send": [46, 77, 78, 151, 448, 451], "off": [46, 78, 80, 153, 162, 172, 177, 200, 238, 254, 281, 283, 286, 309, 316, 329, 339, 340, 360, 364, 386, 397, 415, 448, 466, 480, 482, 489, 493, 502], "my": [46, 398, 411, 413, 431, 443, 447, 489, 502], "interdepend": [46, 55], "sensit": [46, 50, 200, 281, 328, 329, 344, 345, 480, 482, 492], "studi": [46, 50, 92, 188, 200, 219, 328, 480, 492, 493, 502], "armiloc": 46, "numstep": 46, "11": [46, 78, 82, 92, 101, 116, 137, 153, 175, 187, 192, 220, 335, 408, 415, 445, 466, 474, 482, 483, 487, 491, 492, 493, 494, 502], "submit": [46, 55, 56, 60, 373, 446, 489, 492, 502], "hpc": [46, 55, 60, 77, 480, 489, 492], "samplinginputmodifi": [46, 48, 49, 56, 59], "fullcoremodifi": [46, 48, 49], "settingsmodifi": [46, 48, 49, 310, 318, 319, 483, 492], "multisettingmodifi": [46, 48, 49], "blueprintblockmodifi": [46, 48, 49, 53], "neutronicsmodifi": [46, 48], "neutronicconvergencemodifi": [46, 48, 50, 310, 318, 319], "neutronicmeshssizemodifi": [46, 48, 50], "pintypeinputmodifi": [46, 48], "smeardensitymodifi": [46, 48, 51], "cladthicknessbyodmodifi": [46, 48, 51], "cladthicknessbyidmodifi": [46, 48, 51], "test_cas": [46, 57], "testarmicas": [46, 57, 58], "testcasesuitedepend": [46, 57, 58], "testcasesuitecomparison": [46, 57, 58], "testextrainputwrit": [46, 57, 58], "multifilesinterfac": [46, 57, 58], "testpluginwithduplicateset": [46, 57, 58], "testpluginforcopyinterfacesmultiplefil": [46, 57, 58], "testcopyinterfaceinput": [46, 57, 58], "test_suitebuild": [46, 57], "latinhypercubemodifi": [46, 57, 59], "settingmodifi": [46, 56, 57, 59], "testlatinhypercubesuitebuild": [46, 57, 59], "testfullfactorialsuitebuild": [46, 57, 59], "testseparateeffectsbuild": [46, 57, 59], "independentvari": [46, 47, 49, 58, 59, 492, 502], "addexplicitdepend": [46, 47], "getpotentialparentfromsettingvalu": [46, 47], "setuptaskdepend": [46, 47], "initializeoper": [46, 47, 474], "summarizedesign": [46, 47, 58], "echoconfigur": [46, 55, 492], "writet": [46, 55], "adddegreeoffreedom": [46, 56, 492], "addmodifierset": [46, 56], "buildsuit": [46, 56, 492], "redirect": [47, 55, 364], "post": [47, 55, 77, 313, 443, 487, 488, 502, 504], "reactiv": [47, 104, 165, 212, 226, 238, 243, 250, 313, 329, 345, 480, 487, 498, 500, 502], "coeffici": [47, 79, 81, 83, 92, 95, 96, 97, 99, 104, 105, 133, 136, 137, 167, 174, 208, 212, 226, 238, 250, 254, 303, 313, 329, 345, 353, 408, 440, 487, 490, 498, 500, 502, 506], "complex": [47, 162, 214, 220, 224, 250, 281, 305, 309, 372, 397, 467, 480, 481, 489, 490, 493, 494, 502, 508], "definit": [47, 49, 79, 82, 108, 155, 157, 159, 163, 165, 172, 177, 228, 236, 245, 260, 275, 281, 282, 284, 285, 289, 290, 291, 293, 306, 307, 309, 328, 329, 331, 340, 342, 343, 344, 345, 346, 347, 360, 369, 372, 392, 395, 396, 399, 412, 438, 444, 445, 447, 474, 476, 482, 483, 485, 489, 490, 491, 492, 493, 497, 502], "independentvariabl": 47, "lazi": [47, 451], "demand": [47, 204, 286, 309], "someon": [47, 56, 151, 250, 290, 342, 346, 480], "reflect": [47, 77, 82, 175, 250, 282, 306, 309, 329, 332, 445, 494, 497, 502], "somehow": [47, 160, 363, 447, 448, 452], "ideal": [47, 78, 169, 281, 331, 379, 489], "explicit": [47, 104, 165, 218, 243, 247, 248, 291, 306, 309, 358, 415, 423, 451, 482, 483, 493, 502], "evalu": [47, 93, 104, 135, 153, 159, 162, 166, 200, 205, 220, 243, 254, 291, 309, 320, 353, 404, 407, 408, 415, 445, 451, 466, 480, 481, 494, 498, 502, 508], "impos": [47, 49, 155, 204, 281, 412], "implicitli": [47, 204, 287, 482, 498, 502], "settingvalu": 47, "filepattern": 47, "conveni": [47, 152, 166, 204, 214, 239, 281, 329, 340, 374, 379, 397, 398, 407, 442, 489, 493, 502], "match": [47, 55, 79, 151, 155, 164, 166, 200, 219, 281, 283, 287, 297, 309, 324, 329, 337, 341, 354, 355, 365, 373, 374, 379, 426, 438, 479, 482, 485, 487, 489, 492, 502, 505], "groupdict": 47, "dirnam": 47, "task": [47, 60, 151, 152, 205, 220, 239, 340, 410, 448, 480, 487, 492, 502, 504], "account": [47, 108, 159, 162, 200, 204, 245, 254, 286, 292, 306, 309, 313, 314, 316, 353, 483, 490, 498, 502], "room": [47, 90, 155, 286, 479, 490, 493, 494], "coverag": [47, 183, 322, 353, 444, 483, 492, 502], "eleg": 47, "page": [47, 70, 90, 110, 116, 135, 137, 142, 235, 412, 447, 448, 450, 480, 493, 494], "additionalfil": 47, "modifiedset": 47, "writestyl": [47, 55], "modif": [47, 56, 82, 89, 102, 104, 108, 131, 134, 135, 136, 137, 172, 241, 281, 282, 286, 287, 288, 289, 292, 295, 299, 301, 306, 316, 366, 413, 464, 467, 474, 475, 482, 483, 487, 489, 493, 494], "safer": [47, 366, 450], "wonder": 47, "medium": [47, 55, 74, 282, 292, 331, 366, 373, 483, 494], "destin": [47, 328, 366, 401, 402, 421], "01": [47, 55, 81, 82, 90, 108, 112, 137, 173, 286, 322, 439, 445, 467, 474, 475, 483, 487, 491, 504], "sourcedir": 47, "forthcom": 47, "baselin": [47, 58, 227, 306, 494, 502], "shufflelog": [47, 78, 219, 224, 487, 493, 502], "loadingfil": [47, 493, 494, 502], "geomfil": [47, 287, 502, 504], "respect": [47, 95, 96, 99, 167, 204, 243, 292, 344, 371, 473, 480, 506], "let": [47, 55, 104, 239, 281, 286, 393, 445, 448, 480, 487, 489, 490, 491, 493, 502, 503], "union": [47, 78, 104, 162, 239, 281, 282, 309, 332, 337, 340, 355, 363, 371, 397, 404, 438], "ping": 47, "modular": [47, 260, 480, 489], "absolut": [47, 78, 309, 333, 340, 366, 411, 438, 484, 502], "wildcard": 47, "glob": [47, 78, 421, 482], "offer": [47, 374, 443, 453, 478, 491, 495], "noth": [47, 200, 216, 224, 329, 338, 353, 388, 412], "inputdirectori": [47, 365, 366, 492], "target": [47, 78, 243, 282, 286, 309, 310, 313, 314, 322, 329, 331, 379, 408, 409, 414, 415, 444, 480, 481, 483, 489, 498, 502, 508], "resolv": [47, 79, 309, 313, 323, 365, 374, 376, 396, 438, 483], "regard": [47, 235], "simplifi": [47, 93, 113, 129, 135, 151, 243, 379, 404, 493, 506], "runtim": [48, 77, 79, 202, 204, 259, 281, 320, 445, 482, 483, 489, 502], "test_inputmodifi": [48, 52], "mockgeom": [48, 52, 53, 54], "testsuitebuilderintegr": [48, 52, 53], "testsettingsmodifi": [48, 52, 53], "neutronicskernelopt": [48, 52, 53], "testfullcoremodifi": [48, 52, 53], "test_pintypeinputmodifi": [48, 52], "testblueprintmodifi": [48, 52, 54], "fail_if_aft": [48, 49, 51], "constuctor": 49, "paramtyp": [49, 56, 59], "__call__": [49, 56, 492], "space": [49, 51, 56, 77, 104, 138, 166, 204, 214, 286, 291, 303, 309, 329, 333, 334, 339, 340, 396, 397, 412, 415, 469, 479, 480, 493, 498, 502], "sampl": [49, 56, 309, 330, 417, 482, 493], "quasi": [49, 56, 333, 479], "random": [49, 56, 283, 342, 413, 424, 431, 448], "continu": [49, 56, 333, 339, 396, 407, 415, 433, 445, 447, 465, 476, 480, 483, 491, 502], "discret": [49, 56, 165, 329, 339], "inclus": [49, 162, 438, 499, 502], "grow": [49, 283, 315, 331, 345, 360, 412, 414, 490, 502], "symmetr": [49, 175, 286, 316, 329, 337, 338, 339, 340, 445, 502], "besid": [49, 212], "expans": [49, 61, 79, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 111, 112, 115, 116, 125, 131, 132, 133, 135, 136, 137, 140, 141, 142, 219, 250, 281, 283, 286, 292, 303, 306, 311, 312, 313, 314, 315, 322, 323, 326, 353, 354, 392, 400, 415, 420, 421, 445, 463, 477, 478, 480, 482, 483, 485, 487, 490, 492, 495, 498, 500, 501, 502], "schedul": [49, 78, 203, 220, 451, 489, 502], "expand": [49, 61, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 125, 136, 140, 142, 155, 235, 283, 290, 291, 292, 297, 303, 306, 309, 313, 314, 315, 316, 322, 329, 332, 353, 354, 360, 397, 400, 408, 415, 420, 442, 450, 468, 479, 482, 483, 487, 490, 492, 493, 494, 502, 506], "themself": 49, "settingnam": [49, 56, 59, 66, 365, 372, 374], "adjust": [49, 50, 51, 54, 56, 78, 104, 155, 235, 248, 250, 283, 286, 292, 306, 309, 313, 319, 320, 353, 354, 445, 476, 481, 483, 492, 493, 494, 497, 502, 508], "settingv": 49, "conf_neutronics_typ": [49, 236, 250, 450], "conf_coarse_mesh_rebal": 49, "conf_eps_eig": 50, "conf_eps_fsavg": 50, "conf_eps_fspoint": 50, "100": [50, 80, 82, 95, 96, 99, 133, 153, 155, 219, 283, 286, 322, 413, 415, 438, 451, 452, 460, 464, 492, 493, 494, 500, 502, 507], "criteria": [50, 78, 183, 211, 219, 250, 286, 287, 309, 329, 344, 502, 505], "multfactor": 50, "factor": [50, 104, 167, 183, 201, 204, 211, 219, 250, 283, 286, 305, 306, 309, 313, 314, 322, 329, 342, 396, 437, 483, 487, 490, 493, 498, 500, 502, 507], "switch": [50, 257, 286, 292, 329, 342, 374, 397, 451, 483, 493, 502], "nodal": [50, 175, 178, 250, 286, 316], "finit": [50, 167, 174, 250, 316, 335, 338, 340, 407, 502], "approxim": [50, 133, 139, 236, 238, 239, 303, 309, 316, 365, 414, 445, 459, 480, 492, 493, 498, 502], "multipli": [50, 104, 154, 167, 200, 219, 235, 250, 259, 286, 309, 407, 498, 502], "axial": [50, 104, 125, 175, 183, 219, 250, 281, 282, 283, 286, 287, 289, 295, 298, 299, 301, 305, 306, 308, 311, 312, 313, 314, 316, 317, 322, 327, 328, 329, 331, 333, 335, 337, 338, 339, 340, 353, 355, 392, 408, 412, 414, 460, 482, 483, 485, 487, 489, 493, 494, 498, 500, 501, 502], "_pintypeassemblymodifi": 51, "smear": [51, 54, 286, 320, 326, 328, 479, 482, 493, 494, 498], "clad": [51, 54, 93, 212, 226, 239, 282, 283, 286, 297, 299, 306, 309, 315, 320, 322, 323, 329, 331, 353, 354, 355, 459, 464, 474, 479, 480, 483, 487, 492, 493, 494, 498, 500, 502, 503], "tube": [51, 286, 479, 493, 494], "fabric": [51, 212, 215, 400, 445, 498, 502], "thick": [51, 54, 308, 315, 320, 487, 493], "inner": [51, 54, 219, 220, 239, 282, 283, 286, 289, 305, 306, 308, 309, 315, 320, 331, 335, 341, 354, 450, 483, 487, 489, 492, 493, 494, 498, 502, 503], "diamet": [51, 54, 286, 305, 315, 320, 354, 487, 492, 493, 498, 502, 503], "outer": [51, 54, 175, 220, 250, 282, 283, 286, 303, 305, 308, 309, 315, 316, 320, 329, 331, 341, 353, 354, 397, 459, 483, 487, 489, 492, 493, 498, 502, 503], "test_smeardensityfail": [52, 53], "test_settingsmodifi": [52, 53], "test_blueprintblockmodifi": [52, 53], "test_neutronicconvergencemodifi": [52, 53], "test_fullcoreconvers": [52, 53], "test_adjustsmeardens": [52, 54, 321, 326], "test_cladthickenessbyodmodifi": [52, 54], "test_cladthickenessbyidmodifi": [52, 54], "areafuel": 54, "smeardens": [54, 498], "innercladarea": 54, "fuelod": 54, "cladid": 54, "sqrt": [54, 305, 320, 338, 340, 406, 467, 468, 505], "cladthick": [54, 492], "od": [54, 283, 286, 299, 304, 305, 308, 354, 355, 466, 474, 492, 493, 494, 502, 503], "cladthic": 54, "12": [54, 78, 81, 82, 101, 141, 142, 151, 153, 155, 220, 335, 396, 408, 415, 438, 445, 452, 465, 466, 467, 473, 474, 482, 485, 487, 491, 502], "24": [54, 141, 153, 306, 335, 415, 483], "cladod": 54, "025": 54, "05": [54, 81, 84, 142, 245, 371, 413, 445, 458, 467, 474, 475, 476, 483, 487, 491, 492, 502], "conjunct": [55, 433, 502], "uniqu": [55, 119, 152, 155, 283, 309, 342, 502, 504], "rootdir": [55, 365], "ignorepattern": [55, 365], "skipinspect": 55, "won": [55, 58, 176, 204, 398, 412, 438, 452, 494], "deleg": [55, 218], "oldroot": 55, "By": [55, 78, 214, 238, 283, 331, 340, 408, 415, 459, 489, 494, 502, 506], "thought": [55, 203, 452, 497], "benefici": [55, 66, 447, 450, 480], "person": 55, "consequ": [55, 151, 152, 163, 306, 342, 448], "infer": [55, 100, 101, 286, 377, 415, 502, 504], "mirror": [55, 212, 489], "tableresult": 55, "perturb": [56, 78, 104, 238, 250, 286, 308, 309, 320, 329, 480, 492], "combin": [56, 104, 134, 155, 173, 200, 309, 316, 331, 332, 333, 340, 363, 396, 404, 489, 492, 498, 502], "modifierset": [56, 492], "pop": [56, 333, 339, 374, 452, 467], "degre": [56, 80, 81, 95, 96, 99, 104, 113, 216, 223, 283, 286, 309, 316, 329, 338, 397, 406, 408, 438, 492, 497, 498, 500], "freedom": [56, 492], "sweepbuild": 56, "exact": [56, 153, 182, 212, 243, 283, 297, 304, 306, 309, 329, 338, 355, 409, 445, 502], "callabl": [56, 77, 281, 282, 309, 329, 344, 345, 372, 374], "signatur": [56, 166, 219, 451, 482], "amount": [56, 316, 322, 344, 451, 479, 487, 498, 500, 502], "inputmodifierset": 56, "namingfunc": 56, "meaning": [56, 281, 306, 345, 373, 374, 397, 438, 480, 489], "0000": [56, 163, 492], "four": [56, 309, 335, 452, 485, 502], "digit": [56, 87, 141, 152, 167, 238, 329, 396, 408, 480], "deem": [56, 204, 238, 445], "__init__": [56, 119, 151, 204, 206, 212, 281, 291, 293, 303, 306, 335, 337, 338, 339, 341, 342, 344, 345, 373, 382, 447, 451, 489], "newset": [56, 366], "builder": [56, 59, 281, 442, 483, 492, 502], "somecas": 56, "settingname1": 56, "settingname2": 56, "noisefract": 56, "nois": 56, "avoid": [56, 78, 219, 235, 238, 239, 315, 328, 353, 396, 409, 412, 446, 448, 482, 483, 494, 502, 505], "statist": [56, 492], "postprocessor": 56, "caution": [56, 283], "ongo": [56, 62, 320, 480], "research": [56, 116, 489], "isol": [56, 492], "settignnam": 56, "latin": [56, 483], "hypercub": [56, 483], "lh": 56, "evenli": [56, 309, 448, 502], "fewer": [56, 329, 444], "randomli": 56, "nonoverlap": 56, "partit": 56, "recommend": [56, 78, 212, 239, 286, 315, 334, 335, 338, 341, 342, 401, 447, 449, 480, 481, 489, 493, 498, 502, 508], "surrog": [56, 288], "unlik": [56, 257, 335, 339, 345, 447], "modfier": 56, "inputparametermodifi": 56, "pararmtyp": 56, "test_summarizedesign": [57, 58], "test_independentvari": [57, 58], "test_setuptaskdepend": [57, 58], "test_getcoveragercfil": [57, 58], "test_startcoverag": [57, 58], "test_endcoverag": [57, 58], "test_startprofil": [57, 58], "test_endprofil": [57, 58], "test_run": [57, 58, 73, 75], "test_clon": [57, 58], "test_checkinput": [57, 58], "test_dependencieswithobscurepath": [57, 58], "test_dependencyfromdbnam": [57, 58], "test_dependencyfromexplictrepeatshuffl": [57, 58], "test_explicitdepend": [57, 58], "test_titlesettergett": [57, 58], "test_comparenodiff": [57, 58], "test_writeinput": [57, 58], "test_copyinputshelp": [57, 58], "test_copyinterfaceinputs_singlefil": [57, 58], "test_copyinterfaceinputs_nonfilepath": [57, 58], "test_failonduplicateset": [57, 58], "test_copyinterfaceinputs_multiplefil": [57, 58], "test_copyinterfaceinputs_wildcardfil": [57, 58], "test_copyinterfaceinputs_relpath": [57, 58], "test_copyinterfaceinputs_abspath": [57, 58], "test_initi": [57, 59], "test_buildsuit": [57, 59], "test_adddegreeoffreedom": [57, 59], "assert": [58, 125, 211, 224, 252, 322, 360, 374, 432, 451], "bonu": [58, 488, 498], "damag": [58, 154, 213], "escap": 58, "charact": [58, 152, 155, 166, 239, 286, 288, 415, 438, 451, 452, 482, 485, 497, 502], "reveal": 58, "vehicl": 58, "lhc": 59, "event": [60, 243, 467, 474, 475, 483, 487, 502, 504], "submitsuit": 60, "prog": 60, "epilog": 60, "formatter_class": 60, "argpars": [60, 66, 443], "helpformatt": 60, "prefix_char": 60, "fromfile_prefix_char": 60, "argument_default": 60, "conflict_handl": 60, "add_help": 60, "allow_abbrev": 60, "exit_on_error": 60, "argumentpars": [60, 66], "exit": [60, 66, 77, 344, 401, 489, 502], "test_runentrypoint": [60, 73], "buildtestdb": [60, 73, 74], "testinitializationentrypoint": [60, 73, 74], "testcheckinputentrypoint": [60, 73, 74], "testclonearmiruncommandbatch": [60, 73, 74], "testclonesuitecommand": [60, 73, 74], "testcomparecas": [60, 73, 74], "testcomparesuit": [60, 73, 74], "testexpandblueprint": [60, 73, 74], "testextractinput": [60, 73, 74], "testinjectinput": [60, 73, 74], "testmigrateinput": [60, 73, 74], "testmodifycasesettingscommand": [60, 73, 74], "testreportsentrypoint": [60, 73, 74], "testcompareisotxslibsentrypoint": [60, 73, 74], "testrunentrypoint": [60, 73, 74], "testrunsuitecommand": [60, 73, 74], "testvisfileentrypointcommand": [60, 73, 74], "test_runsuit": [60, 73], "testrunsuitesuit": [60, 73, 75], "parse_arg": [60, 65, 66], "createoptionfromset": [60, 66, 443], "report_out_dir": [60, 70], "totwotupl": [60, 70], "needlessli": [61, 66, 497], "clutter": [61, 66], "inconsist": [61, 78, 239, 329, 339, 345], "occasion": [62, 281, 404], "break": [62, 77, 94, 155, 204, 286, 309, 342, 345, 391, 407, 415, 444, 448, 450, 451, 452], "comparison": [64, 309, 329, 332, 354, 379, 479, 483], "handi": [65, 452, 480, 504], "facilit": [65, 332, 350, 480, 482, 502], "overwrit": [65, 175, 309, 316, 366, 396, 442, 450, 502], "inject": [65, 290, 292, 392, 395], "overrid": [66, 151, 219, 281, 290, 292, 364, 372, 392, 396, 415, 445, 448, 502], "add_argu": [66, 443], "sub": [66, 151, 166, 204, 214, 286, 346, 448, 480, 502], "exitcod": 66, "success": [66, 78, 204, 239, 371, 411], "additionalalia": 66, "suppresshelp": 66, "additionalalis": 66, "care": [66, 200, 204, 236, 286, 292, 309, 329, 346, 411, 438, 444, 450, 451, 452, 480, 502, 504], "distinct": [66, 345, 450, 494], "supresshelp": 66, "suppress": [66, 365], "messag": [66, 78, 281, 299, 343, 364, 373, 380, 399, 438, 444, 446, 448, 479, 482, 502, 504], "almost": [66, 166, 175, 309, 331, 426, 452, 480], "unus": [66, 220, 254, 255, 348, 451, 482, 483, 485, 502], "booldefault": 66, "ep": [66, 211, 317, 379], "editor": [67, 397, 481, 482, 493, 502, 508], "spin": [67, 162, 245], "latest": [68, 144, 159, 165, 238, 286, 309, 442, 498], "keyword": [69, 281, 329, 396, 415, 446], "ntask": [69, 485, 487, 492, 502], "reportsoutputfil": [70, 450, 496], "strinput": 70, "integ": [70, 165, 166, 219, 220, 238, 283, 309, 322, 331, 345, 393, 397, 404, 408, 412, 415, 433, 445, 485, 498, 500, 504, 507], "web": [70, 86, 90, 93, 99, 113, 136, 165, 171, 175, 176, 442, 448], "mpirun": [72, 390], "mpiexec": [72, 77, 389, 422, 448], "test_entrypointiniti": [73, 74], "test_checkinputentrypointbas": [73, 74], "test_checkinputentrypointinvok": [73, 74], "test_clonearmiruncommandbatchbas": [73, 74], "test_clonearmiruncommandbatchinvokeshort": [73, 74], "test_clonearmiruncommandbatchinvokemedium": [73, 74], "test_clonesuitecommandbas": [73, 74], "test_comparecasesbas": [73, 74], "test_comparesuitesbas": [73, 74], "test_expandblueprintsbas": [73, 74], "test_extractinputsbas": [73, 74], "test_injectinputsbas": [73, 74], "test_injectinputsinvokeignor": [73, 74], "test_injectinputsinvokenodata": [73, 74], "test_migrateinputsbas": [73, 74], "test_modifycasesettingscommandbas": [73, 74], "test_modifycasesettingscommandinvok": [73, 74], "test_totwotupl": [73, 74], "test_cleanarg": [73, 74], "test_reportsentrypointbas": [73, 74], "test_compareisotxslibsbas": [73, 74], "test_runentrypointbas": [73, 74], "test_runcommandhelp": [73, 74], "test_executecommand": [73, 74], "test_runsuitecommandbas": [73, 74], "test_visfileentrypointbas": [73, 74], "test_listcommand": [73, 75], "test_showvers": [73, 75], "numnod": 74, "numcycl": 74, "fiction": 74, "mockexecmd": 75, "pytest": [76, 389, 391, 422, 444, 451, 480, 482], "act": [76, 201, 217, 283, 309, 329, 341, 344, 366, 407, 450, 487], "shop": 76, "submodul": [76, 441, 442], "larger": [76, 408, 452, 493, 494, 502], "project": [76, 165, 308, 443, 444, 447, 452, 469, 470, 480, 481, 489, 508], "session": [76, 204, 412, 482, 494], "termin": [77, 151, 407, 481, 488, 508], "forc": [77, 155, 254, 283, 313, 315, 329, 345, 366, 390, 408, 421, 445, 452, 483, 487, 502], "fast_path": [77, 204, 482], "drive": [77, 214, 303, 389, 411, 451, 459, 493, 502], "obliter": 77, "danger": 77, "olderthandai": 77, "sigbreak": 77, "cancel": [77, 309, 373, 505], "atexit": 77, "notabl": [77, 504], "taskcancelgraceperiod": 77, "sigterm": 77, "sigint": 77, "older": [77, 94, 152, 482, 502], "unrel": [77, 452], "dai": [77, 165, 204, 211, 281, 283, 346, 396, 408, 437, 450, 479, 480, 487, 493, 497, 498, 499, 500, 502, 507], "earlier": [77, 281, 344], "concurr": 77, "forcibli": 77, "disconnect": 77, "hack": [77, 372, 497], "gracefulli": [77, 309], "destroi": [77, 498], "caus": [77, 173, 201, 299, 306, 309, 315, 328, 329, 346, 374, 402, 444, 451, 481, 483, 498, 508], "why": [77, 184, 283, 286, 438, 447, 494], "never": [77, 163, 212, 236, 254, 286, 291, 292, 303, 338, 415, 448, 450, 451, 502], "appear": [77, 89, 220, 281, 363, 365, 372, 412, 430, 438, 487], "repr": 77, "ing": 77, "manual": [77, 155, 157, 159, 175, 190, 199, 200, 204, 211, 243, 292, 310, 322, 329, 331, 363, 480, 487, 491, 502], "learn": [78, 468, 469, 470, 480, 501], "architectur": [78, 204, 281, 446, 480, 489], "createinterfac": [78, 203, 204, 208, 445], "globalflux": [78, 204, 212, 236, 371, 505], "globalfluxinterfac": [78, 236, 249, 252, 483, 485, 505], "10": [78, 82, 90, 93, 105, 113, 114, 125, 135, 136, 141, 153, 154, 162, 165, 166, 167, 171, 173, 175, 176, 211, 219, 220, 286, 291, 295, 299, 301, 306, 309, 316, 322, 335, 345, 354, 379, 407, 408, 412, 415, 424, 437, 438, 445, 448, 451, 452, 466, 469, 470, 471, 474, 476, 480, 482, 483, 487, 489, 490, 491, 492, 493, 494, 502], "maxit": 78, "interactallcoupl": [78, 203, 204], "maximum": [78, 104, 152, 219, 239, 286, 303, 309, 329, 331, 396, 408, 412, 415, 485, 497, 498, 500, 502], "val": [78, 104, 166, 197, 245, 286, 303, 306, 308, 309, 328, 329, 372, 396, 408, 412, 413, 431, 448, 487], "_supported_typ": 78, "commonli": [78, 104, 162, 250, 379, 397, 411, 443, 502], "equal": [78, 151, 159, 165, 167, 169, 171, 173, 176, 201, 204, 219, 254, 286, 303, 305, 309, 317, 339, 353, 372, 379, 396, 397, 408, 412, 413, 448, 468, 476, 493, 502, 506], "typeerror": [78, 372, 377, 440], "met": [78, 286, 505], "recent": [78, 175, 480, 497], "critera": [78, 309], "On": [78, 165, 171, 309, 447, 480, 481, 490, 492, 508], "condit": [78, 151, 155, 163, 214, 226, 236, 250, 254, 281, 283, 286, 332, 335, 337, 359, 361, 374, 402, 407, 479, 480, 485, 492, 493, 494, 502], "stale": [78, 250, 345, 483], "increment": [78, 280, 283, 286, 397, 406, 408, 502], "clear": [78, 104, 155, 164, 200, 238, 283, 286, 306, 309, 316, 327, 328, 345, 354, 442, 451, 483, 493], "2d": [78, 82, 88, 103, 104, 136, 199, 239, 304, 308, 309, 338, 339, 340, 386, 408, 415, 433, 445, 483], "3d": [78, 81, 82, 83, 88, 89, 90, 92, 93, 95, 96, 97, 99, 103, 104, 105, 111, 112, 116, 140, 142, 297, 306, 308, 339, 354, 386, 469, 470, 489], "norm": [78, 487, 489, 505], "listtocheck": 78, "dim": [78, 286, 313, 466, 494], "eponym": 78, "categori": [78, 211, 226, 250, 254, 282, 329, 331, 342, 345, 386, 452, 467, 474, 475, 483, 485, 487, 504], "driver": [78, 239, 282, 309, 315, 323, 331, 448, 502], "neutronsperfiss": 78, "torestor": 78, "restor": [78, 104, 306, 309, 337, 340, 344, 345, 353, 360, 364], "distributest": [78, 151, 389], "quiet": [78, 104, 309], "callback": 78, "pickl": [78, 283, 309, 337, 344, 388, 396], "detach": [78, 203, 204, 339], "deepcopi": [78, 104, 245, 283, 286, 287, 483], "immedi": [78, 309, 315, 329, 338, 340, 342, 346, 480], "occur": [78, 104, 151, 153, 155, 157, 163, 204, 218, 219, 281, 292, 322, 323, 329, 342, 373, 415, 438, 445, 451, 491, 497, 498, 500, 502], "subcycl": [78, 204], "repeatedli": 78, "peripher": [78, 204, 220, 238], "cr": [78, 87, 153, 208, 250, 292, 299, 487, 492, 493, 502], "worth": [78, 165, 208, 219, 250, 438, 450, 451, 452, 480, 500], "theori": [78, 167, 309], "_cmd": 78, "incom": [78, 175, 190, 219], "statu": [78, 314, 342, 373, 442, 481, 502, 508], "statement": [78, 205, 250, 309, 322, 340, 343, 373, 374, 401, 438, 446, 448, 452], "wrong": [78, 286, 299, 301, 309, 447], "innam": [78, 250], "outnam": [78, 250], "interpol": [78, 115, 116, 283, 286, 408], "anywher": [78, 489, 502], "failur": [78, 309, 315, 391, 447, 502], "advent": 78, "perhap": [78, 281, 339, 342, 480, 502], "externalcodeinterfac": [78, 250, 255], "eci": [78, 258], "anyth": [78, 163, 166, 214, 219, 250, 265, 286, 303, 306, 309, 329, 344, 374, 415, 444, 452, 480, 489, 492, 502], "involv": [78, 204, 214, 329, 480, 502, 505], "packag": [78, 201, 204, 206, 281, 309, 340, 345, 404, 415, 438, 441, 445, 446, 447, 451, 480, 481, 487, 488, 489, 504, 508], "klass": [78, 344], "addinterfac": [78, 203, 204], "ultim": [78, 219, 281, 282, 322, 329, 331, 346, 487, 492, 493, 505], "field": [78, 137, 309, 313, 322, 340, 342, 372, 396, 404, 415, 433, 493, 502], "scope": [79, 243, 310, 379, 447, 480, 483, 487, 489, 492, 494, 502], "thermo": [79, 306, 445, 502], "heat": [79, 80, 92, 95, 96, 99, 100, 101, 104, 112, 120, 136, 137, 212, 276, 333, 353, 445, 480, 489, 490, 494, 497, 498, 502], "capac": [79, 80, 92, 95, 96, 99, 100, 101, 104, 112, 136, 137, 204, 445, 489, 490, 493, 502], "linear": [79, 81, 82, 83, 87, 93, 95, 96, 99, 104, 105, 111, 112, 116, 125, 131, 132, 133, 135, 136, 137, 140, 141, 142, 283, 286, 306, 322, 328, 408, 483, 487, 490, 492, 493, 498, 506], "viscos": [79, 101], "nuclear": [79, 83, 85, 86, 90, 104, 137, 152, 153, 155, 162, 163, 164, 165, 176, 184, 195, 212, 215, 235, 236, 243, 309, 349, 397, 445, 479, 485, 487, 489, 491, 494, 500, 502], "alon": [79, 238, 306, 309, 466], "thermal": [79, 80, 81, 82, 83, 89, 90, 92, 93, 95, 96, 97, 99, 101, 104, 105, 108, 111, 112, 113, 116, 131, 133, 136, 137, 139, 140, 142, 160, 162, 226, 235, 273, 275, 276, 277, 279, 303, 306, 309, 313, 314, 315, 322, 323, 326, 329, 345, 353, 354, 444, 463, 477, 478, 480, 482, 483, 487, 488, 490, 493, 495, 498, 500, 501, 502, 503], "scatter": [79, 83, 90, 104, 112, 137, 139, 151, 160, 162, 167, 173, 182, 197, 199, 200, 201, 202, 259, 463, 465, 469, 470, 477, 478, 482, 491, 494, 495, 498, 502], "law": [79, 160, 162, 444, 480, 493], "macroscop": [79, 167, 197, 200, 201, 259, 268, 483, 494, 502], "highli": [79, 218, 239, 449, 467, 481, 493, 508], "team": [79, 415, 433, 444, 452, 480, 489], "updatesourc": 79, "dev": [79, 393, 480, 481, 508], "resolut": [79, 342, 374, 482], "formal": [79, 331, 344, 482, 486, 489], "registri": [79, 281, 282], "data_sourc": [79, 104], "sai": [79, 198, 200, 281, 331, 364, 365, 374, 406, 444, 448, 450, 452, 480, 493, 502], "namespaceord": 79, "latter": [79, 297], "conf_material_namespace_ord": 79, "kentucki": 79, "transport": [79, 80, 113, 170, 175, 212, 236, 250, 259, 283, 328, 480, 483, 493, 498], "cabinet": 79, "colon": [79, 489], "classnam": [79, 502], "prefer": [79, 144, 163, 281, 283, 309, 314, 329, 340, 372, 398, 415, 446, 452, 485, 489, 502], "material_namespace_ord": 79, "modulepath": [79, 411], "matcl": [79, 473], "els": [79, 166, 167, 219, 254, 283, 286, 309, 329, 332, 374, 396, 412, 415, 448, 476, 487, 489, 492, 502], "test__init__": [79, 118], "bettersubclasscheck": [79, 118, 119], "materials__init__test": [79, 118, 119], "test_air": [79, 118], "test_b4c": [79, 118], "b4c_testcas": [79, 118, 121], "test_be9": [79, 118], "test_graphit": [79, 118], "graphite_testcas": [79, 118, 123], "test_lithium": [79, 118], "lithium_testcas": [79, 118, 124], "test_materi": [79, 118, 420], "materialconstructiontest": [79, 118, 125], "materialfindingtest": [79, 118, 125, 420], "californium_testcas": [79, 118, 125], "cesium_testcas": [79, 118, 125], "magnesium_testcas": [79, 118, 125], "magnesiumoxide_testcas": [79, 118, 125], "molybdenum_testcas": [79, 118, 125], "mox_testcas": [79, 118, 125], "nacl_testcas": [79, 118, 125], "niobiumzirconium_testcas": [79, 118, 125], "potassium_testcas": [79, 118, 125], "scandiumoxide_testcas": [79, 118, 125], "sodium_testcas": [79, 118, 125], "tantalum_testcas": [79, 118, 125], "thoriumuraniummetal_testcas": [79, 118, 125], "uranium_testcas": [79, 118, 125], "uraniumoxide_testcas": [79, 118, 125], "thorium_testcas": [79, 118, 125], "thoriumoxide_testcas": [79, 118, 125, 128], "void_testcas": [79, 118, 125], "mixture_testcas": [79, 118, 125], "lead_testcas": [79, 118, 125], "leadbismuth_testcas": [79, 118, 125], "copper_testcas": [79, 118, 125], "sulfur_testcas": [79, 118, 125, 127], "zr_testcas": [79, 118, 125], "inconel_testcas": [79, 118, 125], "inconel600_testcas": [79, 118, 125], "inconel625_testcas": [79, 118, 125], "inconelx750_testcas": [79, 118, 125], "alloy200_testcas": [79, 118, 125], "cah2_testcas": [79, 118, 125], "hafnium_testcas": [79, 118, 125], "hastelloyn_testcas": [79, 118, 125], "tzm_testcas": [79, 118, 125], "yttriumoxide_testcas": [79, 118, 125], "zincoxide_testcas": [79, 118, 125], "fuelmaterial_testcas": [79, 118, 125], "test_sic": [79, 118], "test_sulfur": [79, 118], "test_thoriumoxid": [79, 118], "test_uzr": [79, 118], "uzr_testcas": [79, 118, 129], "test_wat": [79, 118], "propertyvalidtemperatur": [79, 80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142], "setdefaultmassfrac": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142], "pseudodens": [79, 80, 82, 88, 89, 100, 101, 102, 103, 104, 110, 112, 113, 115, 134, 136, 138, 139, 416, 420, 483], "specificvolumeliquid": [79, 80, 113], "thermalconduct": [79, 80, 92, 93, 95, 96, 99, 101, 102, 104, 112, 113, 131, 132, 133, 136, 137, 142, 503], "heatcapac": [79, 80, 92, 95, 96, 99, 100, 101, 102, 104, 112, 136, 137, 489, 490], "modelconst": [79, 81, 104], "referencemaxpercentimpurit": [79, 81], "linearexpansiontablek": [79, 81, 142], "linearexpansiont": [79, 81, 142], "linearexpans": [79, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 131, 132, 133, 136, 137, 140, 142], "enrichednuclid": [79, 82, 89, 102, 104, 108, 131, 134, 135, 136, 137, 306], "applyinputparam": [79, 82, 102, 104, 108, 115, 131, 133, 134, 135, 136, 137], "updatetd": [79, 82, 115], "setnewmassfracsfrommassenrich": [79, 82], "getmassenrichmentfromnumenrich": [79, 82], "linearexpansionperc": [79, 82, 83, 87, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 116, 133, 135, 136, 137, 140, 141, 142, 321, 322, 506], "thermalscatteringlaw": [79, 83, 90, 104, 112, 137, 139], "meltingpoint": [79, 88, 102, 108, 112, 131, 132, 133, 136, 137], "setmassfrac": [79, 89, 104, 282, 309], "materialintro": [79, 92, 136], "reftempk": [79, 92, 95, 96, 97, 99, 104, 112, 142], "meancoefficientthermalexpans": [79, 92, 97], "polyfitthermalconduct": [79, 95, 96, 99], "polyfitheatcapac": [79, 95, 96, 99], "polyfitlinearexpansionperc": [79, 95, 96, 99], "volumetricexpans": [79, 100, 101, 104, 115], "dynamicvisc": [79, 101], "boilingpoint": [79, 102], "getchildren": [79, 104, 282, 309, 351, 355, 487], "getchildrenwithflag": [79, 104, 282, 309, 351, 355], "backup": [79, 104, 282, 303, 306, 309, 333, 337, 340, 342, 344, 345], "restorebackup": [79, 104, 282, 303, 306, 309, 333, 337, 340, 342, 344, 345], "clearcach": [79, 104, 282, 303, 306, 309], "linearexpansionfactor": [79, 104, 490, 506], "getthermalexpansiondensityreduct": [79, 104], "adjustmassenrich": [79, 104, 282, 303, 306, 309], "adjustmassfrac": [79, 104, 282, 309], "gettemperatureatdens": [79, 104], "liquidporos": [79, 104, 303, 306, 498], "gasporos": [79, 104, 303, 306, 498], "pseudodensitykgm3": [79, 104], "densitykgm3": [79, 104], "getcorrosionr": [79, 104], "yieldstrength": [79, 104], "getproperti": [79, 104, 303, 306, 489, 503], "getmassfrac": [79, 104, 242, 245, 282, 309], "clearmassfrac": [79, 104], "removenucmassfrac": [79, 104], "checkpropertytemprang": [79, 104], "checktemprang": [79, 104], "densitytimesheatcapac": [79, 104, 483], "gettempchangefordensitychang": [79, 104], "gettd": [79, 104], "adjusttd": [79, 104], "class1_wt_frac": [79, 104, 400, 502], "class1_custom_isotop": [79, 104, 502], "class2_custom_isotop": [79, 104, 502], "pufrac": [79, 104, 483, 498], "ufrac": [79, 104], "zrfrac": [79, 104, 499], "getmassfracpuo2": [79, 108], "setmassfracpuo2": [79, 108], "getmolfracpuo2": [79, 108], "propertyequ": [79, 112, 136], "propertyunit": [79, 112, 136, 137], "propertynot": [79, 112, 136], "cumulativelinearexpans": [79, 112], "enthalpi": [79, 113, 139], "temperaturec": [79, 116], "percentthermalexpans": [79, 116], "getenrich": [79, 131, 303, 306, 482], "zrfracdefault": [79, 135], "ufracdefault": [79, 135], "propertyrawdata": [79, 136], "refden": [79, 81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 136, 140, 142, 487], "ea": [79, 137], "c1": [79, 137], "c2": [79, 137], "c3": [79, 137], "reference_temperatur": [79, 137], "thermalconductivitytablek": [79, 137], "thermalconductivityt": [79, 137], "temperature_critical_k": [79, 139], "density_critical_kgpercubicmet": [79, 139], "density_critical_gpercubiccentimet": [79, 139], "vapor_pressure_critical_mpa": [79, 139], "vapor_pressure_critical_pa": [79, 139], "alpha_0": [79, 139], "phi_0": [79, 139], "tau": [79, 139], "vaporpressur": [79, 139], "vaporpressureprim": [79, 139], "auxiliaryquantityspecificenthalpi": [79, 139], "auxiliaryquantityspecificentropi": [79, 139], "entropi": [79, 139], "Near": 80, "sea": 80, "correl": [80, 95, 96, 99, 139, 213, 235, 440], "incropera": [80, 120], "frank": [80, 120], "et": [80, 92, 108, 120, 137, 480], "al": [80, 92, 108, 120, 137, 146, 153, 299, 480, 494, 502], "mass": [80, 81, 82, 83, 84, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 111, 112, 113, 115, 116, 120, 125, 133, 134, 135, 137, 140, 142, 152, 153, 154, 155, 212, 215, 219, 235, 245, 264, 283, 286, 292, 299, 303, 306, 309, 310, 313, 316, 322, 324, 326, 327, 328, 329, 345, 353, 354, 355, 400, 420, 445, 459, 460, 464, 473, 479, 482, 483, 485, 487, 489, 490, 491, 497, 498, 499, 500, 502, 507], "transfer": [80, 120, 212, 276, 286, 328, 349, 448, 498, 504], "vol": [80, 110, 112, 120, 142, 235, 303, 464, 487, 489], "york": [80, 110, 120, 142], "wilei": [80, 120], "2002": [80, 120], "pnnl": [80, 120], "15870": [80, 120], "rev": [80, 120], "www": [80, 81, 83, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 113, 130, 131, 132, 133, 139, 184, 345, 480, 493], "gov": [80, 86, 90, 93, 108, 113, 137, 152, 162, 173, 175, 184], "technical_report": 80, "15870rev1": 80, "1300": [80, 92, 101], "2400": [80, 136, 137], "conduct": [80, 92, 93, 95, 96, 99, 101, 104, 108, 112, 113, 131, 133, 136, 137, 142, 235, 445, 487, 490, 502, 503], "200": [80, 81, 125, 408, 492], "850": 80, "temperature_lower_limit": [80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142], "temperature_upper_limit": [80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142], "temperature_unit": [80, 81, 82, 83, 87, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 113, 115, 116, 131, 132, 133, 136, 137, 140, 141, 142], "mcconn": 80, "ronald": 80, "j": [80, 92, 93, 95, 96, 99, 100, 101, 103, 104, 110, 112, 113, 135, 136, 137, 139, 167, 175, 177, 178, 182, 200, 235, 291, 309, 329, 333, 335, 337, 338, 339, 340, 341, 397, 445, 468, 469, 470, 480, 482, 489, 490, 505], "compendium": 80, "radiat": [80, 86, 212, 480], "pacif": 80, "northwest": 80, "nation": [80, 92, 108, 137, 154, 165, 175, 479, 480], "lab": [80, 154, 480], "richland": 80, "2011": [80, 92, 165], "tk": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 322, 420, 440, 489, 490], "tc": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 303, 304, 305, 306, 308, 309, 322, 355, 420, 440, 489, 490, 503], "cc": [80, 84, 100, 101, 102, 104, 110, 113, 134, 136, 137, 139, 165, 306, 309, 400, 490, 498, 504], "dewitt": 80, "kelvin": [80, 81, 95, 96, 99, 104, 113, 139, 306, 440], "celsiu": [80, 81, 95, 96, 99, 104, 113, 306, 440], "liquid": [80, 88, 102, 103, 104, 113, 115, 139, 152, 153, 162, 306, 493, 498], "kg": [80, 92, 95, 96, 99, 100, 101, 104, 112, 113, 129, 136, 137, 139, 489, 490, 497, 498, 499, 507], "alloi": [81, 92, 94, 96, 97, 98, 109, 125, 134, 135, 483], "wrought": 81, "commerci": [81, 479, 480], "nickel": [81, 92, 94, 153], "201": 81, "sheet": [81, 116], "jacquet": 81, "biz": 81, "usa": 81, "jcqusa": 81, "citat": [81, 94, 95, 96, 98, 99, 102, 104, 112, 116, 136, 137, 139, 142], "literatur": [81, 94, 95, 96, 98, 99, 102, 104, 108, 112, 116, 136, 137, 139, 142, 490], "trefa": 81, "20": [81, 84, 92, 95, 97, 153, 163, 167, 264, 306, 335, 354, 407, 452, 466, 474, 487, 492, 493, 494, 502], "a0": 81, "2162e": 81, "3001e": 81, "09": [81, 355, 415, 445, 466, 482, 483, 487, 491, 502], "94985e": 81, "intepol": [81, 104], "lookup": [81, 104, 154, 243, 267, 281, 283, 328, 329, 345, 357, 363, 406], "73": [81, 136, 153, 415], "15": [81, 92, 95, 96, 97, 99, 105, 108, 111, 112, 133, 137, 140, 142, 153, 211, 220, 286, 335, 400, 437, 452, 458, 466, 476, 482, 487, 493, 502], "1273": [81, 105], "mn": [81, 146, 153, 299, 487, 492, 502], "35": [81, 82, 153], "si": [81, 112, 153, 299, 487, 492, 502], "25": [81, 82, 153, 155, 283, 291, 298, 299, 322, 338, 354, 355, 412, 452, 470, 482, 487, 490, 492, 493, 502], "fe": [81, 152, 153, 154, 155, 292, 299, 466, 471, 487, 492, 502], "173": 81, "373": [81, 92], "573": 81, "673": 81, "773": 81, "873": 81, "973": [81, 92], "1073": 81, "1173": [81, 92, 136, 483], "01e": 81, "13e": [81, 142], "33e": [81, 112], "39e": 81, "43e": 81, "48e": 81, "52e": [81, 494], "56e": 81, "58e": 81, "62e": 81, "65e": [81, 494], "67e": 81, "instantan": [81, 95, 96, 99, 104, 479], "half": [81, 159, 163, 174, 219, 316, 340, 352, 353, 491, 500, 502], "impur": [81, 480], "rest": [81, 183, 283, 288, 331, 388, 445, 452, 466, 493, 494, 502, 504], "ni": [81, 153, 299, 309, 487, 492, 502], "cm": [81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142, 153, 177, 178, 197, 200, 219, 235, 245, 250, 283, 286, 291, 303, 304, 305, 306, 308, 309, 313, 328, 329, 333, 334, 335, 337, 338, 339, 340, 342, 361, 400, 450, 451, 468, 469, 487, 490, 492, 493, 494, 497, 498, 499, 500, 502, 503], "dep": [81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 140, 142], "percent": [81, 82, 83, 84, 87, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 133, 134, 136, 137, 140, 141, 142, 200, 313, 322, 329, 464, 479, 480, 483, 487, 492, 498, 500, 502], "dp": [81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 139, 140, 142, 153], "dl": [81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 116, 137, 140, 142], "l": [81, 83, 89, 90, 92, 93, 95, 96, 97, 99, 104, 105, 111, 112, 113, 116, 136, 137, 140, 142, 167, 305, 322, 396, 412, 466, 473, 490, 506], "boron": [82, 121, 153, 286, 306, 309, 491], "carbid": [82, 112, 121], "difficulti": 82, "real": [82, 165, 175, 178, 203, 204, 236, 245, 250, 286, 306, 309, 328, 329, 337, 408, 412, 433, 443, 448, 459, 489, 492, 494, 502], "td_frac": [82, 104, 108, 115, 133, 136, 137, 299, 483, 502], "b10": [82, 292, 471, 487, 498], "enrich": [82, 89, 102, 104, 108, 131, 134, 135, 136, 137, 219, 283, 286, 306, 309, 329, 354, 400, 412, 480, 487, 493, 494, 498, 502], "500": [82, 142, 354, 355, 464, 483, 487, 490, 492, 493, 503], "b10_wt_frac": [82, 502], "theoretical_dens": [82, 502], "massenrich": [82, 104], "boron10massgram": 82, "boron11massgram": 82, "carbonmassgram": 82, "012": [82, 487], "009": [82, 487], "carbon": [82, 90, 153, 160, 162], "0107": 82, "mole": [82, 108, 133, 154, 286, 306, 309, 489, 498], "gram": [82, 84, 108, 133, 154, 159, 286, 306, 309, 487, 502], "199": 82, "969552": 82, "801": [82, 163], "272836": 82, "mi": [82, 473], "mb10": 82, "nb10": 82, "ab10": 82, "nb11": 82, "ab11": 82, "natur": [82, 100, 104, 137, 152, 153, 154, 155, 157, 243, 281, 292, 299, 309, 329, 335, 400, 444, 445, 465, 480, 482, 487, 490, 491, 492, 502], "19": [82, 108, 116, 136, 153, 299, 335, 415, 483, 487], "80": [82, 99, 153, 502], "811": 82, "96796": 82, "27604": 82, "55": [82, 108, 113, 153], "2547": 82, "naturalb10numberfract": 82, "preliminari": 82, "beryllium": [83, 122, 153], "metal": [83, 87, 93, 97, 116, 131, 132, 134, 136, 142, 153, 155, 162, 235, 286, 309, 329, 355, 400, 479, 487, 491, 493, 498, 499, 500, 502], "lot": [83, 85, 151, 152, 200, 204, 236, 245, 292, 309, 329, 379, 413, 443, 444, 448, 451, 452, 480, 481, 487, 494, 502, 508], "2n": [83, 163, 200, 472, 476], "reaction": [83, 163, 176, 188, 200, 201, 236, 250, 252, 309, 328, 412, 463, 477, 478, 480, 482, 495, 498], "inhal": 83, "hazard": 83, "compound": [83, 90, 112, 135, 137, 139, 162, 239, 371, 415], "Be": [83, 162, 309, 411, 444, 452, 480, 482], "frozenset": [83, 90, 112, 137, 139], "BE": [83, 153], "012183e": 83, "00": [83, 139, 445, 461, 477, 491], "50": [83, 153, 283, 354, 407, 452, 460, 480, 502], "1560": 83, "ferp": 83, "ucsd": 83, "edu": [83, 167], "prop": 83, "pano": 83, "fusion": 83, "fedee": 83, "141": 83, "234": [83, 438, 491], "1987": 83, "calcium": [84, 153], "hydrid": 84, "calciumhydrid": 84, "atom": [84, 104, 108, 152, 153, 154, 155, 162, 165, 197, 200, 213, 239, 245, 264, 286, 306, 309, 315, 316, 328, 400, 479, 480, 487, 491, 497, 498, 499, 500, 502], "kaeri": 84, "kr": [84, 153, 412], "ton": 84, "iso": [84, 155, 502], "abund": [84, 152, 154, 155, 184, 465, 491], "ca": [84, 112, 153, 502], "40": [84, 87, 153, 155, 175, 396, 452, 492], "96": [84, 153, 494], "941": 84, "39": [84, 153, 487, 490, 491, 492], "9625912": 84, "42": [84, 108, 153, 155, 413, 415, 494], "647": [84, 130, 139], "41": [84, 153, 155, 415], "9586183": 84, "43": [84, 87, 153, 487], "135": [84, 139], "9587668": 84, "44": [84, 116, 153], "086": 84, "9554811": 84, "46": [84, 153, 235, 502], "004": [84, 487, 502], "45": [84, 153, 502], "9536928": 84, "48": [84, 153, 474, 487], "187": 84, "47": [84, 153], "9525335": 84, "01565": 84, "09367285": 84, "920331558": 84, "006449241": 84, "001377745": 84, "02178264": 84, "3668e": 84, "002130278": 84, "047884869": 84, "en": [84, 85, 88, 439], "wikipedia": [84, 85, 88, 102, 439, 491], "wiki": [84, 85, 88, 439], "calcium_hydrid": 84, "synthet": 85, "spontan": [85, 155, 163, 483, 491, 498, 500], "equip": [86, 487], "shield": [86, 165, 200, 238, 282, 283, 316, 329, 331, 487, 492, 498, 502], "concreat": 86, "archiv": [86, 99, 452, 481, 508], "20221103120449": 86, "nist": [86, 152, 154, 155], "cgi": [86, 152], "bin": [86, 152, 243, 316, 317, 334, 426, 481, 508], "star": 86, "compo": 86, "pl": [86, 152], "matno": 86, "144": 86, "788": 87, "83": [87, 153], "engaug": 87, "21": [87, 95, 96, 99, 116, 136, 153, 335, 413, 483, 487, 494], "thrust": 87, "chamber": [87, 494], "predict": [87, 226, 243, 493, 505], "rocket": 87, "nozzl": [87, 329, 497, 498, 502], "nasa": 87, "134806": 87, "cesium": [88, 153], "caesium": 88, "benchmark": [89, 361, 480, 493, 494, 502], "isotopicopt": [89, 243, 282, 287, 474], "customisotop": [89, 104, 282, 287, 292, 351, 355, 474, 502], "peopl": [89, 104, 452, 480, 481, 485, 502, 508], "overwritten": [89, 214, 245, 306, 308, 360, 376], "u235": [89, 104, 108, 134, 135, 136, 137, 152, 154, 155, 157, 173, 201, 239, 286, 299, 309, 400, 466, 471, 472, 487, 490, 491, 494, 502], "customloc": 89, "matter": [89, 142, 155, 204, 254, 264, 286, 329, 331, 340, 404, 407, 451, 452, 489], "moder": [90, 219, 282, 329, 331, 480], "ga": [90, 104, 152, 153, 235, 238, 245, 248, 331, 480, 498, 502], "cool": [90, 447, 479, 480, 493, 494], "inl": [90, 92, 123], "16": [90, 116, 123, 153, 155, 220, 331, 332, 335, 345, 354, 355, 379, 466, 473, 480, 482, 487, 491, 493, 494, 502], "38241": [90, 123], "mceligot": 90, "donald": 90, "swank": 90, "david": 90, "cottl": 90, "valentin": 90, "francisco": 90, "348": [90, 502], "2016": [90, 171], "doi": [90, 93, 105, 113, 135, 136, 165, 171, 175, 176, 480], "2172": [90, 93, 113, 136, 165, 171, 175, 176], "1330693": 90, "osti": [90, 93, 113, 165, 171, 176], "biblio": [90, 93, 113], "10p": 90, "201114e": [90, 112], "l0": [90, 93, 314, 322, 490], "captur": [91, 162, 163, 167, 200, 236, 238, 254, 286, 287, 315, 329, 380, 445, 476, 480, 493, 498, 502], "lenntech": 91, "com": [91, 92, 94, 95, 96, 97, 98, 99, 304, 305, 345, 415, 433, 438, 439, 444, 451, 480, 481, 483, 485, 508], "hf": [91, 153], "htm": 91, "hastelloi": [92, 482], "invent": 92, "ornl": [92, 108, 125, 137], "molten": [92, 110, 115, 480], "fluorid": 92, "salt": [92, 114, 212, 480], "un": [92, 97, 214, 498], "n10003": 92, "hayn": 92, "h": [92, 93, 135, 139, 153, 162, 171, 220, 235, 276, 328, 329, 331, 493, 494, 502], "2052d": 92, "2020": [92, 482, 494], "haynesintl": 92, "brochur": 92, "corros": [92, 104, 226, 479, 490, 498], "resist": 92, "sab": 92, "sabharwal": 92, "feasibl": 92, "secondari": [92, 204, 282, 331, 414, 480, 500], "exchang": [92, 165, 333, 445, 479, 494, 502], "23076": 92, "oak": [92, 108, 137], "ridg": [92, 108, 137], "laboratori": [92, 108, 137, 165, 175, 479], "oxid": [92, 105, 108, 111, 133, 137, 140, 141, 490], "hot": [92, 97, 104, 116, 286, 303, 306, 313, 315, 322, 353, 354, 412, 483, 490, 493, 494, 498, 502, 503, 506], "704": 92, "871c": 92, "1600f": 92, "293": [92, 93, 136, 142], "polynomi": [92, 93, 95, 96, 97, 99, 105, 137], "sixth": 92, "97": [92, 113, 153], "dll": [92, 97, 104, 306, 490], "academ": [93, 113, 135, 473, 489, 490], "incomplet": [93, 329, 490], "ferrit": 93, "martensit": 93, "stainless": 93, "steel": [93, 299, 493, 502], "famou": 93, "sfr": [93, 226, 480, 489, 493, 494], "swell": [93, 286, 490], "mfh": 93, "handbook": [93, 101, 110, 136, 142], "hofman": [93, 136], "billon": 93, "koenig": 93, "kramer": 93, "lambert": 93, "leibowitz": [93, 113], "orechwa": 93, "pedersen": 93, "porter": 93, "tsai": 93, "wright": 93, "2019": [93, 167, 480, 482, 493], "1506477": 93, "1050": 93, "ref": [93, 112, 115, 137, 173, 238, 329, 379], "eq": [93, 135, 200], "sped": [93, 483], "austenit": 94, "chromium": [94, 153], "superalloi": 94, "specialmet": [94, 95, 96, 97, 98, 99], "technic": [94, 316, 329, 481, 508], "bulletin": 94, "617": [94, 483], "certainti": 94, "900": [95, 137, 142, 464, 466, 502, 504], "800": [95, 97, 142, 464, 482], "20alloi": [95, 99], "20600": 95, "294": [95, 96, 97, 99, 137], "equat": [95, 96, 99, 114, 169, 235, 259, 328, 408, 440, 451, 476, 490, 506], "thermalcond": [95, 96, 99], "cte": [95, 96, 99], "strain": [95, 96, 99, 226, 479, 480, 498, 502], "linexpperc": [95, 96, 99], "2nd": [95, 96, 99, 467], "divid": [95, 96, 99, 286, 309, 363, 388, 407, 466, 479, 497, 498], "differenti": [95, 96, 99, 250, 308, 448], "722e": 95, "303e": 95, "linexp": [95, 96, 99], "221": [96, 491], "1093": [96, 99], "927": 96, "982": [96, 99], "asset": [96, 97, 98], "625": 96, "083e": 96, "125e": 96, "incoloi": [97, 482], "800h": 97, "n08800": 97, "n08810": 97, "sm": [97, 153, 243], "smc": 97, "pe16": 98, "nimon": 98, "x750": 99, "18": [99, 110, 153, 162, 335, 487, 502], "156": 99, "871": 99, "20x": 99, "750": 99, "20170215105917": 99, "8378e": 99, "056e": 99, "600": [100, 125, 131, 132, 137, 142, 295, 298, 299, 301, 342, 464, 466, 502, 503], "1700": [100, 485], "1500": [100, 112, 113, 137], "volumetr": [100, 101, 115, 328, 490, 498, 500], "ON": [100, 101], "measur": [100, 101, 123, 235, 281, 322, 340, 342, 398, 450, 479, 505], "sobolev": [100, 101], "nucl": [100, 101], "mat": [100, 101, 155, 290, 309, 354, 473], "362": [100, 101], "2007": [100, 101], "235": [100, 101, 108, 134, 152, 154, 155, 184, 243, 286, 309, 471, 472, 487, 494], "247": [100, 101], "bismuth": [101, 153], "eutect": 101, "coolant": [101, 104, 255, 282, 286, 303, 306, 309, 315, 323, 328, 329, 331, 353, 355, 412, 459, 464, 466, 474, 480, 487, 489, 490, 493, 497, 498, 500, 502], "superfast": 101, "400": [101, 142, 354, 464], "visc": 101, "1100": [101, 142], "pa": [101, 139, 153, 497, 498, 500], "onlin": [101, 442], "oecd": 101, "nea": [101, 494], "scienc": [101, 163], "nea6195": 101, "ccapac": 101, "accuraci": [101, 408], "whenev": [102, 204, 236, 281, 345, 395, 447, 489], "irradi": [102, 108, 137, 154, 226, 235, 479, 490, 498, 500], "tritium": 102, "li6": [102, 491], "li_wt_frac": [102, 502], "li6_wt_frac": [102, 502], "180c": 102, "923": [103, 483], "1390": 103, "cm3": [103, 309, 400], "mcgonig": 103, "templ": 103, "univers": [103, 167, 250, 309, 397, 480, 502], "1961": 103, "truth": [104, 322, 329], "incorpor": [104, 152, 281, 502], "concert": [104, 166, 480], "bulk": [104, 292, 329, 497, 498], "massfrac": [104, 245, 309, 400, 473, 490], "theoreticaldensityfrac": [104, 499], "realiti": [104, 479, 480, 502], "solid": [104, 133, 152, 153, 162, 226, 235, 286, 303, 304, 306, 314, 322, 331, 354, 490, 491, 493, 498, 502], "due": [104, 108, 167, 169, 226, 235, 250, 252, 254, 281, 286, 306, 309, 315, 323, 343, 372, 450, 480, 483, 498, 500], "manufactur": 104, "programmat": [104, 214, 250, 290, 423, 463, 477, 478, 489, 495, 503], "getter": [104, 328, 329, 342, 359, 360, 366], "privat": [104, 175, 309, 389, 444, 451, 452, 480], "compat": [104, 175, 207, 219, 243, 283, 287, 306, 345, 404], "deep": [104, 309, 355, 502], "generationnum": [104, 309, 355], "includemateri": [104, 309, 355], "predic": [104, 155, 309, 329, 355], "typespec": [104, 219, 239, 283, 286, 306, 309, 329, 331, 355], "exactmatch": [104, 309, 329, 355], "paramstoappli": [104, 306, 309, 344, 345], "previous": [104, 220, 309, 409, 482, 500, 502], "dt": [104, 139, 489, 498], "t0": [104, 306], "methodologi": [104, 200, 235, 313, 480, 489, 506], "prevtempinc": 104, "newtempinc": 104, "temperatureinc": [104, 303, 306, 313, 314, 464, 499, 504], "temperatureincnew": 104, "nucnam": [104, 154, 155, 197, 200, 201, 238, 245, 306, 309, 400, 412, 458, 466, 473], "thrown": [104, 297, 377], "nuclidenam": [104, 292, 306, 309], "massfract": [104, 306, 309], "u238": [104, 154, 155, 163, 299, 466, 471, 487, 490, 491, 494, 502], "likewis": [104, 152], "accordingli": [104, 306, 340, 480, 502], "achiev": [104, 166, 204, 479, 500, 502], "targetdens": 104, "tempguessinc": 104, "celciu": [104, 139, 235, 306, 489], "agre": [104, 309, 480, 493], "inputheightsconsideredhot": [104, 313, 322, 354, 483, 502], "psuedodens": 104, "driven": [104, 239, 287, 492], "forward": [104, 178, 281, 364, 412], "rate": [104, 169, 200, 204, 250, 252, 286, 306, 309, 328, 345, 445, 463, 476, 477, 478, 482, 489, 495, 497, 498, 499, 500, 502, 505], "micron": 104, "strength": 104, "mpa": 104, "propnam": 104, "expandfissionproduct": [104, 309], "pu239": [104, 108, 152, 155, 163, 201, 299, 309, 487, 494, 502], "sum": [104, 155, 163, 169, 197, 200, 202, 238, 245, 248, 286, 309, 353, 396, 412, 426, 448, 487, 492, 502], "frac": [104, 135, 200, 235, 238, 286, 306, 309, 315, 328, 406, 420, 473, 490, 493, 499, 502, 505, 506], "altern": [104, 163, 188, 201, 216, 219, 250, 342, 404, 415, 445, 448, 483, 489, 492, 502], "critic": [104, 139, 165, 239, 286, 304, 480, 497, 500, 502], "million": [104, 407], "nuc": [104, 154, 155, 173, 197, 245, 306, 309, 400, 491], "fall": [104, 226, 314, 444, 452, 480, 504], "min": [104, 224, 309, 340, 483, 500], "mint": 104, "maxt": 104, "convienc": 104, "rhocp": 104, "right": [104, 211, 214, 250, 293, 296, 299, 309, 315, 316, 324, 337, 338, 339, 340, 377, 397, 406, 408, 410, 412, 415, 423, 435, 445, 476, 502, 505, 506], "logic": [104, 162, 165, 172, 177, 204, 219, 224, 281, 287, 290, 292, 319, 328, 329, 345, 373, 393, 395, 407, 452, 482, 483, 487, 502], "downstream": [104, 283, 329, 483], "embrac": 104, "deprec": [104, 154, 281, 293, 332, 350, 366, 484, 485, 487, 502], "densityfrac": 104, "fill": [104, 138, 152, 155, 235, 286, 293, 303, 309, 316, 317, 329, 342, 349, 354, 396, 415, 466, 483, 489, 493, 494, 498, 502], "300": [104, 137, 490], "uniti": 104, "parameter": [104, 467, 502], "magnesiumoxid": 105, "273": [105, 111, 137, 140], "milo": 105, "durand": 105, "journal": [105, 135, 235], "297": 105, "1936": 105, "1063": 105, "174539": 105, "3rd": [105, 335, 337, 350, 497], "moli": 107, "ceram": [108, 133, 137], "thermophys": [108, 114, 137, 139, 142, 212], "popov": [108, 137], "tm": [108, 137, 153, 154], "351": [108, 137], "rsicc": [108, 137], "fmdp": [108, 137], "tm2000": [108, 137], "inherit": [108, 151, 155, 238, 303, 329, 346, 366, 451, 485, 489, 502], "leav": [108, 155, 220, 306, 309, 372, 487, 494, 502], "unchang": [108, 306, 372, 483, 502], "u235_wt_frac": [108, 134, 135, 136, 137, 295, 493, 502], "mass_frac_pu02": 108, "massfracpuo2": 108, "puo2": 108, "pu238": [108, 299, 487, 494, 502], "238": [108, 134, 154, 243, 286, 471, 476, 491], "0495599": 108, "239": [108, 134, 154, 243, 476, 491], "0521634": [108, 154], "pu240": [108, 299, 487, 494, 502], "240": [108, 243, 491], "0538135": 108, "pu241": [108, 155, 299, 487, 494, 502], "241": [108, 243, 491], "0568515": 108, "pu242": [108, 169, 299, 487, 494, 502], "242": [108, 155, 491], "0587426": 108, "am241": [108, 154, 287, 299, 487, 494, 502], "0568291": 108, "0439299": [108, 152, 154], "0507882": [108, 154], "oxygen": [108, 133, 153, 292, 309, 400, 494, 502], "9994": [108, 133], "joyo": [108, 480], "pu": [108, 134, 135, 153, 243, 286, 309, 329, 400, 498], "76": [108, 153], "82": [108, 153, 490], "23": [108, 153, 259, 335, 353, 438, 483, 487], "66": [108, 153], "64": [108, 137, 153, 331, 345, 404, 494], "326469": 108, "22": [108, 112, 116, 139, 153, 335, 415, 480, 481, 483, 487, 491, 502, 508], "99": [108, 125, 153, 202, 243, 408, 502], "77": [108, 153, 166], "237": [108, 491], "359511": 108, "upu": 108, "70766": 108, "31": [108, 133, 153, 482], "9988": [108, 133], "269": 108, "70646": 108, "881357": 108, "177": [108, 487, 489, 492, 493, 496], "156000": 108, "823": 108, "725356": 108, "001": [108, 317, 329, 363, 408, 482, 487, 502], "074256": 108, "000156": 108, "7682": 108, "119839": 108, "1923": 108, "029999": 108, "0266": 108, "004150": 108, "0055": 108, "000858": 108, "0064": 108, "000998": 108, "2299": 108, "195": 108, "633404": 108, "166759": 108, "7701": 108, "558597": 108, "118643": 108, "melt": [108, 112, 131, 132, 133, 136, 137], "liquidu": [108, 490], "tl": [108, 153, 160], "solidu": [108, 490], "3120": [108, 137], "388": 108, "655": 108, "336": 108, "burnup": [108, 163, 174, 212, 219, 220, 226, 238, 239, 243, 250, 254, 286, 309, 396, 408, 414, 467, 479, 483, 497, 498, 499, 500, 502], "niobium": [109, 153], "zirconium": [109, 134, 142, 153, 154, 494, 502], "foust": 110, "nak": 110, "gordon": 110, "breach": 110, "1972": 110, "63": [110, 153], "1250": 110, "scandium": [111, 153], "1573": [111, 140], "scandia": 111, "invers": [111, 140, 408], "rare": [111, 140, 162, 346, 366, 433], "earth": [111, 140, 415], "silicon": [112, 153], "808538e": 112, "cumul": [112, 211, 250, 313, 342, 345, 396, 415, 437, 483, 502], "munro": 112, "phy": 112, "chem": 112, "26": [112, 152, 153, 155, 286, 494], "1997": 112, "51": [112, 153], "math": [112, 167, 203, 219, 406, 408, 426, 435, 439, 451, 460, 467, 468, 476, 483, 489], "exp": 112, "00527": 112, "0e": [112, 466, 494, 505], "rho0": 112, "tc0": 112, "0e3": 112, "1110": 112, "425": 112, "003": [112, 329, 363, 487, 502], "52000": 112, "24e": 112, "437": [112, 471, 477], "298": [112, 133, 136, 137, 142], "bring": [113, 135, 281, 401, 421, 445, 480, 489, 493, 502], "anl": [113, 136, 142, 154, 175, 341, 479, 480, 487, 489, 492, 493, 496], "95": [113, 153, 155, 175, 502], "fink": 113, "thermodynam": 113, "vapor": [113, 139], "1995": [113, 175, 235], "94649": 113, "gxndli": 113, "webview": 113, "85": [113, 153, 415], "2230": 113, "371": 113, "3715": 113, "chlorid": 114, "nabr": 114, "naf": 114, "rai": [114, 397], "attenu": 114, "techniqu": [114, 328, 502], "334": 115, "430": [115, 354], "sulfur_density_frac": [115, 502], "espeau": 115, "ceolin": 115, "508k": 115, "1382": 116, "tungsten": [116, 153, 482], "refractori": 116, "roll": [116, 497], "bureau": 116, "naval": 116, "weapon": 116, "contract": [116, 306, 313, 322, 498, 501], "n600": 116, "59530": 116, "southern": 116, "institut": 116, "456": 116, "574": 116, "702": 116, "840": 116, "56": [116, 153, 491], "846": [116, 483], "948": 116, "89": [116, 153, 476], "1023": 116, "1146": 116, "1287": 116, "78": [116, 153, 502], "203": 116, "253": [116, 235], "303": 116, "342": 116, "366": 116, "421": [116, 235], "468": 116, "504": 116, "tabular": [116, 415], "21c": 116, "1966": [116, 485], "viii": [116, 162], "appendix": 116, "181": 116, "test_canaccessclassesfrompackag": [118, 119], "test_packageclassesequalmoduleclass": [118, 119], "test_pseudodens": [118, 120, 122, 124, 125, 126], "test_heatcapac": [118, 120, 124, 125, 126], "test_thermalconduct": [118, 120, 125], "test_massfrac": [118, 120, 130], "test_validrang": [118, 120], "mat_class": [118, 121, 122, 123, 124, 125, 126, 127, 128, 129], "test_theoretical_pseudodens": [118, 121, 128], "test_propertyvalidtemperatur": [118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "test_linearexpansionperc": [118, 123, 125, 128], "test_dens": [118, 123, 125, 129, 351, 354], "defaultmassfrac": [118, 124], "test_lithium_material_modif": [118, 124], "test_meltingpoint": [118, 124, 125, 126], "test_boilingpoint": [118, 124], "test_material_initi": [118, 125], "test_findmateri": [118, 125], "test_namespac": [118, 125, 420], "test_poros": [118, 125], "test_getcorrosionr": [118, 125], "test_getmassfracpuo2": [118, 125], "test_getmolfracpuo2": [118, 125], "test_getmeltingpoint": [118, 125], "test_applyinputparam": [118, 125], "test_specificvolumeliquid": [118, 125], "test_enthalpi": [118, 125], "test_linearexpans": [118, 125], "test_adjustmassenrich": [118, 125, 351, 354], "test_gettemperatureatdens": [118, 125], "test_getdensityexpansion3d": [118, 125], "test_removenucmassfrac": [118, 125], "test_densitytimesheatcapactii": [118, 125], "test_gettempchangefordensitychang": [118, 125], "test_dupl": [118, 125, 129, 246, 248, 351, 352, 353, 379, 386], "test_setdefaultmassfrac": [118, 125], "test_volumetricexpans": [118, 125], "test_dynamicvisc": [118, 125], "test_densityneverchang": [118, 125], "test_getchildren": [118, 125, 351, 355], "test_getchildrenwithflag": [118, 125], "test_iconel800_linearexpans": [118, 125], "test_00_setdefaultmassfrac": [118, 125], "test_01_linearexpansionperc": [118, 125], "test_02_linearexpans": [118, 125], "test_03_pseudodens": [118, 125], "test_polyfitthermalconduct": [118, 125], "test_polyfitheatcapac": [118, 125], "test_polyfitlinearexpansionperc": [118, 125], "test_nicklecont": [118, 125], "test_linearexpansionhott": [118, 125], "test_meancoefficientthermalexpans": [118, 125], "test_00_applyinputparam": [118, 125], "test_01_pseudodens": [118, 125], "test_02_linearexpansionperc": [118, 125], "baseinput": [118, 125], "loadassembli": [118, 125], "test_class1class2_class1_wt_frac": [118, 125], "test_class1class2_classx_custom_isotop": [118, 125], "test_sulfur_density_frac": [118, 127], "test_ispickl": [118, 129, 351, 357, 360], "test_td": [118, 129], "test_cach": [118, 129], "test_densitykgm3": [118, 129], "test_pseudodensitykgm3": [118, 129], "test_water_at_freez": [118, 130], "test_water_at_boil": [118, 130], "test_water_at_critcalpoint": [118, 130], "test_validatenam": [118, 130], "superclass": 119, "verif": [120, 130, 451, 479], "300k": 120, "ratio": [120, 163, 286, 329, 396, 398, 476, 494, 498, 500, 502], "_material_test": [121, 122, 124, 125, 126, 127, 128], "0759": 124, "discover": [125, 483], "1723": 125, "efg": 125, "pseudo": [125, 129, 157, 448, 483, 504], "linearli": [125, 396], "_mixtur": 125, "nickl": 125, "spec": 125, "nnuclid": [125, 295, 299, 301], "ncustom": [125, 299], "customisotopic1": 125, "customisotopic2": 125, "nblock": [125, 295, 298, 299, 301], "block_fuel": [125, 295, 301, 493, 502], "fuel1": [125, 295, 301, 316, 331, 502], "component_fuel_fuel1": [125, 295, 301, 502], "tinput": [125, 295, 298, 299, 301, 303, 304, 305, 306, 308, 322, 354, 355, 466, 474, 493, 494, 502], "thot": [125, 295, 298, 299, 301, 303, 304, 305, 306, 308, 322, 351, 354, 355, 466, 474, 487, 493, 494, 502], "ip": [125, 286, 295, 298, 299, 301, 304, 306, 354, 355, 466, 474, 493, 502, 503], "mult": [125, 219, 286, 290, 295, 298, 299, 301, 304, 305, 306, 308, 354, 355, 466, 474, 493, 494, 499, 502, 503], "op": [125, 286, 295, 298, 299, 301, 303, 304, 305, 306, 332, 354, 355, 374, 466, 474, 493, 502, 503], "fuel2": [125, 295, 301, 316, 331, 502], "component_fuel_fuel2": [125, 295, 301, 502], "nassembli": [125, 295, 298, 299, 301], "assembly_a": [125, 295, 298, 299, 301, 502], "height": [125, 174, 224, 283, 286, 287, 289, 295, 297, 298, 299, 301, 304, 306, 308, 309, 313, 314, 322, 328, 329, 335, 340, 352, 353, 354, 355, 395, 408, 433, 474, 482, 483, 485, 487, 493, 494, 498, 502], "materialmodif": [125, 282, 287, 288, 301], "picklabl": [129, 388], "commun": [129, 151, 165, 204, 353, 373, 446, 505], "iapw": [130, 139], "if97": [130, 139], "0c": 130, "relguid": [130, 139], "supsat": [130, 139], "100c": 130, "096k": 130, "iaea": [131, 132, 133, 212], "tecdoct": [131, 132, 133], "1450": [131, 132, 133], "challeng": [131, 132, 133, 166, 292, 329, 340, 452, 480], "tecdoc": [131, 132, 133], "2005": [131, 132, 133], "pub": [131, 132, 133], "mtcd": [131, 132, 133], "te_1450_web": [131, 132, 133], "u233": [131, 155, 491], "u233_wt_frac": [131, 502], "te": [131, 132, 133, 153, 155, 502], "1223": 133, "232": [133, 134, 491], "030806": 133, "264": 133, "029606": 133, "298k": 133, "zirc": 134, "233": [134, 491], "zr_wt_frac": [134, 135, 301, 502], "notion": [135, 250], "10zr": [135, 309], "chandrabhanu": 135, "incorrect": [135, 342, 483], "basak": 135, "prasad": 135, "kamath": 135, "prabhu": 135, "rich": [135, 374, 442, 480, 504], "480": 135, "2009": [135, 480], "857": 135, "862": 135, "issn": 135, "0925": 135, "8388": 135, "1016": [135, 480], "jallcom": 135, "02": [135, 137, 155, 283, 299, 445, 458, 467, 468, 474, 475, 477, 482, 483, 484, 487, 491, 502, 504], "077": 135, "aaafuel": 136, "kim": 136, "aaa": [136, 142, 500], "2003": [136, 494], "822554": 136, "01591t": 136, "907": 136, "215": [136, 491], "1600": [136, 142], "255": 136, "nse": 136, "gl": 136, "07": [136, 163, 445, 467, 474, 475, 485, 487, 491, 502], "27": [137, 153, 452, 482, 483, 487], "302": 137, "008463": 137, "87410000": 137, "548": 137, "68": [137, 153], "18531": 137, "3100": 137, "3123": 137, "3000": 137, "dioxid": 137, "nonequilibrium": 137, "molecular": [137, 309], "motoyama": 137, "60": [137, 153, 216, 283, 286, 338, 354, 397, 406, 408, 497, 498, 500], "juli": 137, "1999": 137, "92": [137, 152, 153, 155, 491], "380289e": [137, 491], "599930e": 137, "1200": [137, 142, 464], "1800": [137, 142], "2100": 137, "2700": 137, "991": 137, "864": 137, "768": 137, "567": 137, "073": 137, "891": 137, "847": 137, "718": 137, "u234": [137, 155, 292, 299, 487, 491, 502], "curv": [137, 208, 408, 483], "faith": 139, "supplementari": 139, "ordinari": 139, "substanc": 139, "1992": 139, "steam": 139, "satur": 139, "industri": [139, 480, 489], "h2o": [139, 162], "007976e": 139, "sr1": 139, "86": [139, 153, 502], "pressur": [139, 153, 212, 226, 276, 342, 440, 480, 497, 498, 500, 502], "096": 139, "322": 139, "064": 139, "22064000": 139, "5453657571674064": 139, "65134998e": 139, "08": [139, 445, 466, 467, 474, 475, 482, 483, 487], "2690": 139, "66631": 139, "127": [139, 468, 493], "287297": 139, "003439": 139, "981825814": 139, "alpha": [139, 155, 162, 163, 165, 466, 471, 473, 476, 490, 498, 506], "1135": 139, "905627715": 139, "phi": 139, "2319": 139, "5246": 139, "1e": [139, 142, 167, 211, 371, 400, 412, 460, 466, 475, 502, 505], "06": [139, 142, 245, 299, 445, 458, 467, 474, 475, 483, 487, 491], "wrt": 139, "quantiti": [139, 165, 328, 345, 354, 412, 414, 497], "kgk": 139, "yttrium": [140, 153], "yttria": 140, "zinc": [141, 153], "1491": 141, "28": [141, 153], "polycrystallin": 141, "devic": 141, "technologi": [141, 235, 480], "45803": 142, "touloukian": 142, "kirbi": 142, "taylor": 142, "desai": 142, "ifi": [142, 412], "plenum": [142, 235, 282, 283, 286, 331, 352, 353, 479, 487, 492], "washington": 142, "1975": 142, "700": [142, 464], "1136": [142, 483], "99999": 142, "1137": 142, "1400": 142, "7e": [142, 466], "9e": [142, 466], "6e": [142, 466], "8e": [142, 466], "2e": [142, 159, 466], "5e": [142, 450, 466], "03e": 142, "mk": 142, "upgrad": [144, 250, 480, 483, 494, 502], "invest": [144, 480], "thousand": [144, 162, 329, 445, 452, 480, 497, 498], "seriou": [144, 480, 489, 502], "analyst": [144, 310, 447, 480, 487, 502], "strongli": [144, 309, 444, 504], "oftentim": [144, 292, 502], "gb": [144, 480], "cpu": [144, 151, 448, 480, 502], "week": [144, 480], "monetari": 144, "tempor": 144, "meanwhil": [144, 480], "fix": [144, 152, 165, 170, 239, 250, 328, 345, 353, 374, 408, 415, 444, 451, 452, 502], "eas": [144, 306, 480, 482], "train": 144, "cognit": 144, "burden": [144, 379, 502], "background": 144, "word": [144, 309, 310, 333, 340, 355, 379, 414, 415, 451, 502], "spreadsheet": [144, 480], "test_m0_1_6": [144, 148], "testmigr": [144, 148, 149], "test_migration_bas": [144, 148], "testmigrationbas": [144, 148, 150], "testsettingsmigr": [144, 148, 150], "fromvers": [144, 145, 146, 147], "tovers": [144, 145, 146, 147], "classic": [145, 493], "_applytostream": 145, "center": [146, 219, 220, 283, 286, 305, 308, 309, 315, 316, 329, 335, 338, 339, 340, 352, 396, 397, 406, 415, 424, 433, 468, 476, 483, 487, 489, 494, 498, 502], "na23": [146, 466, 480, 487], "na": [146, 153, 259, 292, 309, 353, 466, 487, 492, 502], "mn55": [146, 487], "he4": [146, 163, 487], "he": [146, 153, 487, 492, 498], "w182": [146, 299, 487], "o16": [146, 292, 494, 502], "al27": [146, 162, 494], "n14": 146, "w183": [146, 299, 487], "w184": [146, 299, 487], "w186": [146, 299, 487], "alphanumer": [147, 482], "ring": [147, 219, 220, 239, 286, 304, 308, 315, 316, 323, 329, 333, 334, 335, 338, 339, 340, 341, 360, 363, 406, 424, 459, 460, 482, 500, 502, 504], "a2003b": 147, "test_locationlabelmigr": [148, 149], "test_basic_valid": [148, 150], "test_loadstreamfrompath": [148, 150], "locationlabel": 149, "mpi_comm": [151, 448], "bcast": [151, 205, 396], "wait": [151, 205, 448, 452, 489], "sync": [151, 390, 448], "sit": [151, 163, 205, 220, 329, 448, 476, 479], "someinst": 151, "comm_world": 151, "interestingli": 151, "strong": [151, 226, 243], "discourag": [151, 309], "sign": [151, 204, 309, 444, 450], "allcpuresult": 151, "objectsforallcorestoit": 151, "subset": [151, 238, 292, 309, 310, 327, 400, 420, 421, 482, 502], "len": [151, 155, 309, 407, 412, 448, 466, 469, 470, 473, 491, 492, 504], "clase": 151, "numpernod": 151, "mpi_siz": [151, 259, 448], "workload": 151, "spawn": [151, 482], "varaibl": 151, "think": [151, 309, 452, 482, 502, 504], "dsitributionact": 151, "amongst": [151, 342, 502], "skipinterfac": 151, "minim": [152, 220, 237, 342, 390, 402, 408, 451, 476, 481, 493, 508], "mainli": [152, 239, 281], "three": [152, 155, 167, 169, 182, 287, 308, 309, 340, 373, 408, 489, 493, 494, 502], "byz": [152, 153, 491], "ironfromz": 152, "ironfromnam": 152, "bynam": [152, 153, 155, 162, 458, 465, 466, 473, 491], "iron": [152, 153, 154, 491, 502], "ironfromsymbol": 152, "bysymbol": [152, 153, 491], "lower": [152, 219, 239, 282, 283, 286, 291, 309, 312, 329, 331, 337, 340, 341, 379, 483, 497], "upper": [152, 153, 169, 201, 219, 241, 250, 282, 283, 286, 312, 331, 337, 340, 341, 397, 406, 502], "truli": [152, 396, 480, 498], "ever": [152, 331, 353, 355, 364, 451, 480, 489, 502], "118": [152, 153], "fe56": [152, 162, 471, 487], "stand_alon": 152, "human": [152, 155, 332, 378, 502], "readabl": [152, 155, 281, 378, 451, 502], "capit": [152, 155, 238, 450, 451, 502], "letter": [152, 166, 201, 238, 286, 397, 411, 451, 485, 493, 498, 502], "tradition": [152, 218], "legaci": [152, 236, 350, 480], "Of": [152, 163, 219, 310, 480, 487, 492, 494], "reserv": [152, 239, 451, 452], "aa": [152, 164, 173, 201, 238, 239, 254, 329, 355, 471, 472], "ab": [152, 200, 238, 286, 309, 329, 487, 489, 498], "za": 152, "pu39": [152, 286], "along": [152, 155, 166, 212, 239, 250, 280, 286, 309, 310, 313, 314, 322, 328, 331, 337, 371, 372, 396, 408, 445, 447], "bylabel": [152, 155, 491], "softwar": [152, 155, 165, 445, 451, 479, 480, 481, 493, 502, 508], "mcnp": [152, 155, 162, 243, 281, 286, 316, 329, 400, 408, 420, 440, 457, 461, 478, 483, 489, 495, 502], "serpent": [152, 155, 204, 239, 243, 502], "mc2": [152, 154, 155, 159, 169, 171, 173, 176, 200, 204, 243, 247, 254, 286, 409, 445, 480, 502], "94": [152, 153, 154, 483], "tinfromnam": 152, "sn112": 152, "tinfromlabel": 152, "tinfrommcc2id": 152, "sn1125": 152, "tinfrommcc3id": 152, "sn1127": 152, "fulfil": 152, "ll": [152, 283, 340, 341, 415, 448, 481, 487, 489, 492, 493, 502, 508], "test_el": [152, 156], "testel": [152, 156, 157], "test_nucdirectori": [152, 156], "testnucdirectori": [152, 156, 158], "test_nuclidebas": [152, 156], "testnuclid": [152, 156, 159], "testaaazzzsid": [152, 156, 159], "test_thermalscatt": [152, 156], "buildblockwithtsl": [152, 156, 160], "testthermalscatt": [152, 156, 160], "getnuclidethermalscatteringdata": [152, 156, 160], "test_transmut": [152, 156], "randomstr": [152, 156, 161], "transmutationtest": [152, 156, 161], "decaymodetest": [152, 156, 161], "alkali_met": [152, 153, 491], "alkaline_earth_met": [152, 153], "nonmet": [152, 153], "transition_met": [152, 153], "post_transition_met": [152, 153], "metalloid": [152, 153], "halogen": [152, 153], "noble_ga": [152, 153], "lanthanid": [152, 153], "actinid": [152, 153, 245, 292, 309, 476, 502], "isnaturallyoccur": [152, 153, 157, 491], "getdatabasenam": [152, 155], "getdecai": [152, 155], "getmcc2id": [152, 155], "getmcc3id": [152, 155], "getserpentid": [152, 155], "fissil": [152, 155, 182, 238, 283, 309, 487, 497, 498, 500, 502, 507], "spontaneous_fiss": [152, 155], "getmcnpid": [152, 155], "getaaazzzsid": [152, 155], "getendfmatnum": [152, 155], "getsubjectnuclidebas": [152, 162], "getpreferredproduct": [152, 163], "outlin": [153, 155, 397, 450, 504], "gaseou": [153, 245, 483, 502], "stp": [153, 248], "hydrogen": [153, 160, 494], "helium": 153, "nitrogen": 153, "fluorin": 153, "ne": [153, 154, 309], "neon": [153, 154], "chlorin": 153, "argon": 153, "36": [153, 502], "krypton": [153, 412], "xe": [153, 243, 412], "54": 153, "xenon": [153, 412, 502], "rn": 153, "radon": 153, "og": 153, "oganesson": 153, "classifi": [153, 309], "ac": [153, 162, 492], "actinium": 153, "90": [153, 286, 309, 397, 407, 467, 480, 493, 502], "91": 153, "protactinium": [153, 157], "93": [153, 502], "neptunium": 153, "plutonium": 153, "am": [153, 243], "americium": 153, "curium": [153, 502], "bk": 153, "berkelium": 153, "cf": 153, "98": [153, 473, 476, 487, 502], "einsteinium": 153, "fm": 153, "fermium": 153, "md": [153, 489], "101": [153, 408], "mendelevium": 153, "NO": 153, "102": [153, 469, 477], "nobelium": 153, "lr": 153, "103": 153, "lawrencium": 153, "num": [153, 211, 286, 352, 445, 467], "aluminium": 153, "phosphoru": 153, "sc": [153, 413], "37": 153, "titanium": 153, "ti": [153, 338, 339, 450, 476, 490], "vanadium": 153, "34": 153, "manganes": 153, "38": [153, 493], "cobalt": 153, "co": [153, 467, 481, 502, 508], "29": [153, 342, 485], "zn": 153, "gallium": 153, "germanium": 153, "ge": 153, "33": [153, 178, 252, 415, 466], "arsen": 153, "AS": [153, 166, 480, 493], "selenium": 153, "se": 153, "bromin": 153, "br": 153, "rubidium": 153, "rb": [153, 166, 170], "strontium": 153, "sr": [153, 438], "57": 153, "nb": [153, 155, 162, 458, 473, 476], "mo": [153, 243, 299, 487, 492, 502], "technetium": 153, "ruthenium": 153, "ru": 153, "rhodium": 153, "rh": 153, "palladium": 153, "pd": [153, 261, 344], "53": [153, 487], "silver": 153, "ag": [153, 212, 415], "74": [153, 361, 493], "cadmium": 153, "cd": [153, 480, 481, 489, 508], "49": 153, "indium": 153, "IN": [153, 167, 174], "88": 153, "tin": [153, 502], "sn": [153, 165, 250], "59": 153, "antimoni": 153, "sb": 153, "52": 153, "tellurium": 153, "iodin": 153, "barium": 153, "ba": [153, 238], "lanthanum": 153, "la": [153, 162, 165], "58": [153, 342], "cerium": 153, "ce": 153, "praseodymium": 153, "pr": [153, 444, 451, 483, 484, 485], "neodymium": 153, "nd": [153, 163, 259, 299], "61": 153, "promethium": 153, "pm": [153, 344], "62": 153, "samarium": 153, "europium": 153, "eu": 153, "gadolinium": 153, "gd": 153, "65": [153, 238], "terbium": 153, "tb": 153, "dysprosium": 153, "dy": 153, "holmium": 153, "ho": 153, "erbium": 153, "er": 153, "69": 153, "thulium": 153, "70": [153, 353, 407, 415, 492, 502], "ytterbium": 153, "yb": 153, "71": [153, 487], "lutetium": 153, "lu": 153, "72": [153, 502], "ta": 153, "75": [153, 493], "rhenium": 153, "osmium": 153, "iridium": 153, "ir": 153, "platinum": 153, "pt": 153, "79": [153, 502], "gold": [153, 438], "au": 153, "mercuri": 153, "hg": 153, "81": 153, "thallium": 153, "pb": [153, 281, 351, 359, 379, 390], "bi": [153, 448], "84": [153, 491], "polonium": 153, "po": [153, 329, 334, 335, 338, 340, 341, 360, 482, 504], "astatin": 153, "AT": [153, 172], "87": [153, 491], "francium": 153, "fr": 153, "radium": 153, "ra": [153, 159], "104": 153, "rutherfordium": 153, "rf": 153, "105": 153, "dubnium": 153, "106": 153, "seaborgium": 153, "sg": 153, "107": [153, 470, 477], "bohrium": 153, "bh": 153, "108": 153, "hassium": 153, "109": 153, "meitnerium": 153, "mt": [153, 487, 507], "110": [153, 235, 354, 407], "darmstadtium": 153, "111": 153, "roentgenium": 153, "rg": 153, "112": 153, "copernicium": 153, "cn": 153, "113": 153, "nihonium": 153, "nh": 153, "114": 153, "flevrovium": 153, "fl": 153, "115": 153, "moscovium": 153, "mc": [153, 154, 155, 171, 188, 200, 250, 291, 493, 502], "116": 153, "livermorium": 153, "lv": 153, "117": 153, "tennessin": 153, "119": 153, "dummi": [153, 155, 171, 173, 176, 200, 211, 282, 290, 322, 329, 331, 353, 355, 378, 386, 448, 466, 467, 475, 487, 494], "120": [153, 223, 286, 316, 485, 491], "lumpedfissionproduct": [153, 236, 242, 286, 306, 309], "lp": 153, "proton": [153, 155, 163, 465, 473, 476, 491], "chemic": [153, 226, 248, 309, 400, 479, 498, 500], "cut": [153, 286, 308, 316, 397, 480, 502], "elem": 153, "abbrevi": [153, 154, 159, 451], "getz": 153, "elementzbysymbol": 153, "elementsymbol": 154, "prefix": [154, 165, 166, 214, 396, 451], "xstype": [154, 236, 239, 243, 286, 289, 474, 498, 502], "suffix": [154, 164, 200, 201, 254, 286, 309, 350], "u235ia": 154, "zircfb": 154, "2355": [154, 155], "ia": 154, "fb": 154, "mc2liblabel": 154, "am242": [154, 155, 238, 299], "a242": 154, "am242m": [154, 155, 159, 487], "adjustnuclid": 154, "amass": 154, "u239": [154, 491], "lindhard": 154, "cutoff": [154, 398, 502], "displac": [154, 158, 213, 235, 480, 498, 502], "specter": 154, "ii": 154, "greenwood": 154, "fpp": 154, "197": 154, "argonn": [154, 167, 175, 479, 480], "1985": 154, "ed": [154, 502], "ev": [154, 169, 200, 241, 471, 498, 500], "350439e": [155, 491], "hl": [155, 491], "22160758861e": [155, 491], "204000e": [155, 491], "03": [155, 445, 458, 461, 467, 474, 475, 483, 487, 491, 502, 504], "bymcc2id": [155, 491], "bymcc3id": [155, 491], "u235_7": 155, "bymcnpid": [155, 491], "92235": [155, 458], "aaazzz": 155, "byaaazzzsid": [155, 491], "2350920": 155, "npu239": 155, "decaytyp": 155, "dectyp": 155, "sf": [155, 163], "identif": [155, 174, 183], "endf": [155, 162, 184, 243, 292], "vii": [155, 162, 184], "fissl": 155, "halflif": [155, 491], "mcc2id": 155, "mcc3id": 155, "nucleon": 155, "excit": [155, 489, 494], "pad": [155, 250, 322, 396, 407, 415, 433, 500, 502], "nusf": [155, 163, 491], "cm244": [155, 299, 487], "answer": [155, 340, 374, 417, 479, 480, 487, 491], "card": [155, 200, 400, 420, 457, 461, 478, 483, 495], "isomer": 155, "94239": [155, 458], "6000": [155, 458], "eg": [155, 201, 309], "129m": 155, "njoi": [155, 243], "lightest": 155, "9228": 155, "9237": 155, "92000": 155, "Not": [155, 198, 200, 239, 309, 335, 396, 399, 498, 504], "nat": 155, "placehold": [155, 207, 283, 364, 397, 415, 493], "truncat": [155, 396, 415], "lump": [155, 163, 238, 243, 245, 247, 248, 306, 309, 476, 483, 502], "fissionproduct": [155, 243, 467, 474, 475, 487, 504], "expend": 155, "numberdensitydict": 155, "activenuclid": [155, 351, 355], "march": [155, 445, 502], "smallest": [155, 286, 303, 315, 408], "orderedset": 155, "lambda": [155, 309, 344, 407, 412, 415, 467, 489, 492, 500], "nn": [155, 504], "zn64": 155, "zn66": 155, "zn67": 155, "zn68": 155, "zn70": 155, "zr90": [155, 487], "zr91": [155, 487], "zr92": [155, 487], "zr94": [155, 487], "zr96": [155, 487], "zr93": 155, "zr95": 155, "isomers90": 155, "isom": [155, 162], "mo95": [155, 487], "mo2n": 155, "nb95": 155, "nb2n": 155, "zr2n": 155, "meet": [155, 286, 309, 329, 335, 344], "0107358968": 155, "am4c": 155, "newlabel": 155, "burnchainstream": [155, 476], "twice": [155, 224, 339, 493], "rebuild": 155, "orphan": 155, "burnchain": 155, "believ": [155, 480], "henc": [155, 306, 415, 447], "ecosystem": [155, 281, 444, 446, 451, 452, 480, 490], "everyth": [155, 175, 201, 202, 205, 250, 309, 342, 411, 415, 448, 493], "metast": [155, 476, 500], "ground": [155, 480, 483], "test_elements_elementbulkproperti": [156, 157], "test_element_elementbynamereturnsel": [156, 157], "test_element_elementbyzreturnsel": [156, 157], "test_element_elementbysymbolreturnsel": [156, 157], "test_element_addexistingelementfail": [156, 157], "test_element_addedelementappearsinelementlist": [156, 157], "test_element_getnatrualisotpicsonlyretrievesabundacegt0": [156, 157], "test_element_isnaturallyoccur": [156, 157], "test_abundancesaddtoon": [156, 157], "test_isheavymet": [156, 157], "test_nucdir_getnameforolddashednam": [156, 158], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclid": [156, 158], "test_nucdir_getnuclidesfromforbadnam": [156, 158], "test_getdisplacementenergi": [156, 158], "test_nucbases_fromnamebadnameraisesexcept": [156, 159], "test_nucbase_allabundancesaddtoon": [156, 159], "test_nucbases_alllabelsareuniqu": [156, 159], "test_nucbases_negativezraisesexcept": [156, 159], "test_nucbases_z295raisesexcept": [156, 159], "test_nucbases_mc2element": [156, 159], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail": [156, 159], "test_naturalnuclidebase_getnatrualisotp": [156, 159], "test_nucbases_singlefailswithmultiplematch": [156, 159], "test_nucbases_singlefailswithnomatch": [156, 159], "test_nucbases_singleisprettyspecif": [156, 159], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotop": [156, 159], "test_nucbases_labelandnamecollsionsareforsamenuclid": [156, 159], "test_nucbases_imposeburnchaindecaybulkstatist": [156, 159], "test_nucbases_imposeburnchaintransmutationbulkstatist": [156, 159], "test_nucbases_imposeburn_nusf": [156, 159], "test_nucbases_databasenamesstartwith_n": [156, 159], "test_nucbases_alldatabasenamesareuniqu": [156, 159], "test_nucbases_am242m": [156, 159], "test_nucbases_isheavymet": [156, 159], "test_getdecai": [156, 159], "test_getendfmatnum": [156, 159], "test_nonmc2nuclid": [156, 159], "test_kryptondecayconst": [156, 159], "test_curiedefinitionwithra226": [156, 159], "test_loadmcc2data": [156, 159], "test_loadmcc3data": [156, 159], "test_aaazzzsnamegener": [156, 159], "test_graphiteonreactor": [156, 160], "test_endf8compound": [156, 160], "test_endf8elementincompound": [156, 160], "test_endf8isotop": [156, 160], "test_acecompound": [156, 160], "test_aceelementincompound": [156, 160], "test_aceisotop": [156, 160], "test_failonmultipl": [156, 160], "test_transmutation_validreactiontyp": [156, 161], "test_transmutation_productparticl": [156, 161], "test_transmutation_invalidreactiontyp": [156, 161], "test_decaymode_validreactiontyp": [156, 161], "test_decaymode_invalidreactiontyp": [156, 161], "ripl": [157, 482, 483], "debat": 157, "yeah": [157, 212], "branch": [159, 163, 254, 444, 476, 483], "3e": [159, 466], "threshold": [159, 241, 267], "ternari": [159, 352], "sponan": 159, "am242g": 159, "226": [159, 491], "ci": [159, 309, 458, 483, 485], "988": 159, "mcc": [159, 173], "aaazz": 159, "tsl": [160, 162], "armiobj": 160, "conceptu": [160, 306, 363, 480, 502], "offici": [160, 174, 345, 452], "tslbynuclidebas": 160, "subject": [160, 162, 281, 451, 480], "tslinfo": 160, "nucbas": 160, "acelabel": [160, 162], "awar": [162, 205, 313, 480, 502], "characterist": [162, 342], "significantli": [162, 165, 204, 309, 445], "molecul": [162, 309], "beta": [162, 163, 169, 235, 476, 498, 500, 502], "solver": [162, 163, 169, 173, 175, 204, 243, 249, 250, 281, 286, 328, 459, 467, 476, 489, 493, 494, 502], "c12": 162, "parson": 162, "ur": 162, "25096": 162, "lanl": [162, 173], "pdf_file": 162, "classif": 162, "beo": 162, "crystallin": 162, "porou": [162, 235], "para": 162, "ortho": 162, "ch4": 162, "sio2": 162, "benzen": 162, "iii": 162, "kernel": [162, 214, 238, 250, 289, 290, 408, 480, 483, 487, 488, 493, 502, 504], "bynbandcompound": 162, "compoundnam": 162, "endf8label": 162, "whose": [162, 286, 313, 342, 396, 407, 415], "methan": 162, "endf8": 162, "rebuilt": 162, "burnchainfilenam": [163, 502], "np237": [163, 299, 487], "n2n": [163, 188, 197, 200, 259, 309, 498], "lfp38": [163, 243, 299, 487], "np239": 163, "ngamma": [163, 259, 412, 471, 476], "45000e": 163, "halflifeinsecond": 163, "4099935680e": 163, "gamma": [163, 165, 170, 171, 176, 191, 200, 201, 202, 236, 250, 257, 259, 286, 306, 309, 327, 328, 342, 345, 412, 471, 476, 483, 498, 502], "low": [163, 238, 239, 282, 331, 396, 412, 467, 487, 494, 497, 498, 500, 502], "explicitli": [163, 219, 243, 281, 293, 329, 331, 448, 452, 469, 470, 482, 489, 493, 502], "matrix": [163, 166, 167, 169, 172, 173, 182, 191, 197, 200, 202, 259, 396, 463, 476, 477, 478, 492, 495, 498, 504], "ill": 163, "exponenti": [163, 408, 476], "cram": 163, "adequ": [163, 451], "solut": [163, 171, 238, 239, 243, 310, 315, 345, 408, 502], "intrins": [163, 479, 498, 500], "pusa": 163, "maria": 163, "jaakko": 163, "leppanen": 163, "164": 163, "2010": 163, "140": 163, "150": [163, 407, 408, 460, 502], "moler": 163, "cleve": 163, "charl": 163, "van": 163, "loan": 163, "nineteen": 163, "dubiou": 163, "siam": 163, "1978": 163, "836": 163, "datadict": 163, "productnuclid": [163, 476], "fallback": [163, 219, 381], "productparticl": 163, "outgo": [163, 175, 190, 219, 502], "particl": [163, 498, 502], "scale": [163, 167, 286, 292, 309, 316, 335, 360, 400, 412, 414, 490, 498, 505], "doubl": [163, 166, 289, 415, 504], "librarynucnam": 163, "daughter": [163, 500], "circuit": [163, 344, 345], "shorter": [163, 372, 415, 446, 452, 494], "nalph": [163, 259, 412, 471, 476], "deuteron": 163, "triton": 163, "nt": [163, 259, 502], "bmd": [163, 476], "bpd": [163, 476], "electron": 163, "ec": [163, 468], "xsid": [164, 201, 238, 239, 265], "isotx": [164, 165, 167, 169, 188, 195, 200, 201, 202, 240, 257, 259, 286, 306, 309, 329, 412, 463, 466, 472, 477, 478, 482, 483, 495, 502], "compx": [164, 165, 174, 182, 195, 201], "gamiso": [164, 165, 173, 186, 201, 202, 482, 483], "cycle0": 164, "pmatrx": [164, 165, 191, 200, 201, 202, 482, 483], "implicit_int": [164, 165, 166], "iorecord": [164, 165, 166], "binaryrecordread": [164, 165, 166], "binaryrecordwrit": [164, 165, 166], "asciirecordread": [164, 165, 166], "asciirecordwrit": [164, 165, 166], "datacontain": [164, 165, 166, 168, 172, 174, 175, 177, 178, 179], "streamwithdatacontain": [164, 165, 166, 168, 172, 174, 175, 177, 178, 179], "getblockbandwidth": [164, 165, 166], "compxsregion": [164, 165, 167], "dif3d": [164, 165, 167, 169, 170, 171, 173, 174, 175, 178, 183, 185, 187, 189, 192, 200, 204, 220, 283, 286, 316, 328, 333, 341, 445, 479, 493, 498, 502], "dif3ddata": [164, 165, 168], "dif3dstream": [164, 165, 168], "dlayx": [164, 165, 184], "delayedneutrondata": [164, 165, 169], "readbinari": [164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 201, 466, 471, 472], "readascii": [164, 165, 166, 169, 176, 396, 397], "writebinari": [164, 165, 166, 167, 169, 170, 172, 173, 176, 177, 178, 179], "writeascii": [164, 165, 166, 169, 175, 176, 179, 396, 397], "dlayxsio": [164, 165, 169], "fixsrc": [164, 165, 185, 502], "comparenuclidex": [164, 165, 171, 173, 176], "adddummynuclidestolibrari": [164, 165, 171, 173, 176], "geodst": [164, 165, 175, 177, 187, 329, 483], "geodstdata": [164, 165, 172], "geodststream": [164, 165, 172], "compareset": [164, 165, 173], "isotxsio": [164, 165, 173], "labelsdata": [164, 165, 174], "labelsstream": [164, 165, 174], "nhflux": [164, 165, 178, 190, 483], "nhfluxstream": [164, 165, 175], "nafluxstream": [164, 165, 175], "nhfluxstreamvari": [164, 165, 175], "nafluxstreamvari": [164, 165, 175], "getnhfluxread": [164, 165, 175], "pmatrxio": [164, 165, 176], "pwdint": [164, 165, 192], "pwdintdata": [164, 165, 177], "pwdintstream": [164, 165, 177], "rtflux": [164, 165, 170, 193], "rtfluxdata": [164, 165, 178], "rtfluxstream": [164, 165, 178], "atfluxstream": [164, 165, 178], "getfdfluxread": [164, 165, 178], "rzflux": [164, 165, 178, 194], "rzfluxdata": [164, 165, 179], "rzfluxstream": [164, 165, 179], "test_xscollect": [164, 196], "testxscollect": [164, 196, 197], "mockblueprint": [164, 196, 197], "mockblock": [164, 196, 197], "test_xslibrari": [164, 196], "tempfilemixin": [164, 196, 198], "testxslibrari": [164, 196, 198], "testgetisotxsfilesinworkingdirectori": [164, 196, 198], "abstracttestxslibrarymerg": [164, 196, 198], "pmatrx_merge_test": [164, 196, 198], "isotxs_merge_test": [164, 165, 180, 188, 196, 198], "gamiso_merge_test": [164, 196, 198], "combined_merge_test": [164, 196, 198], "test_xsnuclid": [164, 196], "nuclidetest": [164, 196, 199], "getdefaultx": [164, 200], "getabsorptionx": [164, 200], "gettotalscattermatrix": [164, 200], "collapsecrosssect": [164, 200], "createmacrosonblocklist": [164, 200], "createmacrosfrommicro": [164, 200], "gammaenergyupperbound": [164, 201], "neutrondoseconversionfactor": [164, 201], "gammadoseconversionfactor": [164, 201], "numgroup": [164, 167, 200, 201], "numgroupsgamma": [164, 201], "nuclidelabel": [164, 201], "resetscatterweight": [164, 201], "getscatterweight": [164, 201], "purgefissionproduct": [164, 201], "regionlabel": [164, 201], "updatebasenuclid": [164, 202], "getmicrox": [164, 199, 202], "getx": [164, 165, 167, 202], "buildnormalizedscattercolumn": [164, 202], "tran": [164, 202, 476], "late": 165, "1960": [165, 480], "recogn": [165, 281, 480], "establish": [165, 313, 401, 402, 451, 480], "committe": 165, "coordin": [165, 175, 199, 214, 219, 243, 250, 283, 286, 291, 309, 316, 317, 324, 325, 328, 329, 333, 335, 338, 339, 340, 352, 353, 397, 406, 408, 417, 439, 440, 460, 469, 489, 494], "1977": 165, "iv": [165, 169, 170, 172, 173, 177, 178, 179, 330], "partisn": [165, 502], "multigroup": [165, 167, 169, 170, 171, 173, 176, 178, 179, 200, 213, 241, 250, 254, 286, 306, 309, 328, 329, 412, 466, 498, 502], "grupx": 165, "brkox": 165, "bondarenko": 165, "russian": 165, "delai": [165, 167, 169, 184, 236, 239, 269, 498, 500, 502], "precursor": [165, 169, 236, 269, 500, 502], "isogx": 165, "ndxsrf": 165, "znatdn": 165, "subzon": 165, "sncon": 165, "ordin": [165, 414], "surfac": [165, 175, 190, 498], "scalar": [165, 329, 414, 492, 498, 504], "atflux": [165, 170, 178], "adjoint": [165, 175, 178, 193, 236, 250, 286, 306, 309, 328, 329, 412, 498, 500, 502], "rcurnt": 165, "acurnt": 165, "raflux": 165, "angular": [165, 308, 341], "aaflux": 165, "avearg": 165, "densitii": 165, "interv": [165, 177, 408, 426], "dougla": 165, "dell": 165, "procedur": [165, 328], "6941": 165, "lo": 165, "alamo": 165, "septemb": 165, "5369298": 165, "ascii": [165, 166, 169, 172, 175, 176, 177, 178, 179, 181, 182, 191, 193, 194, 219, 291, 358, 397, 417, 482, 493, 502], "confus": [165, 166, 292, 306, 309, 331, 451, 483, 502], "rw": [165, 166], "talk": [165, 166, 502], "hide": [165, 213, 299, 306, 355, 443, 451, 482], "record": [165, 166, 167, 168, 172, 174, 177, 364, 366, 415, 433], "byte": [165, 166, 309, 404, 407, 433], "fortran": [165, 166, 408, 480], "unformat": 165, "sequenti": [165, 166, 438, 445], "gcc": [165, 487], "gnu": [165, 379], "onlinedoc": 165, "gfortran": 165, "pyne": 165, "terrapow": [165, 239, 409, 442, 447, 452, 479, 480, 481, 483, 485, 493, 508], "author": [165, 415], "era": 165, "inspir": 165, "prof": 165, "jame": 165, "paul": 165, "hollowai": 165, "ccccutil": 165, "2001": 165, "test_cccc": [165, 180], "cccciostreamtest": [165, 180, 181], "ccccbinaryrecordtest": [165, 180, 181], "ccccasciirecordtest": [165, 180, 181], "test_compx": [165, 180], "testcompx": [165, 180, 182], "test_dif3d": [165, 180], "testdif3dsimplehexz": [165, 180, 183], "testdif3demptyrecord": [165, 180, 183], "test_dlayx": [165, 180], "dlayxstest": [165, 180, 184], "test_fixsrc": [165, 180], "testfixsrc": [165, 180, 185], "test_gamiso": [165, 180], "testgamiso": [165, 180, 186], "test_geodst": [165, 180], "testgeodst": [165, 180, 187, 192], "test_isotx": [165, 180], "testisotx": [165, 180, 188], "test_label": [165, 180, 351, 358], "testlabel": [165, 180, 189], "test_nhflux": [165, 180], "testnhflux": [165, 180, 190], "testnhfluxvari": [165, 180, 190], "test_pmatrx": [165, 180], "testpmatrxnuclid": [165, 180, 191], "testpmatrx": [165, 180, 191], "testproductionmatrix_fromwritten": [165, 180, 191], "testproductionmatrix_fromwrittenascii": [165, 180, 191], "test_pwdint": [165, 180], "test_rtflux": [165, 180], "testrtflux": [165, 180, 193], "test_rzflux": [165, 180], "testrzflux": [165, 180, 194], "binaryfilesequ": [165, 180, 194], "maxsiz": [165, 166], "rwint": [165, 166], "rwbool": [165, 166], "rwfloat": [165, 166], "rwdoubl": [165, 166], "rwstring": [165, 166], "rwlist": [165, 166], "rwmatrix": [165, 166], "rwdoublematrix": [165, 166], "rwintmatrix": [165, 166], "rwimplicitlytypedmap": [165, 166], "rwlong": [165, 166], "readwrit": [165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179], "createrecord": [165, 166], "initmetadata": [165, 167], "allocatex": [165, 167], "makescatteringmatric": [165, 167], "generateaveragedelayedneutronconst": [165, 169], "fluxmoment": [165, 175], "partialcurrentshex": [165, 175], "partialcurrentshex_ext": [165, 175], "partialcurrentsz": [165, 175], "groupflux": [165, 178, 179], "getenergygroupindex": [165, 178], "no_iter": [165, 179], "diverg": [165, 179, 220, 381], "ijklmn": 166, "implicit": [166, 442, 493], "hasrecordboundari": 166, "signific": [166, 226, 286, 306, 400, 480], "enforc": [166, 281, 332, 345, 353, 372, 379, 445, 485, 502], "tradeoff": [166, 502], "comprehend": 166, "885": [166, 483], "seemingli": 166, "odd": [166, 175, 329, 335, 451], "precis": [166, 328, 329, 345, 438, 482, 483, 493, 502], "containedtyp": [166, 365, 372], "strlength": 166, "fortran77": 166, "roughli": [166, 309, 467, 493], "front": [166, 331, 502], "newlin": [166, 204, 415], "streamwithdatastructur": 166, "filemod": [166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179], "io": [166, 309, 396, 438, 442, 480], "wb": [166, 170], "boilerpl": 166, "nintj": 166, "nblok": 166, "bandwidth": 166, "jl": 166, "ju": 166, "WITH": 166, "THE": [166, 167], "AND": [166, 174, 329], "min0": 166, "jup": 166, "matric": [166, 167, 182, 197, 200, 202, 259, 472], "spars": [166, 167, 182, 202, 378], "jh": 166, "jmax": 166, "band": 166, "derstin": [167, 341], "solv": [167, 169, 227, 250, 328, 339, 345, 406, 408, 476, 481, 489, 493, 502, 508], "diffus": [167, 250, 259, 316, 328, 479, 480, 482, 483], "april": 167, "1984": [167, 341], "illinoi": 167, "unt": 167, "ark": 167, "67531": 167, "metadc283553": 167, "octob": [167, 175], "north": [167, 329], "texa": 167, "credit": 167, "govern": [167, 480, 493], "depart": 167, "IF": [167, 174, 366], "FOR": [167, 174], "OF": [167, 480, 493], "decreas": [167, 317, 408, 494], "r0": 167, "macro": [167, 200, 259, 286, 494], "higherorderscatt": 167, "p1": [167, 408], "p5": 167, "compxs2": 167, "watt": [167, 177, 286, 500], "powerconvmult": 167, "integr": [167, 286, 303, 309, 328, 446, 480, 498, 500, 505], "absorpt": [167, 200, 328, 498, 500], "similari": 167, "lib1": [167, 169, 171, 173, 176, 201], "lib2": [167, 169, 171, 173, 176, 201], "verbos": [167, 173, 200, 366, 393, 396, 415, 452, 492, 502, 504], "disregard": [167, 286], "regionnumb": 167, "filewidechi": 167, "reg00": 167, "reg01": 167, "reg02": 167, "regnn": 167, "r10": 167, "01147095": 167, "01006284": 167, "0065597": 167, "00660079": 167, "005587": 167, "08920149": 167, "13035864": 167, "16192732": 167, "sigma_": [167, 200, 286], "rem": 167, "cdot": [167, 306], "reconstruct": [167, 190, 195, 202, 250, 498, 502, 504], "s_": 167, "rightarrow": 167, "segment": [167, 308, 479, 502], "xscatu_j": 167, "lbrace": [167, 505], "vert": 167, "nup": 167, "rbrace": [167, 505], "xscatj_j": 167, "xscatd_j": 167, "j_ndn": 167, "ndn": 167, "upscatt": 167, "downscatt": [167, 241], "scipi": [167, 182, 283, 408], "csc_matrix": [167, 182], "five": [168, 406], "emiss": [169, 184], "spectra": 169, "numenergygroup": 169, "numprecursorgroup": 169, "kinet": [169, 184, 212, 345, 498], "precursordecayconst": 169, "character": [169, 254, 340, 341, 479], "delayemissionspectrum": [169, 184], "famili": [169, 286, 399, 502], "pxg": 169, "spectrum": [169, 184, 238, 239, 250, 286, 412, 476, 498], "aka": 169, "chi": [169, 200, 235, 259, 498], "delayneutronsperfiss": 169, "nubar": 169, "ordereddict": [169, 288, 289, 290, 291, 292, 293, 433], "contribut": [169, 200, 328, 444, 481, 508], "nuclidefamili": 169, "numfamili": 169, "numnuclid": 169, "neutronenergyupperbound": 169, "nuclidecontributionfract": 169, "perturbationtheori": 169, "perturbationtheoryinterfac": 169, "calculatebeta": 169, "triangular": 170, "photon": [170, 200, 250, 483], "fixsrcarrai": 170, "intent": [170, 283, 480], "preexist": 170, "v3": [171, 448], "microscop": [171, 173, 197, 200, 202, 238, 250, 259, 286, 329, 472, 490], "gamsor": [171, 176], "smith": [171, 175, 415], "lee": [171, 176], "hill": 171, "1343095": 171, "nuc1": [171, 173, 176], "nuc2": [171, 173, 176], "dummynuclid": [171, 173, 176], "coars": [172, 183, 220], "geo": 172, "xmesh": 172, "zmesh": 172, "geodst2": 172, "rememb": [172, 219, 309, 346, 438, 448, 451, 502], "analog": [172, 179, 204, 322, 445, 504], "istox": [172, 179, 202], "stand": 173, "dragon": 173, "mylib": [173, 200], "fis5": 173, "micro": [173, 200, 259, 471, 472], "scat": 173, "1st": 173, "elast": [173, 197, 200], "captureenergi": 173, "isotxsmetadata": 173, "ecapt": 173, "cacluat": 173, "closer": 173, "shown": [173, 282, 412, 448, 480, 493, 502], "getnuclidefunc": [173, 176], "semi": 173, "t2": 173, "transx": 173, "hyper": 173, "isotsx": 173, "variant": [174, 175, 189, 205, 483], "transvers": 174, "nhts1": 174, "gt": [174, 487, 491, 492, 494], "OR": [174, 480, 493], "distanc": [174, 219, 286, 305, 315, 335, 338, 339, 340, 406, 489, 493, 502], "ngts2": 174, "nset": [174, 211, 437], "nalia": 174, "rod": [174, 283, 286, 287, 315, 328, 480, 483, 493, 497, 500], "nbank": 174, "bank": 174, "channel": [174, 498, 502], "llchn": 174, "llrod": 174, "mmesh": 174, "nvari": 174, "maxbrn": 174, "maxord": 174, "labeldata": 174, "labelstream": 174, "moment": [175, 178, 190, 320, 486], "nhfluxdata": 175, "nfluxstream": 175, "numdatasetstoread": 175, "reader": [175, 178, 181, 182, 309, 366, 399, 438, 450, 451, 483], "v11": 175, "incomingpointerstoallassembli": 175, "geodstcoordmap": 175, "externalcurrentpoint": 175, "boundari": [175, 183, 250, 283, 291, 316, 328, 329, 332, 333, 334, 337, 340, 361, 438, 493, 500, 502], "outgoingpcsymsecpoint": 175, "outpgo": 175, "sector": 175, "ingoingpcsymsecpoint": 175, "ingo": 175, "fluxmomentsal": 175, "jth": 175, "planar": [175, 500, 502], "pariti": 175, "partialcurrentshexal": 175, "partialcurrentshex_extal": 175, "adjac": [175, 190, 493], "partialcurrentszal": 175, "upward": [175, 483], "downward": 175, "rebu": [175, 480, 493], "2014": [175, 439], "palmiotti": 175, "lewi": 175, "carrico": 175, "variat": [175, 257, 281, 286, 451], "anisotrop": 175, "multidimension": 175, "il": 175, "shemon": 175, "1127298": 175, "anlpub": 175, "04": [175, 245, 299, 445, 458, 461, 467, 474, 475, 477, 480, 487, 491], "78313": 175, "naflux": 175, "setter": [175, 328, 342, 345, 359, 372], "radial": [175, 250, 282, 283, 287, 308, 316, 317, 328, 329, 331, 333, 341, 487, 489, 492, 494, 497, 498, 500, 501], "conflict": [175, 390, 480, 481, 489, 502, 508], "_readwrit": 175, "sassi": [175, 329, 498], "adjointflag": [175, 178], "variantflag": 175, "mc23": 176, "changho": 176, "jung": 176, "yeon": 176, "sang": 176, "yang": 176, "sik": 176, "2018": [176, 409], "1483949": 176, "xslib": [176, 451], "pwr": 177, "pwdint2": 177, "rtflux2": 178, "adjointflux": 178, "ng": [178, 252, 259, 309, 498], "fd": [178, 286], "rzflux2": 179, "itp": 179, "test_initwithfilemod": [180, 181], "test_writeandreadsimpleintegerrecord": [180, 181], "test_writeandreadsimplefloatrecord": [180, 181], "test_writeandreadsimplestringrecord": [180, 181], "test_notreadinganentirerecordraisesexcept": [180, 181], "test_readingbeyondrecordraisesexcept": [180, 181], "binarywritepath": [180, 182], "asciiwritepath": [180, 182], "test_librarydata": [180, 182], "test_regionprimaryx": [180, 182], "test_totalscattermatrix": [180, 182], "test_binaryrw": [180, 182], "test_asciirw": [180, 182], "test_mergecompxslibrari": [180, 182], "test_getcompxsfilenam": [180, 182], "test__rwfileid": [180, 183], "test__rwfile1drecord": [180, 183], "test__rw2drecord": [180, 183], "test__rw3drecord": [180, 183], "test__rw4drecord": [180, 183], "test__rw5drecord": [180, 183], "test_writebinari": [180, 183, 186, 188], "test_empty4and5record": [180, 183], "test_decayconst": [180, 184], "test_chi_delai": [180, 184], "test_chi_delaysumsto1": [180, 184], "test_nudelai": [180, 184], "test_endfvii1decayconst": [180, 184], "test_endfvii1neutronsperfiss": [180, 184], "test_compar": [180, 184, 186], "test_writebinary_mcc3": [180, 184], "test_nuclid": [180, 184, 294, 297], "test_avg": [180, 184], "test_writereadbinaryloop": [180, 185], "test_adddummynuclidestolibrari": [180, 186], "test_readgeodst": [180, 187, 192], "test_writegeodst": [180, 187, 192], "test_isotxsgeneraldata": [180, 188], "test_isotxsdetaileddata": [180, 188], "test_getscatteringweight": [180, 188], "test_getnuclid": [180, 188, 351, 355], "test_n2nisreactionbas": [180, 188], "test_getscatterweight": [180, 188], "test_getisotxsfilenam": [180, 188], "test_getgamisofilenam": [180, 188], "test_mergemccv2filesremovesthefilewidechi": [180, 188], "test_readlabelsbinari": [180, 189], "test_writelabelsascii": [180, 189], "test_fc": [180, 190], "test_fluxmo": [180, 190], "test_xypartialcurr": [180, 190], "test_zpartialcurr": [180, 190], "test_writ": [180, 190, 379, 393], "test_pmatrxnuclidedataaa": [180, 191], "test_pmatrxnuclidedataab": [180, 191], "test_nuclidedataisdiffer": [180, 191], "test_getpmatrxfilenam": [180, 191], "test_pmatrxgammaenergi": [180, 191], "test_pmatrxneutronenergi": [180, 191], "test_pmatrxnuclidenam": [180, 191], "test_pmatrxdoesnthavedoseconversionfactor": [180, 191], "test_writtenisidenticaltoorigin": [180, 191], "test_readrtflux": [180, 193], "test_writertflux": [180, 193], "test_rwascii": [180, 193, 194], "test_adjoint": [180, 193], "test_readrzflux": [180, 194], "test_writerzflux": [180, 194], "vector": [182, 200, 202, 245, 259, 309, 329, 340, 400, 482, 497, 498, 500, 504], "indptr": 182, "correspons": 182, "verifi": [182, 183, 184, 190, 257, 272, 281, 309, 322, 326, 353, 354, 361, 374, 379, 467, 474, 475, 487, 492, 502], "optimum": 183, "overrelax": 183, "rebal": 183, "delayx": 184, "nu": [184, 498], "nndc": 184, "bnl": 184, "robert": 184, "keepin": 184, "comment": [184, 444, 446, 452, 493, 494, 502], "subtract": [190, 286, 303, 339, 353, 354, 499, 502], "xy": [190, 250, 412, 440, 497, 498, 502], "fn1": 194, "fn2": 194, "bytewis": 194, "assist": [195, 379, 480, 481, 482, 492, 508], "rewrit": 195, "scaffold": 195, "overal": [195, 450, 451, 480, 487], "_metadata": 195, "nucld": 195, "test_generatetotalscatteringmatrix": [196, 197], "test_generatetotalscatteringmatrixwithmissingdata": [196, 197], "test_plotnucx": [196, 197], "test_createmacrosfrommicro": [196, 197], "test_collapsecrosssect": [196, 197], "getvolum": [196, 197, 282, 283, 286, 303, 306, 309, 464, 487, 489], "getnuclidenumberdens": [196, 197, 200, 282, 303, 306, 309], "paramcollectiontyp": [196, 197, 282, 283, 286, 303, 304, 305, 306, 308, 309, 329, 330, 346, 348, 349, 351, 355], "setnumberdens": [196, 197, 282, 303, 306, 309, 480, 487], "testfilenam": [196, 198], "test_canpickleandunpickleisotx": [196, 198], "test_canpickleandunpicklegamiso": [196, 198], "test_canpickleandunpicklepmatrx": [196, 198], "test_comparework": [196, 198], "test_comparedifferentcomponentsofanxslibrari": [196, 198], "test_mergefailswithnonisotxsfil": [196, 198], "test_isotxslibraryattribut": [196, 198], "test_gamisolibraryattribut": [196, 198], "test_pmatrxlibraryattribut": [196, 198], "test_mergexslibrarieswithdifferentdatawork": [196, 198], "test_canwriteisotxsfromcombinedxslibrari": [196, 198], "test_canwritegamisofromcombinedxslibrari": [196, 198], "test_canwritepmatrxfromcombinedxslibrari": [196, 198], "test_getisotxsfileswithoutlibrarysuffix": [196, 198], "test_getisotxsfileswithlibrarysuffix": [196, 198], "assert_contains_onli": [196, 198], "geterrortyp": [196, 198], "getreadfunc": [196, 198], "getwritefunc": [196, 198], "getlibaapath": [196, 198], "getlibabpath": [196, 198], "getlibaa_abpath": [196, 198], "getliblumpedpath": [196, 198], "test_cannotmergexslibwithsamenuclidenam": [196, 198], "test_cannotmergexslibxwithdifferentgroupstructur": [196, 198], "test_mergeemptyxslibwithotheressentiallyclonestheoth": [196, 198], "test_mergetwoxslibfil": [196, 198], "test_canremoveisotop": [196, 198], "test_cannotmergexslibswithdifferentgammagroupstructur": [196, 198], "test_mergeallxslibfil": [196, 198], "test_nuclide_createfromlabelfailsonbadnam": [196, 199], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict": [196, 199], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclid": [196, 199], "test_nuclide_newlabelsdontcausewarn": [196, 199], "test_nuclide_oldlabelscausewarn": [196, 199], "test_nuclide_nuclidebasemethodsshouldnotfail": [196, 199], "test_nuclide_isoaadetail": [196, 199], "test_nuclide_2dxsarrangementiscorrect": [196, 199], "test_nuclide_scatterxsarrangementiscorrect": [196, 199], "test_getmicrox": [196, 199], "test_getx": [196, 199], "inelast": [197, 200, 472], "collaps": [197, 200, 243], "barn": [197, 250, 309, 471, 502], "blockparametercollect": [197, 286, 342, 346], "shouldbether": 198, "shouldnotbether": 198, "nicer": 198, "microscopicxscollect": 200, "microlib": 200, "u235aa": [200, 201], "macrocollect": 200, "blockswithmacro": 200, "nuclidecollect": 200, "displai": [200, 309, 412, 438, 479], "crosssect": 200, "extrem": [200, 409, 451, 492], "efficaci": 200, "survei": 200, "bar": [200, 314, 404, 412, 414, 416, 423, 440, 450, 466], "sigma": [200, 286, 341, 498, 500], "sum_g": 200, "sigma_g": 200, "phi_g": [200, 286], "onegroupx": 200, "relativetoler": [200, 413], "overlap": [200, 235, 286, 309, 315, 328, 353, 476, 480], "attributestoignor": 200, "buildscattermatrix": [200, 259], "buildonlycool": [200, 259], "minimumnuclidedens": [200, 259, 483, 502], "creation": [200, 239, 248, 264, 309, 328, 342, 346, 359, 360, 421, 423, 450, 480, 483], "microlibrari": 200, "blocklist": [200, 238, 250, 254, 282, 287, 289, 329, 474], "libtyp": [200, 259], "gammax": [200, 259], "isotxslib": 200, "4b": 200, "hmg4c": 200, "chi_g": 200, "sum_": [200, 286, 309, 505], "chi_": 200, "n_n": 200, "nu_": 200, "sum_n": 200, "microsuffix": 200, "deposit": [200, 286, 353, 498], "obtain": [200, 238, 286, 309, 316, 329, 346, 396, 406, 480, 493, 498, 505, 506], "bn": [200, 245, 306, 309, 400, 487, 497, 498, 499], "getmicrosuffix": [200, 282, 286, 303, 306, 309], "energydepositionconst": 200, "e_": 200, "generation_fiss": 200, "kappa_f": 200, "sigma_f": 200, "fissionenergyfactor": 200, "joul": [200, 286], "kappa_c": 200, "sigma_c": 200, "getnumberdens": [200, 242, 245, 282, 303, 306, 309, 458, 487], "captureenergyfactor": 200, "constantnam": 200, "multconst": 200, "multlib": 200, "macrogroupconst": 200, "attributenam": 201, "veloc": [201, 254, 489, 498], "nuclabel": 201, "xslibrarysuffix": [201, 254, 255], "xslibfilenam": 201, "doppler": [201, 226, 238, 254, 329, 485, 498, 500, 505], "isoaa": 201, "isoba": 201, "isoca": 201, "n1": 201, "isoab": 201, "n2": [201, 396], "isoda": 201, "mergegammalib": 201, "alternatedirectori": 201, "alphabet": [201, 238, 329, 357, 363, 485], "referencedummynuclid": 201, "_xslibrari": 201, "libisotx": 201, "dose": [201, 212, 250, 479, 480, 498, 500, 502], "scattermatrixkei": [201, 202], "elasticscatt": 201, "_buildscatterweight": 201, "purg": 201, "pu39aa": 202, "xscollectionkei": 202, "containerkei": 202, "homogregion": 202, "scatterweight": 202, "fromg": 202, "gx1": 202, "cannib": 202, "newli": [202, 236, 281, 366, 395, 398, 502], "scattermatrix": 202, "scattertypelabel": 202, "scattermatrix1": 202, "scattermatrix2": 202, "graphic": [202, 398, 479, 481, 489, 502, 508], "chosen": [203, 309, 445, 489, 502], "introduc": [203, 236, 342, 391, 447, 483, 494, 500], "test_operatorsnapshot": [203, 209], "testoperatorsnapshot": [203, 209, 210], "testoperatorsnapshotsset": [203, 209, 210], "test_oper": [203, 209], "interfacea": [203, 209, 211], "interfaceb": [203, 209, 211], "interfacec": [203, 209, 211], "operatortest": [203, 209, 211], "testcreateoper": [203, 209, 211], "cyclessettingstest": [203, 209, 211, 396, 416, 437], "testinterfaceandeventhead": [203, 209, 211], "maxburnstep": [203, 204], "steplength": [203, 204, 396, 507], "cyclelength": [203, 204, 342, 396, 437, 450, 492, 493, 494, 502, 507], "powerfract": [203, 204, 396, 437, 502], "availabilityfactor": [203, 204, 396, 437, 493, 494, 502, 507], "cyclenam": [203, 204, 396], "ateol": [203, 204, 208], "initializeinterfac": [203, 204], "printinterfacesummari": [203, 204], "interactallinit": [203, 204], "interactallbol": [203, 204, 445], "interactallboc": [203, 204], "interactalleverynod": [203, 204], "interactalleoc": [203, 204], "interactalleol": [203, 204], "interactallerror": [203, 204], "removeallinterfac": [203, 204], "removeinterfac": [203, 204], "interfaceisact": [203, 204], "getactiveinterfac": [203, 204], "reattach": [203, 204], "snapshotrequest": [203, 204], "setstatetodefault": [203, 204, 208], "couplingisact": [203, 204, 211], "workerquit": [203, 205], "collapseallstderr": [203, 205], "plant": [204, 479, 480, 492, 502, 507], "orchestr": 204, "piec": [204, 309, 445, 487, 490, 502], "flow": [204, 212, 215, 236, 254, 276, 286, 345, 445, 480, 489, 497, 498, 500, 502], "narr": [204, 453, 478, 495], "topic": [204, 438, 450], "tier": 204, "intra": [204, 396], "durat": [204, 498, 502], "outag": [204, 215, 216, 219, 223, 414, 479, 502, 507], "oserror": 204, "unabl": 204, "ncycl": [204, 211, 396, 437, 493, 494, 502], "mainoper": [204, 445], "interactionnam": 204, "statepointindex": 204, "grep": [204, 492], "leverag": [204, 480], "banner": 204, "excludedinterfacenam": 204, "tn": [204, 238], "couplediter": [204, 500], "lie": [204, 335], "reverseateol": 204, "question": [204, 236, 309, 335, 340, 373, 374, 411, 412, 414, 438, 444, 480, 491, 502], "ephemer": 204, "interfacenam": 204, "wasn": 204, "___": [204, 374, 481, 487, 492, 508], "simpler": [204, 443], "touch": [204, 219, 452, 485], "interactst": 204, "dictat": [204, 214, 329, 447], "activeinterfac": 204, "opportun": [204, 329, 450], "weakref": 204, "network": [204, 214, 309, 479, 502], "updatemassfract": 204, "rerout": 204, "didn": 204, "evolv": [204, 480], "smart": [205, 322, 407, 438], "optim": [205, 220, 254, 286, 308, 320, 329, 480, 492, 502], "_mainoper": 205, "rank": [205, 448, 502], "instruct": [205, 448, 452, 481, 508], "devis": 205, "stderr": [205, 364, 504], "arrang": [205, 293, 333, 445, 479, 480, 502], "deprecationwarn": 207, "disappear": 207, "2025": 207, "rx": [208, 252, 372, 476], "behav": [208, 315, 329, 338, 344, 346, 408, 502], "chrolog": 208, "test_ateol": [209, 210], "test_setstatetodefault": [209, 210, 211], "test_mainoper": [209, 210], "test_createinterfac": [209, 210], "test_createinterfacesdis": [209, 210], "test_getoperatorclassfromset": [209, 210], "test_operatordata": [209, 211], "test_orderedinterfac": [209, 211], "test_addinterfacesubclasscollis": [209, 211], "test_interfaceisact": [209, 211], "test_getactiveinterfac": [209, 211], "test_loadstateerror": [209, 211], "test_snapshotrequest": [209, 211], "test_createoper": [209, 211], "test_getsteplength": [209, 211, 416, 437], "test_couplingisact": [209, 211], "test_performtightcoupling_inact": [209, 211], "test_performtightcoupling_skip": [209, 211], "test_performtightcoupling_notconverg": [209, 211], "test_performtightcoupling_writedb": [209, 211], "test_performtightcoupling_nowritedb": [209, 211], "dbwriteforcoupl": [209, 211], "test_computetightcouplingconverg": [209, 211], "detailedcyclesset": [209, 211, 416, 437], "powerfractionssolut": [209, 211], "cyclenamessolut": [209, 211], "availabilityfactorssolut": [209, 211], "steplengthssolut": [209, 211], "cyclelengthssolut": [209, 211], "burnstepssolut": [209, 211], "maxburnstepssolut": [209, 211], "test_getpowerfract": [209, 211, 416, 437], "test_getcyclenam": [209, 211, 416, 437], "test_getavailabilityfactor": [209, 211, 416, 437], "test_getcyclelength": [209, 211, 416, 437], "test_getburnstep": [209, 211, 416, 437], "test_getmaxburnstep": [209, 211, 416, 437], "test_expandcycleandtimenodeargs_empti": [209, 211], "test_expandcycleandtimenodeargs_cycl": [209, 211], "test_expandcycleandtimenodeargs_everynod": [209, 211], "test_expandcycleandtimenodeargs_coupl": [209, 211], "interactal": 211, "loadtestreactor": [211, 282, 351, 360, 458, 459, 460, 467, 475], "fakedirlist": 211, "fakecopi": 211, "conf_tight_coupl": 211, "_performtightcoupl": 211, "conf_cycles_skip_tight_coupling_interact": 211, "address": [211, 226, 287, 342, 446], "accour": 211, "WILL": [211, 320], "writedb": 211, "greater": [211, 303, 406], "prescrib": [211, 313, 440, 494, 505], "previterkeff": 211, "curriterkeff": 211, "nmetadata": [211, 437], "1000000000": [211, 437, 493, 494], "r4": [211, 437], "cyclenodeinfo": 211, "vast": 212, "fairli": [212, 214, 494, 502], "ve": [212, 349, 480, 487, 489, 502], "reprocess": [212, 479], "accid": [212, 226, 480], "drop": [212, 309, 372, 396, 407, 415, 450], "econom": [212, 445, 480, 507], "cost": [212, 451, 480, 507], "estim": [212, 220, 498, 499], "stretch": 212, "supersourceterm": 212, "magwoodsbrain": 212, "propos": [212, 374], "ticket": [212, 444, 451], "began": 212, "matur": [212, 490], "assemblyrotationalgorithm": [212, 215, 223, 502], "bureducingassemblyrot": [212, 215, 216], "simpleassemblyrot": [212, 215, 216, 502], "fuelhandlerfactori": [212, 215, 487], "fuelhandlerinterfac": [212, 215, 219, 224, 254, 281], "fuelhandl": [212, 215, 216, 217, 218, 223, 281, 329, 381, 414, 445, 467, 475, 483, 487, 493, 502], "hexassemblyfuelmgmtutil": [212, 215], "getoptimalassemblyorient": [212, 215, 220], "buildringschedul": [212, 215, 220], "buildconvergentringschedul": [212, 215, 220], "getfuelcycleset": [212, 215, 221], "getfuelcyclesettingvalid": [212, 215, 221], "fuelperformanceopt": [212, 226, 227], "fuelperformanceexecut": [212, 226, 227], "getfuelperformanceparameterdefinit": [212, 226, 228], "fuelperformanceplugin": [212, 226, 229, 233], "definevalid": [212, 226, 230, 273, 277, 489], "applyfueldisplac": [212, 226, 235], "gasconductivitycorrect": [212, 226, 235], "everynod": [212, 236, 254, 264, 445, 502], "firstcouplediter": [212, 236, 257, 264, 502], "fissionproductmodel": [212, 236, 286, 306, 309, 487], "latticephys": [212, 236, 239], "const": [212, 236, 273], "crosssectiongroupmanag": [212, 224, 236, 239, 243, 264, 487], "getxstypenumberfromlabel": [212, 236, 238], "getxstypelabelfromnumb": [212, 236, 238], "blockcollect": [212, 236, 238, 483], "medianblockcollect": [212, 236, 238], "averageblockcollect": [212, 236, 238], "getblocknuclidetemperatureavgterm": [212, 236, 238], "cylindricalcomponentsaverageblockcollect": [212, 236, 238, 483], "slabcomponentsaverageblockcollect": [212, 236, 238], "fluxweightedaverageblockcollect": [212, 236, 238], "blockcollectionfactori": [212, 236, 238], "crosssectionset": [212, 236], "xsgeometrytyp": [212, 236, 239], "xsset": [212, 236, 238, 239, 502], "xsmodelingopt": [212, 236, 239, 265], "serializexsset": [212, 236, 239], "xssettingdef": [212, 236, 239], "xssettingsvalid": [212, 236, 239], "diffisotx": [212, 236], "compareisotxslibrari": [212, 236, 240], "energygroup": [212, 236, 471], "getfastfluxgroupcutoff": [212, 236, 241], "getgroupstructur": [212, 236, 241, 471], "getgroupstructuretyp": [212, 236, 241], "group_structur": [212, 236, 241], "macroxsgenerationinterfac": [212, 236, 268], "macroxsgener": [212, 236, 259], "getneutronicsparameterdefinit": [212, 236, 260], "insertneutronicsreport": [212, 236, 261], "insertneutronicsbolcont": [212, 236, 261], "neutronicsplot": [212, 236, 261, 450], "insertinitialcorefuelassem": [212, 236, 261], "generatelineplot": [212, 236, 261], "pd_plot": [212, 236, 261], "getneutronicssettingvalid": [212, 236, 262], "test_execut": [212, 226, 231, 271], "mockparam": [212, 271, 272], "mockcor": [212, 249, 251, 252, 271, 272], "testexecutionopt": [212, 271, 272], "testexecut": [212, 271, 272], "getparameterdefinit": [212, 273, 275], "thermalhydraulicsplugin": [212, 273, 276, 279, 485], "fromuserset": [212, 214, 226, 227, 249, 250], "fromreactor": [212, 214, 226, 227, 249, 250, 282, 350, 396, 397], "resolvederivedopt": [212, 214], "setrundirfromcasetitl": [212, 214], "dpa": [213, 250, 252, 283, 414, 450, 483, 497, 498, 500, 502], "executor": 214, "pathwai": [214, 476], "inputfil": 214, "stdin": 214, "outputfil": [214, 409], "extrainputfil": 214, "sourcenam": 214, "destnam": 214, "brought": [214, 219, 281, 286], "rundir": [214, 272], "transit": [214, 332, 447, 480, 486, 489], "extraoutputfil": 214, "executablepath": [214, 409], "workingdir": 214, "savephysicsfil": [214, 250, 483, 502], "dedic": [214, 287], "copyoutput": [214, 483], "applyresultstoreactor": 214, "deliber": [214, 250, 281, 342, 438], "paralleliz": 214, "maxim": [214, 291, 415], "reusabl": [214, 291, 451], "transform": [214, 250, 316, 339, 340, 396, 407, 459, 476], "executeropt": [214, 252], "mine": 215, "dispos": 215, "ex": [215, 293, 330, 348, 389, 409, 422, 445, 482, 485, 502], "chemistri": 215, "handler": [215, 218, 219, 224, 281, 487, 493, 502], "hookspec": [215, 281, 447], "inspect": [215, 229, 236, 276, 281, 374, 485, 492], "test_assemblyrotationalgorithm": [215, 222], "testfuelhandlermgmttool": [215, 222, 223], "test_fuelhandl": [215, 222], "fuelhandlertesthelp": [215, 222, 223, 224], "mocklatticephysicsinterfac": [215, 222, 224], "mockxsgm": [215, 222, 224], "testfuelhandl": [215, 222, 224], "testfuelplugin": [215, 222, 224], "addsomedetailassembli": [215, 222, 224], "test_hexassemblyfuelmgmtutil": [215, 222], "testhexassemmgmttool": [215, 222, 225], "managefuel": [215, 218, 224], "makeshufflereport": [215, 218, 219], "chooseswap": [215, 219, 379, 381, 493, 502], "prepcor": [215, 219], "findassembli": [215, 219, 224, 487, 502], "isassemblyinazon": [215, 219], "swapassembli": [215, 219, 467, 487], "dischargeswap": [215, 219, 493], "swapcascad": [215, 219], "repeatshufflepattern": [215, 219], "readmov": [215, 218, 219], "trackchain": [215, 219], "processmovelist": [215, 219], "dorepeatshuffl": [215, 219, 329], "prepshufflemap": [215, 219], "makeshufflearrow": [215, 219], "rotat": [216, 219, 220, 223, 250, 282, 283, 286, 305, 338, 352, 353, 406, 408, 424, 476, 485, 497, 498, 500, 502], "fh": [216, 224, 487], "lowest": [216, 220, 241, 283, 329, 396, 467, 487, 502], "orient": [216, 220, 286, 313, 353, 397, 406, 424, 451, 468, 479, 487, 497, 498, 500], "stationari": [216, 224, 331, 502], "isotrop": 216, "txt": [218, 219, 224, 329, 502], "fuelhandlernam": [219, 493, 502], "decis": [219, 243, 339, 450], "supervisori": 219, "movelist": [219, 485], "shufflefactor": 219, "aux": 219, "targetr": [219, 329], "compareto": [219, 487, 502], "forcesid": 219, "mandatoryloc": 219, "zonelist": 219, "excludedloc": 219, "minparam": 219, "minval": [219, 317, 408], "maxparam": 219, "maxval": [219, 309, 317], "findmani": [219, 224], "coord": [219, 282, 283, 286, 360, 485, 487, 489], "exacttyp": [219, 329], "acceptfirstcandidat": 219, "blocklevelmax": [219, 487], "findfromsfp": 219, "maxnumassem": 219, "circularringflag": 219, "criterion": [219, 467], "had": [219, 342, 403, 404, 438, 483, 502], "bob": [219, 415, 448], "ye": [219, 445, 451, 487], "timetolimit": [219, 497, 498], "pick": [219, 329, 414, 443, 480, 487, 502], "assembi": [219, 293], "ignit": [219, 282, 286, 331, 500, 502], "earliest": 219, "maxbu": 219, "candid": [219, 238, 309, 373, 467], "maxburnup": 219, "toggl": [219, 342, 502], "gotten": 219, "valuabl": [219, 452, 500], "reconsid": [219, 227], "assemlist": 219, "feed": [219, 282, 286, 329, 331, 400, 480, 500, 502, 507], "discharg": [219, 220, 329, 349, 497, 502], "goingout": 219, "inter1": 219, "inter2": 219, "goingin": 219, "art": 219, "explicitrepeatshuffl": [219, 502], "casenam": 219, "oldloc": [219, 329], "newloc": [219, 329], "enrichlist": [219, 329], "assemtyp": [219, 281, 283, 316, 329], "bottom": [219, 250, 283, 286, 322, 329, 334, 335, 339, 340, 342, 345, 352, 397, 433, 487, 489, 493, 494, 497, 498, 500, 502], "startingat": 219, "alreadydon": 219, "mont": [219, 243, 480], "carlo": [219, 243, 480], "fromloc": 219, "toloc": 219, "assemnam": [219, 329, 341], "loadnam": 219, "charg": [219, 220, 483, 497], "movingassemnam": 219, "loadchain": 219, "loadqueu": [219, 283], "loopchain": 219, "loadchargetyp": 219, "movement": [219, 329], "maneuv": [219, 412], "arrow": [219, 412, 476, 502], "currentcoord": 219, "oldcoord": 219, "aprev": 220, "peak": [220, 250, 261, 286, 328, 412, 450, 480, 483, 493, 498, 500, 502], "rot": 220, "pi": [220, 283, 286, 305, 315, 440, 460, 467, 468, 470, 476, 493], "counterclockwis": [220, 286, 329, 338, 497, 498, 500], "rotateassembli": 220, "maxringincor": 220, "charger": 220, "jumpringfrom": 220, "jumpringto": 220, "coarsefactor": 220, "combo": [220, 292, 448], "jumpr": [220, 500, 502], "scheme": [220, 452, 502], "jump": [220, 451, 500, 502], "sublist": [220, 407], "subcas": 220, "baselist": [220, 254], "enter": [220, 303, 309, 493, 497, 502], "outermost": [220, 286], "hit": [220, 322, 353, 480], "rj": 220, "rd": 220, "ringschedul": 220, "ringwidth": 220, "getnumr": [220, 282, 329], "innermost": [220, 286, 487], "conwidth": 220, "test_bureducingassemblyrot": [222, 223], "test_simpleassemblyrot": [222, 223], "test_getparammax": [222, 224], "test_findhighbu": [222, 224], "test_outag": [222, 224], "test_outageedgecas": [222, 224], "test_isassemblyinazon": [222, 224], "test_width": [222, 224], "test_findmani": [222, 224], "test_findinsfp": [222, 224], "test_findbycoord": [222, 224], "test_findwithminmax": [222, 224], "runshuffl": [222, 224], "test_repeatshuffl": [222, 224], "test_readmov": [222, 224], "test_processmovelist": [222, 224], "test_getfactorlist": [222, 224], "test_linpowbypin": [222, 224], "test_linpowbypinneutron": [222, 224], "test_linpowbypingamma": [222, 224], "test_transferstationaryblock": [222, 224], "test_transferdifferentnumberstationaryblock": [222, 224], "test_transferunalignedlocationstationaryblock": [222, 224], "test_transferincompatibleheightstationaryblock": [222, 224], "test_dischargeswap": [222, 224], "test_dischargeswapincompatiblestationaryblock": [222, 224], "test_getassembliesinr": [222, 224], "test_settingsarediscov": [222, 224], "test_buildconvergentringschedul": [222, 225], "test_buildringschedul": [222, 225], "latticephysicsinterfac": [224, 236, 239, 243, 253, 257, 502], "mockchooseswap": 224, "repeatshuffl": 224, "_transferstationaryblock": 224, "unalign": [224, 328], "unequ": 224, "hist": 224, "phenomena": [226, 506], "lwr": [226, 463, 467, 478, 479, 482, 483, 493, 494, 495, 502], "triso": [226, 290], "degrad": 226, "fcci": [226, 500], "eros": 226, "fcmi": 226, "stress": [226, 252, 479], "gase": 226, "feedback": [226, 329, 480, 483, 498, 505], "absorb": [226, 328, 493, 498, 500], "influenc": [226, 340], "bond": [226, 235, 282, 306, 323, 331, 355, 487, 493, 498, 502], "squeez": 226, "impact": [226, 243, 283, 309], "testfuelperformanceopt": [226, 231, 232], "test_fuelperformanceplugin": [226, 231], "testfuelperformanceplugin": [226, 231, 233], "test_fuelperformanceutil": [226, 231], "testfuelperformanceutil": [226, 231, 234], "subpackag": [227, 304, 379, 441, 445, 476, 489], "prep": [227, 250], "hope": [227, 260, 332, 480, 490], "parameterdefinitioncollect": [228, 260, 275, 281, 282, 283, 286, 303, 304, 305, 306, 308, 309, 328, 329, 342, 344, 345, 346, 348, 355, 359, 390], "test_fuelperformanceopt": [231, 232], "test_applyfueldisplac": [231, 234], "test_gasconductivitycorrection_morph0": [231, 234], "test_gasconductivitycorrection_morph1": [231, 234], "test_gasconductivitycorrection_morph2": [231, 234], "test_gasconductivitycorrection_morph3": [231, 234], "test_gasconductivitycorrection_morph4": [231, 234], "displacementincm": 235, "radiu": [235, 286, 303, 308, 315, 329, 341, 353, 361, 468], "conserv": [235, 250, 283, 286, 306, 310, 313, 315, 316, 322, 326, 328, 353, 354, 460, 483, 485, 489, 500, 502], "buffer": [235, 290], "prime": [235, 306, 328], "tempinc": [235, 464], "poros": [235, 490], "morphologi": 235, "pore": [235, 498], "irregular": [235, 337, 502], "conservat": 235, "bauer": 235, "spheric": [235, 308, 487], "660": 235, "maxwel": 235, "eucken": 235, "source1": 235, "pile": 235, "holland": 235, "407": [235, 467, 477], "source2": 235, "ondracek": 235, "schulz": 235, "1973": 235, "258": 235, "encompass": [236, 305], "temporarili": [236, 309, 414, 504], "untangl": 236, "dbload": [236, 281, 329, 395, 489], "intenum": 236, "frequenc": [236, 254, 257, 264, 480, 502], "c0n0": 236, "n0": 236, "fissionproductmodelset": [236, 242], "getfissionproductmodelsettingvalid": [236, 242, 244], "lumpedfissionproductcollect": [236, 242, 245], "fissionproductdefinitionfil": [236, 242, 245], "lumpedfissionproductfactori": [236, 242, 245], "isga": [236, 242, 245], "globalfluxinterfaceusingexecut": [236, 249, 250, 252], "globalfluxopt": [236, 249, 250, 252, 328], "globalfluxexecut": [236, 249, 250, 252], "globalfluxresultmapp": [236, 249, 250], "computedpar": [236, 249, 250], "calcreactionr": [236, 249, 250, 328], "setblockneutronveloc": [236, 253, 254], "latticephysicswrit": [236, 253, 258], "test_crosssectionmanag": [236, 263], "testblockcollect": [236, 263, 264], "testblockcollectionmedian": [236, 263, 264], "testblockcollectionaverag": [236, 263, 264], "testcomponentaverag": [236, 263, 264], "testblockcollectioncomponentaverag": [236, 263, 264], "testblockcollectioncomponentaverage1dcylind": [236, 263, 264], "testblockcollectionfluxweightedaverag": [236, 263, 264], "testcrosssectiongroupmanag": [236, 263, 264], "testxsnumberconvert": [236, 263, 264], "makeblock": [236, 263, 264], "test_crosssectionset": [236, 263], "testcrosssectionset": [236, 263, 265], "testxsset": [236, 263, 265], "test_crosssectiont": [236, 263], "testcrosssectiont": [236, 263, 266], "test_energygroup": [236, 263], "testenergygroup": [236, 263, 267], "test_macroxsgenerationinterfac": [236, 263], "testmacroxsgenerationinterfac": [236, 263, 268], "test_neutronicsplugin": [236, 263], "testneutronicsplugin": [236, 263, 269], "neutronicsreactortest": [236, 263, 269], "createrepresentativeblock": [236, 238], "calcavgnuclidetemperatur": [236, 238], "getweight": [236, 238], "getcandidateblock": [236, 238], "clearrepresentativeblock": [236, 238], "xstypeispregener": [236, 238], "fluxsolutionispregener": [236, 238], "createrepresentativeblocksusingexistingblock": [236, 238], "getnextavailablexstyp": [236, 238], "makecrosssectiongroup": [236, 238], "disablebugroupupd": [236, 238], "enablebugroupupd": [236, 238], "getnuctemperatur": [236, 238], "updatenuclidetemperatur": [236, 238], "zero_dimension": [236, 239], "one_dimensional_slab": [236, 239], "one_dimensional_cylind": [236, 239], "two_dimensional_hex": [236, 239], "getstr": [236, 239], "setdefault": [236, 239, 265], "bugroup": [236, 238, 239, 286, 414, 450, 493, 494, 498, 502], "xsispregener": [236, 239], "fluxispregener": [236, 239], "buildmacro": [236, 259], "circular": [237, 286, 303, 305, 329, 482, 483, 502], "sent": [238, 281, 448, 502], "csm": 238, "_setbugroupbound": 238, "_addxsgroupsfromblock": 238, "representativeblocklist": 238, "representativeblock": [238, 254, 255, 483], "blockthatrepresentsba": 238, "xsgm": [238, 264], "xstypelabel": 238, "xtview": [238, 316, 479, 482], "xstypenumb": 238, "allnuclidesinproblem": [238, 243, 351, 355], "validblocktyp": [238, 239], "averagebycompon": [238, 239, 264], "best": [238, 250, 310, 329, 408, 444, 447, 448, 449, 450, 452, 480, 490, 498, 502], "n_i": [238, 259, 306, 309, 328], "v_i": 238, "t_i": 238, "reflector": [238, 282, 283, 316, 331, 445, 474, 487, 492, 494], "leakag": [238, 500], "median": [238, 498, 500, 502], "accur": [238, 243, 254, 283, 309, 414, 439, 459, 482], "allnucnam": 238, "denomin": 238, "trace": [238, 306, 355, 449, 494, 502], "cylindr": [238, 239, 315, 459, 483], "opinion": [238, 315], "geometr": [238, 286, 287, 306, 337, 479, 480, 482, 487, 493, 502, 503], "assumpt": [238, 254, 283, 286, 315, 320, 329, 483, 502, 506], "slab": [238, 286], "forese": 238, "xsgroup": [238, 467, 474, 475, 487, 504], "originalrepresentativeblock": 238, "remain": [238, 283, 286, 309, 316, 332, 340, 400, 442, 467, 480, 502], "unperturb": [238, 500], "blockcollectionbyxsgroup": 238, "modifiedreprblock": 238, "origxsidsfromnew": 238, "howmani": [238, 264], "excludedxstyp": 238, "unrepres": [238, 253, 255], "avgnuctemperatur": 238, "arug": 238, "carri": [239, 371, 395, 438, 480], "0d": 239, "blockrepresent": [239, 265], "past": [239, 316, 342, 363, 377, 438, 445, 447, 451, 480, 489, 502], "block_collect": 239, "xsfileloc": [239, 265], "fluxfileloc": 239, "driverid": 239, "criticalbuckl": 239, "nuclidereactiondriv": 239, "externaldriv": 239, "usehomogenizedblockcomposit": 239, "numinternalr": [239, 315], "numexternalr": [239, 315, 459], "mergeintoclad": [239, 315], "meshsubdivisionspercm": 239, "xsexecuteexclus": 239, "xsprioriti": 239, "xsmaxatomnumb": 239, "mindriverdens": 239, "subcrit": 239, "buckl": [239, 502], "spatial": [239, 283, 286, 291, 309, 315, 330, 333, 337, 340, 349, 352, 412, 445, 480, 482, 483, 487, 493, 497, 498, 500, 502], "gap": [239, 282, 286, 309, 323, 331, 353, 354, 459, 474, 487, 492, 493, 494, 498, 502], "subregion": 239, "prioriti": [239, 318, 319, 480], "dilut": [239, 502], "templat": 239, "char": [239, 408], "conf_xsid": 239, "mutual": [239, 291, 332, 363, 480], "tune": [239, 408], "xssettingsdict": 239, "coerc": [239, 371, 377], "egrpstruc": 241, "descend": 241, "propag": [241, 372], "neutronenergyboundsinev": 241, "test_fissionproductmodel": [242, 246], "testfissionproductmodellumpedfissionproduct": [242, 246, 247], "testfissionproductmodelexplicitmc2librari": [242, 246, 247], "testfissionproductmodelexplicitmc2libraryslow": [242, 246, 247], "test_lumpedfissionproduct": [242, 246], "getdummylfpfil": [242, 246, 248], "testfissionproductdefinitionfil": [242, 246, 248], "testlumpedfissionproduct": [242, 246, 248], "testlumpedfissionproductcollect": [242, 246, 248], "testlumpedfissionproductsfromreferencefil": [242, 246, 248], "testlumpedfissionproductsexplicit": [242, 246, 248], "testmo99lfp": [242, 246, 248], "setallcomponentfissionproduct": [242, 243], "setallblocklfp": [242, 243], "getgloballumpedfissionproduct": [242, 243], "setgloballumpedfissionproduct": [242, 243], "getallfissionproductnam": [242, 243, 245], "removefissiongasesfromblock": [242, 243], "getgaseousyieldfract": [242, 245], "gettotalyield": [242, 245], "getmassfracdenom": [242, 245], "getlumpedfissionproductnam": [242, 245], "getallfissionproductnuclidebas": [242, 245], "createlfpsfromfil": [242, 245], "createsinglelfpfromfil": [242, 245], "inventori": [243, 400], "substanti": [243, 286], "lfp35": [243, 245, 299, 487], "lfp39": [243, 245, 299, 487], "lfp40": [243, 299, 487], "lfp41": [243, 299, 487], "fpmodel": [243, 502], "lfp": [243, 245, 286, 292, 306, 309], "casmo": 243, "referencefissionproduct": [243, 248], "dat": [243, 248, 502], "nuclideflag": [243, 282, 287, 292, 474, 502], "quick": [243, 250, 354, 444, 453, 478, 481, 489, 495, 502, 508], "aim": [243, 397, 480], "fpmodellibrari": [243, 502], "autoupdatenuclideflag": [243, 282, 287, 292], "vision": 243, "origen": [243, 502], "caveat": [243, 403, 451, 502], "box": [243, 281, 468], "autofil": 243, "getallnuclidebasesbylibrari": [243, 282, 287, 292], "setlumpedfissionproduct": [243, 282, 303, 306, 309], "isotopicdeplet": [243, 290, 485], "depletioninterfac": 243, "buildfissionproduct": 243, "getlumpedfissionproductcollect": [243, 245, 282, 286, 303, 306, 309], "fp": [245, 247, 248], "yld": 245, "fpd": 245, "eu151": 245, "9773e": 245, "objectwithparentdens": 245, "densfunc": 245, "fpdensiti": 245, "oldmassfrac": 245, "ge73": 245, "9000e": 245, "ge74": 245, "4000e": 245, "ge76": 245, "6000e": 245, "as75": 245, "lfpcompositionfilepath": [245, 502], "test_loadgloballfpsfromfil": [246, 247], "test_getallfissionproductnam": [246, 247, 248], "test_fpappl": [246, 247], "test_nuclideflag": [246, 247, 294, 297], "test_nuclidesinmodelfuel": [246, 247], "test_nuclidesinmodelalldepletableblock": [246, 247], "test_createlfp": [246, 248], "test_createreferencelfp": [246, 248], "test_getyield": [246, 248], "test_gaseousyieldfract": [246, 248], "test_isga": [246, 248], "test_getallfissionproductnuclidebas": [246, 248], "test_getnumberdens": [246, 248, 351, 353, 354, 355], "test_getmassfrac": [246, 248], "test_fissionproductyield": [246, 248], "test_explicitfissionproduct": [246, 248], "faster": [247, 286, 287, 309, 329, 342, 360], "slower": [247, 492, 502], "lumpedfissionproduc": 248, "explicitfissionproduct": [248, 483, 502], "mo99": [248, 502], "test_globalfluxinterfac": [249, 251], "mockcoreparam": [249, 251, 252], "mockglobalfluxinterfac": [249, 251, 252], "mockglobalfluxwithexecut": [249, 251, 252], "mockglobalfluxwithexecutersnonuniform": [249, 251, 252], "mockglobalfluxexecut": [249, 251, 252], "testglobalfluxopt": [249, 251, 252], "testglobalfluxinterfac": [249, 251, 252], "testglobalfluxinterfacewithexecut": [249, 251, 252], "testglobalfluxinterfacewithexecutersnonuniform": [249, 251, 252], "testglobalfluxresultmapp": [249, 251, 252], "testglobalfluxutil": [249, 251, 252], "applydummyflux": [249, 251, 252], "checkenergybal": [249, 250], "getiofilenam": [249, 250], "calculatekeff": [249, 250], "getoptionscl": [249, 250], "getexecutercl": [249, 250, 251, 252], "getexecuteropt": [249, 250, 251, 252], "getexecut": [249, 250], "getlabel": [249, 250, 333, 337, 338], "edgeassembliesareneed": [249, 250], "getkeff": [249, 250], "clearflux": [249, 250], "getdpax": [249, 250], "getburnuppeakingfactor": [249, 250], "updatedpar": [249, 250], "updatemaxdpaparam": [249, 250], "versu": [250, 485], "tightli": [250, 500], "coupledit": 250, "additionallabel": 250, "stdname": 250, "eigenvalu": [250, 328, 500, 502], "interoper": 250, "myriad": 250, "blank": [250, 372, 397, 452, 493, 498], "calc": [250, 252, 328, 354, 409], "calcreactionratesonmeshconvers": 250, "recalcul": [250, 286, 328], "remap": [250, 328], "eigenvalueproblem": 250, "includefixedsourc": 250, "eig": 250, "fredholm": 250, "satisfi": [250, 281, 309, 332, 333, 479], "uniform": [250, 252, 283, 286, 287, 291, 305, 313, 316, 317, 322, 327, 328, 329, 340, 345, 464, 482, 483, 498, 500, 502], "aclpdoselimit": [250, 502], "detailedaxialexpans": [250, 313, 322, 327, 328, 329, 342, 345, 392, 483, 502], "dpaperflu": [250, 498, 502], "dirti": [250, 502], "dpapeak": [250, 502], "fastfluencepeak": [250, 498, 502], "energydepocalcmethodstep": 250, "epseigenvalu": 250, "epsfissionsourceavg": 250, "epsfissionsourcepoint": 250, "rz": [250, 282, 283, 316, 325, 332, 361, 457, 461, 478, 480, 482, 495], "rzt": [250, 282, 316, 329, 332, 333, 340, 361], "hasnonuniformassem": 250, "isrestart": 250, "guess": [250, 408, 438, 502], "kernelnam": 250, "loadpadelev": [250, 502], "elev": [250, 283, 412, 494, 497, 502], "aclp": [250, 282, 322, 331, 500, 502], "plate": [250, 283, 329, 333, 479, 489, 493, 500, 502], "loadpadlength": [250, 502], "maxout": 250, "savephysicsfileslist": 250, "timestamp": [250, 502], "xskernel": [250, 502], "pn": 250, "edg": [250, 286, 309, 316, 324, 328, 329, 342, 344, 345, 360, 393, 397, 433, 480, 485, 498, 502], "unifi": [250, 322, 340], "pipe": [250, 364, 489], "delta": [250, 360, 489, 490, 497, 498, 506], "burnuppeakingfactor": [250, 502], "avg": [250, 329, 408, 489, 500, 502], "updatefluenceanddpa": 250, "mgflux": [250, 260, 286, 309, 328, 466, 487, 489, 498], "dpax": 250, "incur": 250, "exposur": 250, "convolut": 250, "dpapersecond": 250, "nusigf": 250, "test_readfromset": [251, 252], "test_readfromreactor": [251, 252], "test_savephysicsfil": [251, 252], "test_computedpar": [251, 252], "test_interact": [251, 252], "test_getiofilenam": [251, 252], "test_gethistoryparam": [251, 252], "test_checkenergybal": [251, 252], "test_executerinteract": [251, 252], "test_calculatekeff": [251, 252], "test_getexecutercl": [251, 252], "test_settightcouplingdefault": [251, 252], "test_gettightcouplingvalu": [251, 252], "test_executerinteractionnonuniformassem": [251, 252], "test_mapp": [251, 252], "test_getdpax": [251, 252], "test_getburnuppeakingfactor": [251, 252], "test_getburnuppeakingfactorzero": [251, 252], "test_calcreactionr": [251, 252], "fake": [252, 322, 392, 487], "gf": 252, "pcm": [252, 500, 502], "reli": [252, 303, 337, 340, 466, 494], "swing": [252, 500], "observ": 252, "mockgeometrytransform": 252, "mockexecut": 252, "mockconverterfactori": 252, "broad": [252, 254, 483, 489, 502, 504], "test_latticeinterfac": [253, 256], "latticeinterfacetest": [253, 256, 257], "latticeinterfacetesterlibfals": [253, 256, 257], "testlatticephysicsinterfacebas": [253, 256, 257], "testlatticephysicsinterfac": [253, 256, 257], "testlatticephysicslibrarycr": [253, 256, 257], "test_latticewrit": [253, 256], "fakelatticephysicswrit": [253, 256, 258], "testlatticephysicswrit": [253, 256, 258], "updatexslibrari": [253, 254], "readexistingxslibrari": [253, 254, 256, 257], "makecyclexsfilesasbasefil": [253, 254], "clearx": [253, 254, 502], "computecrosssect": [253, 254], "generatelatticephysicsinput": [253, 254], "getwrit": [253, 254], "getread": [253, 254], "getrepresentativeblock": [253, 254], "unused_categori": [253, 255], "fuel_categori": [253, 255], "structure_categori": [253, 255], "coolant_categori": [253, 255], "fission_product_categori": [253, 255], "undeplet": [253, 255], "neutronveloc": 254, "mgneutronveloc": [254, 498], "genx": [254, 493, 494, 502], "runlatticephysicsbeforeshuffl": 254, "weather": 254, "reson": 254, "lifetim": [254, 500, 505], "basi": [254, 316, 339, 480, 493], "forceseri": 254, "book": [254, 452], "xswriter": 254, "bc": 254, "returnedfromwrit": 254, "agent": 254, "cyclic": [254, 402, 500], "seek": [255, 396, 438], "generateexclusivegammax": 255, "test_includegammax": [256, 257], "test_latticephysicsinterfac": [256, 257], "test_interacteverynodefirstcoupl": [256, 257], "test_interacteverynodeal": [256, 257], "test_interactfirstcouplediter": [256, 257, 263, 264], "test_interactal": [256, 257], "test_getsuffix": [256, 257], "test_libcreation_nogenx": [256, 257], "test_libcreation_genx": [256, 257], "test_libcreation_nogenxs_2": [256, 257], "test_libcreation_genxs_2": [256, 257], "test_libcreation_genxs_3": [256, 257], "test_setblockneutronveloc": [256, 258], "test_latticephysicswrit": [256, 258], "test_writetitl": [256, 258], "test_issourcedriven": [256, 258], "test_isgammaxsgenerationen": [256, 258], "test_getallnuclidesbytemperatureincnon": [256, 258], "test_getallnuclidesbytemperatureinc": [256, 258], "test_getallnuclidesbytemperatureincexplicitfissionproduct": [256, 258], "test_getavgnuclidetemperatureinc": [256, 258], "test_getfueltemperatur": [256, 258], "test_getdetailedfissionproduct": [256, 258], "test_getdetailedfissionproductspass": [256, 258], "test_getdetailedfpdens": [256, 258], "test_iscriticalbucklingsearchact": [256, 258], "test_getdriverblock": [256, 258], "_newlibraryshouldbecr": 257, "flip": 257, "testverif": 257, "gen": [257, 264], "sigma_i": 259, "interactxyz": 259, "macroxsgen": 259, "blistsom": 259, "gxg": 259, "fluxrecon": [259, 286, 502], "computepinmgfluxandpow": 259, "denot": [261, 450], "addtion": 261, "subsectionhead": 261, "areal": [261, 500, 504], "test_add": [263, 264, 351, 352, 353, 356, 360], "test_getblocksingroup": [263, 264], "test_is_pickl": [263, 264], "test_createrepresentativeblock": [263, 264], "test_performaveragebycompon": [263, 264], "test_checkblocksimilar": [263, 264], "test_createrepresentativeblockdissimilar": [263, 264], "test_getaveragecomponentnumberdens": [263, 264], "test_getaveragecomponenttemperatur": [263, 264], "test_getaveragecomponenttemperaturevariedweight": [263, 264], "test_getaveragecomponenttemperaturenomass": [263, 264], "test_componentaveragerepblock": [263, 264], "test_componentaverage1dcylind": [263, 264], "test_checkcomponentconsist": [263, 264], "test_invalidweight": [263, 264], "test_enablebugroupupd": [263, 264], "test_disablebugroupupd": [263, 264], "test_updateburnupgroup": [263, 264], "test_setbugroupbound": [263, 264], "test_addxsgroupsfromblock": [263, 264], "test_calcweightedburnup": [263, 264], "test_getnextavailablexstyp": [263, 264], "test_getrepresentativeblock": [263, 264], "test_createrepresentativeblocksusingexistingblock": [263, 264], "test_createrepresentativeblocksusingexistingblocksdisablevalidblocktyp": [263, 264], "test_interactallcoupl": [263, 264], "test_xsgmisrunbeforex": [263, 264], "test_copypregeneratedfil": [263, 264], "test_convers": [263, 264], "test_conversion_2digit": [263, 264], "test_crosssect": [263, 265], "test_pregeneratedcrosssect": [263, 265], "test_pregeneratedfluxinput": [263, 265], "test_priorit": [263, 265], "test_homogeneousxsdefaultsettingassign": [263, 265], "test_setdefaultsettingsbylowestbugrouphomogen": [263, 265], "test_setdefaultsettingsbylowestbugrouponedimension": [263, 265], "test_optionalkei": [263, 265], "test_badcrosssect": [263, 265], "test_yamlio": [263, 265, 351, 358], "test_caseset": [263, 265], "test_csblockrepresent": [263, 265], "test_csblockrepresentationfileloc": [263, 265], "test_xssettingssetdefault": [263, 265], "test_maket": [263, 266], "test_isotopicdepletioninterfac": [263, 266], "test_invalidgroupstructuretyp": [263, 267], "test_consistenciesbetweengroupstructureandgroupstructuretyp": [263, 267], "test_getfastfluxgroupcutoff": [263, 267], "test_macroxsgenerationinterfacebas": [263, 268], "test_customsettingobjectio": [263, 269], "test_customsettingroundtrip": [263, 269], "test_neutronicssettingsload": [263, 269], "test_kineticsparameterassign": [263, 269], "test_neutronicssettingsvalid": [263, 269], "dissimilar": [264, 316], "zppr": [264, 286, 480], "cylind": 264, "disableblocktypeexclusioninxsgener": 264, "whip": [265, 339, 482], "forth": 269, "test_runningdirectorypath": [271, 272], "test_collectinputsandoutput": [271, 272], "test_updaterundir": [271, 272], "test_runexternalexecut": [271, 272], "hydraul": [273, 275, 276, 277, 279, 286, 329, 345, 480, 483, 490, 493, 502], "test_thermalhydraulicsplugin": [273, 278], "testthermalhydraulicsplugin": [273, 278, 279], "concern": [276, 502], "test_thermalhydraulicssettingsload": [278, 279], "test_thermalhydraulicssettingsset": [278, 279], "stock": 280, "pluggi": [280, 281, 447], "featur": [280, 281, 287, 328, 342, 372, 374, 404, 414, 420, 421, 442, 445, 447, 452, 467, 476, 480, 482, 489, 491, 493, 494, 502, 504], "mutat": [280, 377], "cheapli": 280, "altitud": 281, "subtl": 281, "exercis": 281, "forget": [281, 487, 504], "ergonom": [281, 332], "lest": 281, "endeavor": 281, "redesign": 281, "parametercollect": [281, 282, 309, 342, 345, 346, 359, 390, 485], "metaclass": [281, 306, 309, 342, 346], "stateless": [281, 447], "pluginmagag": 281, "notic": [281, 335, 447, 448, 451, 452, 493], "staticmethod": [281, 328, 340, 447, 489], "preclud": 281, "componenttyp": [281, 282, 303, 306], "registr": [281, 306, 489], "surpris": [281, 309, 331, 502], "ersatz": 281, "inter": [281, 309, 408, 433], "favor": [281, 350], "predat": 281, "pluginblockparam": 281, "createbuild": [281, 342, 345], "defparam": [281, 342, 345], "plugblkp1": 281, "pluginassemparam": 281, "plugasmp1": 281, "constraint": [281, 412, 445, 498], "alter": [281, 404, 502], "novel": 281, "blocktyp": [281, 283, 329], "largest": [281, 286, 309, 315, 397], "suspect": 281, "ceas": 281, "beyond": [281, 303, 447, 480, 487, 493], "elsewher": [281, 309, 451], "elimin": [281, 342, 480, 482], "altogeth": [281, 502], "resolutionmethod": 281, "unbound": 281, "enhanc": [281, 446, 480], "t1671": 281, "misbehav": 281, "declar": [281, 309, 313, 502], "member": [281, 309, 396, 408, 452], "widget": [281, 372], "tab": [281, 415, 445, 487], "widgetdata": 281, "submitt": 281, "abstracttab": 281, "addsectionsfromplugin": 281, "mcnpaddtal": 281, "usesrctp": 281, "frustrat": 281, "rule": [281, 332, 345, 346, 364, 373, 374, 447, 451, 452, 502], "intact": 281, "collid": [281, 342, 382], "superoldparam": 281, "oldparam": 281, "currentparam": 281, "newer": [281, 348, 411, 481, 508], "arguabl": 281, "suboptim": 281, "axialexpansionchang": [281, 282, 306, 310, 322, 392, 485], "negat": 281, "encourag": [281, 444], "tryfirst": 281, "hookimpl": [281, 447, 489], "invoc": [281, 443], "changer": [281, 286, 316, 324, 392, 402, 421, 482, 483, 502], "myplugin": [281, 502], "myproject": 281, "bespokeaxialexpans": 281, "mod": [281, 442, 494], "adapt": [281, 293, 447], "stapl": 281, "programm": [281, 502], "improperli": [281, 342], "collis": [281, 423], "hous": [282, 487], "constructassem": [282, 287, 322], "adddefaultsfp": [282, 287], "assemblyblueprint": [282, 287, 474, 485], "bycomponentmodif": [282, 287, 288], "assemblykeyedlist": [282, 287, 288, 474], "blockblueprint": [282, 287, 290, 474], "blockkeyedlist": [282, 287, 289, 474], "componentblueprint": [282, 287, 289, 297, 298, 474], "componentdimens": [282, 287, 290], "expandelement": [282, 287, 290], "insertdepletablenuclidekei": [282, 287, 290, 297], "componentkeyedlist": [282, 287, 290], "groupedcompon": [282, 287, 290], "componentgroup": [282, 287, 290], "gridblueprint": [282, 287, 293, 350, 474], "triplet": [282, 287, 291, 474], "savetostream": [282, 287, 291], "getdefaultnuclideflag": [282, 287, 292], "eleexpandinfobasedoncodeendf": [282, 287, 292], "gendefaultnucflag": [282, 287, 292, 474], "reactorblueprint": [282, 287, 350, 474], "systemblueprint": [282, 287, 293, 474], "summarizematerialdata": [282, 287, 293, 485], "getboundingcircleouterdiamet": [282, 303, 304, 305, 306, 308, 309, 351, 355], "getdimens": [282, 286, 303, 306, 503], "dimension_nam": [282, 303, 304, 305, 306, 308], "init_signatur": [282, 303, 304, 305, 306, 308], "pdef": [282, 283, 286, 303, 304, 305, 306, 308, 309, 329, 342, 344, 346, 348, 351, 355, 359, 379, 390], "getcomponentarea": [282, 303, 304, 305, 306, 308], "fromcompon": [282, 303], "is3d": [282, 303, 304, 305, 306, 308], "getcomponentvolum": [282, 303, 306, 308], "setvolum": [282, 303, 306], "computevolum": [282, 303, 306, 354], "getmaxvolum": [282, 303, 485], "basicshap": [282, 286, 303], "circl": [282, 286, 299, 303, 304, 305, 306, 307, 308, 309, 315, 354, 355, 412, 464, 466, 474, 479, 487, 493, 494, 502], "rectangl": [282, 286, 303, 304, 305, 306, 307, 335, 340, 354, 476, 482, 502], "solidrectangl": [282, 303, 304, 354, 502], "squar": [282, 303, 304, 305, 329, 333, 353, 354, 465, 469, 476, 482, 494, 502], "complexshap": [282, 303, 483], "holedhexagon": [282, 303, 305, 307, 354, 502], "hexholedcircl": [282, 303, 305, 307, 354, 502], "holedrectangl": [282, 303, 305, 307, 354, 502], "holedsquar": [282, 303, 305, 354, 502], "helix": [282, 303, 305, 307, 309, 354, 474, 479, 483, 487, 493, 502], "componenttypeisvalid": [282, 303, 306], "shapedcompon": [282, 303, 304, 305, 306, 308, 502], "componentparamet": [282, 303], "getcomponentparameterdefinit": [282, 303, 307], "getcircleparameterdefinit": [282, 303, 307], "gethexagonparameterdefinit": [282, 303, 307], "getholedhexagonparameterdefinit": [282, 303, 307], "gethexholedcircleparameterdefinit": [282, 303, 307], "getholedrectangleparameterdefinit": [282, 303, 307], "gethelixparameterdefinit": [282, 303, 307], "getrectangleparameterdefinit": [282, 303, 307], "getcubeparameterdefinit": [282, 303, 307], "gettriangleparameterdefinit": [282, 303, 307], "getunshapedparameterdefinit": [282, 303, 307], "getradialsegmentparameterdefinit": [282, 303, 307], "volumetricshap": [282, 303], "sphere": [282, 297, 303, 308, 354, 361, 502], "cube": [282, 303, 307, 308, 354, 502], "radialseg": [282, 303, 307, 308, 354, 502], "differentialradialseg": [282, 286, 303, 308, 354, 502], "parametersweep": [282, 310], "blockconvert": [282, 310, 459], "componentmerg": [282, 310, 315], "multiplecomponentmerg": [282, 310, 315], "blockavgtocylconvert": [282, 310, 315], "hexcomponentstocylconvert": [282, 310, 315, 459], "getouterdiamfromidandarea": [282, 310, 315], "radiifromhexpitch": [282, 310, 315], "radiifromhexsid": [282, 310, 315], "radiifromringofrod": [282, 310, 315], "geometryconvert": [282, 286, 310, 319, 328, 329, 460], "geometrychang": [282, 310, 316], "fuelassemnummodifi": [282, 310, 316], "hextorzthetaconvert": [282, 310, 316], "hextorzconvert": [282, 310, 316, 324, 460], "thirdcorehextofullcorechang": [282, 310, 316], "edgeassemblychang": [282, 286, 310, 316, 487], "meshconvert": [282, 310, 316], "rzthetareactormeshconvert": [282, 310, 317], "rzthetareactormeshconverterbyringcompositionaxialbin": [282, 310, 317], "rzthetareactormeshconverterbyringcompositionaxialcoordin": [282, 310, 317], "rzthetareactormeshconverterbyringcompositionaxialflag": [282, 310, 317], "checklastvalueinlist": [282, 310, 317], "checklistbound": [282, 310, 317], "generatebin": [282, 310, 317], "pintypeblockconvert": [282, 310], "adjustsmeardens": [282, 310, 320], "adjustcladthicknessbyod": [282, 310, 320], "adjustcladthicknessbyid": [282, 310, 320], "uniformmesh": [282, 286, 310, 313, 483], "converterfactori": [282, 310, 328], "uniformmeshgener": [282, 310, 328], "uniformmeshgeometryconvert": [282, 286, 293, 310, 328, 483], "neutronicsuniformmeshconvert": [282, 310, 328], "gammauniformmeshconvert": [282, 310, 328], "parammapp": [282, 310, 328], "setnumberdensitiesfromoverlap": [282, 310, 328], "axialgrid": [282, 333, 334, 466], "cartesiangrid": [282, 315, 333, 335, 469, 482], "hexgrid": [282, 315, 333, 338, 352, 466, 468, 485], "locationbas": [282, 309, 330, 333, 334, 337, 339, 349], "multiindexloc": [282, 286, 291, 333, 339], "coordinateloc": [282, 333, 339], "addingisvalid": [282, 333, 339], "structuredgrid": [282, 333, 334, 335, 338, 341, 484, 485], "gridparamet": [282, 333, 340], "thetarz": [282, 283, 286, 333, 340, 353], "thetarzgrid": [282, 317, 333, 341, 470], "parameterdefinitionerror": [282, 342, 343], "parametererror": [282, 342, 343], "unknownparametererror": [282, 342, 343], "global_serial_num": [282, 342, 344], "collectpluginparamet": [282, 342, 344], "applyallparamet": [282, 342, 344], "parameterdefinit": [282, 283, 286, 303, 304, 305, 306, 308, 309, 329, 342, 344, 348, 355, 359, 390], "paramloc": [282, 286, 342, 344, 345], "nodefault": [282, 342, 345], "isnumpyarrai": [282, 342, 345], "parameterbuild": [282, 342, 345, 359, 390], "resolvecollect": [282, 342], "resolveparametersmeta": [282, 309, 342, 344, 346], "test_assembli": [282, 351], "buildtestassembli": [282, 351, 352], "materialinassembly_testcas": [282, 351, 352], "maketestassembli": [282, 351, 352], "assembly_testcas": [282, 351, 352], "assemblyinreactor_testcas": [282, 351, 352], "annularfueltestcas": [282, 351, 352], "test_block": [282, 309, 351, 362, 464], "buildsimplefuelblock": [282, 351, 353, 464], "loadtestblock": [282, 351, 353], "applydummydata": [282, 351, 353], "getcomponentdata": [282, 351, 353], "testdetailedndensupd": [282, 351, 353], "block_testcas": [282, 309, 351, 353], "blockinputheightstest": [282, 351, 353], "blockenergydepositionconst": [282, 351, 353], "testnegativevolum": [282, 351, 353], "hexblock_testcas": [282, 351, 353], "thrzblock_testcas": [282, 351, 353], "cartesianblock_testcas": [282, 351, 353], "massconservationtest": [282, 310, 321, 326, 351, 353], "emptyblockrotatetest": [282, 351, 353], "test_compon": [282, 294, 297, 351], "testcomponentfactori": [282, 351, 354], "testgeneralcompon": [282, 351, 354], "testcompon": [282, 351, 354], "testnullcompon": [282, 351, 354], "testunshapedcompon": [282, 351, 354], "testshapedcompon": [282, 351, 354], "testderivedshap": [282, 351, 354], "testderivedshapegetarea": [282, 351, 354], "testcircl": [282, 351, 354], "testcomponentexpans": [282, 351, 354], "testtriangl": [282, 351, 354, 396, 416, 435], "testrectangl": [282, 351, 354], "testsolidrectangl": [282, 351, 354], "testsquar": [282, 351, 354], "testcub": [282, 351, 354], "testhexagon": [282, 351, 354, 396, 416, 424], "testholedhexagon": [282, 351, 354], "testhexholedcircl": [282, 351, 354], "testholedrectangl": [282, 351, 354], "testholedsquar": [282, 351, 354], "testhelix": [282, 351, 354], "testspher": [282, 351, 354], "testradialseg": [282, 351, 354], "testdifferentialradialseg": [282, 351, 354], "testmaterialadjust": [282, 351, 354], "test_composit": [282, 351], "mockbp": [282, 351, 355], "getdummyparamdef": [282, 351, 355], "dummycomposit": [282, 351, 355], "dummyleaf": [282, 351, 355], "testcompositepattern": [282, 351, 355], "testcompositetre": [282, 351, 355], "testflagseri": [282, 351, 355], "testmiscmethod": [282, 351, 355], "testgetreactionratedict": [282, 351, 355], "test_excorestructur": [282, 294, 302, 351], "testexcorestructur": [282, 351, 356], "testspentfuelpool": [282, 351, 356], "testexcorecollect": [282, 351, 356], "test_flag": [282, 351, 396, 416], "testflag": [282, 351, 357, 396, 416, 423], "test_geometri": [282, 351], "testgeomtyp": [282, 351, 358], "testsymmetrytyp": [282, 351, 358], "testsystemlayoutinput": [282, 351, 358], "testsystemlayoutinputtrz": [282, 351, 358], "test_paramet": [282, 351], "mockcomposit": [282, 351, 359], "mockcompositegrandpar": [282, 351, 359], "mockcompositepar": [282, 351, 359], "mockcompositechild": [282, 351, 359], "parametertest": [282, 351, 359], "paramcollectionwher": [282, 351, 359], "testmakeparametersreadonli": [282, 351, 359], "test_reactor": [282, 351, 458, 459, 460, 467, 475], "buildoperatorofemptyhexblock": [282, 351, 360], "buildoperatorofemptycartesianblock": [282, 351, 360], "reducetestreactor": [282, 351, 360], "reactortest": [282, 351, 360], "hexreactortest": [282, 351, 360], "cartesianreactorneighbortest": [282, 351, 360], "test_rz_reactor": [282, 351], "testrztreactor": [282, 351, 361], "testrztreactormodern": [282, 351, 361], "test_zon": [282, 351], "testzon": [282, 351, 362], "load_queu": [282, 283], "spent_fuel_pool": [282, 283], "not_in_cor": [282, 283], "renameblocksaccordingtoassemblynum": [282, 283], "makenamefromassemnum": [282, 283], "renumb": [282, 283, 329, 348, 349], "makeuniqu": [282, 283], "moveto": [282, 283, 309], "getnum": [282, 283], "getloc": [282, 283, 286, 287, 291], "getarea": [282, 283, 286, 303, 306, 309, 354, 485, 499], "getpinplenumvolumeincubicmet": [282, 283], "getaverageplenumtemperatur": [282, 283], "adjustresolut": [282, 283], "getaxialmesh": [282, 283, 329, 483], "calculatezcoord": [282, 283, 286], "gettotalheight": [282, 283], "getheight": [282, 283, 286, 487], "getreactiveheight": [282, 283], "getelevationboundariesbyblocktyp": [282, 283], "getelevationsmatchingparamvalu": [282, 283], "getag": [282, 283], "makeaxialsnaplist": [282, 283, 498], "setblockmesh": [282, 283, 485, 498], "setblockheight": [282, 283], "getblock": [282, 283, 286, 329, 448, 458, 459, 467, 475, 487, 489], "getblocksandz": [282, 283], "hascontinuouscoolantchannel": [282, 283], "getfirstblock": [282, 283, 329, 466, 487, 494, 503], "getfirstblockbytyp": [282, 283], "getblockatelev": [282, 283], "getbindexfromzindex": [282, 283], "getblocksbetweenelev": [282, 283], "getparamvaluesatz": [282, 283], "getparamofzfunct": [282, 283], "reestablishblockord": [282, 283], "countblockswithflag": [282, 283, 329], "getdim": [282, 283, 286], "getsymmetryfactor": [282, 283, 286, 309, 316, 360, 489], "isonwhichsymmetrylin": [282, 283, 485], "radialout": [282, 283, 286], "radialinn": [282, 283, 286], "thetaout": [282, 283, 286], "thetainn": [282, 283, 286], "uniqid": [282, 286], "pitch_dimens": [282, 286], "pitch_component_typ": [282, 286], "createhomogenizedcopi": [282, 286], "makenam": [282, 286], "getsmeardens": [282, 286], "autocreatespatialgrid": [282, 286], "getmgflux": [282, 286, 309], "setpinmgflux": [282, 286], "setheight": [282, 286], "getwettedperimet": [282, 286, 483], "getflowareaperpin": [282, 286], "gethydraulicdiamet": [282, 286], "adjustuenrich": [282, 286], "setbulimitinfo": [282, 286], "getmaxarea": [282, 286, 309], "adjustdens": [282, 286], "completeinitialload": [282, 286, 320], "setb10volparam": [282, 286], "replaceblockwithblock": [282, 286, 353], "plotflux": [282, 286], "removeal": [282, 286, 309], "getcomponentsthatarelinkedto": [282, 286], "getcomponentsinlinkedord": [282, 286], "getsortedcomponentsinsideofcompon": [282, 286], "getnumpin": [282, 286, 483, 485], "mergewithblock": [282, 286], "getcomponentareafrac": [282, 286], "verifyblockdim": [282, 286], "getpincenterflattoflat": [282, 286], "getwirewrapcladgap": [282, 286], "getplenumpin": [282, 286], "isplenumpin": [282, 286], "getpitch": [282, 286], "haspinpitch": [282, 286], "getpinpitch": [282, 286], "getlargestcompon": [282, 286], "setpitch": [282, 286], "getmfp": [282, 286], "setareafractionsreport": [282, 286], "updatecomponentdim": [282, 286, 308], "breakfuelcomponentsintoindividu": [282, 286], "getintegratedmgflux": [282, 286, 303, 306, 309], "setaxialexptargetcomp": [282, 286], "getpincoordin": [282, 286], "gettotalenergygenerationconst": [282, 286, 485], "getfissionenergygenerationconst": [282, 286, 485], "getcaptureenergygenerationconst": [282, 286, 485], "getneutronenergydepositionconst": [282, 286, 485], "getgammaenergydepositionconst": [282, 286, 485], "getboronmassenrich": [282, 286, 485], "getpumol": [282, 286, 485], "geturaniummassenrich": [282, 286, 485], "getinputheight": [282, 286, 485], "getductip": [282, 286], "getductop": [282, 286], "initializepinloc": [282, 286], "setpinpow": [282, 286], "getpintoductgap": [282, 286], "getrotationnum": [282, 286], "setrotationnum": [282, 286], "getflowarea": [282, 286], "axialinn": [282, 286], "axialout": [282, 286], "copyparamsfrom": [282, 309], "updateparamsfrom": [282, 309], "getcompon": [282, 309, 331, 464, 489, 494, 503], "itercompon": [282, 303, 306, 309, 351, 355], "dochildrenhaveflag": [282, 309], "containsatleastonechildwithflag": [282, 309], "containsonlychildrenwithflag": [282, 309], "copyparamstochildren": [282, 309], "getparametercollect": [282, 309], "getparamnam": [282, 309], "setnam": [282, 303, 306, 309], "hasflag": [282, 283, 309, 331], "gettyp": [282, 309, 487, 493], "settyp": [282, 309, 466], "getvolumefract": [282, 306, 309, 353, 464], "getmass": [282, 303, 306, 309, 355, 487], "getchildrenwithnuclid": [282, 309], "getancestor": [282, 309], "getancestoranddist": [282, 309], "getancestorwithflag": [282, 309], "gettotalnden": [282, 309], "updatenumberdens": [282, 303, 306, 309], "changendensbyfactor": [282, 309], "clearnumberdens": [282, 309], "getnumberofatom": [282, 309], "setchildrenlumpedfissionproduct": [282, 309], "getfissilemassenrich": [282, 309], "geturaniumnumenrich": [282, 309], "calctotalparam": [282, 309, 489], "calcavgparam": [282, 309], "getmaxparam": [282, 309, 355, 467, 480, 493], "getminparam": [282, 309, 355], "getchildparamvalu": [282, 309, 487], "isfuel": [282, 309, 487, 489], "containsheavymet": [282, 309], "getfissilemass": [282, 309, 487], "gethmmass": [282, 309, 460], "gethmmol": [282, 309], "gethmden": [282, 309], "getfuelmass": [282, 303, 306, 309, 355], "constituentreport": [282, 309], "removemass": [282, 309], "addmass": [282, 309], "setmass": [282, 309, 400], "getboundingindic": [282, 309], "getcomponentnam": [282, 309], "getcomponentsofshap": [282, 309], "getcomponentsofmateri": [282, 309], "hascompon": [282, 309], "getcomponentbynam": [282, 309], "getnumcompon": [282, 309], "setcomponentdimensionsreport": [282, 309], "expandallelementalstoisotop": [282, 309], "expandelementaltoisotop": [282, 309, 466], "getaveragetempinc": [282, 309], "resolvelinkeddim": [282, 303, 306, 309, 354], "setchildren": [282, 309], "getchildrenoftyp": [282, 309], "syncmpist": [282, 309, 344, 357, 448], "retainst": [282, 309, 340, 344, 353], "getlumpedfissionproductsifnecessari": [282, 309], "requireslumpedfissionproduct": [282, 309], "getreactionr": [282, 309, 466, 483, 485], "printcont": [282, 303, 306, 309, 487], "setoptionsfromc": [282, 329, 466], "powermultipli": [282, 329, 497], "isfullcor": [282, 329], "refassem": [282, 283, 329, 483], "sortassemsbyr": [282, 329, 483, 487], "summarizereactorstat": [282, 329], "setpowerfromdens": [282, 329], "setpowerifnecessari": [282, 329], "setblockmassparam": [282, 329], "getscalarevolut": [282, 329], "locateallassembli": [282, 329], "removeassembli": [282, 329], "removeassembliesinr": [282, 329], "normalizenam": [282, 329, 348, 349], "normalizeinternalbookeep": [282, 329], "genassembliesaddedthiscycl": [282, 329], "getnumhexr": [282, 329], "getnumassemblieswithallringsfilledout": [282, 329], "getnumenergygroup": [282, 329], "countfuelaxialblock": [282, 329], "getfirstfuelblockaxialnod": [282, 329], "getassembliesinr": [282, 329], "getmaxassembliesinhexr": [282, 329], "getassembliesinsquareorhexr": [282, 329], "getassembliesincircular": [282, 329], "buildcircularringdictionari": [282, 329], "getassemblybynam": [282, 329], "getnozzletyp": [282, 329], "getblockbynam": [282, 329], "getblocksbyindic": [282, 329], "genblocksbylocnam": [282, 329], "getfirstassembli": [282, 329], "regenassemblylist": [282, 283, 329], "getallxssuffix": [282, 329], "getnuclidecategori": [282, 329, 360], "summarizenuclidecategori": [282, 329], "getlocationcont": [282, 329], "makelocationlookup": [282, 329], "getfluxvector": [282, 329], "getassembliesoftyp": [282, 329], "getassemblywithassemnum": [282, 329], "getassemblywithstringloc": [282, 329], "getassemblypitch": [282, 329], "findneighbor": [282, 329], "setmovelist": [282, 329], "createfreshfe": [282, 329], "createassemblyoftyp": [282, 329, 493], "saveallflux": [282, 329], "getassembliesonsymmetrylin": [282, 329], "getcoreradiu": [282, 329], "findallmeshpoint": [282, 329, 360, 361], "findallaxialmeshpoint": [282, 283, 329], "updateaxialmesh": [282, 286, 313, 329], "findaxialmeshindexof": [282, 329], "addmorenod": [282, 329], "findallazimeshpoint": [282, 329], "findallradmeshpoint": [282, 329], "getmaxblockparam": [282, 329], "gettotalblockparam": [282, 329], "getmaxnumpin": [282, 329], "getminimumpercentfluxinfuel": [282, 329], "getavgtemp": [282, 329], "growtofullcor": [282, 324, 329, 350, 475, 483], "setpitchuniform": [282, 329], "calcblockmax": [282, 329], "getfuelbottomheight": [282, 329], "processload": [282, 313, 329, 483], "buildmanualzon": [282, 329], "tertiari": [282, 331], "annular": [282, 305, 306, 331, 353], "shield_block": [282, 331], "slug": [282, 331, 493], "starter": [282, 331, 489], "blanket": [282, 288, 331], "booster": [282, 329, 331], "grid_plat": [282, 322, 331, 502], "handling_socket": [282, 322, 331], "inlet_nozzl": [282, 322, 331], "liner": [282, 309, 315, 322, 323, 331, 335, 479, 480], "wire": [282, 283, 286, 305, 306, 322, 323, 329, 331, 353, 412, 474, 483, 487, 492, 493, 502], "intercool": [282, 309, 315, 331, 353, 464, 474, 487, 493, 502], "load_pad": [282, 331], "skid": [282, 331, 502], "interductcool": [282, 331], "dspacerinsid": [282, 331], "guide_tub": [282, 322, 331, 494], "fission_chamb": [282, 331, 494], "core_barrel": [282, 331], "batchmassaddit": [282, 331], "poison": [282, 283, 301, 331, 502], "moveabl": [282, 331, 497], "fromstringignoreerror": [282, 331], "fromstr": [282, 331, 332], "tostr": [282, 331, 357, 485], "fromani": [282, 332], "null": [282, 332, 353, 354, 364], "full_cor": [282, 332], "third_cor": [282, 332, 466], "quarter_cor": [282, 332], "eighth_cor": [282, 332], "sixteenth_cor": [282, 332], "symmetryfactor": [282, 286, 332], "no_symmetri": [282, 332], "hassymmetri": [282, 332], "valid_symmetri": [282, 332], "createvalidsymmetrystr": [282, 332], "checkvalidsymmetri": [282, 332], "incrementassemnum": [282, 348], "root_tag": [282, 350], "readgeomfromfil": [282, 350], "readgeomfromstream": [282, 350], "togridblueprint": [282, 350], "modifyeqpath": [282, 350], "writegeom": [282, 350], "valid_typ": [282, 363], "addloc": [282, 363], "removeloc": [282, 363], "additem": [282, 363], "removeitem": [282, 363], "addzon": [282, 363], "removezon": [282, 363], "checkdupl": [282, 363], "getzoneloc": [282, 363], "getallloc": [282, 363], "findzoneitisin": [282, 363], "sortzon": [282, 363], "typ": [283, 309, 491], "assemnum": [283, 286, 329, 352, 482, 497, 498, 502], "compli": [283, 444], "newnum": 283, "impli": [283, 329, 364, 391, 406, 480, 493, 494, 502], "somewher": [283, 286, 339, 403, 412, 445], "plane": [283, 335, 338, 340, 440, 487, 502], "outlet": [283, 352, 489, 497, 498, 500, 502], "refa": 283, "zeroatfuel": 283, "zeroesatfuel": 283, "enrichthresh": 283, "zbottom": [283, 286, 498], "resid": [283, 339, 363, 498, 502], "refmesh": 283, "stick": 283, "topindex": [283, 498], "snap": [283, 329], "rebusoutput": 283, "blockmesh": 283, "conservemassflag": 283, "depict": [283, 480], "slide": 283, "blockheight": 283, "returnbottomz": 283, "returntopz": 283, "zcoord": [283, 469], "blocksandcoord": 283, "bottomz": 283, "typenam": [283, 309, 415], "mergeblock": 283, "targetblock": 283, "zindex": [283, 329], "bindex": 283, "zlower": 283, "zupper": 283, "blockinfo": 283, "blockobj": 283, "overlapheightincm": 283, "block3": 283, "block2": 283, "block1": 283, "interptyp": 283, "fillvalu": [283, 415], "thoutlettemperatur": 283, "paramdefinedat": 283, "extrapol": [283, 408, 502], "spline": 283, "interp1d": 283, "nearest": [283, 329], "slinear": 283, "quadrat": 283, "cubic": 283, "rough": 283, "valatz": 283, "extrapolol": 283, "nonphys": 283, "spatialgrid": [283, 286, 291, 309, 329, 335, 340, 349, 352, 353, 445, 466, 482, 487, 492], "wise": [283, 311, 312, 313, 314, 353, 415, 500, 502], "spatialloc": [283, 286, 291, 309, 329, 333, 338, 339, 340, 466, 467, 475, 487, 489, 494, 504], "ztop": [283, 286, 498], "reorder": 283, "blocktypespec": [283, 329], "blockcount": 283, "dimnam": [283, 286], "rad": [283, 286, 315, 470], "angl": [283, 286, 304, 397, 440, 502], "radian": [283, 286, 317, 341, 408, 440], "clockwis": [283, 286, 335, 338, 406, 498], "assemblyparametercollect": [283, 339], "divis": [283, 329, 480, 487], "subdivid": 283, "axialmesh": [283, 460, 483, 500], "azimuth": [283, 287, 308, 329, 341, 497], "classvar": 286, "pinspatialloc": 286, "gloss": 286, "axialindex": [286, 289, 482], "inher": [286, 397, 450, 492, 505], "b0120": 286, "005": [286, 329, 482, 487, 502], "negativearea": 286, "multiplicti": 286, "ringnumb": 286, "fastest": [286, 306, 309], "clock": [286, 498], "pinmgflux": [286, 485, 498], "5th": 286, "6th": [286, 497, 498, 500], "modifiedheight": 286, "conservemass": 286, "adjustlist": 286, "bottleneck": 286, "fly": [286, 313, 338, 339, 482], "numpin": 286, "newenrich": [286, 309], "central": [286, 329, 335, 337, 366, 445, 452, 480, 494], "bisect": 286, "trisect": 286, "overhang": 286, "scaleparamsrelatedtosymmetri": [286, 310, 316], "returnmass": 286, "bolblock": [286, 320], "hm": [286, 309, 482, 498], "initialload": 286, "ecpt": [286, 320], "hmden": [286, 309], "importgeom": [286, 308, 329], "_updateblockparametersafterdeplet": 286, "heighthot": 286, "initialb10componentvol": [286, 360, 498], "breplac": 286, "replacementblock": 286, "blist": [286, 412], "blist2": [286, 412], "recomputeareafract": 286, "stai": [286, 309, 313, 353, 364, 442], "linkedcomp": 286, "componentlist": [286, 313], "otherblock": 286, "among": [286, 303, 309, 448, 480, 502, 504], "compnam": 286, "dimval": 286, "betwen": 286, "returncomp": 286, "largestcompon": 286, "updatebolparam": 286, "settingpitch": 286, "setdimens": [286, 303, 306], "034": [286, 487], "phi_e": 286, "mfp": 286, "mfpab": 286, "diffusionlength": 286, "thrz": [286, 308], "updatedim": [286, 303, 306, 308], "optimizationinterfac": [286, 308, 329], "modifycas": [286, 308], "fuel001": 286, "fuel169": 286, "169": [286, 298, 299, 502], "tracklength": [286, 306, 309], "integratedflux": [286, 306, 309], "lfpname": [286, 306, 309], "targetcompon": 286, "centroid": [286, 329, 339, 342, 345, 439], "localcoordin": 286, "totalenergygenconst": 286, "fissionenergygenconst": 286, "energydepconst": 286, "attributeerror": [286, 413, 451], "umc": 286, "frequent": [286, 309, 329, 349, 397, 444, 487, 493], "determinist": [286, 502], "makeassemwithuniformmesh": [286, 310, 328], "powerkeysuffix": 286, "linpowbypin": [286, 498], "pinloc": [286, 483, 498], "elig": 286, "assembl": [286, 502], "pintoductgap": 286, "diameter": 286, "face": [286, 293, 338, 412, 452, 480, 483], "rotnum": 286, "contact": [286, 408, 480, 502], "spacer": [286, 493], "pinpitch": 286, "wet": 286, "perimet": [286, 304, 338, 354], "4a": 286, "minu": [286, 493, 497], "widthout": [286, 304, 305, 308, 354, 494, 502], "pertain": 287, "rigidli": 287, "adher": 287, "mymaterialmodification1": 287, "mymaterialmodification2": 287, "hotchannelfactor": [287, 497, 502], "twrpclad": [287, 502], "yamlstr": [287, 294, 299], "griddesign": [287, 474], "roundtrip": 287, "blueprintsobject": 287, "closur": 287, "irrelev": [287, 379], "inp": [287, 316, 379, 409], "textio": [287, 438], "cloader": 287, "10x": [287, 438], "roundtripload": 287, "submesh": [287, 327, 329, 483], "sophist": [287, 291, 438], "stabil": [287, 480, 502], "portion": [287, 390, 502], "test_assemblyblueprint": [287, 294], "testmaterialmodif": [287, 294, 295, 301], "test_blockblueprint": [287, 294], "testgriddedblock": [287, 294, 296], "test_blueprint": [287, 294], "testblueprint": [287, 294, 297], "testblueprintsschema": [287, 294, 297], "test_componentblueprint": [287, 294], "testcomponentblueprint": [287, 294, 298], "test_customisotop": [287, 294, 297], "testcustomisotop": [287, 294, 299], "testcustomisotopics_errorcondit": [287, 294, 299], "testnuclideflagsexpans": [287, 294, 299], "test_gridblueprint": [287, 294], "testgridbproundtrip": [287, 294, 300], "testgridblueprintssect": [287, 294, 300], "testrztgridblueprint": [287, 294, 300], "test_materialmodif": [287, 294], "test_reactorblueprint": [287, 293, 294], "testreactorblueprint": [287, 294, 302], "key_typ": [287, 288, 292], "value_typ": [287, 288, 292], "getassemclass": [287, 288], "item_typ": [287, 288, 289, 290, 291, 292, 293], "byspecifi": [287, 288], "to_yaml": [287, 290], "setcustomdens": [287, 290], "readfromlatticemap": [287, 291], "expandtoful": [287, 291], "getmultiloc": [287, 291], "fileasactiveorinert": [287, 292], "from_yaml_key_v": [287, 292], "decoupl": [288, 483], "yamlizablestr": [288, 292], "mapattributecollect": [288, 292], "underneath": 288, "keyedlist": [288, 289, 290, 291, 292, 293], "_loadcomposit": 288, "keyedlistattributecollect": [288, 289, 290, 291, 292, 293], "axialmeshpoint": [289, 474], "materialinput": 289, "byblock": 289, "_rtd": 290, "matmod": 290, "constructedcompon": 290, "_resolvenuclid": 290, "isotopicdepletioninterfac": 290, "isdeplet": 290, "pointer": [290, 489], "subassembli": [291, 482], "sh": [291, 493, 502], "rr": [291, 474, 493], "oc": [291, 493], "pc": [291, 476, 493], "latticemap": [291, 474], "latticedimens": 291, "gridbound": 291, "gridcont": 291, "__new__": [291, 293, 339], "setattr": [291, 293], "lazili": [291, 404, 415], "unfold": 291, "rudimentari": 291, "domain": [291, 329, 332, 337, 397, 497], "latticeid": [291, 494, 502], "bluep": 291, "trymap": 291, "cobbl": 291, "regardless": [291, 309, 316, 340, 373, 433, 489, 502], "creator": 292, "o17": [292, 494, 502], "o18": [292, 400, 494], "reachabl": 292, "expandto": [292, 299, 482, 494, 502], "activeset": 292, "inertset": 292, "inert": 292, "yamlizablefloat": 292, "rtd": 292, "key_nod": 292, "val_nod": 292, "key_attr": 292, "customisotopicsnam": [292, 499], "customisotopicnam": 292, "customisoptop": 292, "infrequ": 292, "cm247": [292, 299, 487], "b11": [292, 487], "intellig": 292, "elementalstokeep": 292, "oxygen16": 292, "examin": [292, 316, 329, 502], "conf_fission_product_library_nam": 292, "proven": 293, "loadcomp": 293, "initnewreactor": [293, 310, 324, 328], "twoblockinput_correct": [294, 295], "twoblockinput_wrongmeshpoint": [294, 295], "twoblockinput_wrongheight": [294, 295], "twoblockinput_wrongxstyp": [294, 295], "twoblockinput_wrongmatmod": [294, 295], "loadcustomassembli": [294, 295], "test_checkparamconsist": [294, 295], "test_constructspatialgrid": [294, 296], "test_getlocatorsatlatticeposit": [294, 296], "test_blocklattic": [294, 296], "test_nonlatticecomponenthasrightmult": [294, 296], "test_explicitflag": [294, 296], "test_densityconsistentwithcomponentconstructor": [294, 296], "test_roundtripcompletebp": [294, 297], "test_getassemblytypebyspecifi": [294, 297], "test_specialisotopicvector": [294, 297], "test_componentdimens": [294, 297], "test_tracenuclid": [294, 297], "test_noduplicatekeysinyamlblueprint": [294, 297], "test_assemblyparamet": [294, 297], "test_nuclidesmc2v2": [294, 297], "test_nuclidesmc2v3": [294, 297], "test_merg": [294, 297], "test_cladding_invalid": [294, 297], "test_withoutblock": [294, 297], "test_toplevelcomponentinput": [294, 297], "test_componentgroupinput": [294, 297], "componentstr": [294, 298], "test_componentinitializationincompleteburnchain": [294, 298], "test_componentinitializationcontrolcustomisotop": [294, 298], "test_autodeplet": [294, 298], "test_componentinitializationamericiumcustomisotop": [294, 298], "test_componentinitializationthoriumburncustomisotop": [294, 298], "test_componentinitializationthoriumnoburncustomisotop": [294, 298], "yamlpreambl": [294, 299], "yamlgoodblock": [294, 299], "yamlbadblock": [294, 299], "yamlstringwitherror": [294, 299], "test_unmodifi": [294, 299], "test_massfractionsareappli": [294, 299], "test_densitiesappliedtononcustommateri": [294, 299], "test_customdensitylogsanderror": [294, 299], "test_numberfract": [294, 299], "test_numberdens": [294, 299], "test_numberdensitiesanchor": [294, 299], "test_expandednatur": [294, 299], "test_unrepresentedareonlynatur": [294, 299], "test_densitymustbeposit": [294, 299], "test_nonconformantelementnam": [294, 299], "test_numberdensitiescannotspecifydens": [294, 299], "test_cont": [294, 300], "test_tinymap": [294, 300], "test_simpleread": [294, 300, 302], "test_simplereadlatticemap": [294, 300], "test_simplereadnolatticemap": [294, 300], "test_construct": [294, 300, 302], "test_geomfil": [294, 300], "uzrinput": [294, 301], "b4cinput": [294, 301], "loaduzrassembli": [294, 301], "loadb4cassembli": [294, 301], "test_nomaterialmodif": [294, 301], "test_u235_wt_frac_modif": [294, 301], "test_u235_wt_frac_bycomponent_modification1": [294, 301], "test_u235_wt_frac_bycomponent_modification2": [294, 301], "test_materialmodificationlength": [294, 301], "test_invalidcomponentmodif": [294, 301], "test_zrwtfracmodif": [294, 301], "test_bothu235zrwtfracmodif": [294, 301], "test_checkbycomponentmaterialinput": [294, 301], "test_filtermaterialinput": [294, 301], "test_invalidmatmodnam": [294, 301], "test_matmodsupthemro": [294, 301], "test_theoreticaldens": [294, 301], "test_materialdatasummari": [294, 302], "test_spentfuelpool": [294, 302], "assemblyinput": 295, "intermedi": [296, 502, 504], "faithfulli": [297, 328, 504], "robust": [297, 309], "tip": [297, 328, 397, 447, 483, 497], "prove": [297, 301, 354, 363, 377, 395, 450, 452, 480], "mc2v3": [297, 502], "86602": [298, 299, 502], "dump2": [299, 487], "dump1": [299, 487], "pu236": [299, 487], "u236": [299, 487, 491, 502], "am243": [299, 487], "cm242": [299, 487], "cm245": [299, 487], "np238": [299, 487], "cm243": [299, 487], "cm246": [299, 487], "992742": 299, "007204": [299, 491], "000054": 299, "992650": 299, "007295": 299, "000055": 299, "u_isotop": 299, "6539102e": 299, "5254048e": 299, "7967943e": 299, "block_0": 299, "basic_fuel": 299, "block_1": 299, "block_2": 299, "block_3": 299, "block_4": 299, "block_5": 299, "block_6": 299, "overspecifi": 299, "block_7": 299, "block_8": 299, "block_9": 299, "assembly_b": 299, "assembly_c": 299, "assembly_d": 299, "unmodifi": 299, "fe54": [299, 487], "block_poison": 301, "mro": 301, "bcomp": 303, "lowercas": 303, "mergewith": [303, 304, 305, 306, 308, 499], "componentparametercollect": [303, 306], "modarea": [303, 304, 305, 308, 499, 502], "leftov": [303, 306], "othercompon": [303, 306], "freez": 303, "unshapedcomponentparametercollect": 303, "makemgfluxblock": 303, "makemassadditioncompon": 303, "circumst": [303, 306, 328, 329, 389, 404, 445, 481, 502, 508], "dh": 303, "pai": [303, 502], "attent": [303, 502], "companion": [303, 489], "thermal_expansion_dim": [303, 304, 305, 306, 308], "getcircleinnerdiamet": [303, 304, 305, 306, 483], "isencapsulatedbi": [303, 304], "getperimet": [303, 304], "getpitchdata": [303, 304, 306], "islatticecompon": [303, 304], "non_dimension_nam": [303, 306], "temperatureink": [303, 306], "setlink": [303, 306], "setproperti": [303, 306], "applymaterialmassfracstonumberdens": [303, 306, 313], "adjustdensityforheightexpans": [303, 306], "getheightfactor": [303, 306], "containsvoidmateri": [303, 306], "containssolidmateri": [303, 306], "setarea": [303, 306], "settemperatur": [303, 306, 464], "getmassenrich": [303, 306], "dimensionislink": [303, 306], "getdimensionnameslinkedto": [303, 306], "clearlinkedcach": [303, 306], "getlinkedcompon": [303, 306], "getthermalexpansionfactor": [303, 306], "setdimensionreport": [303, 306], "mergenuclidesinto": [303, 306], "finalizeloadingfromdb": [303, 306], "circleparametercollect": 304, "www3": 304, "wolframalpha": 304, "hexagonparametercollect": 304, "lengthout": [304, 305, 308, 354, 502], "lengthinn": [304, 308, 354, 502], "widthinn": [304, 308, 354, 494, 502], "rectangleparametercollect": 304, "hollow": [304, 305, 493], "lenth": 304, "triangleparametercollect": 304, "holeod": [305, 354, 502], "nhole": [305, 354, 502], "hole": [305, 354, 417, 482, 493, 502], "holedhexagonparametercollect": 305, "holeop": [305, 354, 502], "hexholedcircleparametercollect": 305, "holedrectangleparametercollect": 305, "holedsquareparametercollect": 305, "axialpitch": [305, 354, 474, 493, 502], "helixdiamet": [305, 354, 474, 493, 502], "spiral": 305, "mathworld": 305, "wolfram": 305, "climb": 305, "exterior": 305, "interior": [305, 483], "helixparametercollect": 305, "specfi": 306, "componettyp": 306, "addition": [306, 315, 448, 480, 502], "inputtemperatureinc": [306, 313, 314, 504], "othercomp": 306, "othercompkei": 306, "newhot": 306, "accommod": [306, 412, 445], "lfpcollect": [306, 309], "proport": [306, 459], "rho": [306, 309, 400], "f_n": 306, "dn": 306, "sim": 306, "heterogen": [306, 315, 502], "nden": [306, 309, 458, 487, 498], "unlist": [306, 309], "ambigu": 306, "blend": [306, 502], "sum_i": [306, 309, 328], "a_i": [306, 309, 505], "n_a": [306, 309], "avogadro": 306, "retainlink": 306, "indirectli": [306, 400], "intersect": 306, "percentag": [306, 313, 329, 451, 498, 499], "includenuclid": [306, 309, 487], "comptomergewith": 306, "pervious": 306, "whichev": [306, 329, 445, 447, 480], "weigh": [306, 329], "doubli": [306, 352], "fetch": [306, 344], "sphereparametercollect": 308, "heightout": [308, 354, 502], "heightinn": [308, 354, 502], "cuboid": 308, "centric": 308, "cubeparametercollect": 308, "inner_radiu": [308, 354, 502], "outer_radiu": [308, 354, 502], "inner_theta": [308, 502], "outer_theta": [308, 502], "283185307179586": 308, "xxxx": 308, "xxxxxxx": 308, "refvolum": 308, "refheight": 308, "radialsegmentparametercollect": 308, "radius_differenti": [308, 354, 502], "inner_axi": [308, 354, 502], "azimuthal_differenti": [308, 502], "thrzactiveheight": 308, "thrzactiveradiu": 308, "outer_axi": 308, "principl": 309, "everywher": 309, "analogi": 309, "unsaf": 309, "unexpect": [309, 451], "uint64": 309, "uint8": 309, "unsign": 309, "hood": [309, 493], "particip": [309, 482, 502], "gang": 309, "far": [309, 397, 481, 489, 492, 500, 507, 508], "unstabl": [309, 482], "armiobjectparametercollect": [309, 330, 346, 349], "rapidli": [309, 480], "weak": 309, "complabel": 309, "unpickl": [309, 339, 396], "dig": 309, "__reduce__": [309, 337], "testfuel": [309, 329], "insensit": [309, 340], "typeid": 309, "bitwis": [309, 345, 404, 423], "qualifi": [309, 447, 482], "disallow": 309, "volfrac": [309, 464], "test_consistentareawithoverlappingcompon": [309, 351, 353], "insur": 309, "ai": 309, "m_i": 309, "sum_j": 309, "m_j": 309, "m_": 309, "nuclidetoadjust": 309, "elementtoadjust": 309, "nuclidetoholdconst": 309, "elementtoholdconst": 309, "5zr": 309, "oi": 309, "f1": 309, "f2": 309, "fn": 309, "caller": 309, "_distanc": 309, "ntot": 309, "unnatur": 309, "anticip": 309, "dealt": 309, "therebi": 309, "nearli": [309, 482, 489, 504], "volumeintegr": [309, 329], "addsymmetricposit": 309, "calcbasedonfullobj": 309, "postion": 309, "weightingparam": 309, "volumeaverag": 309, "grandchildren": 309, "x_i": 309, "w_i": 309, "unset": 309, "returnobj": 309, "sought": 309, "magnitud": [309, 313, 340], "pertin": [309, 450], "formula": [309, 328, 439, 483, 490], "mini": [309, 408], "maxi": 309, "minj": 309, "maxj": 309, "mink": 309, "maxk": 309, "shapeclass": 309, "materialnam": [309, 473], "selector": 309, "componentswiththismat": 309, "npin": [309, 498], "elementalnuclid": 309, "naturalnuclid": 309, "domin": 309, "tripl": [309, 339, 497, 498, 500], "pump": [309, 480, 494, 497, 500, 502], "apart": 309, "spatialoc": 309, "seq": [309, 407], "unari": 309, "getattr": 309, "child1": 309, "child2": 309, "child3": 309, "grandchild1": 309, "grandchild2": 309, "grandchild3": 309, "isinst": [309, 332], "synchron": [309, 344, 448], "revert": [309, 327, 372, 374, 502], "parmeterdefinit": [309, 344], "ndensiti": 309, "rxnrate": 309, "nf": 309, "compris": [309, 502], "rabc": 309, "implic": [309, 339], "unclear": 309, "__exit__": 309, "xssuffix": 309, "_label_": 309, "rxn": 309, "n3n": 309, "tediou": [310, 480], "autom": [310, 415, 447, 459, 479, 492, 502], "assemblyaxiallinkag": [310, 311, 313], "getdefaultreferenceassem": [310, 311, 313], "makeassemsabletosnaptouniformmesh": [310, 311, 313], "expansiondata": [310, 311, 313, 322], "getsolidcompon": [310, 311, 314, 322], "generalparametersweepconvert": [310, 318], "parametersweepconvert": [310, 318, 319], "custommodifi": [310, 318, 319], "test_axialexpansionchang": [310, 321, 483], "axialexpansiontestbas": [310, 321, 322], "testaxialexpansionheight": [310, 321, 322], "testconserv": [310, 321, 322], "testmanagecoremesh": [310, 321, 322], "testexcept": [310, 321, 322], "testdeterminetargetcompon": [310, 321, 322], "testgetsolidcompon": [310, 321, 322], "testinputheightsconsideredhot": [310, 321, 322], "checkcoldblockheight": [310, 321, 322], "testlinkag": [310, 321, 322], "buildtestassemblywithfakemateri": [310, 321, 322], "fakemat": [310, 321, 322], "fakematexcept": [310, 321, 322], "test_blockconvert": [310, 321], "buildsimplefuelblocknegativearea": [310, 321, 323], "testblockconvert": [310, 321, 323], "testtocircl": [310, 321, 323], "buildcontrolblockwithlinkednegativeareacompon": [310, 321, 323], "test_geometryconvert": [310, 321], "testgeometryconvert": [310, 321, 324], "testhextorzconvert": [310, 321, 324], "testedgeassemblychang": [310, 321, 324], "testthirdcorehextofullcorechang": [310, 321, 324], "test_meshconvert": [310, 321], "testrzreactormeshconvert": [310, 321, 325], "test_pintypeblockconvert": [310, 321], "testpintypeconvert": [310, 321, 326], "test_uniformmesh": [310, 321], "dummyfluxopt": [310, 321, 327], "testconverterfactori": [310, 321, 327], "testassemblyuniformmesh": [310, 321, 327], "testuniformmeshgener": [310, 321, 327], "testuniformmeshcompon": [310, 321, 327], "applynonuniformheightdistribut": [310, 321, 327], "testuniformmesh": [310, 321, 327], "testgammauniformmesh": [310, 321, 327], "testparamconvers": [310, 321, 327], "testuniformmeshnonuniformassemflag": [310, 321, 327], "dissolvecomponentintocompon": [310, 315], "restablishlink": [310, 315], "plotconvertedblock": [310, 315, 459], "addr": [310, 316, 324], "createhomogenizedrztblock": [310, 316], "plotconvertedreactor": [310, 316, 328, 460], "expected_input_symmetri": [310, 316], "restorepreviousgeometri": [310, 316], "addedgeassembli": [310, 316], "removeedgeassembli": [310, 316], "generatemesh": [310, 317], "writemeshdata": [310, 317], "setringstoconvert": [310, 317], "setaxialmesh": [310, 317], "setthetamesh": [310, 317], "generatecommonmesh": [310, 327, 328], "reactorparammappingcategori": [310, 328], "blockparammappingcategori": [310, 328], "applystatetoorigin": [310, 327, 328], "setassemblystatefromoverlap": [310, 328], "clearstateonassembli": [310, 328], "updatereactionr": [310, 328], "paramsett": [310, 328], "paramgett": [310, 328], "expandcolddimstohot": [311, 313], "performprescribedaxialexpans": [311, 313], "performthermalaxialexpans": [311, 313], "setassembli": [311, 313], "applycoldheightmassincreas": [311, 313], "axiallyexpandassembli": [311, 313], "managecoremesh": [311, 313], "setexpansionfactor": [311, 314], "updatecomponenttempsby1dtempfield": [311, 314], "updatecomponenttemp": [311, 314], "computethermalexpansionfactor": [311, 314], "getexpansionfactor": [311, 314], "determinetargetcompon": [311, 314, 322], "istargetcompon": [311, 314], "stdassem": 312, "linkag": [312, 313, 322], "linkedblock": 312, "linkedcompon": 312, "nonuniformassemflag": [313, 502], "referenceassembli": 313, "isdetailedaxialexpans": 313, "disjoint": 313, "finest": 313, "componentlst": [313, 314], "setfuel": [313, 314], "tempgrid": [313, 314, 322], "tempfield": [313, 314], "expandfromtinputtothot": [313, 314], "perfectli": [313, 388, 450], "gradient": 313, "loss": [313, 497, 498, 502], "tall": [313, 334, 493], "cheap": [313, 480], "oldmesh": 313, "_isfuellock": [314, 322], "expfrac": 314, "l1": [314, 322], "retriv": 314, "flagofinterest": 314, "_componentdeterminesblockheight": [314, 322], "sourceblock": [315, 459], "solutenam": 315, "solventnam": 315, "minid": 315, "_sourceblock": 315, "solvent": [315, 323], "dissolv": [315, 323], "solutelink": 315, "sane": 315, "specifiedminid": 315, "_verifyexpans": 315, "farthest": 315, "driverfuelblock": [315, 459], "concentr": [315, 502], "surround": [315, 479, 502], "mcc3": 315, "pincomponentsring1": 315, "pincomponentsring2": 315, "nonpin": 315, "annulu": [315, 493, 502], "radii": 315, "sidelength": 315, "disttorodcent": 315, "numrod": 315, "rodradii": 315, "radiilist": 315, "radtorodcent": 315, "thicknessoneachsid": 315, "r_1": 315, "equiv": 315, "r_2": 315, "texttt": 315, "reactorconvert": 316, "usemostcommonxsid": 316, "expandreactor": 316, "geomconv": 316, "newr": 316, "convreactor": [316, 328, 460], "dif3dinterfac": 316, "dif3drz": 316, "rzgeom_actu": 316, "overwritelist": 316, "ringstoadd": 316, "furthest": [316, 497], "converterset": [316, 317, 460], "stricthomogen": 316, "rztheta": [316, 325, 340, 480], "uniformthetamesh": [316, 317, 460], "thetabin": [316, 317, 460], "radialconversiontyp": [316, 460], "axialconversiontyp": [316, 460], "_rzthetareactormeshconverterbyaxialcoordin": [316, 317], "_rzthetareactormeshconverterbyaxialbin": [316, 317], "homogenizeaxiallybyflag": 316, "byringcomposit": 316, "radialmesh": 316, "homblock": 316, "loweraxialz": 316, "upperaxialz": 316, "radialthetazoneassem": 316, "fnamebas": 316, "coremap": [316, 487, 493], "explan": 316, "myreactor": 316, "sourcereactor": [316, 328], "undo": 316, "edgechang": 316, "difnt": 316, "paramstoscalesubset": 316, "_rzthetareactormeshconverterbyringcomposit": 317, "_rzthetareactormeshconverterbyaxialflag": 317, "inputlist": 317, "listnam": 317, "expectedvalu": 317, "adjustlastvalu": 317, "totalnumdatapoint": 317, "numperbin": 317, "minnum": 317, "settingtomodifi": 319, "applycustomperturb": 319, "sd": 320, "fuel_r": 320, "clad_ir": 320, "fuel_od": 320, "clad_id": 320, "steel_component_lst": [321, 322], "test_assemblyaxialexpansionheight": [321, 322], "expandassemformassconservationtest": [321, 322], "test_thermalexpansioncontractionconservation_simpl": [321, 322], "test_thermalexpansioncontractionconservation_complex": [321, 322], "complexconservationtest": [321, 322], "test_prescribedexpansioncontractionconserv": [321, 322], "test_targetcomponentmassconserv": [321, 322], "test_nomovementaclp": [321, 322], "test_reset": [321, 322], "test_computethermalexpansionfactor": [321, 322], "test_managecoremesh": [321, 322], "test_istopdummyblockpres": [321, 322], "test_setexpansionfactor": [321, 322], "test_updatecomponenttempsby1dtempfieldvalueerror": [321, 322], "test_updatecomponenttempsby1dtempfieldruntimeerror": [321, 322], "test_assemblyaxialexpansionexcept": [321, 322], "test_isfuellock": [321, 322], "test_determinelink": [321, 322], "test_getlinkedcompon": [321, 322], "test_determinetargetcompon": [321, 322], "test_determinetargetcomponentblockwithmultipleflag": [321, 322], "test_specifytargetcomponent_notfound": [321, 322], "test_specifytargetcomponent_singlesolid": [321, 322], "test_specifytargetcomponet_multiplefound": [321, 322], "test_manuallysettargetcompon": [321, 322], "test_getsolidcompon": [321, 322], "test_coldassemblyexpans": [321, 322], "checkcoldheightblockmass": [321, 322], "test_overlappingsolidpin": [321, 322], "test_differentmultnotoverlap": [321, 322], "test_solidpinnotoverlappingannulu": [321, 322], "test_solidpinoverlappingwithannulu": [321, 322], "test_annularpinnotoverlappingwithannulu": [321, 322], "test_annularpinoverlappingwithannul": [321, 322], "test_thinannularpinoverlappingwiththickannulu": [321, 322], "test_annularhexoverlappingthickannularhex": [321, 322], "test_liquid": [321, 322], "test_unshapedcomponentandcircl": [321, 322], "test_dissolvewireintocool": [321, 323], "test_dissolvelinerintoclad": [321, 323], "test_dissolvemultipl": [321, 323], "test_dissolvezeroarea": [321, 323], "test_dissolveintozeroarea": [321, 323], "test_dissolvenegativearea": [321, 323], "test_dissolveintonegativearea": [321, 323], "test_build_nthr": [321, 323], "test_convert": [321, 323, 324], "test_converthexwithfueldriv": [321, 323], "test_converthexwithfueldriveronnegativecomponentareablock": [321, 323], "test_convertcartesianlatticewithfueldriv": [321, 323], "test_fromhex": [321, 323], "test_fromringofrod": [321, 323], "test_addr": [321, 324], "test_setnumberoffuelassem": [321, 324], "test_getassembliesinsector": [321, 324], "test_createhomogenizedrztblock": [321, 324], "test_edgeassembli": [321, 324], "test_growtofullcorefromthirdcor": [321, 324], "test_initnewfullreactor": [321, 324], "test_skipgrowtofullcorewhenalreadyfullcor": [321, 324], "test_meshbyringcompositionaxialbinssmallcor": [321, 325], "test_meshbyringcompositionaxialcoordinatessmallcor": [321, 325], "test_meshbyringcompositionaxialflagssmallcor": [321, 325], "test_meshbyringcompositionaxialbinslargecor": [321, 325], "test_meshbyringcompositionaxialcoordinateslargecor": [321, 325], "test_meshbyringcompositionaxialflagslargecor": [321, 325], "test_adjustcladthicknessbyod": [321, 326], "test_adjustcladthicknessbyid": [321, 326], "test_converterfactori": [321, 327], "test_makeassemwithuniformmesh": [321, 327], "test_makeassemwithuniformmeshsubmesh": [321, 327], "test_makeassemuniformmeshparammappingsamemesh": [321, 327], "test_clearassemblyst": [321, 327], "test_computeaverageaxialmesh": [321, 327], "test_filtermesh": [321, 327], "test_filteredtopandbottom": [321, 327], "test_generatecommonmesh": [321, 327], "test_blueprintcopi": [321, 327], "test_convertnumberdens": [321, 327], "test_applystatetoorigin": [321, 327], "test_setstatefromoverlap": [321, 327], "test_reactorconvers": [321, 327], "137438953472": [322, 331], "274877906944": [322, 331], "549755813888": [322, 331], "1099511627776": [322, 331], "17592186044416": [322, 331], "140737488355328": [322, 331], "2251799813685248": [322, 331], "72057594037927936": [322, 331], "coldtemp": 322, "hotinlettemp": 322, "360": [322, 489, 502], "numtempgridpt": 322, "tempstep": 322, "inlet": [322, 489, 497, 498, 502], "nomin": [322, 480, 497, 498], "metric": [322, 480], "isotherm": 322, "caught": 322, "target_flags_in_preferred_ord": 322, "specifytargetcompon": 322, "r_armi_inp_cold_height": 322, "refsmallreactorbas": 322, "deltat": [322, 489], "bstd": 322, "bexp": 322, "flagtyp": 322, "underpredict": 322, "asserttyp": 322, "strforassert": 322, "componentstotest": 322, "assertionbool": 322, "commonarg": 322, "typea": 322, "typeb": 322, "annuli": 322, "setnumberoffuelassem": 324, "sourceassem": [327, 328], "newassem": [327, 493], "_decuspaxialmesh": 327, "dest": [327, 396], "pden": [327, 412, 475, 480, 487, 489, 498], "lost": [328, 448], "finer": [328, 493], "uniformreactor": 328, "minimummeshs": 328, "decusp": [328, 483], "uniformmeshminimums": [328, 502], "_computeaverageaxialmesh": 328, "cusp": 328, "reactorparamstomap": 328, "blockparamstomap": 328, "_setparamstoupd": 328, "reactorparamnam": 328, "blockparamnam": 328, "newmesh": 328, "mapnumberdens": 328, "includepincoordin": 328, "sourceassembli": 328, "destinationassembli": 328, "int_": 328, "z_1": 328, "z_2": 328, "dz": 328, "piecewis": [328, 408], "smarter": 328, "param1": 328, "val1": [328, 413, 448], "param2": 328, "val2": [328, 413, 448], "b2": 328, "pinquant": [328, 342, 345, 483], "powergener": [328, 498], "powerneutron": [328, 498], "powergamma": [328, 498], "paramdef": [328, 342, 344, 345], "overlappingblockinfo": 328, "h_i": 328, "refin": [329, 483, 502], "powerdens": [329, 483, 500, 502], "kghm": [329, 479, 483, 498], "kgfi": [329, 460, 483, 498], "trackassem": [329, 483, 502], "spend": [329, 452, 480], "constrain": [329, 340, 459, 460, 482, 493], "ringnum": 329, "overridecircularringmod": [329, 360], "startindex": [329, 349], "unoccupi": 329, "chargecycl": [329, 497], "indexbas": 329, "maxr": 329, "nring": 329, "nassmwithblank": 329, "read1d": 329, "assemtypespec": 329, "maxblock": 329, "circularringmod": [329, 502], "alist": 329, "fullcor": 329, "numedgeassem": 329, "_modifygeometryafterload": 329, "ringpitch": 329, "a0001": [329, 487], "sortkei": 329, "includebolassem": 329, "includesfp": 329, "includeal": 329, "similarli": [329, 344, 451, 494, 502], "_children": 329, "nozzletyp": [329, 497, 502], "nozzleid": 329, "a0001a": 329, "blocksbynam": 329, "blocksbylocnam": 329, "regener": [329, 494, 502], "btype": 329, "slipperi": 329, "detachallassembli": 329, "regrow": 329, "suffic": 329, "categor": [329, 331, 360, 372, 487], "broaden": [329, 505], "coolantnuclid": 329, "fuelnuclid": 329, "structurenuclid": 329, "assemblylevel": 329, "loccont": 329, "speedup": [329, 438, 444], "speed": [329, 483, 485, 502], "energyord": 329, "extsrc": [329, 498], "nxg": 329, "locationstr": 329, "assemblynam": 329, "foundassembli": 329, "showblank": 329, "duplicateassembliesonreflectiveboundari": 329, "neighbor": [329, 338, 340, 360, 484], "east": 329, "west": 329, "south": 329, "border": [329, 466], "asymmetr": 329, "getsymmetricequival": [329, 333, 334, 335, 337, 338, 339, 341], "assemblytyp": 329, "allflux": 329, "symmetrylineid": 329, "applysubmesh": 329, "endpoint": [329, 340], "meshval": 329, "imbalanc": 329, "trz": [329, 358], "xyz": [329, 469, 470], "float_dimension_decim": [329, 483], "9th": 329, "10th": 329, "repetit": [329, 340, 438, 498, 502], "heightcm": 329, "meshlist": 329, "extraassem": 329, "mcpnxt": 329, "flux2weight": 329, "avgtemp": 329, "pitchincm": 329, "shift": [329, 482, 502], "lowestfuelheightincm": 329, "coreparametercollect": 329, "zonedefinit": [329, 363, 502], "002": [329, 363, 482, 487, 502], "simplest": [330, 360, 492, 502], "baseclass": 330, "freeli": 330, "2311582653024": 330, "dual": 330, "2311590971136": 330, "bind": [331, 344, 445, 502], "noun": 331, "adject": 331, "disambigu": 331, "bitfield": 331, "widen": 331, "led": [331, 502], "clearli": [331, 363, 502], "stori": 331, "substr": 331, "decid": [331, 346, 452], "canon": [331, 393], "mention": [331, 450], "plenti": 331, "lta": 331, "distinguish": [331, 494], "circul": 331, "bundl": [331, 493, 497, 498, 500], "128": [331, 345, 460, 461, 480], "256": [331, 345], "512": 331, "1024": 331, "2048": 331, "4096": 331, "8192": 331, "16384": 331, "32768": 331, "65536": 331, "131072": 331, "262144": 331, "524288": 331, "1048576": 331, "2097152": 331, "4194304": 331, "8388608": 331, "16777216": 331, "33554432": 331, "67108864": 331, "134217728": 331, "268435456": 331, "536870912": 331, "1073741824": 331, "2147483648": 331, "4294967296": 331, "8589934592": 331, "17179869184": 331, "34359738368": 331, "68719476736": 331, "2199023255552": 331, "4398046511104": 331, "8796093022208": 331, "35184372088832": 331, "70368744177664": 331, "281474976710656": 331, "562949953421312": 331, "1125899906842624": 331, "4503599627370496": 331, "9007199254740992": 331, "18014398509481984": 331, "36028797018963968": 331, "144115188075855872": 331, "288230376151711744": 331, "576460752303423488": 331, "1152921504606846976": 331, "2305843009213693952": 331, "4611686018427387904": 331, "9223372036854775808": 331, "18446744073709551616": 331, "36893488147419103232": 331, "straightforward": [332, 345, 493, 494, 502], "quarter": [332, 340, 494, 502], "harder": [332, 451], "proceed": [332, 481, 502, 508], "reliev": 332, "elif": [332, 450], "instrument": 332, "forbid": 332, "shapestr": 332, "symmetrystr": 332, "throughcenterassembli": 332, "symmetryinput": 332, "outcom": 332, "fromrectangl": [333, 335], "getglobalcoordin": [333, 339, 467, 468, 469, 470, 475, 487, 489, 494], "test_grid": [333, 416, 433], "testspatialloc": 333, "test_recurs": 333, "getringpo": [333, 335, 338, 339, 340, 341], "indicestoringpo": [333, 338], "fromncel": [333, 334, 466], "locatorindomain": [333, 334, 335, 337, 338, 341], "getindicesfromringandpo": [333, 334, 335, 338, 340, 341], "getminimumr": [333, 334, 335, 338, 340, 341], "getpositionsinr": [333, 334, 335, 338, 340, 341], "overlapswhichsymmetrylin": [333, 334, 335, 337, 338, 341], "changepitch": [333, 335, 338], "isaxialonli": [333, 337, 340], "getcoordin": [333, 337, 340, 341], "getcellbas": [333, 337, 340], "getcelltop": [333, 337, 340], "cornersup": [333, 338, 485], "frompitch": [333, 338, 466, 468], "getneighboringcellindic": [333, 338, 340, 484], "trianglecoord": [333, 338], "isinfirstthird": [333, 338], "generatesortedhexlocationlist": [333, 338, 468], "detachedcopi": [333, 339], "parentloc": [333, 339], "getcompleteindic": [333, 339], "getlocalcoordin": [333, 339], "getglobalcellbas": [333, 339], "getglobalcelltop": [333, 339], "distanceto": [333, 339], "unitsteplimit": [333, 334, 335, 338, 340, 341], "unitstep": [333, 334, 335, 338, 340, 341, 469], "getaboveandbelowcellindic": [333, 340], "getindexbound": [333, 340], "getbound": [333, 340], "getlocatorfromringandpo": [333, 340], "getallindic": [333, 340], "fromgeom": [333, 341], "indicesofbound": [333, 341], "__init_": 334, "numcel": [334, 406], "symmetryoverlap": [334, 335, 337, 338], "noreturn": [334, 335, 341], "tricker": 335, "lai": 335, "illustr": [335, 338], "draw": [335, 415, 424, 476], "ax": [335, 339, 340, 408, 412, 464, 466, 468, 469, 470, 473, 476], "numr": [335, 338, 406], "isoffset": 335, "manhattan": 335, "quadrant": [335, 340], "diagon": [335, 338], "childrenbyloc": [335, 445], "_isthroughcent": 335, "xw": 335, "yw": 335, "dx": 337, "boundary_cent": [337, 338], "nativecoord": [337, 339, 340, 341], "hashabl": 337, "happi": [337, 447, 502], "__getstate__": [337, 344, 359, 377, 390], "__setstate__": 337, "_____": 338, "Being": [338, 480], "newpitchcm": 338, "includetopedg": 338, "nloc": 338, "a3001": 338, "a3003": 338, "immut": [339, 345, 366, 413, 482, 483], "unbeliev": 339, "inexplic": [339, 412, 414], "strip": 339, "annoi": 339, "tagalong": 339, "rack": 339, "awkward": 339, "ok": [339, 488], "todo": [339, 451], "mygrid": 339, "parentgrid": 339, "vice": 340, "versa": 340, "dxi": 340, "dxj": 340, "jxk": 340, "dyi": 340, "dyj": 340, "dyk": 340, "dzi": 340, "dzj": 340, "dzk": 340, "dmn": 340, "0th": 340, "settl": [340, 497], "struggl": [340, 505], "orthogon": 340, "wast": 340, "compact": 340, "intuit": [340, 346, 502], "phantom": 340, "2x": 340, "backrefer": 340, "cleaner": [340, 345, 421], "disadvantag": 340, "pollut": 340, "recreat": 340, "exsist": 340, "dens": [340, 504], "unphys": [340, 489], "zeta": 341, "2pi": [341, 440], "geominfo": 341, "readgeomxml": 341, "rad0": 341, "rad1": 341, "theta0": 341, "theta1": 341, "0001": [341, 492], "350": 342, "hidden": [342, 344], "_p_": 342, "_p_cyclelength": 342, "circumv": 342, "rational": 342, "behind": [342, 450, 482, 490, 493], "5e13": 342, "fueltemp": 342, "217": [342, 474, 491], "curiou": 342, "heightbol": [342, 498], "collectiontyp": [342, 345], "suitabl": 342, "experi": [342, 479, 480, 502], "thefreedictionari": 342, "atmospher": 342, "meriam": 342, "webster": 342, "descriptor": [342, 344], "protocol": [342, 344, 396, 479], "suggest": [342, 373, 374, 442, 502], "all_definit": 342, "secret": 342, "pep": 342, "412": 342, "protect": [342, 451, 483], "__slots__": 342, "lite": 342, "roundabout": 342, "pain": 342, "consumpt": 342, "pylint": [342, 483], "overwhelm": 342, "unsustain": 342, "__dict__": 342, "slot": 342, "becam": [342, 404], "oner": [342, 346], "tradit": [342, 345, 480], "__something__": 342, "applyparamet": [342, 344], "definint": 342, "getsyncdata": [342, 344], "cumulativeovercycl": [342, 345], "assigninblueprint": [342, 345], "retainonreplac": [342, 345], "fluxquant": [342, 345], "multigroupquant": [342, 345], "reactivitycoeffici": [342, 345], "volume_integr": [342, 345, 485], "fieldnam": [342, 345], "savetodb": [342, 345, 502], "atloc": [342, 344, 345, 359], "hascategori": [342, 345, 359, 485], "incategori": [342, 345], "unchanged_sinc": [342, 345], "fortyp": [342, 345], "resetassignmentflag": [342, 345], "setassignmentflag": [342, 345], "bynameandtyp": [342, 345], "bynameandcollectiontyp": [342, 345], "lock": [342, 344, 345, 346, 413, 442, 483, 498], "towritetodb": [342, 345, 359], "associateparameterdefinitioncollect": [342, 345], "parameterfactori": 343, "setparam": 343, "27977": 344, "thread": [344, 396, 489], "gil": 344, "_state": [344, 359, 390], "illeg": [344, 413], "redefin": 344, "_backup": 344, "_hist": 344, "transmit": [344, 448], "_allfield": [344, 359, 390], "accessor": 344, "proactiv": 344, "somedict": 344, "applydefinit": 344, "since_last_distribute_st": 344, "parmatercollect": 344, "proxi": 344, "accumul": [345, 493, 498, 499], "mark": [345, 447, 451, 502], "deseri": [345, 372], "datatyp": 345, "nativ": [345, 404, 448, 506], "wrote": 345, "dilig": 345, "paramstr": 345, "reassign": 345, "myparametercollect": 345, "diet": 345, "_p_speed": 345, "_representedtyp": 345, "__getitem__": 345, "categorynam": 345, "mask": 345, "complementari": 345, "compositetyp": 345, "vipan": 345, "htdoc": 345, "bitwisehelp": 345, "assignedmask": 345, "bitmask": 345, "syntax": [345, 502], "brief": [345, 487], "mutabl": [345, 404, 448], "engag": [345, 346, 444], "mimic": [346, 404], "blindli": 346, "parametercollectionclass": 346, "bparametercollect": 346, "needn": 346, "ourselv": 346, "sausag": 346, "profici": 346, "calss": 346, "paramt": 347, "writeabl": 347, "reactorparametercollect": 348, "pond": 349, "defunct": [350, 484], "tri": [350, 410, 415, 502], "modifiedpath": 350, "eqpathindex": 350, "eqpathcycl": 350, "outputfilenam": [350, 409], "geoemtri": 350, "test_sortnoloc": [351, 352], "test_uthzrmateri": [351, 352], "test_isonwhichsymmetrylin": [351, 352], "test_notesparamet": [351, 352], "test_it": [351, 352], "test_len": [351, 352], "test_append": [351, 352], "test_extend": [351, 352, 416, 423], "test_moveto": [351, 352], "test_getnam": [351, 352, 355], "test_getnum": [351, 352], "test_getloc": [351, 352], "test_getarea": [351, 352, 353, 354], "test_getvolum": [351, 352, 354], "test_adjustresolut": [351, 352], "test_getaxialmesh": [351, 352], "test_calculatezcoord": [351, 352], "test_gettotalheight": [351, 352], "test_getheight": [351, 352], "test_getreactiveheight": [351, 352], "test_getfissilemass": [351, 352, 355], "test_getmass": [351, 352, 353, 360], "test_getag": [351, 352], "test_makeaxialsnaplist": [351, 352], "test_snapaxialmeshtorefer": [351, 352], "test_updatefromassembli": [351, 352], "test_hasflag": [351, 352, 353, 355], "test_renameblocksaccordingtoassemblynum": [351, 352], "test_getblock": [351, 352], "test_getfirstblock": [351, 352], "test_getfirstblockbytyp": [351, 352], "test_getblockdata": [351, 352], "test_getmaxparam": [351, 352, 355], "test_getelevationsmatchingparamvalu": [351, 352], "test_calcavgparam": [351, 352], "test_calctotalparam": [351, 352], "test_reattach": [351, 352], "test_reestablishblockord": [351, 352], "test_countblocksoftyp": [351, 352, 360], "test_getdim": [351, 352], "test_getdominantmateri": [351, 352, 360], "test_iter": [351, 352, 362, 396, 416, 423], "test_getblocksandz": [351, 352], "test_getblocksbetweenelev": [351, 352], "test_getparamvaluesatz": [351, 352], "test_hascontinuouscoolantchannel": [351, 352], "test_carestiancoordin": [351, 352], "test_pinplenumvolum": [351, 352], "test_averageplenumtemperatur": [351, 352], "test_rot": [351, 352], "test_assem_block_typ": [351, 352], "test_assem_hex_typ": [351, 352], "test_getbindexfromzindex": [351, 352], "test_getelevationboundariesbyblocktyp": [351, 352], "test_snapaxialmeshtoreferenceconservingmassbasedonblockignit": [351, 352], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield": [351, 352], "test_areacheck": [351, 352], "test_updatedetailednden": [351, 353], "test_getsmeardens": [351, 353], "test_getsmeardensitymultiplelin": [351, 353], "test_getsmeardensityedgecas": [351, 353], "test_timenodeparam": [351, 353], "test_gettyp": [351, 353], "test_settyp": [351, 353], "test_homogenizedmixtur": [351, 353], "test_getxstyp": [351, 353], "test_27b_setbugroup": [351, 353], "test_setzeroheight": [351, 353], "test_getvolumefractionswithzeroheight": [351, 353], "test_getvolumefractionwithoutpar": [351, 353], "test_cleardens": [351, 353], "test_removemass": [351, 353], "test_setnumberdens": [351, 353, 354], "test_setmass": [351, 353, 355], "test_gettotalmass": [351, 353], "test_replaceblockwithblock": [351, 353], "test_getwettedperimet": [351, 353], "test_getflowareaperpin": [351, 353], "test_getflowarea": [351, 353], "test_gethydraulicdiamet": [351, 353], "test_adjustuenrich": [351, 353], "test_setloc": [351, 353], "test_setbulimitinfo": [351, 353], "test_gettotalnden": [351, 353], "test_gethmden": [351, 353], "test_getfissilemassenrich": [351, 353], "test_getmicrosuffix": [351, 353], "test_geturaniummassenrich": [351, 353], "test_geturaniumnumenrich": [351, 353], "test_getnumberofatom": [351, 353], "test_getpu": [351, 353], "test_adjustdens": [351, 353], "test_completeinitialload": [351, 353], "test_hascompon": [351, 353], "test_getcomponentnam": [351, 353], "test_getcompon": [351, 353], "test_getcomponentsofshap": [351, 353], "test_getcomponentsofmateri": [351, 353], "test_getcomponentbynam": [351, 353], "test_getsortedcomponentsinsideofcomponentclad": [351, 353], "test_getsortedcomponentsinsideofcomponentduct": [351, 353], "test_getnumcompon": [351, 353], "test_getnumpin": [351, 353], "test_setlinpowbypin": [351, 353], "test_getcomponentareafrac": [351, 353], "test_100_getpinpitch": [351, 353], "test_101_getpitch": [351, 353], "test_102_setpitch": [351, 353], "test_106_getareafract": [351, 353], "test_rotatepin": [351, 353], "test_expandelementaltoisotop": [351, 353], "test_expandallelementalstoisotop": [351, 353], "test_setpitch": [351, 353], "test_setimportantparam": [351, 353], "test_getmfp": [351, 353], "test_consistentmassdensityvolumebetweencoldblockandcoldcompon": [351, 353], "test_consistentmassdensityvolumebetweenhotblockandhotcompon": [351, 353], "test_breakfuelcomponentsintoindividu": [351, 353], "test_pinmgflux": [351, 353], "test_getcomponentsinlinkedord": [351, 353], "test_mergewithblock": [351, 353], "test_getdimens": [351, 353, 354], "test_getplenumpin": [351, 353], "test_haspinpitch": [351, 353], "test_getreactionr": [351, 353, 355], "test_foundreactor": [351, 353], "test_noblueprint": [351, 353], "test_gettotalenergygenerationconst": [351, 353], "test_getfissionenergydepositionconst": [351, 353], "test_getcaptureenergygenerationconst": [351, 353], "test_getneutronenergydepositionconst": [351, 353], "test_getgammaenergydepositionconst": [351, 353], "test_negativevolum": [351, 353, 354], "test_component_typ": [351, 353], "test_coord": [351, 353], "test_block_dim": [351, 353], "test_symmetryfactor": [351, 353, 358], "test_retainst": [351, 353], "test_getpincoord": [351, 353], "test_getpitchhomogeneousblock": [351, 353], "test_getductpitch": [351, 353], "test_getpincenterflattoflat": [351, 353], "test_gridcr": [351, 353], "test_gridnumpinsandloc": [351, 353], "test_gridnotcreatedmultiplemultipl": [351, 353], "test_radii": [351, 353], "test_theta": [351, 353], "test_axi": [351, 353], "test_verifyblockdim": [351, 353], "test_getthetarzgrid": [351, 353], "test_getpitchsquar": [351, 353], "test_getcartesiangrid": [351, 353], "test_heightexpansiondiffer": [351, 353], "test_massfuelheatup": [351, 353], "test_masscladheatup": [351, 353], "test_massductheatup": [351, 353], "test_masscoolheatup": [351, 353], "test_dimensionductheatup": [351, 353], "test_coldmass": [351, 353], "test_massconsist": [351, 353], "test_orient": [351, 353], "getcirclevoiddict": [351, 354], "getcirclefueldict": [351, 354], "test_factori": [351, 354], "test_componentinitializationanddupl": [351, 354], "test_factorybadshapenam": [351, 354], "test_invalidcoolantcomponentassign": [351, 354], "componentcl": [351, 354], "componentmateri": [351, 354], "componentdim": [351, 354], "test_initializecomponentmateri": [351, 354], "test_solid_materi": [351, 354], "test_cmp": [351, 354], "test_nonzero": [351, 354], "test_getcomponentarea": [351, 354], "test_getboundingcircleouterdiamet": [351, 354], "test_component_less_than": [351, 354], "test_fromcompon": [351, 354], "test_preservemassduringthermalexpans": [351, 354], "test_volumeafterclearcach": [351, 354], "test_densityconsist": [351, 354], "test_computevolum": [351, 354], "test_getareacoldtru": [351, 354], "test_getthermalexpansionfactorconservedmassbylinearexpansionperc": [351, 354], "test_thermallyexpand": [351, 354], "test_getcircleinnerdiamet": [351, 354], "test_dimensionthermallyexpand": [351, 354], "test_componentinteractionslinkingbydimens": [351, 354], "test_badcomponentnam": [351, 354], "test_componentinteractionslinkingbysubtract": [351, 354], "test_changenumberdens": [351, 354], "test_fuelmass": [351, 354], "test_theoreticaldensitysett": [351, 354], "tcold": [351, 354, 487], "twarm": [351, 354], "coldouterdiamet": [351, 354], "test_ht9expans": [351, 354], "test_uzrexpans": [351, 354], "test_b4cexpans": [351, 354], "runexpansiontest": [351, 354], "componentmassindependentofinputtemp": [351, 354], "expansionconservationhotheightdefin": [351, 354], "expansionconservationcoldheightdefin": [351, 354], "test_negativearea": [351, 354], "test_getperimet": [351, 354], "dimstotestexpans": [351, 354], "setclassdim": [351, 354], "test_validparamet": [351, 354], "test_updatedim": [351, 354], "test_setmassfrac": [351, 354], "test_setmassfraconcomponentmateri": [351, 354], "test_adjustmassfrac_invalid": [351, 354], "test_adjustmassfrac_u235": [351, 354], "test_adjustmassfrac_u": [351, 354], "test_adjustmassfrac_clear_zr": [351, 354], "test_adjustmassfrac_set_zr": [351, 354], "test_adjustmassfrac_leave_sam": [351, 354], "test_getenrich": [351, 354], "test_finalizeloaddbadjuststd": [351, 354], "inactivenuclid": [351, 355], "elementstoexpand": [351, 355], "test_itercompon": [351, 355], "test_sort": [351, 355], "test_arechildernoftyp": [351, 355], "test_containsatleastonechildoftyp": [351, 355], "test_containsonlychildrenoftyp": [351, 355], "test_namecontain": [351, 355, 379, 386], "test_nucspec": [351, 355], "test_hasflagssubstr": [351, 355], "test_hasflagsnotypespecifi": [351, 355], "test_getboundingcirlceouterdiamet": [351, 355], "test_getparamnam": [351, 355], "test_updatevolum": [351, 355], "test_expandlfp": [351, 355], "test_setchildrenlumpedfissionproduct": [351, 355], "test_requireslumpedfissionproduct": [351, 355], "test_getlumpedfissionproductsifnecessarynullcas": [351, 355], "test_getintegratedmgflux": [351, 355], "test_syncparamet": [351, 355], "blueprintyaml": [351, 355], "test_ord": [351, 355], "test_sum": [351, 355], "test_constituentreport": [351, 355], "test_getfuelmass": [351, 355], "test_getchildrenincludemateri": [351, 355], "test_gethmmass": [351, 355], "test_getfpmass": [351, 355], "test_getminparam": [351, 355], "testflagsa": [351, 355], "testflagsb": [351, 355], "bprime": [351, 355], "test_flagseri": [351, 355], "test_flagconvers": [351, 355], "test_getnumberdensitieswithexpandedfissionproduct": [351, 355], "test_dimensionreport": [351, 355], "test_getatomicweight": [351, 355], "test_containsheavymet": [351, 355], "test_copyparamstochildren": [351, 355], "test_copyparamsfrom": [351, 355], "test_getreactionratedict": [351, 355], "test_constructor": [351, 356], "test_represent": [351, 356], "test_parentreactor": [351, 356], "test_getassembli": [351, 356], "test_updatenumberofcolumn": [351, 356], "test_getnextloc": [351, 356], "test_normalizenam": [351, 356, 360], "test_addlikedict": [351, 356], "test_addlikeattribut": [351, 356], "test_fromstr": [351, 357, 358], "test_fromstringwithnumb": [351, 357], "test_flagsdefinedwithnumb": [351, 357], "test_flagstoandfromstr": [351, 357], "test_tostringalphabet": [351, 357], "test_fromstringstrict": [351, 357], "test_lookup": [351, 357], "test_convertsstringswithnonflag": [351, 357], "test_defaultisfals": [351, 357], "test_str": [351, 358], "test_fromani": [351, 358], "test_baseconstructor": [351, 358], "test_domaintypenul": [351, 358], "test_checkvalidgeomsymmetrycombo": [351, 358], "test_readhexgeomxml": [351, 358], "test_readreactor": [351, 358], "test_asciimap": [351, 358, 396, 416], "test_readasciimap": [351, 358], "test_readtrzgeomxml": [351, 358], "test_trzyamlio": [351, 358], "test_mutabledefaultsnotsupport": [351, 359], "test_writesomeparamstodb": [351, 359], "test_serializer_pack_unpack": [351, 359], "test_parampropertydoesnotconflict": [351, 359], "test_parampropertydoesnotconflictwithnonedefault": [351, 359], "test_getwithoutdefaultraisesparametererror": [351, 359], "test_attemptingtosetparamwithoutsetterfail": [351, 359], "test_sett": [351, 359], "test_settergetterbas": [351, 359], "test_cannotdefineparameterwithsamenam": [351, 359], "test_paramdefinitionscompos": [351, 359], "test_cannotdefineparameterwithsamenameforcollectionsubclass": [351, 359], "test_cannotcreateattrbuteonparametercollectionsubclass": [351, 359], "test_cannotcreateinstanceof_nodefault": [351, 359], "test_cannotcreateinstanceof_undefin": [351, 359], "test_defaultloc": [351, 359], "test_categori": [351, 359], "test_parametercollectionshave__slots__": [351, 359], "scopeparamcollect": [351, 359], "test_oncategori": [351, 359], "test_onloc": [351, 359], "test_compl": [351, 359], "test_makeparametersreadonli": [351, 359], "test_coresfp": [351, 360], "test_factorysortset": [351, 360], "test_getsetparamet": [351, 360], "test_sortchildren": [351, 360], "test_sortassembyr": [351, 360], "test_gettotalparam": [351, 360], "test_geomtyp": [351, 360], "test_getblocksbyindic": [351, 360], "test_getallxssuffix": [351, 360], "test_genblocksbylocnam": [351, 360], "test_setpitchuniform": [351, 360], "test_setb10voloncr": [351, 360], "test_countfuelaxialblock": [351, 360], "test_getfirstfuelblockaxialnod": [351, 360], "test_getmaxassembliesinhexr": [351, 360], "test_getmaxnumpin": [351, 360], "test_addmultiplecor": [351, 360], "test_getreactor": [351, 360], "test_addmorenod": [351, 360], "test_findaxialmeshindexof": [351, 360], "test_findallaxialmeshpoint": [351, 360], "test_findallaxialmeshpoints_wsubmesh": [351, 360], "test_findallazimeshpoint": [351, 360], "test_findallradmeshpoint": [351, 360], "test_findneighbor": [351, 360], "test_getassembliesincircular": [351, 360], "test_getassembliesinhexr": [351, 360], "test_genassembliesaddedthiscycl": [351, 360], "test_getassemblypitch": [351, 360], "test_getnumassemblieswithallringsfilledout": [351, 360], "test_getnumassemblieswithallringsfilledoutbipass": [351, 360], "test_getnumenergygroup": [351, 360], "test_getminimumpercentfluxinfuel": [351, 360], "test_getassemblywithloc": [351, 360], "test_getassemblywithnam": [351, 360], "test_restorereactor": [351, 360], "test_differentnuclidemodel": [351, 360], "test_getsymmetryfactor": [351, 360], "test_getassembliesonsymmetrylin": [351, 360], "test_saveallflux": [351, 360], "test_getfluxvector": [351, 360], "test_getfuelbottomheight": [351, 360], "test_getgridbound": [351, 360], "test_loc": [351, 360], "test_removeassembli": [351, 360], "test_removeassemblynosfp": [351, 360], "test_removeassembliesinr": [351, 360], "test_removeassembliesinringbycount": [351, 360], "test_getnumr": [351, 360], "test_whennoassembli": [351, 360], "test_removeassembliesinringhex": [351, 360], "test_getnozzletyp": [351, 360], "test_createassemblyoftyp": [351, 360], "test_createfreshfe": [351, 360], "test_createassemblyoftypeexpandedcor": [351, 360], "test_getavgtemp": [351, 360], "test_getscalarevolut": [351, 360], "test_ifmissingspatialgrid": [351, 360], "test_pincoordsallblock": [351, 360], "test_nonuniformassem": [351, 360], "test_applythermalexpansion_coreconstruct": [351, 360], "test_updateblockbolheights_dbload": [351, 360], "test_buildmanualzon": [351, 360], "test_buildmanualzonesempti": [351, 360], "test_getnuclidecategori": [351, 360], "test_setpowerifnecessari": [351, 360], "test_findallmeshpoint": [351, 360, 361], "test_getassembliesinsquar": [351, 360], "test_getnuclidecategorieslog": [351, 360], "test_findneighborscartesian": [351, 360], "test_loadrzt": [351, 361], "test_loadrzt_reactor": [351, 361], "test_additem": [351, 362], "test_removeitem": [351, 362], "test_addloc": [351, 362], "test_removeloc": [351, 362], "test_repr": [351, 362], "test_dictionaryinterfac": [351, 362], "test_findzoneitisin": [351, 362], "test_getzoneloc": [351, 362], "test_getallloc": [351, 362], "test_summari": [351, 362], "test_sortzon": [351, 362], "uth": 352, "numblock": 352, "139933332923296": 352, "8660254": 352, "2500": 352, "carestiangrid": 352, "simlutan": 353, "165": 353, "evacu": 353, "pullabl": 353, "magicmock": 353, "mock_captur": 353, "mock_fiss": 353, "mock_method": 353, "__name__": [353, 364, 452, 474, 476, 489, 504], "unshap": 353, "neutronical": 353, "grown": [353, 480], "excess": [353, 412, 414], "veifi": 354, "141592653589793": 354, "demonst": 354, "tutori": [354, 442, 445, 447, 453, 465, 478, 480, 482, 483, 487, 489, 493, 494, 495, 502], "160": 354, "170": [354, 407], "dummycompositeparametercollect": 355, "dummyleafparametercollect": 355, "queryabl": 355, "block_metal_fuel": 355, "component_metal_fuel_fuel": 355, "component_metal_fuel_clad": 355, "450": [355, 464, 474, 487, 493, 494, 502], "component_metal_fuel_bond": 355, "component_metal_fuel_cool": 355, "component_metal_fuel_duct": 355, "block_oxide_fuel": 355, "compost": 355, "pickleabl": 357, "assort": [359, 400], "_writeparam": 359, "signifi": 359, "lifecycl": 359, "accident": [359, 393, 411, 480], "customset": 360, "inputfilepath": 360, "home": [360, 480, 487], "runner": [360, 487], "inputfilenam": [360, 467], "test_root": 360, "maxnumr": 360, "neeed": 360, "getgridbound": 360, "mockgetassembli": 360, "godiva": 361, "heu": 361, "zonetyp": 363, "heavier": 363, "chicken": 363, "egg": [363, 415], "zonenam": [363, 502], "zoneloc": 363, "defint": 363, "consol": 364, "logger": [364, 366, 380, 393, 502, 504], "getlogg": [364, 452, 504], "someexcept": 364, "mpirank": [364, 411], "logdir": 364, "indent": [364, 438, 502], "levelnam": 364, "msgtype": [364, 380], "mangl": 364, "dedupl": 364, "stub": 364, "intlevel": 364, "isstderr": 364, "handleinvalid": [365, 366, 373], "csfile": 365, "databaseset": [365, 367], "globalset": [365, 367, 489], "reportset": [365, 367], "tightcouplingset": [365, 367, 502, 505], "serializetightcouplingset": [365, 367, 371], "tightcouplingsettingdef": [365, 367, 371], "tightcouplingsettingsvalid": [365, 367, 371], "test_inspector": [365, 375], "testinspector": [365, 375, 376], "test_set": [365, 372, 375], "dummysettingplugin1": [365, 375, 377], "dummysettingplugin2": [365, 375, 377], "pluginaddsopt": [365, 375, 377], "testset": [365, 375, 377, 378], "testaddingopt": [365, 375, 377], "testsettings2": [365, 375, 377], "testsettingsutil": [365, 375, 377], "testflaglistset": [365, 375, 377], "testsettingsvalidationutil": [365, 375, 377], "test_settingsio": [365, 375], "settingsfailuretest": [365, 375, 378], "settingsreadertest": [365, 375, 378], "settingsrenametest": [365, 375, 378], "settingswritertest": [365, 375, 378], "mockentrypoint": [365, 375, 378], "settingargstest": [365, 375, 378], "defaultcasetitl": [365, 366], "environmentset": [365, 366], "reverttodefault": [365, 366, 372], "failonload": [365, 366], "loadfrominputfil": [365, 366], "loadfromstr": [365, 366], "initlogverbos": [365, 366], "writetoyamlfil": [365, 366], "getsettingssetbyus": [365, 366], "writetoyamlstream": [365, 366], "updateenvironmentsettingsfrom": [365, 366], "setmoduleverbos": [365, 366], "underlyingtyp": [365, 372], "setvalu": [365, 372], "changedefault": [365, 372], "isdefault": [365, 372], "offdefault": [365, 372], "getcustomattribut": [365, 372], "getdefaultattribut": [365, 372], "renameset": [365, 373], "settingsinputformat": [365, 373], "fromext": [365, 373], "readfromfil": [365, 373], "readfromstream": [365, 373], "writeyaml": [365, 373], "iscorrect": [365, 374], "no_act": [365, 374, 489], "addqueri": [365, 374], "addquerybadlocationwilllikelyfail": [365, 374], "addquerycurrentsettingmaynotsupportfeatur": [365, 374], "hundr": [366, 480], "begun": [366, 502], "setpath": 366, "went": 366, "hoc": [366, 488], "fromfil": 366, "fpath": 366, "usersettingsnam": 366, "settingssetbyus": [366, 373], "writabl": 366, "otherc": 366, "couplingset": 371, "tightcouplingsettingsdict": 371, "coeff": 372, "enforcedopt": 372, "sublabel": 372, "isenviron": 372, "oldnam": [372, 373], "legal": 372, "expir": [372, 373], "subtyp": 372, "serializ": 372, "newdefault": 372, "compund": 372, "gone": [372, 498, 502], "residu": 372, "settings_inst": 373, "dialogu": 374, "imposs": [374, 408, 451], "affirm": 374, "interplai": 374, "correctionsmad": 374, "initiallambda": 374, "versionthi": 374, "versionrequir": 374, "test_queri": [375, 376], "test_overwritesettingscorrectivequeri": [375, 376], "test_changeofc": [375, 376], "test_noncorrectivequeri": [375, 376], "test_callablecorrectioncheck": [375, 376], "test_assignc": [375, 376], "test_createqueryrevertbadpathtodefault": [375, 376], "test_correctcyclestozeroburnup": [375, 376], "test_checkforbothsimpleanddetailedcyclesinput": [375, 376], "test_updateenvironmentsettingsfrom": [375, 377], "test_metadata": [375, 377], "test_addingopt": [375, 377], "test_schemacheckstyp": [375, 377], "test_listsmut": [375, 377], "test_listcoercion": [375, 377], "test_typedetect": [375, 377], "test_cswork": [375, 377], "test_pluginvalidatorsarediscov": [375, 377], "test_pluginset": [375, 377], "test_default": [375, 377], "test_getsettingssetbyus": [375, 377], "test_setmoduleverbos": [375, 377], "test_getfailur": [375, 377], "test_settingisokaytograb": [375, 377], "test_modifi": [375, 377], "test_copyset": [375, 377], "test_copysettingnotdefault": [375, 377], "test_empti": [375, 377], "test_recursivescan": [375, 377], "test_prompt": [375, 377], "test_flaglistset": [375, 377], "test_invalidflaglisttypeerror": [375, 377], "test_validatevers": [375, 377], "test_settingsobjset": [375, 378], "test_loadfromyamlfailsonbadnam": [375, 378], "test_invalidfil": [375, 378], "test_basicsettingsread": [375, 378], "test_readfromfil": [375, 378], "test_renam": [375, 378], "test_collidingrenam": [375, 378], "test_writeshort": [375, 378], "test_writemedium": [375, 378], "test_writeful": [375, 378], "test_writeyaml": [375, 378], "test_errorsettingswrit": [375, 378], "test_commandlineset": [375, 378], "test_cannotloadsettingsafterparsingcommandlineset": [375, 378], "sound": 377, "particuar": 377, "_customschema": 377, "testsetting1": 378, "testsetting2": 378, "testsetting3": 378, "refdirectori": 379, "abspath": 379, "fixturefunct": 379, "expectedfilepath": 379, "actualfilepath": 379, "falseneglist": 379, "mainten": 379, "rebaselin": 379, "accomod": 379, "epsilon": [379, 505], "impl": [379, 452], "rstrip": 379, "whitespac": [379, 415, 451], "parsabl": 379, "presenc": 379, "approv": 379, "clearsinglewarn": [379, 380], "getstdout": [379, 380], "emptystdout": [379, 380], "getstderrvalu": [379, 380], "test_getparamrenam": [379, 382], "test_registerpluginflag": [379, 382], "test_getparamrenamesinvalid": [379, 382], "test_vers": [379, 382], "test_getset": [379, 382], "test_splashtext": [379, 382], "test_splashtextdifferentapp": [379, 382], "test_isstablereleasevers": [379, 382], "test_disablefutureconfigur": [379, 382], "test_getdefaultpluginmanag": [379, 382], "test_overconfigur": [379, 382], "test_main": [379, 382], "test_comparefilessucess": [379, 383], "test_comparefilesfail": [379, 383], "test_comparefilessucceedfalseneg": [379, 383], "test_custom": [379, 384], "test_rank": [379, 385, 389], "test_nonnonedata": [379, 385, 389], "test_isrequesteddetailpoint": [379, 386], "test_en": [379, 386], "test_predistributest": [379, 386], "test_fsearch": [379, 386], "test_fsearch_text": [379, 386], "test_coupleract": [379, 386], "test_storepreviousiterationvalu": [379, 386], "test_storepreviousiterationvalueexcept": [379, 386], "test_isconvergedvalueerror": [379, 386], "test_isconverg": [379, 386], "test_isconvergedruntimeerror": [379, 386], "test_getlistdimens": [379, 386], "test_loadc5g7": [379, 387], "test_parallel": [379, 388, 422], "test_serialgath": [379, 388], "test_mpiit": [379, 388], "test_perfectbalanc": [379, 388], "test_excessprocess": [379, 388], "test_typicalbalanc": [379, 388], "test_runactionsdistributionact": [379, 388], "test_runactionsdistributestateact": [379, 388], "test_diagnosepickleerrortestreactor": [379, 388], "test_disableforexclusivetask": [379, 388], "test_makequeu": [379, 388], "test_basicoperatormpi": [379, 389], "test_primaryexcept": [379, 389], "test_primarycrit": [379, 389], "test_finalizeinteract": [379, 389], "test_distributeset": [379, 389], "test_distributereactor": [379, 389], "test_distributeinterfac": [379, 389], "test_distributest": [379, 389], "test_compileresult": [379, 389], "test_cleanpathmpi": [379, 389], "test_noconflict": [379, 390], "test_withconflict": [379, 390], "test_withconflictsbutsamevalu": [379, 390], "test_conflictsmaintainwithstateretain": [379, 390], "test_runparamsweep": [379, 391], "test_rundatamodel": [379, 391], "test_defineflag": [379, 392], "test_axialexpansionhook": [379, 392], "test_passivedbloadplugin": [379, 392], "test_beforereactorconstructionhook": [379, 392], "test_defineparamet": [379, 392], "test_exposeinterfac": [379, 392], "test_pluginsexposeinterfac": [379, 392], "test_defineblueprintssect": [379, 392], "test_setverbosityfrominteg": [379, 393], "test_setverbosityfromstr": [379, 393], "test_verbosityoutofrang": [379, 393], "test_invalidsetverbositybystr": [379, 393], "test_parentrunlog": [379, 393], "test_getwhitespac": [379, 393], "test_warningreport": [379, 393], "test_warningreportinvalid": [379, 393], "test_closelog": [379, 393], "test_setverbos": [379, 393], "test_setverbositybeforestartlog": [379, 393], "test_callingstartlogmultipletim": [379, 393], "test_concatenatelog": [379, 393], "test_createlogdir": [379, 393], "test_getduplicatesfilt": [379, 393], "test_allowstopdupl": [379, 393], "test_comparefilelin": [379, 394], "test_userpluginsflag": [379, 395], "test_validateuserpluginlimit": [379, 395], "test_registeruserplugin": [379, 395], "test_registeruserpluginsabspath": [379, 395], "test_registeruserpluginsfromset": [379, 395], "test_userpluginonprocesscoreload": [379, 395], "test_userpluginwithinterfac": [379, 395], "test_registerrepeateduserplugin": [379, 395], "_runlog": 380, "shuffler": 381, "factorlist": 381, "coexist": 382, "plugin1": 382, "dummyact": 386, "notif": 386, "fsearch": [386, 396, 438], "coupler": 386, "rag": 386, "c5g7": [387, 482, 483, 493, 494], "numproc": 388, "numobject": 388, "numobj": 388, "imbal": 388, "_diagnosepickleerror": 388, "featurest": 389, "commandlin": [389, 451], "mpi4pi": [389, 422, 448, 480, 481, 482, 508], "failer": 389, "mockopmpi": 389, "unittest": [390, 425, 451], "ipynb": [391, 442, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "inadvert": 391, "successfulli": [392, 504], "carefulli": 393, "startlog": 393, "concat": 393, "flex": [395, 489], "meaningless": 395, "filepath": [396, 438], "sha": [396, 415, 487], "timestepnum": 396, "timenodenum": 396, "picklechain": 396, "a101": 396, "fix_import": 396, "buffer_callback": 396, "pickler": 396, "testpickl": 396, "sob": 396, "classcount": 396, "heirarchi": 396, "trend": 396, "originallist": 396, "listtoprepend": 396, "beginn": 396, "prepend": [396, 397, 415], "cap": 396, "prestr": 396, "4d": 396, "4e": [396, 466, 487], "datalist": 396, "maxnumberofvaluesbeforedelimit": 396, "delimit": 396, "hello": 396, "n4": 396, "minv": 396, "maxv": 396, "xlabel": [396, 414, 465, 466, 471, 476, 490, 491], "ylabel": [396, 414, 465, 466, 471, 476, 490, 491], "xtick": 396, "ytick": 396, "cmap": [396, 473], "figsiz": [396, 465, 473, 476, 491], "friendli": [396, 398], "hyphen": [396, 415], "otherdictionari": 396, "dst": 396, "shutil": [396, 411], "testasciimap": [396, 416, 417], "test_codetim": [396, 416, 437], "codetimingtest": [396, 416, 418], "test_custom_except": [396, 416], "customexceptiontest": [396, 416, 419], "test_densitytool": [396, 416], "testdensitytool": [396, 416, 420], "test_directorychang": [396, 416], "expectedexcept": [396, 416, 421], "testdirectorychang": [396, 416, 421], "test_directorychangersmpi": [396, 416], "revealyourdirectori": [396, 416, 422], "testmpi": [396, 416, 422], "exampleflag": [396, 416, 423], "test_hexagon": [396, 416], "testiter": [396, 416, 425], "test_mathemat": [396, 416], "testmath": [396, 416, 426], "test_outputcach": [396, 416], "testoutputcach": [396, 416, 427], "test_pars": [396, 416], "literalevaltest": [396, 416, 428], "test_pathtool": [396, 416], "pathtoolstest": [396, 416, 429], "test_plot": [396, 416], "testplot": [396, 416, 430], "testpatch": [396, 416, 430], "test_properti": [396, 416], "immutableclass": [396, 416, 431], "immutablepropertytest": [396, 416, 431], "test_reportplot": [396, 416], "testradar": [396, 416, 432], "test_tabul": [396, 416], "testtabulateapi": [396, 416, 433], "testtabulateinput": [396, 416, 433], "testtabulateintern": [396, 416, 433], "testtabulateoutput": [396, 416, 433], "test_textprocessor": [396, 416], "yamlincludetest": [396, 416, 434], "sequentialreadertest": [396, 416, 434], "test_triangl": [396, 416], "test_unit": [396, 416], "testunit": [396, 416, 436], "test_util": [396, 416], "testgeneralutil": [396, 416, 437], "asciilin": [396, 397], "asciioffset": [396, 397], "asciilabelbyindic": [396, 397], "gridcontentstoascii": [396, 397], "gettim": [396, 398], "starttim": [396, 398], "endtim": [396, 398], "startal": [396, 398], "stopal": [396, 398], "getactivetim": [396, 398], "timelin": [396, 398, 502], "movefil": [396, 401], "retrievefil": [396, 401], "getrandomdirectori": [396, 401], "sortedfield": [396, 404], "to_byt": [396, 404], "from_byt": [396, 404], "set_val": [396, 412], "updatepagedepthcolor": [396, 412], "sep": [396, 415, 487], "hline": [396, 415], "headerrow": [396, 415], "lineabov": [396, 415], "linebelow": [396, 415], "linebelowhead": [396, 415], "linebetweenrow": [396, 415], "withheaderhid": [396, 415], "unicode_whitespace_tran": [396, 415], "uspac": [396, 415], "wordsep_r": [396, 415], "wordsep_simple_r": [396, 415], "sentence_end_r": [396, 415], "from_iter": [396, 415], "func": [396, 399, 407, 408, 415, 448], "issuewarningonfindingtext": [396, 438], "raiseerroronfindingtext": [396, 438], "raiseerroronfindingpattern": [396, 438], "searchfortext": [396, 438], "searchforpattern": [396, 438], "searchforpatternonnextlin": [396, 438], "consumelin": [396, 438], "scipat": [396, 438], "decim": [396, 415, 433, 438], "errorcheck": [396, 438], "checkerror": [396, 438], "reimplement": 397, "simplic": [397, 493], "vocabulari": 397, "nestabl": 397, "latticeblueprint": 397, "programat": [397, 492, 502], "linenum": 397, "colnum": 397, "ij": 397, "col": [397, 433], "decrement": [397, 408], "jaggedli": 397, "ridicul": 397, "horizont": [397, 412], "_ijmax": 397, "ijmax": 397, "toward": [397, 415, 476, 480], "timer": [398, 502], "mymethod": 398, "mymethod2": 398, "event_nam": 398, "unfriendli": 398, "unstart": 398, "master": [398, 487], "kill": [398, 452], "inclusion_cutoff": 398, "total_tim": 398, "_timer": 398, "__str__": 398, "base_file_nam": 398, "granular": 399, "inport": 399, "abort": 399, "uninteract": 399, "custommsgend": 399, "matnum": [400, 458], "minden": 400, "sigfig": 400, "mcnp6compat": 400, "mcnplibrari": 400, "mcard": 400, "nuclidevector": 400, "elementexpansionpair": 400, "nuclidbas": 400, "isotopicsubset": 400, "nuclideinventori": 400, "enrichedmassfrac": 400, "fertilemassfrac": 400, "remix": 400, "filestomov": [401, 402], "filestoretriev": [401, 402], "dumponexcept": 401, "outputpath": [401, 402], "cwd": 401, "tell": [401, 452, 467, 489, 493, 502], "stall": [401, 448], "chdir": 401, "race": 402, "importentirepackag": 403, "aenum": 404, "provis": [404, 502], "arithmet": 404, "emul": 404, "unlimit": 404, "myflag": 404, "foo": [404, 416, 423], "baz": [404, 416, 423], "byteord": 404, "snake_cas": [404, 451], "pythagorean": 406, "theorem": 406, "initialcellindex": 406, "orientationnumb": 406, "lst": 407, "lenght": 407, "padwith": [407, 448], "padwithnon": 407, "binaryrow": 407, "valuedict": 407, "hexrow": 407, "1000000": [407, 502], "130": [407, 472, 477], "190": 407, "0x": 407, "although": [407, 444, 502], "forev": 407, "remedi": 407, "dropwhil": 407, "takewhil": 407, "itertool": [407, 412, 469, 470], "pred": 407, "newseq": 407, "summat": [407, 408, 502, 504], "expon": 408, "repeatedlist": 408, "9r": [408, 502], "listtosearch": 408, "indx": 408, "minindex": 408, "searchlist": 408, "searchvalu": 408, "strtofloat": 408, "03231714805651": 408, "03231714805651e": 408, "notat": [408, 494, 502], "scientif": [408, 489], "prevvalu": 408, "inputit": 408, "x0": 408, "y0": 408, "x1": [408, 439], "y1": [408, 439], "targetx": 408, "targeti": 408, "interpi": 408, "interpx": 408, "maxiter": 408, "positiveguess": 408, "tol": 408, "newton": 408, "p2": 408, "p3": 408, "parabola": 408, "x2": [408, 439], "x3": [408, 439], "y2": [408, 439], "y3": [408, 439], "bx": 408, "ap": 408, "cp": [408, 489], "targetk": [408, 502], "bt": 408, "2at": 408, "2a": 408, "slope": [408, 500], "realroot": 408, "newtim": 408, "v1": [408, 448, 452], "v2": [408, 448], "xin": 408, "yin": 408, "xout": 408, "resampl": 408, "realloc": 408, "resmampl": 408, "degreescounterclockwis": 408, "radianscounterclockwis": 408, "ccw": 408, "xr": 408, "yr": [408, 497, 500, 507], "crc": 409, "instantli": 409, "blah": 409, "inpfil": 409, "mccaa": 409, "rmzflx": 409, "outputfound": 409, "outfil": 409, "subprocess": 409, "exepath": 409, "inputpath": 409, "cachedir": 409, "loctoretrieveto": 409, "greedi": 409, "cachedfold": 409, "safeword": 409, "destruct": [409, 498], "teardown": 409, "requestedtyp": 410, "allownon": 410, "matchingnonetyp": 410, "datetim": 410, "pathpart": 411, "unc": 411, "filedescript": 411, "sourcepath": 411, "destinationpath": 411, "path1": 411, "path2": 411, "ioerror": 411, "pathattr": 411, "myclass": 411, "userspecifiedmodul": 411, "copiou": 411, "everyon": [411, 451, 452], "misplac": 411, "net": [411, 498], "rmtree": 411, "matplotlib": [412, 414, 451, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 487, 490, 491, 494], "bewar": [412, 414], "gobbl": [412, 414], "judici": [412, 414], "advis": [412, 414, 502], "skippedcolor": 412, "color": [412, 459, 465, 466, 476, 491, 494], "css": 412, "indefinit": 412, "bare": [412, 452], "cmapnam": 412, "jet": 412, "labelfmt": [412, 460, 475], "3f": 412, "legendmap": 412, "fontsiz": [412, 468, 473, 476], "minscal": 412, "maxscal": 412, "axisequ": 412, "makecolorbar": 412, "cbarlabel": 412, "shufflearrow": 412, "titles": 412, "depthindex": [412, 487], "viewabl": 412, "referencestokeep": 412, "colormap": 412, "pylab_exampl": 412, "show_colormap": 412, "labl": 412, "decript": 412, "legend": [412, 414, 464, 466, 471], "autoscal": 412, "ellips": 412, "patch": [412, 430, 438, 468, 476, 485], "facemap": [412, 463, 477, 478, 483, 485, 495], "typenumassem": 412, "rdylbu": 412, "fig": [412, 460, 464, 466, 468, 469, 470, 473, 474, 476], "galleri": [412, 446, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480], "sliderlabel": 412, "updatefunc": 412, "selecteddepthcolor": 412, "valinit": 412, "slider": 412, "valmin": 412, "valmax": 412, "_event": 412, "newval": 412, "maxassem": 412, "yaxislabel": 412, "plt": [412, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 487, 490, 491, 494], "histogram": 412, "materiallist": 412, "fileformat": 412, "svg": [412, 502], "pictur": [412, 445], "jpg": [412, 502], "xsname": 412, "noshow": 412, "ipython": [412, 494], "u238na": 412, "dependencyact": 413, "properrti": 413, "esenti": 413, "someclass": 413, "mynum": [413, 416, 431], "__doc__": [413, 415], "unlock": [413, 447], "unassign": 413, "dbi": [414, 487], "abscissa": 414, "maxdpa": [414, 500], "chart": [414, 445, 463, 477, 478, 488, 495], "reactornam": 414, "radar": [414, 432], "spider": 414, "xmajortick": 414, "ymajortick": 414, "legendlabel": 414, "tick": 414, "legendslabel": 414, "zval": [414, 473], "datav": 414, "nplot": 414, "ylog": 414, "mit": [415, 433, 444, 452, 480], "licens": [415, 433, 446, 489, 493], "thank": [415, 433], "github": [415, 433, 442, 444, 451, 452, 480, 481, 483, 485, 489, 508], "astanin": [415, 433], "anic": 415, "plain": [415, 433, 450], "sun": 415, "696000": 415, "1989100000": 415, "6371": 415, "5973": 415, "moon": 415, "1737": [415, 485], "mar": 415, "3390": 415, "641": 415, "9891e": 415, "dataclass": 415, "firstrow": [415, 433], "headerless": 415, "sex": 415, "alic": 415, "numalign": 415, "stralign": 415, "colglobalalign": [415, 433], "colalign": [415, 433], "coltyp": 415, "headersglobalalign": [415, 433], "headersalign": [415, 433], "behaviour": 415, "intfmt": 415, "floatfmt": 415, "missingv": 415, "spam": 415, "tablefmt": 415, "rst": [415, 433], "tsv": 415, "tabulateformat": [415, 433], "pseudograph": 415, "9999": 415, "451": 415, "pandoc": [415, 442], "simple_t": 415, "emac": 415, "el": 415, "grid_tabl": 415, "restructuredtext": 415, "42992e1": 415, "429920": 415, "disablenumpars": 415, "grain": 415, "longest": 415, "maxcolwidth": [415, 433], "john": 415, "maxheadercolwidth": [415, 433], "showindex": 415, "rowalign": 415, "psql": 415, "initial_ind": 415, "subsequent_ind": 415, "expand_tab": 415, "replace_whitespac": 415, "fix_sentence_end": 415, "break_long_word": 415, "drop_whitespac": 415, "break_on_hyphen": 415, "tabsiz": 415, "max_lin": 415, "tweak": 415, "_wrap_chunk": 415, "sentenc": [415, 452], "punctuat": 415, "unavoid": 415, "imperfect": 415, "trail": [415, 451], "x0b": 415, "x0c": 415, "em": 415, "dash": 415, "reformat": 415, "paragraph": [415, 450, 452], "expandtab": 415, "__next__": 415, "exhaust": 415, "field_nam": 415, "_asdict": 415, "_replac": 415, "iter1": 415, "iter2": 415, "stopiter": 415, "substitut": [415, 433], "test_hexthird": [416, 417], "test_hexwithhol": [416, 417], "test_hexwithemptyrow": [416, 417], "test_troublesomehexthird": [416, 417], "test_hexfullcornersupspotcheck": [416, 417], "test_hexfullcornersup": [416, 417], "test_hexfullflatsup": [416, 417], "test_hexfullflat": [416, 417], "test_hexsmallflat": [416, 417], "test_flathexbas": [416, 417], "test_method_definit": [416, 418], "test_alternate_usag": [416, 418], "test_property_access": [416, 418], "test_mast": [416, 418], "test_messy_starts_and_stop": [416, 418], "exampleinfomessag": [416, 419], "test_info_decor": [416, 419], "exampleimportantmessag": [416, 419], "test_important_decor": [416, 419], "examplewarnmessag": [416, 419], "test_warn_decor": [416, 419], "examplewarnwhenrootmessag": [416, 419], "test_warn_when_root_decor": [416, 419], "test_expandelementalmassfracstonuclid": [416, 420], "test_expandelementalzeromassfrac": [416, 420], "test_getchem": [416, 420], "test_expandel": [416, 420], "test_applyisotopicsmix": [416, 420], "test_getndensfrommass": [416, 420], "test_getmassfract": [416, 420], "test_calculatenumberdens": [416, 420], "test_getmassingram": [416, 420], "test_normalizenuclidelist": [416, 420], "test_formatmaterialcard": [416, 420], "test_mpiactionfailsonnonexistentpath": [416, 421], "test_except": [416, 421], "test_exception_dis": [416, 421], "test_change_to_nonexisting_fail": [416, 421], "test_change_to_nonexisting_works_forc": [416, 421], "test_temporary_clean": [416, 421], "test_file_retriev": [416, 421], "test_file_retrieval_missing_fil": [416, 421], "test_mpidirectorychang": [416, 422], "test_auto": [416, 423], "test_collision_extens": [416, 423], "test_collision_cr": [416, 423], "test_bool": [416, 423, 433], "test_inclus": [416, 423], "test_bitwis": [416, 423], "test_hash": [416, 423], "test_getitem": [416, 423], "n_fuzzy_draw": [416, 424], "test_hexagon_area": [416, 424], "test_numpositionsinr": [416, 424], "test_rotatedcellcent": [416, 424], "test_rotatedfirstr": [416, 424], "test_rotatefuzzi": [416, 424], "test_positionsuptor": [416, 424], "test_rotatedcellindexerror": [416, 424], "test_rotatedcellorientationerror": [416, 424], "test_indexwithnorot": [416, 424], "test_chunk": [416, 425], "test_split": [416, 425], "test_packingandunpackingbinarystr": [416, 425], "test_packingandunpackinghexstr": [416, 425], "test_sequenceinit": [416, 425], "test_sequ": [416, 425], "test_copysequ": [416, 425], "test_extendsequ": [416, 425], "test_appendsequ": [416, 425], "test_addingsequ": [416, 425], "test_listpivot": [416, 425], "test_arraypivot": [416, 425], "test_average1dwithintoler": [416, 426], "test_average1dwithintoleranceinvalid": [416, 426], "test_converttoslic": [416, 426], "test_efmt": [416, 426], "test_expandrepeatedfloat": [416, 426], "test_findclosest": [416, 426], "test_findnearestvalu": [416, 426], "test_fixthreedigitexp": [416, 426], "test_getfloat": [416, 426], "test_getstepsfromvalu": [416, 426], "test_ismonoton": [416, 426], "test_linearinterpol": [416, 426], "test_minimizescalarfunc": [416, 426], "test_newtonsmethod": [416, 426], "test_parabola": [416, 426], "test_parabolicinterpol": [416, 426], "test_relerr": [416, 426], "test_resamplestepwiseavg0": [416, 426], "test_resamplestepwiseavg1": [416, 426], "test_resamplestepwiseavg2": [416, 426], "test_resamplestepwiseavg3": [416, 426], "test_resamplestepwiseavg4": [416, 426], "test_resamplestepwiseavg5": [416, 426], "test_resamplestepwiseavg6": [416, 426], "test_resamplestepwiseavg7": [416, 426], "test_resamplestepwisesum0": [416, 426], "test_resamplestepwisesum1": [416, 426], "test_resamplestepwisesum2": [416, 426], "test_resamplestepwisesum3": [416, 426], "test_resamplestepwisesum4": [416, 426], "test_resamplestepwisesum5": [416, 426], "test_resamplestepwisesum6": [416, 426], "test_resamplestepwisesum7": [416, 426], "test_resamplestepwiseavgallnon": [416, 426], "test_resamplestepwiseavgonenon": [416, 426], "test_resamplestepwisesumallnon": [416, 426], "test_resamplestepwisesumonenon": [416, 426], "test_resamplestepwiseavgcomplicatednon": [416, 426], "test_resamplestepwiseavgnparrai": [416, 426], "test_resamplestepwiseavgnparrayaverag": [416, 426], "test_rotatexi": [416, 426], "test_hashfil": [416, 427], "test_deletecach": [416, 427], "test_getcachedfold": [416, 427], "test_makeoutputmanifest": [416, 427], "test_retrieveoutput": [416, 427], "test_tryliteralev": [416, 428], "test_parsevalu": [416, 428], "test_separatemoduleandattribut": [416, 429], "test_importcustommodul": [416, 429], "test_moduleandattributeexist": [416, 429], "test_cleanpathnompi": [416, 429], "test_isfilepathnew": [416, 429], "test_isaccess": [416, 429], "test_plotdepthmap": [416, 430], "test_plotassemblytyp": [416, 430], "test_plotblockflux": [416, 430], "test_plothexblock": [416, 430], "test_plotcartesianblock": [416, 430], "test_makeassempatch": [416, 430], "test_retreivingunassignedvalueraiseserror": [416, 431], "test_cannotassignvaluetoimmutableproperti": [416, 431], "test_unlockdoesnotpermitsreassignmentofanimmutableproperti": [416, 431], "test_radar": [416, 432], "test_createplotmetadata": [416, 432], "test_plotaxialprofil": [416, 432], "test_keffvstim": [416, 432], "test_valuevstim": [416, 432], "test_buvstim": [416, 432], "test_movesvscycl": [416, 432], "test_xshistoryvstim": [416, 432], "test_tabulateformat": [416, 433], "test_iterableofempti": [416, 433], "test_iterableofiter": [416, 433], "test_iterableofiterableshead": [416, 433], "test_iterableofiterablesfirstrow": [416, 433], "test_listoflist": [416, 433], "test_listoflistsfirstrow": [416, 433], "test_listoflistskei": [416, 433], "test_dictlik": [416, 433], "test_numpy2d": [416, 433], "test_numpy2dfirstrow": [416, 433], "test_numpy2dkei": [416, 433], "test_numpyrecordarrai": [416, 433], "test_numpyrecordarraykei": [416, 433], "test_numpyrecordarrayhead": [416, 433], "test_listofnamedtupl": [416, 433], "test_listofnamedtupleskei": [416, 433], "test_listofdict": [416, 433], "test_listofuserdict": [416, 433], "test_listofdictskei": [416, 433], "test_listofuserdictskei": [416, 433], "test_listofdictswithmissingkei": [416, 433], "test_listofdictsfirstrow": [416, 433], "test_listofdictswithdictofhead": [416, 433], "test_listofdictswithlistofhead": [416, 433], "test_listofordereddict": [416, 433], "test_listbyt": [416, 433], "test_tightcouplingexampl": [416, 433], "test_aligncolumndecim": [416, 433], "test_aligncolumndecimalwiththousandsepar": [416, 433], "test_aligncolumndecimalwithincorrectthousandsepar": [416, 433], "test_aligncolumnnon": [416, 433], "test_aligncolumnmultilin": [416, 433], "test_aligncellveriticallyonelineonli": [416, 433], "test_aligncellveriticallytopsingletextmultiplepad": [416, 433], "test_aligncellveriticallycentersingletextmultiplepad": [416, 433], "test_aligncellveriticallybottomsingletextmultiplepad": [416, 433], "test_aligncellveriticallytopmultitextmultiplepad": [416, 433], "test_aligncellveriticallycentermultitextmultiplepad": [416, 433], "test_aligncellveriticallybottommultitextmultiplepad": [416, 433], "test_assortedrareedgecas": [416, 433], "test_buildlin": [416, 433], "test_buildrow": [416, 433], "test_format": [416, 433], "test_ismultilin": [416, 433], "test_multilinewidth": [416, 433], "test_normalizetabulardata": [416, 433], "test_typ": [416, 433], "test_visiblewidth": [416, 433], "test_wraptexttocolwidth": [416, 433], "test_plain": [416, 433], "test_plainheaderless": [416, 433], "test_plainmultilineheaderless": [416, 433], "test_plainmultilin": [416, 433], "test_plainmultilinewithlink": [416, 433], "test_plainmultilinewithemptycel": [416, 433], "test_plainmultilinewithemptycellsheaderless": [416, 433], "test_plainmaxcolwidthautowrap": [416, 433], "test_plainmaxcolwidthautowrapswithsep": [416, 433], "test_maxcolwidthsinglevalu": [416, 433], "test_maxcolwidthpadtailingwidth": [416, 433], "test_maxcolwidthhonordisableparsenum": [416, 433], "test_plainmaxheadercolwidthsautowrap": [416, 433], "test_simpl": [416, 433], "test_simplewithseplin": [416, 433], "test_readmeexamplewithsep": [416, 433], "test_simplemultiline2": [416, 433], "test_simplemultiline2withseplin": [416, 433], "test_simpleheaderless": [416, 433], "test_simpleheaderlesswithseplin": [416, 433], "test_simplemultilineheaderless": [416, 433], "test_simplemultilin": [416, 433], "test_simplemultilinewithlink": [416, 433], "test_simplemultilinewithemptycel": [416, 433], "test_simplemultilinewithemptycellsheaderless": [416, 433], "test_github": [416, 433], "test_gridheaderless": [416, 433], "test_gridmultilineheaderless": [416, 433], "test_gridmultilin": [416, 433], "test_gridmultilinewithemptycel": [416, 433], "test_gridmultilinewithemptycellsheaderless": [416, 433], "test_pretti": [416, 433], "test_prettyheaderless": [416, 433], "test_prettymultilineheaderless": [416, 433], "test_prettymultilin": [416, 433], "test_prettymultilinewithlink": [416, 433], "test_prettymultilinewithemptycel": [416, 433], "test_prettymultilinewithemptycellsheaderless": [416, 433], "test_rst": [416, 433], "test_rstwithemptyvaluesinfirstcolumn": [416, 433], "test_rstheaderless": [416, 433], "test_rstmultilin": [416, 433], "test_rstmultilinewithlink": [416, 433], "test_rstmultilinewithemptycel": [416, 433], "test_rstmultilinewithemptycellsheaderless": [416, 433], "test_nodata": [416, 433], "test_emptydata": [416, 433], "test_nodatawithouthead": [416, 433], "test_emptydatawithouthead": [416, 433], "test_intfmt": [416, 433], "test_emptydatawithhead": [416, 433], "test_floatfmt": [416, 433], "test_floatfmtmulti": [416, 433], "test_colalignmulti": [416, 433], "test_colalignmultiwithseplin": [416, 433], "test_columnglobalandspecificalign": [416, 433], "test_headersglobalandspecificalign": [416, 433], "test_colalignorheadersaligntoolong": [416, 433], "test_floatconvers": [416, 433], "test_missingv": [416, 433], "test_missingvalmulti": [416, 433], "test_columnalign": [416, 433], "test_dictlikewithindex": [416, 433], "test_listoflistswithindex": [416, 433], "test_listoflistswithindexwithseplin": [416, 433], "test_listoflistswithsuppliedindex": [416, 433], "test_listoflistswithindexfirstrow": [416, 433], "test_disablenumparsedefault": [416, 433], "test_disablenumparsetru": [416, 433], "test_disablenumparselist": [416, 433], "test_resolveinclud": [416, 434], "test_resolveincludes_stringio": [416, 434], "test_findinclud": [416, 434], "textstream": [416, 434], "test_readfil": [416, 434], "test_readfilewithpattern": [416, 434], "test_gettrianglearea": [416, 435], "test_checkifpointisintriangl": [416, 435], "test_checkifpointisintriangle2": [416, 435], "test_gettc": [416, 436], "test_gettk": [416, 436], "test_gettf": [416, 436], "test_pressure_convert": [416, 436], "test_gettmev": [416, 436], "test_gettemperatur": [416, 436], "test_convertxtopasc": [416, 436], "test_sanitizeangl": [416, 436], "test_getxylineparamet": [416, 436], "test_mergeabledictionari": [416, 437], "test_createformattedstrwithdelimit": [416, 437], "test_capstrlen": [416, 437], "test_list2str": [416, 437], "test_slantsplit": [416, 437], "test_prependtolist": [416, 437], "test_plotmatrix": [416, 437], "test_classesinhierarchi": [416, 437], "test_safecopi": [416, 437], "simplecyclesset": [416, 437], "powerfractionsdetailedsolut": [416, 437], "powerfractionssimplesolut": [416, 437], "cyclenamesdetailedsolut": [416, 437], "cyclenamessimplesolut": [416, 437], "availabilityfactorsdetailedsolut": [416, 437], "availabilityfactorssimplesolut": [416, 437], "steplengthsdetailedsolut": [416, 437], "steplengthssimplesolut": [416, 437], "cyclelengthsdetailedsolut": [416, 437], "cyclelengthssimplesolut": [416, 437], "burnstepsdetailedsolut": [416, 437], "burnstepssimplesolut": [416, 437], "nodespercycledetailedsolut": [416, 437], "nodespercyclesimplesolut": [416, 437], "maxburnstepsdetailedsolut": [416, 437], "maxburnstepssimplesolut": [416, 437], "test_hasburnup": [416, 437], "test_getnodespercycl": [416, 437], "test_getcyclenodefromcumulativestep": [416, 437], "test_getcyclenodefromcumulativenod": [416, 437], "test_getprevioustimenod": [416, 437], "test_getcumulativenodenum": [416, 437], "spot": 417, "chop": 417, "isotopc": 420, "succe": 421, "cohort": 423, "doesnt": 423, "fuzzi": 424, "invari": 424, "uneven": 426, "propereti": 431, "smoke": 432, "userdict": 433, "_align_column": 433, "is_multilin": 433, "multilin": 433, "celltext": 433, "_buildlin": 433, "_buildrow": 433, "_format": 433, "_ismultilin": 433, "_multilinewidth": 433, "_normalizetabulardata": 433, "_type": 433, "_visiblewidth": 433, "_wraptexttocolwidth": 433, "autowrap": 433, "partli": 433, "tail": [433, 504], "disable_parsenum": 433, "honor": [433, 502], "stringio": [434, 438, 483], "nthi": 434, "ncan": 434, "nfile": 434, "nx": 434, "checkifpointisintrinagl": 435, "barycentriccheckifpointisintriangl": 435, "pascal": [436, 440], "dog": 437, "ferret": 437, "r2": [437, 502], "r1": 437, "03333333333333333": 437, "06666666666666667": 437, "10000000000000002": 437, "eedd": 438, "23e10": 438, "23ee10": 438, "23d10": 438, "23e": 438, "213423": 438, "2342": 438, "023": [438, 487], "relativeto": 438, "textiobas": 438, "ruamel": 438, "prohibit": 438, "drawback": 438, "underpin": 438, "alias": 438, "monkei": 438, "stackoverflow": 438, "44910886": 438, "pyyaml": [438, 483], "chunck": 438, "somefil": 438, "occurr": 438, "_searchfor": 438, "inidc": 438, "occurec": 438, "highmem": 438, "rewind": 438, "checkforerror": 438, "killon": 438, "textflag": 438, "vertici": 439, "heron": 439, "coordind": 439, "27s_formula": 439, "barycentr": 439, "totolog": 439, "blogspot": 439, "fahrenheit": 440, "tempunit": 440, "mmhg": 440, "pbar": 440, "patm": 440, "atomspher": 440, "sphinx": [442, 452, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 489, 495], "restructedtext": 442, "repositori": [442, 452], "hyperlink": 442, "virtual": [442, 480, 501], "pip": [442, 444, 480], "graphviz": 442, "latex": [442, 476], "miktex": 442, "imagemagick": 442, "_build": 442, "host": 442, "rsync": 442, "ahv": 442, "intersphinx": 442, "intersphinx_map": 442, "sphinxcontrib": 442, "workflow": [442, 446, 450, 452, 489], "apidoc_extra_arg": 442, "sphx_glr_galleri": 442, "highlight": 442, "neat": 442, "nbsphinx": 442, "nbconvert": 442, "clearoutputpreprocessor": 442, "inplac": 442, "mynotebook": 442, "verb": 443, "joi": 443, "armi": [443, 444, 445, 446, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 486, 488, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508], "sampleentrypoint": 443, "conf_cycle_length": 443, "conf_burn_step": 443, "store_tru": 443, "inputcas": 443, "post_process": 443, "settingsfil": 443, "pythonpath": [443, 481, 489, 508], "codebas": [444, 502], "publicli": 444, "regul": 444, "annot": [444, 476], "fork": 444, "guidanc": [444, 447, 452], "bot": 444, "agreement": 444, "publish": 444, "synopsi": 444, "pyproject": [444, 480, 483, 485, 489], "toml": [444, 480, 483, 485, 489], "superce": [444, 480], "apach": [444, 452, 480, 493], "gpl": [444, 452, 480], "bsd": [444, 452, 480], "restraint": 445, "explor": [445, 456, 463, 478, 488, 490, 492, 495], "spectral": 445, "heavili": [445, 452], "seen": [445, 452, 480, 489, 500, 502, 503], "guid": [445, 446, 480, 481, 493, 494, 508], "environment": [445, 451, 481, 508], "former": 445, "quasistat": 445, "promin": [445, 489], "softwaretest": 445, "orificedoptim": 445, "orific": [445, 497], "alchemylit": 445, "alchemi": 445, "subchan": 445, "launch": 445, "fire": [445, 448, 480], "teach": 446, "audienc": 446, "scientist": 446, "contributor": [446, 480], "black": [446, 476, 483], "ruff": [446, 447, 464, 474, 483, 484, 485], "nake": 446, "envelop": 447, "proprietari": [447, 473, 480, 502], "ship": 447, "perus": 447, "deeper": 447, "feel": [447, 489], "overli": [447, 493], "familiar": [447, 451, 481, 508], "chose": 447, "complain": [447, 483], "guidelin": [447, 451], "iceberg": 447, "cohes": 447, "plug": [447, 480], "Such": [447, 452, 502], "_pm": [447, 489], "plugina": 447, "pluginb": 447, "fear": 448, "mpi_rank": 448, "comm": 448, "proc0": 448, "proc1": 448, "proc2": 448, "proc3": 448, "val3": 448, "farm": 448, "worklist": 448, "_i": [448, 452], "unchunk": 448, "reassembl": 448, "mpi_exampl": 448, "v4": 448, "worklistloadbalanc": 448, "myvalstoadd": 448, "num1": 448, "num2": 448, "allresultsloadbalanc": 448, "allresult": 448, "5f": [448, 450], "transmiss": 448, "surviv": [448, 502], "someinterfac": 448, "interactevernod": 448, "bcastact": 448, "aresult": 448, "someparam": 448, "somefunct": 448, "opt": 448, "someset": 448, "distrib": 448, "extractblockresult": 448, "whatact": 448, "generatemyobject": 448, "depletionmatrix": [448, 498], "burnmatrix": [448, 498], "computation": 448, "reasonbli": 449, "stat": 449, "gprof2dot": 449, "invalu": 449, "graphvi": 449, "pstat": 449, "mystatsfil": 449, "tpng": 449, "mydesiredimagenam": 449, "cornerston": 450, "creategeneralreportcont": 450, "blueprintcont": 450, "getendoflifecont": 450, "imagin": 450, "dicionari": 450, "scene": [450, 490, 493], "__get__": 450, "childcont": 450, "prose": 450, "enclos": 450, "bdesign": 450, "combat": 450, "currentt": 450, "overview": [450, 480, 502], "comprehensive_report": 450, "tablelist": 450, "outputfileextens": [450, 502], "mwt": [450, 493], "0e6": [450, 487], "similarili": 450, "conf_boundari": 450, "conf_neutronics_kernel": 450, "conf_fp_model": 450, "assembly_area": 450, "sup": 450, "beg": 450, "mayb": [450, 489], "overdo": 450, "sole": 450, "neutronicssect": 450, "reportconst": 450, "neutronics_sect": 450, "keff_plot": 450, "thier": 450, "subpart": 451, "402": 451, "nqa": 451, "shall": 451, "clariti": [451, 466, 487], "theme": 451, "concis": [451, 453, 478, 495], "deviat": 451, "justifi": 451, "justif": 451, "consult": 451, "formatt": 451, "amaz": 451, "linter": [451, 483], "setabl": 451, "password": 451, "fragil": 451, "nigh": 451, "debugg": 451, "annoy": 451, "userbas": 451, "camelcas": [451, 480, 485], "hassl": 451, "correlationmatrix": 451, "prefac": 451, "underscor": 451, "_": [451, 481, 485, 487, 492, 505, 508], "pronounc": 451, "acronym": 451, "understood": 451, "expert": 451, "pascalcas": 451, "diskio": 451, "iooper": 451, "renderhtml": 451, "test_": 451, "packagenam": 451, "modulenam": 451, "speed_of_light_in_meters_per_second": 451, "_one_over_pi": 451, "dosomeact": 451, "_dosomeact": 451, "_assembli": 451, "linearheatgenerationr": 451, "_unuseddescript": 451, "repetiti": 451, "harderd": 451, "runnabl": 451, "modern": [451, 480], "laptop": [451, 480], "pyplot": [451, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 487, 490, 491, 494], "sin": 451, "articl": 451, "explain": [451, 452, 504], "zerodivisionerror": 451, "floatingpointerror": 451, "paradigm": 451, "json": 451, "strict": [451, 483, 485], "relic": 451, "fixm": 451, "xxx": 451, "stranger": 452, "voic": 452, "tens": 452, "oh": 452, "chapter": 452, "discourtesi": 452, "busi": 452, "polish": [452, 480], "draft": [452, 484], "thumb": 452, "lint": [452, 483, 484], "somebodi": 452, "bread": 452, "crumb": 452, "breadcrumb": 452, "minor": [452, 482, 485], "conf": 452, "install_requir": 452, "abstractli": 452, "extras_requir": 452, "strictli": 452, "bump": [452, 476], "123": 452, "revv": 452, "nrc": 452, "sanction": 452, "deserv": 452, "admin": [452, 502], "privileg": 452, "ui": 452, "die": 452, "branchverbos": [452, 502, 504], "visibl": 452, "halt": 452, "happili": 452, "silli": 452, "wick": 452, "000": [452, 487, 492], "explanatori": [453, 478, 495], "download": [458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 481, 489, 493, 494, 508], "pervas": 458, "m1": 458, "40090": 458, "35498695e": 458, "40091": 458, "31641456e": 458, "40092": 458, "11832896e": 458, "40094": 458, "13332690e": 458, "40096": 458, "82584320e": 458, "92234": 458, "00000000e": 458, "36147243e": 458, "92236": 458, "92238": 458, "48425449e": 458, "93237": 458, "93238": 458, "94236": 458, "94238": 458, "94240": 458, "94241": 458, "94242": 458, "95241": 458, "95242": 458, "95243": 458, "96242": 458, "96243": 458, "96244": 458, "96245": 458, "96246": 458, "96247": 458, "m2": 458, "11023": 458, "21665718e": 458, "m3": 458, "67941747e": 458, "14028": 458, "78629407e": 458, "14029": 458, "92249968e": 458, "14030": 458, "26729800e": 458, "23000": 458, "71601526e": 458, "24050": 458, "52833976e": 458, "24052": 458, "73245259e": 458, "24053": 458, "90190013e": 458, "24054": 458, "46479253e": 458, "25055": 458, "19738893e": 458, "26054": 458, "09816265e": 458, "26056": 458, "43323879e": 458, "26057": 458, "48571542e": 458, "26058": 458, "97721449e": 458, "28058": 458, "94209415e": 458, "28060": 458, "13328336e": 458, "28061": 458, "92675527e": 458, "28062": 458, "57051128e": 458, "28064": 458, "00190823e": 458, "42092": 458, "13437638e": 458, "42094": 458, "44696641e": 458, "42095": 458, "65358976e": 458, "42096": 458, "01896213e": 458, "42097": 458, "59119235e": 458, "42098": 458, "16005724e": 458, "42100": 458, "62965260e": 458, "74182": 458, "66064130e": 458, "74183": 458, "97674630e": 458, "74184": 458, "23253002e": 458, "74186": 458, "92724649e": 458, "m4": 458, "68566498e": 458, "78937437e": 458, "92406371e": 458, "26832899e": 458, "71822485e": 458, "53202374e": 458, "73955678e": 458, "90995571e": 458, "46679773e": 458, "20080367e": 458, "10149666e": 458, "43847248e": 458, "48692411e": 458, "97882303e": 458, "94448766e": 458, "13420533e": 458, "93076337e": 458, "57178896e": 458, "00516393e": 458, "14018048e": 458, "45058419e": 458, "65981625e": 458, "02548587e": 458, "59492746e": 458, "16100100e": 458, "63341900e": 458, "66361937e": 458, "97835446e": 458, "23597335e": 458, "93044146e": 458, "m5": 458, "m6": 458, "m7": 458, "sphinx_gallery_thumbnail_path": 458, "logo": 458, "_o": [458, 459], "bfuel": [458, 459], "ndensbybas": 458, "den": 458, "join": [458, 476], "minut": [458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "433": [458, 461], "run_blockmcnpmaterialcard": [458, 461], "bcontrol": 459, "459": [459, 461], "run_hexblocktorzconvers": [459, 461], "sphinx_gallery_thumbnail_numb": [460, 467], "175": 460, "thetamesh": 460, "run_hexreactortorz": [460, 461], "021": 461, "gallery_analysi": 461, "sphx_glr_gallery_framework_run_fuelmanag": [463, 477, 478, 495], "assess": 464, "23641": 464, "0189566": 464, "0764606": 464, "553986": 464, "114187": 464, "233214": 464, "0189313": 464, "557207": 464, "234575": 464, "0189824": 464, "0766673": 464, "555588": 464, "0190348": 464, "0768788": 464, "55349": 464, "238847": 464, "0190871": 464, "07709": 464, "550789": 464, "242019": 464, "0191381": 464, "0772959": 464, "54736": 464, "246067": 464, "0191865": 464, "0774913": 464, "543069": 464, "264995": 464, "0193035": 464, "0779642": 464, "52355": 464, "noqa": [464, 474], "e402": [464, 474], "writeinitialvolumefract": 464, "plotvolfracswithcomponenttemp": 464, "uniformtemp": 464, "componentstomodifi": 464, "initialvol": 464, "relativevol": 464, "uniformtempsinc": 464, "subplot": [464, 466, 468, 473, 476], "set_titl": [464, 468, 473, 476], "set_ylabel": [464, 476], "set_xlabel": [464, 473, 476], "327": [464, 477], "run_blockvolumefract": [464, 477], "xyc": [465, 491], "zip": [465, 466, 469, 470, 481, 491, 494, 508], "marker": [465, 491], "172": [465, 477], "run_chartofnuclid": [465, 477], "isoaa_path": [466, 471, 472], "_addflux": 466, "createdummyreactor": 466, "allrat": 466, "ratedata": 466, "ratelabel": 466, "nucrat": 466, "arang": [466, 473, 487, 489], "set_xtick": [466, 473], "set_xticklabel": [466, 473], "axvlin": 466, "set_xlim": [466, 468, 476], "yscale": [466, 471], "405": [466, 477], "run_computereactionr": [466, 477], "demo": [467, 476, 480, 492], "139933326086592": 467, "reftestcartesian": 467, "cosin": 467, "candidateassem": 467, "run_fuelmanag": [467, 477], "mpatch": [468, 476], "patchcollect": [468, 476], "poli": 468, "set_aspect": [468, 476], "set_axis_off": 468, "hex_i": 468, "va": [468, 476], "regularpolygon": 468, "numvertic": 468, "fc": [468, 494], "white": 468, "add_collect": [468, 476], "margin": [468, 480], "bbox": 468, "get_datalim": 468, "transdata": 468, "xmin": 468, "xmax": 468, "set_ylim": [468, 476], "ymax": 468, "167": [468, 477], "run_grids1_hex": [468, 477], "cartesian_grid": 469, "add_subplot": [469, 470], "run_grids2_cartesian": [469, 477], "linspac": [470, 490, 492], "rz_grid": 470, "run_grids3_rzt": [470, 477], "anl33": [471, 502], "xscale": 471, "run_isotx": [471, 477], "inelasticscatt": 472, "n2nscatter": 472, "run_isotxs2_matrix": [472, 477], "max_z": 473, "nummat": 473, "idx": 473, "indexerror": 473, "im": 473, "imshow": 473, "ylgn": 473, "set_ytick": 473, "set_yticklabel": 473, "493": [473, 477], "run_materi": [473, 477], "traceabl": 474, "139933324191920": 474, "buildcas": 474, "buildcompon": 474, "blockdesign": [474, 492], "buildblock": 474, "assemdesign": 474, "buildassembli": 474, "buildgrid": 474, "systemdesign": 474, "buildsystem": 474, "isothermal_temperature_in_c": 474, "508": 474, "5842": 474, "14224": 474, "72644": 474, "0109": 474, "6205": 474, "01420": 474, "cname": 474, "fuelbock": 474, "reflectorblock": 474, "fuelassem": 474, "reflectorassem": 474, "coregrid": 474, "903": [474, 477], "run_programmaticreactordefinit": [474, 477], "139933326780640": 475, "139933368269600": 475, "970": [475, 477], "run_reactorfacemap": [475, 477], "shortcut": 476, "bateman": 476, "plotnuc": 476, "ry": 476, "get_xi": 476, "cx": 476, "get_width": 476, "cy": 476, "get_height": 476, "plotal": 476, "xlim": 476, "ylim": 476, "xp": 476, "yp": 476, "deeppink": 476, "orang": 476, "arrowprop": 476, "shrink": 476, "rxntype": 476, "atan": 476, "180": [476, 493], "grei": 476, "facecolor": 476, "mistyros": 476, "edgecolor": 476, "zoom": 476, "139": 476, "154": 476, "095": [476, 477], "run_transmutationmatrix": [476, 477], "715": 477, "gallery_framework": 477, "megawatt": 479, "kilogram": 479, "mwd": [479, 498, 499], "radionuclid": [479, 498, 500], "fima": [479, 497, 498, 499, 500, 502], "thin": 479, "imped": 479, "wastag": [479, 480, 498, 500, 502], "predomin": 479, "todai": [479, 480], "gass": [479, 493], "twr": [479, 480], "travel": [479, 480], "wave": [479, 480], "breed": [479, 498, 500], "advantag": [479, 480], "streamlin": 480, "fingertip": [480, 493], "profession": 480, "llc": [480, 493], "compani": 480, "hub": 480, "spoke": 480, "specialist": 480, "acquir": 480, "first_time_contributor": 480, "prerequisit": [480, 501], "launcher": 480, "tour": 480, "nuclei": 480, "energet": 480, "induc": [480, 505], "withdraw": 480, "postul": 480, "earthquak": 480, "eniac": 480, "1940": [480, 485], "toss": 480, "experiment": [480, 494], "surprisingli": 480, "port": 480, "specialti": 480, "born": 480, "eclect": 480, "uncoupl": 480, "dispatch": 480, "multiobject": 480, "Its": [480, 489, 502], "labor": 480, "focu": 480, "seamless": 480, "green": [480, 494], "skelet": 480, "schemat": [480, 502], "subchannel": [480, 493, 502], "cfd": [480, 502], "curat": 480, "wall": 480, "orif": [480, 498, 502], "electr": [480, 507], "creativ": [480, 493], "graduat": 480, "undergradu": 480, "greatli": [480, 482, 483], "uncommon": 480, "tedium": 480, "fftf": [480, 502], "perfect": 480, "wing": 480, "seattl": 480, "mission": 480, "intertwin": 480, "secreci": 480, "risk": 480, "entiti": 480, "hypothes": 480, "worldwid": 480, "shakedown": 480, "fund": 480, "predominantli": 480, "microsoft": 480, "flavor": 480, "realiz": 480, "mail": 480, "broadli": 480, "phenix": 480, "bf": 480, "acceler": 480, "stuck": 480, "trademark": 480, "holder": 480, "copyright": [480, 493], "2024": [480, 484, 485, 487, 502], "complianc": [480, 493], "warranti": [480, 493], "touran": 480, "nichola": 480, "2017": 480, "518": 480, "526": 480, "eng": 480, "016": 480, "glossari": 480, "python3": [481, 508], "pip3": [481, 508], "vv": [481, 508], "navig": [481, 508], "venv": [481, 496, 508], "deactiv": [481, 502, 508], "bat": [481, 508], "sudo": [481, 508], "apt": [481, 508], "libopenmpi": [481, 508], "ssh": [481, 508], "click": [481, 487, 502, 508], "bashrc": [481, 508], "____": [481, 487, 492, 508], "__": [481, 487, 492, 508], "congrat": [481, 508], "wxpython": [481, 508], "websit": [481, 508], "2021": [482, 483], "vestigi": 482, "detailassemsbybolloc": 482, "materialclassnam": 482, "armitestbas": 482, "dumplocationsnapshot": 482, "obviat": 482, "redund": [482, 483], "isannular": 482, "doth": [482, 502], "armiabsdirfromnam": 482, "delat": 482, "addcompon": 482, "constist": 482, "latticefil": 482, "diment": 482, "pympler": 482, "demot": 482, "2023": 483, "1383": 483, "getmasterc": 483, "setmasterc": 483, "1399": 483, "1336": 483, "1349": 483, "1345": 483, "1355": 483, "1335": 483, "1395": 483, "sha1": 483, "1334": 483, "1409": 483, "gh": 483, "1341": 483, "avgfueltemp": [483, 498], "1362": 483, "1347": 483, "1396": 483, "_getnuctemphelp": 483, "1363": 483, "_processinclud": 483, "1333": 483, "1342": 483, "1280": 483, "1296": 483, "1288": 483, "1294": 483, "1265": 483, "1320": 483, "1183": 483, "1299": 483, "1277": 483, "drastic": 483, "1282": 483, "1275": 483, "density3": 483, "1163": 483, "1274": 483, "hcfcoretyp": 483, "1179": 483, "1248": 483, "1239": 483, "assemflagstoskipaxialexpans": 483, "1235": 483, "1204": 483, "1219": 483, "1218": 483, "1227": 483, "dctype": 483, "1228": 483, "1226": 483, "1229": 483, "createrepresentativeblocksfromexistingblock": 483, "1217": 483, "priorit": 483, "1237": 483, "1230": 483, "1238": 483, "1256": 483, "1257": 483, "1258": 483, "1270": 483, "1213": 483, "1216": 483, "1206": 483, "1225": 483, "1062": 483, "froze": 483, "1035": 483, "955": 483, "962": 483, "4614": [483, 491], "998": 483, "overhaul": 483, "loosecoupl": 483, "1033": 483, "c2n1": 483, "952": 483, "959": 483, "fuelcladlock": [483, 498], "1038": 483, "1022": 483, "1047": 483, "1042": 483, "1086": 483, "1098": 483, "uniformmeshconvert": 483, "mapper": 483, "1108": 483, "1165": 483, "cyclesskiptightcouplinginteract": 483, "referenceblockaxialmesh": [483, 500], "980": 483, "deadelin": 483, "barrier": 483, "1046": 483, "1067": 483, "1118": 483, "992": 483, "1168": 483, "1129": 483, "magnessium": 483, "1126": 483, "1128": 483, "1131": 483, "1150": 483, "1149": 483, "1199": 483, "1178": 483, "1185": 483, "2022": 483, "coveragerc": [483, 485], "924": 483, "932": 483, "922": [483, 487, 493], "943": 483, "942": 483, "fastflux": [483, 493, 498], "_swapfluxparam": 483, "665": 483, "settingsrul": 483, "872": 483, "__repr__": 483, "stationaryblock": 483, "stationaryblockflag": [483, 502], "isoxx": 483, "getreac": 483, "rotatepin": [483, 485], "855": 483, "_applythermalexpans": 483, "completeinitiaload": 483, "secur": 483, "alert": 483, "530": 483, "558": 483, "546": 483, "uml": 483, "weren": 483, "550": 483, "557": 483, "hint": 483, "540": 483, "507": 483, "490": 483, "534": 483, "solidifi": 483, "stake": 483, "clarif": 483, "anl116": [483, 502], "multii": 483, "bugfix": 483, "_copyinputshelp": 484, "1416": 484, "1412": 484, "functool": 484, "1466": 484, "incorrectli": 484, "1614": 484, "mandat": 484, "1419": 484, "1438": 484, "downgrad": 484, "polici": 484, "1444": 484, "tbd": 485, "1891": 485, "1813": 485, "ingest": 485, "1811": 485, "1842": 485, "1858": 485, "_rotatepin": 485, "1859": 485, "1846": 485, "1899": 485, "1870": 485, "1945": 485, "1927": 485, "1835": 485, "1912": 485, "1895": 485, "prepsearch": 485, "1845": 485, "skippingxsgen_buchangedlessthantoler": 485, "1881": 485, "1934": 485, "buildeqringschedul": 485, "1928": 485, "1844": 485, "doubleresolut": 485, "1951": 485, "assemblylist": 485, "transpos": 485, "1937": 485, "doseresultsmapp": 485, "1952": 485, "mpitaskspernod": 485, "numprocessor": [485, 487, 492, 493, 494], "1958": 485, "1831": 485, "1824": 485, "permissionerror": 485, "1857": 485, "1853": 485, "thkernel": [485, 502], "1855": 485, "1828": 485, "1883": 485, "1852": 485, "1925": 485, "_checkparamconsist": 485, "axialunitgrid": 485, "1809": 485, "1861": 485, "1665": 485, "1425": 485, "1689": 485, "1729": 485, "1750": 485, "1745": 485, "1726": 485, "1717": 485, "1796": 485, "1650": 485, "1651": 485, "allpositionsinthird": 485, "1655": 485, "getallnuclidesin": 485, "plottriangleflux": 485, "1656": 485, "dochelp": 485, "1662": 485, "convertdatabas": 485, "convertdb": 485, "1658": 485, "buildcommand": 485, "1773": 485, "1671": 485, "extran": 485, "armiojbect": 485, "1667": 485, "getmaxuraniummassenrich": 485, "getpufrac": 485, "getpumass": 485, "getpun": 485, "getzrfrac": 485, "printdens": 485, "rditernum": 485, "1704": 485, "outsidefuelr": 485, "outsidefuelringfluxfr": 485, "doorificedth": 485, "1706": 485, "1659": 485, "_expandcycleandtimenodearg": 485, "1766": 485, "1090": 485, "1649": 485, "1691": 485, "1653": 485, "1751": 485, "1771": 485, "1786": 485, "maco": [485, 489], "1713": 485, "1646": 485, "1770": 485, "1692": 485, "1670": 485, "cadenc": 486, "v0": 486, "lt": [487, 491, 492], "afci": [487, 489, 492, 493, 496], "haleu": [487, 493], "tru": [487, 493, 502], "fv": 487, "az1542": 487, "595": 487, "tue": 487, "oct": 487, "e10c9b6de9": 487, "29f959e5a4": 487, "5904530cb2": 487, "fuelmanag": [487, 493], "622957b035": 487, "mw": [487, 492, 497, 498, 500], "411": [487, 493, 494], "184": 487, "9995": 487, "140008325847312": 487, "gp": [487, 492], "006": [487, 492], "999999999998449e": [487, 492], "597": [487, 492, 493], "cr54": 487, "cr52": 487, "si30": 487, "mo98": 487, "si28": 487, "cr53": 487, "mo96": 487, "mo97": 487, "si29": 487, "mo100": 487, "ni64": 487, "mo92": 487, "ni62": 487, "ni58": 487, "fe57": 487, "ni61": 487, "ni60": 487, "fe58": 487, "mo94": 487, "cr50": 487, "helic": [487, 493], "dodecagon": 487, "a0005": 487, "011": 487, "056": 487, "a0004": 487, "045": [487, 502], "a0010": 487, "010": 487, "051": 487, "a0016": 487, "057": 487, "a0003": 487, "007": 487, "a0009": 487, "008": 487, "040": 487, "a0015": 487, "046": 487, "a0021": 487, "052": 487, "a0027": 487, "058": 487, "a0002": 487, "a0008": 487, "029": 487, "a0014": 487, "035": 487, "a0020": 487, "041": 487, "a0026": 487, "047": 487, "a0033": 487, "053": 487, "a0039": 487, "059": 487, "a0007": 487, "018": 487, "a0013": 487, "024": 487, "a0019": 487, "030": 487, "a0025": 487, "036": 487, "a0032": 487, "042": 487, "a0038": 487, "048": 487, "a0045": 487, "054": 487, "a0000": 487, "fifth": 487, "fifthassem": 487, "drill": 487, "a0006": 487, "b0006": 487, "913110": 487, "7780886302": 487, "1615298013245032": 487, "e6": 487, "630279585150355": 487, "press": 487, "5940e": 487, "b0000": 487, "impt": [487, 492, 504], "271": [487, 493], "6029": [487, 493], "6086118601525807": 487, "447": [487, 493], "6962": [487, 493], "6996347645979837": 487, "0466500": 487, "0455115": 487, "808": [487, 493], "8119863398379357": 487, "0559000": 487, "0561758": 487, "148007667250084": 487, "8888": [487, 493], "8931849738217292": 487, "0808": [487, 493], "08119863398379355": 487, "995619013690193": 487, "787506681749962": 487, "3940000": 487, "3959438": 487, "142": [487, 493], "2160000": 487, "1772467": 487, "midplan": 487, "peakpow": [487, 489], "1e6": [487, 489, 492], "mgfluxbas": [487, 489], "setfakepow": [487, 489], "linalg": [487, 489], "fuelflag": [487, 489], "603": 487, "6363986253243": 487, "3949368453772478": 487, "sodiumbefor": 487, "2f": [487, 490], "sodiumaft": 487, "20241022220955917867": 487, "c00n01": 487, "databaseloc": 487, "dbo": 487, "fro": 487, "909142": 487, "5216630063": 487, "lucki": 487, "neutronicskernel": [487, 502], "brand": 487, "hopefulli": 487, "readi": 489, "shell": [489, 492], "proce": [489, 502], "my_armi_project": 489, "fluxsolv": 489, "thermalsolv": 489, "readm": 489, "quickstart": 489, "exampleapp": 489, "shortli": 489, "mixabl": 489, "__version__": 489, "armi_vers": 489, "myapp_vers": 489, "dummyphysicsplugin": 489, "cobra": 489, "cacophoni": 489, "subphys": 489, "conf_vers": 489, "setversioninset": 489, "fluxinterfac": 489, "thermalinterfac": 489, "facet": 489, "boiler": 489, "myappvers": 489, "nasti": 489, "conf_inlet_temperatur": 489, "inletinc": 489, "conf_outlet_temperatur": 489, "outletinc": 489, "520": 489, "weav": 489, "administr": 489, "gut": 489, "cloud": 489, "tini": 489, "dummyflux": 489, "fuelblock": 489, "topfuelz": 489, "bottomfuelz": 489, "coremidplan": 489, "told": 489, "q": 489, "c_p": 489, "dummyth": 489, "runthermalhydraul": 489, "massflow": 489, "computeidealizedflow": 489, "computeaxialcoolanttemperatur": 489, "tempavg": 489, "coolantprop": 489, "massflowr": 489, "qdot": 489, "mdot": 489, "thcoolantinlett": [489, 497, 498], "thcoolantoutlett": [489, 497, 498], "thcoolantaveraget": [489, 498], "phenomen": 489, "lovingli": 489, "whack": 489, "slash": 489, "252": 489, "materialnamespaceord": [489, 502], "vizual": 489, "510": [489, 502], "lighter": 489, "finicki": 489, "sublass": [489, 505], "userpluginexampl": 489, "userplugin0": 489, "pluginz": [489, 502], "userplugin1": 489, "userplugin2": 489, "thermomechan": 490, "density500": 490, "500c": [490, 503], "006270676074462742": 490, "8752281279010555": 490, "11850119602448178": 490, "l_0": [490, 506], "4f": 490, "0471": 490, "inlin": 490, "uo_2": 490, "creep": 490, "recal": [491, 494], "amu": 491, "nucsbytyp": 491, "4706": 491, "043929425": 491, "u215": 491, "150262e": 491, "00000000000e": 491, "000000e": 491, "u216": 491, "216": 491, "160240e": 491, "50000000000e": 491, "u217": 491, "170244e": 491, "60000000000e": 491, "u218": 491, "218": 491, "180235e": 491, "u219": 491, "219": 491, "190249e": 491, "u220": 491, "220": 491, "200247e": 491, "11110000000e": 491, "u221": 491, "210264e": 491, "u222": 491, "222": 491, "220261e": 491, "70000000000e": 491, "u223": 491, "223": 491, "230277e": 491, "80000000000e": 491, "u224": 491, "224": 491, "240276e": 491, "40000000000e": 491, "u225": 491, "225": 491, "250294e": 491, "90000000000e": 491, "u226": 491, "260293e": 491, "68000000000e": 491, "u227": 491, "227": 491, "270312e": 491, "u228": 491, "228": 491, "280314e": 491, "46000000000e": 491, "u229": 491, "229": 491, "290335e": 491, "48000000000e": 491, "u230": 491, "230": 491, "300339e": 491, "74787200000e": 491, "u231": 491, "231": 491, "310363e": 491, "62880000000e": 491, "u232": 491, "320372e": 491, "17427219965e": 491, "330396e": 491, "02354704590e": 491, "340410e": 491, "74722532676e": 491, "400000e": 491, "u235m": 491, "u23f": 491, "56000000000e": 491, "236": 491, "360456e": 491, "39063206325e": 491, "u237": 491, "370487e": 491, "83372800000e": 491, "380508e": 491, "40996345254e": 491, "927420e": 491, "390543e": 491, "40700000000e": 491, "u240": 491, "400566e": 491, "07600000000e": 491, "u241": 491, "410603e": 491, "inf": [491, 505], "u242": 491, "420629e": 491, "00800000000e": 491, "u243": 491, "243": 491, "430674e": 491, "u244": 491, "244": 491, "440679e": 491, "u245": 491, "245": 491, "450708e": 491, "u246": 491, "246": 491, "460702e": 491, "li7": 491, "016004e": 491, "li07": 491, "241000e": 491, "01600439548": 491, "92410004": 491, "940038e": 491, "li3": 491, "030775e": 491, "li03": 491, "li4": 491, "027185e": 491, "li04": 491, "li5": 491, "012538e": 491, "li05": 491, "70924971603e": 491, "015123e": 491, "li06": 491, "590000e": 491, "li8": 491, "022488e": 491, "li08": 491, "39900000000e": 491, "li9": 491, "026789e": 491, "li09": 491, "78300000000e": 491, "li10": 491, "003548e": 491, "li11": 491, "104380e": 491, "75000000000e": 491, "li12": 491, "205378e": 491, "li13": 491, "306117e": 491, "lielement": 491, "standardweight": 491, "940037501798687": 491, "fullfactori": 492, "powermodif": 492, "tracer": 492, "0002": 492, "0003": 492, "10000000": 492, "40000000": 492, "70000000": 492, "100000000": 492, "queu": 492, "cladthicknessmodifi": 492, "componentdesign": 492, "cladmodif": 492, "0004": 492, "inde": [492, 502], "a6": 492, "8250000000000001": 492, "8500000000000001": 492, "875": 492, "cyclelengthmod": 492, "conclus": 492, "ran": 492, "loadsuit": 492, "parametr": 492, "regress": 492, "lastli": 493, "lieu": 493, "crazi": 493, "hotter": 493, "710": 493, "interstiti": [493, 502], "punch": 493, "derivedcompon": 493, "unclad": 493, "breviti": 493, "block_shield": [493, 502], "block_reflector": 493, "777": 493, "block_control": 493, "block_plenum": [493, 502], "88888": 493, "overlai": [493, 502], "191": 493, "paper": 493, "fuel_block": 493, "ic_x": 493, "weirdest": 493, "plena": 493, "trade": 493, "153": 493, "columnar": 493, "307": 493, "370": 493, "efpd": 493, "momentarili": 493, "sampleshuffl": 493, "frontend": 493, "fluenc": [493, 498], "0e23": 493, "violat": [493, 498], "shuffleparamet": 493, "cyclesecond": 493, "seconds_per_dai": 493, "peakfluenc": 493, "fastfluenc": [493, 498], "peakflux": 493, "philosophi": 493, "mistak": [493, 502], "nsc": 494, "00e": 494, "21e": 494, "50e": 494, "80e": 494, "40e": 494, "30e": 494, "63e": 494, "90e": 494, "16e": 494, "05e": 494, "225e": 494, "622e": 494, "70e": 494, "35e": 494, "78e": 494, "apear": 494, "block_uo2": 494, "8190": 494, "fuel_gap_1": 494, "clad_zr": 494, "8360": 494, "9500": 494, "fuel_gap_2": 494, "aluminum": 494, "clad_al": 494, "9700": 494, "0800": 494, "guide_tube_moder": 494, "6800": 494, "fission_chamber_guide_tub": 494, "fission_chamber_mod": 494, "332": 494, "block_mox": 494, "ml": 494, "mm": 494, "mh": 494, "block_mod": 494, "alongsid": 494, "said": [494, 502], "genreport": [494, 502], "fiddl": 494, "yellow": 494, "red": 494, "xi": [494, 505], "yi": 494, "zi": 494, "reftestbas": 496, "powerdecai": [497, 498, 500], "decayheatcalctimesinsecond": 497, "arealpd": [497, 498, 504], "pct": 497, "bulimit": [497, 498], "chargebu": 497, "chargefi": 497, "chargetim": 497, "dust": 497, "dayssincelastmov": 497, "kinf": [497, 498, 500], "maxdpapeak": 497, "nummov": [497, 500], "detailednden": [497, 498, 500], "fi": [497, 498], "interf": [497, 498], "detailednuckei": [497, 498, 500], "unwis": 497, "crcriticalfract": 497, "crcurrentelev": 497, "crinsertedelev": 497, "crrodlength": 497, "crwithdrawnelev": 497, "withdrawn": 497, "thdeltapnograv": 497, "graviti": 497, "thdeltappump": 497, "rise": [497, 498, 500], "thdeltaptot": [497, 498], "thmassflowr": [497, 498], "thlocaldtout": [497, 498], "thlocaldtoutfuel": [497, 498], "thorificezon": [497, 498], "dischargetim": 497, "hcf": [497, 500, 502], "azimesh": 497, "radmesh": 497, "burnupmwdperkg": [498, 499], "fissilefract": 498, "moleshmbol": 498, "masshmbol": [498, 499], "moleshmbolbypin": 498, "moleshmnow": 498, "newdpa": 498, "accru": 498, "percentbubypin": 498, "percentbumax": 498, "percentbumaxpinloc": 498, "percentbumin": 498, "cycleaverageburnmatrix": 498, "bugroupnum": 498, "burat": [498, 499], "buratepeak": 498, "detaileddpa": [498, 500], "detaileddpapeak": 498, "detaileddpar": 498, "displacementx": 498, "displacementi": 498, "heliuminb4c": 498, "powerrx": 498, "nhmatbol": 498, "axialexptargetcompon": 498, "withregard": 498, "eqregion": 498, "eqcascad": 498, "cascad": [498, 502], "xstypenum": 498, "rxfueldensitycoeffpermass": 498, "\u03b4k": [498, 500], "rxfueltemperaturecoeffpermass": 498, "rxfuelvoidedtemperaturecoeffpermass": 498, "rxcladdensitycoeffpermass": 498, "rxcladtemperaturecoeffpermass": 498, "rxstructuredensitycoeffpermass": 498, "rxstructuretemperaturecoeffpermass": 498, "rxcoolantdensitycoeffpermass": 498, "rxcoolanttemperaturecoeffpermass": 498, "rxfueldensitycoeffpertemp": [498, 500], "rxfueldopplercoeffpertemp": [498, 500], "rxfuelvoideddopplercoeffpertemp": [498, 500], "rxfueldopplerconst": [498, 500], "rxfuelvoideddopplerconst": [498, 500], "rxstructuredopplerconst": [498, 500], "rxcladdopplerconst": [498, 500], "rxfueltemperaturecoeffpertemp": [498, 500], "rxfuelvoidedtemperaturecoeffpertemp": [498, 500], "rxcladdensitycoeffpertemp": [498, 500], "rxcladdopplercoeffpertemp": [498, 500], "rxcladtemperaturecoeffpertemp": [498, 500], "rxstructuredensitycoeffpertemp": [498, 500], "rxstructuredopplercoeffpertemp": [498, 500], "rxstructuretemperaturecoeffpertemp": [498, 500], "rxcoolantdensitycoeffpertemp": [498, 500], "rxcoolanttemperaturecoeffpertemp": [498, 500], "reliabl": 498, "axextennodeheight": 498, "blockbeta": 498, "blockf": 498, "breedratio": 498, "fissiledestroi": 498, "fissilebefor": 498, "substep": [498, 502], "fissileaft": 498, "cladacci": 498, "\u00b5m": [498, 500], "convratio": 498, "crwastag": 498, "acci": 498, "cyclicnerr": 498, "intrinsicsourc": 498, "intrinsicsourcedecai": 498, "mchan": 498, "mreg": 498, "newdpapeak": 498, "percentbupeak": 498, "powershapedelta": 498, "gasreleasefract": 498, "bondremov": [498, 502], "cladwastag": 498, "totalcladstrain": 498, "diametr": 498, "axialgrowthpct": 498, "growth": [498, 500, 502], "fppeakfueltemp": 498, "fpavefueltemp": 498, "axmesh": 498, "adjmgflux": 498, "lastmgflux": 498, "mgfluxgamma": 498, "mggammasrc": 498, "gammasrc": 498, "mgfluxsk": 498, "pinmgfluxesadj": 498, "naxialseg": 498, "pinmgfluxesgamma": 498, "axialpowerprofil": 498, "axialpowerprofileneutron": 498, "axialpowerprofilegamma": 498, "betad": 498, "chid": 498, "linpow": 498, "unavail": 498, "linpowbypinneutron": 498, "linpowbypingamma": 498, "reactionr": 498, "reactionstodb": 498, "pointsedgefastfluxfr": 498, "100kev": 498, "pointsedgedpa": 498, "pointsedgedpar": 498, "cornerfastflux": 498, "pointscornerfastfluxfr": 498, "pointscornerdpa": 498, "pointscornerdpar": 498, "ratebal": 498, "rateextsrc": 498, "ratefisab": 498, "ratefissrc": 498, "rateleak": 498, "leak": 498, "rateparasab": 498, "parasit": 498, "fertil": [498, 500], "rateprodnet": 498, "ratescatin": 498, "ratescatout": 498, "capturepowerfrac": 498, "fluxadj": 498, "fluxadjpeak": 498, "pdensdecai": 498, "fertilebonu": 498, "fisden": 498, "fisdenshom": 498, "fluxgamma": 498, "fluxpeak": 498, "medabs": 498, "medfis": 498, "medflx": 498, "pdensgamma": 498, "pdensneutron": 498, "ppden": 498, "ppdensgamma": 498, "rateab": 498, "fisson": 498, "ratecap": 498, "rateprodn2n": 498, "ratefi": 498, "rateprodfi": 498, "detaileddpathiscycl": 498, "detaileddpapeakr": 498, "dpapeakfromflu": 498, "enrichmentbol": 498, "fastfluxfr": 498, "pdensgener": 498, "pressurelosscoeff": 498, "hardwar": 498, "thhotchannelcladmidwallt": 498, "midwal": 498, "thhotchannelheattransfercoeff": 498, "film": 498, "thhotchannelcladodt": 498, "thhotchannelcladidt": 498, "thhotchannelfuelodt": 498, "thhotchannelfuelcenterlinet": 498, "centerlin": 498, "th0sigmacladodt": 498, "th2sigmacladodt": 498, "th3sigmacladodt": 498, "th0sigmacladidt": 498, "th2sigmacladidt": 498, "th3sigmacladidt": 498, "thdilationpressur": 498, "dilat": 498, "thtfuelcl": 498, "thtfuelod": 498, "thaveragecladodt": 498, "thaveragecladidt": 498, "thaveragecladtemp": 498, "thaveragegaptemp": 498, "thaverageducttemp": 498, "thcoolantstatict": 498, "thhotchanneloutlett": 498, "thcorntemp": 498, "degc": 498, "thedgetemp": 498, "thhotchannel": 498, "pinnum": 499, "zzzaaa": 500, "zzz": 500, "maxassemnum": [500, 507], "crmostvaluableprimaryrodloc": 500, "crmostvaluablesecondaryrodloc": 500, "crworthrequiredprimari": 500, "crworthrequiredsecondari": 500, "crtransientoverpowerworth": 500, "critsearchslop": 500, "doublingtim": 500, "fissilemass": 500, "heavymetalmass": 500, "lastkeff": 500, "loadpaddpaavg": 500, "loadpaddpapeak": 500, "maxcladfcci": 500, "maxgriddpa": 500, "minutessincestart": 500, "peakgriddpaat60year": 500, "totalintrinsicsourc": 500, "totalintrinsicsourcedecai": 500, "thmaxdeltappump": 500, "thmaxdilationpressur": 500, "thoutlettempid": 500, "pergram": 500, "medabscor": 500, "medfluxcor": 500, "medsrccor": 500, "pkflux": 500, "maxdetaileddpapeak": 500, "maxflux": 500, "adjweightedfissrc": 500, "maxdetaileddpathiscycl": 500, "dpafullwidthhalfmax": 500, "elevationofaclp3cycl": 500, "elevationofaclp7cycl": 500, "rxswing": 500, "maxbuf": 500, "maxbui": 500, "peakkeff": 500, "fastfluxfravg": 500, "leakagefractot": 500, "leakagefracplanar": 500, "leakagefracaxi": 500, "maxpden": 500, "maxpd": 500, "bred": 500, "betacompon": 500, "betadecayconst": 500, "promptneutrongenerationtim": 500, "promptneutronlifetim": 500, "rxfuelaxialexpansioncoeffpertemp": 500, "rxfuelaxialexpansioncoeffperperc": 500, "rxgridplateradialexpansioncoeffpertemp": 500, "rxaclpradialexpansioncoeffpertemp": 500, "rxcontrolroddrivelineexpansioncoeffpertemp": 500, "drivelin": 500, "rxcorewidecoolantvoidworth": 500, "rxspatiallydependentcoolantvoidworth": 500, "boeckeff": 500, "boec": 500, "maxcyclicnerr": 500, "breedingratio": 500, "convratiocor": 500, "absperfiscor": 500, "axialexpansionperc": 500, "fisfrac": 500, "fisratecor": 500, "infin": [500, 505], "refkeff": 500, "loos": 501, "resus": 502, "block_nam": 502, "erron": 502, "excerpt": [502, 504], "003454": 502, "detailassemlocationsbol": 502, "freshfeedtyp": 502, "refsmallreactor": 502, "moduleverbos": [502, 504], "palett": 502, "warrant": 502, "brush": 502, "multiphys": 502, "detailassemnum": 502, "detailallassem": 502, "dk": 502, "kk": 502, "dollar": 502, "cent": 502, "decayconst": 502, "six": 502, "365": 502, "2425": 502, "uptim": [502, 507], "shorthand": 502, "overcom": 502, "emploi": 502, "r5": 502, "ramp": 502, "prolong": 502, "slight": 502, "reduct": 502, "downtim": 502, "unevenli": 502, "buildup": 502, "rerun": 502, "000000": 502, "001002": 502, "loadstyl": 502, "fromdb": 502, "remaind": [502, 506], "frominput": 502, "skipcycl": 502, "makeup": 502, "core_grid": 502, "wit": 502, "elementari": 502, "neglect": 502, "flexibli": 502, "757": 502, "regex": 502, "extrud": 502, "componentnam": 502, "dimensionnam": 502, "label1": 502, "ousid": 502, "905": 502, "burnabl": 502, "fuelgrid": 502, "possess": 502, "buri": 502, "unambigu": 502, "standard_height": 502, "standard_axial_mesh_point": 502, "inner_core_block": 502, "dragger": 502, "defaul": 502, "superset": 502, "79213903298633": 502, "000664847887388523": 502, "182466356404319": 502, "00323253628006144": 502, "705266053783901": 502, "0171714161260001": 502, "00233843050046998": 502, "0831976890804466": 502, "00566266993741259": 502, "rect": 502, "cicl": 502, "145": 502, "downsid": 502, "pitchdefiningcompon": 502, "carbon_flag": 502, "getfactor": 502, "newincom": 502, "oldoutgo": 502, "daisi": 502, "overton": 502, "a3": 502, "a4": 502, "a5": 502, "thusli": 502, "essenc": 502, "peripheri": 502, "bluepint": 502, "watch": 502, "typenum": 502, "numdischarg": 502, "chargeenrich": 502, "defaultfactor": 502, "factorsearchflag": 502, "tout": 502, "acceptableblockareaerror": 502, "assemflagstoskipaxialexpa": 502, "nsion": 502, "assempowsummari": 502, "bureducingassemblyr": 502, "otat": 502, "assemblyrotationstationar": 502, "autogenerateblockgrid": 502, "automaticvariablemesh": 502, "axialexpans": [502, 506], "axialmeshrefinementfactor": 502, "bccoeffici": 502, "extrapolat": 502, "zerosurfaceflux": 502, "zeroinwardcurr": 502, "circularringord": 502, "distancesmart": 502, "circularringpitch": 502, "claddingstrain": 502, "claddingwastag": 502, "copyfilesfrom": 502, "copyfilesto": 502, "coverageconfigfil": 502, "crosssectioncontrol": 502, "dict_k": 502, "ei": 502, "customfuelmanagementindex": 502, "242199": 502, "cyclesskiptightcouplingin": 502, "teract": 502, "dbstorageaftercycl": 502, "debugdb": 502, "debugmems": 502, "deferredinterfacenam": 502, "deferredinterfacescycl": 502, "disableblocktypeexclus": 502, "inxsgener": 502, "01568627": 502, "451e": 502, "dpaxsset": 502, "dpa_ebrii_": 502, "dpa_ebrii_inc600": 502, "dpa_ebrii_incx750": 502, "dpa_ebrii_ht9": 502, "dpa_ebrii_pe16": 502, "dpa_ebrii_inc625": 502, "eigenprob": 502, "epseig": 502, "epsfsavg": 502, "epsfspoint": 502, "eqdirect": 502, "shuf": 502, "existingfixedsourc": 502, "varsrc": 502, "fgremov": 502, "fissiongasyieldfract": 502, "forcedbparam": 502, "nofissionproduct": 502, "infinitelydilut": 502, "explicitfissionp": 502, "roduct": 502, "explicitfissionpr": 502, "oduct": 502, "fuelperformanceengin": 502, "globalfluxact": 502, "gridplatedpaxsset": 502, "groupstructur": 502, "anl9": 502, "anl70": 502, "anl230": 502, "anl703": 502, "anl1041": 502, "anl2082": 502, "armi33": 502, "armi45": 502, "cinder63": 502, "growtofullcoreafterload": 502, "independentvarnam": 502, "infinitedilutecutoff": 502, "initializeburnchain": 502, "jumpringnum": 502, "checkerboard": 502, "levelspercascad": 502, "referencef": 502, "issionprod": 502, "uct": 502, "loadfromdbeverynod": 502, "lowpowerregionfract": 502, "makeallblocklfpsindepend": 502, "minmeshsizeratio": 502, "dp1": 502, "dp2": 502, "minimumfissilefract": 502, "neutronicstyp": 502, "numbermeshperedg": 502, "operatorloc": 502, "outputcacheloc": 502, "plotshufflearrow": 502, "namepl": 502, "reallysmallrun": 502, "removepercycl": 502, "restartneutron": 502, "runlatticephysicsbeforesh": 502, "uffl": 502, "smallrun": 502, "sortreactor": 502, "calul": 502, "grid_pla": 502, "summarizeassemdesign": 502, "tightcouplingmaxnumit": 502, "tightcoup": 502, "lingsettin": 502, "dict_kei": 502, "timelineinclusioncutoff": 502, "tolerateburnupchang": 502, "test_wha": 502, "xsblockrepresent": 502, "fluxweightedaverag": 502, "componentaverage1dslab": 502, "xsbucklingconverg": 502, "xseigenvalueconverg": 502, "mc2v2": 502, "xsscatteringord": 502, "zerooutnuclidesnotindb": 502, "loc1": 502, "loc2": 502, "loc3": 502, "odhot": 503, "id600": 503, "numclad": 503, "cladmat": 503, "savephysicsio": 504, "cxny": 504, "00x00y": 504, "xtra": 504, "traceback": 504, "monitor": 504, "myrun": 504, "mydatabas": 504, "ahist": 504, "filesystem": 504, "endian": 504, "portabl": 504, "supplement": 504, "standpoint": 504, "stroke": 504, "glean": 504, "locationtyp": 504, "comp_typ": 504, "mold": 504, "tricki": 504, "interspers": 504, "thaveragecladtemperatur": 505, "k_": 505, "l2": 505, "_2": 505, "a_": 505, "b_": 505, "mathbf": 505, "quad": 505, "foral": 505, "epsilon_i": 505, "textbf": 505, "_settightcouplingdefault": 505, "easiest": 505, "radialexpans": 506, "t_0": 506, "rearrang": 506, "l_1": 506, "t_1": 506, "l_h": 506, "t_h": 506, "t_c": 506, "l_c": 506, "capacityfactor": 507, "lcoe": 507, "levelis": 507, "usd": 507, "kwh": 507, "efeedmt": 507, "efissil": 507, "eswu": 507, "swu": 507}, "objects": {"": [[0, 0, 0, "-", "armi"]], "armi": [[0, 1, 1, "", "applyAsyncioWindowsWorkaround"], [1, 0, 0, "-", "apps"], [2, 0, 0, "-", "bookkeeping"], [46, 0, 0, "-", "cases"], [60, 0, 0, "-", "cli"], [0, 1, 1, "", "configure"], [76, 0, 0, "-", "conftest"], [77, 0, 0, "-", "context"], [0, 1, 1, "", "disableFutureConfigures"], [0, 1, 1, "", "getApp"], [0, 1, 1, "", "getDefaultPluginManager"], [0, 1, 1, "", "getDefaultPlugins"], [0, 1, 1, "", "getPluginManager"], [0, 1, 1, "", "getPluginManagerOrFail"], [0, 1, 1, "", "init"], [78, 0, 0, "-", "interfaces"], [0, 1, 1, "", "isConfigured"], [0, 1, 1, "", "isStableReleaseVersion"], [79, 0, 0, "-", "materials"], [143, 0, 0, "-", "meta"], [144, 0, 0, "-", "migration"], [151, 0, 0, "-", "mpiActions"], [152, 0, 0, "-", "nucDirectory"], [164, 0, 0, "-", "nuclearDataIO"], [203, 0, 0, "-", "operators"], [212, 0, 0, "-", "physics"], [280, 0, 0, "-", "pluginManager"], [281, 0, 0, "-", "plugins"], [282, 0, 0, "-", "reactor"], [364, 0, 0, "-", "runLog"], [365, 0, 0, "-", "settings"], [379, 0, 0, "-", "tests"], [396, 0, 0, "-", "utils"]], "armi.apps": [[1, 2, 1, "", "App"]], "armi.apps.App": [[1, 3, 1, "", "getParamRenames"], [1, 3, 1, "", "getSettings"], [1, 4, 1, "", "name"], [1, 5, 1, "", "pluginManager"], [1, 3, 1, "", "registerPluginFlags"], [1, 3, 1, "", "registerUserPlugins"], [1, 5, 1, "", "splashText"], [1, 5, 1, "", "version"]], "armi.bookkeeping": [[2, 2, 1, "", "BookkeepingPlugin"], [3, 0, 0, "-", "db"], [19, 0, 0, "-", "historyTracker"], [20, 0, 0, "-", "mainInterface"], [21, 0, 0, "-", "memoryProfiler"], [22, 0, 0, "-", "report"], [32, 0, 0, "-", "snapshotInterface"], [33, 0, 0, "-", "tests"], [37, 0, 0, "-", "visualization"]], "armi.bookkeeping.BookkeepingPlugin": [[2, 3, 1, "", "defineCaseDependencies"], [2, 3, 1, "", "defineEntryPoints"], [2, 3, 1, "", "exposeInterfaces"], [2, 3, 1, "", "getReportContents"], [2, 3, 1, "", "mpiActionRequiresReset"]], "armi.bookkeeping.db": [[3, 2, 1, "", "Database3"], [3, 2, 1, "", "DatabaseInterface"], [4, 0, 0, "-", "compareDB3"], [3, 1, 1, "", "compareDatabases"], [5, 0, 0, "-", "database3"], [3, 1, 1, "", "databaseFactory"], [6, 0, 0, "-", "databaseInterface"], [7, 0, 0, "-", "factory"], [8, 0, 0, "-", "jaggedArray"], [9, 0, 0, "-", "layout"], [3, 1, 1, "", "loadOperator"], [10, 0, 0, "-", "passiveDBLoadPlugin"], [11, 0, 0, "-", "permissions"], [12, 0, 0, "-", "tests"], [18, 0, 0, "-", "typedefs"]], "armi.bookkeeping.db.Database3": [[3, 3, 1, "", "close"], [3, 5, 1, "", "fileName"], [3, 3, 1, "", "genAuxiliaryData"], [3, 3, 1, "", "genTimeStepGroups"], [3, 3, 1, "", "genTimeSteps"], [3, 3, 1, "", "getAuxiliaryDataPath"], [3, 3, 1, "", "getH5Group"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistoriesByLocation"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "getHistoryByLocation"], [3, 3, 1, "", "getLayout"], [3, 3, 1, "", "grabLocalCommitHash"], [3, 3, 1, "", "hasTimeStep"], [3, 3, 1, "", "isOpen"], [3, 3, 1, "", "keys"], [3, 3, 1, "", "load"], [3, 3, 1, "", "loadBlueprints"], [3, 3, 1, "", "loadCS"], [3, 3, 1, "", "loadGeometry"], [3, 3, 1, "", "loadReadOnly"], [3, 3, 1, "", "mergeHistory"], [3, 3, 1, "", "open"], [3, 3, 1, "", "readInputsFromDB"], [3, 3, 1, "", "splitDatabase"], [3, 3, 1, "", "syncToSharedFolder"], [3, 4, 1, "", "timeNodeGroupPattern"], [3, 5, 1, "", "version"], [3, 5, 1, "", "versionMajor"], [3, 5, 1, "", "versionMinor"], [3, 3, 1, "", "writeInputsToDB"], [3, 3, 1, "", "writeSystemAttributes"], [3, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.DatabaseInterface": [[3, 3, 1, "", "closeDB"], [3, 5, 1, "", "database"], [3, 3, 1, "", "distributable"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "initDB"], [3, 3, 1, "", "interactBOL"], [3, 3, 1, "", "interactDistributeState"], [3, 3, 1, "", "interactEOC"], [3, 3, 1, "", "interactEOL"], [3, 3, 1, "", "interactError"], [3, 3, 1, "", "interactEveryNode"], [3, 3, 1, "", "loadState"], [3, 4, 1, "", "name"], [3, 3, 1, "", "prepRestartRun"], [3, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.compareDB3": [[4, 2, 1, "", "DiffResults"], [4, 2, 1, "", "OutputWriter"], [4, 1, 1, "", "compareDatabases"]], "armi.bookkeeping.db.compareDB3.DiffResults": [[4, 3, 1, "", "addDiff"], [4, 3, 1, "", "addStructureDiffs"], [4, 3, 1, "", "addTimeStep"], [4, 3, 1, "", "nDiffs"], [4, 3, 1, "", "reportDiffs"]], "armi.bookkeeping.db.compareDB3.OutputWriter": [[4, 3, 1, "", "writeln"]], "armi.bookkeeping.db.database3": [[5, 2, 1, "", "Database3"], [5, 1, 1, "", "collectBlockNumberDensities"], [5, 1, 1, "", "getH5GroupName"], [5, 1, 1, "", "packSpecialData"], [5, 1, 1, "", "unpackSpecialData"]], "armi.bookkeeping.db.database3.Database3": [[5, 3, 1, "", "close"], [5, 5, 1, "", "fileName"], [5, 3, 1, "", "genAuxiliaryData"], [5, 3, 1, "", "genTimeStepGroups"], [5, 3, 1, "", "genTimeSteps"], [5, 3, 1, "", "getAuxiliaryDataPath"], [5, 3, 1, "", "getH5Group"], [5, 3, 1, "", "getHistories"], [5, 3, 1, "", "getHistoriesByLocation"], [5, 3, 1, "", "getHistory"], [5, 3, 1, "", "getHistoryByLocation"], [5, 3, 1, "", "getLayout"], [5, 3, 1, "", "grabLocalCommitHash"], [5, 4, 1, "", "h5db"], [5, 3, 1, "", "hasTimeStep"], [5, 3, 1, "", "isOpen"], [5, 3, 1, "", "keys"], [5, 3, 1, "", "load"], [5, 3, 1, "", "loadBlueprints"], [5, 3, 1, "", "loadCS"], [5, 3, 1, "", "loadGeometry"], [5, 3, 1, "", "loadReadOnly"], [5, 3, 1, "", "mergeHistory"], [5, 3, 1, "", "open"], [5, 3, 1, "", "readInputsFromDB"], [5, 3, 1, "", "splitDatabase"], [5, 3, 1, "", "syncToSharedFolder"], [5, 4, 1, "", "timeNodeGroupPattern"], [5, 5, 1, "", "version"], [5, 5, 1, "", "versionMajor"], [5, 5, 1, "", "versionMinor"], [5, 3, 1, "", "writeInputsToDB"], [5, 3, 1, "", "writeSystemAttributes"], [5, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.databaseInterface": [[6, 2, 1, "", "DatabaseInterface"], [6, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.db.databaseInterface.DatabaseInterface": [[6, 3, 1, "", "closeDB"], [6, 5, 1, "", "database"], [6, 3, 1, "", "distributable"], [6, 3, 1, "", "getHistories"], [6, 3, 1, "", "getHistory"], [6, 3, 1, "", "initDB"], [6, 3, 1, "", "interactBOL"], [6, 3, 1, "", "interactDistributeState"], [6, 3, 1, "", "interactEOC"], [6, 3, 1, "", "interactEOL"], [6, 3, 1, "", "interactError"], [6, 3, 1, "", "interactEveryNode"], [6, 3, 1, "", "loadState"], [6, 4, 1, "", "name"], [6, 3, 1, "", "prepRestartRun"], [6, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[7, 1, 1, "", "databaseFactory"]], "armi.bookkeeping.db.jaggedArray": [[8, 2, 1, "", "JaggedArray"]], "armi.bookkeeping.db.jaggedArray.JaggedArray": [[8, 3, 1, "", "flatten"], [8, 3, 1, "", "fromH5"], [8, 3, 1, "", "tolist"], [8, 3, 1, "", "unpack"]], "armi.bookkeeping.db.layout": [[9, 2, 1, "", "Layout"], [9, 1, 1, "", "replaceNonesWithNonsense"], [9, 1, 1, "", "replaceNonsenseWithNones"]], "armi.bookkeeping.db.layout.Layout": [[9, 3, 1, "", "allSubclasses"], [9, 3, 1, "", "computeAncestors"], [9, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.passiveDBLoadPlugin": [[10, 2, 1, "", "PassThroughYamlize"], [10, 2, 1, "", "PassiveDBLoadPlugin"]], "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize": [[10, 4, 1, "", "attributes"], [10, 3, 1, "", "from_yaml"]], "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin": [[10, 4, 1, "", "SKIP_BP_SECTIONS"], [10, 4, 1, "", "UNKNOWN_PARAMS"], [10, 3, 1, "", "buildParamColl"], [10, 3, 1, "", "defineBlueprintsSections"], [10, 3, 1, "", "defineParameters"]], "armi.bookkeeping.db.permissions": [[11, 2, 1, "", "Permissions"]], "armi.bookkeeping.db.permissions.Permissions": [[11, 4, 1, "", "CREATE_FILE_FIE"], [11, 4, 1, "", "CREATE_FILE_FIE2"], [11, 4, 1, "", "CREATE_FILE_TIE"], [11, 4, 1, "", "DEFAULT"], [11, 4, 1, "", "READ_ONLY_FME"], [11, 4, 1, "", "READ_WRITE_CREATE"], [11, 4, 1, "", "READ_WRITE_FME"], [11, 4, 1, "", "all"], [11, 4, 1, "", "create"], [11, 4, 1, "", "read"], [11, 4, 1, "", "write"]], "armi.bookkeeping.db.tests": [[13, 0, 0, "-", "test_comparedb3"], [14, 0, 0, "-", "test_database3"], [15, 0, 0, "-", "test_databaseInterface"], [16, 0, 0, "-", "test_jaggedArray"], [17, 0, 0, "-", "test_layout"]], "armi.bookkeeping.db.tests.test_comparedb3": [[13, 2, 1, "", "TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3": [[13, 3, 1, "", "test_compareAuxData"], [13, 3, 1, "", "test_compareDatabaseDuplicate"], [13, 3, 1, "", "test_compareDatabaseSim"], [13, 3, 1, "", "test_compareSets"], [13, 3, 1, "", "test_diffResultsBasic"], [13, 3, 1, "", "test_diffSimpleData"], [13, 3, 1, "", "test_diffSpecialData"], [13, 3, 1, "", "test_outputWriter"]], "armi.bookkeeping.db.tests.test_database3": [[14, 2, 1, "", "TestDatabase3"], [14, 2, 1, "", "TestDatabase3Smaller"], [14, 2, 1, "", "TestWriteReadDatabase"]], "armi.bookkeeping.db.tests.test_database3.TestDatabase3": [[14, 3, 1, "", "makeShuffleHistory"], [14, 3, 1, "", "test_history"], [14, 3, 1, "", "test_load"], [14, 3, 1, "", "test_loadSortSetting"]], "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller": [[14, 3, 1, "", "makeHistory"], [14, 3, 1, "", "test_auxData"], [14, 3, 1, "", "test_computeParents"], [14, 3, 1, "", "test_deleting"], [14, 3, 1, "", "test_fileName"], [14, 3, 1, "", "test_getH5File"], [14, 3, 1, "", "test_grabLocalCommitHash"], [14, 3, 1, "", "test_loadBlueprints"], [14, 3, 1, "", "test_loadCS"], [14, 3, 1, "", "test_mergeHistory"], [14, 3, 1, "", "test_open"], [14, 3, 1, "", "test_prepRestartRun"], [14, 3, 1, "", "test_readInputsFromDB"], [14, 3, 1, "", "test_replaceNones"], [14, 3, 1, "", "test_splitDatabase"], [14, 3, 1, "", "test_writeToDB"]], "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase": [[14, 4, 1, "", "SMALL_YAML"], [14, 3, 1, "", "test_badData"], [14, 3, 1, "", "test_readWriteRoundTrip"]], "armi.bookkeeping.db.tests.test_databaseInterface": [[15, 2, 1, "", "MockInterface"], [15, 2, 1, "", "TestBadName"], [15, 2, 1, "", "TestDatabaseInterface"], [15, 2, 1, "", "TestDatabaseInterfaceBOL"], [15, 2, 1, "", "TestDatabaseReading"], [15, 2, 1, "", "TestDatabaseWriter"], [15, 2, 1, "", "TestStandardFollowOn"], [15, 1, 1, "", "getSimpleDBOperator"]], "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface": [[15, 3, 1, "", "interactEveryNode"], [15, 4, 1, "", "name"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName": [[15, 3, 1, "", "test_badDBName"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface": [[15, 3, 1, "", "test_demonstrateWritingInteractions"], [15, 3, 1, "", "test_distributable"], [15, 3, 1, "", "test_interactEveryNodeReturnTightCoupling"], [15, 3, 1, "", "test_noSyncDbAfterWrite"], [15, 3, 1, "", "test_syncDbAfterWrite"], [15, 3, 1, "", "test_timeNodeLoop_tightCoupling"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL": [[15, 3, 1, "", "test_interactBOL"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading": [[15, 3, 1, "", "test_growToFullCore"], [15, 3, 1, "", "test_growToFullCoreFromFactory"], [15, 3, 1, "", "test_growToFullCoreFromFactoryWithCS"], [15, 3, 1, "", "test_growToFullCoreWithCS"], [15, 3, 1, "", "test_loadReadOnly"], [15, 3, 1, "", "test_readWithoutInputs"], [15, 3, 1, "", "test_readWritten"], [15, 3, 1, "", "test_timesteps"], [15, 3, 1, "", "test_variousTypesWork"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter": [[15, 3, 1, "", "test_getHistory"], [15, 3, 1, "", "test_getHistoryByLocation"], [15, 3, 1, "", "test_metaDataEndFail"], [15, 3, 1, "", "test_metaData_endSuccessfully"], [15, 3, 1, "", "test_writeSystemAttributes"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn": [[15, 3, 1, "", "test_standardRestart"]], "armi.bookkeeping.db.tests.test_jaggedArray": [[16, 2, 1, "", "TestJaggedArray"]], "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray": [[16, 3, 1, "", "test_backwardsCompatible"], [16, 3, 1, "", "test_flatten"], [16, 3, 1, "", "test_roundTrip"], [16, 3, 1, "", "test_roundTripBool"]], "armi.bookkeeping.db.tests.test_layout": [[17, 2, 1, "", "TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout.TestLocationPacking": [[17, 3, 1, "", "test_close"], [17, 3, 1, "", "test_locationPacking"], [17, 3, 1, "", "test_locationPackingOldVersion"], [17, 3, 1, "", "test_locationPackingOlderVersions"]], "armi.bookkeeping.historyTracker": [[19, 2, 1, "", "HistoryTrackerInterface"], [19, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.historyTracker.HistoryTrackerInterface": [[19, 3, 1, "", "addAllFuelAssems"], [19, 3, 1, "", "addDetailAssembliesBOL"], [19, 3, 1, "", "addDetailAssembly"], [19, 3, 1, "", "addDetailAssemsByAssemNums"], [19, 3, 1, "", "filterTimeIndices"], [19, 3, 1, "", "getBlockHistoryVal"], [19, 3, 1, "", "getDetailAssemblies"], [19, 3, 1, "", "getDetailBlocks"], [19, 3, 1, "", "getTimeSteps"], [19, 3, 1, "", "getTrackedParams"], [19, 3, 1, "", "interactBOC"], [19, 3, 1, "", "interactBOL"], [19, 3, 1, "", "interactEOL"], [19, 4, 1, "", "name"], [19, 3, 1, "", "preloadBlockHistoryVals"], [19, 3, 1, "", "unloadBlockHistoryVals"], [19, 3, 1, "", "writeAssemHistory"]], "armi.bookkeeping.mainInterface": [[20, 2, 1, "", "MainInterface"], [20, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.mainInterface.MainInterface": [[20, 3, 1, "", "cleanARMIFiles"], [20, 3, 1, "", "cleanLastCycleFiles"], [20, 3, 1, "", "interactBOC"], [20, 3, 1, "", "interactBOL"], [20, 3, 1, "", "interactEOL"], [20, 3, 1, "", "interactEveryNode"], [20, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler": [[21, 2, 1, "", "InstanceCounter"], [21, 2, 1, "", "KlassCounter"], [21, 2, 1, "", "MemoryProfiler"], [21, 2, 1, "", "PrintSystemMemoryUsageAction"], [21, 2, 1, "", "ProfileMemoryUsageAction"], [21, 2, 1, "", "SystemAndProcessMemoryUsage"], [21, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.memoryProfiler.InstanceCounter": [[21, 3, 1, "", "add"]], "armi.bookkeeping.memoryProfiler.KlassCounter": [[21, 3, 1, "", "countObjects"]], "armi.bookkeeping.memoryProfiler.MemoryProfiler": [[21, 3, 1, "", "checkForDuplicateObjectsOnArmiModel"], [21, 3, 1, "", "displayMemoryUsage"], [21, 3, 1, "", "getReferrers"], [21, 3, 1, "", "interactBOL"], [21, 3, 1, "", "interactEOL"], [21, 3, 1, "", "interactEveryNode"], [21, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction": [[21, 3, 1, "", "invokeHook"], [21, 5, 1, "", "maxProcessMemoryInMB"], [21, 5, 1, "", "minProcessMemoryInMB"], [21, 3, 1, "", "printUsage"]], "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction": [[21, 3, 1, "", "invokeHook"]], "armi.bookkeeping.report": [[23, 0, 0, "-", "data"], [24, 0, 0, "-", "html"], [25, 0, 0, "-", "newReportUtils"], [26, 0, 0, "-", "newReports"], [27, 0, 0, "-", "reportInterface"], [28, 0, 0, "-", "reportingUtils"], [22, 1, 1, "", "setData"], [29, 0, 0, "-", "tests"]], "armi.bookkeeping.report.data": [[23, 2, 1, "", "Group"], [23, 2, 1, "", "Image"], [23, 2, 1, "", "Report"], [23, 2, 1, "", "Table"]], "armi.bookkeeping.report.data.Group": [[23, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Image": [[23, 4, 1, "", "count"], [23, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Report": [[23, 3, 1, "", "addToReport"], [23, 4, 1, "", "componentWellGroups"], [23, 4, 1, "", "groupsOrderFirst"], [23, 3, 1, "", "writeGroupsHTML"], [23, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Table": [[23, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.html": [[24, 2, 1, "", "A"], [24, 2, 1, "", "B"], [24, 2, 1, "", "Body"], [24, 2, 1, "", "Caption"], [24, 2, 1, "", "Div"], [24, 2, 1, "", "Footer"], [24, 2, 1, "", "H1"], [24, 2, 1, "", "H2"], [24, 2, 1, "", "H3"], [24, 2, 1, "", "H4"], [24, 2, 1, "", "HTMLFile"], [24, 2, 1, "", "Head"], [24, 2, 1, "", "Html"], [24, 2, 1, "", "Img"], [24, 2, 1, "", "LI"], [24, 2, 1, "", "Link"], [24, 2, 1, "", "P"], [24, 2, 1, "", "Script"], [24, 2, 1, "", "Span"], [24, 2, 1, "", "Style"], [24, 2, 1, "", "TBody"], [24, 2, 1, "", "TD"], [24, 2, 1, "", "TH"], [24, 2, 1, "", "THead"], [24, 2, 1, "", "TR"], [24, 2, 1, "", "Table"], [24, 2, 1, "", "Tag"], [24, 2, 1, "", "Title"], [24, 2, 1, "", "UL"], [24, 1, 1, "", "encode64"], [24, 1, 1, "", "writeStandardReportTemplate"]], "armi.bookkeeping.report.html.A": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.B": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Body": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Caption": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Div": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Footer": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H1": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H2": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H3": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H4": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.HTMLFile": [[24, 3, 1, "", "write"], [24, 3, 1, "", "writeEscaped"]], "armi.bookkeeping.report.html.Head": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Html": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Img": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.LI": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Link": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.P": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Script": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Span": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Style": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TBody": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TD": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TH": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.THead": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TR": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Table": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Tag": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Title": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.UL": [[24, 4, 1, "", "tag"]], "armi.bookkeeping.report.newReportUtils": [[25, 6, 1, "", "DESIGN"], [25, 1, 1, "", "comprehensiveBOLContent"], [25, 1, 1, "", "createDimensionReport"], [25, 1, 1, "", "getPinDesignTable"], [25, 1, 1, "", "insertAreaFractionsReport"], [25, 1, 1, "", "insertBlockDesignReport"], [25, 1, 1, "", "insertBlockDiagrams"], [25, 1, 1, "", "insertBlueprintContent"], [25, 1, 1, "", "insertCoreAndAssemblyMaps"], [25, 1, 1, "", "insertCoreDesignReport"], [25, 1, 1, "", "insertDesignContent"], [25, 1, 1, "", "insertEndOfLifeContent"], [25, 1, 1, "", "insertGeneralReportContent"], [25, 1, 1, "", "insertMetaTable"], [25, 1, 1, "", "insertSettingsData"]], "armi.bookkeeping.report.newReports": [[26, 2, 1, "", "Image"], [26, 2, 1, "", "ReportContent"], [26, 2, 1, "", "ReportNode"], [26, 2, 1, "", "ReportStage"], [26, 2, 1, "", "Section"], [26, 2, 1, "", "Table"], [26, 2, 1, "", "TimeSeries"], [26, 1, 1, "", "encode64"]], "armi.bookkeeping.report.newReports.Image": [[26, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportContent": [[26, 3, 1, "", "get"], [26, 3, 1, "", "tableOfContents"], [26, 3, 1, "", "writeReports"]], "armi.bookkeeping.report.newReports.ReportNode": [[26, 4, 1, "", "levelDict"], [26, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportStage": [[26, 4, 1, "", "Begin"], [26, 4, 1, "", "End"], [26, 4, 1, "", "Standard"]], "armi.bookkeeping.report.newReports.Section": [[26, 3, 1, "", "addChildElement"], [26, 3, 1, "", "get"], [26, 3, 1, "", "items"], [26, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.Table": [[26, 3, 1, "", "addRow"], [26, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.TimeSeries": [[26, 3, 1, "", "add"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "render"]], "armi.bookkeeping.report.reportInterface": [[27, 2, 1, "", "ReportInterface"], [27, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.report.reportInterface.ReportInterface": [[27, 3, 1, "", "countAssembliesSFP"], [27, 3, 1, "", "distributable"], [27, 3, 1, "", "generateDesignReport"], [27, 3, 1, "", "interactBOC"], [27, 3, 1, "", "interactBOL"], [27, 3, 1, "", "interactEOC"], [27, 3, 1, "", "interactEOL"], [27, 3, 1, "", "interactEveryNode"], [27, 4, 1, "", "name"], [27, 3, 1, "", "printReports"], [27, 3, 1, "", "reportSFP"], [27, 4, 1, "", "reports"], [27, 3, 1, "", "writeReports"], [27, 3, 1, "", "writeRunSummary"]], "armi.bookkeeping.report.reportingUtils": [[28, 1, 1, "", "getInterfaceStackSummary"], [28, 1, 1, "", "getNodeName"], [28, 1, 1, "", "getSystemInfo"], [28, 1, 1, "", "makeBlockDesignReport"], [28, 1, 1, "", "makeCoreAndAssemblyMaps"], [28, 1, 1, "", "makeCoreDesignReport"], [28, 1, 1, "", "setNeutronBalancesReport"], [28, 1, 1, "", "summarizePinDesign"], [28, 1, 1, "", "summarizePower"], [28, 1, 1, "", "summarizePowerPeaking"], [28, 1, 1, "", "writeAssemblyMassSummary"], [28, 1, 1, "", "writeCycleSummary"], [28, 1, 1, "", "writeTightCouplingConvergenceSummary"], [28, 1, 1, "", "writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[30, 0, 0, "-", "test_newReport"], [31, 0, 0, "-", "test_report"]], "armi.bookkeeping.report.tests.test_newReport": [[30, 2, 1, "", "TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation": [[30, 3, 1, "", "test_neutronicsPlotFunctions"], [30, 3, 1, "", "test_reportBasics"], [30, 3, 1, "", "test_reportContents"], [30, 3, 1, "", "test_reportContentsEnd"], [30, 3, 1, "", "test_reportLogs"], [30, 3, 1, "", "test_tableCreation"], [30, 3, 1, "", "test_timeSeries"], [30, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report": [[31, 2, 1, "", "TestReport"], [31, 2, 1, "", "TestReportInterface"], [31, 2, 1, "", "TestReportingUtils"]], "armi.bookkeeping.report.tests.test_report.TestReport": [[31, 3, 1, "", "test_getData"], [31, 3, 1, "", "test_reactorSpecificReporting"], [31, 3, 1, "", "test_setData"], [31, 3, 1, "", "test_writeWelcomeHeaders"]], "armi.bookkeeping.report.tests.test_report.TestReportInterface": [[31, 3, 1, "", "test_distributableReportInt"], [31, 3, 1, "", "test_interactBOC"], [31, 3, 1, "", "test_interactBOLReportInt"], [31, 3, 1, "", "test_interactEOC"], [31, 3, 1, "", "test_interactEOL"], [31, 3, 1, "", "test_interactEveryNode"], [31, 3, 1, "", "test_printReports"], [31, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report.TestReportingUtils": [[31, 3, 1, "", "test_getNodeName"], [31, 3, 1, "", "test_getSystemInfo"], [31, 3, 1, "", "test_getSystemInfoLinux"], [31, 3, 1, "", "test_getSystemInfoMac"], [31, 3, 1, "", "test_getSystemInfoWindows"]], "armi.bookkeeping.snapshotInterface": [[32, 2, 1, "", "SnapshotInterface"], [32, 1, 1, "", "describeInterfaces"], [32, 1, 1, "", "extractCycleNodeFromStamp"], [32, 1, 1, "", "getCycleNodeStamp"]], "armi.bookkeeping.snapshotInterface.SnapshotInterface": [[32, 3, 1, "", "activateDefaultSnapshots"], [32, 3, 1, "", "interactBOL"], [32, 3, 1, "", "interactCoupled"], [32, 3, 1, "", "interactEveryNode"], [32, 4, 1, "", "name"]], "armi.bookkeeping.tests": [[34, 0, 0, "-", "test_historyTracker"], [35, 0, 0, "-", "test_memoryProfiler"], [36, 0, 0, "-", "test_snapshot"]], "armi.bookkeeping.tests.test_historyTracker": [[34, 2, 1, "", "TestHistoryTracker"], [34, 2, 1, "", "TestHistoryTrackerNoModel"], [34, 1, 1, "", "runTutorialNotebook"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker": [[34, 3, 1, "", "test_calcMGFluence"], [34, 3, 1, "", "test_getBlockInAssembly"], [34, 3, 1, "", "test_historyParameters"], [34, 3, 1, "", "test_historyReport"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel": [[34, 3, 1, "", "test_blockName"], [34, 3, 1, "", "test_timestepFiltering"], [34, 3, 1, "", "test_timestepFilteringWithGap"]], "armi.bookkeeping.tests.test_memoryProfiler": [[35, 2, 1, "", "KlassCounterTests"], [35, 2, 1, "", "TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests": [[35, 3, 1, "", "get_containers"], [35, 3, 1, "", "test_countHandlesRecursion"], [35, 3, 1, "", "test_expandContainer"]], "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler": [[35, 3, 1, "", "test_checkForDuplicateObjectsOnArmiModel"], [35, 3, 1, "", "test_displayMemoryUsage"], [35, 3, 1, "", "test_fullBreakdown"], [35, 3, 1, "", "test_getReferrers"], [35, 3, 1, "", "test_printFullMemoryBreakdown"], [35, 3, 1, "", "test_profileMemoryUsageAction"]], "armi.bookkeeping.tests.test_snapshot": [[36, 2, 1, "", "MockReactor"], [36, 2, 1, "", "MockReactorParams"], [36, 2, 1, "", "TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface": [[36, 3, 1, "", "test_activeateDefaultSnapshots_17cycles5BurnSteps"], [36, 3, 1, "", "test_activeateDefaultSnapshots_30cycles2BurnSteps"], [36, 3, 1, "", "test_interactCoupled"], [36, 3, 1, "", "test_interactEveryNode"]], "armi.bookkeeping.visualization": [[38, 0, 0, "-", "dumper"], [39, 0, 0, "-", "entryPoint"], [40, 0, 0, "-", "tests"], [43, 0, 0, "-", "utils"], [44, 0, 0, "-", "vtk"], [45, 0, 0, "-", "xdmf"]], "armi.bookkeeping.visualization.dumper": [[38, 2, 1, "", "VisFileDumper"]], "armi.bookkeeping.visualization.dumper.VisFileDumper": [[38, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.entryPoint": [[39, 2, 1, "", "VisFileEntryPoint"]], "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint": [[39, 3, 1, "", "addOptions"], [39, 4, 1, "", "description"], [39, 3, 1, "", "invoke"], [39, 4, 1, "", "name"], [39, 3, 1, "", "parse"], [39, 4, 1, "", "settingsArgument"]], "armi.bookkeeping.visualization.tests": [[41, 0, 0, "-", "test_vis"], [42, 0, 0, "-", "test_xdmf"]], "armi.bookkeeping.visualization.tests.test_vis": [[41, 2, 1, "", "TestVisDump"], [41, 2, 1, "", "TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVisDump": [[41, 3, 1, "", "test_cartesianMesh"], [41, 3, 1, "", "test_dumpReactorVtk"], [41, 3, 1, "", "test_dumpReactorXdmf"], [41, 3, 1, "", "test_hexMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh": [[41, 3, 1, "", "test_testVtkMesh"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[42, 2, 1, "", "TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf": [[42, 3, 1, "", "test_dedupTimes"]], "armi.bookkeeping.visualization.utils": [[43, 2, 1, "", "VtkMesh"], [43, 1, 1, "", "createAssemMesh"], [43, 1, 1, "", "createBlockMesh"], [43, 1, 1, "", "createReactorAssemMesh"], [43, 1, 1, "", "createReactorBlockMesh"]], "armi.bookkeeping.visualization.utils.VtkMesh": [[43, 3, 1, "", "append"], [43, 3, 1, "", "empty"], [43, 3, 1, "", "write"], [43, 5, 1, "", "x"], [43, 5, 1, "", "y"], [43, 5, 1, "", "z"]], "armi.bookkeeping.visualization.vtk": [[44, 2, 1, "", "VtkDumper"]], "armi.bookkeeping.visualization.vtk.VtkDumper": [[44, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.xdmf": [[45, 2, 1, "", "XdmfDumper"]], "armi.bookkeeping.visualization.xdmf.XdmfDumper": [[45, 3, 1, "", "dumpState"]], "armi.cases": [[47, 0, 0, "-", "case"], [48, 0, 0, "-", "inputModifiers"], [55, 0, 0, "-", "suite"], [56, 0, 0, "-", "suiteBuilder"], [57, 0, 0, "-", "tests"]], "armi.cases.case": [[47, 2, 1, "", "Case"], [47, 1, 1, "", "copyInterfaceInputs"]], "armi.cases.case.Case": [[47, 3, 1, "", "addExplicitDependency"], [47, 5, 1, "", "bp"], [47, 3, 1, "", "checkInputs"], [47, 3, 1, "", "clone"], [47, 3, 1, "", "compare"], [47, 5, 1, "", "dbName"], [47, 5, 1, "", "dependencies"], [47, 5, 1, "", "directory"], [47, 5, 1, "", "geom"], [47, 3, 1, "", "getPotentialParentFromSettingValue"], [47, 5, 1, "", "independentVariables"], [47, 3, 1, "", "initializeOperator"], [47, 3, 1, "", "run"], [47, 3, 1, "", "setUpTaskDependence"], [47, 3, 1, "", "summarizeDesign"], [47, 5, 1, "", "title"], [47, 3, 1, "", "writeInputs"]], "armi.cases.inputModifiers": [[49, 0, 0, "-", "inputModifiers"], [50, 0, 0, "-", "neutronicsModifiers"], [51, 0, 0, "-", "pinTypeInputModifiers"], [52, 0, 0, "-", "tests"]], "armi.cases.inputModifiers.inputModifiers": [[49, 2, 1, "", "BluePrintBlockModifier"], [49, 2, 1, "", "FullCoreModifier"], [49, 2, 1, "", "InputModifier"], [49, 2, 1, "", "MultiSettingModifier"], [49, 2, 1, "", "SamplingInputModifier"], [49, 2, 1, "", "SettingsModifier"]], "armi.cases.inputModifiers.inputModifiers.InputModifier": [[49, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.neutronicsModifiers": [[50, 2, 1, "", "NeutronicConvergenceModifier"], [50, 2, 1, "", "NeutronicMeshsSizeModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers": [[51, 2, 1, "", "CladThicknessByIDModifier"], [51, 2, 1, "", "CladThicknessByODModifier"], [51, 2, 1, "", "SmearDensityModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier": [[51, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier": [[51, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.tests": [[53, 0, 0, "-", "test_inputModifiers"], [54, 0, 0, "-", "test_pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests.test_inputModifiers": [[53, 2, 1, "", "MockGeom"], [53, 2, 1, "", "NeutronicsKernelOpts"], [53, 2, 1, "", "TestFullCoreModifier"], [53, 2, 1, "", "TestSettingsModifiers"], [53, 2, 1, "", "TestsuiteBuilderIntegrations"]], "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom": [[53, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier": [[53, 3, 1, "", "test_fullCoreConversion"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers": [[53, 3, 1, "", "test_NeutronicConvergenceModifier"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations": [[53, 3, 1, "", "test_bluePrintBlockModifier"], [53, 3, 1, "", "test_settingsModifier"], [53, 3, 1, "", "test_smearDensityFail"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers": [[54, 2, 1, "", "MockGeom"], [54, 2, 1, "", "TestBlueprintModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom": [[54, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers": [[54, 3, 1, "", "test_AdjustSmearDensity"], [54, 3, 1, "", "test_CladThickenessByIDModifier"], [54, 3, 1, "", "test_CladThickenessByODModifier"]], "armi.cases.suite": [[55, 2, 1, "", "CaseSuite"]], "armi.cases.suite.CaseSuite": [[55, 3, 1, "", "add"], [55, 3, 1, "", "clone"], [55, 3, 1, "", "compare"], [55, 3, 1, "", "discover"], [55, 3, 1, "", "echoConfiguration"], [55, 3, 1, "", "remove"], [55, 3, 1, "", "run"], [55, 3, 1, "", "writeInputs"], [55, 3, 1, "", "writeTable"]], "armi.cases.suiteBuilder": [[56, 2, 1, "", "FullFactorialSuiteBuilder"], [56, 2, 1, "", "FullFactorialSuiteBuilderNoisy"], [56, 2, 1, "", "LatinHyperCubeSuiteBuilder"], [56, 2, 1, "", "SeparateEffectsSuiteBuilder"], [56, 2, 1, "", "SuiteBuilder"], [56, 1, 1, "", "getInputModifiers"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilder": [[56, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy": [[56, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder": [[56, 3, 1, "", "addDegreeOfFreedom"], [56, 3, 1, "", "buildSuite"]], "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder": [[56, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.SuiteBuilder": [[56, 3, 1, "", "addDegreeOfFreedom"], [56, 3, 1, "", "addModifierSet"], [56, 3, 1, "", "buildSuite"]], "armi.cases.tests": [[58, 0, 0, "-", "test_cases"], [59, 0, 0, "-", "test_suiteBuilder"]], "armi.cases.tests.test_cases": [[58, 2, 1, "", "MultiFilesInterfaces"], [58, 2, 1, "", "TestArmiCase"], [58, 2, 1, "", "TestCaseSuiteComparison"], [58, 2, 1, "", "TestCaseSuiteDependencies"], [58, 2, 1, "", "TestCopyInterfaceInputs"], [58, 2, 1, "", "TestExtraInputWriting"], [58, 2, 1, "", "TestPluginForCopyInterfacesMultipleFiles"], [58, 2, 1, "", "TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases.MultiFilesInterfaces": [[58, 4, 1, "", "name"], [58, 3, 1, "", "specifyInputs"]], "armi.cases.tests.test_cases.TestArmiCase": [[58, 3, 1, "", "test_clone"], [58, 3, 1, "", "test_endCoverage"], [58, 3, 1, "", "test_endProfiling"], [58, 3, 1, "", "test_getCoverageRcFile"], [58, 3, 1, "", "test_independentVariables"], [58, 3, 1, "", "test_run"], [58, 3, 1, "", "test_setUpTaskDependence"], [58, 3, 1, "", "test_startCoverage"], [58, 3, 1, "", "test_startProfiling"], [58, 3, 1, "", "test_summarizeDesign"]], "armi.cases.tests.test_cases.TestCaseSuiteComparison": [[58, 3, 1, "", "test_compareNoDiffs"]], "armi.cases.tests.test_cases.TestCaseSuiteDependencies": [[58, 3, 1, "", "test_checkInputs"], [58, 3, 1, "", "test_clone"], [58, 3, 1, "", "test_dependenciesWithObscurePaths"], [58, 3, 1, "", "test_dependencyFromDBName"], [58, 3, 1, "", "test_dependencyFromExplictRepeatShuffles"], [58, 3, 1, "", "test_explicitDependency"], [58, 3, 1, "", "test_titleSetterGetter"]], "armi.cases.tests.test_cases.TestCopyInterfaceInputs": [[58, 3, 1, "", "test_copyInputsHelper"], [58, 3, 1, "", "test_copyInterfaceInputs_absPath"], [58, 3, 1, "", "test_copyInterfaceInputs_multipleFiles"], [58, 3, 1, "", "test_copyInterfaceInputs_nonFilePath"], [58, 3, 1, "", "test_copyInterfaceInputs_relPath"], [58, 3, 1, "", "test_copyInterfaceInputs_singleFile"], [58, 3, 1, "", "test_copyInterfaceInputs_wildcardFile"], [58, 3, 1, "", "test_failOnDuplicateSetting"]], "armi.cases.tests.test_cases.TestExtraInputWriting": [[58, 3, 1, "", "test_writeInput"]], "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles": [[58, 3, 1, "", "defineSettings"], [58, 3, 1, "", "exposeInterfaces"]], "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting": [[58, 3, 1, "", "defineSettings"]], "armi.cases.tests.test_suiteBuilder": [[59, 2, 1, "", "LatinHyperCubeModifier"], [59, 2, 1, "", "SettingModifier"], [59, 2, 1, "", "TestFullFactorialSuiteBuilder"], [59, 2, 1, "", "TestLatinHyperCubeSuiteBuilder"], [59, 2, 1, "", "TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder": [[59, 3, 1, "", "test_buildSuite"]], "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder": [[59, 3, 1, "", "test_addDegreeOfFreedom"], [59, 3, 1, "", "test_buildSuite"], [59, 3, 1, "", "test_initialize"]], "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder": [[59, 3, 1, "", "test_buildSuite"]], "armi.cli": [[60, 2, 1, "", "ArmiCLI"], [60, 2, 1, "", "ArmiParser"], [60, 2, 1, "", "EntryPointsPlugin"], [61, 0, 0, "-", "checkInputs"], [62, 0, 0, "-", "cleanTemps"], [63, 0, 0, "-", "clone"], [64, 0, 0, "-", "compareCases"], [65, 0, 0, "-", "database"], [66, 0, 0, "-", "entryPoint"], [67, 0, 0, "-", "gridGui"], [68, 0, 0, "-", "migrateInputs"], [69, 0, 0, "-", "modify"], [70, 0, 0, "-", "reportsEntryPoint"], [71, 0, 0, "-", "run"], [72, 0, 0, "-", "runSuite"], [60, 1, 1, "", "splash"], [73, 0, 0, "-", "tests"]], "armi.cli.ArmiCLI": [[60, 3, 1, "", "executeCommand"], [60, 3, 1, "", "listCommands"], [60, 3, 1, "", "run"], [60, 3, 1, "", "showVersion"]], "armi.cli.ArmiParser": [[60, 3, 1, "", "print_help"]], "armi.cli.EntryPointsPlugin": [[60, 3, 1, "", "defineEntryPoints"]], "armi.cli.checkInputs": [[61, 2, 1, "", "CheckInputEntryPoint"], [61, 2, 1, "", "ExpandBlueprints"]], "armi.cli.checkInputs.CheckInputEntryPoint": [[61, 3, 1, "", "addOptions"], [61, 3, 1, "", "invoke"], [61, 4, 1, "", "name"], [61, 4, 1, "", "settingsArgument"]], "armi.cli.checkInputs.ExpandBlueprints": [[61, 3, 1, "", "addOptions"], [61, 3, 1, "", "invoke"], [61, 4, 1, "", "name"], [61, 4, 1, "", "settingsArgument"], [61, 4, 1, "", "splash"]], "armi.cli.cleanTemps": [[62, 2, 1, "", "CleanTemps"]], "armi.cli.cleanTemps.CleanTemps": [[62, 3, 1, "", "invoke"], [62, 4, 1, "", "name"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.clone": [[63, 2, 1, "", "CloneArmiRunCommandBatch"], [63, 2, 1, "", "CloneArmiRunCommandInteractive"], [63, 2, 1, "", "CloneSuiteCommand"]], "armi.cli.clone.CloneArmiRunCommandBatch": [[63, 3, 1, "", "addOptions"], [63, 3, 1, "", "invoke"], [63, 4, 1, "", "name"], [63, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneArmiRunCommandInteractive": [[63, 4, 1, "", "name"], [63, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneSuiteCommand": [[63, 3, 1, "", "addOptions"], [63, 3, 1, "", "invoke"], [63, 4, 1, "", "name"], [63, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases": [[64, 2, 1, "", "CompareCases"], [64, 2, 1, "", "CompareSuites"]], "armi.cli.compareCases.CompareCases": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "name"], [64, 3, 1, "", "parse"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases.CompareSuites": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "name"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.database": [[65, 2, 1, "", "ExtractInputs"], [65, 2, 1, "", "InjectInputs"]], "armi.cli.database.ExtractInputs": [[65, 3, 1, "", "addOptions"], [65, 3, 1, "", "invoke"], [65, 4, 1, "", "mode"], [65, 4, 1, "", "name"], [65, 3, 1, "", "parse_args"], [65, 4, 1, "", "settingsArgument"]], "armi.cli.database.InjectInputs": [[65, 3, 1, "", "addOptions"], [65, 3, 1, "", "invoke"], [65, 4, 1, "", "mode"], [65, 4, 1, "", "name"], [65, 4, 1, "", "settingsArgument"]], "armi.cli.entryPoint": [[66, 2, 1, "", "EntryPoint"], [66, 1, 1, "", "loadSettings"], [66, 1, 1, "", "setCaseTitle"], [66, 1, 1, "", "setSetting"], [66, 1, 1, "", "storeBool"]], "armi.cli.entryPoint.EntryPoint": [[66, 3, 1, "", "addOptions"], [66, 3, 1, "", "createOptionFromSetting"], [66, 4, 1, "", "description"], [66, 3, 1, "", "invoke"], [66, 4, 1, "", "mode"], [66, 4, 1, "", "name"], [66, 3, 1, "", "parse"], [66, 3, 1, "", "parse_args"], [66, 4, 1, "", "settingsArgument"], [66, 4, 1, "", "splash"]], "armi.cli.gridGui": [[67, 2, 1, "", "GridGuiEntryPoint"]], "armi.cli.gridGui.GridGuiEntryPoint": [[67, 3, 1, "", "addOptions"], [67, 3, 1, "", "invoke"], [67, 4, 1, "", "name"], [67, 4, 1, "", "settingsArgument"]], "armi.cli.migrateInputs": [[68, 2, 1, "", "MigrateInputs"]], "armi.cli.migrateInputs.MigrateInputs": [[68, 3, 1, "", "addOptions"], [68, 3, 1, "", "invoke"], [68, 4, 1, "", "name"], [68, 4, 1, "", "settingsArgument"]], "armi.cli.modify": [[69, 2, 1, "", "ModifyCaseSettingsCommand"]], "armi.cli.modify.ModifyCaseSettingsCommand": [[69, 3, 1, "", "addOptions"], [69, 3, 1, "", "invoke"], [69, 4, 1, "", "name"], [69, 4, 1, "", "settingsArgument"]], "armi.cli.reportsEntryPoint": [[70, 2, 1, "", "ReportsEntryPoint"], [70, 1, 1, "", "createReportFromSettings"]], "armi.cli.reportsEntryPoint.ReportsEntryPoint": [[70, 3, 1, "", "addOptions"], [70, 4, 1, "", "description"], [70, 3, 1, "", "invoke"], [70, 4, 1, "", "name"], [70, 4, 1, "", "report_out_dir"], [70, 4, 1, "", "settingsArgument"], [70, 3, 1, "", "toTwoTuple"]], "armi.cli.run": [[71, 2, 1, "", "RunEntryPoint"]], "armi.cli.run.RunEntryPoint": [[71, 3, 1, "", "addOptions"], [71, 3, 1, "", "invoke"], [71, 4, 1, "", "name"], [71, 4, 1, "", "settingsArgument"]], "armi.cli.runSuite": [[72, 2, 1, "", "RunSuiteCommand"]], "armi.cli.runSuite.RunSuiteCommand": [[72, 3, 1, "", "addOptions"], [72, 3, 1, "", "invoke"], [72, 4, 1, "", "name"], [72, 4, 1, "", "settingsArgument"]], "armi.cli.tests": [[74, 0, 0, "-", "test_runEntryPoint"], [75, 0, 0, "-", "test_runSuite"]], "armi.cli.tests.test_runEntryPoint": [[74, 2, 1, "", "TestCheckInputEntryPoint"], [74, 2, 1, "", "TestCloneArmiRunCommandBatch"], [74, 2, 1, "", "TestCloneSuiteCommand"], [74, 2, 1, "", "TestCompareCases"], [74, 2, 1, "", "TestCompareIsotxsLibsEntryPoint"], [74, 2, 1, "", "TestCompareSuites"], [74, 2, 1, "", "TestExpandBlueprints"], [74, 2, 1, "", "TestExtractInputs"], [74, 2, 1, "", "TestInitializationEntryPoints"], [74, 2, 1, "", "TestInjectInputs"], [74, 2, 1, "", "TestMigrateInputs"], [74, 2, 1, "", "TestModifyCaseSettingsCommand"], [74, 2, 1, "", "TestReportsEntryPoint"], [74, 2, 1, "", "TestRunEntryPoint"], [74, 2, 1, "", "TestRunSuiteCommand"], [74, 2, 1, "", "TestVisFileEntryPointCommand"], [74, 1, 1, "", "buildTestDB"]], "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint": [[74, 3, 1, "", "test_checkInputEntryPointBasics"], [74, 3, 1, "", "test_checkInputEntryPointInvoke"]], "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch": [[74, 3, 1, "", "test_cloneArmiRunCommandBatchBasics"], [74, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeMedium"], [74, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeShort"]], "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand": [[74, 3, 1, "", "test_cloneSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareCases": [[74, 3, 1, "", "test_compareCasesBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint": [[74, 3, 1, "", "test_compareIsotxsLibsBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareSuites": [[74, 3, 1, "", "test_compareSuitesBasics"]], "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints": [[74, 3, 1, "", "test_expandBlueprintsBasics"]], "armi.cli.tests.test_runEntryPoint.TestExtractInputs": [[74, 3, 1, "", "test_extractInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints": [[74, 3, 1, "", "test_entryPointInitialization"]], "armi.cli.tests.test_runEntryPoint.TestInjectInputs": [[74, 3, 1, "", "test_injectInputsBasics"], [74, 3, 1, "", "test_injectInputsInvokeIgnore"], [74, 3, 1, "", "test_injectInputsInvokeNoData"]], "armi.cli.tests.test_runEntryPoint.TestMigrateInputs": [[74, 3, 1, "", "test_migrateInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand": [[74, 3, 1, "", "test_modifyCaseSettingsCommandBasics"], [74, 3, 1, "", "test_modifyCaseSettingsCommandInvoke"]], "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint": [[74, 3, 1, "", "test_cleanArgs"], [74, 3, 1, "", "test_reportsEntryPointBasics"], [74, 3, 1, "", "test_toTwoTuple"]], "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint": [[74, 3, 1, "", "test_executeCommand"], [74, 3, 1, "", "test_runCommandHelp"], [74, 3, 1, "", "test_runEntryPointBasics"]], "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand": [[74, 3, 1, "", "test_runSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand": [[74, 3, 1, "", "test_visFileEntryPointBasics"]], "armi.cli.tests.test_runSuite": [[75, 2, 1, "", "TestRunSuiteSuite"]], "armi.cli.tests.test_runSuite.TestRunSuiteSuite": [[75, 3, 1, "", "test_listCommand"], [75, 3, 1, "", "test_run"], [75, 3, 1, "", "test_showVersion"]], "armi.conftest": [[76, 1, 1, "", "bootstrapArmiTestEnv"], [76, 1, 1, "", "pytest_sessionstart"]], "armi.context": [[77, 2, 1, "", "Mode"], [77, 1, 1, "", "activateLocalFastPath"], [77, 1, 1, "", "cleanAllArmiTempDirs"], [77, 1, 1, "", "cleanTempDirs"], [77, 1, 1, "", "disconnectAllHdfDBs"], [77, 1, 1, "", "getFastPath"]], "armi.context.Mode": [[77, 4, 1, "", "BATCH"], [77, 4, 1, "", "GUI"], [77, 4, 1, "", "INTERACTIVE"], [77, 3, 1, "", "setMode"]], "armi.interfaces": [[78, 2, 1, "", "InputWriter"], [78, 2, 1, "", "Interface"], [78, 2, 1, "", "InterfaceInfo"], [78, 2, 1, "", "OutputReader"], [78, 2, 1, "", "STACK_ORDER"], [78, 2, 1, "", "TightCoupler"], [78, 1, 1, "", "getActiveInterfaceInfo"], [78, 1, 1, "", "isInterfaceActive"]], "armi.interfaces.InputWriter": [[78, 3, 1, "", "getInterface"], [78, 3, 1, "", "write"]], "armi.interfaces.Interface": [[78, 2, 1, "", "Distribute"], [78, 3, 1, "", "attachReactor"], [78, 3, 1, "", "bolForce"], [78, 3, 1, "", "detachReactor"], [78, 3, 1, "", "distributable"], [78, 3, 1, "", "duplicate"], [78, 3, 1, "", "enabled"], [78, 4, 1, "", "function"], [78, 3, 1, "", "getDependencies"], [78, 3, 1, "", "getHistoryParams"], [78, 3, 1, "", "getInputFiles"], [78, 3, 1, "", "getInterface"], [78, 3, 1, "", "getTightCouplingValue"], [78, 3, 1, "", "interactBOC"], [78, 3, 1, "", "interactBOL"], [78, 3, 1, "", "interactCoupled"], [78, 3, 1, "", "interactDistributeState"], [78, 3, 1, "", "interactEOC"], [78, 3, 1, "", "interactEOL"], [78, 3, 1, "", "interactError"], [78, 3, 1, "", "interactEveryNode"], [78, 3, 1, "", "interactInit"], [78, 3, 1, "", "isRequestedDetailPoint"], [78, 4, 1, "", "name"], [78, 3, 1, "", "nameContains"], [78, 3, 1, "", "postDistributeState"], [78, 3, 1, "", "preDistributeState"], [78, 3, 1, "", "readOutput"], [78, 3, 1, "", "specifyInputs"], [78, 3, 1, "", "updatePhysicsCouplingControl"], [78, 3, 1, "", "workerOperate"], [78, 3, 1, "", "writeInput"]], "armi.interfaces.Interface.Distribute": [[78, 4, 1, "", "DUPLICATE"], [78, 4, 1, "", "NEW"], [78, 4, 1, "", "SKIP"]], "armi.interfaces.InterfaceInfo": [[78, 4, 1, "", "interfaceCls"], [78, 4, 1, "", "kwargs"], [78, 4, 1, "", "order"]], "armi.interfaces.OutputReader": [[78, 3, 1, "", "apply"], [78, 3, 1, "", "getInterface"], [78, 3, 1, "", "read"]], "armi.interfaces.STACK_ORDER": [[78, 4, 1, "", "AFTER"], [78, 4, 1, "", "BEFORE"], [78, 4, 1, "", "BOOKKEEPING"], [78, 4, 1, "", "CRITICAL_CONTROL"], [78, 4, 1, "", "CROSS_SECTIONS"], [78, 4, 1, "", "DEPLETION"], [78, 4, 1, "", "FLUX"], [78, 4, 1, "", "FUEL_MANAGEMENT"], [78, 4, 1, "", "FUEL_PERFORMANCE"], [78, 4, 1, "", "POSTPROCESSING"], [78, 4, 1, "", "PREPROCESSING"], [78, 4, 1, "", "REACTIVITY_COEFFS"], [78, 4, 1, "", "THERMAL_HYDRAULICS"], [78, 4, 1, "", "TRANSIENT"]], "armi.interfaces.TightCoupler": [[78, 3, 1, "", "getListDimension"], [78, 3, 1, "", "isConverged"], [78, 3, 1, "", "storePreviousIterationValue"]], "armi.materials": [[80, 0, 0, "-", "air"], [81, 0, 0, "-", "alloy200"], [82, 0, 0, "-", "b4c"], [83, 0, 0, "-", "be9"], [84, 0, 0, "-", "caH2"], [85, 0, 0, "-", "californium"], [86, 0, 0, "-", "concrete"], [87, 0, 0, "-", "copper"], [88, 0, 0, "-", "cs"], [89, 0, 0, "-", "custom"], [90, 0, 0, "-", "graphite"], [91, 0, 0, "-", "hafnium"], [92, 0, 0, "-", "hastelloyN"], [93, 0, 0, "-", "ht9"], [79, 1, 1, "", "importMaterialsIntoModuleNamespace"], [94, 0, 0, "-", "inconel"], [95, 0, 0, "-", "inconel600"], [96, 0, 0, "-", "inconel625"], [97, 0, 0, "-", "inconel800"], [98, 0, 0, "-", "inconelPE16"], [99, 0, 0, "-", "inconelX750"], [79, 1, 1, "", "iterAllMaterialClassesInNamespace"], [100, 0, 0, "-", "lead"], [101, 0, 0, "-", "leadBismuth"], [102, 0, 0, "-", "lithium"], [103, 0, 0, "-", "magnesium"], [104, 0, 0, "-", "material"], [105, 0, 0, "-", "mgO"], [106, 0, 0, "-", "mixture"], [107, 0, 0, "-", "molybdenum"], [108, 0, 0, "-", "mox"], [109, 0, 0, "-", "nZ"], [110, 0, 0, "-", "potassium"], [79, 1, 1, "", "resolveMaterialClassByName"], [111, 0, 0, "-", "scandiumOxide"], [79, 1, 1, "", "setMaterialNamespaceOrder"], [112, 0, 0, "-", "siC"], [113, 0, 0, "-", "sodium"], [114, 0, 0, "-", "sodiumChloride"], [115, 0, 0, "-", "sulfur"], [116, 0, 0, "-", "tZM"], [117, 0, 0, "-", "tantalum"], [118, 0, 0, "-", "tests"], [131, 0, 0, "-", "thU"], [132, 0, 0, "-", "thorium"], [133, 0, 0, "-", "thoriumOxide"], [134, 0, 0, "-", "uThZr"], [135, 0, 0, "-", "uZr"], [136, 0, 0, "-", "uranium"], [137, 0, 0, "-", "uraniumOxide"], [138, 0, 0, "-", "void"], [139, 0, 0, "-", "water"], [140, 0, 0, "-", "yttriumOxide"], [141, 0, 0, "-", "zincOxide"], [142, 0, 0, "-", "zr"]], "armi.materials.air": [[80, 2, 1, "", "Air"]], "armi.materials.air.Air": [[80, 3, 1, "", "heatCapacity"], [80, 4, 1, "", "propertyValidTemperature"], [80, 3, 1, "", "pseudoDensity"], [80, 3, 1, "", "setDefaultMassFracs"], [80, 3, 1, "", "specificVolumeLiquid"], [80, 3, 1, "", "thermalConductivity"]], "armi.materials.alloy200": [[81, 2, 1, "", "Alloy200"]], "armi.materials.alloy200.Alloy200": [[81, 3, 1, "", "density"], [81, 3, 1, "", "linearExpansion"], [81, 4, 1, "", "linearExpansionTable"], [81, 4, 1, "", "linearExpansionTableK"], [81, 4, 1, "", "modelConst"], [81, 4, 1, "", "propertyValidTemperature"], [81, 4, 1, "", "referenceMaxPercentImpurites"], [81, 4, 1, "", "references"], [81, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.b4c": [[82, 2, 1, "", "B4C"]], "armi.materials.b4c.B4C": [[82, 3, 1, "", "applyInputParams"], [82, 3, 1, "", "density"], [82, 4, 1, "", "enrichedNuclide"], [82, 3, 1, "", "getMassEnrichmentFromNumEnrich"], [82, 3, 1, "", "linearExpansionPercent"], [82, 4, 1, "", "propertyValidTemperature"], [82, 3, 1, "", "pseudoDensity"], [82, 3, 1, "", "setDefaultMassFracs"], [82, 3, 1, "", "setNewMassFracsFromMassEnrich"], [82, 3, 1, "", "updateTD"]], "armi.materials.be9": [[83, 2, 1, "", "Be9"]], "armi.materials.be9.Be9": [[83, 3, 1, "", "density"], [83, 3, 1, "", "linearExpansionPercent"], [83, 4, 1, "", "propertyValidTemperature"], [83, 3, 1, "", "setDefaultMassFracs"], [83, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.caH2": [[84, 2, 1, "", "CaH2"]], "armi.materials.caH2.CaH2": [[84, 3, 1, "", "density"], [84, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.californium": [[85, 2, 1, "", "Californium"]], "armi.materials.californium.Californium": [[85, 3, 1, "", "density"], [85, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.concrete": [[86, 2, 1, "", "Concrete"]], "armi.materials.concrete.Concrete": [[86, 3, 1, "", "density"], [86, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.copper": [[87, 2, 1, "", "Cu"]], "armi.materials.copper.Cu": [[87, 3, 1, "", "density"], [87, 3, 1, "", "linearExpansionPercent"], [87, 4, 1, "", "propertyValidTemperature"], [87, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.cs": [[88, 2, 1, "", "Cs"]], "armi.materials.cs.Cs": [[88, 3, 1, "", "meltingPoint"], [88, 3, 1, "", "pseudoDensity"], [88, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.custom": [[89, 2, 1, "", "Custom"]], "armi.materials.custom.Custom": [[89, 3, 1, "", "density"], [89, 4, 1, "", "enrichedNuclide"], [89, 3, 1, "", "pseudoDensity"], [89, 3, 1, "", "setMassFrac"]], "armi.materials.graphite": [[90, 2, 1, "", "Graphite"]], "armi.materials.graphite.Graphite": [[90, 3, 1, "", "density"], [90, 3, 1, "", "linearExpansionPercent"], [90, 3, 1, "", "setDefaultMassFracs"], [90, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.hafnium": [[91, 2, 1, "", "Hafnium"]], "armi.materials.hafnium.Hafnium": [[91, 3, 1, "", "density"], [91, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.hastelloyN": [[92, 2, 1, "", "HastelloyN"]], "armi.materials.hastelloyN.HastelloyN": [[92, 3, 1, "", "density"], [92, 3, 1, "", "heatCapacity"], [92, 3, 1, "", "linearExpansionPercent"], [92, 4, 1, "", "materialIntro"], [92, 3, 1, "", "meanCoefficientThermalExpansion"], [92, 4, 1, "", "propertyValidTemperature"], [92, 4, 1, "", "refTempK"], [92, 3, 1, "", "setDefaultMassFracs"], [92, 3, 1, "", "thermalConductivity"]], "armi.materials.ht9": [[93, 2, 1, "", "HT9"]], "armi.materials.ht9.HT9": [[93, 3, 1, "", "density"], [93, 3, 1, "", "linearExpansionPercent"], [93, 4, 1, "", "propertyValidTemperature"], [93, 3, 1, "", "setDefaultMassFracs"], [93, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel": [[94, 2, 1, "", "Inconel"], [94, 2, 1, "", "Inconel617"]], "armi.materials.inconel.Inconel": [[94, 3, 1, "", "density"], [94, 4, 1, "", "references"], [94, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconel600": [[95, 2, 1, "", "Inconel600"]], "armi.materials.inconel600.Inconel600": [[95, 3, 1, "", "density"], [95, 3, 1, "", "heatCapacity"], [95, 3, 1, "", "linearExpansion"], [95, 3, 1, "", "linearExpansionPercent"], [95, 3, 1, "", "polyfitHeatCapacity"], [95, 3, 1, "", "polyfitLinearExpansionPercent"], [95, 3, 1, "", "polyfitThermalConductivity"], [95, 4, 1, "", "propertyValidTemperature"], [95, 4, 1, "", "refTempK"], [95, 4, 1, "", "references"], [95, 3, 1, "", "setDefaultMassFracs"], [95, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel625": [[96, 2, 1, "", "Inconel625"]], "armi.materials.inconel625.Inconel625": [[96, 3, 1, "", "density"], [96, 3, 1, "", "heatCapacity"], [96, 3, 1, "", "linearExpansion"], [96, 3, 1, "", "linearExpansionPercent"], [96, 3, 1, "", "polyfitHeatCapacity"], [96, 3, 1, "", "polyfitLinearExpansionPercent"], [96, 3, 1, "", "polyfitThermalConductivity"], [96, 4, 1, "", "propertyValidTemperature"], [96, 4, 1, "", "refTempK"], [96, 4, 1, "", "references"], [96, 3, 1, "", "setDefaultMassFracs"], [96, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel800": [[97, 2, 1, "", "Inconel800"]], "armi.materials.inconel800.Inconel800": [[97, 3, 1, "", "density"], [97, 3, 1, "", "linearExpansionPercent"], [97, 3, 1, "", "meanCoefficientThermalExpansion"], [97, 4, 1, "", "propertyValidTemperature"], [97, 4, 1, "", "refTempK"], [97, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelPE16": [[98, 2, 1, "", "InconelPE16"]], "armi.materials.inconelPE16.InconelPE16": [[98, 3, 1, "", "density"], [98, 4, 1, "", "references"], [98, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelX750": [[99, 2, 1, "", "InconelX750"]], "armi.materials.inconelX750.InconelX750": [[99, 3, 1, "", "density"], [99, 3, 1, "", "heatCapacity"], [99, 3, 1, "", "linearExpansion"], [99, 3, 1, "", "linearExpansionPercent"], [99, 3, 1, "", "polyfitHeatCapacity"], [99, 3, 1, "", "polyfitLinearExpansionPercent"], [99, 3, 1, "", "polyfitThermalConductivity"], [99, 4, 1, "", "propertyValidTemperature"], [99, 4, 1, "", "refTempK"], [99, 4, 1, "", "references"], [99, 3, 1, "", "setDefaultMassFracs"], [99, 3, 1, "", "thermalConductivity"]], "armi.materials.lead": [[100, 2, 1, "", "Lead"]], "armi.materials.lead.Lead": [[100, 3, 1, "", "heatCapacity"], [100, 4, 1, "", "propertyValidTemperature"], [100, 3, 1, "", "pseudoDensity"], [100, 3, 1, "", "setDefaultMassFracs"], [100, 3, 1, "", "volumetricExpansion"]], "armi.materials.leadBismuth": [[101, 2, 1, "", "LeadBismuth"]], "armi.materials.leadBismuth.LeadBismuth": [[101, 3, 1, "", "dynamicVisc"], [101, 3, 1, "", "heatCapacity"], [101, 4, 1, "", "propertyValidTemperature"], [101, 3, 1, "", "pseudoDensity"], [101, 3, 1, "", "setDefaultMassFracs"], [101, 3, 1, "", "thermalConductivity"], [101, 3, 1, "", "volumetricExpansion"]], "armi.materials.lithium": [[102, 2, 1, "", "Lithium"]], "armi.materials.lithium.Lithium": [[102, 3, 1, "", "applyInputParams"], [102, 3, 1, "", "boilingPoint"], [102, 4, 1, "", "enrichedNuclide"], [102, 3, 1, "", "heatCapacity"], [102, 3, 1, "", "meltingPoint"], [102, 3, 1, "", "pseudoDensity"], [102, 4, 1, "", "references"], [102, 3, 1, "", "setDefaultMassFracs"], [102, 3, 1, "", "thermalConductivity"]], "armi.materials.magnesium": [[103, 2, 1, "", "Magnesium"]], "armi.materials.magnesium.Magnesium": [[103, 4, 1, "", "propertyValidTemperature"], [103, 3, 1, "", "pseudoDensity"], [103, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.material": [[104, 2, 1, "", "Fluid"], [104, 2, 1, "", "FuelMaterial"], [104, 2, 1, "", "Material"], [104, 2, 1, "", "SimpleSolid"], [104, 1, 1, "", "parentAwareDensityRedirect"]], "armi.materials.material.Fluid": [[104, 3, 1, "", "density"], [104, 3, 1, "", "getTempChangeForDensityChange"], [104, 3, 1, "", "getThermalExpansionDensityReduction"], [104, 3, 1, "", "linearExpansion"]], "armi.materials.material.FuelMaterial": [[104, 3, 1, "", "applyInputParams"], [104, 4, 1, "", "class1_custom_isotopics"], [104, 4, 1, "", "class1_wt_frac"], [104, 4, 1, "", "class2_custom_isotopics"], [104, 3, 1, "", "density"], [104, 3, 1, "", "duplicate"], [104, 4, 1, "", "puFrac"], [104, 4, 1, "", "uFrac"], [104, 4, 1, "", "zrFrac"]], "armi.materials.material.Material": [[104, 4, 1, "", "DATA_SOURCE"], [104, 3, 1, "", "adjustMassEnrichment"], [104, 3, 1, "", "adjustMassFrac"], [104, 3, 1, "", "adjustTD"], [104, 3, 1, "", "applyInputParams"], [104, 3, 1, "", "backUp"], [104, 3, 1, "", "checkPropertyTempRange"], [104, 3, 1, "", "checkTempRange"], [104, 3, 1, "", "clearCache"], [104, 3, 1, "", "clearMassFrac"], [104, 3, 1, "", "density"], [104, 3, 1, "", "densityKgM3"], [104, 3, 1, "", "densityTimesHeatCapacity"], [104, 3, 1, "", "duplicate"], [104, 4, 1, "", "enrichedNuclide"], [104, 5, 1, "", "gasPorosity"], [104, 3, 1, "", "getChildren"], [104, 3, 1, "", "getChildrenWithFlags"], [104, 3, 1, "", "getCorrosionRate"], [104, 3, 1, "", "getMassFrac"], [104, 3, 1, "", "getName"], [104, 3, 1, "", "getNuclides"], [104, 3, 1, "", "getProperty"], [104, 3, 1, "", "getTD"], [104, 3, 1, "", "getTempChangeForDensityChange"], [104, 3, 1, "", "getTemperatureAtDensity"], [104, 3, 1, "", "getThermalExpansionDensityReduction"], [104, 3, 1, "", "heatCapacity"], [104, 3, 1, "", "linearExpansion"], [104, 3, 1, "", "linearExpansionFactor"], [104, 3, 1, "", "linearExpansionPercent"], [104, 5, 1, "", "liquidPorosity"], [104, 4, 1, "", "modelConst"], [104, 5, 1, "", "name"], [104, 4, 1, "", "propertyValidTemperature"], [104, 3, 1, "", "pseudoDensity"], [104, 3, 1, "", "pseudoDensityKgM3"], [104, 4, 1, "", "references"], [104, 3, 1, "", "removeNucMassFrac"], [104, 3, 1, "", "restoreBackup"], [104, 3, 1, "", "setDefaultMassFracs"], [104, 3, 1, "", "setMassFrac"], [104, 3, 1, "", "thermalConductivity"], [104, 4, 1, "", "thermalScatteringLaws"], [104, 3, 1, "", "volumetricExpansion"], [104, 3, 1, "", "yieldStrength"]], "armi.materials.material.SimpleSolid": [[104, 3, 1, "", "density"], [104, 3, 1, "", "linearExpansionPercent"], [104, 3, 1, "", "pseudoDensity"], [104, 4, 1, "", "refTempK"]], "armi.materials.mgO": [[105, 2, 1, "", "MgO"]], "armi.materials.mgO.MgO": [[105, 3, 1, "", "density"], [105, 3, 1, "", "linearExpansionPercent"], [105, 4, 1, "", "propertyValidTemperature"], [105, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.molybdenum": [[107, 2, 1, "", "Molybdenum"]], "armi.materials.molybdenum.Molybdenum": [[107, 3, 1, "", "density"], [107, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.mox": [[108, 2, 1, "", "MOX"]], "armi.materials.mox.MOX": [[108, 3, 1, "", "applyInputParams"], [108, 4, 1, "", "enrichedNuclide"], [108, 3, 1, "", "getMassFracPuO2"], [108, 3, 1, "", "getMolFracPuO2"], [108, 3, 1, "", "meltingPoint"], [108, 3, 1, "", "setDefaultMassFracs"], [108, 3, 1, "", "setMassFracPuO2"]], "armi.materials.nZ": [[109, 2, 1, "", "NZ"]], "armi.materials.nZ.NZ": [[109, 3, 1, "", "density"], [109, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.potassium": [[110, 2, 1, "", "Potassium"]], "armi.materials.potassium.Potassium": [[110, 4, 1, "", "propertyValidTemperature"], [110, 3, 1, "", "pseudoDensity"]], "armi.materials.scandiumOxide": [[111, 2, 1, "", "Sc2O3"]], "armi.materials.scandiumOxide.Sc2O3": [[111, 3, 1, "", "density"], [111, 3, 1, "", "linearExpansionPercent"], [111, 4, 1, "", "propertyValidTemperature"], [111, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.siC": [[112, 2, 1, "", "SiC"]], "armi.materials.siC.SiC": [[112, 3, 1, "", "cumulativeLinearExpansion"], [112, 3, 1, "", "density"], [112, 3, 1, "", "heatCapacity"], [112, 3, 1, "", "meltingPoint"], [112, 4, 1, "", "propertyEquation"], [112, 4, 1, "", "propertyNotes"], [112, 4, 1, "", "propertyUnits"], [112, 4, 1, "", "propertyValidTemperature"], [112, 3, 1, "", "pseudoDensity"], [112, 4, 1, "", "refTempK"], [112, 4, 1, "", "references"], [112, 3, 1, "", "setDefaultMassFracs"], [112, 3, 1, "", "thermalConductivity"], [112, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.sodium": [[113, 2, 1, "", "Sodium"]], "armi.materials.sodium.Sodium": [[113, 3, 1, "", "enthalpy"], [113, 4, 1, "", "propertyValidTemperature"], [113, 3, 1, "", "pseudoDensity"], [113, 3, 1, "", "setDefaultMassFracs"], [113, 3, 1, "", "specificVolumeLiquid"], [113, 3, 1, "", "thermalConductivity"]], "armi.materials.sodiumChloride": [[114, 2, 1, "", "NaCl"]], "armi.materials.sodiumChloride.NaCl": [[114, 3, 1, "", "density"], [114, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.sulfur": [[115, 2, 1, "", "Sulfur"]], "armi.materials.sulfur.Sulfur": [[115, 3, 1, "", "applyInputParams"], [115, 4, 1, "", "propertyValidTemperature"], [115, 3, 1, "", "pseudoDensity"], [115, 3, 1, "", "setDefaultMassFracs"], [115, 3, 1, "", "updateTD"], [115, 3, 1, "", "volumetricExpansion"]], "armi.materials.tZM": [[116, 2, 1, "", "TZM"]], "armi.materials.tZM.TZM": [[116, 3, 1, "", "density"], [116, 3, 1, "", "linearExpansionPercent"], [116, 4, 1, "", "percentThermalExpansion"], [116, 4, 1, "", "propertyValidTemperature"], [116, 4, 1, "", "references"], [116, 3, 1, "", "setDefaultMassFracs"], [116, 4, 1, "", "temperatureC"]], "armi.materials.tantalum": [[117, 2, 1, "", "Tantalum"]], "armi.materials.tantalum.Tantalum": [[117, 3, 1, "", "density"], [117, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.tests": [[119, 0, 0, "-", "test__init__"], [120, 0, 0, "-", "test_air"], [121, 0, 0, "-", "test_b4c"], [122, 0, 0, "-", "test_be9"], [123, 0, 0, "-", "test_graphite"], [124, 0, 0, "-", "test_lithium"], [125, 0, 0, "-", "test_materials"], [126, 0, 0, "-", "test_sic"], [127, 0, 0, "-", "test_sulfur"], [128, 0, 0, "-", "test_thoriumOxide"], [129, 0, 0, "-", "test_uZr"], [130, 0, 0, "-", "test_water"]], "armi.materials.tests.test__init__": [[119, 2, 1, "", "Materials__init__Tests"], [119, 1, 1, "", "betterSubClassCheck"]], "armi.materials.tests.test__init__.Materials__init__Tests": [[119, 3, 1, "", "test_canAccessClassesFromPackage"], [119, 3, 1, "", "test_packageClassesEqualModuleClasses"]], "armi.materials.tests.test_air": [[120, 2, 1, "", "Test_Air"]], "armi.materials.tests.test_air.Test_Air": [[120, 3, 1, "", "test_heatCapacity"], [120, 3, 1, "", "test_massFrac"], [120, 3, 1, "", "test_pseudoDensity"], [120, 3, 1, "", "test_thermalConductivity"], [120, 3, 1, "", "test_validRanges"]], "armi.materials.tests.test_b4c": [[121, 2, 1, "", "B4C_TestCase"]], "armi.materials.tests.test_b4c.B4C_TestCase": [[121, 4, 1, "", "MAT_CLASS"], [121, 3, 1, "", "test_propertyValidTemperature"], [121, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_be9": [[122, 2, 1, "", "Test_Be9"]], "armi.materials.tests.test_be9.Test_Be9": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_graphite": [[123, 2, 1, "", "Graphite_TestCase"]], "armi.materials.tests.test_graphite.Graphite_TestCase": [[123, 4, 1, "", "MAT_CLASS"], [123, 3, 1, "", "test_density"], [123, 3, 1, "", "test_linearExpansionPercent"], [123, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_lithium": [[124, 2, 1, "", "Lithium_TestCase"]], "armi.materials.tests.test_lithium.Lithium_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 4, 1, "", "defaultMassFrac"], [124, 3, 1, "", "test_Lithium_material_modifications"], [124, 3, 1, "", "test_boilingPoint"], [124, 3, 1, "", "test_heatCapacity"], [124, 3, 1, "", "test_meltingPoint"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials": [[125, 2, 1, "", "Alloy200_TestCase"], [125, 2, 1, "", "CaH2_TestCase"], [125, 2, 1, "", "Californium_TestCase"], [125, 2, 1, "", "Cesium_TestCase"], [125, 2, 1, "", "Copper_TestCase"], [125, 2, 1, "", "FuelMaterial_TestCase"], [125, 2, 1, "", "Hafnium_TestCase"], [125, 2, 1, "", "HastelloyN_TestCase"], [125, 2, 1, "", "Inconel600_TestCase"], [125, 2, 1, "", "Inconel625_TestCase"], [125, 2, 1, "", "InconelX750_TestCase"], [125, 2, 1, "", "Inconel_TestCase"], [125, 2, 1, "", "LeadBismuth_TestCase"], [125, 2, 1, "", "Lead_TestCase"], [125, 2, 1, "", "MOX_TestCase"], [125, 2, 1, "", "MagnesiumOxide_TestCase"], [125, 2, 1, "", "Magnesium_TestCase"], [125, 2, 1, "", "MaterialConstructionTests"], [125, 2, 1, "", "MaterialFindingTests"], [125, 2, 1, "", "Mixture_TestCase"], [125, 2, 1, "", "Molybdenum_TestCase"], [125, 2, 1, "", "NaCl_TestCase"], [125, 2, 1, "", "NiobiumZirconium_TestCase"], [125, 2, 1, "", "Potassium_TestCase"], [125, 2, 1, "", "ScandiumOxide_TestCase"], [125, 2, 1, "", "Sodium_TestCase"], [125, 2, 1, "", "Sulfur_TestCase"], [125, 2, 1, "", "TZM_TestCase"], [125, 2, 1, "", "Tantalum_TestCase"], [125, 2, 1, "", "ThoriumOxide_TestCase"], [125, 2, 1, "", "ThoriumUraniumMetal_TestCase"], [125, 2, 1, "", "Thorium_TestCase"], [125, 2, 1, "", "UraniumOxide_TestCase"], [125, 2, 1, "", "Uranium_TestCase"], [125, 2, 1, "", "Void_TestCase"], [125, 2, 1, "", "YttriumOxide_TestCase"], [125, 2, 1, "", "ZincOxide_TestCase"], [125, 2, 1, "", "Zr_TestCase"]], "armi.materials.tests.test_materials.Alloy200_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_linearExpansionHotter"], [125, 3, 1, "", "test_nickleContent"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.CaH2_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Californium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_getCorrosionRate"], [125, 3, 1, "", "test_porosities"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Cesium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Copper_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_densityNeverChanges"], [125, 3, 1, "", "test_getChildren"], [125, 3, 1, "", "test_getChildrenWithFlags"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.FuelMaterial_TestCase": [[125, 4, 1, "", "baseInput"], [125, 3, 1, "", "loadAssembly"], [125, 3, 1, "", "test_class1Class2_class1_wt_frac"], [125, 3, 1, "", "test_class1Class2_classX_custom_isotopics"]], "armi.materials.tests.test_materials.Hafnium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.HastelloyN_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_meanCoefficientThermalExpansion"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Inconel600_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_00_setDefaultMassFracs"], [125, 3, 1, "", "test_01_linearExpansionPercent"], [125, 3, 1, "", "test_02_linearExpansion"], [125, 3, 1, "", "test_03_pseudoDensity"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_polyfitHeatCapacity"], [125, 3, 1, "", "test_polyfitLinearExpansionPercent"], [125, 3, 1, "", "test_polyfitThermalConductivity"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel625_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_00_setDefaultMassFracs"], [125, 3, 1, "", "test_01_linearExpansionPercent"], [125, 3, 1, "", "test_02_linearExpansion"], [125, 3, 1, "", "test_03_pseudoDensity"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_polyfitHeatCapacity"], [125, 3, 1, "", "test_polyfitLinearExpansionPercent"], [125, 3, 1, "", "test_polyfitThermalConductivity"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.InconelX750_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_00_setDefaultMassFracs"], [125, 3, 1, "", "test_01_linearExpansionPercent"], [125, 3, 1, "", "test_02_linearExpansion"], [125, 3, 1, "", "test_03_pseudoDensity"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_polyfitHeatCapacity"], [125, 3, 1, "", "test_polyfitLinearExpansionPercent"], [125, 3, 1, "", "test_polyfitThermalConductivity"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel_TestCase": [[125, 3, 1, "", "test_Iconel800_linearExpansion"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.LeadBismuth_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_dynamicVisc"], [125, 3, 1, "", "test_getTempChangeForDensityChange"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_setDefaultMassFracs"], [125, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.Lead_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_setDefaultMassFracs"], [125, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.MOX_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_applyInputParams"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_getMassFracPuO2"], [125, 3, 1, "", "test_getMeltingPoint"], [125, 3, 1, "", "test_getMolFracPuO2"]], "armi.materials.tests.test_materials.MagnesiumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Magnesium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.MaterialConstructionTests": [[125, 3, 1, "", "test_material_initialization"]], "armi.materials.tests.test_materials.MaterialFindingTests": [[125, 3, 1, "", "test_findMaterial"], [125, 3, 1, "", "test_namespacing"]], "armi.materials.tests.test_materials.Mixture_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.Molybdenum_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.NaCl_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.NiobiumZirconium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Potassium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ScandiumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Sodium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_enthalpy"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_specificVolumeLiquid"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Sulfur_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_setDefaultMassFracs"], [125, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.TZM_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_00_applyInputParams"], [125, 3, 1, "", "test_01_pseudoDensity"], [125, 3, 1, "", "test_02_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Tantalum_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ThoriumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_meltingPoint"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_meltingPoint"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Thorium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_meltingPoint"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_setDefaultMassFracs"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.UraniumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_adjustMassEnrichment"], [125, 3, 1, "", "test_applyInputParams"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_densityTimesHeatCapactiy"], [125, 3, 1, "", "test_duplicate"], [125, 3, 1, "", "test_getDensityExpansion3D"], [125, 3, 1, "", "test_getTempChangeForDensityChange"], [125, 3, 1, "", "test_getTemperatureAtDensity"], [125, 3, 1, "", "test_heatCapacity"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_meltingPoint"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_removeNucMassFrac"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Uranium_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_applyInputParams"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Void_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.YttriumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ZincOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_density"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Zr_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansion"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_pseudoDensity"], [125, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_sic": [[126, 2, 1, "", "Test_SiC"]], "armi.materials.tests.test_sic.Test_SiC": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_heatCapacity"], [126, 3, 1, "", "test_meltingPoint"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_sulfur": [[127, 2, 1, "", "Sulfur_TestCase"]], "armi.materials.tests.test_sulfur.Sulfur_TestCase": [[127, 4, 1, "", "MAT_CLASS"], [127, 3, 1, "", "test_propertyValidTemperature"], [127, 3, 1, "", "test_sulfur_density_frac"]], "armi.materials.tests.test_thoriumOxide": [[128, 2, 1, "", "ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase": [[128, 4, 1, "", "MAT_CLASS"], [128, 3, 1, "", "test_linearExpansionPercent"], [128, 3, 1, "", "test_propertyValidTemperature"], [128, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_uZr": [[129, 2, 1, "", "UZR_TestCase"]], "armi.materials.tests.test_uZr.UZR_TestCase": [[129, 4, 1, "", "MAT_CLASS"], [129, 3, 1, "", "test_TD"], [129, 3, 1, "", "test_cache"], [129, 3, 1, "", "test_density"], [129, 3, 1, "", "test_densityKgM3"], [129, 3, 1, "", "test_duplicate"], [129, 3, 1, "", "test_isPicklable"], [129, 3, 1, "", "test_propertyValidTemperature"], [129, 3, 1, "", "test_pseudoDensityKgM3"]], "armi.materials.tests.test_water": [[130, 2, 1, "", "Test_Water"]], "armi.materials.tests.test_water.Test_Water": [[130, 3, 1, "", "test_massFrac"], [130, 3, 1, "", "test_propertyValidTemperature"], [130, 3, 1, "", "test_validateNames"], [130, 3, 1, "", "test_water_at_boiling"], [130, 3, 1, "", "test_water_at_critcalPoint"], [130, 3, 1, "", "test_water_at_freezing"]], "armi.materials.thU": [[131, 2, 1, "", "ThU"]], "armi.materials.thU.ThU": [[131, 3, 1, "", "applyInputParams"], [131, 4, 1, "", "enrichedNuclide"], [131, 3, 1, "", "getEnrichment"], [131, 3, 1, "", "linearExpansion"], [131, 3, 1, "", "meltingPoint"], [131, 4, 1, "", "propertyValidTemperature"], [131, 3, 1, "", "setDefaultMassFracs"], [131, 3, 1, "", "thermalConductivity"]], "armi.materials.thorium": [[132, 2, 1, "", "Thorium"]], "armi.materials.thorium.Thorium": [[132, 3, 1, "", "linearExpansion"], [132, 3, 1, "", "meltingPoint"], [132, 4, 1, "", "propertyValidTemperature"], [132, 3, 1, "", "setDefaultMassFracs"], [132, 3, 1, "", "thermalConductivity"]], "armi.materials.thoriumOxide": [[133, 2, 1, "", "ThO2"], [133, 2, 1, "", "ThoriumOxide"]], "armi.materials.thoriumOxide.ThoriumOxide": [[133, 3, 1, "", "applyInputParams"], [133, 3, 1, "", "density"], [133, 3, 1, "", "linearExpansion"], [133, 3, 1, "", "linearExpansionPercent"], [133, 3, 1, "", "meltingPoint"], [133, 4, 1, "", "propertyValidTemperature"], [133, 3, 1, "", "setDefaultMassFracs"], [133, 3, 1, "", "thermalConductivity"]], "armi.materials.uThZr": [[134, 2, 1, "", "UThZr"]], "armi.materials.uThZr.UThZr": [[134, 3, 1, "", "applyInputParams"], [134, 4, 1, "", "enrichedNuclide"], [134, 3, 1, "", "pseudoDensity"], [134, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.uZr": [[135, 2, 1, "", "UZr"]], "armi.materials.uZr.UZr": [[135, 3, 1, "", "applyInputParams"], [135, 4, 1, "", "enrichedNuclide"], [135, 3, 1, "", "linearExpansionPercent"], [135, 3, 1, "", "setDefaultMassFracs"], [135, 4, 1, "", "uFracDefault"], [135, 4, 1, "", "zrFracDefault"]], "armi.materials.uranium": [[136, 2, 1, "", "Uranium"]], "armi.materials.uranium.Uranium": [[136, 3, 1, "", "applyInputParams"], [136, 3, 1, "", "density"], [136, 4, 1, "", "enrichedNuclide"], [136, 3, 1, "", "heatCapacity"], [136, 3, 1, "", "linearExpansion"], [136, 3, 1, "", "linearExpansionPercent"], [136, 4, 1, "", "materialIntro"], [136, 3, 1, "", "meltingPoint"], [136, 4, 1, "", "propertyEquation"], [136, 4, 1, "", "propertyNotes"], [136, 4, 1, "", "propertyRawData"], [136, 4, 1, "", "propertyUnits"], [136, 4, 1, "", "propertyValidTemperature"], [136, 3, 1, "", "pseudoDensity"], [136, 4, 1, "", "refDens"], [136, 4, 1, "", "references"], [136, 3, 1, "", "setDefaultMassFracs"], [136, 3, 1, "", "thermalConductivity"]], "armi.materials.uraniumOxide": [[137, 2, 1, "", "HeatCapacityConstants"], [137, 2, 1, "", "UO2"], [137, 2, 1, "", "UraniumOxide"]], "armi.materials.uraniumOxide.HeatCapacityConstants": [[137, 4, 1, "", "Ea"], [137, 4, 1, "", "c1"], [137, 4, 1, "", "c2"], [137, 4, 1, "", "c3"], [137, 4, 1, "", "theta"]], "armi.materials.uraniumOxide.UraniumOxide": [[137, 4, 1, "", "REFERENCE_TEMPERATURE"], [137, 3, 1, "", "applyInputParams"], [137, 3, 1, "", "density"], [137, 4, 1, "", "enrichedNuclide"], [137, 3, 1, "", "heatCapacity"], [137, 4, 1, "", "heatCapacityConstants"], [137, 3, 1, "", "linearExpansion"], [137, 3, 1, "", "linearExpansionPercent"], [137, 3, 1, "", "meltingPoint"], [137, 4, 1, "", "propertyUnits"], [137, 4, 1, "", "propertyValidTemperature"], [137, 4, 1, "", "references"], [137, 3, 1, "", "setDefaultMassFracs"], [137, 3, 1, "", "thermalConductivity"], [137, 4, 1, "", "thermalConductivityTable"], [137, 4, 1, "", "thermalConductivityTableK"], [137, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.void": [[138, 2, 1, "", "Void"]], "armi.materials.void.Void": [[138, 3, 1, "", "density"], [138, 3, 1, "", "pseudoDensity"]], "armi.materials.water": [[139, 2, 1, "", "SaturatedSteam"], [139, 2, 1, "", "SaturatedWater"], [139, 2, 1, "", "Water"]], "armi.materials.water.SaturatedSteam": [[139, 3, 1, "", "pseudoDensity"]], "armi.materials.water.SaturatedWater": [[139, 3, 1, "", "pseudoDensity"]], "armi.materials.water.Water": [[139, 4, 1, "", "ALPHA_0"], [139, 4, 1, "", "DENSITY_CRITICAL_GPERCUBICCENTIMETER"], [139, 4, 1, "", "DENSITY_CRITICAL_KGPERCUBICMETER"], [139, 4, 1, "", "PHI_0"], [139, 4, 1, "", "TEMPERATURE_CRITICAL_K"], [139, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_MPA"], [139, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_PA"], [139, 3, 1, "", "auxiliaryQuantitySpecificEnthalpy"], [139, 3, 1, "", "auxiliaryQuantitySpecificEntropy"], [139, 4, 1, "", "d"], [139, 3, 1, "", "enthalpy"], [139, 3, 1, "", "entropy"], [139, 3, 1, "", "pseudoDensity"], [139, 4, 1, "", "references"], [139, 3, 1, "", "setDefaultMassFracs"], [139, 3, 1, "", "tau"], [139, 4, 1, "", "thermalScatteringLaws"], [139, 3, 1, "", "theta"], [139, 3, 1, "", "vaporPressure"], [139, 3, 1, "", "vaporPressurePrime"]], "armi.materials.yttriumOxide": [[140, 2, 1, "", "Y2O3"]], "armi.materials.yttriumOxide.Y2O3": [[140, 3, 1, "", "density"], [140, 3, 1, "", "linearExpansionPercent"], [140, 4, 1, "", "propertyValidTemperature"], [140, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zincOxide": [[141, 2, 1, "", "ZnO"]], "armi.materials.zincOxide.ZnO": [[141, 3, 1, "", "density"], [141, 3, 1, "", "linearExpansionPercent"], [141, 4, 1, "", "propertyValidTemperature"], [141, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zr": [[142, 2, 1, "", "Zr"]], "armi.materials.zr.Zr": [[142, 3, 1, "", "density"], [142, 3, 1, "", "linearExpansion"], [142, 3, 1, "", "linearExpansionPercent"], [142, 4, 1, "", "linearExpansionTable"], [142, 4, 1, "", "linearExpansionTableK"], [142, 4, 1, "", "propertyValidTemperature"], [142, 4, 1, "", "refTempK"], [142, 4, 1, "", "references"], [142, 3, 1, "", "setDefaultMassFracs"], [142, 3, 1, "", "thermalConductivity"]], "armi.migration": [[145, 0, 0, "-", "base"], [146, 0, 0, "-", "m0_1_3"], [147, 0, 0, "-", "m0_1_6"], [148, 0, 0, "-", "tests"]], "armi.migration.base": [[145, 2, 1, "", "BlueprintsMigration"], [145, 2, 1, "", "DatabaseMigration"], [145, 2, 1, "", "Migration"], [145, 2, 1, "", "SettingsMigration"]], "armi.migration.base.Migration": [[145, 3, 1, "", "apply"], [145, 4, 1, "", "fromVersion"], [145, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3": [[146, 2, 1, "", "RemoveCentersFromBlueprints"], [146, 2, 1, "", "UpdateElementalNuclides"]], "armi.migration.m0_1_3.RemoveCentersFromBlueprints": [[146, 4, 1, "", "fromVersion"], [146, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3.UpdateElementalNuclides": [[146, 4, 1, "", "deletions"], [146, 4, 1, "", "fromVersion"], [146, 4, 1, "", "swaps"], [146, 4, 1, "", "toVersion"]], "armi.migration.m0_1_6": [[147, 2, 1, "", "ConvertAlphanumLocationSettingsToNum"], [147, 1, 1, "", "getIndicesFromDIF3DStyleLocatorLabel"]], "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum": [[147, 4, 1, "", "fromVersion"], [147, 4, 1, "", "toVersion"]], "armi.migration.tests": [[149, 0, 0, "-", "test_m0_1_6"], [150, 0, 0, "-", "test_migration_base"]], "armi.migration.tests.test_m0_1_6": [[149, 2, 1, "", "TestMigration"]], "armi.migration.tests.test_m0_1_6.TestMigration": [[149, 3, 1, "", "test_locationLabelMigration"]], "armi.migration.tests.test_migration_base": [[150, 2, 1, "", "TestMigrationBases"], [150, 2, 1, "", "TestSettingsMigration"]], "armi.migration.tests.test_migration_base.TestMigrationBases": [[150, 3, 1, "", "test_basic_validation"]], "armi.migration.tests.test_migration_base.TestSettingsMigration": [[150, 3, 1, "", "test_loadStreamFromPath"]], "armi.mpiActions": [[151, 2, 1, "", "DistributeStateAction"], [151, 2, 1, "", "DistributionAction"], [151, 2, 1, "", "MpiAction"], [151, 7, 1, "", "MpiActionError"], [151, 1, 1, "", "runActions"], [151, 1, 1, "", "runActionsInSerial"]], "armi.mpiActions.DistributeStateAction": [[151, 3, 1, "", "invokeHook"]], "armi.mpiActions.DistributionAction": [[151, 3, 1, "", "invokeHook"]], "armi.mpiActions.MpiAction": [[151, 3, 1, "", "broadcast"], [151, 3, 1, "", "gather"], [151, 3, 1, "", "invoke"], [151, 3, 1, "", "invokeAsMaster"], [151, 3, 1, "", "invokeHook"], [151, 3, 1, "", "mpiFlatten"], [151, 3, 1, "", "mpiIter"], [151, 5, 1, "", "parallel"]], "armi.nucDirectory": [[153, 0, 0, "-", "elements"], [154, 0, 0, "-", "nucDir"], [155, 0, 0, "-", "nuclideBases"], [156, 0, 0, "-", "tests"], [162, 0, 0, "-", "thermalScattering"], [163, 0, 0, "-", "transmutations"]], "armi.nucDirectory.elements": [[153, 2, 1, "", "ChemicalGroup"], [153, 2, 1, "", "ChemicalPhase"], [153, 2, 1, "", "Element"], [153, 1, 1, "", "addGlobalElement"], [153, 1, 1, "", "destroyGlobalElements"], [153, 1, 1, "", "factory"], [153, 1, 1, "", "getElementZ"], [153, 1, 1, "", "getElementsByChemicalGroup"], [153, 1, 1, "", "getElementsByChemicalPhase"], [153, 1, 1, "", "getName"], [153, 1, 1, "", "getSymbol"]], "armi.nucDirectory.elements.ChemicalGroup": [[153, 4, 1, "", "ACTINIDE"], [153, 4, 1, "", "ALKALINE_EARTH_METAL"], [153, 4, 1, "", "ALKALI_METAL"], [153, 4, 1, "", "HALOGEN"], [153, 4, 1, "", "LANTHANIDE"], [153, 4, 1, "", "METALLOID"], [153, 4, 1, "", "NOBLE_GAS"], [153, 4, 1, "", "NONMETAL"], [153, 4, 1, "", "POST_TRANSITION_METAL"], [153, 4, 1, "", "TRANSITION_METAL"], [153, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.ChemicalPhase": [[153, 4, 1, "", "GAS"], [153, 4, 1, "", "LIQUID"], [153, 4, 1, "", "SOLID"], [153, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.Element": [[153, 3, 1, "", "append"], [153, 3, 1, "", "getNaturalIsotopics"], [153, 3, 1, "", "isHeavyMetal"], [153, 3, 1, "", "isNaturallyOccurring"]], "armi.nucDirectory.nucDir": [[154, 1, 1, "", "getAtomicWeight"], [154, 1, 1, "", "getElementName"], [154, 1, 1, "", "getElementSymbol"], [154, 1, 1, "", "getMc2Label"], [154, 1, 1, "", "getNaturalIsotopics"], [154, 1, 1, "", "getNaturalMassIsotopics"], [154, 1, 1, "", "getNuclide"], [154, 1, 1, "", "getNuclideFromName"], [154, 1, 1, "", "getNuclideNames"], [154, 1, 1, "", "getNuclides"], [154, 1, 1, "", "getThresholdDisplacementEnergy"], [154, 1, 1, "", "isFissile"], [154, 1, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases": [[155, 2, 1, "", "DummyNuclideBase"], [155, 2, 1, "", "IMcnpNuclide"], [155, 2, 1, "", "INuclide"], [155, 2, 1, "", "LumpNuclideBase"], [155, 2, 1, "", "NaturalNuclideBase"], [155, 2, 1, "", "NuclideBase"], [155, 2, 1, "", "NuclideInterface"], [155, 2, 1, "", "NuclideWrapper"], [155, 1, 1, "", "addGlobalNuclide"], [155, 1, 1, "", "addNuclideBases"], [155, 1, 1, "", "changeLabel"], [155, 1, 1, "", "destroyGlobalNuclides"], [155, 1, 1, "", "factory"], [155, 1, 1, "", "fromName"], [155, 1, 1, "", "getDepletableNuclides"], [155, 1, 1, "", "getIsotopics"], [155, 1, 1, "", "imposeBurnChain"], [155, 1, 1, "", "initReachableActiveNuclidesThroughBurnChain"], [155, 1, 1, "", "isMonoIsotopicElement"], [155, 1, 1, "", "isotopes"], [155, 1, 1, "", "readMCCNuclideData"], [155, 1, 1, "", "single"], [155, 1, 1, "", "updateNuclideBasesForSpecialCases"], [155, 1, 1, "", "where"]], "armi.nucDirectory.nuclideBases.DummyNuclideBase": [[155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.IMcnpNuclide": [[155, 3, 1, "", "getAAAZZZSId"], [155, 3, 1, "", "getMcnpId"]], "armi.nucDirectory.nuclideBases.INuclide": [[155, 4, 1, "", "DECAY"], [155, 4, 1, "", "SPONTANEOUS_FISSION"], [155, 4, 1, "", "TRANSMUTATION"], [155, 4, 1, "", "fissile"], [155, 3, 1, "", "getDatabaseName"], [155, 3, 1, "", "getDecay"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "isFissile"], [155, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.LumpNuclideBase": [[155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NaturalNuclideBase": [[155, 3, 1, "", "getAAAZZZSId"], [155, 3, 1, "", "getEndfMatNum"], [155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getMcnpId"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideBase": [[155, 3, 1, "", "getAAAZZZSId"], [155, 3, 1, "", "getEndfMatNum"], [155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getMcnpId"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideInterface": [[155, 3, 1, "", "getDatabaseName"], [155, 3, 1, "", "getDecay"], [155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "getSerpentId"], [155, 3, 1, "", "isFissile"], [155, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NuclideWrapper": [[155, 3, 1, "", "getDatabaseName"], [155, 3, 1, "", "getDecay"], [155, 3, 1, "", "getMcc2Id"], [155, 3, 1, "", "getMcc3Id"], [155, 3, 1, "", "getNaturalIsotopics"], [155, 3, 1, "", "isFissile"], [155, 3, 1, "", "isHeavyMetal"], [155, 5, 1, "", "name"], [155, 5, 1, "", "weight"]], "armi.nucDirectory.tests": [[157, 0, 0, "-", "test_elements"], [158, 0, 0, "-", "test_nucDirectory"], [159, 0, 0, "-", "test_nuclideBases"], [160, 0, 0, "-", "test_thermalScattering"], [161, 0, 0, "-", "test_transmutations"]], "armi.nucDirectory.tests.test_elements": [[157, 2, 1, "", "TestElement"]], "armi.nucDirectory.tests.test_elements.TestElement": [[157, 3, 1, "", "test_abundancesAddToOne"], [157, 3, 1, "", "test_element_addExistingElementFails"], [157, 3, 1, "", "test_element_addedElementAppearsInElementList"], [157, 3, 1, "", "test_element_elementByNameReturnsElement"], [157, 3, 1, "", "test_element_elementBySymbolReturnsElement"], [157, 3, 1, "", "test_element_elementByZReturnsElement"], [157, 3, 1, "", "test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"], [157, 3, 1, "", "test_element_isNaturallyOccurring"], [157, 3, 1, "", "test_elements_elementBulkProperties"], [157, 3, 1, "", "test_isHeavyMetal"]], "armi.nucDirectory.tests.test_nucDirectory": [[158, 2, 1, "", "TestNucDirectory"]], "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory": [[158, 3, 1, "", "test_getDisplacementEnergy"], [158, 3, 1, "", "test_nucDir_getNameForOldDashedNames"], [158, 3, 1, "", "test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"], [158, 3, 1, "", "test_nucDir_getNuclidesFromForBadName"]], "armi.nucDirectory.tests.test_nuclideBases": [[159, 2, 1, "", "TestAAAZZZSId"], [159, 2, 1, "", "TestNuclide"]], "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId": [[159, 3, 1, "", "test_AAAZZZSNameGenerator"]], "armi.nucDirectory.tests.test_nuclideBases.TestNuclide": [[159, 3, 1, "", "test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"], [159, 3, 1, "", "test_NaturalNuclideBase_getNatrualIsotpics"], [159, 3, 1, "", "test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"], [159, 3, 1, "", "test_NonMc2Nuclide"], [159, 3, 1, "", "test_curieDefinitionWithRa226"], [159, 3, 1, "", "test_getDecay"], [159, 3, 1, "", "test_getEndfMatNum"], [159, 3, 1, "", "test_kryptonDecayConstants"], [159, 3, 1, "", "test_loadMcc2Data"], [159, 3, 1, "", "test_loadMcc3Data"], [159, 3, 1, "", "test_nucBase_AllAbundancesAddToOne"], [159, 3, 1, "", "test_nucBases_AllDatabaseNamesAreUnique"], [159, 3, 1, "", "test_nucBases_AllLabelsAreUnique"], [159, 3, 1, "", "test_nucBases_Am242m"], [159, 3, 1, "", "test_nucBases_Mc2Elementals"], [159, 3, 1, "", "test_nucBases_NegativeZRaisesException"], [159, 3, 1, "", "test_nucBases_Z295RaisesException"], [159, 3, 1, "", "test_nucBases_databaseNamesStartWith_n"], [159, 3, 1, "", "test_nucBases_fromNameBadNameRaisesException"], [159, 3, 1, "", "test_nucBases_imposeBurnChainDecayBulkStatistics"], [159, 3, 1, "", "test_nucBases_imposeBurnChainTransmutationBulkStatistics"], [159, 3, 1, "", "test_nucBases_imposeBurn_nuSF"], [159, 3, 1, "", "test_nucBases_isHeavyMetal"], [159, 3, 1, "", "test_nucBases_labelAndNameCollsionsAreForSameNuclide"], [159, 3, 1, "", "test_nucBases_singleFailsWithMultipleMatches"], [159, 3, 1, "", "test_nucBases_singleFailsWithNoMatches"], [159, 3, 1, "", "test_nucBases_singleIsPrettySpecific"]], "armi.nucDirectory.tests.test_thermalScattering": [[160, 2, 1, "", "TestThermalScattering"], [160, 1, 1, "", "buildBlockWithTSL"], [160, 1, 1, "", "getNuclideThermalScatteringData"]], "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering": [[160, 3, 1, "", "test_ACECompound"], [160, 3, 1, "", "test_ACEElementInCompound"], [160, 3, 1, "", "test_ACEIsotope"], [160, 3, 1, "", "test_endf8Compound"], [160, 3, 1, "", "test_endf8ElementInCompound"], [160, 3, 1, "", "test_endf8Isotope"], [160, 3, 1, "", "test_failOnMultiple"], [160, 3, 1, "", "test_graphiteOnReactor"]], "armi.nucDirectory.tests.test_transmutations": [[161, 2, 1, "", "DecayModeTests"], [161, 2, 1, "", "TransmutationTests"], [161, 1, 1, "", "randomString"]], "armi.nucDirectory.tests.test_transmutations.DecayModeTests": [[161, 3, 1, "", "test_DecayMode_invalidReactionTypes"], [161, 3, 1, "", "test_DecayMode_validReactionTypes"]], "armi.nucDirectory.tests.test_transmutations.TransmutationTests": [[161, 3, 1, "", "test_Transmutation_invalidReactionTypes"], [161, 3, 1, "", "test_Transmutation_productParticle"], [161, 3, 1, "", "test_Transmutation_validReactionTypes"]], "armi.nucDirectory.thermalScattering": [[162, 2, 1, "", "ThermalScattering"], [162, 1, 1, "", "factory"]], "armi.nucDirectory.thermalScattering.ThermalScattering": [[162, 3, 1, "", "getSubjectNuclideBases"]], "armi.nucDirectory.transmutations": [[163, 2, 1, "", "DecayMode"], [163, 2, 1, "", "Transmutable"], [163, 2, 1, "", "Transmutation"]], "armi.nucDirectory.transmutations.Transmutable": [[163, 3, 1, "", "getPreferredProduct"]], "armi.nuclearDataIO": [[165, 0, 0, "-", "cccc"], [164, 1, 1, "", "getExpectedCOMPXSFileName"], [164, 1, 1, "", "getExpectedGAMISOFileName"], [164, 1, 1, "", "getExpectedISOTXSFileName"], [164, 1, 1, "", "getExpectedPMATRXFileName"], [195, 0, 0, "-", "nuclearFileMetadata"], [196, 0, 0, "-", "tests"], [200, 0, 0, "-", "xsCollections"], [201, 0, 0, "-", "xsLibraries"], [202, 0, 0, "-", "xsNuclides"]], "armi.nuclearDataIO.cccc": [[166, 0, 0, "-", "cccc"], [167, 0, 0, "-", "compxs"], [168, 0, 0, "-", "dif3d"], [169, 0, 0, "-", "dlayxs"], [170, 0, 0, "-", "fixsrc"], [171, 0, 0, "-", "gamiso"], [172, 0, 0, "-", "geodst"], [173, 0, 0, "-", "isotxs"], [174, 0, 0, "-", "labels"], [175, 0, 0, "-", "nhflux"], [176, 0, 0, "-", "pmatrx"], [177, 0, 0, "-", "pwdint"], [178, 0, 0, "-", "rtflux"], [179, 0, 0, "-", "rzflux"], [180, 0, 0, "-", "tests"]], "armi.nuclearDataIO.cccc.cccc": [[166, 2, 1, "", "AsciiRecordReader"], [166, 2, 1, "", "AsciiRecordWriter"], [166, 2, 1, "", "BinaryRecordReader"], [166, 2, 1, "", "BinaryRecordWriter"], [166, 2, 1, "", "DataContainer"], [166, 6, 1, "", "IMPLICIT_INT"], [166, 2, 1, "", "IORecord"], [166, 2, 1, "", "Stream"], [166, 2, 1, "", "StreamWithDataContainer"], [166, 1, 1, "", "getBlockBandwidth"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader": [[166, 3, 1, "", "close"], [166, 3, 1, "", "rwDouble"], [166, 3, 1, "", "rwFloat"], [166, 3, 1, "", "rwInt"], [166, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter": [[166, 3, 1, "", "close"], [166, 3, 1, "", "open"], [166, 3, 1, "", "rwDouble"], [166, 3, 1, "", "rwFloat"], [166, 3, 1, "", "rwInt"], [166, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader": [[166, 3, 1, "", "close"], [166, 3, 1, "", "open"], [166, 3, 1, "", "rwBool"], [166, 3, 1, "", "rwDouble"], [166, 3, 1, "", "rwFloat"], [166, 3, 1, "", "rwInt"], [166, 3, 1, "", "rwLong"], [166, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter": [[166, 3, 1, "", "close"], [166, 3, 1, "", "open"], [166, 3, 1, "", "rwBool"], [166, 3, 1, "", "rwDouble"], [166, 3, 1, "", "rwFloat"], [166, 3, 1, "", "rwInt"], [166, 3, 1, "", "rwLong"], [166, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.IORecord": [[166, 3, 1, "", "close"], [166, 4, 1, "", "count"], [166, 4, 1, "", "maxsize"], [166, 3, 1, "", "open"], [166, 3, 1, "", "rwBool"], [166, 3, 1, "", "rwDouble"], [166, 3, 1, "", "rwDoubleMatrix"], [166, 3, 1, "", "rwFloat"], [166, 3, 1, "", "rwImplicitlyTypedMap"], [166, 3, 1, "", "rwInt"], [166, 3, 1, "", "rwIntMatrix"], [166, 3, 1, "", "rwList"], [166, 3, 1, "", "rwMatrix"], [166, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.Stream": [[166, 3, 1, "", "createRecord"], [166, 3, 1, "", "readAscii"], [166, 3, 1, "", "readBinary"], [166, 3, 1, "", "readWrite"], [166, 3, 1, "", "writeAscii"], [166, 3, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.compxs": [[167, 2, 1, "", "CompxsRegion"], [167, 1, 1, "", "compare"]], "armi.nuclearDataIO.cccc.compxs.CompxsRegion": [[167, 3, 1, "", "allocateXS"], [167, 3, 1, "", "getXS"], [167, 3, 1, "", "initMetadata"], [167, 5, 1, "", "isFissile"], [167, 3, 1, "", "makeScatteringMatrices"], [167, 3, 1, "", "merge"]], "armi.nuclearDataIO.cccc.dif3d": [[168, 2, 1, "", "Dif3dData"], [168, 2, 1, "", "Dif3dStream"]], "armi.nuclearDataIO.cccc.dif3d.Dif3dStream": [[168, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.dlayxs": [[169, 2, 1, "", "DelayedNeutronData"], [169, 2, 1, "", "Dlayxs"], [169, 2, 1, "", "DlayxsIO"], [169, 1, 1, "", "compare"], [169, 1, 1, "", "readAscii"], [169, 1, 1, "", "readBinary"], [169, 1, 1, "", "writeAscii"], [169, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.dlayxs.Dlayxs": [[169, 5, 1, "", "G"], [169, 3, 1, "", "generateAverageDelayedNeutronConstants"]], "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO": [[169, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.fixsrc": [[170, 2, 1, "", "FIXSRC"], [170, 1, 1, "", "readBinary"], [170, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.fixsrc.FIXSRC": [[170, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.gamiso": [[171, 1, 1, "", "addDummyNuclidesToLibrary"], [171, 1, 1, "", "compare"], [171, 1, 1, "", "compareNuclideXS"]], "armi.nuclearDataIO.cccc.geodst": [[172, 2, 1, "", "GeodstData"], [172, 2, 1, "", "GeodstStream"]], "armi.nuclearDataIO.cccc.geodst.GeodstStream": [[172, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.isotxs": [[173, 2, 1, "", "IsotxsIO"], [173, 1, 1, "", "addDummyNuclidesToLibrary"], [173, 1, 1, "", "compare"], [173, 1, 1, "", "compareNuclideXS"], [173, 1, 1, "", "compareSet"]], "armi.nuclearDataIO.cccc.isotxs.IsotxsIO": [[173, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.labels": [[174, 2, 1, "", "LabelsData"], [174, 2, 1, "", "LabelsStream"]], "armi.nuclearDataIO.cccc.labels.LabelsStream": [[174, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.nhflux": [[175, 2, 1, "", "NHFLUX"], [175, 2, 1, "", "NafluxStream"], [175, 2, 1, "", "NafluxStreamVariant"], [175, 2, 1, "", "NhfluxStream"], [175, 2, 1, "", "NhfluxStreamVariant"], [175, 1, 1, "", "getNhfluxReader"]], "armi.nuclearDataIO.cccc.nhflux.NHFLUX": [[175, 5, 1, "", "fluxMoments"], [175, 5, 1, "", "partialCurrentsHex"], [175, 5, 1, "", "partialCurrentsHex_ext"], [175, 5, 1, "", "partialCurrentsZ"]], "armi.nuclearDataIO.cccc.nhflux.NhfluxStream": [[175, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pmatrx": [[176, 2, 1, "", "PmatrxIO"], [176, 1, 1, "", "addDummyNuclidesToLibrary"], [176, 1, 1, "", "compare"], [176, 1, 1, "", "compareNuclideXS"], [176, 1, 1, "", "readAscii"], [176, 1, 1, "", "readBinary"], [176, 1, 1, "", "writeAscii"], [176, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO": [[176, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pwdint": [[177, 2, 1, "", "PwdintData"], [177, 2, 1, "", "PwdintStream"]], "armi.nuclearDataIO.cccc.pwdint.PwdintStream": [[177, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rtflux": [[178, 2, 1, "", "AtfluxStream"], [178, 2, 1, "", "RtfluxData"], [178, 2, 1, "", "RtfluxStream"], [178, 1, 1, "", "getFDFluxReader"]], "armi.nuclearDataIO.cccc.rtflux.AtfluxStream": [[178, 3, 1, "", "getEnergyGroupIndex"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxData": [[178, 4, 1, "", "groupFluxes"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxStream": [[178, 3, 1, "", "getEnergyGroupIndex"], [178, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rzflux": [[179, 2, 1, "", "Convergence"], [179, 2, 1, "", "RzfluxData"], [179, 2, 1, "", "RzfluxStream"]], "armi.nuclearDataIO.cccc.rzflux.Convergence": [[179, 4, 1, "", "CONVERGED"], [179, 4, 1, "", "CONVERGING"], [179, 4, 1, "", "DIVERGING"], [179, 4, 1, "", "NO_ITERATIONS"]], "armi.nuclearDataIO.cccc.rzflux.RzfluxStream": [[179, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.tests": [[181, 0, 0, "-", "test_cccc"], [182, 0, 0, "-", "test_compxs"], [183, 0, 0, "-", "test_dif3d"], [184, 0, 0, "-", "test_dlayxs"], [185, 0, 0, "-", "test_fixsrc"], [186, 0, 0, "-", "test_gamiso"], [187, 0, 0, "-", "test_geodst"], [188, 0, 0, "-", "test_isotxs"], [189, 0, 0, "-", "test_labels"], [190, 0, 0, "-", "test_nhflux"], [191, 0, 0, "-", "test_pmatrx"], [192, 0, 0, "-", "test_pwdint"], [193, 0, 0, "-", "test_rtflux"], [194, 0, 0, "-", "test_rzflux"]], "armi.nuclearDataIO.cccc.tests.test_cccc": [[181, 2, 1, "", "CcccAsciiRecordTests"], [181, 2, 1, "", "CcccBinaryRecordTests"], [181, 2, 1, "", "CcccIOStreamTests"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests": [[181, 3, 1, "", "test_notReadingAnEntireRecordRaisesException"], [181, 3, 1, "", "test_readingBeyondRecordRaisesException"], [181, 3, 1, "", "test_writeAndReadSimpleFloatRecord"], [181, 3, 1, "", "test_writeAndReadSimpleIntegerRecord"], [181, 3, 1, "", "test_writeAndReadSimpleStringRecord"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests": [[181, 3, 1, "", "test_initWithFileMode"]], "armi.nuclearDataIO.cccc.tests.test_compxs": [[182, 2, 1, "", "TestCompxs"]], "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs": [[182, 5, 1, "", "asciiWritePath"], [182, 5, 1, "", "binaryWritePath"], [182, 3, 1, "", "test_asciiRW"], [182, 3, 1, "", "test_binaryRW"], [182, 3, 1, "", "test_getCOMPXSFileName"], [182, 3, 1, "", "test_libraryData"], [182, 3, 1, "", "test_mergeCompxsLibraries"], [182, 3, 1, "", "test_regionPrimaryXS"], [182, 3, 1, "", "test_totalScatterMatrix"]], "armi.nuclearDataIO.cccc.tests.test_dif3d": [[183, 2, 1, "", "TestDif3dEmptyRecords"], [183, 2, 1, "", "TestDif3dSimpleHexz"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords": [[183, 3, 1, "", "test_empty4and5Records"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz": [[183, 3, 1, "", "test__rw2DRecord"], [183, 3, 1, "", "test__rw3DRecord"], [183, 3, 1, "", "test__rw4DRecord"], [183, 3, 1, "", "test__rw5DRecord"], [183, 3, 1, "", "test__rwFile1DRecord"], [183, 3, 1, "", "test__rwFileID"], [183, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs": [[184, 2, 1, "", "DlayxsTests"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests": [[184, 3, 1, "", "test_ENDFVII1DecayConstants"], [184, 3, 1, "", "test_ENDFVII1NeutronsPerFission"], [184, 3, 1, "", "test_NuDelay"], [184, 3, 1, "", "test_avg"], [184, 3, 1, "", "test_chi_delay"], [184, 3, 1, "", "test_chi_delaySumsTo1"], [184, 3, 1, "", "test_compare"], [184, 3, 1, "", "test_decayConstants"], [184, 3, 1, "", "test_nuclides"], [184, 3, 1, "", "test_writeBinary_mcc3"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc": [[185, 2, 1, "", "TestFixsrc"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc": [[185, 3, 1, "", "test_writeReadBinaryLoop"]], "armi.nuclearDataIO.cccc.tests.test_gamiso": [[186, 2, 1, "", "TestGamiso"]], "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso": [[186, 3, 1, "", "test_addDummyNuclidesToLibrary"], [186, 3, 1, "", "test_compare"], [186, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_geodst": [[187, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst": [[187, 3, 1, "", "test_readGeodst"], [187, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs": [[188, 2, 1, "", "Isotxs_merge_Tests"], [188, 2, 1, "", "TestIsotxs"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests": [[188, 3, 1, "", "test_mergeMccV2FilesRemovesTheFileWideChi"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs": [[188, 3, 1, "", "test_getGAMISOFileName"], [188, 3, 1, "", "test_getISOTXSFileName"], [188, 3, 1, "", "test_getNuclide"], [188, 3, 1, "", "test_getScatterWeights"], [188, 3, 1, "", "test_getScatteringWeights"], [188, 3, 1, "", "test_isotxsDetailedData"], [188, 3, 1, "", "test_isotxsGeneralData"], [188, 3, 1, "", "test_n2nIsReactionBased"], [188, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_labels": [[189, 2, 1, "", "TestLabels"]], "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels": [[189, 3, 1, "", "test_readLabelsBinary"], [189, 3, 1, "", "test_writeLabelsAscii"]], "armi.nuclearDataIO.cccc.tests.test_nhflux": [[190, 2, 1, "", "TestNhflux"], [190, 2, 1, "", "TestNhfluxVariant"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux": [[190, 3, 1, "", "test_fc"], [190, 3, 1, "", "test_fluxMoments"], [190, 3, 1, "", "test_write"], [190, 3, 1, "", "test_xyPartialCurrents"], [190, 3, 1, "", "test_zPartialCurrents"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant": [[190, 3, 1, "", "test_fc"], [190, 3, 1, "", "test_fluxMoments"], [190, 3, 1, "", "test_write"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx": [[191, 2, 1, "", "TestPmatrx"], [191, 2, 1, "", "TestPmatrxNuclides"], [191, 2, 1, "", "TestProductionMatrix_FromWritten"], [191, 2, 1, "", "TestProductionMatrix_FromWrittenAscii"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx": [[191, 3, 1, "", "test_pmatrxDoesntHaveDoseConversionFactors"], [191, 3, 1, "", "test_pmatrxGammaEnergies"], [191, 3, 1, "", "test_pmatrxNeutronEnergies"], [191, 3, 1, "", "test_pmatrxNuclideNames"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides": [[191, 3, 1, "", "test_getPMATRXFileName"], [191, 3, 1, "", "test_nuclideDataIsDifferent"], [191, 3, 1, "", "test_pmatrxNuclideDataAA"], [191, 3, 1, "", "test_pmatrxNuclideDataAB"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten": [[191, 3, 1, "", "test_writtenIsIdenticalToOriginal"]], "armi.nuclearDataIO.cccc.tests.test_pwdint": [[192, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst": [[192, 3, 1, "", "test_readGeodst"], [192, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_rtflux": [[193, 2, 1, "", "Testrtflux"]], "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux": [[193, 3, 1, "", "test_adjoint"], [193, 3, 1, "", "test_readrtflux"], [193, 3, 1, "", "test_rwAscii"], [193, 3, 1, "", "test_writertflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux": [[194, 2, 1, "", "TestRzflux"], [194, 1, 1, "", "binaryFilesEqual"]], "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux": [[194, 3, 1, "", "test_readRzflux"], [194, 3, 1, "", "test_rwAscii"], [194, 3, 1, "", "test_writeRzflux"]], "armi.nuclearDataIO.nuclearFileMetadata": [[195, 2, 1, "", "FileMetadata"], [195, 2, 1, "", "NuclideMetadata"], [195, 2, 1, "", "NuclideXSMetadata"], [195, 2, 1, "", "RegionXSMetadata"]], "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata": [[195, 3, 1, "", "update"]], "armi.nuclearDataIO.tests": [[197, 0, 0, "-", "test_xsCollections"], [198, 0, 0, "-", "test_xsLibraries"], [199, 0, 0, "-", "test_xsNuclides"]], "armi.nuclearDataIO.tests.test_xsCollections": [[197, 2, 1, "", "MockBlock"], [197, 2, 1, "", "MockBlueprints"], [197, 2, 1, "", "MockReactor"], [197, 2, 1, "", "TestXsCollections"]], "armi.nuclearDataIO.tests.test_xsCollections.MockBlock": [[197, 3, 1, "", "getNuclideNumberDensities"], [197, 3, 1, "", "getNuclides"], [197, 3, 1, "", "getVolume"], [197, 4, 1, "", "paramCollectionType"], [197, 5, 1, "", "r"], [197, 3, 1, "", "setNumberDensity"]], "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections": [[197, 3, 1, "", "test_collapseCrossSection"], [197, 3, 1, "", "test_createMacrosFromMicros"], [197, 3, 1, "", "test_generateTotalScatteringMatrix"], [197, 3, 1, "", "test_generateTotalScatteringMatrixWithMissingData"], [197, 3, 1, "", "test_plotNucXs"]], "armi.nuclearDataIO.tests.test_xsLibraries": [[198, 2, 1, "", "AbstractTestXSlibraryMerging"], [198, 2, 1, "", "Combined_Merge_Tests"], [198, 2, 1, "", "Gamiso_Merge_Tests"], [198, 2, 1, "", "Isotxs_Merge_Tests"], [198, 2, 1, "", "Pmatrx_Merge_Tests"], [198, 2, 1, "", "TempFileMixin"], [198, 2, 1, "", "TestGetISOTXSFilesInWorkingDirectory"], [198, 2, 1, "", "TestXSLibrary"]], "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging": [[198, 3, 1, "", "getErrorType"], [198, 3, 1, "", "getLibAAPath"], [198, 3, 1, "", "getLibAA_ABPath"], [198, 3, 1, "", "getLibABPath"], [198, 3, 1, "", "getLibLumpedPath"], [198, 3, 1, "", "getReadFunc"], [198, 3, 1, "", "getWriteFunc"], [198, 3, 1, "", "test_canRemoveIsotopes"], [198, 3, 1, "", "test_cannotMergeXSLibWithSameNuclideNames"], [198, 3, 1, "", "test_cannotMergeXSLibxWithDifferentGroupStructure"], [198, 3, 1, "", "test_mergeEmptyXSLibWithOtherEssentiallyClonesTheOther"], [198, 3, 1, "", "test_mergeTwoXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests": [[198, 3, 1, "", "test_mergeAllXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests": [[198, 3, 1, "", "getErrorType"], [198, 3, 1, "", "getLibAAPath"], [198, 3, 1, "", "getLibAA_ABPath"], [198, 3, 1, "", "getLibABPath"], [198, 3, 1, "", "getLibLumpedPath"], [198, 3, 1, "", "getReadFunc"], [198, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests": [[198, 3, 1, "", "getErrorType"], [198, 3, 1, "", "getLibAAPath"], [198, 3, 1, "", "getLibAA_ABPath"], [198, 3, 1, "", "getLibABPath"], [198, 3, 1, "", "getLibLumpedPath"], [198, 3, 1, "", "getReadFunc"], [198, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests": [[198, 3, 1, "", "getErrorType"], [198, 3, 1, "", "getLibAAPath"], [198, 3, 1, "", "getLibAA_ABPath"], [198, 3, 1, "", "getLibABPath"], [198, 3, 1, "", "getLibLumpedPath"], [198, 3, 1, "", "getReadFunc"], [198, 3, 1, "", "getWriteFunc"], [198, 3, 1, "", "test_canRemoveIsotopes"], [198, 3, 1, "", "test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin": [[198, 5, 1, "", "testFileName"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory": [[198, 3, 1, "", "assert_contains_only"], [198, 3, 1, "", "test_getISOTXSFilesWithLibrarySuffix"], [198, 3, 1, "", "test_getISOTXSFilesWithoutLibrarySuffix"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary": [[198, 3, 1, "", "test_canPickleAndUnpickleGAMISO"], [198, 3, 1, "", "test_canPickleAndUnpickleISOTXS"], [198, 3, 1, "", "test_canPickleAndUnpicklePMATRX"], [198, 3, 1, "", "test_canWriteGamisoFromCombinedXSLibrary"], [198, 3, 1, "", "test_canWriteIsotxsFromCombinedXSLibrary"], [198, 3, 1, "", "test_canWritePmatrxFromCombinedXSLibrary"], [198, 3, 1, "", "test_compareDifferentComponentsOfAnXSLibrary"], [198, 3, 1, "", "test_compareWorks"], [198, 3, 1, "", "test_gamisoLibraryAttributes"], [198, 3, 1, "", "test_isotxsLibraryAttributes"], [198, 3, 1, "", "test_mergeFailsWithNonIsotxsFiles"], [198, 3, 1, "", "test_mergeXSLibrariesWithDifferentDataWorks"], [198, 3, 1, "", "test_pmatrxLibraryAttributes"]], "armi.nuclearDataIO.tests.test_xsNuclides": [[199, 2, 1, "", "NuclideTests"]], "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests": [[199, 3, 1, "", "test_getMicroXS"], [199, 3, 1, "", "test_getXS"], [199, 3, 1, "", "test_nuclide_2dXsArrangementIsCorrect"], [199, 3, 1, "", "test_nuclide_createFromLabelFailsOnBadName"], [199, 3, 1, "", "test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"], [199, 3, 1, "", "test_nuclide_isoaaDetails"], [199, 3, 1, "", "test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"], [199, 3, 1, "", "test_nuclide_newLabelsDontCauseWarnings"], [199, 3, 1, "", "test_nuclide_nuclideBaseMethodsShouldNotFail"], [199, 3, 1, "", "test_nuclide_oldLabelsCauseWarnings"], [199, 3, 1, "", "test_nuclide_scatterXsArrangementIsCorrect"]], "armi.nuclearDataIO.xsCollections": [[200, 2, 1, "", "MacroscopicCrossSectionCreator"], [200, 2, 1, "", "XSCollection"], [200, 1, 1, "", "computeBlockAverageChi"], [200, 1, 1, "", "computeCaptureEnergyGenerationConstants"], [200, 1, 1, "", "computeFissionEnergyGenerationConstants"], [200, 1, 1, "", "computeGammaEnergyDepositionConstants"], [200, 1, 1, "", "computeMacroscopicGroupConstants"], [200, 1, 1, "", "computeNeutronEnergyDepositionConstants"]], "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator": [[200, 3, 1, "", "createMacrosFromMicros"], [200, 3, 1, "", "createMacrosOnBlocklist"]], "armi.nuclearDataIO.xsCollections.XSCollection": [[200, 3, 1, "", "clear"], [200, 3, 1, "", "collapseCrossSection"], [200, 3, 1, "", "compare"], [200, 3, 1, "", "get"], [200, 3, 1, "", "getAbsorptionXS"], [200, 3, 1, "", "getDefaultXs"], [200, 3, 1, "", "getTotalScatterMatrix"], [200, 3, 1, "", "merge"]], "armi.nuclearDataIO.xsLibraries": [[201, 2, 1, "", "CompxsLibrary"], [201, 2, 1, "", "IsotxsLibrary"], [201, 1, 1, "", "compare"], [201, 1, 1, "", "compareLibraryNeutronEnergies"], [201, 1, 1, "", "compareXSLibraryAttribute"], [201, 1, 1, "", "getISOTXSLibrariesToMerge"], [201, 1, 1, "", "getSuffixFromNuclideLabel"], [201, 1, 1, "", "mergeXSLibrariesInWorkingDirectory"]], "armi.nuclearDataIO.xsLibraries.CompxsLibrary": [[201, 3, 1, "", "merge"], [201, 5, 1, "", "regionLabels"], [201, 5, 1, "", "regions"]], "armi.nuclearDataIO.xsLibraries.IsotxsLibrary": [[201, 5, 1, "", "gammaDoseConversionFactors"], [201, 5, 1, "", "gammaEnergyUpperBounds"], [201, 3, 1, "", "get"], [201, 3, 1, "", "getNuclide"], [201, 3, 1, "", "getNuclides"], [201, 3, 1, "", "getScatterWeights"], [201, 3, 1, "", "merge"], [201, 5, 1, "", "neutronDoseConversionFactors"], [201, 5, 1, "", "nuclideLabels"], [201, 5, 1, "", "nuclides"], [201, 5, 1, "", "numGroups"], [201, 5, 1, "", "numGroupsGamma"], [201, 3, 1, "", "purgeFissionProducts"], [201, 3, 1, "", "resetScatterWeights"], [201, 5, 1, "", "xsIDs"]], "armi.nuclearDataIO.xsNuclides": [[202, 2, 1, "", "XSNuclide"], [202, 1, 1, "", "plotCompareScatterMatrix"], [202, 1, 1, "", "plotScatterMatrix"]], "armi.nuclearDataIO.xsNuclides.XSNuclide": [[202, 3, 1, "", "buildNormalizedScatterColumns"], [202, 5, 1, "", "decays"], [202, 3, 1, "", "getMicroXS"], [202, 3, 1, "", "getXS"], [202, 3, 1, "", "merge"], [202, 5, 1, "", "trans"], [202, 3, 1, "", "updateBaseNuclide"]], "armi.operators": [[203, 1, 1, "", "factory"], [203, 1, 1, "", "getOperatorClassFromSettings"], [204, 0, 0, "-", "operator"], [205, 0, 0, "-", "operatorMPI"], [206, 0, 0, "-", "runTypes"], [207, 0, 0, "-", "settingsValidation"], [208, 0, 0, "-", "snapshots"], [209, 0, 0, "-", "tests"]], "armi.operators.operator": [[204, 2, 1, "", "Operator"]], "armi.operators.operator.Operator": [[204, 3, 1, "", "addInterface"], [204, 5, 1, "", "atEOL"], [204, 5, 1, "", "availabilityFactors"], [204, 5, 1, "", "burnSteps"], [204, 3, 1, "", "couplingIsActive"], [204, 3, 1, "", "createInterfaces"], [204, 5, 1, "", "cycleLengths"], [204, 5, 1, "", "cycleNames"], [204, 3, 1, "", "detach"], [204, 3, 1, "", "getActiveInterfaces"], [204, 3, 1, "", "getInterface"], [204, 3, 1, "", "getInterfaces"], [204, 3, 1, "", "initializeInterfaces"], [204, 4, 1, "", "inspector"], [204, 3, 1, "", "interactAllBOC"], [204, 3, 1, "", "interactAllBOL"], [204, 3, 1, "", "interactAllCoupled"], [204, 3, 1, "", "interactAllEOC"], [204, 3, 1, "", "interactAllEOL"], [204, 3, 1, "", "interactAllError"], [204, 3, 1, "", "interactAllEveryNode"], [204, 3, 1, "", "interactAllInit"], [204, 3, 1, "", "interfaceIsActive"], [204, 3, 1, "", "loadState"], [204, 5, 1, "", "maxBurnSteps"], [204, 3, 1, "", "operate"], [204, 5, 1, "", "powerFractions"], [204, 3, 1, "", "printInterfaceSummary"], [204, 3, 1, "", "reattach"], [204, 3, 1, "", "removeAllInterfaces"], [204, 3, 1, "", "removeInterface"], [204, 3, 1, "", "setStateToDefault"], [204, 3, 1, "", "snapshotRequest"], [204, 5, 1, "", "stepLengths"]], "armi.operators.operatorMPI": [[205, 2, 1, "", "OperatorMPI"]], "armi.operators.operatorMPI.OperatorMPI": [[205, 3, 1, "", "collapseAllStderrs"], [205, 3, 1, "", "operate"], [205, 3, 1, "", "workerOperate"], [205, 3, 1, "", "workerQuit"]], "armi.operators.runTypes": [[206, 2, 1, "", "RunTypes"]], "armi.operators.runTypes.RunTypes": [[206, 4, 1, "", "EQUILIBRIUM"], [206, 4, 1, "", "SNAPSHOTS"], [206, 4, 1, "", "STANDARD"]], "armi.operators.snapshots": [[208, 2, 1, "", "OperatorSnapshots"]], "armi.operators.snapshots.OperatorSnapshots": [[208, 5, 1, "", "atEOL"], [208, 3, 1, "", "createInterfaces"], [208, 3, 1, "", "setStateToDefault"]], "armi.operators.tests": [[210, 0, 0, "-", "test_operatorSnapshots"], [211, 0, 0, "-", "test_operators"]], "armi.operators.tests.test_operatorSnapshots": [[210, 2, 1, "", "TestOperatorSnapshots"], [210, 2, 1, "", "TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots": [[210, 3, 1, "", "test_atEOL"], [210, 3, 1, "", "test_createInterfaces"], [210, 3, 1, "", "test_createInterfacesDisabled"], [210, 3, 1, "", "test_mainOperate"], [210, 3, 1, "", "test_setStateToDefault"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings": [[210, 3, 1, "", "test_getOperatorClassFromSettings"]], "armi.operators.tests.test_operators": [[211, 2, 1, "", "CyclesSettingsTests"], [211, 2, 1, "", "InterfaceA"], [211, 2, 1, "", "InterfaceB"], [211, 2, 1, "", "InterfaceC"], [211, 2, 1, "", "OperatorTests"], [211, 2, 1, "", "TestCreateOperator"], [211, 2, 1, "", "TestInterfaceAndEventHeaders"], [211, 2, 1, "", "TestTightCoupling"]], "armi.operators.tests.test_operators.CyclesSettingsTests": [[211, 4, 1, "", "availabilityFactorsSolution"], [211, 4, 1, "", "burnStepsSolution"], [211, 4, 1, "", "cycleLengthsSolution"], [211, 4, 1, "", "cycleNamesSolution"], [211, 4, 1, "", "detailedCyclesSettings"], [211, 4, 1, "", "maxBurnStepsSolution"], [211, 4, 1, "", "powerFractionsSolution"], [211, 4, 1, "", "stepLengthsSolution"], [211, 3, 1, "", "test_getAvailabilityFactors"], [211, 3, 1, "", "test_getBurnSteps"], [211, 3, 1, "", "test_getCycleLengths"], [211, 3, 1, "", "test_getCycleNames"], [211, 3, 1, "", "test_getMaxBurnSteps"], [211, 3, 1, "", "test_getPowerFractions"], [211, 3, 1, "", "test_getStepLengths"]], "armi.operators.tests.test_operators.InterfaceA": [[211, 4, 1, "", "function"], [211, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceB": [[211, 4, 1, "", "function"], [211, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceC": [[211, 4, 1, "", "function"], [211, 4, 1, "", "name"]], "armi.operators.tests.test_operators.OperatorTests": [[211, 3, 1, "", "test_addInterfaceSubclassCollision"], [211, 3, 1, "", "test_getActiveInterfaces"], [211, 3, 1, "", "test_interfaceIsActive"], [211, 3, 1, "", "test_loadStateError"], [211, 3, 1, "", "test_operatorData"], [211, 3, 1, "", "test_orderedInterfaces"], [211, 3, 1, "", "test_setStateToDefault"], [211, 3, 1, "", "test_snapshotRequest"]], "armi.operators.tests.test_operators.TestCreateOperator": [[211, 3, 1, "", "test_createOperator"]], "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders": [[211, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Coupled"], [211, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Cycle"], [211, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Empty"], [211, 3, 1, "", "test_expandCycleAndTimeNodeArgs_EveryNode"]], "armi.operators.tests.test_operators.TestTightCoupling": [[211, 3, 1, "", "dbWriteForCoupling"], [211, 3, 1, "", "test_computeTightCouplingConvergence"], [211, 3, 1, "", "test_couplingIsActive"], [211, 3, 1, "", "test_getStepLengths"], [211, 3, 1, "", "test_performTightCoupling_Inactive"], [211, 3, 1, "", "test_performTightCoupling_NoWriteDB"], [211, 3, 1, "", "test_performTightCoupling_WriteDB"], [211, 3, 1, "", "test_performTightCoupling_notConverged"], [211, 3, 1, "", "test_performTightCoupling_skip"]], "armi.physics": [[213, 0, 0, "-", "constants"], [214, 0, 0, "-", "executers"], [215, 0, 0, "-", "fuelCycle"], [226, 0, 0, "-", "fuelPerformance"], [236, 0, 0, "-", "neutronics"], [270, 0, 0, "-", "safety"], [271, 0, 0, "-", "tests"], [273, 0, 0, "-", "thermalHydraulics"]], "armi.physics.constants": [[213, 6, 1, "", "DPA_CROSS_SECTIONS"]], "armi.physics.executers": [[214, 2, 1, "", "DefaultExecuter"], [214, 2, 1, "", "Executer"], [214, 2, 1, "", "ExecutionOptions"]], "armi.physics.executers.DefaultExecuter": [[214, 3, 1, "", "run"], [214, 3, 1, "", "writeInput"]], "armi.physics.executers.Executer": [[214, 3, 1, "", "run"]], "armi.physics.executers.ExecutionOptions": [[214, 3, 1, "", "describe"], [214, 3, 1, "", "fromReactor"], [214, 3, 1, "", "fromUserSettings"], [214, 3, 1, "", "resolveDerivedOptions"], [214, 3, 1, "", "setRunDirFromCaseTitle"]], "armi.physics.fuelCycle": [[215, 2, 1, "", "FuelHandlerPlugin"], [216, 0, 0, "-", "assemblyRotationAlgorithms"], [217, 0, 0, "-", "fuelHandlerFactory"], [218, 0, 0, "-", "fuelHandlerInterface"], [219, 0, 0, "-", "fuelHandlers"], [220, 0, 0, "-", "hexAssemblyFuelMgmtUtils"], [221, 0, 0, "-", "settings"], [222, 0, 0, "-", "tests"]], "armi.physics.fuelCycle.FuelHandlerPlugin": [[215, 3, 1, "", "defineSettings"], [215, 3, 1, "", "defineSettingsValidators"], [215, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms": [[216, 1, 1, "", "buReducingAssemblyRotation"], [216, 1, 1, "", "simpleAssemblyRotation"]], "armi.physics.fuelCycle.fuelHandlerFactory": [[217, 1, 1, "", "fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface": [[218, 2, 1, "", "FuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface": [[218, 3, 1, "", "interactBOC"], [218, 3, 1, "", "interactEOC"], [218, 3, 1, "", "interactEOL"], [218, 3, 1, "", "makeShuffleReport"], [218, 3, 1, "", "manageFuel"], [218, 4, 1, "", "name"], [218, 3, 1, "", "specifyInputs"], [218, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.fuelHandlers": [[219, 2, 1, "", "FuelHandler"]], "armi.physics.fuelCycle.fuelHandlers.FuelHandler": [[219, 3, 1, "", "chooseSwaps"], [219, 5, 1, "", "cs"], [219, 5, 1, "", "cycle"], [219, 3, 1, "", "dischargeSwap"], [219, 3, 1, "", "doRepeatShuffle"], [219, 3, 1, "", "findAssembly"], [219, 3, 1, "", "getFactorList"], [219, 3, 1, "", "isAssemblyInAZone"], [219, 3, 1, "", "makeShuffleArrows"], [219, 3, 1, "", "outage"], [219, 3, 1, "", "prepCore"], [219, 3, 1, "", "prepShuffleMap"], [219, 3, 1, "", "processMoveList"], [219, 5, 1, "", "r"], [219, 3, 1, "", "readMoves"], [219, 3, 1, "", "repeatShufflePattern"], [219, 3, 1, "", "swapAssemblies"], [219, 3, 1, "", "swapCascade"], [219, 3, 1, "", "trackChain"], [219, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils": [[220, 1, 1, "", "buildConvergentRingSchedule"], [220, 1, 1, "", "buildRingSchedule"], [220, 1, 1, "", "getOptimalAssemblyOrientation"]], "armi.physics.fuelCycle.settings": [[221, 1, 1, "", "getFuelCycleSettingValidators"], [221, 1, 1, "", "getFuelCycleSettings"]], "armi.physics.fuelCycle.tests": [[223, 0, 0, "-", "test_assemblyRotationAlgorithms"], [224, 0, 0, "-", "test_fuelHandlers"], [225, 0, 0, "-", "test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms": [[223, 2, 1, "", "TestFuelHandlerMgmtTools"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools": [[223, 3, 1, "", "test_buReducingAssemblyRotation"], [223, 3, 1, "", "test_simpleAssemblyRotation"]], "armi.physics.fuelCycle.tests.test_fuelHandlers": [[224, 2, 1, "", "FuelHandlerTestHelper"], [224, 2, 1, "", "MockLatticePhysicsInterface"], [224, 2, 1, "", "MockXSGM"], [224, 2, 1, "", "TestFuelHandler"], [224, 2, 1, "", "TestFuelPlugin"], [224, 1, 1, "", "addSomeDetailAssemblies"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface": [[224, 3, 1, "", "interactBOC"], [224, 4, 1, "", "name"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM": [[224, 3, 1, "", "interactBOC"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler": [[224, 3, 1, "", "runShuffling"], [224, 3, 1, "", "test_dischargeSwap"], [224, 3, 1, "", "test_dischargeSwapIncompatibleStationaryBlocks"], [224, 3, 1, "", "test_findByCoords"], [224, 3, 1, "", "test_findHighBu"], [224, 3, 1, "", "test_findInSFP"], [224, 3, 1, "", "test_findMany"], [224, 3, 1, "", "test_findWithMinMax"], [224, 3, 1, "", "test_getAssembliesInRings"], [224, 3, 1, "", "test_getFactorList"], [224, 3, 1, "", "test_getParamMax"], [224, 3, 1, "", "test_interactBOC"], [224, 3, 1, "", "test_isAssemblyInAZone"], [224, 3, 1, "", "test_linPowByPin"], [224, 3, 1, "", "test_linPowByPinGamma"], [224, 3, 1, "", "test_linPowByPinNeutron"], [224, 3, 1, "", "test_outage"], [224, 3, 1, "", "test_outageEdgeCase"], [224, 3, 1, "", "test_processMoveList"], [224, 3, 1, "", "test_readMoves"], [224, 3, 1, "", "test_repeatShuffles"], [224, 3, 1, "", "test_transferDifferentNumberStationaryBlocks"], [224, 3, 1, "", "test_transferIncompatibleHeightStationaryBlocks"], [224, 3, 1, "", "test_transferStationaryBlocks"], [224, 3, 1, "", "test_transferUnalignedLocationStationaryBlocks"], [224, 3, 1, "", "test_width"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin": [[224, 3, 1, "", "test_settingsAreDiscovered"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils": [[225, 2, 1, "", "TestHexAssemMgmtTools"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools": [[225, 3, 1, "", "test_buildConvergentRingSchedule"], [225, 3, 1, "", "test_buildRingSchedule"]], "armi.physics.fuelPerformance": [[227, 0, 0, "-", "executers"], [228, 0, 0, "-", "parameters"], [229, 0, 0, "-", "plugin"], [230, 0, 0, "-", "settings"], [231, 0, 0, "-", "tests"], [235, 0, 0, "-", "utils"]], "armi.physics.fuelPerformance.executers": [[227, 2, 1, "", "FuelPerformanceExecuter"], [227, 2, 1, "", "FuelPerformanceOptions"]], "armi.physics.fuelPerformance.executers.FuelPerformanceOptions": [[227, 3, 1, "", "fromReactor"], [227, 3, 1, "", "fromUserSettings"]], "armi.physics.fuelPerformance.parameters": [[228, 1, 1, "", "getFuelPerformanceParameterDefinitions"]], "armi.physics.fuelPerformance.plugin": [[229, 2, 1, "", "FuelPerformancePlugin"]], "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin": [[229, 3, 1, "", "defineParameters"], [229, 3, 1, "", "defineSettings"], [229, 3, 1, "", "defineSettingsValidators"], [229, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelPerformance.settings": [[230, 1, 1, "", "defineSettings"], [230, 1, 1, "", "defineValidators"]], "armi.physics.fuelPerformance.tests": [[232, 0, 0, "-", "test_executers"], [233, 0, 0, "-", "test_fuelPerformancePlugin"], [234, 0, 0, "-", "test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_executers": [[232, 2, 1, "", "TestFuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions": [[232, 3, 1, "", "test_fuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin": [[233, 2, 1, "", "TestFuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin": [[233, 4, 1, "", "plugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils": [[234, 2, 1, "", "TestFuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils": [[234, 3, 1, "", "test_applyFuelDisplacement"], [234, 3, 1, "", "test_gasConductivityCorrection_morph0"], [234, 3, 1, "", "test_gasConductivityCorrection_morph1"], [234, 3, 1, "", "test_gasConductivityCorrection_morph2"], [234, 3, 1, "", "test_gasConductivityCorrection_morph3"], [234, 3, 1, "", "test_gasConductivityCorrection_morph4"]], "armi.physics.fuelPerformance.utils": [[235, 1, 1, "", "applyFuelDisplacement"], [235, 1, 1, "", "gasConductivityCorrection"]], "armi.physics.neutronics": [[236, 2, 1, "", "LatticePhysicsFrequency"], [236, 2, 1, "", "NeutronicsPlugin"], [236, 1, 1, "", "adjointCalculationRequested"], [236, 1, 1, "", "applyEffectiveDelayedNeutronFractionToCore"], [237, 0, 0, "-", "const"], [238, 0, 0, "-", "crossSectionGroupManager"], [239, 0, 0, "-", "crossSectionSettings"], [240, 0, 0, "-", "diffIsotxs"], [241, 0, 0, "-", "energyGroups"], [242, 0, 0, "-", "fissionProductModel"], [236, 1, 1, "", "gammaTransportIsRequested"], [236, 1, 1, "", "gammaXsAreRequested"], [249, 0, 0, "-", "globalFlux"], [253, 0, 0, "-", "latticePhysics"], [259, 0, 0, "-", "macroXSGenerationInterface"], [260, 0, 0, "-", "parameters"], [236, 1, 1, "", "realCalculationRequested"], [261, 0, 0, "-", "reports"], [262, 0, 0, "-", "settings"], [263, 0, 0, "-", "tests"]], "armi.physics.neutronics.LatticePhysicsFrequency": [[236, 4, 1, "", "BOC"], [236, 4, 1, "", "BOL"], [236, 4, 1, "", "all"], [236, 4, 1, "", "everyNode"], [236, 4, 1, "", "firstCoupledIteration"], [236, 4, 1, "", "never"]], "armi.physics.neutronics.NeutronicsPlugin": [[236, 3, 1, "", "defineEntryPoints"], [236, 3, 1, "", "defineParameters"], [236, 3, 1, "", "defineSettings"], [236, 3, 1, "", "defineSettingsValidators"], [236, 3, 1, "", "exposeInterfaces"], [236, 3, 1, "", "getReportContents"], [236, 3, 1, "", "onProcessCoreLoading"]], "armi.physics.neutronics.crossSectionGroupManager": [[238, 2, 1, "", "AverageBlockCollection"], [238, 2, 1, "", "BlockCollection"], [238, 2, 1, "", "CrossSectionGroupManager"], [238, 2, 1, "", "CylindricalComponentsAverageBlockCollection"], [238, 2, 1, "", "FluxWeightedAverageBlockCollection"], [238, 2, 1, "", "MedianBlockCollection"], [238, 2, 1, "", "SlabComponentsAverageBlockCollection"], [238, 1, 1, "", "blockCollectionFactory"], [238, 1, 1, "", "describeInterfaces"], [238, 1, 1, "", "getBlockNuclideTemperatureAvgTerms"], [238, 1, 1, "", "getXSTypeLabelFromNumber"], [238, 1, 1, "", "getXSTypeNumberFromLabel"]], "armi.physics.neutronics.crossSectionGroupManager.BlockCollection": [[238, 3, 1, "", "calcAvgNuclideTemperatures"], [238, 3, 1, "", "createRepresentativeBlock"], [238, 3, 1, "", "getCandidateBlocks"], [238, 3, 1, "", "getWeight"]], "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager": [[238, 3, 1, "", "clearRepresentativeBlocks"], [238, 3, 1, "", "createRepresentativeBlocks"], [238, 3, 1, "", "createRepresentativeBlocksUsingExistingBlocks"], [238, 3, 1, "", "disableBuGroupUpdates"], [238, 3, 1, "", "enableBuGroupUpdates"], [238, 3, 1, "", "fluxSolutionIsPregenerated"], [238, 3, 1, "", "getNextAvailableXsTypes"], [238, 3, 1, "", "getNucTemperature"], [238, 3, 1, "", "interactBOC"], [238, 3, 1, "", "interactBOL"], [238, 3, 1, "", "interactCoupled"], [238, 3, 1, "", "interactEOC"], [238, 3, 1, "", "interactEveryNode"], [238, 3, 1, "", "makeCrossSectionGroups"], [238, 4, 1, "", "name"], [238, 3, 1, "", "updateNuclideTemperatures"], [238, 3, 1, "", "xsTypeIsPregenerated"]], "armi.physics.neutronics.crossSectionSettings": [[239, 2, 1, "", "XSGeometryTypes"], [239, 2, 1, "", "XSModelingOptions"], [239, 2, 1, "", "XSSettingDef"], [239, 2, 1, "", "XSSettings"], [239, 1, 1, "", "serializeXSSettings"], [239, 1, 1, "", "xsSettingsValidator"]], "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes": [[239, 4, 1, "", "ONE_DIMENSIONAL_CYLINDER"], [239, 4, 1, "", "ONE_DIMENSIONAL_SLAB"], [239, 4, 1, "", "TWO_DIMENSIONAL_HEX"], [239, 4, 1, "", "ZERO_DIMENSIONAL"], [239, 3, 1, "", "getStr"]], "armi.physics.neutronics.crossSectionSettings.XSModelingOptions": [[239, 5, 1, "", "buGroup"], [239, 5, 1, "", "fluxIsPregenerated"], [239, 3, 1, "", "serialize"], [239, 3, 1, "", "setDefaults"], [239, 3, 1, "", "validate"], [239, 5, 1, "", "xsIsPregenerated"], [239, 5, 1, "", "xsType"]], "armi.physics.neutronics.crossSectionSettings.XSSettingDef": [[239, 3, 1, "", "dump"]], "armi.physics.neutronics.crossSectionSettings.XSSettings": [[239, 3, 1, "", "setDefaults"]], "armi.physics.neutronics.diffIsotxs": [[240, 2, 1, "", "CompareIsotxsLibraries"]], "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries": [[240, 3, 1, "", "addOptions"], [240, 3, 1, "", "invoke"], [240, 4, 1, "", "name"], [240, 4, 1, "", "settingsArgument"]], "armi.physics.neutronics.energyGroups": [[241, 6, 1, "", "GROUP_STRUCTURE"], [241, 1, 1, "", "getFastFluxGroupCutoff"], [241, 1, 1, "", "getGroupStructure"], [241, 1, 1, "", "getGroupStructureType"]], "armi.physics.neutronics.fissionProductModel": [[243, 0, 0, "-", "fissionProductModel"], [244, 0, 0, "-", "fissionProductModelSettings"], [245, 0, 0, "-", "lumpedFissionProduct"], [246, 0, 0, "-", "tests"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel": [[243, 2, 1, "", "FissionProductModel"], [243, 1, 1, "", "describeInterfaces"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel": [[243, 3, 1, "", "getAllFissionProductNames"], [243, 3, 1, "", "getGlobalLumpedFissionProducts"], [243, 3, 1, "", "interactBOC"], [243, 3, 1, "", "interactBOL"], [243, 3, 1, "", "interactDistributeState"], [243, 4, 1, "", "name"], [243, 3, 1, "", "removeFissionGasesFromBlocks"], [243, 3, 1, "", "setAllBlockLFPs"], [243, 3, 1, "", "setAllComponentFissionProducts"], [243, 3, 1, "", "setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings": [[244, 1, 1, "", "defineSettings"], [244, 1, 1, "", "getFissionProductModelSettingValidators"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct": [[245, 2, 1, "", "FissionProductDefinitionFile"], [245, 2, 1, "", "LumpedFissionProduct"], [245, 2, 1, "", "LumpedFissionProductCollection"], [245, 1, 1, "", "isGas"], [245, 1, 1, "", "lumpedFissionProductFactory"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile": [[245, 3, 1, "", "createLFPsFromFile"], [245, 3, 1, "", "createSingleLFPFromFile"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct": [[245, 3, 1, "", "duplicate"], [245, 3, 1, "", "getGaseousYieldFraction"], [245, 3, 1, "", "getMassFrac"], [245, 3, 1, "", "getMassFracDenom"], [245, 3, 1, "", "getMassFracs"], [245, 3, 1, "", "getTotalYield"], [245, 3, 1, "", "items"], [245, 3, 1, "", "keys"], [245, 3, 1, "", "values"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection": [[245, 3, 1, "", "duplicate"], [245, 3, 1, "", "getAllFissionProductNames"], [245, 3, 1, "", "getAllFissionProductNuclideBases"], [245, 3, 1, "", "getLumpedFissionProductNames"], [245, 3, 1, "", "getMassFrac"], [245, 3, 1, "", "getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests": [[247, 0, 0, "-", "test_fissionProductModel"], [248, 0, 0, "-", "test_lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel": [[247, 2, 1, "", "TestFissionProductModelExplicitMC2Library"], [247, 2, 1, "", "TestFissionProductModelExplicitMC2LibrarySlower"], [247, 2, 1, "", "TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library": [[247, 3, 1, "", "test_nuclideFlags"], [247, 3, 1, "", "test_nuclidesInModelFuel"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower": [[247, 3, 1, "", "test_nuclidesInModelAllDepletableBlocks"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts": [[247, 3, 1, "", "test_fpApplication"], [247, 3, 1, "", "test_getAllFissionProductNames"], [247, 3, 1, "", "test_loadGlobalLFPsFromFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct": [[248, 2, 1, "", "TestFissionProductDefinitionFile"], [248, 2, 1, "", "TestLumpedFissionProduct"], [248, 2, 1, "", "TestLumpedFissionProductCollection"], [248, 2, 1, "", "TestLumpedFissionProductsExplicit"], [248, 2, 1, "", "TestLumpedFissionProductsFromReferenceFile"], [248, 2, 1, "", "TestMo99LFP"], [248, 1, 1, "", "getDummyLFPFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile": [[248, 3, 1, "", "test_createLFPs"], [248, 3, 1, "", "test_createReferenceLFPs"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct": [[248, 3, 1, "", "test_gaseousYieldFraction"], [248, 3, 1, "", "test_getYield"], [248, 3, 1, "", "test_isGas"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection": [[248, 3, 1, "", "test_duplicate"], [248, 3, 1, "", "test_getAllFissionProductNames"], [248, 3, 1, "", "test_getAllFissionProductNuclideBases"], [248, 3, 1, "", "test_getMassFrac"], [248, 3, 1, "", "test_getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit": [[248, 3, 1, "", "test_explicitFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile": [[248, 3, 1, "", "test_fissionProductYields"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP": [[248, 3, 1, "", "test_getAllFissionProductNames"]], "armi.physics.neutronics.globalFlux": [[250, 0, 0, "-", "globalFluxInterface"], [251, 0, 0, "-", "tests"]], "armi.physics.neutronics.globalFlux.globalFluxInterface": [[250, 2, 1, "", "GlobalFluxExecuter"], [250, 2, 1, "", "GlobalFluxInterface"], [250, 2, 1, "", "GlobalFluxInterfaceUsingExecuters"], [250, 2, 1, "", "GlobalFluxOptions"], [250, 2, 1, "", "GlobalFluxResultMapper"], [250, 1, 1, "", "calcReactionRates"], [250, 1, 1, "", "computeDpaRate"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter": [[250, 3, 1, "", "edgeAssembliesAreNeeded"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface": [[250, 3, 1, "", "calculateKeff"], [250, 3, 1, "", "checkEnergyBalance"], [250, 4, 1, "", "function"], [250, 3, 1, "", "getHistoryParams"], [250, 3, 1, "", "getIOFileNames"], [250, 3, 1, "", "interactBOC"], [250, 3, 1, "", "interactCoupled"], [250, 3, 1, "", "interactEveryNode"], [250, 4, 1, "", "name"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters": [[250, 3, 1, "", "calculateKeff"], [250, 3, 1, "", "getExecuter"], [250, 3, 1, "", "getExecuterCls"], [250, 3, 1, "", "getExecuterOptions"], [250, 3, 1, "", "getLabel"], [250, 3, 1, "", "getOptionsCls"], [250, 3, 1, "", "getTightCouplingValue"], [250, 3, 1, "", "interactCoupled"], [250, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions": [[250, 3, 1, "", "fromReactor"], [250, 3, 1, "", "fromUserSettings"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper": [[250, 3, 1, "", "clearFlux"], [250, 3, 1, "", "getBurnupPeakingFactor"], [250, 3, 1, "", "getDpaXs"], [250, 3, 1, "", "getKeff"], [250, 3, 1, "", "updateDpaRate"], [250, 3, 1, "", "updateMaxDpaParams"]], "armi.physics.neutronics.globalFlux.tests": [[252, 0, 0, "-", "test_globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface": [[252, 2, 1, "", "MockCore"], [252, 2, 1, "", "MockCoreParams"], [252, 2, 1, "", "MockGlobalFluxExecuter"], [252, 2, 1, "", "MockGlobalFluxInterface"], [252, 2, 1, "", "MockGlobalFluxWithExecuters"], [252, 2, 1, "", "MockGlobalFluxWithExecutersNonUniform"], [252, 2, 1, "", "MockReactor"], [252, 2, 1, "", "MockReactorParams"], [252, 2, 1, "", "TestGlobalFluxInterface"], [252, 2, 1, "", "TestGlobalFluxInterfaceWithExecuters"], [252, 2, 1, "", "TestGlobalFluxInterfaceWithExecutersNonUniform"], [252, 2, 1, "", "TestGlobalFluxOptions"], [252, 2, 1, "", "TestGlobalFluxResultMapper"], [252, 2, 1, "", "TestGlobalFluxUtils"], [252, 1, 1, "", "applyDummyFlux"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface": [[252, 3, 1, "", "interactBOC"], [252, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters": [[252, 3, 1, "", "getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform": [[252, 3, 1, "", "getExecuterOptions"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface": [[252, 3, 1, "", "test_checkEnergyBalance"], [252, 3, 1, "", "test_computeDpaRate"], [252, 3, 1, "", "test_getHistoryParams"], [252, 3, 1, "", "test_getIOFileNames"], [252, 3, 1, "", "test_interaction"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters": [[252, 3, 1, "", "test_calculateKeff"], [252, 3, 1, "", "test_executerInteraction"], [252, 3, 1, "", "test_getExecuterCls"], [252, 3, 1, "", "test_getTightCouplingValue"], [252, 3, 1, "", "test_setTightCouplingDefaults"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform": [[252, 3, 1, "", "test_calculateKeff"], [252, 3, 1, "", "test_executerInteractionNonUniformAssems"], [252, 3, 1, "", "test_getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions": [[252, 3, 1, "", "test_readFromReactors"], [252, 3, 1, "", "test_readFromSettings"], [252, 3, 1, "", "test_savePhysicsFiles"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper": [[252, 3, 1, "", "test_getBurnupPeakingFactor"], [252, 3, 1, "", "test_getBurnupPeakingFactorZero"], [252, 3, 1, "", "test_getDpaXs"], [252, 3, 1, "", "test_mapper"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils": [[252, 3, 1, "", "test_calcReactionRates"]], "armi.physics.neutronics.latticePhysics": [[254, 0, 0, "-", "latticePhysicsInterface"], [255, 0, 0, "-", "latticePhysicsWriter"], [256, 0, 0, "-", "tests"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface": [[254, 2, 1, "", "LatticePhysicsInterface"], [254, 1, 1, "", "setBlockNeutronVelocities"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface": [[254, 3, 1, "", "clearXS"], [254, 3, 1, "", "computeCrossSections"], [254, 4, 1, "", "function"], [254, 3, 1, "", "generateLatticePhysicsInputs"], [254, 3, 1, "", "getReader"], [254, 3, 1, "", "getRepresentativeBlocks"], [254, 3, 1, "", "getWriters"], [254, 3, 1, "", "interactBOC"], [254, 3, 1, "", "interactBOL"], [254, 3, 1, "", "interactCoupled"], [254, 3, 1, "", "interactEOC"], [254, 3, 1, "", "interactEveryNode"], [254, 3, 1, "", "makeCycleXSFilesAsBaseFiles"], [254, 3, 1, "", "readExistingXSLibraries"], [254, 3, 1, "", "updatePhysicsCouplingControl"], [254, 3, 1, "", "updateXSLibrary"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter": [[255, 2, 1, "", "LatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter": [[255, 4, 1, "", "COOLANT_CATEGORY"], [255, 4, 1, "", "DEPLETABLE"], [255, 4, 1, "", "FISSION_PRODUCT_CATEGORY"], [255, 4, 1, "", "FUEL_CATEGORY"], [255, 4, 1, "", "REPRESENTED"], [255, 4, 1, "", "STRUCTURE_CATEGORY"], [255, 4, 1, "", "UNDEPLETABLE"], [255, 4, 1, "", "UNREPRESENTED"], [255, 4, 1, "", "UNUSED_CATEGORY"], [255, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests": [[257, 0, 0, "-", "test_latticeInterface"], [258, 0, 0, "-", "test_latticeWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface": [[257, 2, 1, "", "LatticeInterfaceTester"], [257, 2, 1, "", "LatticeInterfaceTesterLibFalse"], [257, 2, 1, "", "TestLatticePhysicsInterface"], [257, 2, 1, "", "TestLatticePhysicsInterfaceBase"], [257, 2, 1, "", "TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester": [[257, 3, 1, "", "readExistingXSLibraries"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface": [[257, 3, 1, "", "test_getSuffix"], [257, 3, 1, "", "test_includeGammaXS"], [257, 3, 1, "", "test_interactAll"], [257, 3, 1, "", "test_interactBOC"], [257, 3, 1, "", "test_interactBOL"], [257, 3, 1, "", "test_interactEveryNode"], [257, 3, 1, "", "test_interactEveryNodeAll"], [257, 3, 1, "", "test_interactEveryNodeFirstCoupled"], [257, 3, 1, "", "test_interactFirstCoupledIteration"], [257, 3, 1, "", "test_latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation": [[257, 3, 1, "", "test_libCreation_GenXS"], [257, 3, 1, "", "test_libCreation_GenXS_2"], [257, 3, 1, "", "test_libCreation_GenXS_3"], [257, 3, 1, "", "test_libCreation_NoGenXS"], [257, 3, 1, "", "test_libCreation_NoGenXS_2"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter": [[258, 2, 1, "", "FakeLatticePhysicsWriter"], [258, 2, 1, "", "TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter": [[258, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter": [[258, 3, 1, "", "test_getAllNuclidesByTemperatureInC"], [258, 3, 1, "", "test_getAllNuclidesByTemperatureInCExplicitFissionProducts"], [258, 3, 1, "", "test_getAllNuclidesByTemperatureInCNone"], [258, 3, 1, "", "test_getAvgNuclideTemperatureInC"], [258, 3, 1, "", "test_getDetailedFPDensities"], [258, 3, 1, "", "test_getDetailedFissionProducts"], [258, 3, 1, "", "test_getDetailedFissionProductsPass"], [258, 3, 1, "", "test_getDriverBlock"], [258, 3, 1, "", "test_getFuelTemperature"], [258, 3, 1, "", "test_isCriticalBucklingSearchActive"], [258, 3, 1, "", "test_isGammaXSGenerationEnabled"], [258, 3, 1, "", "test_isSourceDriven"], [258, 3, 1, "", "test_latticePhysicsWriter"], [258, 3, 1, "", "test_setBlockNeutronVelocities"], [258, 3, 1, "", "test_writeTitle"]], "armi.physics.neutronics.macroXSGenerationInterface": [[259, 2, 1, "", "MacroXSGenerationInterface"], [259, 2, 1, "", "MacroXSGenerator"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface": [[259, 3, 1, "", "buildMacros"], [259, 4, 1, "", "name"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator": [[259, 3, 1, "", "invokeHook"]], "armi.physics.neutronics.parameters": [[260, 1, 1, "", "getNeutronicsParameterDefinitions"]], "armi.physics.neutronics.reports": [[261, 6, 1, "", "PD_PLOT"], [261, 1, 1, "", "generateLinePlot"], [261, 1, 1, "", "insertInitialCoreFuelAssem"], [261, 1, 1, "", "insertNeutronicsBOLContent"], [261, 1, 1, "", "insertNeutronicsReport"], [261, 1, 1, "", "neutronicsPlotting"]], "armi.physics.neutronics.settings": [[262, 1, 1, "", "defineSettings"], [262, 1, 1, "", "getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[264, 0, 0, "-", "test_crossSectionManager"], [265, 0, 0, "-", "test_crossSectionSettings"], [266, 0, 0, "-", "test_crossSectionTable"], [267, 0, 0, "-", "test_energyGroups"], [268, 0, 0, "-", "test_macroXSGenerationInterface"], [269, 0, 0, "-", "test_neutronicsPlugin"]], "armi.physics.neutronics.tests.test_crossSectionManager": [[264, 2, 1, "", "TestBlockCollection"], [264, 2, 1, "", "TestBlockCollectionAverage"], [264, 2, 1, "", "TestBlockCollectionComponentAverage"], [264, 2, 1, "", "TestBlockCollectionComponentAverage1DCylinder"], [264, 2, 1, "", "TestBlockCollectionFluxWeightedAverage"], [264, 2, 1, "", "TestBlockCollectionMedian"], [264, 2, 1, "", "TestComponentAveraging"], [264, 2, 1, "", "TestCrossSectionGroupManager"], [264, 2, 1, "", "TestXSNumberConverters"], [264, 1, 1, "", "makeBlocks"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection": [[264, 3, 1, "", "test_add"], [264, 3, 1, "", "test_getBlocksInGroup"], [264, 3, 1, "", "test_is_pickleable"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage": [[264, 3, 1, "", "test_checkBlockSimilarity"], [264, 3, 1, "", "test_createRepresentativeBlock"], [264, 3, 1, "", "test_createRepresentativeBlockDissimilar"], [264, 3, 1, "", "test_performAverageByComponent"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage": [[264, 3, 1, "", "test_ComponentAverageRepBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder": [[264, 3, 1, "", "test_ComponentAverage1DCylinder"], [264, 3, 1, "", "test_checkComponentConsistency"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage": [[264, 3, 1, "", "test_createRepresentativeBlock"], [264, 3, 1, "", "test_invalidWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian": [[264, 3, 1, "", "test_createRepresentativeBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging": [[264, 3, 1, "", "test_getAverageComponentNumberDensities"], [264, 3, 1, "", "test_getAverageComponentTemperature"], [264, 3, 1, "", "test_getAverageComponentTemperatureNoMass"], [264, 3, 1, "", "test_getAverageComponentTemperatureVariedWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager": [[264, 3, 1, "", "test_addXsGroupsFromBlocks"], [264, 3, 1, "", "test_calcWeightedBurnup"], [264, 3, 1, "", "test_copyPregeneratedFiles"], [264, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocks"], [264, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocksDisableValidBlockTypes"], [264, 3, 1, "", "test_disableBuGroupUpdates"], [264, 3, 1, "", "test_enableBuGroupUpdates"], [264, 3, 1, "", "test_getNextAvailableXsType"], [264, 3, 1, "", "test_getRepresentativeBlocks"], [264, 3, 1, "", "test_interactAllCoupled"], [264, 3, 1, "", "test_interactBOC"], [264, 3, 1, "", "test_interactBOL"], [264, 3, 1, "", "test_interactEveryNode"], [264, 3, 1, "", "test_interactFirstCoupledIteration"], [264, 3, 1, "", "test_setBuGroupBounds"], [264, 3, 1, "", "test_updateBurnupGroups"], [264, 3, 1, "", "test_xsgmIsRunBeforeXS"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters": [[264, 3, 1, "", "test_conversion"], [264, 3, 1, "", "test_conversion_2digit"]], "armi.physics.neutronics.tests.test_crossSectionSettings": [[265, 2, 1, "", "TestCrossSectionSettings"], [265, 2, 1, "", "TestXSSettings"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings": [[265, 3, 1, "", "test_badCrossSections"], [265, 3, 1, "", "test_crossSections"], [265, 3, 1, "", "test_homogeneousXsDefaultSettingAssignment"], [265, 3, 1, "", "test_optionalKey"], [265, 3, 1, "", "test_pregeneratedCrossSections"], [265, 3, 1, "", "test_pregeneratedFluxInputs"], [265, 3, 1, "", "test_prioritization"], [265, 3, 1, "", "test_setDefaultSettingsByLowestBuGroupHomogeneous"], [265, 3, 1, "", "test_setDefaultSettingsByLowestBuGroupOneDimensional"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings": [[265, 3, 1, "", "test_caseSettings"], [265, 3, 1, "", "test_csBlockRepresentation"], [265, 3, 1, "", "test_csBlockRepresentationFileLocation"], [265, 3, 1, "", "test_xsSettingsSetDefault"], [265, 3, 1, "", "test_yamlIO"]], "armi.physics.neutronics.tests.test_crossSectionTable": [[266, 2, 1, "", "TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable": [[266, 3, 1, "", "test_isotopicDepletionInterface"], [266, 3, 1, "", "test_makeTable"]], "armi.physics.neutronics.tests.test_energyGroups": [[267, 2, 1, "", "TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups": [[267, 3, 1, "", "test_consistenciesBetweenGroupStructureAndGroupStructureType"], [267, 3, 1, "", "test_getFastFluxGroupCutoff"], [267, 3, 1, "", "test_invalidGroupStructureType"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface": [[268, 2, 1, "", "TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface": [[268, 3, 1, "", "test_macroXSGenerationInterfaceBasics"]], "armi.physics.neutronics.tests.test_neutronicsPlugin": [[269, 2, 1, "", "NeutronicsReactorTests"], [269, 2, 1, "", "TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests": [[269, 3, 1, "", "test_kineticsParameterAssignment"], [269, 3, 1, "", "test_neutronicsSettingsValidators"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin": [[269, 4, 1, "", "plugin"], [269, 3, 1, "", "test_customSettingObjectIO"], [269, 3, 1, "", "test_customSettingRoundTrip"], [269, 3, 1, "", "test_neutronicsSettingsLoaded"]], "armi.physics.safety": [[270, 2, 1, "", "SafetyPlugin"]], "armi.physics.safety.SafetyPlugin": [[270, 3, 1, "", "defineSettings"]], "armi.physics.tests": [[272, 0, 0, "-", "test_executers"]], "armi.physics.tests.test_executers": [[272, 2, 1, "", "MockCore"], [272, 2, 1, "", "MockParams"], [272, 2, 1, "", "MockReactor"], [272, 2, 1, "", "TestExecuters"], [272, 2, 1, "", "TestExecutionOptions"]], "armi.physics.tests.test_executers.TestExecuters": [[272, 3, 1, "", "test_collectInputsAndOutputs"], [272, 3, 1, "", "test_runExternalExecutable"], [272, 3, 1, "", "test_updateRunDir"]], "armi.physics.tests.test_executers.TestExecutionOptions": [[272, 3, 1, "", "test_runningDirectoryPath"]], "armi.physics.thermalHydraulics": [[274, 0, 0, "-", "const"], [275, 0, 0, "-", "parameters"], [276, 0, 0, "-", "plugin"], [277, 0, 0, "-", "settings"], [278, 0, 0, "-", "tests"]], "armi.physics.thermalHydraulics.parameters": [[275, 1, 1, "", "getParameterDefinitions"]], "armi.physics.thermalHydraulics.plugin": [[276, 2, 1, "", "ThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin": [[276, 3, 1, "", "afterConstructionOfAssemblies"], [276, 3, 1, "", "defineParameters"], [276, 3, 1, "", "defineSettings"], [276, 3, 1, "", "defineSettingsValidators"], [276, 3, 1, "", "exposeInterfaces"]], "armi.physics.thermalHydraulics.settings": [[277, 1, 1, "", "defineSettings"], [277, 1, 1, "", "defineValidators"]], "armi.physics.thermalHydraulics.tests": [[279, 0, 0, "-", "test_thermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin": [[279, 2, 1, "", "TestThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin": [[279, 4, 1, "", "plugin"], [279, 3, 1, "", "test_thermalHydraulicsSettingsLoaded"], [279, 3, 1, "", "test_thermalHydraulicsSettingsSet"]], "armi.pluginManager": [[280, 2, 1, "", "ArmiPluginManager"]], "armi.pluginManager.ArmiPluginManager": [[280, 5, 1, "", "counter"], [280, 3, 1, "", "register"], [280, 3, 1, "", "unregister"]], "armi.plugins": [[281, 2, 1, "", "ArmiPlugin"], [281, 7, 1, "", "PluginError"], [281, 2, 1, "", "UserPlugin"], [281, 1, 1, "", "collectInterfaceDescriptions"], [281, 1, 1, "", "getNewPluginManager"]], "armi.plugins.ArmiPlugin": [[281, 3, 1, "", "afterConstructionOfAssemblies"], [281, 3, 1, "", "beforeReactorConstruction"], [281, 3, 1, "", "defineAssemblyTypes"], [281, 3, 1, "", "defineBlockTypes"], [281, 3, 1, "", "defineBlueprintsSections"], [281, 3, 1, "", "defineCaseDependencies"], [281, 3, 1, "", "defineEntryPoints"], [281, 3, 1, "", "defineFlags"], [281, 3, 1, "", "defineGuiWidgets"], [281, 3, 1, "", "defineParameterRenames"], [281, 3, 1, "", "defineParameters"], [281, 3, 1, "", "defineSettings"], [281, 3, 1, "", "defineSettingsValidators"], [281, 3, 1, "", "defineSystemBuilders"], [281, 3, 1, "", "exposeInterfaces"], [281, 3, 1, "", "getAxialExpansionChanger"], [281, 3, 1, "", "getOperatorClassFromRunType"], [281, 3, 1, "", "getReportContents"], [281, 3, 1, "", "mpiActionRequiresReset"], [281, 3, 1, "", "onProcessCoreLoading"]], "armi.plugins.UserPlugin": [[281, 3, 1, "", "defineParameterRenames"], [281, 3, 1, "", "defineParameters"], [281, 3, 1, "", "defineSettings"], [281, 3, 1, "", "defineSettingsValidators"]], "armi.reactor": [[282, 2, 1, "", "ReactorPlugin"], [283, 0, 0, "-", "assemblies"], [284, 0, 0, "-", "assemblyParameters"], [285, 0, 0, "-", "blockParameters"], [286, 0, 0, "-", "blocks"], [287, 0, 0, "-", "blueprints"], [303, 0, 0, "-", "components"], [309, 0, 0, "-", "composites"], [310, 0, 0, "-", "converters"], [329, 0, 0, "-", "cores"], [330, 0, 0, "-", "excoreStructure"], [331, 0, 0, "-", "flags"], [332, 0, 0, "-", "geometry"], [333, 0, 0, "-", "grids"], [342, 0, 0, "-", "parameters"], [347, 0, 0, "-", "reactorParameters"], [348, 0, 0, "-", "reactors"], [349, 0, 0, "-", "spentFuelPool"], [350, 0, 0, "-", "systemLayoutInput"], [351, 0, 0, "-", "tests"], [363, 0, 0, "-", "zones"]], "armi.reactor.ReactorPlugin": [[282, 3, 1, "", "beforeReactorConstruction"], [282, 3, 1, "", "defineAssemblyTypes"], [282, 3, 1, "", "defineBlockTypes"], [282, 3, 1, "", "defineSystemBuilders"], [282, 3, 1, "", "getAxialExpansionChanger"]], "armi.reactor.assemblies": [[283, 2, 1, "", "Assembly"], [283, 2, 1, "", "CartesianAssembly"], [283, 2, 1, "", "HexAssembly"], [283, 2, 1, "", "RZAssembly"], [283, 2, 1, "", "ThRZAssembly"]], "armi.reactor.assemblies.Assembly": [[283, 4, 1, "", "DATABASE"], [283, 4, 1, "", "LOAD_QUEUE"], [283, 4, 1, "", "NOT_IN_CORE"], [283, 4, 1, "", "SPENT_FUEL_POOL"], [283, 3, 1, "", "add"], [283, 3, 1, "", "adjustResolution"], [283, 3, 1, "", "calculateZCoords"], [283, 3, 1, "", "coords"], [283, 3, 1, "", "countBlocksWithFlags"], [283, 3, 1, "", "dump"], [283, 3, 1, "", "getAge"], [283, 3, 1, "", "getArea"], [283, 3, 1, "", "getAveragePlenumTemperature"], [283, 3, 1, "", "getAxialMesh"], [283, 3, 1, "", "getBIndexFromZIndex"], [283, 3, 1, "", "getBlockAtElevation"], [283, 3, 1, "", "getBlocks"], [283, 3, 1, "", "getBlocksAndZ"], [283, 3, 1, "", "getBlocksBetweenElevations"], [283, 3, 1, "", "getDim"], [283, 3, 1, "", "getElevationBoundariesByBlockType"], [283, 3, 1, "", "getElevationsMatchingParamValue"], [283, 3, 1, "", "getFirstBlock"], [283, 3, 1, "", "getFirstBlockByType"], [283, 3, 1, "", "getHeight"], [283, 3, 1, "", "getLocation"], [283, 3, 1, "", "getNum"], [283, 3, 1, "", "getParamOfZFunction"], [283, 3, 1, "", "getParamValuesAtZ"], [283, 3, 1, "", "getPinPlenumVolumeInCubicMeters"], [283, 3, 1, "", "getReactiveHeight"], [283, 3, 1, "", "getSymmetryFactor"], [283, 3, 1, "", "getTotalHeight"], [283, 3, 1, "", "getVolume"], [283, 3, 1, "", "hasContinuousCoolantChannel"], [283, 3, 1, "", "insert"], [283, 3, 1, "", "isOnWhichSymmetryLine"], [283, 3, 1, "", "makeAxialSnapList"], [283, 3, 1, "", "makeNameFromAssemNum"], [283, 3, 1, "", "makeUnique"], [283, 3, 1, "", "moveTo"], [283, 4, 1, "", "pDefs"], [283, 4, 1, "", "paramCollectionType"], [283, 3, 1, "", "reestablishBlockOrder"], [283, 3, 1, "", "renameBlocksAccordingToAssemblyNum"], [283, 3, 1, "", "renumber"], [283, 3, 1, "", "rotate"], [283, 3, 1, "", "setBlockHeights"], [283, 3, 1, "", "setBlockMesh"]], "armi.reactor.assemblies.CartesianAssembly": [[283, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblies.HexAssembly": [[283, 4, 1, "", "paramCollectionType"], [283, 3, 1, "", "rotate"]], "armi.reactor.assemblies.RZAssembly": [[283, 4, 1, "", "paramCollectionType"], [283, 3, 1, "", "radialInner"], [283, 3, 1, "", "radialOuter"], [283, 3, 1, "", "thetaInner"], [283, 3, 1, "", "thetaOuter"]], "armi.reactor.assemblies.ThRZAssembly": [[283, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblyParameters": [[284, 1, 1, "", "getAssemblyParameterDefinitions"]], "armi.reactor.blockParameters": [[285, 1, 1, "", "getBlockParameterDefinitions"]], "armi.reactor.blocks": [[286, 2, 1, "", "Block"], [286, 2, 1, "", "CartesianBlock"], [286, 2, 1, "", "HexBlock"], [286, 2, 1, "", "ThRZBlock"]], "armi.reactor.blocks.Block": [[286, 4, 1, "", "PITCH_COMPONENT_TYPE"], [286, 4, 1, "", "PITCH_DIMENSION"], [286, 3, 1, "", "add"], [286, 3, 1, "", "adjustDensity"], [286, 3, 1, "", "adjustUEnrich"], [286, 3, 1, "", "autoCreateSpatialGrids"], [286, 3, 1, "", "breakFuelComponentsIntoIndividuals"], [286, 3, 1, "", "completeInitialLoading"], [286, 3, 1, "", "coords"], [286, 5, 1, "", "core"], [286, 3, 1, "", "createHomogenizedCopy"], [286, 3, 1, "", "getArea"], [286, 3, 1, "", "getBlocks"], [286, 3, 1, "", "getBoronMassEnrich"], [286, 3, 1, "", "getCaptureEnergyGenerationConstants"], [286, 3, 1, "", "getComponentAreaFrac"], [286, 3, 1, "", "getComponentsInLinkedOrder"], [286, 3, 1, "", "getComponentsThatAreLinkedTo"], [286, 3, 1, "", "getDim"], [286, 3, 1, "", "getDimensions"], [286, 3, 1, "", "getFissionEnergyGenerationConstants"], [286, 3, 1, "", "getFlowAreaPerPin"], [286, 3, 1, "", "getGammaEnergyDepositionConstants"], [286, 3, 1, "", "getHeight"], [286, 3, 1, "", "getHydraulicDiameter"], [286, 3, 1, "", "getInputHeight"], [286, 3, 1, "", "getIntegratedMgFlux"], [286, 3, 1, "", "getLargestComponent"], [286, 3, 1, "", "getLocation"], [286, 3, 1, "", "getLumpedFissionProductCollection"], [286, 3, 1, "", "getMaxArea"], [286, 3, 1, "", "getMfp"], [286, 3, 1, "", "getMgFlux"], [286, 3, 1, "", "getMicroSuffix"], [286, 3, 1, "", "getNeutronEnergyDepositionConstants"], [286, 3, 1, "", "getNumPins"], [286, 3, 1, "", "getPinCenterFlatToFlat"], [286, 3, 1, "", "getPinCoordinates"], [286, 3, 1, "", "getPinPitch"], [286, 3, 1, "", "getPitch"], [286, 3, 1, "", "getPlenumPin"], [286, 3, 1, "", "getPuMoles"], [286, 3, 1, "", "getSmearDensity"], [286, 3, 1, "", "getSortedComponentsInsideOfComponent"], [286, 3, 1, "", "getSymmetryFactor"], [286, 3, 1, "", "getTotalEnergyGenerationConstants"], [286, 3, 1, "", "getUraniumMassEnrich"], [286, 3, 1, "", "getVolume"], [286, 3, 1, "", "getWettedPerimeter"], [286, 3, 1, "", "getWireWrapCladGap"], [286, 3, 1, "", "hasPinPitch"], [286, 3, 1, "", "isPlenumPin"], [286, 3, 1, "", "makeName"], [286, 3, 1, "", "mergeWithBlock"], [286, 4, 1, "", "pDefs"], [286, 4, 1, "", "paramCollectionType"], [286, 3, 1, "", "plotFlux"], [286, 3, 1, "", "remove"], [286, 3, 1, "", "removeAll"], [286, 3, 1, "", "replaceBlockWithBlock"], [286, 3, 1, "", "rotate"], [286, 3, 1, "", "setAreaFractionsReport"], [286, 3, 1, "", "setAxialExpTargetComp"], [286, 3, 1, "", "setB10VolParam"], [286, 3, 1, "", "setBuLimitInfo"], [286, 3, 1, "", "setHeight"], [286, 3, 1, "", "setPinMgFluxes"], [286, 3, 1, "", "setPitch"], [286, 4, 1, "", "uniqID"], [286, 3, 1, "", "updateComponentDims"], [286, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.CartesianBlock": [[286, 4, 1, "", "PITCH_COMPONENT_TYPE"], [286, 4, 1, "", "PITCH_DIMENSION"], [286, 3, 1, "", "getMaxArea"], [286, 3, 1, "", "getPinCenterFlatToFlat"], [286, 3, 1, "", "getSymmetryFactor"], [286, 4, 1, "", "paramCollectionType"], [286, 3, 1, "", "setPitch"]], "armi.reactor.blocks.HexBlock": [[286, 4, 1, "", "PITCH_COMPONENT_TYPE"], [286, 3, 1, "", "autoCreateSpatialGrids"], [286, 3, 1, "", "coords"], [286, 3, 1, "", "createHomogenizedCopy"], [286, 3, 1, "", "getDuctIP"], [286, 3, 1, "", "getDuctOP"], [286, 3, 1, "", "getFlowArea"], [286, 3, 1, "", "getHydraulicDiameter"], [286, 3, 1, "", "getMaxArea"], [286, 3, 1, "", "getPinCenterFlatToFlat"], [286, 3, 1, "", "getPinPitch"], [286, 3, 1, "", "getPinToDuctGap"], [286, 3, 1, "", "getRotationNum"], [286, 3, 1, "", "getSymmetryFactor"], [286, 3, 1, "", "getWettedPerimeter"], [286, 3, 1, "", "hasPinPitch"], [286, 3, 1, "", "initializePinLocations"], [286, 4, 1, "", "paramCollectionType"], [286, 3, 1, "", "rotate"], [286, 3, 1, "", "setPinPowers"], [286, 3, 1, "", "setRotationNum"], [286, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.ThRZBlock": [[286, 3, 1, "", "axialInner"], [286, 3, 1, "", "axialOuter"], [286, 3, 1, "", "getMaxArea"], [286, 4, 1, "", "paramCollectionType"], [286, 3, 1, "", "radialInner"], [286, 3, 1, "", "radialOuter"], [286, 3, 1, "", "thetaInner"], [286, 3, 1, "", "thetaOuter"], [286, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blueprints": [[287, 2, 1, "", "Blueprints"], [288, 0, 0, "-", "assemblyBlueprint"], [289, 0, 0, "-", "blockBlueprint"], [290, 0, 0, "-", "componentBlueprint"], [291, 0, 0, "-", "gridBlueprint"], [292, 0, 0, "-", "isotopicOptions"], [287, 1, 1, "", "loadFromCs"], [287, 1, 1, "", "migrate"], [293, 0, 0, "-", "reactorBlueprint"], [294, 0, 0, "-", "tests"]], "armi.reactor.blueprints.Blueprints": [[287, 3, 1, "", "addDefaultSFP"], [287, 4, 1, "", "attributes"], [287, 3, 1, "", "constructAssem"], [287, 3, 1, "", "load"], [287, 3, 1, "", "migrate"]], "armi.reactor.blueprints.assemblyBlueprint": [[288, 2, 1, "", "AssemblyBlueprint"], [288, 2, 1, "", "AssemblyKeyedList"], [288, 2, 1, "", "ByComponentModifications"], [288, 2, 1, "", "MaterialModifications"], [288, 2, 1, "", "Modifications"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint": [[288, 4, 1, "", "attributes"], [288, 3, 1, "", "construct"], [288, 3, 1, "", "getAssemClass"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList": [[288, 4, 1, "", "attributes"], [288, 5, 1, "", "bySpecifier"], [288, 4, 1, "", "item_type"]], "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications": [[288, 4, 1, "", "attributes"], [288, 4, 1, "", "key_type"], [288, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications": [[288, 4, 1, "", "attributes"], [288, 4, 1, "", "key_type"], [288, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.Modifications": [[288, 4, 1, "", "attributes"], [288, 4, 1, "", "key_type"], [288, 4, 1, "", "value_type"]], "armi.reactor.blueprints.blockBlueprint": [[289, 2, 1, "", "BlockBlueprint"], [289, 2, 1, "", "BlockKeyedList"], [289, 2, 1, "", "BlockList"]], "armi.reactor.blueprints.blockBlueprint.BlockBlueprint": [[289, 4, 1, "", "attributes"], [289, 3, 1, "", "construct"], [289, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockKeyedList": [[289, 4, 1, "", "attributes"], [289, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockList": [[289, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint": [[290, 2, 1, "", "ComponentBlueprint"], [290, 2, 1, "", "ComponentDimension"], [290, 2, 1, "", "ComponentGroup"], [290, 2, 1, "", "ComponentGroups"], [290, 2, 1, "", "ComponentKeyedList"], [290, 2, 1, "", "GroupedComponent"], [290, 1, 1, "", "expandElementals"], [290, 1, 1, "", "insertDepletableNuclideKeys"]], "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint": [[290, 4, 1, "", "attributes"], [290, 3, 1, "", "construct"], [290, 3, 1, "", "setCustomDensity"]], "armi.reactor.blueprints.componentBlueprint.ComponentDimension": [[290, 4, 1, "", "attributes"], [290, 3, 1, "", "from_yaml"], [290, 3, 1, "", "to_yaml"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroup": [[290, 4, 1, "", "attributes"], [290, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroups": [[290, 4, 1, "", "attributes"], [290, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList": [[290, 4, 1, "", "attributes"], [290, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.GroupedComponent": [[290, 4, 1, "", "attributes"]], "armi.reactor.blueprints.gridBlueprint": [[291, 2, 1, "", "GridBlueprint"], [291, 2, 1, "", "Grids"], [291, 2, 1, "", "Triplet"], [291, 1, 1, "", "saveToStream"]], "armi.reactor.blueprints.gridBlueprint.GridBlueprint": [[291, 4, 1, "", "attributes"], [291, 3, 1, "", "construct"], [291, 3, 1, "", "expandToFull"], [291, 3, 1, "", "getLocators"], [291, 3, 1, "", "getMultiLocator"], [291, 5, 1, "", "readFromLatticeMap"]], "armi.reactor.blueprints.gridBlueprint.Grids": [[291, 4, 1, "", "attributes"], [291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.gridBlueprint.Triplet": [[291, 4, 1, "", "attributes"]], "armi.reactor.blueprints.isotopicOptions": [[292, 2, 1, "", "CustomIsotopic"], [292, 2, 1, "", "CustomIsotopics"], [292, 2, 1, "", "NuclideFlag"], [292, 2, 1, "", "NuclideFlags"], [292, 1, 1, "", "autoUpdateNuclideFlags"], [292, 1, 1, "", "eleExpandInfoBasedOnCodeENDF"], [292, 1, 1, "", "genDefaultNucFlags"], [292, 1, 1, "", "getAllNuclideBasesByLibrary"], [292, 1, 1, "", "getDefaultNuclideFlags"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopic": [[292, 3, 1, "", "apply"], [292, 4, 1, "", "attributes"], [292, 5, 1, "", "density"], [292, 3, 1, "", "from_yaml"], [292, 3, 1, "", "from_yaml_key_val"], [292, 4, 1, "", "key_type"], [292, 4, 1, "", "value_type"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopics": [[292, 3, 1, "", "apply"], [292, 4, 1, "", "attributes"], [292, 4, 1, "", "item_type"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlag": [[292, 4, 1, "", "attributes"], [292, 3, 1, "", "fileAsActiveOrInert"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlags": [[292, 4, 1, "", "attributes"], [292, 4, 1, "", "item_type"]], "armi.reactor.blueprints.reactorBlueprint": [[293, 2, 1, "", "SystemBlueprint"], [293, 2, 1, "", "Systems"], [293, 1, 1, "", "summarizeMaterialData"]], "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint": [[293, 4, 1, "", "attributes"], [293, 3, 1, "", "construct"]], "armi.reactor.blueprints.reactorBlueprint.Systems": [[293, 4, 1, "", "attributes"], [293, 4, 1, "", "item_type"]], "armi.reactor.blueprints.tests": [[295, 0, 0, "-", "test_assemblyBlueprints"], [296, 0, 0, "-", "test_blockBlueprints"], [297, 0, 0, "-", "test_blueprints"], [298, 0, 0, "-", "test_componentBlueprint"], [299, 0, 0, "-", "test_customIsotopics"], [300, 0, 0, "-", "test_gridBlueprints"], [301, 0, 0, "-", "test_materialModifications"], [302, 0, 0, "-", "test_reactorBlueprints"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints": [[295, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications": [[295, 3, 1, "", "loadCustomAssembly"], [295, 3, 1, "", "test_checkParamConsistency"], [295, 4, 1, "", "twoBlockInput_correct"], [295, 4, 1, "", "twoBlockInput_wrongHeights"], [295, 4, 1, "", "twoBlockInput_wrongMatMods"], [295, 4, 1, "", "twoBlockInput_wrongMeshPoints"], [295, 4, 1, "", "twoBlockInput_wrongXSTypes"]], "armi.reactor.blueprints.tests.test_blockBlueprints": [[296, 2, 1, "", "TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock": [[296, 3, 1, "", "test_blockLattice"], [296, 3, 1, "", "test_constructSpatialGrid"], [296, 3, 1, "", "test_densityConsistentWithComponentConstructor"], [296, 3, 1, "", "test_explicitFlags"], [296, 3, 1, "", "test_getLocatorsAtLatticePositions"], [296, 3, 1, "", "test_nonLatticeComponentHasRightMult"]], "armi.reactor.blueprints.tests.test_blueprints": [[297, 2, 1, "", "TestBlueprints"], [297, 2, 1, "", "TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints": [[297, 3, 1, "", "test_componentDimensions"], [297, 3, 1, "", "test_getAssemblyTypeBySpecifier"], [297, 3, 1, "", "test_nuclides"], [297, 3, 1, "", "test_roundTripCompleteBP"], [297, 3, 1, "", "test_specialIsotopicVectors"], [297, 3, 1, "", "test_traceNuclides"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema": [[297, 3, 1, "", "test_assemblyParameters"], [297, 3, 1, "", "test_cladding_invalid"], [297, 3, 1, "", "test_componentGroupInput"], [297, 3, 1, "", "test_components"], [297, 3, 1, "", "test_customIsotopics"], [297, 3, 1, "", "test_merge"], [297, 3, 1, "", "test_noDuplicateKeysInYamlBlueprints"], [297, 3, 1, "", "test_nuclideFlags"], [297, 3, 1, "", "test_nuclidesMc2v2"], [297, 3, 1, "", "test_nuclidesMc2v3"], [297, 3, 1, "", "test_topLevelComponentInput"], [297, 3, 1, "", "test_withoutBlocks"]], "armi.reactor.blueprints.tests.test_componentBlueprint": [[298, 2, 1, "", "TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint": [[298, 4, 1, "", "componentString"], [298, 3, 1, "", "test_autoDepletable"], [298, 3, 1, "", "test_componentInitializationAmericiumCustomIsotopics"], [298, 3, 1, "", "test_componentInitializationControlCustomIsotopics"], [298, 3, 1, "", "test_componentInitializationIncompleteBurnChain"], [298, 3, 1, "", "test_componentInitializationThoriumBurnCustomIsotopics"], [298, 3, 1, "", "test_componentInitializationThoriumNoBurnCustomIsotopics"]], "armi.reactor.blueprints.tests.test_customIsotopics": [[299, 2, 1, "", "TestCustomIsotopics"], [299, 2, 1, "", "TestCustomIsotopics_ErrorConditions"], [299, 2, 1, "", "TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics": [[299, 3, 1, "", "test_customDensityLogsAndErrors"], [299, 3, 1, "", "test_densitiesAppliedToNonCustomMaterials"], [299, 3, 1, "", "test_expandedNatural"], [299, 3, 1, "", "test_massFractionsAreApplied"], [299, 3, 1, "", "test_numberDensities"], [299, 3, 1, "", "test_numberDensitiesAnchor"], [299, 3, 1, "", "test_numberFractions"], [299, 3, 1, "", "test_unmodified"], [299, 3, 1, "", "test_unrepresentedAreOnlyNatural"], [299, 4, 1, "", "yamlBadBlocks"], [299, 4, 1, "", "yamlGoodBlocks"], [299, 4, 1, "", "yamlPreamble"], [299, 4, 1, "", "yamlString"], [299, 4, 1, "", "yamlStringWithError"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions": [[299, 3, 1, "", "test_densityMustBePositive"], [299, 3, 1, "", "test_nonConformantElementName"], [299, 3, 1, "", "test_numberDensitiesCannotSpecifyDensity"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion": [[299, 3, 1, "", "test_expandedNatural"], [299, 4, 1, "", "yamlString"]], "armi.reactor.blueprints.tests.test_gridBlueprints": [[300, 2, 1, "", "TestGridBPRoundTrip"], [300, 2, 1, "", "TestGridBlueprintsSection"], [300, 2, 1, "", "TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip": [[300, 3, 1, "", "test_contents"], [300, 3, 1, "", "test_roundTrip"], [300, 3, 1, "", "test_tinyMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection": [[300, 3, 1, "", "test_simpleRead"], [300, 3, 1, "", "test_simpleReadLatticeMap"], [300, 3, 1, "", "test_simpleReadNoLatticeMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint": [[300, 3, 1, "", "test_construct"], [300, 3, 1, "", "test_geomFile"]], "armi.reactor.blueprints.tests.test_materialModifications": [[301, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications": [[301, 4, 1, "", "b4cInput"], [301, 3, 1, "", "loadB4CAssembly"], [301, 3, 1, "", "loadUZrAssembly"], [301, 3, 1, "", "test_bothU235ZrWtFracModification"], [301, 3, 1, "", "test_checkByComponentMaterialInput"], [301, 3, 1, "", "test_filterMaterialInput"], [301, 3, 1, "", "test_invalidComponentModification"], [301, 3, 1, "", "test_invalidMatModName"], [301, 3, 1, "", "test_matModsUpTheMRO"], [301, 3, 1, "", "test_materialModificationLength"], [301, 3, 1, "", "test_noMaterialModifications"], [301, 3, 1, "", "test_theoreticalDensity"], [301, 3, 1, "", "test_u235_wt_frac_byComponent_modification1"], [301, 3, 1, "", "test_u235_wt_frac_byComponent_modification2"], [301, 3, 1, "", "test_u235_wt_frac_modification"], [301, 3, 1, "", "test_zrWtFracModification"], [301, 4, 1, "", "uZrInput"]], "armi.reactor.blueprints.tests.test_reactorBlueprints": [[302, 2, 1, "", "TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints": [[302, 3, 1, "", "test_construct"], [302, 3, 1, "", "test_excoreStructure"], [302, 3, 1, "", "test_materialDataSummary"], [302, 3, 1, "", "test_simpleRead"], [302, 3, 1, "", "test_spentFuelPool"]], "armi.reactor.components": [[303, 2, 1, "", "DerivedShape"], [303, 2, 1, "", "NullComponent"], [303, 2, 1, "", "PositiveOrNegativeVolumeComponent"], [303, 2, 1, "", "UnshapedComponent"], [303, 2, 1, "", "UnshapedVolumetricComponent"], [303, 2, 1, "", "ZeroMassComponent"], [304, 0, 0, "-", "basicShapes"], [305, 0, 0, "-", "complexShapes"], [306, 0, 0, "-", "component"], [307, 0, 0, "-", "componentParameters"], [303, 1, 1, "", "factory"], [308, 0, 0, "-", "volumetricShapes"]], "armi.reactor.components.DerivedShape": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 3, 1, "", "computeVolume"], [303, 3, 1, "", "getBoundingCircleOuterDiameter"], [303, 3, 1, "", "getComponentArea"], [303, 3, 1, "", "getMaxVolume"], [303, 3, 1, "", "getVolume"], [303, 4, 1, "", "material"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.NullComponent": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 3, 1, "", "getBoundingCircleOuterDiameter"], [303, 3, 1, "", "getDimension"], [303, 4, 1, "", "material"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.PositiveOrNegativeVolumeComponent": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 4, 1, "", "material"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedComponent": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 3, 1, "", "fromComponent"], [303, 3, 1, "", "getBoundingCircleOuterDiameter"], [303, 3, 1, "", "getComponentArea"], [303, 4, 1, "", "material"], [303, 4, 1, "", "pDefs"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedVolumetricComponent": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 3, 1, "", "getComponentArea"], [303, 3, 1, "", "getComponentVolume"], [303, 4, 1, "", "is3D"], [303, 4, 1, "", "material"], [303, 4, 1, "", "paramCollectionType"], [303, 3, 1, "", "setVolume"]], "armi.reactor.components.ZeroMassComponent": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 3, 1, "", "getNumberDensity"], [303, 4, 1, "", "material"], [303, 4, 1, "", "paramCollectionType"], [303, 3, 1, "", "setNumberDensity"]], "armi.reactor.components.basicShapes": [[304, 2, 1, "", "Circle"], [304, 2, 1, "", "Hexagon"], [304, 2, 1, "", "Rectangle"], [304, 2, 1, "", "SolidRectangle"], [304, 2, 1, "", "Square"], [304, 2, 1, "", "Triangle"]], "armi.reactor.components.basicShapes.Circle": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getBoundingCircleOuterDiameter"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "is3D"], [304, 3, 1, "", "isEncapsulatedBy"], [304, 4, 1, "", "material"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Hexagon": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getBoundingCircleOuterDiameter"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 3, 1, "", "getPerimeter"], [304, 3, 1, "", "getPitchData"], [304, 4, 1, "", "is3D"], [304, 4, 1, "", "material"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Rectangle": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getBoundingCircleOuterDiameter"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 3, 1, "", "getPitchData"], [304, 4, 1, "", "is3D"], [304, 3, 1, "", "isLatticeComponent"], [304, 4, 1, "", "material"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.SolidRectangle": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "is3D"], [304, 4, 1, "", "material"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Square": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 3, 1, "", "getBoundingCircleOuterDiameter"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 3, 1, "", "getPitchData"], [304, 4, 1, "", "is3D"], [304, 4, 1, "", "material"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Triangle": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "is3D"], [304, 4, 1, "", "material"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes": [[305, 2, 1, "", "Helix"], [305, 2, 1, "", "HexHoledCircle"], [305, 2, 1, "", "HoledHexagon"], [305, 2, 1, "", "HoledRectangle"], [305, 2, 1, "", "HoledSquare"]], "armi.reactor.components.complexShapes.Helix": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "getBoundingCircleOuterDiameter"], [305, 3, 1, "", "getCircleInnerDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 4, 1, "", "is3D"], [305, 4, 1, "", "material"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HexHoledCircle": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "getCircleInnerDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 4, 1, "", "material"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledHexagon": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "getCircleInnerDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 4, 1, "", "material"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledRectangle": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "getCircleInnerDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 4, 1, "", "material"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledSquare": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "getCircleInnerDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 4, 1, "", "material"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.component": [[306, 2, 1, "", "Component"], [306, 2, 1, "", "ComponentType"], [306, 2, 1, "", "ShapedComponent"], [306, 1, 1, "", "componentTypeIsValid"]], "armi.reactor.components.component.Component": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [306, 3, 1, "", "adjustDensityForHeightExpansion"], [306, 3, 1, "", "adjustMassEnrichment"], [306, 3, 1, "", "applyMaterialMassFracsToNumberDensities"], [306, 3, 1, "", "backUp"], [306, 3, 1, "", "clearCache"], [306, 3, 1, "", "clearLinkedCache"], [306, 3, 1, "", "computeVolume"], [306, 3, 1, "", "containsSolidMaterial"], [306, 3, 1, "", "containsVoidMaterial"], [306, 3, 1, "", "density"], [306, 3, 1, "", "dimensionIsLinked"], [306, 3, 1, "", "finalizeLoadingFromDB"], [306, 5, 1, "", "gasPorosity"], [306, 3, 1, "", "getArea"], [306, 3, 1, "", "getBoundingCircleOuterDiameter"], [306, 3, 1, "", "getCircleInnerDiameter"], [306, 3, 1, "", "getComponentArea"], [306, 3, 1, "", "getComponentVolume"], [306, 3, 1, "", "getDimension"], [306, 3, 1, "", "getDimensionNamesLinkedTo"], [306, 3, 1, "", "getEnrichment"], [306, 3, 1, "", "getFuelMass"], [306, 3, 1, "", "getHeightFactor"], [306, 3, 1, "", "getIntegratedMgFlux"], [306, 3, 1, "", "getLinkedComponents"], [306, 3, 1, "", "getLumpedFissionProductCollection"], [306, 3, 1, "", "getMass"], [306, 3, 1, "", "getMassEnrichment"], [306, 3, 1, "", "getMicroSuffix"], [306, 3, 1, "", "getNuclideNumberDensities"], [306, 3, 1, "", "getNuclides"], [306, 3, 1, "", "getNumberDensity"], [306, 3, 1, "", "getPitchData"], [306, 3, 1, "", "getProperties"], [306, 3, 1, "", "getThermalExpansionFactor"], [306, 3, 1, "", "getVolume"], [306, 4, 1, "", "is3D"], [306, 3, 1, "", "iterComponents"], [306, 5, 1, "", "liquidPorosity"], [306, 4, 1, "", "material"], [306, 3, 1, "", "mergeNuclidesInto"], [306, 4, 1, "", "pDefs"], [306, 4, 1, "", "paramCollectionType"], [306, 3, 1, "", "printContents"], [306, 3, 1, "", "resolveLinkedDims"], [306, 3, 1, "", "restoreBackup"], [306, 3, 1, "", "setArea"], [306, 3, 1, "", "setDimension"], [306, 3, 1, "", "setDimensionReport"], [306, 3, 1, "", "setLink"], [306, 3, 1, "", "setLumpedFissionProducts"], [306, 3, 1, "", "setName"], [306, 3, 1, "", "setNumberDensities"], [306, 3, 1, "", "setNumberDensity"], [306, 3, 1, "", "setProperties"], [306, 3, 1, "", "setTemperature"], [306, 3, 1, "", "setVolume"], [306, 5, 1, "", "temperatureInC"], [306, 5, 1, "", "temperatureInK"], [306, 3, 1, "", "updateDims"], [306, 3, 1, "", "updateNumberDensities"]], "armi.reactor.components.component.ComponentType": [[306, 4, 1, "", "NON_DIMENSION_NAMES"], [306, 4, 1, "", "TYPES"]], "armi.reactor.components.component.ShapedComponent": [[306, 4, 1, "", "DIMENSION_NAMES"], [306, 4, 1, "", "INIT_SIGNATURE"], [306, 4, 1, "", "material"], [306, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.componentParameters": [[307, 1, 1, "", "getCircleParameterDefinitions"], [307, 1, 1, "", "getComponentParameterDefinitions"], [307, 1, 1, "", "getCubeParameterDefinitions"], [307, 1, 1, "", "getHelixParameterDefinitions"], [307, 1, 1, "", "getHexHoledCircleParameterDefinitions"], [307, 1, 1, "", "getHexagonParameterDefinitions"], [307, 1, 1, "", "getHoledHexagonParameterDefinitions"], [307, 1, 1, "", "getHoledRectangleParameterDefinitions"], [307, 1, 1, "", "getRadialSegmentParameterDefinitions"], [307, 1, 1, "", "getRectangleParameterDefinitions"], [307, 1, 1, "", "getTriangleParameterDefinitions"], [307, 1, 1, "", "getUnshapedParameterDefinitions"]], "armi.reactor.components.volumetricShapes": [[308, 2, 1, "", "Cube"], [308, 2, 1, "", "DifferentialRadialSegment"], [308, 2, 1, "", "RadialSegment"], [308, 2, 1, "", "Sphere"]], "armi.reactor.components.volumetricShapes.Cube": [[308, 4, 1, "", "DIMENSION_NAMES"], [308, 4, 1, "", "INIT_SIGNATURE"], [308, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [308, 3, 1, "", "getComponentArea"], [308, 3, 1, "", "getComponentVolume"], [308, 4, 1, "", "is3D"], [308, 4, 1, "", "material"], [308, 4, 1, "", "pDefs"], [308, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.DifferentialRadialSegment": [[308, 4, 1, "", "DIMENSION_NAMES"], [308, 4, 1, "", "INIT_SIGNATURE"], [308, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [308, 3, 1, "", "getComponentArea"], [308, 3, 1, "", "getComponentVolume"], [308, 4, 1, "", "is3D"], [308, 4, 1, "", "material"], [308, 4, 1, "", "paramCollectionType"], [308, 3, 1, "", "updateDims"]], "armi.reactor.components.volumetricShapes.RadialSegment": [[308, 4, 1, "", "DIMENSION_NAMES"], [308, 4, 1, "", "INIT_SIGNATURE"], [308, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [308, 3, 1, "", "getBoundingCircleOuterDiameter"], [308, 3, 1, "", "getComponentArea"], [308, 3, 1, "", "getComponentVolume"], [308, 4, 1, "", "is3D"], [308, 4, 1, "", "material"], [308, 4, 1, "", "pDefs"], [308, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.Sphere": [[308, 4, 1, "", "DIMENSION_NAMES"], [308, 4, 1, "", "INIT_SIGNATURE"], [308, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [308, 3, 1, "", "getBoundingCircleOuterDiameter"], [308, 3, 1, "", "getComponentArea"], [308, 3, 1, "", "getComponentVolume"], [308, 4, 1, "", "is3D"], [308, 4, 1, "", "material"], [308, 4, 1, "", "pDefs"], [308, 4, 1, "", "paramCollectionType"]], "armi.reactor.composites": [[309, 2, 1, "", "ArmiObject"], [309, 2, 1, "", "Composite"], [309, 2, 1, "", "CompositeModelType"], [309, 2, 1, "", "FlagSerializer"], [309, 2, 1, "", "StateRetainer"], [309, 1, 1, "", "gatherMaterialsByVolume"], [309, 1, 1, "", "getDominantMaterial"], [309, 1, 1, "", "getReactionRateDict"]], "armi.reactor.composites.ArmiObject": [[309, 3, 1, "", "addMass"], [309, 3, 1, "", "addMasses"], [309, 3, 1, "", "adjustMassEnrichment"], [309, 3, 1, "", "adjustMassFrac"], [309, 3, 1, "", "calcAvgParam"], [309, 3, 1, "", "calcTotalParam"], [309, 3, 1, "", "changeNDensByFactor"], [309, 3, 1, "", "clearCache"], [309, 3, 1, "", "clearNumberDensities"], [309, 3, 1, "", "constituentReport"], [309, 3, 1, "", "containsAtLeastOneChildWithFlags"], [309, 3, 1, "", "containsHeavyMetal"], [309, 3, 1, "", "containsOnlyChildrenWithFlags"], [309, 3, 1, "", "copyParamsFrom"], [309, 3, 1, "", "copyParamsToChildren"], [309, 3, 1, "", "density"], [309, 3, 1, "", "doChildrenHaveFlags"], [309, 3, 1, "", "duplicate"], [309, 3, 1, "", "expandAllElementalsToIsotopics"], [309, 3, 1, "", "expandElementalToIsotopics"], [309, 3, 1, "", "getAncestor"], [309, 3, 1, "", "getAncestorAndDistance"], [309, 3, 1, "", "getAncestorWithFlags"], [309, 3, 1, "", "getArea"], [309, 3, 1, "", "getAtomicWeight"], [309, 3, 1, "", "getAverageTempInC"], [309, 3, 1, "", "getBoundingIndices"], [309, 3, 1, "", "getChildParamValues"], [309, 3, 1, "", "getChildren"], [309, 3, 1, "", "getChildrenWithFlags"], [309, 3, 1, "", "getChildrenWithNuclides"], [309, 3, 1, "", "getComponent"], [309, 3, 1, "", "getComponentByName"], [309, 3, 1, "", "getComponentNames"], [309, 3, 1, "", "getComponents"], [309, 3, 1, "", "getComponentsOfMaterial"], [309, 3, 1, "", "getComponentsOfShape"], [309, 3, 1, "", "getDominantMaterial"], [309, 3, 1, "", "getFPMass"], [309, 3, 1, "", "getFissileMass"], [309, 3, 1, "", "getFissileMassEnrich"], [309, 3, 1, "", "getFuelMass"], [309, 3, 1, "", "getHMDens"], [309, 3, 1, "", "getHMMass"], [309, 3, 1, "", "getHMMoles"], [309, 3, 1, "", "getIntegratedMgFlux"], [309, 3, 1, "", "getLumpedFissionProductCollection"], [309, 3, 1, "", "getMass"], [309, 3, 1, "", "getMassFrac"], [309, 3, 1, "", "getMassFracs"], [309, 3, 1, "", "getMasses"], [309, 3, 1, "", "getMaxArea"], [309, 3, 1, "", "getMaxParam"], [309, 3, 1, "", "getMgFlux"], [309, 3, 1, "", "getMicroSuffix"], [309, 3, 1, "", "getMinParam"], [309, 3, 1, "", "getName"], [309, 3, 1, "", "getNuclideNumberDensities"], [309, 3, 1, "", "getNuclides"], [309, 3, 1, "", "getNumComponents"], [309, 3, 1, "", "getNumberDensities"], [309, 3, 1, "", "getNumberDensity"], [309, 3, 1, "", "getNumberOfAtoms"], [309, 3, 1, "", "getParamNames"], [309, 3, 1, "", "getParameterCollection"], [309, 3, 1, "", "getSymmetryFactor"], [309, 3, 1, "", "getTotalNDens"], [309, 3, 1, "", "getType"], [309, 3, 1, "", "getUraniumNumEnrich"], [309, 3, 1, "", "getVolume"], [309, 3, 1, "", "getVolumeFraction"], [309, 3, 1, "", "getVolumeFractions"], [309, 3, 1, "", "hasComponents"], [309, 3, 1, "", "hasFlags"], [309, 3, 1, "", "isFuel"], [309, 3, 1, "", "iterComponents"], [309, 3, 1, "", "nameContains"], [309, 4, 1, "", "pDefs"], [309, 4, 1, "", "paramCollectionType"], [309, 3, 1, "", "removeMass"], [309, 3, 1, "", "resolveLinkedDims"], [309, 3, 1, "", "setChildrenLumpedFissionProducts"], [309, 3, 1, "", "setComponentDimensionsReport"], [309, 3, 1, "", "setLumpedFissionProducts"], [309, 3, 1, "", "setMass"], [309, 3, 1, "", "setMassFrac"], [309, 3, 1, "", "setMassFracs"], [309, 3, 1, "", "setMasses"], [309, 3, 1, "", "setName"], [309, 3, 1, "", "setNumberDensities"], [309, 3, 1, "", "setNumberDensity"], [309, 3, 1, "", "setType"], [309, 3, 1, "", "updateNumberDensities"], [309, 3, 1, "", "updateParamsFrom"]], "armi.reactor.composites.Composite": [[309, 3, 1, "", "add"], [309, 3, 1, "", "append"], [309, 3, 1, "", "backUp"], [309, 3, 1, "", "extend"], [309, 3, 1, "", "getBoundingCircleOuterDiameter"], [309, 3, 1, "", "getChildren"], [309, 3, 1, "", "getChildrenOfType"], [309, 3, 1, "", "getChildrenWithFlags"], [309, 3, 1, "", "getComponents"], [309, 3, 1, "", "getIntegratedMgFlux"], [309, 3, 1, "", "getLumpedFissionProductCollection"], [309, 3, 1, "", "getLumpedFissionProductsIfNecessary"], [309, 3, 1, "", "getReactionRates"], [309, 3, 1, "", "index"], [309, 3, 1, "", "insert"], [309, 3, 1, "", "iterComponents"], [309, 3, 1, "", "moveTo"], [309, 4, 1, "", "paramCollectionType"], [309, 3, 1, "", "printContents"], [309, 3, 1, "", "remove"], [309, 3, 1, "", "removeAll"], [309, 3, 1, "", "requiresLumpedFissionProducts"], [309, 3, 1, "", "restoreBackup"], [309, 3, 1, "", "retainState"], [309, 3, 1, "", "setChildren"], [309, 3, 1, "", "sort"], [309, 3, 1, "", "syncMpiState"]], "armi.reactor.composites.CompositeModelType": [[309, 4, 1, "", "TYPES"]], "armi.reactor.composites.FlagSerializer": [[309, 3, 1, "", "pack"], [309, 3, 1, "", "unpack"], [309, 4, 1, "", "version"]], "armi.reactor.converters": [[311, 0, 0, "-", "axialExpansionChanger"], [315, 0, 0, "-", "blockConverters"], [316, 0, 0, "-", "geometryConverters"], [317, 0, 0, "-", "meshConverters"], [318, 0, 0, "-", "parameterSweeps"], [320, 0, 0, "-", "pinTypeBlockConverters"], [321, 0, 0, "-", "tests"], [328, 0, 0, "-", "uniformMesh"]], "armi.reactor.converters.axialExpansionChanger": [[312, 0, 0, "-", "assemblyAxialLinkage"], [313, 0, 0, "-", "axialExpansionChanger"], [314, 0, 0, "-", "expansionData"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage": [[312, 2, 1, "", "AssemblyAxialLinkage"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger": [[313, 2, 1, "", "AxialExpansionChanger"], [313, 1, 1, "", "getDefaultReferenceAssem"], [313, 1, 1, "", "makeAssemsAbleToSnapToUniformMesh"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger": [[313, 3, 1, "", "applyColdHeightMassIncrease"], [313, 3, 1, "", "axiallyExpandAssembly"], [313, 3, 1, "", "expandColdDimsToHot"], [313, 3, 1, "", "manageCoreMesh"], [313, 3, 1, "", "performPrescribedAxialExpansion"], [313, 3, 1, "", "performThermalAxialExpansion"], [313, 3, 1, "", "reset"], [313, 3, 1, "", "setAssembly"]], "armi.reactor.converters.axialExpansionChanger.expansionData": [[314, 2, 1, "", "ExpansionData"], [314, 1, 1, "", "getSolidComponents"]], "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData": [[314, 3, 1, "", "computeThermalExpansionFactors"], [314, 3, 1, "", "determineTargetComponent"], [314, 3, 1, "", "getExpansionFactor"], [314, 3, 1, "", "isTargetComponent"], [314, 3, 1, "", "setExpansionFactors"], [314, 3, 1, "", "updateComponentTemp"], [314, 3, 1, "", "updateComponentTempsBy1DTempField"]], "armi.reactor.converters.blockConverters": [[315, 2, 1, "", "BlockAvgToCylConverter"], [315, 2, 1, "", "BlockConverter"], [315, 2, 1, "", "ComponentMerger"], [315, 2, 1, "", "HexComponentsToCylConverter"], [315, 2, 1, "", "MultipleComponentMerger"], [315, 1, 1, "", "getOuterDiamFromIDAndArea"], [315, 1, 1, "", "radiiFromHexPitches"], [315, 1, 1, "", "radiiFromHexSides"], [315, 1, 1, "", "radiiFromRingOfRods"]], "armi.reactor.converters.blockConverters.BlockAvgToCylConverter": [[315, 3, 1, "", "convert"], [315, 3, 1, "", "plotConvertedBlock"]], "armi.reactor.converters.blockConverters.BlockConverter": [[315, 3, 1, "", "convert"], [315, 3, 1, "", "dissolveComponentIntoComponent"], [315, 3, 1, "", "restablishLinks"]], "armi.reactor.converters.blockConverters.ComponentMerger": [[315, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.HexComponentsToCylConverter": [[315, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.MultipleComponentMerger": [[315, 3, 1, "", "convert"]], "armi.reactor.converters.geometryConverters": [[316, 2, 1, "", "EdgeAssemblyChanger"], [316, 2, 1, "", "FuelAssemNumModifier"], [316, 2, 1, "", "GeometryChanger"], [316, 2, 1, "", "GeometryConverter"], [316, 2, 1, "", "HexToRZConverter"], [316, 2, 1, "", "HexToRZThetaConverter"], [316, 2, 1, "", "ThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger": [[316, 3, 1, "", "addEdgeAssemblies"], [316, 3, 1, "", "removeEdgeAssemblies"], [316, 3, 1, "", "scaleParamsRelatedToSymmetry"]], "armi.reactor.converters.geometryConverters.FuelAssemNumModifier": [[316, 3, 1, "", "addRing"], [316, 3, 1, "", "convert"], [316, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.GeometryChanger": [[316, 3, 1, "", "convert"], [316, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.HexToRZThetaConverter": [[316, 3, 1, "", "convert"], [316, 3, 1, "", "createHomogenizedRZTBlock"], [316, 3, 1, "", "plotConvertedReactor"], [316, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger": [[316, 4, 1, "", "EXPECTED_INPUT_SYMMETRY"], [316, 3, 1, "", "convert"], [316, 3, 1, "", "restorePreviousGeometry"]], "armi.reactor.converters.meshConverters": [[317, 2, 1, "", "MeshConverter"], [317, 2, 1, "", "RZThetaReactorMeshConverter"], [317, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialBins"], [317, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"], [317, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialFlags"], [317, 1, 1, "", "checkLastValueInList"], [317, 1, 1, "", "checkListBounds"], [317, 1, 1, "", "generateBins"]], "armi.reactor.converters.meshConverters.MeshConverter": [[317, 3, 1, "", "generateMesh"], [317, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter": [[317, 3, 1, "", "generateMesh"], [317, 3, 1, "", "setAxialMesh"], [317, 3, 1, "", "setRingsToConvert"], [317, 3, 1, "", "setThetaMesh"], [317, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.parameterSweeps": [[319, 0, 0, "-", "generalParameterSweepConverters"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters": [[319, 2, 1, "", "CustomModifier"], [319, 2, 1, "", "NeutronicConvergenceModifier"], [319, 2, 1, "", "ParameterSweepConverter"], [319, 2, 1, "", "SettingsModifier"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier": [[319, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier": [[319, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter": [[319, 4, 1, "", "PRIORITY"], [319, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier": [[319, 3, 1, "", "convert"]], "armi.reactor.converters.pinTypeBlockConverters": [[320, 1, 1, "", "adjustCladThicknessByID"], [320, 1, 1, "", "adjustCladThicknessByOD"], [320, 1, 1, "", "adjustSmearDensity"]], "armi.reactor.converters.tests": [[322, 0, 0, "-", "test_axialExpansionChanger"], [323, 0, 0, "-", "test_blockConverter"], [324, 0, 0, "-", "test_geometryConverters"], [325, 0, 0, "-", "test_meshConverters"], [326, 0, 0, "-", "test_pinTypeBlockConverters"], [327, 0, 0, "-", "test_uniformMesh"]], "armi.reactor.converters.tests.test_axialExpansionChanger": [[322, 2, 1, "", "AxialExpansionTestBase"], [322, 2, 1, "", "FakeMat"], [322, 2, 1, "", "FakeMatException"], [322, 2, 1, "", "Temperature"], [322, 2, 1, "", "TestAxialExpansionHeight"], [322, 2, 1, "", "TestConservation"], [322, 2, 1, "", "TestDetermineTargetComponent"], [322, 2, 1, "", "TestExceptions"], [322, 2, 1, "", "TestGetSolidComponents"], [322, 2, 1, "", "TestInputHeightsConsideredHot"], [322, 2, 1, "", "TestLinkage"], [322, 2, 1, "", "TestManageCoreMesh"], [322, 1, 1, "", "buildTestAssemblyWithFakeMaterial"], [322, 1, 1, "", "checkColdBlockHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase": [[322, 4, 1, "", "Steel_Component_Lst"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat": [[322, 3, 1, "", "linearExpansionPercent"], [322, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException": [[322, 3, 1, "", "linearExpansionPercent"], [322, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight": [[322, 3, 1, "", "test_AssemblyAxialExpansionHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation": [[322, 3, 1, "", "complexConservationTest"], [322, 3, 1, "", "expandAssemForMassConservationTest"], [322, 3, 1, "", "test_computeThermalExpansionFactors"], [322, 3, 1, "", "test_noMovementACLP"], [322, 3, 1, "", "test_prescribedExpansionContractionConservation"], [322, 3, 1, "", "test_reset"], [322, 3, 1, "", "test_targetComponentMassConservation"], [322, 3, 1, "", "test_thermalExpansionContractionConservation_complex"], [322, 3, 1, "", "test_thermalExpansionContractionConservation_simple"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent": [[322, 3, 1, "", "test_determineTargetComponent"], [322, 3, 1, "", "test_determineTargetComponentBlockWithMultipleFlags"], [322, 3, 1, "", "test_manuallySetTargetComponent"], [322, 3, 1, "", "test_specifyTargetComponent_NotFound"], [322, 3, 1, "", "test_specifyTargetComponent_singleSolid"], [322, 3, 1, "", "test_specifyTargetComponet_MultipleFound"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions": [[322, 3, 1, "", "test_AssemblyAxialExpansionException"], [322, 3, 1, "", "test_determineLinked"], [322, 3, 1, "", "test_getLinkedComponents"], [322, 3, 1, "", "test_isFuelLocked"], [322, 3, 1, "", "test_isTopDummyBlockPresent"], [322, 3, 1, "", "test_setExpansionFactors"], [322, 3, 1, "", "test_updateComponentTempsBy1DTempFieldRuntimeError"], [322, 3, 1, "", "test_updateComponentTempsBy1DTempFieldValueError"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents": [[322, 3, 1, "", "test_getSolidComponents"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot": [[322, 3, 1, "", "checkColdHeightBlockMass"], [322, 3, 1, "", "test_coldAssemblyExpansion"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage": [[322, 3, 1, "", "runTest"], [322, 3, 1, "", "test_AnnularHexOverlappingThickAnnularHex"], [322, 3, 1, "", "test_annularPinNotOverlappingWithAnnulus"], [322, 3, 1, "", "test_annularPinOverlappingWithAnnuls"], [322, 3, 1, "", "test_differentMultNotOverlapping"], [322, 3, 1, "", "test_liquids"], [322, 3, 1, "", "test_overlappingSolidPins"], [322, 3, 1, "", "test_solidPinNotOverlappingAnnulus"], [322, 3, 1, "", "test_solidPinOverlappingWithAnnulus"], [322, 3, 1, "", "test_thinAnnularPinOverlappingWithThickAnnulus"], [322, 3, 1, "", "test_unshapedComponentAndCircle"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh": [[322, 3, 1, "", "test_manageCoreMesh"]], "armi.reactor.converters.tests.test_blockConverter": [[323, 2, 1, "", "TestBlockConverter"], [323, 2, 1, "", "TestToCircles"], [323, 1, 1, "", "buildControlBlockWithLinkedNegativeAreaComponent"], [323, 1, 1, "", "buildSimpleFuelBlockNegativeArea"]], "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter": [[323, 3, 1, "", "test_build_NthRing"], [323, 3, 1, "", "test_convert"], [323, 3, 1, "", "test_convertCartesianLatticeWithFuelDriver"], [323, 3, 1, "", "test_convertHexWithFuelDriver"], [323, 3, 1, "", "test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"], [323, 3, 1, "", "test_dissolveIntoNegativeArea"], [323, 3, 1, "", "test_dissolveIntoZeroArea"], [323, 3, 1, "", "test_dissolveLinerIntoClad"], [323, 3, 1, "", "test_dissolveMultiple"], [323, 3, 1, "", "test_dissolveNegativeArea"], [323, 3, 1, "", "test_dissolveWireIntoCoolant"], [323, 3, 1, "", "test_dissolveZeroArea"]], "armi.reactor.converters.tests.test_blockConverter.TestToCircles": [[323, 3, 1, "", "test_fromHex"], [323, 3, 1, "", "test_fromRingOfRods"]], "armi.reactor.converters.tests.test_geometryConverters": [[324, 2, 1, "", "TestEdgeAssemblyChanger"], [324, 2, 1, "", "TestGeometryConverters"], [324, 2, 1, "", "TestHexToRZConverter"], [324, 2, 1, "", "TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger": [[324, 3, 1, "", "test_edgeAssemblies"]], "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters": [[324, 3, 1, "", "test_addRing"], [324, 3, 1, "", "test_getAssembliesInSector"], [324, 3, 1, "", "test_setNumberOfFuelAssems"]], "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter": [[324, 3, 1, "", "test_convert"], [324, 3, 1, "", "test_createHomogenizedRZTBlock"]], "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger": [[324, 3, 1, "", "test_growToFullCoreFromThirdCore"], [324, 3, 1, "", "test_initNewFullReactor"], [324, 3, 1, "", "test_skipGrowToFullCoreWhenAlreadyFullCore"]], "armi.reactor.converters.tests.test_meshConverters": [[325, 2, 1, "", "TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter": [[325, 3, 1, "", "test_meshByRingCompositionAxialBinsLargeCore"], [325, 3, 1, "", "test_meshByRingCompositionAxialBinsSmallCore"], [325, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesLargeCore"], [325, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesSmallCore"], [325, 3, 1, "", "test_meshByRingCompositionAxialFlagsLargeCore"], [325, 3, 1, "", "test_meshByRingCompositionAxialFlagsSmallCore"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters": [[326, 2, 1, "", "MassConservationTests"], [326, 2, 1, "", "TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests": [[326, 3, 1, "", "test_adjustSmearDensity"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters": [[326, 3, 1, "", "test_adjustCladThicknessByID"], [326, 3, 1, "", "test_adjustCladThicknessByOD"]], "armi.reactor.converters.tests.test_uniformMesh": [[327, 2, 1, "", "DummyFluxOptions"], [327, 2, 1, "", "TestAssemblyUniformMesh"], [327, 2, 1, "", "TestConverterFactory"], [327, 2, 1, "", "TestGammaUniformMesh"], [327, 2, 1, "", "TestParamConversion"], [327, 2, 1, "", "TestUniformMesh"], [327, 2, 1, "", "TestUniformMeshComponents"], [327, 2, 1, "", "TestUniformMeshGenerator"], [327, 2, 1, "", "TestUniformMeshNonUniformAssemFlags"], [327, 1, 1, "", "applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh": [[327, 3, 1, "", "test_clearAssemblyState"], [327, 3, 1, "", "test_makeAssemUniformMeshParamMappingSameMesh"], [327, 3, 1, "", "test_makeAssemWithUniformMesh"], [327, 3, 1, "", "test_makeAssemWithUniformMeshSubmesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory": [[327, 3, 1, "", "test_converterFactory"]], "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh": [[327, 3, 1, "", "test_applyStateToOriginal"], [327, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion": [[327, 3, 1, "", "test_setStateFromOverlaps"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh": [[327, 3, 1, "", "test_applyStateToOriginal"], [327, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents": [[327, 3, 1, "", "test_blueprintCopy"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator": [[327, 3, 1, "", "test_computeAverageAxialMesh"], [327, 3, 1, "", "test_filterMesh"], [327, 3, 1, "", "test_filteredTopAndBottom"], [327, 3, 1, "", "test_generateCommonMesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags": [[327, 3, 1, "", "test_reactorConversion"]], "armi.reactor.converters.uniformMesh": [[328, 2, 1, "", "GammaUniformMeshConverter"], [328, 2, 1, "", "NeutronicsUniformMeshConverter"], [328, 2, 1, "", "ParamMapper"], [328, 2, 1, "", "UniformMeshGenerator"], [328, 2, 1, "", "UniformMeshGeometryConverter"], [328, 1, 1, "", "converterFactory"], [328, 1, 1, "", "setNumberDensitiesFromOverlaps"]], "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter": [[328, 4, 1, "", "blockParamMappingCategories"], [328, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter": [[328, 4, 1, "", "blockParamMappingCategories"], [328, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.ParamMapper": [[328, 3, 1, "", "paramGetter"], [328, 3, 1, "", "paramSetter"]], "armi.reactor.converters.uniformMesh.UniformMeshGenerator": [[328, 3, 1, "", "generateCommonMesh"]], "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter": [[328, 3, 1, "", "applyStateToOriginal"], [328, 4, 1, "", "blockParamMappingCategories"], [328, 3, 1, "", "clearStateOnAssemblies"], [328, 3, 1, "", "convert"], [328, 3, 1, "", "initNewReactor"], [328, 3, 1, "", "makeAssemWithUniformMesh"], [328, 3, 1, "", "plotConvertedReactor"], [328, 4, 1, "", "reactorParamMappingCategories"], [328, 3, 1, "", "reset"], [328, 3, 1, "", "setAssemblyStateFromOverlaps"], [328, 3, 1, "", "updateReactionRates"]], "armi.reactor.cores": [[329, 2, 1, "", "Core"]], "armi.reactor.cores.Core": [[329, 3, 1, "", "add"], [329, 3, 1, "", "addMoreNodes"], [329, 3, 1, "", "buildCircularRingDictionary"], [329, 3, 1, "", "buildManualZones"], [329, 3, 1, "", "calcBlockMaxes"], [329, 3, 1, "", "countBlocksWithFlags"], [329, 3, 1, "", "countFuelAxialBlocks"], [329, 3, 1, "", "createAssemblyOfType"], [329, 3, 1, "", "createFreshFeed"], [329, 3, 1, "", "findAllAxialMeshPoints"], [329, 3, 1, "", "findAllAziMeshPoints"], [329, 3, 1, "", "findAllMeshPoints"], [329, 3, 1, "", "findAllRadMeshPoints"], [329, 3, 1, "", "findAxialMeshIndexOf"], [329, 3, 1, "", "findNeighbors"], [329, 3, 1, "", "genAssembliesAddedThisCycle"], [329, 3, 1, "", "genBlocksByLocName"], [329, 5, 1, "", "geomType"], [329, 3, 1, "", "getAllXsSuffixes"], [329, 3, 1, "", "getAssemblies"], [329, 3, 1, "", "getAssembliesInCircularRing"], [329, 3, 1, "", "getAssembliesInRing"], [329, 3, 1, "", "getAssembliesInSquareOrHexRing"], [329, 3, 1, "", "getAssembliesOfType"], [329, 3, 1, "", "getAssembliesOnSymmetryLine"], [329, 3, 1, "", "getAssembly"], [329, 3, 1, "", "getAssemblyByName"], [329, 3, 1, "", "getAssemblyPitch"], [329, 3, 1, "", "getAssemblyWithAssemNum"], [329, 3, 1, "", "getAssemblyWithStringLocation"], [329, 3, 1, "", "getAvgTemp"], [329, 3, 1, "", "getBlockByName"], [329, 3, 1, "", "getBlocks"], [329, 3, 1, "", "getBlocksByIndices"], [329, 3, 1, "", "getCoreRadius"], [329, 3, 1, "", "getFirstAssembly"], [329, 3, 1, "", "getFirstBlock"], [329, 3, 1, "", "getFirstFuelBlockAxialNode"], [329, 3, 1, "", "getFluxVector"], [329, 3, 1, "", "getFuelBottomHeight"], [329, 3, 1, "", "getLocationContents"], [329, 3, 1, "", "getMaxAssembliesInHexRing"], [329, 3, 1, "", "getMaxBlockParam"], [329, 3, 1, "", "getMaxNumPins"], [329, 3, 1, "", "getMinimumPercentFluxInFuel"], [329, 3, 1, "", "getNozzleTypes"], [329, 3, 1, "", "getNuclideCategories"], [329, 3, 1, "", "getNumAssembliesWithAllRingsFilledOut"], [329, 3, 1, "", "getNumEnergyGroups"], [329, 3, 1, "", "getNumHexRings"], [329, 3, 1, "", "getNumRings"], [329, 3, 1, "", "getScalarEvolution"], [329, 3, 1, "", "getTotalBlockParam"], [329, 3, 1, "", "growToFullCore"], [329, 5, 1, "", "isFullCore"], [329, 5, 1, "", "lib"], [329, 3, 1, "", "locateAllAssemblies"], [329, 3, 1, "", "makeLocationLookup"], [329, 3, 1, "", "normalizeInternalBookeeping"], [329, 3, 1, "", "normalizeNames"], [329, 4, 1, "", "pDefs"], [329, 4, 1, "", "paramCollectionType"], [329, 5, 1, "", "powerMultiplier"], [329, 3, 1, "", "processLoading"], [329, 5, 1, "", "r"], [329, 5, 1, "", "refAssem"], [329, 3, 1, "", "regenAssemblyLists"], [329, 3, 1, "", "removeAssembliesInRing"], [329, 3, 1, "", "removeAssembly"], [329, 3, 1, "", "saveAllFlux"], [329, 3, 1, "", "setBlockMassParams"], [329, 3, 1, "", "setMoveList"], [329, 3, 1, "", "setOptionsFromCs"], [329, 3, 1, "", "setPitchUniform"], [329, 3, 1, "", "setPowerFromDensity"], [329, 3, 1, "", "setPowerIfNecessary"], [329, 3, 1, "", "sortAssemsByRing"], [329, 3, 1, "", "summarizeNuclideCategories"], [329, 3, 1, "", "summarizeReactorStats"], [329, 5, 1, "", "symmetry"], [329, 3, 1, "", "updateAxialMesh"]], "armi.reactor.excoreStructure": [[330, 2, 1, "", "ExcoreCollection"], [330, 2, 1, "", "ExcoreStructure"]], "armi.reactor.excoreStructure.ExcoreStructure": [[330, 3, 1, "", "add"], [330, 4, 1, "", "paramCollectionType"], [330, 5, 1, "", "r"]], "armi.reactor.flags": [[331, 2, 1, "", "Flags"], [331, 7, 1, "", "InvalidFlagsError"]], "armi.reactor.flags.Flags": [[331, 4, 1, "", "A"], [331, 4, 1, "", "ACLP"], [331, 4, 1, "", "ANNULAR"], [331, 4, 1, "", "AXIAL"], [331, 4, 1, "", "B"], [331, 4, 1, "", "BATCHMASSADDITION"], [331, 4, 1, "", "BLANKET"], [331, 4, 1, "", "BOND"], [331, 4, 1, "", "BOOSTER"], [331, 4, 1, "", "C"], [331, 4, 1, "", "CLAD"], [331, 4, 1, "", "CONTROL"], [331, 4, 1, "", "COOLANT"], [331, 4, 1, "", "CORE_BARREL"], [331, 4, 1, "", "D"], [331, 4, 1, "", "DEPLETABLE"], [331, 4, 1, "", "DRIVER"], [331, 4, 1, "", "DSPACERINSIDE"], [331, 4, 1, "", "DUCT"], [331, 4, 1, "", "DUMMY"], [331, 4, 1, "", "E"], [331, 4, 1, "", "FEED"], [331, 4, 1, "", "FISSION_CHAMBER"], [331, 4, 1, "", "FUEL"], [331, 4, 1, "", "GAP"], [331, 4, 1, "", "GRID_PLATE"], [331, 4, 1, "", "GUIDE_TUBE"], [331, 4, 1, "", "HANDLING_SOCKET"], [331, 4, 1, "", "HIGH"], [331, 4, 1, "", "IGNITER"], [331, 4, 1, "", "INLET_NOZZLE"], [331, 4, 1, "", "INNER"], [331, 4, 1, "", "INTERCOOLANT"], [331, 4, 1, "", "INTERDUCTCOOLANT"], [331, 4, 1, "", "LINER"], [331, 4, 1, "", "LOAD_PAD"], [331, 4, 1, "", "LOW"], [331, 4, 1, "", "LOWER"], [331, 4, 1, "", "MATERIAL"], [331, 4, 1, "", "MEDIUM"], [331, 4, 1, "", "MIDDLE"], [331, 4, 1, "", "MODERATOR"], [331, 4, 1, "", "MOVEABLE"], [331, 4, 1, "", "MOX"], [331, 4, 1, "", "OUTER"], [331, 4, 1, "", "PIN"], [331, 4, 1, "", "PLENUM"], [331, 4, 1, "", "POISON"], [331, 4, 1, "", "PRIMARY"], [331, 4, 1, "", "RADIAL"], [331, 4, 1, "", "REFLECTOR"], [331, 4, 1, "", "SECONDARY"], [331, 4, 1, "", "SHIELD"], [331, 4, 1, "", "SHIELD_BLOCK"], [331, 4, 1, "", "SHUTDOWN"], [331, 4, 1, "", "SKID"], [331, 4, 1, "", "SLUG"], [331, 4, 1, "", "STARTER"], [331, 4, 1, "", "STRUCTURE"], [331, 4, 1, "", "TARGET"], [331, 4, 1, "", "TERTIARY"], [331, 4, 1, "", "TEST"], [331, 4, 1, "", "ULTIMATE"], [331, 4, 1, "", "UPPER"], [331, 4, 1, "", "VOID"], [331, 4, 1, "", "WIRE"], [331, 3, 1, "", "fromString"], [331, 3, 1, "", "fromStringIgnoreErrors"], [331, 3, 1, "", "toString"]], "armi.reactor.geometry": [[332, 2, 1, "", "BoundaryType"], [332, 2, 1, "", "DomainType"], [332, 2, 1, "", "GeomType"], [332, 2, 1, "", "SymmetryType"], [332, 1, 1, "", "checkValidGeomSymmetryCombo"]], "armi.reactor.geometry.BoundaryType": [[332, 4, 1, "", "NO_SYMMETRY"], [332, 4, 1, "", "PERIODIC"], [332, 4, 1, "", "REFLECTIVE"], [332, 3, 1, "", "fromAny"], [332, 3, 1, "", "fromStr"], [332, 3, 1, "", "hasSymmetry"], [332, 5, 1, "", "label"]], "armi.reactor.geometry.DomainType": [[332, 4, 1, "", "EIGHTH_CORE"], [332, 4, 1, "", "FULL_CORE"], [332, 4, 1, "", "NULL"], [332, 4, 1, "", "QUARTER_CORE"], [332, 4, 1, "", "SIXTEENTH_CORE"], [332, 4, 1, "", "THIRD_CORE"], [332, 3, 1, "", "fromAny"], [332, 3, 1, "", "fromStr"], [332, 5, 1, "", "label"], [332, 3, 1, "", "symmetryFactor"]], "armi.reactor.geometry.GeomType": [[332, 4, 1, "", "CARTESIAN"], [332, 4, 1, "", "HEX"], [332, 4, 1, "", "RZ"], [332, 4, 1, "", "RZT"], [332, 3, 1, "", "fromAny"], [332, 3, 1, "", "fromStr"], [332, 5, 1, "", "label"]], "armi.reactor.geometry.SymmetryType": [[332, 4, 1, "", "VALID_SYMMETRY"], [332, 3, 1, "", "checkValidSymmetry"], [332, 3, 1, "", "createValidSymmetryStrings"], [332, 3, 1, "", "fromAny"], [332, 3, 1, "", "fromStr"], [332, 3, 1, "", "symmetryFactor"]], "armi.reactor.grids": [[334, 0, 0, "-", "axial"], [335, 0, 0, "-", "cartesian"], [336, 0, 0, "-", "constants"], [337, 0, 0, "-", "grid"], [338, 0, 0, "-", "hexagonal"], [339, 0, 0, "-", "locations"], [333, 1, 1, "", "locatorLabelToIndices"], [340, 0, 0, "-", "structuredGrid"], [341, 0, 0, "-", "thetarz"]], "armi.reactor.grids.axial": [[334, 2, 1, "", "AxialGrid"]], "armi.reactor.grids.axial.AxialGrid": [[334, 4, 1, "", "armiObject"], [334, 3, 1, "", "fromNCells"], [334, 3, 1, "", "getIndicesFromRingAndPos"], [334, 3, 1, "", "getMinimumRings"], [334, 3, 1, "", "getPositionsInRing"], [334, 3, 1, "", "getSymmetricEquivalents"], [334, 3, 1, "", "locatorInDomain"], [334, 3, 1, "", "overlapsWhichSymmetryLine"], [334, 5, 1, "", "pitch"]], "armi.reactor.grids.cartesian": [[335, 2, 1, "", "CartesianGrid"]], "armi.reactor.grids.cartesian.CartesianGrid": [[335, 4, 1, "", "armiObject"], [335, 3, 1, "", "changePitch"], [335, 3, 1, "", "fromRectangle"], [335, 3, 1, "", "getIndicesFromRingAndPos"], [335, 3, 1, "", "getMinimumRings"], [335, 3, 1, "", "getPositionsInRing"], [335, 3, 1, "", "getRingPos"], [335, 3, 1, "", "getSymmetricEquivalents"], [335, 3, 1, "", "locatorInDomain"], [335, 3, 1, "", "overlapsWhichSymmetryLine"], [335, 5, 1, "", "pitch"]], "armi.reactor.grids.grid": [[337, 2, 1, "", "Grid"]], "armi.reactor.grids.grid.Grid": [[337, 4, 1, "", "armiObject"], [337, 3, 1, "", "backUp"], [337, 5, 1, "", "geomType"], [337, 3, 1, "", "getCellBase"], [337, 3, 1, "", "getCellTop"], [337, 3, 1, "", "getCoordinates"], [337, 3, 1, "", "getLabel"], [337, 3, 1, "", "getSymmetricEquivalents"], [337, 5, 1, "", "isAxialOnly"], [337, 3, 1, "", "items"], [337, 3, 1, "", "locatorInDomain"], [337, 3, 1, "", "overlapsWhichSymmetryLine"], [337, 3, 1, "", "reduce"], [337, 3, 1, "", "restoreBackup"], [337, 5, 1, "", "symmetry"]], "armi.reactor.grids.hexagonal": [[338, 2, 1, "", "HexGrid"]], "armi.reactor.grids.hexagonal.HexGrid": [[338, 4, 1, "", "armiObject"], [338, 3, 1, "", "changePitch"], [338, 5, 1, "", "cornersUp"], [338, 3, 1, "", "fromPitch"], [338, 3, 1, "", "generateSortedHexLocationList"], [338, 3, 1, "", "getIndicesFromRingAndPos"], [338, 3, 1, "", "getLabel"], [338, 3, 1, "", "getMinimumRings"], [338, 3, 1, "", "getNeighboringCellIndices"], [338, 3, 1, "", "getPositionsInRing"], [338, 3, 1, "", "getRingPos"], [338, 3, 1, "", "getSymmetricEquivalents"], [338, 3, 1, "", "indicesToRingPos"], [338, 3, 1, "", "isInFirstThird"], [338, 3, 1, "", "locatorInDomain"], [338, 3, 1, "", "overlapsWhichSymmetryLine"], [338, 5, 1, "", "pitch"], [338, 3, 1, "", "triangleCoords"]], "armi.reactor.grids.locations": [[339, 2, 1, "", "CoordinateLocation"], [339, 2, 1, "", "IndexLocation"], [339, 2, 1, "", "LocationBase"], [339, 2, 1, "", "MultiIndexLocation"], [339, 1, 1, "", "addingIsValid"]], "armi.reactor.grids.locations.CoordinateLocation": [[339, 3, 1, "", "getCompleteIndices"], [339, 3, 1, "", "getGlobalCellBase"], [339, 3, 1, "", "getGlobalCellTop"], [339, 3, 1, "", "getLocalCoordinates"]], "armi.reactor.grids.locations.IndexLocation": [[339, 3, 1, "", "detachedCopy"], [339, 3, 1, "", "distanceTo"], [339, 3, 1, "", "getCompleteIndices"], [339, 3, 1, "", "getGlobalCellBase"], [339, 3, 1, "", "getGlobalCellTop"], [339, 3, 1, "", "getGlobalCoordinates"], [339, 3, 1, "", "getLocalCoordinates"], [339, 3, 1, "", "getRingPos"], [339, 3, 1, "", "getSymmetricEquivalents"], [339, 5, 1, "", "indices"], [339, 5, 1, "", "parentLocation"]], "armi.reactor.grids.locations.LocationBase": [[339, 3, 1, "", "associate"], [339, 5, 1, "", "grid"], [339, 5, 1, "", "i"], [339, 5, 1, "", "indices"], [339, 5, 1, "", "j"], [339, 5, 1, "", "k"]], "armi.reactor.grids.locations.MultiIndexLocation": [[339, 3, 1, "", "append"], [339, 3, 1, "", "associate"], [339, 3, 1, "", "detachedCopy"], [339, 3, 1, "", "extend"], [339, 3, 1, "", "getCompleteIndices"], [339, 5, 1, "", "indices"], [339, 3, 1, "", "pop"]], "armi.reactor.grids.structuredGrid": [[340, 2, 1, "", "GridParameters"], [340, 2, 1, "", "StructuredGrid"]], "armi.reactor.grids.structuredGrid.GridParameters": [[340, 4, 1, "", "bounds"], [340, 4, 1, "", "geomType"], [340, 4, 1, "", "offset"], [340, 4, 1, "", "symmetry"], [340, 4, 1, "", "unitStepLimits"], [340, 4, 1, "", "unitSteps"]], "armi.reactor.grids.structuredGrid.StructuredGrid": [[340, 4, 1, "", "armiObject"], [340, 3, 1, "", "backUp"], [340, 3, 1, "", "getAboveAndBelowCellIndices"], [340, 3, 1, "", "getAllIndices"], [340, 3, 1, "", "getBounds"], [340, 3, 1, "", "getCellBase"], [340, 3, 1, "", "getCellTop"], [340, 3, 1, "", "getCoordinates"], [340, 3, 1, "", "getIndexBounds"], [340, 3, 1, "", "getIndicesFromRingAndPos"], [340, 3, 1, "", "getLocatorFromRingAndPos"], [340, 3, 1, "", "getMinimumRings"], [340, 3, 1, "", "getNeighboringCellIndices"], [340, 3, 1, "", "getPositionsInRing"], [340, 3, 1, "", "getRingPos"], [340, 5, 1, "", "isAxialOnly"], [340, 3, 1, "", "items"], [340, 5, 1, "", "offset"], [340, 5, 1, "", "pitch"], [340, 3, 1, "", "reduce"], [340, 3, 1, "", "restoreBackup"]], "armi.reactor.grids.thetarz": [[341, 2, 1, "", "ThetaRZGrid"]], "armi.reactor.grids.thetarz.ThetaRZGrid": [[341, 4, 1, "", "armiObject"], [341, 3, 1, "", "fromGeom"], [341, 3, 1, "", "getCoordinates"], [341, 3, 1, "", "getIndicesFromRingAndPos"], [341, 3, 1, "", "getMinimumRings"], [341, 3, 1, "", "getPositionsInRing"], [341, 3, 1, "", "getRingPos"], [341, 3, 1, "", "getSymmetricEquivalents"], [341, 3, 1, "", "indicesOfBounds"], [341, 3, 1, "", "locatorInDomain"], [341, 3, 1, "", "overlapsWhichSymmetryLine"], [341, 3, 1, "", "pitch"]], "armi.reactor.parameters": [[343, 0, 0, "-", "exceptions"], [344, 0, 0, "-", "parameterCollections"], [345, 0, 0, "-", "parameterDefinitions"], [342, 1, 1, "", "reset"], [346, 0, 0, "-", "resolveCollections"]], "armi.reactor.parameters.exceptions": [[343, 7, 1, "", "ParameterDefinitionError"], [343, 7, 1, "", "ParameterError"], [343, 7, 1, "", "UnknownParameterError"]], "armi.reactor.parameters.parameterCollections": [[344, 6, 1, "", "GLOBAL_SERIAL_NUM"], [344, 2, 1, "", "ParameterCollection"], [344, 1, 1, "", "applyAllParameters"], [344, 1, 1, "", "collectPluginParameters"]], "armi.reactor.parameters.parameterCollections.ParameterCollection": [[344, 3, 1, "", "applyParameters"], [344, 3, 1, "", "backUp"], [344, 3, 1, "", "get"], [344, 3, 1, "", "getSyncData"], [344, 3, 1, "", "items"], [344, 3, 1, "", "keys"], [344, 4, 1, "", "pDefs"], [344, 5, 1, "", "paramDefs"], [344, 3, 1, "", "restoreBackup"], [344, 4, 1, "", "serialNum"], [344, 3, 1, "", "update"], [344, 3, 1, "", "values"], [344, 3, 1, "", "where"]], "armi.reactor.parameters.parameterDefinitions": [[345, 2, 1, "", "Category"], [345, 2, 1, "", "NoDefault"], [345, 2, 1, "", "ParamLocation"], [345, 2, 1, "", "Parameter"], [345, 2, 1, "", "ParameterBuilder"], [345, 2, 1, "", "ParameterDefinitionCollection"], [345, 2, 1, "", "Serializer"], [345, 1, 1, "", "isNumpyArray"]], "armi.reactor.parameters.parameterDefinitions.Category": [[345, 4, 1, "", "assignInBlueprints"], [345, 4, 1, "", "cumulative"], [345, 4, 1, "", "cumulativeOverCycle"], [345, 4, 1, "", "depletion"], [345, 4, 1, "", "detailedAxialExpansion"], [345, 4, 1, "", "fluxQuantities"], [345, 4, 1, "", "gamma"], [345, 4, 1, "", "multiGroupQuantities"], [345, 4, 1, "", "neutronics"], [345, 4, 1, "", "pinQuantities"], [345, 4, 1, "", "reactivityCoefficients"], [345, 4, 1, "", "retainOnReplacement"], [345, 4, 1, "", "thermalHydraulics"]], "armi.reactor.parameters.parameterDefinitions.ParamLocation": [[345, 4, 1, "", "AVERAGE"], [345, 4, 1, "", "BOTTOM"], [345, 4, 1, "", "CENTROID"], [345, 4, 1, "", "CHILDREN"], [345, 4, 1, "", "CORNERS"], [345, 4, 1, "", "EDGES"], [345, 4, 1, "", "MAX"], [345, 4, 1, "", "TOP"], [345, 4, 1, "", "VOLUME_INTEGRATED"]], "armi.reactor.parameters.parameterDefinitions.Parameter": [[345, 4, 1, "", "assigned"], [345, 3, 1, "", "atLocation"], [345, 3, 1, "", "backUp"], [345, 4, 1, "", "categories"], [345, 4, 1, "", "collectionType"], [345, 4, 1, "", "default"], [345, 4, 1, "", "description"], [345, 4, 1, "", "fieldName"], [345, 3, 1, "", "hasCategory"], [345, 4, 1, "", "location"], [345, 4, 1, "", "name"], [345, 3, 1, "", "restoreBackup"], [345, 4, 1, "", "saveToDB"], [345, 4, 1, "", "serializer"], [345, 3, 1, "", "setter"], [345, 4, 1, "", "units"]], "armi.reactor.parameters.parameterDefinitions.ParameterBuilder": [[345, 3, 1, "", "associateParameterDefinitionCollection"], [345, 3, 1, "", "defParam"]], "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection": [[345, 3, 1, "", "add"], [345, 3, 1, "", "atLocation"], [345, 3, 1, "", "byNameAndCollectionType"], [345, 3, 1, "", "byNameAndType"], [345, 5, 1, "", "categories"], [345, 3, 1, "", "createBuilder"], [345, 3, 1, "", "extend"], [345, 3, 1, "", "forType"], [345, 3, 1, "", "inCategory"], [345, 3, 1, "", "items"], [345, 3, 1, "", "lock"], [345, 5, 1, "", "locked"], [345, 5, 1, "", "names"], [345, 3, 1, "", "resetAssignmentFlag"], [345, 3, 1, "", "setAssignmentFlag"], [345, 3, 1, "", "since"], [345, 3, 1, "", "toWriteToDB"], [345, 3, 1, "", "unchanged_since"]], "armi.reactor.parameters.parameterDefinitions.Serializer": [[345, 3, 1, "", "pack"], [345, 3, 1, "", "unpack"], [345, 4, 1, "", "version"]], "armi.reactor.parameters.resolveCollections": [[346, 2, 1, "", "ResolveParametersMeta"]], "armi.reactor.reactorParameters": [[347, 1, 1, "", "defineCoreParameters"], [347, 1, 1, "", "defineReactorParameters"], [347, 1, 1, "", "makeParametersReadOnly"]], "armi.reactor.reactors": [[348, 2, 1, "", "Reactor"], [348, 1, 1, "", "factory"], [348, 1, 1, "", "loadFromCs"]], "armi.reactor.reactors.Reactor": [[348, 3, 1, "", "add"], [348, 3, 1, "", "incrementAssemNum"], [348, 3, 1, "", "normalizeNames"], [348, 4, 1, "", "pDefs"], [348, 4, 1, "", "paramCollectionType"]], "armi.reactor.spentFuelPool": [[349, 2, 1, "", "SpentFuelPool"]], "armi.reactor.spentFuelPool.SpentFuelPool": [[349, 3, 1, "", "add"], [349, 3, 1, "", "getAssembly"], [349, 3, 1, "", "normalizeNames"], [349, 4, 1, "", "paramCollectionType"]], "armi.reactor.systemLayoutInput": [[350, 2, 1, "", "SystemLayoutInput"]], "armi.reactor.systemLayoutInput.SystemLayoutInput": [[350, 4, 1, "", "ROOT_TAG"], [350, 3, 1, "", "fromReactor"], [350, 3, 1, "", "growToFullCore"], [350, 3, 1, "", "loadFromCs"], [350, 3, 1, "", "modifyEqPaths"], [350, 3, 1, "", "readGeomFromFile"], [350, 3, 1, "", "readGeomFromStream"], [350, 3, 1, "", "toGridBlueprints"], [350, 3, 1, "", "writeGeom"]], "armi.reactor.tests": [[352, 0, 0, "-", "test_assemblies"], [353, 0, 0, "-", "test_blocks"], [354, 0, 0, "-", "test_components"], [355, 0, 0, "-", "test_composites"], [356, 0, 0, "-", "test_excoreStructures"], [357, 0, 0, "-", "test_flags"], [358, 0, 0, "-", "test_geometry"], [359, 0, 0, "-", "test_parameters"], [360, 0, 0, "-", "test_reactors"], [361, 0, 0, "-", "test_rz_reactors"], [362, 0, 0, "-", "test_zones"]], "armi.reactor.tests.test_assemblies": [[352, 2, 1, "", "AnnularFuelTestCase"], [352, 2, 1, "", "AssemblyInReactor_TestCase"], [352, 2, 1, "", "Assembly_TestCase"], [352, 2, 1, "", "MaterialInAssembly_TestCase"], [352, 1, 1, "", "buildTestAssemblies"], [352, 1, 1, "", "makeTestAssembly"]], "armi.reactor.tests.test_assemblies.AnnularFuelTestCase": [[352, 3, 1, "", "test_areaCheck"]], "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase": [[352, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"], [352, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "armi.reactor.tests.test_assemblies.Assembly_TestCase": [[352, 3, 1, "", "test_add"], [352, 3, 1, "", "test_adjustResolution"], [352, 3, 1, "", "test_append"], [352, 3, 1, "", "test_assem_block_types"], [352, 3, 1, "", "test_assem_hex_type"], [352, 3, 1, "", "test_averagePlenumTemperature"], [352, 3, 1, "", "test_calcAvgParam"], [352, 3, 1, "", "test_calcTotalParam"], [352, 3, 1, "", "test_calculateZCoords"], [352, 3, 1, "", "test_carestianCoordinates"], [352, 3, 1, "", "test_countBlocksOfType"], [352, 3, 1, "", "test_duplicate"], [352, 3, 1, "", "test_extend"], [352, 3, 1, "", "test_getAge"], [352, 3, 1, "", "test_getArea"], [352, 3, 1, "", "test_getAxialMesh"], [352, 3, 1, "", "test_getBIndexFromZIndex"], [352, 3, 1, "", "test_getBlockData"], [352, 3, 1, "", "test_getBlocks"], [352, 3, 1, "", "test_getBlocksAndZ"], [352, 3, 1, "", "test_getBlocksBetweenElevations"], [352, 3, 1, "", "test_getDim"], [352, 3, 1, "", "test_getDominantMaterial"], [352, 3, 1, "", "test_getElevationBoundariesByBlockType"], [352, 3, 1, "", "test_getElevationsMatchingParamValue"], [352, 3, 1, "", "test_getFirstBlock"], [352, 3, 1, "", "test_getFirstBlockByType"], [352, 3, 1, "", "test_getFissileMass"], [352, 3, 1, "", "test_getHeight"], [352, 3, 1, "", "test_getLocation"], [352, 3, 1, "", "test_getMass"], [352, 3, 1, "", "test_getMaxParam"], [352, 3, 1, "", "test_getName"], [352, 3, 1, "", "test_getNum"], [352, 3, 1, "", "test_getParamValuesAtZ"], [352, 3, 1, "", "test_getReactiveHeight"], [352, 3, 1, "", "test_getTotalHeight"], [352, 3, 1, "", "test_getVolume"], [352, 3, 1, "", "test_hasContinuousCoolantChannel"], [352, 3, 1, "", "test_hasFlags"], [352, 3, 1, "", "test_isOnWhichSymmetryLine"], [352, 3, 1, "", "test_iter"], [352, 3, 1, "", "test_iteration"], [352, 3, 1, "", "test_len"], [352, 3, 1, "", "test_makeAxialSnapList"], [352, 3, 1, "", "test_moveTo"], [352, 3, 1, "", "test_notesParameter"], [352, 3, 1, "", "test_pinPlenumVolume"], [352, 3, 1, "", "test_reattach"], [352, 3, 1, "", "test_reestablishBlockOrder"], [352, 3, 1, "", "test_renameBlocksAccordingToAssemblyNum"], [352, 3, 1, "", "test_rotate"], [352, 3, 1, "", "test_snapAxialMeshToReference"], [352, 3, 1, "", "test_updateFromAssembly"]], "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase": [[352, 3, 1, "", "test_UThZrMaterial"], [352, 3, 1, "", "test_sortNoLocator"]], "armi.reactor.tests.test_blocks": [[353, 2, 1, "", "BlockEnergyDepositionConstants"], [353, 2, 1, "", "BlockInputHeightsTests"], [353, 2, 1, "", "Block_TestCase"], [353, 2, 1, "", "CartesianBlock_TestCase"], [353, 2, 1, "", "EmptyBlockRotateTest"], [353, 2, 1, "", "HexBlock_TestCase"], [353, 2, 1, "", "MassConservationTests"], [353, 2, 1, "", "TestDetailedNDensUpdate"], [353, 2, 1, "", "TestNegativeVolume"], [353, 2, 1, "", "ThRZBlock_TestCase"], [353, 1, 1, "", "applyDummyData"], [353, 1, 1, "", "buildSimpleFuelBlock"], [353, 1, 1, "", "getComponentData"], [353, 1, 1, "", "loadTestBlock"]], "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants": [[353, 3, 1, "", "test_getCaptureEnergyGenerationConstants"], [353, 3, 1, "", "test_getFissionEnergyDepositionConstants"], [353, 3, 1, "", "test_getGammaEnergyDepositionConstants"], [353, 3, 1, "", "test_getNeutronEnergyDepositionConstants"], [353, 3, 1, "", "test_getTotalEnergyGenerationConstants"]], "armi.reactor.tests.test_blocks.BlockInputHeightsTests": [[353, 3, 1, "", "test_foundReactor"], [353, 3, 1, "", "test_noBlueprints"]], "armi.reactor.tests.test_blocks.Block_TestCase": [[353, 3, 1, "", "test_100_getPinPitch"], [353, 3, 1, "", "test_101_getPitch"], [353, 3, 1, "", "test_102_setPitch"], [353, 3, 1, "", "test_106_getAreaFractions"], [353, 3, 1, "", "test_27b_setBuGroup"], [353, 3, 1, "", "test_add"], [353, 3, 1, "", "test_adjustDensity"], [353, 3, 1, "", "test_adjustUEnrich"], [353, 3, 1, "", "test_breakFuelComponentsIntoIndividuals"], [353, 3, 1, "", "test_clearDensity"], [353, 3, 1, "", "test_completeInitialLoading"], [353, 3, 1, "", "test_consistentAreaWithOverlappingComponents"], [353, 3, 1, "", "test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"], [353, 3, 1, "", "test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"], [353, 3, 1, "", "test_duplicate"], [353, 3, 1, "", "test_expandAllElementalsToIsotopics"], [353, 3, 1, "", "test_expandElementalToIsotopics"], [353, 3, 1, "", "test_getComponent"], [353, 3, 1, "", "test_getComponentAreaFrac"], [353, 3, 1, "", "test_getComponentByName"], [353, 3, 1, "", "test_getComponentNames"], [353, 3, 1, "", "test_getComponents"], [353, 3, 1, "", "test_getComponentsInLinkedOrder"], [353, 3, 1, "", "test_getComponentsOfMaterial"], [353, 3, 1, "", "test_getComponentsOfShape"], [353, 3, 1, "", "test_getDimensions"], [353, 3, 1, "", "test_getFissileMassEnrich"], [353, 3, 1, "", "test_getFlowArea"], [353, 3, 1, "", "test_getFlowAreaPerPin"], [353, 3, 1, "", "test_getHMDens"], [353, 3, 1, "", "test_getHydraulicDiameter"], [353, 3, 1, "", "test_getMass"], [353, 3, 1, "", "test_getMasses"], [353, 3, 1, "", "test_getMfp"], [353, 3, 1, "", "test_getMicroSuffix"], [353, 3, 1, "", "test_getNumComponents"], [353, 3, 1, "", "test_getNumPins"], [353, 3, 1, "", "test_getNumberDensity"], [353, 3, 1, "", "test_getNumberOfAtoms"], [353, 3, 1, "", "test_getPlenumPin"], [353, 3, 1, "", "test_getPu"], [353, 3, 1, "", "test_getReactionRates"], [353, 3, 1, "", "test_getSmearDensity"], [353, 3, 1, "", "test_getSmearDensityEdgeCases"], [353, 3, 1, "", "test_getSmearDensityMultipleLiner"], [353, 3, 1, "", "test_getSortedComponentsInsideOfComponentClad"], [353, 3, 1, "", "test_getSortedComponentsInsideOfComponentDuct"], [353, 3, 1, "", "test_getTotalMass"], [353, 3, 1, "", "test_getTotalNDens"], [353, 3, 1, "", "test_getType"], [353, 3, 1, "", "test_getUraniumMassEnrich"], [353, 3, 1, "", "test_getUraniumNumEnrich"], [353, 3, 1, "", "test_getVolumeFractionWithoutParent"], [353, 3, 1, "", "test_getVolumeFractionsWithZeroHeight"], [353, 3, 1, "", "test_getWettedPerimeter"], [353, 3, 1, "", "test_getXsType"], [353, 3, 1, "", "test_hasComponents"], [353, 3, 1, "", "test_hasFlags"], [353, 3, 1, "", "test_hasPinPitch"], [353, 3, 1, "", "test_homogenizedMixture"], [353, 3, 1, "", "test_mergeWithBlock"], [353, 3, 1, "", "test_pinMgFluxes"], [353, 3, 1, "", "test_removeMass"], [353, 3, 1, "", "test_replaceBlockWithBlock"], [353, 3, 1, "", "test_rotatePins"], [353, 3, 1, "", "test_setBuLimitInfo"], [353, 3, 1, "", "test_setImportantParams"], [353, 3, 1, "", "test_setLinPowByPin"], [353, 3, 1, "", "test_setLocation"], [353, 3, 1, "", "test_setMass"], [353, 3, 1, "", "test_setNumberDensities"], [353, 3, 1, "", "test_setNumberDensity"], [353, 3, 1, "", "test_setPitch"], [353, 3, 1, "", "test_setType"], [353, 3, 1, "", "test_setZeroHeight"], [353, 3, 1, "", "test_timeNodeParams"]], "armi.reactor.tests.test_blocks.CartesianBlock_TestCase": [[353, 4, 1, "", "PITCH"], [353, 3, 1, "", "test_getCartesianGrid"], [353, 3, 1, "", "test_getHydraulicDiameter"], [353, 3, 1, "", "test_getPitchHomogeneousBlock"], [353, 3, 1, "", "test_getPitchSquare"], [353, 3, 1, "", "test_getWettedPerimeter"]], "armi.reactor.tests.test_blocks.EmptyBlockRotateTest": [[353, 3, 1, "", "test_orientation"]], "armi.reactor.tests.test_blocks.HexBlock_TestCase": [[353, 3, 1, "", "test_block_dims"], [353, 3, 1, "", "test_component_type"], [353, 3, 1, "", "test_coords"], [353, 3, 1, "", "test_getArea"], [353, 3, 1, "", "test_getDuctPitch"], [353, 3, 1, "", "test_getNumPins"], [353, 3, 1, "", "test_getPinCenterFlatToFlat"], [353, 3, 1, "", "test_getPinCoords"], [353, 3, 1, "", "test_getPitchHomogeneousBlock"], [353, 3, 1, "", "test_gridCreation"], [353, 3, 1, "", "test_gridNotCreatedMultipleMultiplicities"], [353, 3, 1, "", "test_gridNumPinsAndLocations"], [353, 3, 1, "", "test_retainState"], [353, 3, 1, "", "test_symmetryFactor"]], "armi.reactor.tests.test_blocks.MassConservationTests": [[353, 3, 1, "", "test_coldMass"], [353, 3, 1, "", "test_dimensionDuctHeatup"], [353, 3, 1, "", "test_heightExpansionDifferences"], [353, 3, 1, "", "test_massCladHeatup"], [353, 3, 1, "", "test_massConsistency"], [353, 3, 1, "", "test_massCoolHeatup"], [353, 3, 1, "", "test_massDuctHeatup"], [353, 3, 1, "", "test_massFuelHeatup"]], "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate": [[353, 3, 1, "", "test_updateDetailedNdens"]], "armi.reactor.tests.test_blocks.TestNegativeVolume": [[353, 3, 1, "", "test_negativeVolume"]], "armi.reactor.tests.test_blocks.ThRZBlock_TestCase": [[353, 3, 1, "", "test_axial"], [353, 3, 1, "", "test_getHydraulicDiameter"], [353, 3, 1, "", "test_getThetaRZGrid"], [353, 3, 1, "", "test_getWettedPerimeter"], [353, 3, 1, "", "test_radii"], [353, 3, 1, "", "test_theta"], [353, 3, 1, "", "test_verifyBlockDims"]], "armi.reactor.tests.test_components": [[354, 2, 1, "", "TestCircle"], [354, 2, 1, "", "TestComponent"], [354, 2, 1, "", "TestComponentExpansion"], [354, 2, 1, "", "TestComponentFactory"], [354, 2, 1, "", "TestCube"], [354, 2, 1, "", "TestDerivedShape"], [354, 2, 1, "", "TestDerivedShapeGetArea"], [354, 2, 1, "", "TestDifferentialRadialSegment"], [354, 2, 1, "", "TestGeneralComponents"], [354, 2, 1, "", "TestHelix"], [354, 2, 1, "", "TestHexHoledCircle"], [354, 2, 1, "", "TestHexagon"], [354, 2, 1, "", "TestHoledHexagon"], [354, 2, 1, "", "TestHoledRectangle"], [354, 2, 1, "", "TestHoledSquare"], [354, 2, 1, "", "TestMaterialAdjustments"], [354, 2, 1, "", "TestNullComponent"], [354, 2, 1, "", "TestRadialSegment"], [354, 2, 1, "", "TestRectangle"], [354, 2, 1, "", "TestShapedComponent"], [354, 2, 1, "", "TestSolidRectangle"], [354, 2, 1, "", "TestSphere"], [354, 2, 1, "", "TestSquare"], [354, 2, 1, "", "TestTriangle"], [354, 2, 1, "", "TestUnshapedComponent"]], "armi.reactor.tests.test_components.TestCircle": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_badComponentName"], [354, 3, 1, "", "test_changeNumberDensities"], [354, 3, 1, "", "test_componentInteractionsLinkingByDimensions"], [354, 3, 1, "", "test_componentInteractionsLinkingBySubtraction"], [354, 3, 1, "", "test_dimensionThermallyExpands"], [354, 3, 1, "", "test_fuelMass"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [354, 3, 1, "", "test_getCircleInnerDiameter"], [354, 3, 1, "", "test_getDimension"], [354, 3, 1, "", "test_getNumberDensities"], [354, 3, 1, "", "test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"], [354, 3, 1, "", "test_theoreticalDensitySetter"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestComponent": [[354, 4, 1, "", "componentCls"], [354, 3, 1, "", "test_initializeComponentMaterial"], [354, 3, 1, "", "test_setNumberDensities"], [354, 3, 1, "", "test_setNumberDensity"], [354, 3, 1, "", "test_solid_material"]], "armi.reactor.tests.test_components.TestComponentExpansion": [[354, 4, 1, "", "coldOuterDiameter"], [354, 3, 1, "", "componentMassIndependentOfInputTemp"], [354, 3, 1, "", "expansionConservationColdHeightDefined"], [354, 3, 1, "", "expansionConservationHotHeightDefined"], [354, 3, 1, "", "runExpansionTests"], [354, 4, 1, "", "tCold"], [354, 4, 1, "", "tHot"], [354, 4, 1, "", "tWarm"], [354, 3, 1, "", "test_B4CExpansion"], [354, 3, 1, "", "test_HT9Expansion"], [354, 3, 1, "", "test_UZrExpansion"]], "armi.reactor.tests.test_components.TestComponentFactory": [[354, 3, 1, "", "getCircleFuelDict"], [354, 3, 1, "", "getCircleVoidDict"], [354, 3, 1, "", "test_componentInitializationAndDuplication"], [354, 3, 1, "", "test_factory"], [354, 3, 1, "", "test_factoryBadShapeName"], [354, 3, 1, "", "test_invalidCoolantComponentAssignment"]], "armi.reactor.tests.test_components.TestCube": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_getVolume"], [354, 3, 1, "", "test_negativeVolume"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestDerivedShape": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 4, 1, "", "componentMaterial"], [354, 3, 1, "", "test_computeVolume"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"]], "armi.reactor.tests.test_components.TestDerivedShapeGetArea": [[354, 3, 1, "", "test_getAreaColdTrue"]], "armi.reactor.tests.test_components.TestDifferentialRadialSegment": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [354, 3, 1, "", "test_getVolume"], [354, 3, 1, "", "test_thermallyExpands"], [354, 3, 1, "", "test_updateDims"]], "armi.reactor.tests.test_components.TestGeneralComponents": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 4, 1, "", "componentMaterial"]], "armi.reactor.tests.test_components.TestHelix": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_dimensionThermallyExpands"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [354, 3, 1, "", "test_getCircleInnerDiameter"], [354, 3, 1, "", "test_thermallyExpands"], [354, 3, 1, "", "test_validParameters"]], "armi.reactor.tests.test_components.TestHexHoledCircle": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_dimensionThermallyExpands"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_getCircleInnerDiameter"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHexagon": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_dimensionThermallyExpands"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [354, 3, 1, "", "test_getCircleInnerDiameter"], [354, 3, 1, "", "test_getPerimeter"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledHexagon": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_dimensionThermallyExpands"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [354, 3, 1, "", "test_getCircleInnerDiameter"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledRectangle": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 4, 1, "", "dimsToTestExpansion"], [354, 3, 1, "", "setClassDims"], [354, 3, 1, "", "test_dimensionThermallyExpands"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [354, 3, 1, "", "test_getCircleInnerDiameter"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledSquare": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 4, 1, "", "dimsToTestExpansion"], [354, 3, 1, "", "setClassDims"], [354, 3, 1, "", "test_getCircleInnerDiameter"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestMaterialAdjustments": [[354, 3, 1, "", "test_adjustMassEnrichment"], [354, 3, 1, "", "test_adjustMassFrac_U"], [354, 3, 1, "", "test_adjustMassFrac_U235"], [354, 3, 1, "", "test_adjustMassFrac_clear_ZR"], [354, 3, 1, "", "test_adjustMassFrac_invalid"], [354, 3, 1, "", "test_adjustMassFrac_leave_same"], [354, 3, 1, "", "test_adjustMassFrac_set_ZR"], [354, 3, 1, "", "test_finalizeLoadDBAdjustsTD"], [354, 3, 1, "", "test_getEnrichment"], [354, 3, 1, "", "test_setMassFrac"], [354, 3, 1, "", "test_setMassFracOnComponentMaterial"]], "armi.reactor.tests.test_components.TestNullComponent": [[354, 4, 1, "", "componentCls"], [354, 3, 1, "", "test_cmp"], [354, 3, 1, "", "test_getDimension"], [354, 3, 1, "", "test_nonzero"]], "armi.reactor.tests.test_components.TestRadialSegment": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [354, 3, 1, "", "test_getVolume"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestRectangle": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_dimensionThermallyExpands"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [354, 3, 1, "", "test_getCircleInnerDiameter"], [354, 3, 1, "", "test_negativeArea"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestShapedComponent": [[354, 3, 1, "", "test_density"], [354, 3, 1, "", "test_densityConsistent"], [354, 3, 1, "", "test_preserveMassDuringThermalExpansion"], [354, 3, 1, "", "test_volumeAfterClearCache"]], "armi.reactor.tests.test_components.TestSolidRectangle": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_dimensionThermallyExpands"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSphere": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_getVolume"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSquare": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_dimensionThermallyExpands"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [354, 3, 1, "", "test_getCircleInnerDiameter"], [354, 3, 1, "", "test_negativeArea"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestTriangle": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 3, 1, "", "test_dimensionThermallyExpands"], [354, 3, 1, "", "test_getArea"], [354, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestUnshapedComponent": [[354, 4, 1, "", "componentCls"], [354, 4, 1, "", "componentDims"], [354, 4, 1, "", "componentMaterial"], [354, 3, 1, "", "test_component_less_than"], [354, 3, 1, "", "test_fromComponent"], [354, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [354, 3, 1, "", "test_getComponentArea"]], "armi.reactor.tests.test_composites": [[355, 2, 1, "", "DummyComposite"], [355, 2, 1, "", "DummyLeaf"], [355, 2, 1, "", "MockBP"], [355, 2, 1, "", "TestCompositePattern"], [355, 2, 1, "", "TestCompositeTree"], [355, 2, 1, "", "TestFlagSerializer"], [355, 2, 1, "", "TestGetReactionRateDict"], [355, 2, 1, "", "TestMiscMethods"], [355, 1, 1, "", "getDummyParamDefs"]], "armi.reactor.tests.test_composites.DummyComposite": [[355, 4, 1, "", "pDefs"], [355, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.DummyLeaf": [[355, 3, 1, "", "getBoundingCircleOuterDiameter"], [355, 3, 1, "", "getChildren"], [355, 3, 1, "", "getChildrenWithFlags"], [355, 3, 1, "", "iterComponents"], [355, 4, 1, "", "pDefs"], [355, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.MockBP": [[355, 4, 1, "", "activeNuclides"], [355, 4, 1, "", "allNuclidesInProblem"], [355, 4, 1, "", "customIsotopics"], [355, 4, 1, "", "elementsToExpand"], [355, 4, 1, "", "inactiveNuclides"]], "armi.reactor.tests.test_composites.TestCompositePattern": [[355, 3, 1, "", "test_areChildernOfType"], [355, 3, 1, "", "test_composite"], [355, 3, 1, "", "test_containsAtLeastOneChildOfType"], [355, 3, 1, "", "test_containsOnlyChildrenOfType"], [355, 3, 1, "", "test_expandLFPs"], [355, 3, 1, "", "test_getBoundingCirlceOuterDiameter"], [355, 3, 1, "", "test_getChildren"], [355, 3, 1, "", "test_getIntegratedMgFlux"], [355, 3, 1, "", "test_getLumpedFissionProductsIfNecessaryNullCase"], [355, 3, 1, "", "test_getName"], [355, 3, 1, "", "test_getParamNames"], [355, 3, 1, "", "test_getReactionRates"], [355, 3, 1, "", "test_hasFlags"], [355, 3, 1, "", "test_hasFlagsNoTypeSpecified"], [355, 3, 1, "", "test_hasFlagsSubstring"], [355, 3, 1, "", "test_iterComponents"], [355, 3, 1, "", "test_nameContains"], [355, 3, 1, "", "test_nucSpec"], [355, 3, 1, "", "test_requiresLumpedFissionProducts"], [355, 3, 1, "", "test_setChildrenLumpedFissionProducts"], [355, 3, 1, "", "test_sort"], [355, 3, 1, "", "test_syncParameters"], [355, 3, 1, "", "test_updateVolume"]], "armi.reactor.tests.test_composites.TestCompositeTree": [[355, 4, 1, "", "blueprintYaml"], [355, 3, 1, "", "test_constituentReport"], [355, 3, 1, "", "test_getChildrenIncludeMaterials"], [355, 3, 1, "", "test_getFPMass"], [355, 3, 1, "", "test_getFissileMass"], [355, 3, 1, "", "test_getFuelMass"], [355, 3, 1, "", "test_getHMMass"], [355, 3, 1, "", "test_getMaxParam"], [355, 3, 1, "", "test_getMinParam"], [355, 3, 1, "", "test_getNuclides"], [355, 3, 1, "", "test_ordering"], [355, 3, 1, "", "test_summing"]], "armi.reactor.tests.test_composites.TestFlagSerializer": [[355, 2, 1, "", "TestFlagsA"], [355, 2, 1, "", "TestFlagsB"], [355, 3, 1, "", "test_flagConversion"], [355, 3, 1, "", "test_flagSerialization"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA": [[355, 4, 1, "", "A"], [355, 4, 1, "", "B"], [355, 4, 1, "", "C"], [355, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB": [[355, 4, 1, "", "A"], [355, 4, 1, "", "B"], [355, 4, 1, "", "BPRIME"], [355, 4, 1, "", "C"], [355, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestGetReactionRateDict": [[355, 3, 1, "", "test_getReactionRateDict"]], "armi.reactor.tests.test_composites.TestMiscMethods": [[355, 3, 1, "", "test_containsHeavyMetal"], [355, 3, 1, "", "test_copyParamsFrom"], [355, 3, 1, "", "test_copyParamsToChildren"], [355, 3, 1, "", "test_dimensionReport"], [355, 3, 1, "", "test_getAtomicWeight"], [355, 3, 1, "", "test_getNumberDensities"], [355, 3, 1, "", "test_getNumberDensitiesWithExpandedFissionProducts"], [355, 3, 1, "", "test_setMass"]], "armi.reactor.tests.test_excoreStructures": [[356, 2, 1, "", "TestExcoreCollection"], [356, 2, 1, "", "TestExcoreStructure"], [356, 2, 1, "", "TestSpentFuelPool"]], "armi.reactor.tests.test_excoreStructures.TestExcoreCollection": [[356, 3, 1, "", "test_addLikeAttribute"], [356, 3, 1, "", "test_addLikeDict"]], "armi.reactor.tests.test_excoreStructures.TestExcoreStructure": [[356, 3, 1, "", "test_add"], [356, 3, 1, "", "test_constructor"], [356, 3, 1, "", "test_parentReactor"], [356, 3, 1, "", "test_representation"]], "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool": [[356, 3, 1, "", "test_add"], [356, 3, 1, "", "test_constructor"], [356, 3, 1, "", "test_getAssembly"], [356, 3, 1, "", "test_getNextLocation"], [356, 3, 1, "", "test_normalizeNames"], [356, 3, 1, "", "test_representation"], [356, 3, 1, "", "test_updateNumberOfColumns"]], "armi.reactor.tests.test_flags": [[357, 2, 1, "", "TestFlags"]], "armi.reactor.tests.test_flags.TestFlags": [[357, 3, 1, "", "test_convertsStringsWithNonFlags"], [357, 3, 1, "", "test_defaultIsFalse"], [357, 3, 1, "", "test_flagsDefinedWithNumbers"], [357, 3, 1, "", "test_flagsToAndFromString"], [357, 3, 1, "", "test_fromString"], [357, 3, 1, "", "test_fromStringStrict"], [357, 3, 1, "", "test_fromStringWithNumbers"], [357, 3, 1, "", "test_isPickleable"], [357, 3, 1, "", "test_lookup"], [357, 3, 1, "", "test_toStringAlphabetical"]], "armi.reactor.tests.test_geometry": [[358, 2, 1, "", "TestGeomType"], [358, 2, 1, "", "TestSymmetryType"], [358, 2, 1, "", "TestSystemLayoutInput"], [358, 2, 1, "", "TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry.TestGeomType": [[358, 3, 1, "", "test_fromStr"], [358, 3, 1, "", "test_label"], [358, 3, 1, "", "test_str"]], "armi.reactor.tests.test_geometry.TestSymmetryType": [[358, 3, 1, "", "test_SymmetryFactor"], [358, 3, 1, "", "test_baseConstructor"], [358, 3, 1, "", "test_checkValidGeomSymmetryCombo"], [358, 3, 1, "", "test_domainTypeNulls"], [358, 3, 1, "", "test_fromAny"], [358, 3, 1, "", "test_fromStr"], [358, 3, 1, "", "test_label"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInput": [[358, 3, 1, "", "test_asciimap"], [358, 3, 1, "", "test_growToFullCore"], [358, 3, 1, "", "test_readAsciimap"], [358, 3, 1, "", "test_readHexGeomXML"], [358, 3, 1, "", "test_readReactor"], [358, 3, 1, "", "test_yamlIO"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ": [[358, 3, 1, "", "test_TRZyamlIO"], [358, 3, 1, "", "test_readTRZGeomXML"]], "armi.reactor.tests.test_parameters": [[359, 2, 1, "", "MockComposite"], [359, 2, 1, "", "MockCompositeChild"], [359, 2, 1, "", "MockCompositeGrandParent"], [359, 2, 1, "", "MockCompositeParent"], [359, 2, 1, "", "ParamCollectionWhere"], [359, 2, 1, "", "ParameterTests"], [359, 2, 1, "", "TestMakeParametersReadOnly"]], "armi.reactor.tests.test_parameters.ParamCollectionWhere": [[359, 2, 1, "", "ScopeParamCollection"], [359, 3, 1, "", "test_complicated"], [359, 3, 1, "", "test_onCategory"], [359, 3, 1, "", "test_onLocation"]], "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection": [[359, 4, 1, "", "pDefs"], [359, 4, 1, "", "pb"]], "armi.reactor.tests.test_parameters.ParameterTests": [[359, 3, 1, "", "test_attemptingToSetParamWithoutSetterFails"], [359, 3, 1, "", "test_cannotCreateAttrbuteOnParameterCollectionSubclass"], [359, 3, 1, "", "test_cannotCreateInstanceOf_NoDefault"], [359, 3, 1, "", "test_cannotCreateInstanceOf_Undefined"], [359, 3, 1, "", "test_cannotDefineParameterWithSameName"], [359, 3, 1, "", "test_cannotDefineParameterWithSameNameForCollectionSubclass"], [359, 3, 1, "", "test_categories"], [359, 3, 1, "", "test_defaultLocation"], [359, 3, 1, "", "test_getWithoutDefaultRaisesParameterError"], [359, 3, 1, "", "test_mutableDefaultsNotSupported"], [359, 3, 1, "", "test_paramDefinitionsCompose"], [359, 3, 1, "", "test_paramPropertyDoesNotConflict"], [359, 3, 1, "", "test_paramPropertyDoesNotConflictWithNoneDefault"], [359, 3, 1, "", "test_parameterCollectionsHave__slots__"], [359, 3, 1, "", "test_serializer_pack_unpack"], [359, 3, 1, "", "test_setter"], [359, 3, 1, "", "test_setterGetterBasics"], [359, 3, 1, "", "test_writeSomeParamsToDB"]], "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly": [[359, 3, 1, "", "test_makeParametersReadOnly"]], "armi.reactor.tests.test_reactors": [[360, 2, 1, "", "CartesianReactorNeighborTests"], [360, 2, 1, "", "CartesianReactorTests"], [360, 2, 1, "", "HexReactorTests"], [360, 2, 1, "", "ReactorTests"], [360, 1, 1, "", "buildOperatorOfEmptyCartesianBlocks"], [360, 1, 1, "", "buildOperatorOfEmptyHexBlocks"], [360, 1, 1, "", "loadTestReactor"], [360, 1, 1, "", "reduceTestReactorRings"]], "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests": [[360, 3, 1, "", "test_findNeighborsCartesian"]], "armi.reactor.tests.test_reactors.CartesianReactorTests": [[360, 3, 1, "", "test_add"], [360, 3, 1, "", "test_getAssembliesInSquareRing"], [360, 3, 1, "", "test_getAssemblyPitch"], [360, 3, 1, "", "test_getNuclideCategoriesLogging"]], "armi.reactor.tests.test_reactors.HexReactorTests": [[360, 3, 1, "", "test_addMoreNodes"], [360, 3, 1, "", "test_addMultipleCores"], [360, 3, 1, "", "test_applyThermalExpansion_CoreConstruct"], [360, 3, 1, "", "test_buildManualZones"], [360, 3, 1, "", "test_buildManualZonesEmpty"], [360, 3, 1, "", "test_coreSfp"], [360, 3, 1, "", "test_countBlocksOfType"], [360, 3, 1, "", "test_countFuelAxialBlocks"], [360, 3, 1, "", "test_createAssemblyOfType"], [360, 3, 1, "", "test_createAssemblyOfTypeExpandedCore"], [360, 3, 1, "", "test_createFreshFeed"], [360, 3, 1, "", "test_differentNuclideModels"], [360, 3, 1, "", "test_factorySortSetting"], [360, 3, 1, "", "test_findAllAxialMeshPoints"], [360, 3, 1, "", "test_findAllAxialMeshPoints_wSubmesh"], [360, 3, 1, "", "test_findAllAziMeshPoints"], [360, 3, 1, "", "test_findAllMeshPoints"], [360, 3, 1, "", "test_findAllRadMeshPoints"], [360, 3, 1, "", "test_findAxialMeshIndexOf"], [360, 3, 1, "", "test_findNeighbors"], [360, 3, 1, "", "test_genAssembliesAddedThisCycle"], [360, 3, 1, "", "test_genBlocksByLocName"], [360, 3, 1, "", "test_geomType"], [360, 3, 1, "", "test_getAllXsSuffixes"], [360, 3, 1, "", "test_getAssembliesInCircularRing"], [360, 3, 1, "", "test_getAssembliesInHexRing"], [360, 3, 1, "", "test_getAssembliesOnSymmetryLine"], [360, 3, 1, "", "test_getAssemblyPitch"], [360, 3, 1, "", "test_getAssemblyWithLoc"], [360, 3, 1, "", "test_getAssemblyWithName"], [360, 3, 1, "", "test_getAvgTemp"], [360, 3, 1, "", "test_getBlocksByIndices"], [360, 3, 1, "", "test_getDominantMaterial"], [360, 3, 1, "", "test_getFirstFuelBlockAxialNode"], [360, 3, 1, "", "test_getFluxVector"], [360, 3, 1, "", "test_getFuelBottomHeight"], [360, 3, 1, "", "test_getGridBounds"], [360, 3, 1, "", "test_getMass"], [360, 3, 1, "", "test_getMaxAssembliesInHexRing"], [360, 3, 1, "", "test_getMaxNumPins"], [360, 3, 1, "", "test_getMinimumPercentFluxInFuel"], [360, 3, 1, "", "test_getNozzleTypes"], [360, 3, 1, "", "test_getNuclideCategories"], [360, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOut"], [360, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOutBipass"], [360, 3, 1, "", "test_getNumEnergyGroups"], [360, 3, 1, "", "test_getNumRings"], [360, 3, 1, "", "test_getReactor"], [360, 3, 1, "", "test_getScalarEvolution"], [360, 3, 1, "", "test_getSetParameters"], [360, 3, 1, "", "test_getSymmetryFactor"], [360, 3, 1, "", "test_getTotalParam"], [360, 3, 1, "", "test_growToFullCore"], [360, 3, 1, "", "test_ifMissingSpatialGrid"], [360, 3, 1, "", "test_isPickleable"], [360, 3, 1, "", "test_locations"], [360, 3, 1, "", "test_nonUniformAssems"], [360, 3, 1, "", "test_normalizeNames"], [360, 3, 1, "", "test_pinCoordsAllBlocks"], [360, 3, 1, "", "test_removeAssembliesInRing"], [360, 3, 1, "", "test_removeAssembliesInRingByCount"], [360, 3, 1, "", "test_removeAssembliesInRingHex"], [360, 3, 1, "", "test_removeAssembly"], [360, 3, 1, "", "test_removeAssemblyNoSfp"], [360, 3, 1, "", "test_restoreReactor"], [360, 3, 1, "", "test_saveAllFlux"], [360, 3, 1, "", "test_setB10VolOnCreation"], [360, 3, 1, "", "test_setPitchUniform"], [360, 3, 1, "", "test_setPowerIfNecessary"], [360, 3, 1, "", "test_sortAssemByRing"], [360, 3, 1, "", "test_sortChildren"], [360, 3, 1, "", "test_updateBlockBOLHeights_DBLoad"], [360, 3, 1, "", "test_whenNoAssemblies"]], "armi.reactor.tests.test_rz_reactors": [[361, 2, 1, "", "TestRZTReactor"], [361, 2, 1, "", "TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactor": [[361, 3, 1, "", "test_findAllMeshPoints"], [361, 3, 1, "", "test_loadRZT"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern": [[361, 3, 1, "", "test_loadRZT_reactor"]], "armi.reactor.tests.test_zones": [[362, 2, 1, "", "TestZone"], [362, 2, 1, "", "TestZones"]], "armi.reactor.tests.test_zones.TestZone": [[362, 3, 1, "", "test_addItem"], [362, 3, 1, "", "test_addItems"], [362, 3, 1, "", "test_addLoc"], [362, 3, 1, "", "test_addLocs"], [362, 3, 1, "", "test_blocks"], [362, 3, 1, "", "test_iteration"], [362, 3, 1, "", "test_removeItem"], [362, 3, 1, "", "test_removeItems"], [362, 3, 1, "", "test_removeLoc"], [362, 3, 1, "", "test_removeLocs"], [362, 3, 1, "", "test_repr"]], "armi.reactor.tests.test_zones.TestZones": [[362, 3, 1, "", "test_dictionaryInterface"], [362, 3, 1, "", "test_findZoneItIsIn"], [362, 3, 1, "", "test_getAllLocations"], [362, 3, 1, "", "test_getZoneLocations"], [362, 3, 1, "", "test_sortZones"], [362, 3, 1, "", "test_summary"]], "armi.reactor.zones": [[363, 2, 1, "", "Zone"], [363, 2, 1, "", "Zones"]], "armi.reactor.zones.Zone": [[363, 4, 1, "", "VALID_TYPES"], [363, 3, 1, "", "addItem"], [363, 3, 1, "", "addItems"], [363, 3, 1, "", "addLoc"], [363, 3, 1, "", "addLocs"], [363, 3, 1, "", "removeItem"], [363, 3, 1, "", "removeItems"], [363, 3, 1, "", "removeLoc"], [363, 3, 1, "", "removeLocs"]], "armi.reactor.zones.Zones": [[363, 3, 1, "", "addZone"], [363, 3, 1, "", "addZones"], [363, 3, 1, "", "checkDuplicates"], [363, 3, 1, "", "findZoneItIsIn"], [363, 3, 1, "", "getAllLocations"], [363, 3, 1, "", "getZoneLocations"], [363, 5, 1, "", "names"], [363, 3, 1, "", "removeZone"], [363, 3, 1, "", "removeZones"], [363, 3, 1, "", "sortZones"], [363, 3, 1, "", "summary"]], "armi.runLog": [[364, 2, 1, "", "DeduplicationFilter"], [364, 2, 1, "", "NullLogger"], [364, 2, 1, "", "RunLogger"], [364, 1, 1, "", "close"], [364, 1, 1, "", "concatenateLogs"], [364, 1, 1, "", "createLogDir"], [364, 1, 1, "", "debug"], [364, 1, 1, "", "error"], [364, 1, 1, "", "extra"], [364, 1, 1, "", "getVerbosity"], [364, 1, 1, "", "header"], [364, 1, 1, "", "important"], [364, 1, 1, "", "info"], [364, 1, 1, "", "logFactory"], [364, 1, 1, "", "raw"], [364, 1, 1, "", "setVerbosity"], [364, 1, 1, "", "warning"], [364, 1, 1, "", "warningReport"]], "armi.runLog.DeduplicationFilter": [[364, 3, 1, "", "filter"]], "armi.runLog.NullLogger": [[364, 3, 1, "", "addHandler"]], "armi.runLog.RunLogger": [[364, 4, 1, "", "FMT"], [364, 3, 1, "", "allowStopDuplicates"], [364, 3, 1, "", "close"], [364, 3, 1, "", "flush"], [364, 3, 1, "", "getDuplicatesFilter"], [364, 3, 1, "", "log"], [364, 3, 1, "", "setVerbosity"], [364, 3, 1, "", "warningReport"], [364, 3, 1, "", "write"]], "armi.settings": [[366, 0, 0, "-", "caseSettings"], [367, 0, 0, "-", "fwSettings"], [365, 1, 1, "", "isBoolSetting"], [365, 1, 1, "", "promptForSettingsFile"], [365, 1, 1, "", "recursivelyLoadSettingsFiles"], [372, 0, 0, "-", "setting"], [373, 0, 0, "-", "settingsIO"], [374, 0, 0, "-", "settingsValidation"], [375, 0, 0, "-", "tests"]], "armi.settings.caseSettings": [[366, 2, 1, "", "Settings"]], "armi.settings.caseSettings.Settings": [[366, 5, 1, "", "caseTitle"], [366, 4, 1, "", "defaultCaseTitle"], [366, 3, 1, "", "duplicate"], [366, 5, 1, "", "environmentSettings"], [366, 3, 1, "", "failOnLoad"], [366, 3, 1, "", "getSetting"], [366, 3, 1, "", "getSettingsSetByUser"], [366, 3, 1, "", "initLogVerbosity"], [366, 5, 1, "", "inputDirectory"], [366, 3, 1, "", "items"], [366, 3, 1, "", "keys"], [366, 3, 1, "", "loadFromInputFile"], [366, 3, 1, "", "loadFromString"], [366, 3, 1, "", "modified"], [366, 3, 1, "", "registerUserPlugins"], [366, 3, 1, "", "revertToDefaults"], [366, 3, 1, "", "setModuleVerbosities"], [366, 3, 1, "", "updateEnvironmentSettingsFrom"], [366, 3, 1, "", "values"], [366, 3, 1, "", "writeToYamlFile"], [366, 3, 1, "", "writeToYamlStream"]], "armi.settings.fwSettings": [[368, 0, 0, "-", "databaseSettings"], [367, 1, 1, "", "getFrameworkSettings"], [369, 0, 0, "-", "globalSettings"], [370, 0, 0, "-", "reportSettings"], [371, 0, 0, "-", "tightCouplingSettings"]], "armi.settings.fwSettings.databaseSettings": [[368, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.globalSettings": [[369, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.reportSettings": [[370, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.tightCouplingSettings": [[371, 2, 1, "", "TightCouplingSettingDef"], [371, 2, 1, "", "TightCouplingSettings"], [371, 1, 1, "", "serializeTightCouplingSettings"], [371, 1, 1, "", "tightCouplingSettingsValidator"]], "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef": [[371, 3, 1, "", "dump"]], "armi.settings.setting": [[372, 2, 1, "", "Default"], [372, 2, 1, "", "FlagListSetting"], [372, 2, 1, "", "Option"], [372, 2, 1, "", "Setting"]], "armi.settings.setting.Default": [[372, 4, 1, "", "settingName"], [372, 4, 1, "", "value"]], "armi.settings.setting.FlagListSetting": [[372, 3, 1, "", "dump"], [372, 3, 1, "", "schema"]], "armi.settings.setting.Option": [[372, 4, 1, "", "option"], [372, 4, 1, "", "settingName"]], "armi.settings.setting.Setting": [[372, 3, 1, "", "addOption"], [372, 3, 1, "", "addOptions"], [372, 3, 1, "", "changeDefault"], [372, 5, 1, "", "containedType"], [372, 5, 1, "", "default"], [372, 3, 1, "", "dump"], [372, 3, 1, "", "getCustomAttributes"], [372, 3, 1, "", "getDefaultAttributes"], [372, 3, 1, "", "isDefault"], [372, 5, 1, "", "offDefault"], [372, 3, 1, "", "revertToDefault"], [372, 3, 1, "", "setValue"], [372, 5, 1, "", "underlyingType"], [372, 5, 1, "", "value"]], "armi.settings.settingsIO": [[373, 2, 1, "", "Roots"], [373, 7, 1, "", "RunLogPromptCancel"], [373, 7, 1, "", "RunLogPromptUnresolvable"], [373, 2, 1, "", "SettingRenamer"], [373, 2, 1, "", "SettingsReader"], [373, 2, 1, "", "SettingsWriter"], [373, 1, 1, "", "prompt"]], "armi.settings.settingsIO.Roots": [[373, 4, 1, "", "CUSTOM"], [373, 4, 1, "", "VERSION"]], "armi.settings.settingsIO.SettingRenamer": [[373, 3, 1, "", "renameSetting"]], "armi.settings.settingsIO.SettingsReader": [[373, 2, 1, "", "SettingsInputFormat"], [373, 3, 1, "", "readFromFile"], [373, 3, 1, "", "readFromStream"]], "armi.settings.settingsIO.SettingsReader.SettingsInputFormat": [[373, 4, 1, "", "YAML"], [373, 3, 1, "", "fromExt"]], "armi.settings.settingsIO.SettingsWriter": [[373, 3, 1, "", "writeYaml"]], "armi.settings.settingsValidation": [[374, 2, 1, "", "Inspector"], [374, 2, 1, "", "Query"], [374, 1, 1, "", "createQueryRevertBadPathToDefault"], [374, 1, 1, "", "validateVersion"]], "armi.settings.settingsValidation.Inspector": [[374, 3, 1, "", "NO_ACTION"], [374, 3, 1, "", "addQuery"], [374, 3, 1, "", "addQueryBadLocationWillLikelyFail"], [374, 3, 1, "", "addQueryCurrentSettingMayNotSupportFeatures"], [374, 3, 1, "", "run"]], "armi.settings.settingsValidation.Query": [[374, 3, 1, "", "isCorrective"], [374, 3, 1, "", "resolve"]], "armi.settings.tests": [[376, 0, 0, "-", "test_inspectors"], [377, 0, 0, "-", "test_settings"], [378, 0, 0, "-", "test_settingsIO"]], "armi.settings.tests.test_inspectors": [[376, 2, 1, "", "TestInspector"]], "armi.settings.tests.test_inspectors.TestInspector": [[376, 3, 1, "", "test_assignCS"], [376, 3, 1, "", "test_callableCorrectionCheck"], [376, 3, 1, "", "test_changeOfCS"], [376, 3, 1, "", "test_checkForBothSimpleAndDetailedCyclesInputs"], [376, 3, 1, "", "test_correctCyclesToZeroBurnup"], [376, 3, 1, "", "test_createQueryRevertBadPathToDefault"], [376, 3, 1, "", "test_nonCorrectiveQuery"], [376, 3, 1, "", "test_overwriteSettingsCorrectiveQuery"], [376, 3, 1, "", "test_query"]], "armi.settings.tests.test_settings": [[377, 2, 1, "", "DummySettingPlugin1"], [377, 2, 1, "", "DummySettingPlugin2"], [377, 2, 1, "", "PluginAddsOptions"], [377, 2, 1, "", "TestAddingOptions"], [377, 2, 1, "", "TestFlagListSetting"], [377, 2, 1, "", "TestSettings"], [377, 2, 1, "", "TestSettings2"], [377, 2, 1, "", "TestSettingsUtils"], [377, 2, 1, "", "TestSettingsValidationUtils"]], "armi.settings.tests.test_settings.DummySettingPlugin1": [[377, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.DummySettingPlugin2": [[377, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.PluginAddsOptions": [[377, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.TestAddingOptions": [[377, 3, 1, "", "test_addingOptions"]], "armi.settings.tests.test_settings.TestFlagListSetting": [[377, 3, 1, "", "test_flagListSetting"], [377, 3, 1, "", "test_invalidFlagListTypeError"]], "armi.settings.tests.test_settings.TestSettings": [[377, 3, 1, "", "test_metaData"], [377, 3, 1, "", "test_updateEnvironmentSettingsFrom"]], "armi.settings.tests.test_settings.TestSettings2": [[377, 3, 1, "", "test_copySetting"], [377, 3, 1, "", "test_copySettingNotDefault"], [377, 3, 1, "", "test_csWorks"], [377, 3, 1, "", "test_default"], [377, 3, 1, "", "test_empty"], [377, 3, 1, "", "test_getFailures"], [377, 3, 1, "", "test_getSettingsSetByUser"], [377, 3, 1, "", "test_listCoercion"], [377, 3, 1, "", "test_listsMutable"], [377, 3, 1, "", "test_modified"], [377, 3, 1, "", "test_pluginSettings"], [377, 3, 1, "", "test_pluginValidatorsAreDiscovered"], [377, 3, 1, "", "test_schemaChecksType"], [377, 3, 1, "", "test_setModuleVerbosities"], [377, 3, 1, "", "test_settingIsOkayToGrab"], [377, 3, 1, "", "test_typeDetection"]], "armi.settings.tests.test_settings.TestSettingsUtils": [[377, 3, 1, "", "test_prompt"], [377, 3, 1, "", "test_recursiveScan"]], "armi.settings.tests.test_settings.TestSettingsValidationUtils": [[377, 3, 1, "", "test_validateVersion"]], "armi.settings.tests.test_settingsIO": [[378, 2, 1, "", "MockEntryPoint"], [378, 2, 1, "", "SettingArgsTests"], [378, 2, 1, "", "SettingsFailureTests"], [378, 2, 1, "", "SettingsReaderTests"], [378, 2, 1, "", "SettingsRenameTests"], [378, 2, 1, "", "SettingsWriterTests"]], "armi.settings.tests.test_settingsIO.MockEntryPoint": [[378, 4, 1, "", "name"], [378, 4, 1, "", "settingsArgument"]], "armi.settings.tests.test_settingsIO.SettingArgsTests": [[378, 3, 1, "", "test_cannotLoadSettingsAfterParsingCommandLineSetting"], [378, 3, 1, "", "test_commandLineSetting"]], "armi.settings.tests.test_settingsIO.SettingsFailureTests": [[378, 3, 1, "", "test_invalidFile"], [378, 3, 1, "", "test_loadFromYamlFailsOnBadNames"], [378, 3, 1, "", "test_settingsObjSetting"]], "armi.settings.tests.test_settingsIO.SettingsReaderTests": [[378, 3, 1, "", "test_basicSettingsReader"], [378, 3, 1, "", "test_readFromFile"]], "armi.settings.tests.test_settingsIO.SettingsRenameTests": [[378, 4, 1, "", "testSettings"], [378, 3, 1, "", "test_collidingRenames"], [378, 3, 1, "", "test_rename"]], "armi.settings.tests.test_settingsIO.SettingsWriterTests": [[378, 3, 1, "", "test_errorSettingsWriter"], [378, 3, 1, "", "test_writeFull"], [378, 3, 1, "", "test_writeMedium"], [378, 3, 1, "", "test_writeShort"], [378, 3, 1, "", "test_writeYaml"]], "armi.tests": [[379, 2, 1, "", "ArmiTestHelper"], [379, 2, 1, "", "Fixture"], [379, 1, 1, "", "fixture"], [379, 1, 1, "", "getEmptyCartesianReactor"], [379, 1, 1, "", "getEmptyHexReactor"], [380, 0, 0, "-", "mockRunLogs"], [379, 1, 1, "", "rebaselineTextComparisons"], [381, 0, 0, "-", "refSmallReactorShuffleLogic"], [379, 1, 1, "", "requires_fixture"], [382, 0, 0, "-", "test_apps"], [383, 0, 0, "-", "test_armiTestHelper"], [384, 0, 0, "-", "test_cartesian"], [385, 0, 0, "-", "test_context"], [386, 0, 0, "-", "test_interfaces"], [387, 0, 0, "-", "test_lwrInputs"], [388, 0, 0, "-", "test_mpiActions"], [389, 0, 0, "-", "test_mpiFeatures"], [390, 0, 0, "-", "test_mpiParameters"], [391, 0, 0, "-", "test_notebooks"], [392, 0, 0, "-", "test_plugins"], [393, 0, 0, "-", "test_runLog"], [394, 0, 0, "-", "test_tests"], [395, 0, 0, "-", "test_user_plugins"]], "armi.tests.ArmiTestHelper": [[379, 3, 1, "", "compareFilesLineByLine"], [379, 3, 1, "", "compareLines"]], "armi.tests.mockRunLogs": [[380, 2, 1, "", "BufferLog"], [380, 2, 1, "", "LogCounter"]], "armi.tests.mockRunLogs.BufferLog": [[380, 3, 1, "", "clearSingleWarnings"], [380, 3, 1, "", "emptyStdout"], [380, 3, 1, "", "getStderrValue"], [380, 3, 1, "", "getStdout"], [380, 3, 1, "", "log"]], "armi.tests.mockRunLogs.LogCounter": [[380, 3, 1, "", "log"]], "armi.tests.refSmallReactorShuffleLogic": [[381, 2, 1, "", "EquilibriumShuffler"], [381, 1, 1, "", "getFactorList"]], "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler": [[381, 3, 1, "", "chooseSwaps"]], "armi.tests.test_apps": [[382, 2, 1, "", "TestApps"], [382, 2, 1, "", "TestArmiHighLevel"], [382, 2, 1, "", "TestPlugin1"], [382, 2, 1, "", "TestPlugin2"], [382, 2, 1, "", "TestPlugin3"], [382, 2, 1, "", "TestPlugin4"]], "armi.tests.test_apps.TestApps": [[382, 3, 1, "", "test_disableFutureConfigures"], [382, 3, 1, "", "test_getParamRenames"], [382, 3, 1, "", "test_getParamRenamesInvalids"], [382, 3, 1, "", "test_getSettings"], [382, 3, 1, "", "test_isStableReleaseVersion"], [382, 3, 1, "", "test_registerPluginFlags"], [382, 3, 1, "", "test_splashText"], [382, 3, 1, "", "test_splashTextDifferentApp"], [382, 3, 1, "", "test_version"]], "armi.tests.test_apps.TestArmiHighLevel": [[382, 3, 1, "", "test_getDefaultPluginManager"], [382, 3, 1, "", "test_main"], [382, 3, 1, "", "test_overConfigured"]], "armi.tests.test_apps.TestPlugin1": [[382, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin2": [[382, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin3": [[382, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin4": [[382, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_armiTestHelper": [[383, 2, 1, "", "TestArmiTestHelper"]], "armi.tests.test_armiTestHelper.TestArmiTestHelper": [[383, 3, 1, "", "test_compareFilesFail"], [383, 3, 1, "", "test_compareFilesSucceedFalseNegative"], [383, 3, 1, "", "test_compareFilesSucess"]], "armi.tests.test_cartesian": [[384, 2, 1, "", "CartesianReactorTests"]], "armi.tests.test_cartesian.CartesianReactorTests": [[384, 3, 1, "", "test_custom"]], "armi.tests.test_context": [[385, 2, 1, "", "TestContextSerial"]], "armi.tests.test_context.TestContextSerial": [[385, 3, 1, "", "test_nonNoneData"], [385, 3, 1, "", "test_rank"]], "armi.tests.test_interfaces": [[386, 2, 1, "", "DummyInterface"], [386, 2, 1, "", "TestCodeInterface"], [386, 2, 1, "", "TestTextProcessor"], [386, 2, 1, "", "TestTightCoupler"]], "armi.tests.test_interfaces.DummyInterface": [[386, 4, 1, "", "function"], [386, 4, 1, "", "name"]], "armi.tests.test_interfaces.TestCodeInterface": [[386, 3, 1, "", "test_distributable"], [386, 3, 1, "", "test_duplicate"], [386, 3, 1, "", "test_enabled"], [386, 3, 1, "", "test_isRequestedDetailPoint"], [386, 3, 1, "", "test_nameContains"], [386, 3, 1, "", "test_preDistributeState"]], "armi.tests.test_interfaces.TestTextProcessor": [[386, 3, 1, "", "test_fsearch"], [386, 3, 1, "", "test_fsearch_text"]], "armi.tests.test_interfaces.TestTightCoupler": [[386, 3, 1, "", "test_couplerActive"], [386, 3, 1, "", "test_getListDimension"], [386, 3, 1, "", "test_isConverged"], [386, 3, 1, "", "test_isConvergedRuntimeError"], [386, 3, 1, "", "test_isConvergedValueError"], [386, 3, 1, "", "test_storePreviousIterationValue"], [386, 3, 1, "", "test_storePreviousIterationValueException"]], "armi.tests.test_lwrInputs": [[387, 2, 1, "", "C5G7ReactorTests"]], "armi.tests.test_lwrInputs.C5G7ReactorTests": [[387, 3, 1, "", "test_loadC5G7"]], "armi.tests.test_mpiActions": [[388, 2, 1, "", "MpiIterTests"], [388, 2, 1, "", "QueueActionsTests"], [388, 1, 1, "", "passer"]], "armi.tests.test_mpiActions.MpiIterTests": [[388, 3, 1, "", "test_diagnosePickleErrorTestReactor"], [388, 3, 1, "", "test_excessProcesses"], [388, 3, 1, "", "test_mpiIter"], [388, 3, 1, "", "test_parallel"], [388, 3, 1, "", "test_perfectBalancing"], [388, 3, 1, "", "test_runActionsDistributeStateAction"], [388, 3, 1, "", "test_runActionsDistributionAction"], [388, 3, 1, "", "test_serialGather"], [388, 3, 1, "", "test_typicalBalancing"]], "armi.tests.test_mpiActions.QueueActionsTests": [[388, 3, 1, "", "test_disableForExclusiveTasks"], [388, 3, 1, "", "test_makeQueue"]], "armi.tests.test_mpiFeatures": [[389, 2, 1, "", "BcastAction1"], [389, 2, 1, "", "BcastAction2"], [389, 2, 1, "", "FailingInterface1"], [389, 2, 1, "", "FailingInterface2"], [389, 2, 1, "", "FailingInterface3"], [389, 2, 1, "", "MockInterface"], [389, 2, 1, "", "MpiDistributeStateTests"], [389, 2, 1, "", "MpiOperatorTests"], [389, 2, 1, "", "MpiPathToolsTests"], [389, 2, 1, "", "TestContextMpi"]], "armi.tests.test_mpiFeatures.BcastAction1": [[389, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.BcastAction2": [[389, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.FailingInterface1": [[389, 3, 1, "", "interactEveryNode"], [389, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface2": [[389, 3, 1, "", "interactEveryNode"], [389, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface3": [[389, 3, 1, "", "fail"], [389, 3, 1, "", "interactEveryNode"], [389, 4, 1, "", "name"], [389, 3, 1, "", "workerOperate"]], "armi.tests.test_mpiFeatures.MockInterface": [[389, 3, 1, "", "interactInit"], [389, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.MpiDistributeStateTests": [[389, 3, 1, "", "test_compileResults"], [389, 3, 1, "", "test_distributeInterfaces"], [389, 3, 1, "", "test_distributeReactor"], [389, 3, 1, "", "test_distributeSettings"], [389, 3, 1, "", "test_distributeState"]], "armi.tests.test_mpiFeatures.MpiOperatorTests": [[389, 3, 1, "", "test_basicOperatorMPI"], [389, 3, 1, "", "test_finalizeInteract"], [389, 3, 1, "", "test_primaryCritical"], [389, 3, 1, "", "test_primaryException"]], "armi.tests.test_mpiFeatures.MpiPathToolsTests": [[389, 3, 1, "", "test_cleanPathMpi"]], "armi.tests.test_mpiFeatures.TestContextMpi": [[389, 3, 1, "", "test_nonNoneData"], [389, 3, 1, "", "test_rank"]], "armi.tests.test_mpiParameters": [[390, 2, 1, "", "MockSyncPC"], [390, 2, 1, "", "SynchronizationTests"], [390, 1, 1, "", "makeComp"]], "armi.tests.test_mpiParameters.MockSyncPC": [[390, 4, 1, "", "pDefs"], [390, 4, 1, "", "pb"]], "armi.tests.test_mpiParameters.SynchronizationTests": [[390, 3, 1, "", "test_conflictsMaintainWithStateRetainer"], [390, 3, 1, "", "test_noConflicts"], [390, 3, 1, "", "test_withConflicts"], [390, 3, 1, "", "test_withConflictsButSameValue"]], "armi.tests.test_notebooks": [[391, 2, 1, "", "NotebookTests"], [391, 1, 1, "", "runNotebook"]], "armi.tests.test_notebooks.NotebookTests": [[391, 3, 1, "", "test_runDataModel"], [391, 3, 1, "", "test_runParamSweep"]], "armi.tests.test_plugins": [[392, 2, 1, "", "BeforeReactorPlugin"], [392, 2, 1, "", "PluginFlags1"], [392, 2, 1, "", "SillyAxialExpansionChanger"], [392, 2, 1, "", "SillyAxialPlugin"], [392, 2, 1, "", "TestPlugin"], [392, 2, 1, "", "TestPluginBasics"], [392, 2, 1, "", "TestPluginRegistration"]], "armi.tests.test_plugins.BeforeReactorPlugin": [[392, 3, 1, "", "beforeReactorConstruction"]], "armi.tests.test_plugins.PluginFlags1": [[392, 3, 1, "", "defineFlags"]], "armi.tests.test_plugins.SillyAxialPlugin": [[392, 3, 1, "", "getAxialExpansionChanger"]], "armi.tests.test_plugins.TestPlugin": [[392, 4, 1, "", "plugin"], [392, 3, 1, "", "test_defineBlueprintsSections"], [392, 3, 1, "", "test_exposeInterfaces"]], "armi.tests.test_plugins.TestPluginBasics": [[392, 3, 1, "", "test_defineParameters"], [392, 3, 1, "", "test_exposeInterfaces"], [392, 3, 1, "", "test_pluginsExposeInterfaces"]], "armi.tests.test_plugins.TestPluginRegistration": [[392, 3, 1, "", "test_axialExpansionHook"], [392, 3, 1, "", "test_beforeReactorConstructionHook"], [392, 3, 1, "", "test_defineFlags"], [392, 3, 1, "", "test_passiveDBLoadPlugin"]], "armi.tests.test_runLog": [[393, 2, 1, "", "TestRunLog"], [393, 2, 1, "", "TestRunLogger"]], "armi.tests.test_runLog.TestRunLog": [[393, 3, 1, "", "test_callingStartLogMultipleTimes"], [393, 3, 1, "", "test_closeLogging"], [393, 3, 1, "", "test_concatenateLogs"], [393, 3, 1, "", "test_createLogDir"], [393, 3, 1, "", "test_getWhiteSpace"], [393, 3, 1, "", "test_invalidSetVerbosityByString"], [393, 3, 1, "", "test_parentRunLogging"], [393, 3, 1, "", "test_setVerbosity"], [393, 3, 1, "", "test_setVerbosityBeforeStartLog"], [393, 3, 1, "", "test_setVerbosityFromInteger"], [393, 3, 1, "", "test_setVerbosityFromString"], [393, 3, 1, "", "test_verbosityOutOfRange"], [393, 3, 1, "", "test_warningReport"], [393, 3, 1, "", "test_warningReportInvalid"]], "armi.tests.test_runLog.TestRunLogger": [[393, 3, 1, "", "test_allowStopDuplicates"], [393, 3, 1, "", "test_getDuplicatesFilter"], [393, 3, 1, "", "test_write"]], "armi.tests.test_tests": [[394, 2, 1, "", "TestCompareFiles"]], "armi.tests.test_tests.TestCompareFiles": [[394, 3, 1, "", "test_compareFileLine"]], "armi.tests.test_user_plugins": [[395, 2, 1, "", "TestUserPlugins"], [395, 2, 1, "", "UpInterface"], [395, 2, 1, "", "UserPluginBadDefineParameterRenames"], [395, 2, 1, "", "UserPluginBadDefinesSettings"], [395, 2, 1, "", "UserPluginFlags"], [395, 2, 1, "", "UserPluginFlags2"], [395, 2, 1, "", "UserPluginFlags3"], [395, 2, 1, "", "UserPluginOnProcessCoreLoading"], [395, 2, 1, "", "UserPluginWithInterface"]], "armi.tests.test_user_plugins.TestUserPlugins": [[395, 3, 1, "", "test_registerRepeatedUserPlugins"], [395, 3, 1, "", "test_registerUserPlugins"], [395, 3, 1, "", "test_registerUserPluginsAbsPath"], [395, 3, 1, "", "test_registerUserPluginsFromSettings"], [395, 3, 1, "", "test_userPluginOnProcessCoreLoading"], [395, 3, 1, "", "test_userPluginWithInterfaces"], [395, 3, 1, "", "test_userPluginsFlags"], [395, 3, 1, "", "test_validateUserPluginLimitations"]], "armi.tests.test_user_plugins.UpInterface": [[395, 3, 1, "", "interactEveryNode"], [395, 4, 1, "", "name"]], "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames": [[395, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_user_plugins.UserPluginBadDefinesSettings": [[395, 3, 1, "", "defineSettings"]], "armi.tests.test_user_plugins.UserPluginFlags": [[395, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags2": [[395, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags3": [[395, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading": [[395, 3, 1, "", "onProcessCoreLoading"]], "armi.tests.test_user_plugins.UserPluginWithInterface": [[395, 3, 1, "", "exposeInterfaces"]], "armi.utils": [[396, 2, 1, "", "MergeableDict"], [396, 2, 1, "", "MyPickler"], [397, 0, 0, "-", "asciimaps"], [396, 1, 1, "", "capStrLen"], [396, 1, 1, "", "classesInHierarchy"], [398, 0, 0, "-", "codeTiming"], [396, 1, 1, "", "copyWithoutBlocking"], [396, 1, 1, "", "createFormattedStrWithDelimiter"], [399, 0, 0, "-", "customExceptions"], [400, 0, 0, "-", "densityTools"], [401, 0, 0, "-", "directoryChangers"], [402, 0, 0, "-", "directoryChangersMpi"], [396, 1, 1, "", "doTestPickleOnAllContents2"], [403, 0, 0, "-", "dynamicImporter"], [404, 0, 0, "-", "flags"], [396, 1, 1, "", "getAvailabilityFactors"], [396, 1, 1, "", "getBurnSteps"], [396, 1, 1, "", "getCumulativeNodeNum"], [396, 1, 1, "", "getCycleLengths"], [396, 1, 1, "", "getCycleNames"], [396, 1, 1, "", "getCycleNodeFromCumulativeNode"], [396, 1, 1, "", "getCycleNodeFromCumulativeStep"], [396, 1, 1, "", "getFileSHA1Hash"], [396, 1, 1, "", "getMaxBurnSteps"], [396, 1, 1, "", "getNodesPerCycle"], [396, 1, 1, "", "getPowerFractions"], [396, 1, 1, "", "getPreviousTimeNode"], [396, 1, 1, "", "getStepLengths"], [396, 1, 1, "", "hasBurnup"], [406, 0, 0, "-", "hexagon"], [407, 0, 0, "-", "iterables"], [396, 1, 1, "", "list2str"], [408, 0, 0, "-", "mathematics"], [409, 0, 0, "-", "outputCache"], [410, 0, 0, "-", "parsing"], [411, 0, 0, "-", "pathTools"], [396, 1, 1, "", "plotMatrix"], [412, 0, 0, "-", "plotting"], [396, 1, 1, "", "prependToList"], [413, 0, 0, "-", "properties"], [414, 0, 0, "-", "reportPlotting"], [396, 1, 1, "", "safeCopy"], [396, 1, 1, "", "slantSplit"], [415, 0, 0, "-", "tabulate"], [416, 0, 0, "-", "tests"], [438, 0, 0, "-", "textProcessors"], [439, 0, 0, "-", "triangle"], [396, 1, 1, "", "tryPickleOnAllContents"], [396, 1, 1, "", "tryPickleOnAllContents3"], [440, 0, 0, "-", "units"], [396, 1, 1, "", "userName"]], "armi.utils.MergeableDict": [[396, 3, 1, "", "merge"]], "armi.utils.MyPickler": [[396, 3, 1, "", "save"]], "armi.utils.asciimaps": [[397, 2, 1, "", "AsciiMap"], [397, 2, 1, "", "AsciiMapCartesian"], [397, 2, 1, "", "AsciiMapHexFullFlatsUp"], [397, 2, 1, "", "AsciiMapHexFullTipsUp"], [397, 2, 1, "", "AsciiMapHexThirdFlatsUp"], [397, 1, 1, "", "asciiMapFromGeomAndDomain"]], "armi.utils.asciimaps.AsciiMap": [[397, 4, 1, "", "asciiLabelByIndices"], [397, 4, 1, "", "asciiLines"], [397, 4, 1, "", "asciiOffsets"], [397, 3, 1, "", "fromReactor"], [397, 3, 1, "", "gridContentsToAscii"], [397, 3, 1, "", "items"], [397, 3, 1, "", "keys"], [397, 3, 1, "", "readAscii"], [397, 3, 1, "", "writeAscii"]], "armi.utils.codeTiming": [[398, 2, 1, "", "MasterTimer"], [398, 1, 1, "", "getMasterTimer"], [398, 1, 1, "", "timed"]], "armi.utils.codeTiming.MasterTimer": [[398, 3, 1, "", "endTimer"], [398, 3, 1, "", "getActiveTimers"], [398, 3, 1, "", "getMasterTimer"], [398, 3, 1, "", "getTimer"], [398, 3, 1, "", "report"], [398, 3, 1, "", "startAll"], [398, 3, 1, "", "startTimer"], [398, 3, 1, "", "stopAll"], [398, 3, 1, "", "time"], [398, 3, 1, "", "timeline"]], "armi.utils.customExceptions": [[399, 7, 1, "", "InputError"], [399, 7, 1, "", "InvalidSettingsFileError"], [399, 7, 1, "", "InvalidSettingsStopProcess"], [399, 7, 1, "", "NonexistentSetting"], [399, 7, 1, "", "NonexistentSettingsFileError"], [399, 7, 1, "", "SettingException"], [399, 1, 1, "", "important"], [399, 1, 1, "", "info"], [399, 1, 1, "", "warn"], [399, 1, 1, "", "warn_when_root"]], "armi.utils.densityTools": [[400, 1, 1, "", "applyIsotopicsMix"], [400, 1, 1, "", "calculateMassDensity"], [400, 1, 1, "", "calculateNumberDensity"], [400, 1, 1, "", "expandElementalMassFracsToNuclides"], [400, 1, 1, "", "expandElementalNuclideMassFracs"], [400, 1, 1, "", "filterNuclideList"], [400, 1, 1, "", "formatMaterialCard"], [400, 1, 1, "", "getChemicals"], [400, 1, 1, "", "getMassFractions"], [400, 1, 1, "", "getMassInGrams"], [400, 1, 1, "", "getNDensFromMasses"], [400, 1, 1, "", "normalizeNuclideList"]], "armi.utils.directoryChangers": [[401, 2, 1, "", "DirectoryChanger"], [401, 2, 1, "", "ForcedCreationDirectoryChanger"], [401, 2, 1, "", "TemporaryDirectoryChanger"], [401, 1, 1, "", "directoryChangerFactory"]], "armi.utils.directoryChangers.DirectoryChanger": [[401, 3, 1, "", "close"], [401, 3, 1, "", "moveFiles"], [401, 3, 1, "", "open"], [401, 3, 1, "", "retrieveFiles"]], "armi.utils.directoryChangers.TemporaryDirectoryChanger": [[401, 3, 1, "", "GetRandomDirectory"]], "armi.utils.directoryChangersMpi": [[402, 2, 1, "", "MpiDirectoryChanger"]], "armi.utils.directoryChangersMpi.MpiDirectoryChanger": [[402, 3, 1, "", "close"], [402, 3, 1, "", "open"]], "armi.utils.dynamicImporter": [[403, 1, 1, "", "getEntireFamilyTree"]], "armi.utils.flags": [[404, 2, 1, "", "Flag"], [404, 2, 1, "", "auto"]], "armi.utils.flags.Flag": [[404, 3, 1, "", "extend"], [404, 3, 1, "", "fields"], [404, 3, 1, "", "from_bytes"], [404, 3, 1, "", "sortedFields"], [404, 3, 1, "", "to_bytes"], [404, 3, 1, "", "width"]], "armi.utils.hexagon": [[406, 1, 1, "", "area"], [406, 1, 1, "", "corners"], [406, 1, 1, "", "getIndexOfRotatedCell"], [406, 1, 1, "", "numPositionsInRing"], [406, 1, 1, "", "numRingsToHoldNumCells"], [406, 1, 1, "", "pitch"], [406, 1, 1, "", "side"], [406, 1, 1, "", "totalPositionsUpToRing"]], "armi.utils.iterables": [[407, 2, 1, "", "Sequence"], [407, 1, 1, "", "chunk"], [407, 1, 1, "", "flatten"], [407, 1, 1, "", "packBinaryStrings"], [407, 1, 1, "", "packHexStrings"], [407, 1, 1, "", "pivot"], [407, 1, 1, "", "split"], [407, 1, 1, "", "unpackBinaryStrings"], [407, 1, 1, "", "unpackHexStrings"]], "armi.utils.iterables.Sequence": [[407, 3, 1, "", "append"], [407, 3, 1, "", "copy"], [407, 3, 1, "", "drop"], [407, 3, 1, "", "extend"], [407, 3, 1, "", "select"], [407, 3, 1, "", "transform"]], "armi.utils.mathematics": [[408, 1, 1, "", "average1DWithinTolerance"], [408, 1, 1, "", "convertToSlice"], [408, 1, 1, "", "efmt"], [408, 1, 1, "", "expandRepeatedFloats"], [408, 1, 1, "", "findClosest"], [408, 1, 1, "", "findNearestValue"], [408, 1, 1, "", "findNearestValueAndIndex"], [408, 1, 1, "", "fixThreeDigitExp"], [408, 1, 1, "", "getFloat"], [408, 1, 1, "", "getStepsFromValues"], [408, 1, 1, "", "isMonotonic"], [408, 1, 1, "", "linearInterpolation"], [408, 1, 1, "", "minimizeScalarFunc"], [408, 1, 1, "", "newtonsMethod"], [408, 1, 1, "", "parabolaFromPoints"], [408, 1, 1, "", "parabolicInterpolation"], [408, 1, 1, "", "relErr"], [408, 1, 1, "", "resampleStepwise"], [408, 1, 1, "", "rotateXY"]], "armi.utils.outputCache": [[409, 1, 1, "", "cacheCall"], [409, 1, 1, "", "deleteCache"], [409, 1, 1, "", "retrieveOutput"], [409, 1, 1, "", "store"]], "armi.utils.parsing": [[410, 1, 1, "", "datetimeFromStr"], [410, 1, 1, "", "parseValue"], [410, 1, 1, "", "tryLiteralEval"]], "armi.utils.pathTools": [[411, 1, 1, "", "armiAbsPath"], [411, 1, 1, "", "cleanPath"], [411, 1, 1, "", "copyOrWarn"], [411, 1, 1, "", "importCustomPyModule"], [411, 1, 1, "", "isAccessible"], [411, 1, 1, "", "isFilePathNewer"], [411, 1, 1, "", "moduleAndAttributeExist"], [411, 1, 1, "", "separateModuleAndAttribute"]], "armi.utils.plotting": [[412, 2, 1, "", "DepthSlider"], [412, 1, 1, "", "close"], [412, 1, 1, "", "colorGenerator"], [412, 1, 1, "", "makeHistogram"], [412, 1, 1, "", "plotAssemblyTypes"], [412, 1, 1, "", "plotBlockDepthMap"], [412, 1, 1, "", "plotBlockDiagram"], [412, 1, 1, "", "plotBlockFlux"], [412, 1, 1, "", "plotFaceMap"], [412, 1, 1, "", "plotNucXs"]], "armi.utils.plotting.DepthSlider": [[412, 3, 1, "", "next"], [412, 3, 1, "", "previous"], [412, 3, 1, "", "set_val"], [412, 3, 1, "", "updatePageDepthColor"]], "armi.utils.properties": [[413, 7, 1, "", "ImmutablePropertyError"], [413, 1, 1, "", "areEqual"], [413, 1, 1, "", "createImmutableProperty"], [413, 1, 1, "", "lockImmutableProperties"], [413, 1, 1, "", "numpyHackForEqual"], [413, 1, 1, "", "unlockImmutableProperties"]], "armi.utils.reportPlotting": [[414, 1, 1, "", "buVsTime"], [414, 1, 1, "", "createPlotMetaData"], [414, 1, 1, "", "keffVsTime"], [414, 1, 1, "", "movesVsCycle"], [414, 1, 1, "", "plotAxialProfile"], [414, 1, 1, "", "plotCoreOverviewRadar"], [414, 1, 1, "", "plotReactorPerformance"], [414, 1, 1, "", "valueVsTime"], [414, 1, 1, "", "xsHistoryVsTime"]], "armi.utils.tabulate": [[415, 2, 1, "", "DataRow"], [415, 2, 1, "", "Iterable"], [415, 2, 1, "", "Line"], [415, 2, 1, "", "Sized"], [415, 2, 1, "", "TableFormat"], [415, 2, 1, "", "TextWrapper"], [415, 2, 1, "", "chain"], [415, 1, 1, "", "namedtuple"], [415, 2, 1, "", "partial"], [415, 1, 1, "", "reduce"], [415, 1, 1, "", "tabulate"], [415, 2, 1, "", "zip_longest"]], "armi.utils.tabulate.DataRow": [[415, 4, 1, "", "begin"], [415, 4, 1, "", "end"], [415, 4, 1, "", "sep"]], "armi.utils.tabulate.Line": [[415, 4, 1, "", "begin"], [415, 4, 1, "", "end"], [415, 4, 1, "", "hline"], [415, 4, 1, "", "sep"]], "armi.utils.tabulate.TableFormat": [[415, 4, 1, "", "datarow"], [415, 4, 1, "", "headerrow"], [415, 4, 1, "", "lineabove"], [415, 4, 1, "", "linebelow"], [415, 4, 1, "", "linebelowheader"], [415, 4, 1, "", "linebetweenrows"], [415, 4, 1, "", "padding"], [415, 4, 1, "", "withHeaderHide"]], "armi.utils.tabulate.TextWrapper": [[415, 3, 1, "", "fill"], [415, 4, 1, "", "sentence_end_re"], [415, 4, 1, "", "unicode_whitespace_trans"], [415, 4, 1, "", "uspace"], [415, 4, 1, "", "wordsep_re"], [415, 4, 1, "", "wordsep_simple_re"], [415, 3, 1, "", "wrap"], [415, 4, 1, "", "x"]], "armi.utils.tabulate.chain": [[415, 3, 1, "", "from_iterable"]], "armi.utils.tabulate.partial": [[415, 4, 1, "", "args"], [415, 4, 1, "", "func"], [415, 4, 1, "", "keywords"]], "armi.utils.tests": [[417, 0, 0, "-", "test_asciimaps"], [418, 0, 0, "-", "test_codeTiming"], [419, 0, 0, "-", "test_custom_exceptions"], [420, 0, 0, "-", "test_densityTools"], [421, 0, 0, "-", "test_directoryChangers"], [422, 0, 0, "-", "test_directoryChangersMpi"], [423, 0, 0, "-", "test_flags"], [424, 0, 0, "-", "test_hexagon"], [425, 0, 0, "-", "test_iterables"], [426, 0, 0, "-", "test_mathematics"], [427, 0, 0, "-", "test_outputCache"], [428, 0, 0, "-", "test_parsing"], [429, 0, 0, "-", "test_pathTools"], [430, 0, 0, "-", "test_plotting"], [431, 0, 0, "-", "test_properties"], [432, 0, 0, "-", "test_reportPlotting"], [433, 0, 0, "-", "test_tabulate"], [434, 0, 0, "-", "test_textProcessors"], [435, 0, 0, "-", "test_triangle"], [436, 0, 0, "-", "test_units"], [437, 0, 0, "-", "test_utils"]], "armi.utils.tests.test_asciimaps": [[417, 2, 1, "", "TestAsciiMaps"]], "armi.utils.tests.test_asciimaps.TestAsciiMaps": [[417, 3, 1, "", "test_cartesian"], [417, 3, 1, "", "test_flatHexBases"], [417, 3, 1, "", "test_hexFullCornersUp"], [417, 3, 1, "", "test_hexFullCornersUpSpotCheck"], [417, 3, 1, "", "test_hexFullFlat"], [417, 3, 1, "", "test_hexFullFlatsUp"], [417, 3, 1, "", "test_hexSmallFlat"], [417, 3, 1, "", "test_hexThird"], [417, 3, 1, "", "test_hexWithEmptyRow"], [417, 3, 1, "", "test_hexWithHoles"], [417, 3, 1, "", "test_troublesomeHexThird"]], "armi.utils.tests.test_codeTiming": [[418, 2, 1, "", "CodeTimingTest"]], "armi.utils.tests.test_codeTiming.CodeTimingTest": [[418, 3, 1, "", "test_alternate_usages"], [418, 3, 1, "", "test_master"], [418, 3, 1, "", "test_messy_starts_and_stops"], [418, 3, 1, "", "test_method_definitions"], [418, 3, 1, "", "test_property_access"]], "armi.utils.tests.test_custom_exceptions": [[419, 2, 1, "", "CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions.CustomExceptionTests": [[419, 3, 1, "", "exampleImportantMessage"], [419, 3, 1, "", "exampleInfoMessage"], [419, 3, 1, "", "exampleWarnMessage"], [419, 3, 1, "", "exampleWarnWhenRootMessage"], [419, 3, 1, "", "test_important_decorator"], [419, 3, 1, "", "test_info_decorator"], [419, 3, 1, "", "test_warn_decorator"], [419, 3, 1, "", "test_warn_when_root_decorator"]], "armi.utils.tests.test_densityTools": [[420, 2, 1, "", "TestDensityTools"], [420, 2, 1, "", "UraniumOxide"]], "armi.utils.tests.test_densityTools.TestDensityTools": [[420, 3, 1, "", "test_applyIsotopicsMix"], [420, 3, 1, "", "test_calculateNumberDensity"], [420, 3, 1, "", "test_expandElement"], [420, 3, 1, "", "test_expandElementalMassFracsToNuclides"], [420, 3, 1, "", "test_expandElementalZeroMassFrac"], [420, 3, 1, "", "test_formatMaterialCard"], [420, 3, 1, "", "test_getChemicals"], [420, 3, 1, "", "test_getMassFractions"], [420, 3, 1, "", "test_getMassInGrams"], [420, 3, 1, "", "test_getNDensFromMasses"], [420, 3, 1, "", "test_normalizeNuclideList"]], "armi.utils.tests.test_densityTools.UraniumOxide": [[420, 3, 1, "", "density"], [420, 3, 1, "", "pseudoDensity"]], "armi.utils.tests.test_directoryChangers": [[421, 7, 1, "", "ExpectedException"], [421, 2, 1, "", "TestDirectoryChangers"]], "armi.utils.tests.test_directoryChangers.TestDirectoryChangers": [[421, 3, 1, "", "test_change_to_nonexisting_fails"], [421, 3, 1, "", "test_change_to_nonexisting_works_forced"], [421, 3, 1, "", "test_exception"], [421, 3, 1, "", "test_exception_disabled"], [421, 3, 1, "", "test_file_retrieval"], [421, 3, 1, "", "test_file_retrieval_missing_file"], [421, 3, 1, "", "test_mpiAction"], [421, 3, 1, "", "test_mpiActionFailsOnNonexistentPath"], [421, 3, 1, "", "test_temporary_cleans"]], "armi.utils.tests.test_directoryChangersMpi": [[422, 2, 1, "", "RevealYourDirectory"], [422, 2, 1, "", "TestMPI"]], "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory": [[422, 3, 1, "", "invokeHook"]], "armi.utils.tests.test_directoryChangersMpi.TestMPI": [[422, 3, 1, "", "test_MpiDirectoryChanger"]], "armi.utils.tests.test_flags": [[423, 2, 1, "", "ExampleFlag"], [423, 2, 1, "", "TestFlag"]], "armi.utils.tests.test_flags.ExampleFlag": [[423, 4, 1, "", "BAR"], [423, 4, 1, "", "BAZ"], [423, 4, 1, "", "FOO"]], "armi.utils.tests.test_flags.TestFlag": [[423, 3, 1, "", "test_auto"], [423, 3, 1, "", "test_bitwise"], [423, 3, 1, "", "test_bool"], [423, 3, 1, "", "test_collision_creation"], [423, 3, 1, "", "test_collision_extension"], [423, 3, 1, "", "test_extend"], [423, 3, 1, "", "test_getitem"], [423, 3, 1, "", "test_hashable"], [423, 3, 1, "", "test_inclusion"], [423, 3, 1, "", "test_iteration"]], "armi.utils.tests.test_hexagon": [[424, 2, 1, "", "TestHexagon"]], "armi.utils.tests.test_hexagon.TestHexagon": [[424, 4, 1, "", "N_FUZZY_DRAWS"], [424, 3, 1, "", "test_hexagon_area"], [424, 3, 1, "", "test_indexWithNoRotation"], [424, 3, 1, "", "test_numPositionsInRing"], [424, 3, 1, "", "test_positionsUpToRing"], [424, 3, 1, "", "test_rotateFuzzy"], [424, 3, 1, "", "test_rotatedCellCenter"], [424, 3, 1, "", "test_rotatedCellIndexErrors"], [424, 3, 1, "", "test_rotatedCellOrientationErrors"], [424, 3, 1, "", "test_rotatedFirstRing"]], "armi.utils.tests.test_iterables": [[425, 2, 1, "", "TestIterables"]], "armi.utils.tests.test_iterables.TestIterables": [[425, 3, 1, "", "test_addingSequences"], [425, 3, 1, "", "test_appendSequence"], [425, 3, 1, "", "test_arrayPivot"], [425, 3, 1, "", "test_chunk"], [425, 3, 1, "", "test_copySequence"], [425, 3, 1, "", "test_extendSequence"], [425, 3, 1, "", "test_flatten"], [425, 3, 1, "", "test_listPivot"], [425, 3, 1, "", "test_packingAndUnpackingBinaryStrings"], [425, 3, 1, "", "test_packingAndUnpackingHexStrings"], [425, 3, 1, "", "test_sequence"], [425, 3, 1, "", "test_sequenceInit"], [425, 3, 1, "", "test_split"]], "armi.utils.tests.test_mathematics": [[426, 2, 1, "", "TestMath"]], "armi.utils.tests.test_mathematics.TestMath": [[426, 3, 1, "", "test_average1DWithinTolerance"], [426, 3, 1, "", "test_average1DWithinToleranceInvalid"], [426, 3, 1, "", "test_convertToSlice"], [426, 3, 1, "", "test_efmt"], [426, 3, 1, "", "test_expandRepeatedFloats"], [426, 3, 1, "", "test_findClosest"], [426, 3, 1, "", "test_findNearestValue"], [426, 3, 1, "", "test_fixThreeDigitExp"], [426, 3, 1, "", "test_getFloat"], [426, 3, 1, "", "test_getStepsFromValues"], [426, 3, 1, "", "test_isMonotonic"], [426, 3, 1, "", "test_linearInterpolation"], [426, 3, 1, "", "test_minimizeScalarFunc"], [426, 3, 1, "", "test_newtonsMethod"], [426, 3, 1, "", "test_parabola"], [426, 3, 1, "", "test_parabolicInterpolation"], [426, 3, 1, "", "test_relErr"], [426, 3, 1, "", "test_resampleStepwiseAvg0"], [426, 3, 1, "", "test_resampleStepwiseAvg1"], [426, 3, 1, "", "test_resampleStepwiseAvg2"], [426, 3, 1, "", "test_resampleStepwiseAvg3"], [426, 3, 1, "", "test_resampleStepwiseAvg4"], [426, 3, 1, "", "test_resampleStepwiseAvg5"], [426, 3, 1, "", "test_resampleStepwiseAvg6"], [426, 3, 1, "", "test_resampleStepwiseAvg7"], [426, 3, 1, "", "test_resampleStepwiseAvgAllNones"], [426, 3, 1, "", "test_resampleStepwiseAvgComplicatedNone"], [426, 3, 1, "", "test_resampleStepwiseAvgNpArray"], [426, 3, 1, "", "test_resampleStepwiseAvgNpArrayAverage"], [426, 3, 1, "", "test_resampleStepwiseAvgOneNone"], [426, 3, 1, "", "test_resampleStepwiseSum0"], [426, 3, 1, "", "test_resampleStepwiseSum1"], [426, 3, 1, "", "test_resampleStepwiseSum2"], [426, 3, 1, "", "test_resampleStepwiseSum3"], [426, 3, 1, "", "test_resampleStepwiseSum4"], [426, 3, 1, "", "test_resampleStepwiseSum5"], [426, 3, 1, "", "test_resampleStepwiseSum6"], [426, 3, 1, "", "test_resampleStepwiseSum7"], [426, 3, 1, "", "test_resampleStepwiseSumAllNones"], [426, 3, 1, "", "test_resampleStepwiseSumOneNone"], [426, 3, 1, "", "test_rotateXY"]], "armi.utils.tests.test_outputCache": [[427, 2, 1, "", "TestOutputCache"]], "armi.utils.tests.test_outputCache.TestOutputCache": [[427, 3, 1, "", "test_deleteCache"], [427, 3, 1, "", "test_getCachedFolder"], [427, 3, 1, "", "test_hashFiles"], [427, 3, 1, "", "test_makeOutputManifest"], [427, 3, 1, "", "test_retrieveOutput"]], "armi.utils.tests.test_parsing": [[428, 2, 1, "", "LiteralEvalTest"]], "armi.utils.tests.test_parsing.LiteralEvalTest": [[428, 3, 1, "", "test_parseValue"], [428, 3, 1, "", "test_tryLiteralEval"]], "armi.utils.tests.test_pathTools": [[429, 2, 1, "", "PathToolsTests"]], "armi.utils.tests.test_pathTools.PathToolsTests": [[429, 3, 1, "", "test_cleanPathNoMpi"], [429, 3, 1, "", "test_importCustomModule"], [429, 3, 1, "", "test_isAccessible"], [429, 3, 1, "", "test_isFilePathNewer"], [429, 3, 1, "", "test_moduleAndAttributeExist"], [429, 3, 1, "", "test_separateModuleAndAttribute"]], "armi.utils.tests.test_plotting": [[430, 2, 1, "", "TestPatches"], [430, 2, 1, "", "TestPlotting"]], "armi.utils.tests.test_plotting.TestPatches": [[430, 3, 1, "", "test_makeAssemPatches"]], "armi.utils.tests.test_plotting.TestPlotting": [[430, 3, 1, "", "test_plotAssemblyTypes"], [430, 3, 1, "", "test_plotBlockFlux"], [430, 3, 1, "", "test_plotCartesianBlock"], [430, 3, 1, "", "test_plotDepthMap"], [430, 3, 1, "", "test_plotHexBlock"]], "armi.utils.tests.test_properties": [[431, 2, 1, "", "ImmutableClass"], [431, 2, 1, "", "ImmutablePropertyTests"]], "armi.utils.tests.test_properties.ImmutableClass": [[431, 3, 1, "", "initialize"], [431, 5, 1, "", "myNum"]], "armi.utils.tests.test_properties.ImmutablePropertyTests": [[431, 3, 1, "", "test_cannotAssignValueToImmutableProperty"], [431, 3, 1, "", "test_retreivingUnassignedValueRaisesError"], [431, 3, 1, "", "test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "armi.utils.tests.test_reportPlotting": [[432, 2, 1, "", "TestRadar"]], "armi.utils.tests.test_reportPlotting.TestRadar": [[432, 3, 1, "", "test_buVsTime"], [432, 3, 1, "", "test_createPlotMetaData"], [432, 3, 1, "", "test_keffVsTime"], [432, 3, 1, "", "test_movesVsCycle"], [432, 3, 1, "", "test_plotAxialProfile"], [432, 3, 1, "", "test_radar"], [432, 3, 1, "", "test_valueVsTime"], [432, 3, 1, "", "test_xsHistoryVsTime"]], "armi.utils.tests.test_tabulate": [[433, 2, 1, "", "TestTabulateAPI"], [433, 2, 1, "", "TestTabulateInputs"], [433, 2, 1, "", "TestTabulateInternal"], [433, 2, 1, "", "TestTabulateOutput"]], "armi.utils.tests.test_tabulate.TestTabulateAPI": [[433, 3, 1, "", "test_tabulateFormats"]], "armi.utils.tests.test_tabulate.TestTabulateInputs": [[433, 3, 1, "", "test_dictLike"], [433, 3, 1, "", "test_iterableOfEmpties"], [433, 3, 1, "", "test_iterableOfIterables"], [433, 3, 1, "", "test_iterableOfIterablesFirstrow"], [433, 3, 1, "", "test_iterableOfIterablesHeaders"], [433, 3, 1, "", "test_listBytes"], [433, 3, 1, "", "test_listOfDicts"], [433, 3, 1, "", "test_listOfDictsFirstrow"], [433, 3, 1, "", "test_listOfDictsKeys"], [433, 3, 1, "", "test_listOfDictsWithDictOfHeaders"], [433, 3, 1, "", "test_listOfDictsWithListOfHeaders"], [433, 3, 1, "", "test_listOfDictsWithMissingKeys"], [433, 3, 1, "", "test_listOfLists"], [433, 3, 1, "", "test_listOfListsFirstrow"], [433, 3, 1, "", "test_listOfListsKeys"], [433, 3, 1, "", "test_listOfNamedtuples"], [433, 3, 1, "", "test_listOfNamedtuplesKeys"], [433, 3, 1, "", "test_listOfOrdereddicts"], [433, 3, 1, "", "test_listOfUserdicts"], [433, 3, 1, "", "test_listOfUserdictsKeys"], [433, 3, 1, "", "test_numpy2d"], [433, 3, 1, "", "test_numpy2dFirstrow"], [433, 3, 1, "", "test_numpy2dKeys"], [433, 3, 1, "", "test_numpyRecordArray"], [433, 3, 1, "", "test_numpyRecordArrayHeaders"], [433, 3, 1, "", "test_numpyRecordArrayKeys"], [433, 3, 1, "", "test_tightCouplingExample"]], "armi.utils.tests.test_tabulate.TestTabulateInternal": [[433, 3, 1, "", "test_alignCellVeriticallyBottomMultiTextMultiplePad"], [433, 3, 1, "", "test_alignCellVeriticallyBottomSingleTextMultiplePad"], [433, 3, 1, "", "test_alignCellVeriticallyCenterMultiTextMultiplePad"], [433, 3, 1, "", "test_alignCellVeriticallyCenterSingleTextMultiplePad"], [433, 3, 1, "", "test_alignCellVeriticallyOneLineOnly"], [433, 3, 1, "", "test_alignCellVeriticallyTopMultiTextMultiplePad"], [433, 3, 1, "", "test_alignCellVeriticallyTopSingleTextMultiplePad"], [433, 3, 1, "", "test_alignColumnDecimal"], [433, 3, 1, "", "test_alignColumnDecimalWithIncorrectThousandSeparators"], [433, 3, 1, "", "test_alignColumnDecimalWithThousandSeparators"], [433, 3, 1, "", "test_alignColumnMultiline"], [433, 3, 1, "", "test_alignColumnNone"], [433, 3, 1, "", "test_assortedRareEdgeCases"], [433, 3, 1, "", "test_bool"], [433, 3, 1, "", "test_buildLine"], [433, 3, 1, "", "test_buildRow"], [433, 3, 1, "", "test_format"], [433, 3, 1, "", "test_isMultiline"], [433, 3, 1, "", "test_multilineWidth"], [433, 3, 1, "", "test_normalizeTabularData"], [433, 3, 1, "", "test_type"], [433, 3, 1, "", "test_visibleWidth"], [433, 3, 1, "", "test_wrapTextToColWidths"]], "armi.utils.tests.test_tabulate.TestTabulateOutput": [[433, 3, 1, "", "test_colAlignMulti"], [433, 3, 1, "", "test_colAlignMultiWithSepLine"], [433, 3, 1, "", "test_colAlignOrheadersAlignTooLong"], [433, 3, 1, "", "test_columnAlignment"], [433, 3, 1, "", "test_columnGlobalAndSpecificAlignment"], [433, 3, 1, "", "test_dictLikeWithIndex"], [433, 3, 1, "", "test_disableNumParseDefault"], [433, 3, 1, "", "test_disableNumParseList"], [433, 3, 1, "", "test_disableNumParseTrue"], [433, 3, 1, "", "test_emptyData"], [433, 3, 1, "", "test_emptyDataWithHeaders"], [433, 3, 1, "", "test_emptyDataWithoutHeaders"], [433, 3, 1, "", "test_floatConversions"], [433, 3, 1, "", "test_floatFmt"], [433, 3, 1, "", "test_floatFmtMulti"], [433, 3, 1, "", "test_github"], [433, 3, 1, "", "test_grid"], [433, 3, 1, "", "test_gridHeaderless"], [433, 3, 1, "", "test_gridMultiline"], [433, 3, 1, "", "test_gridMultilineHeaderless"], [433, 3, 1, "", "test_gridMultilineWithEmptyCells"], [433, 3, 1, "", "test_gridMultilineWithEmptyCellsHeaderless"], [433, 3, 1, "", "test_headersGlobalAndSpecificAlignment"], [433, 3, 1, "", "test_intFmt"], [433, 3, 1, "", "test_listOfListsWithIndex"], [433, 3, 1, "", "test_listOfListsWithIndexFirstrow"], [433, 3, 1, "", "test_listOfListsWithIndexWithSepLine"], [433, 3, 1, "", "test_listOfListsWithSuppliedIndex"], [433, 3, 1, "", "test_maxColWidthsingleValue"], [433, 3, 1, "", "test_maxcolwidthHonorDisableParsenum"], [433, 3, 1, "", "test_maxcolwidthPadTailingWidths"], [433, 3, 1, "", "test_missingVal"], [433, 3, 1, "", "test_missingValMulti"], [433, 3, 1, "", "test_noData"], [433, 3, 1, "", "test_noDataWithoutHeaders"], [433, 3, 1, "", "test_plain"], [433, 3, 1, "", "test_plainHeaderless"], [433, 3, 1, "", "test_plainMaxcolwidthAutowraps"], [433, 3, 1, "", "test_plainMaxcolwidthAutowrapsWithSep"], [433, 3, 1, "", "test_plainMultiline"], [433, 3, 1, "", "test_plainMultilineHeaderless"], [433, 3, 1, "", "test_plainMultilineWithEmptyCells"], [433, 3, 1, "", "test_plainMultilineWithEmptyCellsHeaderless"], [433, 3, 1, "", "test_plainMultilineWithLinks"], [433, 3, 1, "", "test_plainmaxHeaderColWidthsAutowraps"], [433, 3, 1, "", "test_pretty"], [433, 3, 1, "", "test_prettyHeaderless"], [433, 3, 1, "", "test_prettyMultiline"], [433, 3, 1, "", "test_prettyMultilineHeaderless"], [433, 3, 1, "", "test_prettyMultilineWithEmptyCells"], [433, 3, 1, "", "test_prettyMultilineWithEmptyCellsHeaderless"], [433, 3, 1, "", "test_prettyMultilineWithLinks"], [433, 3, 1, "", "test_readmeExampleWithSep"], [433, 3, 1, "", "test_rst"], [433, 3, 1, "", "test_rstHeaderless"], [433, 3, 1, "", "test_rstMultiline"], [433, 3, 1, "", "test_rstMultilineWithEmptyCells"], [433, 3, 1, "", "test_rstMultilineWithEmptyCellsHeaderless"], [433, 3, 1, "", "test_rstMultilineWithLinks"], [433, 3, 1, "", "test_rstWithEmptyValuesInFirstColumn"], [433, 3, 1, "", "test_simple"], [433, 3, 1, "", "test_simpleHeaderless"], [433, 3, 1, "", "test_simpleHeaderlessWithSepLine"], [433, 3, 1, "", "test_simpleMultiline"], [433, 3, 1, "", "test_simpleMultiline2"], [433, 3, 1, "", "test_simpleMultiline2WithSepLine"], [433, 3, 1, "", "test_simpleMultilineHeaderless"], [433, 3, 1, "", "test_simpleMultilineWithEmptyCells"], [433, 3, 1, "", "test_simpleMultilineWithEmptyCellsHeaderless"], [433, 3, 1, "", "test_simpleMultilineWithLinks"], [433, 3, 1, "", "test_simpleWithSepLine"]], "armi.utils.tests.test_textProcessors": [[434, 2, 1, "", "SequentialReaderTests"], [434, 2, 1, "", "YamlIncludeTest"]], "armi.utils.tests.test_textProcessors.SequentialReaderTests": [[434, 3, 1, "", "test_readFile"], [434, 3, 1, "", "test_readFileWithPattern"], [434, 4, 1, "", "textStream"]], "armi.utils.tests.test_textProcessors.YamlIncludeTest": [[434, 3, 1, "", "test_findIncludes"], [434, 3, 1, "", "test_resolveIncludes"], [434, 3, 1, "", "test_resolveIncludes_StringIO"]], "armi.utils.tests.test_triangle": [[435, 2, 1, "", "TestTriangle"]], "armi.utils.tests.test_triangle.TestTriangle": [[435, 3, 1, "", "test_checkIfPointIsInTriangle"], [435, 3, 1, "", "test_checkIfPointIsInTriangle2"], [435, 3, 1, "", "test_getTriangleArea"]], "armi.utils.tests.test_units": [[436, 2, 1, "", "TestUnits"]], "armi.utils.tests.test_units.TestUnits": [[436, 3, 1, "", "test_convertXtoPascal"], [436, 3, 1, "", "test_getTc"], [436, 3, 1, "", "test_getTemperature"], [436, 3, 1, "", "test_getTf"], [436, 3, 1, "", "test_getTk"], [436, 3, 1, "", "test_getTmev"], [436, 3, 1, "", "test_getXYLineParameters"], [436, 3, 1, "", "test_pressure_converter"], [436, 3, 1, "", "test_sanitizeAngle"]], "armi.utils.tests.test_utils": [[437, 2, 1, "", "CyclesSettingsTests"], [437, 2, 1, "", "TestGeneralUtils"]], "armi.utils.tests.test_utils.CyclesSettingsTests": [[437, 4, 1, "", "availabilityFactorsDetailedSolution"], [437, 4, 1, "", "availabilityFactorsSimpleSolution"], [437, 4, 1, "", "burnStepsDetailedSolution"], [437, 4, 1, "", "burnStepsSimpleSolution"], [437, 4, 1, "", "cycleLengthsDetailedSolution"], [437, 4, 1, "", "cycleLengthsSimpleSolution"], [437, 4, 1, "", "cycleNamesDetailedSolution"], [437, 4, 1, "", "cycleNamesSimpleSolution"], [437, 4, 1, "", "detailedCyclesSettings"], [437, 4, 1, "", "maxBurnStepsDetailedSolution"], [437, 4, 1, "", "maxBurnStepsSimpleSolution"], [437, 4, 1, "", "nodesPerCycleDetailedSolution"], [437, 4, 1, "", "nodesPerCycleSimpleSolution"], [437, 4, 1, "", "powerFractionsDetailedSolution"], [437, 4, 1, "", "powerFractionsSimpleSolution"], [437, 4, 1, "", "simpleCyclesSettings"], [437, 4, 1, "", "stepLengthsDetailedSolution"], [437, 4, 1, "", "stepLengthsSimpleSolution"], [437, 3, 1, "", "test_getAvailabilityFactors"], [437, 3, 1, "", "test_getBurnSteps"], [437, 3, 1, "", "test_getCumulativeNodeNum"], [437, 3, 1, "", "test_getCycleLengths"], [437, 3, 1, "", "test_getCycleNames"], [437, 3, 1, "", "test_getCycleNodeFromCumulativeNode"], [437, 3, 1, "", "test_getCycleNodeFromCumulativeStep"], [437, 3, 1, "", "test_getMaxBurnSteps"], [437, 3, 1, "", "test_getNodesPerCycle"], [437, 3, 1, "", "test_getPowerFractions"], [437, 3, 1, "", "test_getPreviousTimeNode"], [437, 3, 1, "", "test_getStepLengths"], [437, 3, 1, "", "test_hasBurnup"]], "armi.utils.tests.test_utils.TestGeneralUtils": [[437, 3, 1, "", "test_capStrLen"], [437, 3, 1, "", "test_classesInHierarchy"], [437, 3, 1, "", "test_codeTiming"], [437, 3, 1, "", "test_createFormattedStrWithDelimiter"], [437, 3, 1, "", "test_list2str"], [437, 3, 1, "", "test_mergeableDictionary"], [437, 3, 1, "", "test_plotMatrix"], [437, 3, 1, "", "test_prependToList"], [437, 3, 1, "", "test_safeCopy"], [437, 3, 1, "", "test_slantSplit"]], "armi.utils.textProcessors": [[438, 6, 1, "", "DECIMAL_PATTERN"], [438, 6, 1, "", "FLOATING_PATTERN"], [438, 2, 1, "", "FileMark"], [438, 6, 1, "", "SCIENTIFIC_PATTERN"], [438, 2, 1, "", "SequentialReader"], [438, 2, 1, "", "SequentialStringIOReader"], [438, 2, 1, "", "SmartList"], [438, 2, 1, "", "TextProcessor"], [438, 1, 1, "", "findYamlInclusions"], [438, 1, 1, "", "resolveMarkupInclusions"]], "armi.utils.textProcessors.SequentialReader": [[438, 3, 1, "", "consumeLine"], [438, 3, 1, "", "issueWarningOnFindingText"], [438, 3, 1, "", "raiseErrorOnFindingPattern"], [438, 3, 1, "", "raiseErrorOnFindingText"], [438, 3, 1, "", "searchForPattern"], [438, 3, 1, "", "searchForPatternOnNextLine"], [438, 3, 1, "", "searchForText"]], "armi.utils.textProcessors.SmartList": [[438, 3, 1, "", "close"], [438, 3, 1, "", "next"], [438, 3, 1, "", "seek"]], "armi.utils.textProcessors.TextProcessor": [[438, 3, 1, "", "checkErrors"], [438, 4, 1, "", "decimal"], [438, 3, 1, "", "errorChecking"], [438, 3, 1, "", "fsearch"], [438, 4, 1, "", "number"], [438, 3, 1, "", "reset"], [438, 4, 1, "", "scipat"]], "armi.utils.triangle": [[439, 1, 1, "", "checkIfPointIsInTriangle"], [439, 1, 1, "", "getTriangleArea"], [439, 1, 1, "", "getTriangleCentroid"]], "armi.utils.units": [[440, 1, 1, "", "convertAtmToPascal"], [440, 1, 1, "", "convertBarToPascal"], [440, 1, 1, "", "convertMmhgToPascal"], [440, 1, 1, "", "getTc"], [440, 1, 1, "", "getTemperature"], [440, 1, 1, "", "getTf"], [440, 1, 1, "", "getTk"], [440, 1, 1, "", "getTmev"], [440, 1, 1, "", "getXYLineParameters"], [440, 1, 1, "", "sanitizeAngle"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"armi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 480, 482, 483, 484, 485, 487, 489, 490, 491, 502, 503], "packag": [0, 2, 3, 12, 22, 29, 33, 37, 40, 46, 48, 52, 57, 60, 73, 79, 118, 144, 148, 152, 156, 164, 165, 180, 196, 203, 209, 212, 215, 222, 226, 231, 236, 242, 246, 249, 251, 253, 256, 263, 270, 271, 273, 278, 282, 287, 294, 303, 310, 311, 318, 321, 333, 342, 351, 365, 367, 375, 379, 396, 416, 442, 452, 491], "note": [0, 1, 3, 5, 6, 7, 9, 10, 15, 19, 20, 28, 47, 49, 50, 54, 55, 56, 74, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 92, 93, 95, 96, 97, 99, 102, 103, 104, 105, 110, 111, 112, 114, 115, 116, 139, 140, 141, 142, 151, 153, 154, 155, 159, 160, 163, 165, 166, 167, 171, 172, 173, 174, 175, 176, 179, 184, 191, 197, 198, 200, 201, 202, 204, 205, 207, 208, 211, 213, 214, 215, 216, 219, 220, 223, 224, 235, 236, 238, 239, 241, 243, 247, 250, 252, 254, 257, 264, 265, 281, 283, 286, 287, 290, 291, 292, 293, 303, 304, 305, 306, 308, 309, 313, 314, 315, 316, 317, 320, 322, 324, 328, 329, 335, 337, 338, 339, 340, 345, 347, 348, 350, 353, 354, 360, 363, 366, 371, 372, 377, 379, 386, 396, 397, 400, 401, 402, 406, 408, 409, 411, 412, 430, 438, 439, 440, 452, 482, 483, 484, 485, 486], "subpackag": [0, 2, 3, 22, 37, 46, 48, 60, 79, 144, 152, 164, 165, 203, 212, 215, 226, 236, 242, 249, 253, 273, 282, 287, 310, 365, 396], "submodul": [0, 2, 3, 12, 22, 29, 33, 37, 40, 46, 48, 52, 57, 60, 73, 79, 118, 144, 148, 152, 156, 164, 165, 180, 196, 203, 209, 212, 215, 222, 226, 231, 236, 242, 246, 249, 251, 253, 256, 263, 271, 273, 278, 282, 287, 294, 303, 310, 311, 318, 321, 333, 342, 351, 365, 367, 375, 379, 396, 416, 489], "app": [1, 447, 489], "modul": [1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 250, 252, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 272, 274, 275, 276, 277, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 452], "bookkeep": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "db": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "when": 3, "updat": [3, 442, 481, 508], "version": [3, 452], "databas": [3, 19, 65, 487, 504], "revis": 3, "changelog": 3, "comparedb3": 4, "database3": 5, "databaseinterfac": 6, "factori": [7, 492], "jaggedarrai": 8, "layout": 9, "passivedbloadplugin": 10, "permiss": 11, "test": [12, 13, 14, 15, 16, 17, 29, 30, 31, 33, 34, 35, 36, 40, 41, 42, 52, 53, 54, 57, 58, 59, 73, 74, 75, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 148, 149, 150, 156, 157, 158, 159, 160, 161, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 209, 210, 211, 222, 223, 224, 225, 231, 232, 233, 234, 246, 247, 248, 251, 252, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 271, 272, 278, 279, 294, 295, 296, 297, 298, 299, 300, 301, 302, 321, 322, 323, 324, 325, 326, 327, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 444, 451, 452], "test_comparedb3": 13, "test_database3": 14, "test_databaseinterfac": 15, "test_jaggedarrai": 16, "test_layout": 17, "typedef": 18, "historytrack": 19, "get": [19, 445, 480, 481, 508], "histori": [19, 480, 502, 504], "inform": 19, "us": [19, 165, 442, 448, 451, 480], "base": [19, 145, 152, 447, 489], "tracker": 19, "specifi": [19, 493], "paramet": [19, 228, 260, 275, 286, 342, 343, 344, 345, 346, 445, 451, 492, 497, 498, 499, 500, 507], "add": [19, 452], "eol": 19, "report": [19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 261, 450, 496, 502], "block": [19, 286, 452, 459, 464, 466, 493, 494, 498, 502, 505], "assembli": [19, 283, 493, 494, 497, 502], "track": 19, "maininterfac": 20, "memoryprofil": 21, "data": [23, 451, 491, 503], "html": [24, 450], "newreportutil": 25, "newreport": 26, "reportinterfac": 27, "reportingutil": 28, "test_newreport": 30, "test_report": 31, "snapshotinterfac": 32, "test_historytrack": 34, "test_memoryprofil": 35, "test_snapshot": 36, "visual": [37, 38, 39, 40, 41, 42, 43, 44, 45], "dumper": 38, "entrypoint": [39, 66], "test_vi": 41, "test_xdmf": 42, "util": [43, 235, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "vtk": 44, "limit": 44, "xdmf": [45, 489], "case": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 480, 502], "inputmodifi": [48, 49, 50, 51, 52, 53, 54], "neutronicsmodifi": 50, "pintypeinputmodifi": 51, "test_inputmodifi": 53, "test_pintypeinputmodifi": 54, "suit": 55, "suitebuild": 56, "test_cas": 58, "test_suitebuild": 59, "cli": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "checkinput": 61, "cleantemp": 62, "clone": 63, "comparecas": 64, "gridgui": 67, "migrateinput": 68, "modifi": [69, 487, 492], "reportsentrypoint": 70, "run": [71, 451, 489, 502], "runsuit": 72, "test_runentrypoint": 74, "test_runsuit": 75, "conftest": 76, "context": 77, "interfac": [78, 445, 489, 505], "materi": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 458, 473, 489, 490], "air": 80, "alloy200": 81, "b4c": 82, "be9": 83, "cah2": 84, "californium": 85, "concret": 86, "copper": 87, "c": 88, "custom": [89, 489, 494, 502], "graphit": 90, "hafnium": 91, "hastelloyn": 92, "ht9": 93, "inconel": 94, "inconel600": 95, "inconel625": 96, "inconel800": 97, "inconelpe16": 98, "inconelx750": 99, "lead": 100, "leadbismuth": 101, "lithium": [102, 491], "magnesium": 103, "mgo": 105, "mixtur": 106, "molybdenum": 107, "mox": [108, 494], "nz": 109, "potassium": 110, "scandiumoxid": 111, "sic": 112, "sodium": 113, "sodiumchlorid": 114, "sulfur": 115, "tzm": 116, "tantalum": 117, "test__init__": 119, "test_air": 120, "test_b4c": 121, "test_be9": 122, "test_graphit": 123, "test_lithium": 124, "test_materi": 125, "test_sic": 126, "test_sulfur": 127, "test_thoriumoxid": 128, "test_uzr": 129, "test_wat": 130, "thu": 131, "thorium": 132, "thoriumoxid": 133, "uthzr": 134, "uzr": 135, "uranium": 136, "uraniumoxid": 137, "void": 138, "water": 139, "yttriumoxid": 140, "zincoxid": 141, "zr": 142, "meta": 143, "migrat": [144, 145, 146, 147, 148, 149, 150], "m0_1_3": 146, "m0_1_6": 147, "test_m0_1_6": 149, "test_migration_bas": 150, "mpiaction": 151, "sampl": 151, "mpi": [151, 448], "action": 151, "workflow": 151, "nucdirectori": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "element": [152, 153, 450, 491], "nuclid": [152, 465, 491, 494, 502], "name": [152, 451, 502], "label": [152, 174], "id": 152, "indic": 152, "rapid": 152, "access": [152, 491, 496, 503], "list": [153, 473, 489], "nucdir": 154, "nuclidebas": 155, "test_el": 157, "test_nucdirectori": 158, "test_nuclidebas": 159, "test_thermalscatt": 160, "test_transmut": 161, "thermalscatt": 162, "transmut": [163, 476], "nucleardataio": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "cccc": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "system": [165, 480, 494, 502], "implement": [165, 447], "detail": [165, 447, 465, 502], "discuss": 165, "compx": 167, "dif3d": 168, "dlayx": 169, "fixsrc": 170, "gamiso": 171, "geodst": 172, "isotx": [173, 471], "nhflux": 175, "pmatrx": 176, "pwdint": 177, "rtflux": 178, "rzflux": 179, "test_cccc": 181, "test_compx": 182, "test_dif3d": 183, "test_dlayx": 184, "test_fixsrc": 185, "test_gamiso": 186, "test_geodst": 187, "test_isotx": 188, "test_label": 189, "test_nhflux": 190, "test_pmatrx": 191, "test_pwdint": 192, "test_rtflux": 193, "test_rzflux": 194, "nuclearfilemetadata": 195, "test_xscollect": 197, "test_xslibrari": 198, "test_xsnuclid": 199, "xscollect": 200, "xslibrari": 201, "xsnuclid": 202, "oper": [203, 204, 205, 206, 207, 208, 209, 210, 211, 445, 480, 502], "operatormpi": 205, "runtyp": 206, "settingsvalid": [207, 374], "snapshot": [208, 445], "test_operatorsnapshot": 210, "test_oper": 211, "physic": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 480, 489, 505], "histor": 212, "fun": 212, "fact": 212, "constant": [213, 336], "execut": [214, 227], "fuelcycl": [215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225], "assemblyrotationalgorithm": 216, "fuelhandlerfactori": 217, "fuelhandlerinterfac": 218, "fuelhandl": 219, "hexassemblyfuelmgmtutil": 220, "set": [221, 230, 262, 277, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 489, 493, 494, 502, 503, 504], "test_assemblyrotationalgorithm": 223, "test_fuelhandl": 224, "test_hexassemblyfuelmgmtutil": 225, "fuelperform": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "plugin": [229, 276, 281, 442, 445, 447, 489, 502], "test_execut": [232, 272], "test_fuelperformanceplugin": 233, "test_fuelperformanceutil": 234, "neutron": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269], "const": [237, 274], "crosssectiongroupmanag": 238, "crosssectionset": 239, "diffisotx": 240, "energygroup": 241, "fissionproductmodel": [242, 243, 244, 245, 246, 247, 248], "fissionproductmodelset": 244, "lumpedfissionproduct": 245, "test_fissionproductmodel": 247, "test_lumpedfissionproduct": 248, "globalflux": [249, 250, 251, 252], "globalfluxinterfac": 250, "test_globalfluxinterfac": 252, "latticephys": [253, 254, 255, 256, 257, 258], "latticephysicsinterfac": 254, "latticephysicswrit": 255, "test_latticeinterfac": 257, "test_latticewrit": 258, "macroxsgenerationinterfac": 259, "test_crosssectionmanag": 264, "test_crosssectionset": 265, "test_crosssectiont": 266, "test_energygroup": 267, "test_macroxsgenerationinterfac": 268, "test_neutronicsplugin": 269, "safeti": 270, "thermalhydraul": [273, 274, 275, 276, 277, 278, 279], "test_thermalhydraulicsplugin": 279, "pluginmanag": 280, "reactor": [282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 445, 460, 474, 475, 487, 492, 493, 494, 504, 507], "assemblyparamet": 284, "blockparamet": 285, "blueprint": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 445, 493, 494, 502, 504], "assemblyblueprint": 288, "blockblueprint": 289, "componentblueprint": 290, "gridblueprint": 291, "isotopicopt": 292, "reactorblueprint": 293, "test_assemblyblueprint": 295, "test_blockblueprint": 296, "test_blueprint": 297, "test_componentblueprint": 298, "test_customisotop": 299, "test_gridblueprint": 300, "test_materialmodif": 301, "test_reactorblueprint": 302, "compon": [303, 304, 305, 306, 307, 308, 464, 499, 502], "basicshap": 304, "complexshap": 305, "componentparamet": 307, "volumetricshap": 308, "composit": 309, "convert": [310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 445], "axialexpansionchang": [311, 312, 313, 314], "assemblyaxiallinkag": 312, "expansiondata": 314, "blockconvert": 315, "geometryconvert": 316, "meshconvert": 317, "parametersweep": [318, 319], "generalparametersweepconvert": 319, "pintypeblockconvert": 320, "test_axialexpansionchang": 322, "test_blockconvert": 323, "test_geometryconvert": 324, "test_meshconvert": 325, "test_pintypeblockconvert": 326, "test_uniformmesh": 327, "uniformmesh": 328, "requir": [328, 452, 480, 485], "core": [329, 493, 500], "excorestructur": 330, "flag": [331, 404, 494, 502], "geometri": [332, 459, 460], "grid": [333, 334, 335, 336, 337, 338, 339, 340, 341, 468, 469, 470, 494, 502], "axial": [334, 506], "cartesian": [335, 469], "hexagon": [338, 406], "locat": 339, "structuredgrid": 340, "thetarz": 341, "exampl": [342, 448, 502], "basic": 342, "usag": [342, 409, 415], "design": [342, 492], "consider": 342, "except": [343, 451], "parametercollect": 344, "parameterdefinit": 345, "resolvecollect": 346, "reactorparamet": 347, "spentfuelpool": 349, "systemlayoutinput": 350, "test_assembli": 352, "test_block": 353, "test_compon": 354, "test_composit": 355, "test_excorestructur": 356, "test_flag": [357, 423], "test_geometri": 358, "test_paramet": 359, "test_reactor": 360, "test_rz_reactor": 361, "test_zon": 362, "zone": 363, "runlog": [364, 452], "caseset": 366, "fwset": [367, 368, 369, 370, 371], "databaseset": 368, "globalset": 369, "reportset": 370, "tightcouplingset": 371, "settingsio": 373, "test_inspector": 376, "test_set": 377, "test_settingsio": 378, "mockrunlog": 380, "refsmallreactorshufflelog": 381, "test_app": 382, "test_armitesthelp": 383, "test_cartesian": 384, "test_context": 385, "test_interfac": 386, "test_lwrinput": 387, "test_mpiact": 388, "test_mpifeatur": 389, "test_mpiparamet": 390, "test_notebook": 391, "test_plugin": 392, "test_runlog": 393, "test_test": 394, "test_user_plugin": 395, "asciimap": 397, "codetim": 398, "customexcept": 399, "densitytool": 400, "directorychang": 401, "directorychangersmpi": 402, "dynamicimport": 403, "grideditor": 405, "iter": 407, "mathemat": 408, "outputcach": 409, "api": [409, 482, 485], "pars": [410, 415], "pathtool": 411, "plot": [412, 465, 471, 472, 475, 491], "properti": 413, "reportplot": 414, "tabul": 415, "tabl": [415, 450], "header": 415, "column": 415, "align": 415, "format": [415, 451, 489, 504], "number": [415, 487], "width": 415, "auto": 415, "line": 415, "wrap": 415, "test_asciimap": 417, "test_codetim": 418, "test_custom_except": 419, "test_densitytool": 420, "test_directorychang": 421, "test_directorychangersmpi": 422, "test_hexagon": 424, "test_iter": 425, "test_mathemat": 426, "test_outputcach": 427, "test_pars": 428, "test_pathtool": 429, "test_plot": 430, "test_properti": 431, "test_reportplot": 432, "test_tabul": 433, "test_textprocessor": 434, "test_triangl": 435, "test_unit": 436, "test_util": 437, "textprocessor": 438, "triangl": 439, "unit": [440, 451], "document": [442, 452], "build": [442, 474, 483, 493, 494], "link": [442, 480, 502], "from": [442, 471, 487, 497, 498, 499, 500, 507], "automat": [442, 464], "apidoc": 442, "namespac": 442, "galleri": [442, 453, 478, 495], "jupyt": 442, "notebook": 442, "entri": [443, 445, 489, 496], "point": [443, 445, 489, 496], "first": [444, 489], "time": [444, 461, 477], "contributor": 444, "guid": 444, "help": [444, 480], "want": 444, "submit": 444, "chang": [444, 482, 483, 485], "licens": [444, 452, 480], "tool": [444, 452], "framework": [445, 456, 463, 478, 491, 495, 497, 498, 499, 500, 507], "architectur": 445, "The": [445, 450, 480, 481, 490, 491, 494, 502, 504, 505, 508], "model": [445, 451, 487], "find": 445, "object": 445, "standard": [445, 451, 504], "stack": 445, "interact": 445, "hook": [445, 450], "ad": [445, 489], "new": [445, 452, 480, 483, 484, 485, 489], "how": [445, 491, 493], "call": 445, "develop": [446, 481, 508], "doc": [446, 501], "make": [447, 468, 469, 470, 489, 502], "head": 447, "up": [447, 491, 493, 494], "some": [447, 502, 503], "your": [447, 489], "own": 447, "applic": [447, 455, 462, 478, 495], "parallel": 448, "code": [448, 451, 481, 508], "commun": [448, 480], "crash": 448, "cours": 448, "within": [448, 451], "bcast": 448, "scatter": [448, 472], "A": [448, 492], "simplifi": 448, "approach": 448, "profil": 449, "getreportcont": 450, "what": [450, 483, 484, 489, 494], "i": [450, 452], "reportcont": 450, "section": [450, 502], "imag": 450, "timeseri": 450, "summari": 450, "practic": 451, "black": 451, "address": 451, "ruff": 451, "warn": 451, "remov": 451, "comment": 451, "out": 451, "avoid": 451, "hard": 451, "global": [451, 505], "keyword": 451, "convent": 451, "meaning": 451, "gener": 451, "quick": [451, 480], "refer": 451, "common": 451, "prefer": 451, "shorter": 451, "method": 451, "repeat": 451, "public": 451, "should": 451, "have": 451, "docstr": 451, "import": 451, "statement": 451, "order": 451, "don": [451, 452], "t": [451, 452], "creat": [451, 489], "nake": 451, "input": [451, 474, 481, 493, 494, 502, 508], "file": [451, 489, 493, 494, 502, 504], "do": 451, "": [451, 483, 484], "infrastructur": 452, "good": 452, "commit": 452, "messag": 452, "pull": 452, "request": 452, "One": 452, "idea": 452, "pr": 452, "open": 452, "until": 452, "readi": 452, "It": 452, "watch": 452, "releas": [452, 482, 483, 484, 485, 486], "depend": 452, "manag": [452, 487, 493, 494, 502], "pyproject": 452, "toml": 452, "third": 452, "parti": 452, "log": 452, "duplic": 452, "level": 452, "analysi": [454, 457, 478, 480, 495], "write": 458, "mcnp": 458, "card": 458, "hex": [459, 460, 468], "rz": [459, 460], "convers": [459, 460], "comput": [461, 464, 466, 477], "volum": 464, "fraction": 464, "thermal": [464, 489, 494, 506], "expans": [464, 506], "chart": [465, 491], "more": 465, "reaction": [466, 476], "rate": 466, "theta": 470, "r": 470, "z": 470, "multi": [471, 472], "group": [471, 472], "x": 471, "matrix": 472, "librari": [473, 481, 490, 508], "programmat": 474, "facemap": 475, "decai": 476, "glossari": 479, "start": [480, 489], "background": 480, "coupl": [480, 505], "autom": 480, "capabl": 480, "research": 480, "scientist": 480, "nuclear": 480, "startup": 480, "engin": 480, "vendor": 480, "enthusiast": 480, "disclaim": 480, "instal": [481, 508], "prerequisit": [481, 508], "right": [481, 508], "python": [481, 489, 508], "command": [481, 508], "prepar": [481, 508], "virtual": [481, 508], "environ": [481, 502, 508], "step": [481, 508], "0": [481, 482, 483, 484, 485, 508], "pip": [481, 508], "option": [481, 508], "1": [481, 482, 483, 485, 487, 508], "2": [481, 482, 483, 508], "repositori": [481, 508], "verifi": [481, 508], "setup": [481, 508], "gui": [481, 502, 508], "output": [481, 489, 504, 508], "v0": [482, 483, 484, 485], "7": [482, 483, 491], "bug": [482, 483, 484, 485], "fix": [482, 483, 484, 485], "6": [482, 483], "deprec": 482, "bugfix": 482, "5": [482, 483], "user": [482, 501], "face": 482, "enhanc": 482, "backend": 482, "4": [482, 483, 485], "3": [482, 483, 484, 494], "hotfix": 482, "9": 483, "8": 483, "backward": 483, "incompat": 483, "qualiti": [484, 485], "work": [484, 485], "featur": 485, "affect": 485, "hand": 487, "termin": 487, "initi": 487, "explor": [487, 491], "quiz": 487, "question": 487, "state": [487, 503, 504], "densiti": 487, "save": 487, "disk": 487, "fuel": [487, 493, 494, 502], "load": [487, 504], "tutori": 488, "regist": 489, "defin": [489, 491, 493, 494, 502], "class": 489, "v": 489, "ar": [489, 491, 493], "again": 489, "kernel": 489, "dummi": 489, "flux": [489, 505], "hydraul": 489, "debug": 489, "window": 489, "tip": [489, 502], "yet": 489, "anoth": 489, "wai": 489, "why": 489, "__main__": 489, "py": 489, "check": 489, "fanci": 489, "bonu": 489, "hoc": 489, "userplugin": 489, "individu": 491, "attribut": 491, "mani": 491, "total": 491, "look": 491, "u": 491, "235": 491, "li": 491, "sweep": 492, "simpl": 492, "one": 492, "dimension": 492, "full": 492, "post": 492, "process": 492, "result": 492, "fast": 493, "non": 493, "radial": [493, 506], "shield": 493, "reflector": 493, "control": 493, "plenum": 493, "arrang": 493, "map": 493, "isotop": [494, 502], "vector": 494, "uo2": 494, "moder": 494, "d": 494, "definit": 494, "ok": 494, "so": 494, "now": 494, "fuelperformanceplugin": 498, "neutronicsplugin": [498, 500], "thermalhydraulicsplugin": 498, "yaml": 502, "clicker": 502, "tab": 502, "special": 502, "kinet": 502, "cycl": 502, "restart": 502, "type": 502, "pin": 502, "lattic": 502, "behavior": 502, "advanc": 502, "topic": 502, "overlap": 502, "shape": 502, "area": 502, "modif": 502, "put": 502, "all": 502, "togeth": 502, "unshap": 502, "swapassembli": 502, "dischargeswap": 502, "swapcascad": 502, "choos": 502, "move": 502, "converg": 502, "diverg": 502, "branch": 502, "search": 502, "variabl": 503, "interest": 503, "info": 503, "extract": 504, "structur": 504, "loos": 505, "tight": 505, "eigenvalu": 505, "wise": 505, "power": 505, "contract": 506}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"armi package": [[0, "module-armi"]], "Notes": [[0, null], [1, null], [1, null], [1, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [5, null], [5, null], [5, null], [5, null], [5, null], [6, null], [6, null], [6, null], [6, null], [6, null], [7, null], [9, null], [9, null], [10, null], [15, null], [19, null], [19, null], [19, null], [20, null], [28, null], [47, null], [47, null], [47, null], [47, null], [47, null], [47, null], [49, null], [50, null], [54, null], [55, null], [55, null], [56, null], [74, null], [77, null], [77, null], [77, null], [78, null], [78, null], [78, null], [78, null], [78, null], [78, null], [78, null], [78, null], [78, null], [79, null], [80, null], [80, null], [81, null], [81, null], [82, null], [82, null], [82, null], [83, null], [87, null], [88, null], [89, null], [90, null], [92, null], [93, null], [95, null], [96, null], [97, null], [99, null], [102, null], [103, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [105, null], [110, null], [111, null], [111, null], [112, null], [114, null], [114, null], [115, null], [116, null], [139, null], [139, null], [139, null], [139, null], [139, null], [139, null], [139, null], [140, null], [140, null], [141, null], [142, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [153, null], [153, null], [153, null], [154, null], [155, null], [155, null], [155, null], [155, null], [155, null], [155, null], [155, null], [155, null], [155, null], [155, null], [159, null], [160, null], [163, null], [163, null], [163, null], [163, null], [165, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [166, null], [167, null], [167, null], [171, null], [172, null], [173, null], [173, null], [173, null], [173, null], [174, null], [175, null], [175, null], [175, null], [176, null], [179, null], [184, null], [191, null], [197, null], [197, null], [198, null], [200, null], [200, null], [200, null], [200, null], [200, null], [201, null], [201, null], [202, null], [202, null], [202, null], [202, null], [204, null], [204, null], [204, null], [204, null], [204, null], [204, null], [204, null], [205, null], [205, null], [207, null], [208, null], [211, null], [213, null], [214, null], [215, null], [216, null], [216, null], [219, null], [219, null], [219, null], [219, null], [219, null], [219, null], [219, null], [219, null], [220, null], [220, null], [220, null], [223, null], [224, null], [235, null], [236, null], [238, null], [238, null], [238, null], [238, null], [238, null], [238, null], [238, null], [238, null], [239, null], [239, null], [239, null], [239, null], [239, null], [239, null], [241, null], [243, null], [243, null], [243, null], [247, null], [250, null], [252, null], [254, null], [254, null], [254, null], [257, null], [257, null], [264, null], [264, null], [265, null], [281, null], [281, null], [281, null], [281, null], [281, null], [281, null], [281, null], [281, null], [281, null], [281, null], [283, null], [283, null], [283, null], [283, null], [283, null], [283, null], [283, null], [286, null], [286, null], [286, null], [286, null], [286, null], [286, null], [286, null], [286, null], [286, null], [286, null], [286, null], [286, null], [286, null], [286, null], [287, null], [287, null], [290, null], [291, null], [291, null], [292, null], [292, null], [292, null], [293, null], [293, null], [303, null], [303, null], [303, null], [303, null], [304, null], [304, null], [304, null], [304, null], [304, null], [305, null], [306, null], [306, null], [306, null], [306, null], [306, null], [306, null], [306, null], [306, null], [306, null], [308, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [309, null], [313, null], [313, null], [313, null], [313, null], [313, null], [313, null], [314, null], [314, null], [314, null], [314, null], [315, null], [315, null], [315, null], [315, null], [316, null], [316, null], [316, null], [316, null], [316, null], [317, null], [320, null], [320, null], [322, null], [322, null], [322, null], [322, null], [322, null], [322, null], [322, null], [322, null], [322, null], [322, null], [324, null], [328, null], [328, null], [328, null], [328, null], [328, null], [328, null], [328, null], [329, null], [329, null], [329, null], [329, null], [329, null], [329, null], [329, null], [329, null], [329, null], [329, null], [329, null], [329, null], [329, null], [335, null], [335, null], [335, null], [337, null], [338, null], [338, null], [338, null], [338, null], [338, null], [339, null], [340, null], [340, null], [345, null], [345, null], [345, null], [345, null], [345, null], [347, null], [348, null], [350, null], [350, null], [353, null], [353, null], [353, null], [354, null], [354, null], [360, null], [360, null], [363, null], [363, null], [366, null], [366, null], [366, null], [366, null], [366, null], [371, null], [371, null], [371, null], [372, null], [372, null], [377, null], [379, null], [386, null], [396, null], [396, null], [396, null], [396, null], [396, null], [396, null], [396, null], [396, null], [396, null], [396, null], [396, null], [396, null], [397, null], [400, null], [401, null], [402, null], [406, null], [406, null], [406, null], [406, null], [408, null], [408, null], [409, null], [409, null], [409, null], [409, null], [411, null], [411, null], [412, null], [412, null], [412, null], [430, null], [438, null], [438, null], [438, null], [438, null], [438, null], [438, null], [439, null], [439, null], [440, null]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [3, "subpackages"], [22, "subpackages"], [37, "subpackages"], [46, "subpackages"], [48, "subpackages"], [60, "subpackages"], [79, "subpackages"], [144, "subpackages"], [152, "subpackages"], [164, "subpackages"], [165, "subpackages"], [203, "subpackages"], [212, "subpackages"], [215, "subpackages"], [226, "subpackages"], [236, "subpackages"], [242, "subpackages"], [249, "subpackages"], [253, "subpackages"], [273, "subpackages"], [282, "subpackages"], [287, "subpackages"], [310, "subpackages"], [365, "subpackages"], [396, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [12, "submodules"], [22, "submodules"], [29, "submodules"], [33, "submodules"], [37, "submodules"], [40, "submodules"], [46, "submodules"], [48, "submodules"], [52, "submodules"], [57, "submodules"], [60, "submodules"], [73, "submodules"], [79, "submodules"], [118, "submodules"], [144, "submodules"], [148, "submodules"], [152, "submodules"], [156, "submodules"], [164, "submodules"], [165, "submodules"], [180, "submodules"], [196, "submodules"], [203, "submodules"], [209, "submodules"], [212, "submodules"], [215, "submodules"], [222, "submodules"], [226, "submodules"], [231, "submodules"], [236, "submodules"], [242, "submodules"], [246, "submodules"], [249, "submodules"], [251, "submodules"], [253, "submodules"], [256, "submodules"], [263, "submodules"], [271, "submodules"], [273, "submodules"], [278, "submodules"], [282, "submodules"], [287, "submodules"], [294, "submodules"], [303, "submodules"], [310, "submodules"], [311, "submodules"], [318, "submodules"], [321, "submodules"], [333, "submodules"], [342, "submodules"], [351, "submodules"], [365, "submodules"], [367, "submodules"], [375, "submodules"], [379, "submodules"], [396, "submodules"], [416, "submodules"]], "armi.apps module": [[1, "module-armi.apps"]], "armi.bookkeeping package": [[2, "module-armi.bookkeeping"]], "armi.bookkeeping.db package": [[3, "module-armi.bookkeeping.db"]], "When updating a db version": [[3, "when-updating-a-db-version"]], "Database revision changelog": [[3, "database-revision-changelog"]], "armi.bookkeeping.db.compareDB3 module": [[4, "module-armi.bookkeeping.db.compareDB3"]], "armi.bookkeeping.db.database3 module": [[5, "module-armi.bookkeeping.db.database3"]], "armi.bookkeeping.db.databaseInterface module": [[6, "module-armi.bookkeeping.db.databaseInterface"]], "armi.bookkeeping.db.factory module": [[7, "module-armi.bookkeeping.db.factory"]], "armi.bookkeeping.db.jaggedArray module": [[8, "module-armi.bookkeeping.db.jaggedArray"]], "armi.bookkeeping.db.layout module": [[9, "module-armi.bookkeeping.db.layout"]], "armi.bookkeeping.db.passiveDBLoadPlugin module": [[10, "module-armi.bookkeeping.db.passiveDBLoadPlugin"]], "armi.bookkeeping.db.permissions module": [[11, "module-armi.bookkeeping.db.permissions"]], "armi.bookkeeping.db.tests package": [[12, "module-armi.bookkeeping.db.tests"]], "armi.bookkeeping.db.tests.test_comparedb3 module": [[13, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "armi.bookkeeping.db.tests.test_database3 module": [[14, "module-armi.bookkeeping.db.tests.test_database3"]], "armi.bookkeeping.db.tests.test_databaseInterface module": [[15, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "armi.bookkeeping.db.tests.test_jaggedArray module": [[16, "module-armi.bookkeeping.db.tests.test_jaggedArray"]], "armi.bookkeeping.db.tests.test_layout module": [[17, "module-armi.bookkeeping.db.tests.test_layout"]], "armi.bookkeeping.db.typedefs module": [[18, "module-armi.bookkeeping.db.typedefs"]], "armi.bookkeeping.historyTracker module": [[19, "module-armi.bookkeeping.historyTracker"]], "Getting history information": [[19, "getting-history-information"]], "Using the database-based history trackers": [[19, "using-the-database-based-history-trackers"]], "Specifying parameters to add to the EOL history report": [[19, "specifying-parameters-to-add-to-the-eol-history-report"]], "Specifying blocks and assemblies to track": [[19, "specifying-blocks-and-assemblies-to-track"]], "armi.bookkeeping.mainInterface module": [[20, "module-armi.bookkeeping.mainInterface"]], "armi.bookkeeping.memoryProfiler module": [[21, "module-armi.bookkeeping.memoryProfiler"]], "armi.bookkeeping.report package": [[22, "module-armi.bookkeeping.report"]], "armi.bookkeeping.report.data module": [[23, "module-armi.bookkeeping.report.data"]], "armi.bookkeeping.report.html module": [[24, "module-armi.bookkeeping.report.html"]], "armi.bookkeeping.report.newReportUtils module": [[25, "module-armi.bookkeeping.report.newReportUtils"]], "armi.bookkeeping.report.newReports module": [[26, "module-armi.bookkeeping.report.newReports"]], "armi.bookkeeping.report.reportInterface module": [[27, "module-armi.bookkeeping.report.reportInterface"]], "armi.bookkeeping.report.reportingUtils module": [[28, "module-armi.bookkeeping.report.reportingUtils"]], "armi.bookkeeping.report.tests package": [[29, "module-armi.bookkeeping.report.tests"]], "armi.bookkeeping.report.tests.test_newReport module": [[30, "module-armi.bookkeeping.report.tests.test_newReport"]], "armi.bookkeeping.report.tests.test_report module": [[31, "module-armi.bookkeeping.report.tests.test_report"]], "armi.bookkeeping.snapshotInterface module": [[32, "module-armi.bookkeeping.snapshotInterface"]], "armi.bookkeeping.tests package": [[33, "module-armi.bookkeeping.tests"]], "armi.bookkeeping.tests.test_historyTracker module": [[34, "module-armi.bookkeeping.tests.test_historyTracker"]], "armi.bookkeeping.tests.test_memoryProfiler module": [[35, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "armi.bookkeeping.tests.test_snapshot module": [[36, "module-armi.bookkeeping.tests.test_snapshot"]], "armi.bookkeeping.visualization package": [[37, "module-armi.bookkeeping.visualization"]], "armi.bookkeeping.visualization.dumper module": [[38, "module-armi.bookkeeping.visualization.dumper"]], "armi.bookkeeping.visualization.entryPoint module": [[39, "module-armi.bookkeeping.visualization.entryPoint"]], "armi.bookkeeping.visualization.tests package": [[40, "module-armi.bookkeeping.visualization.tests"]], "armi.bookkeeping.visualization.tests.test_vis module": [[41, "module-armi.bookkeeping.visualization.tests.test_vis"]], "armi.bookkeeping.visualization.tests.test_xdmf module": [[42, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "armi.bookkeeping.visualization.utils module": [[43, "module-armi.bookkeeping.visualization.utils"]], "armi.bookkeeping.visualization.vtk module": [[44, "module-armi.bookkeeping.visualization.vtk"]], "Limitations": [[44, "limitations"]], "armi.bookkeeping.visualization.xdmf module": [[45, "module-armi.bookkeeping.visualization.xdmf"]], "armi.cases package": [[46, "module-armi.cases"]], "armi.cases.case module": [[47, "module-armi.cases.case"]], "armi.cases.inputModifiers package": [[48, "module-armi.cases.inputModifiers"]], "armi.cases.inputModifiers.inputModifiers module": [[49, "module-armi.cases.inputModifiers.inputModifiers"]], "armi.cases.inputModifiers.neutronicsModifiers module": [[50, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "armi.cases.inputModifiers.pinTypeInputModifiers module": [[51, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests package": [[52, "module-armi.cases.inputModifiers.tests"]], "armi.cases.inputModifiers.tests.test_inputModifiers module": [[53, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module": [[54, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "armi.cases.suite module": [[55, "module-armi.cases.suite"]], "armi.cases.suiteBuilder module": [[56, "module-armi.cases.suiteBuilder"]], "armi.cases.tests package": [[57, "module-armi.cases.tests"]], "armi.cases.tests.test_cases module": [[58, "module-armi.cases.tests.test_cases"]], "armi.cases.tests.test_suiteBuilder module": [[59, "module-armi.cases.tests.test_suiteBuilder"]], "armi.cli package": [[60, "module-armi.cli"]], "armi.cli.checkInputs module": [[61, "module-armi.cli.checkInputs"]], "armi.cli.cleanTemps module": [[62, "module-armi.cli.cleanTemps"]], "armi.cli.clone module": [[63, "module-armi.cli.clone"]], "armi.cli.compareCases module": [[64, "module-armi.cli.compareCases"]], "armi.cli.database module": [[65, "module-armi.cli.database"]], "armi.cli.entryPoint module": [[66, "module-armi.cli.entryPoint"]], "armi.cli.gridGui module": [[67, "module-armi.cli.gridGui"]], "armi.cli.migrateInputs module": [[68, "module-armi.cli.migrateInputs"]], "armi.cli.modify module": [[69, "module-armi.cli.modify"]], "armi.cli.reportsEntryPoint module": [[70, "module-armi.cli.reportsEntryPoint"]], "armi.cli.run module": [[71, "module-armi.cli.run"]], "armi.cli.runSuite module": [[72, "module-armi.cli.runSuite"]], "armi.cli.tests package": [[73, "module-armi.cli.tests"]], "armi.cli.tests.test_runEntryPoint module": [[74, "module-armi.cli.tests.test_runEntryPoint"]], "armi.cli.tests.test_runSuite module": [[75, "module-armi.cli.tests.test_runSuite"]], "armi.conftest module": [[76, "module-armi.conftest"]], "armi.context module": [[77, "module-armi.context"]], "armi.interfaces module": [[78, "module-armi.interfaces"]], "armi.materials package": [[79, "module-armi.materials"]], "armi.materials.air module": [[80, "module-armi.materials.air"]], "armi.materials.alloy200 module": [[81, "module-armi.materials.alloy200"]], "armi.materials.b4c module": [[82, "module-armi.materials.b4c"]], "armi.materials.be9 module": [[83, "module-armi.materials.be9"]], "armi.materials.caH2 module": [[84, "module-armi.materials.caH2"]], "armi.materials.californium module": [[85, "module-armi.materials.californium"]], "armi.materials.concrete module": [[86, "module-armi.materials.concrete"]], "armi.materials.copper module": [[87, "module-armi.materials.copper"]], "armi.materials.cs module": [[88, "module-armi.materials.cs"]], "armi.materials.custom module": [[89, "module-armi.materials.custom"]], "armi.materials.graphite module": [[90, "module-armi.materials.graphite"]], "armi.materials.hafnium module": [[91, "module-armi.materials.hafnium"]], "armi.materials.hastelloyN module": [[92, "module-armi.materials.hastelloyN"]], "armi.materials.ht9 module": [[93, "module-armi.materials.ht9"]], "armi.materials.inconel module": [[94, "module-armi.materials.inconel"]], "armi.materials.inconel600 module": [[95, "module-armi.materials.inconel600"]], "armi.materials.inconel625 module": [[96, "module-armi.materials.inconel625"]], "armi.materials.inconel800 module": [[97, "module-armi.materials.inconel800"]], "armi.materials.inconelPE16 module": [[98, "module-armi.materials.inconelPE16"]], "armi.materials.inconelX750 module": [[99, "module-armi.materials.inconelX750"]], "armi.materials.lead module": [[100, "module-armi.materials.lead"]], "armi.materials.leadBismuth module": [[101, "module-armi.materials.leadBismuth"]], "armi.materials.lithium module": [[102, "module-armi.materials.lithium"]], "armi.materials.magnesium module": [[103, "module-armi.materials.magnesium"]], "armi.materials.material module": [[104, "module-armi.materials.material"]], "armi.materials.mgO module": [[105, "module-armi.materials.mgO"]], "armi.materials.mixture module": [[106, "module-armi.materials.mixture"]], "armi.materials.molybdenum module": [[107, "module-armi.materials.molybdenum"]], "armi.materials.mox module": [[108, "module-armi.materials.mox"]], "armi.materials.nZ module": [[109, "module-armi.materials.nZ"]], "armi.materials.potassium module": [[110, "module-armi.materials.potassium"]], "armi.materials.scandiumOxide module": [[111, "module-armi.materials.scandiumOxide"]], "armi.materials.siC module": [[112, "module-armi.materials.siC"]], "armi.materials.sodium module": [[113, "module-armi.materials.sodium"]], "armi.materials.sodiumChloride module": [[114, "module-armi.materials.sodiumChloride"]], "armi.materials.sulfur module": [[115, "module-armi.materials.sulfur"]], "armi.materials.tZM module": [[116, "module-armi.materials.tZM"]], "armi.materials.tantalum module": [[117, "module-armi.materials.tantalum"]], "armi.materials.tests package": [[118, "module-armi.materials.tests"]], "armi.materials.tests.test__init__ module": [[119, "module-armi.materials.tests.test__init__"]], "armi.materials.tests.test_air module": [[120, "module-armi.materials.tests.test_air"]], "armi.materials.tests.test_b4c module": [[121, "module-armi.materials.tests.test_b4c"]], "armi.materials.tests.test_be9 module": [[122, "module-armi.materials.tests.test_be9"]], "armi.materials.tests.test_graphite module": [[123, "module-armi.materials.tests.test_graphite"]], "armi.materials.tests.test_lithium module": [[124, "module-armi.materials.tests.test_lithium"]], "armi.materials.tests.test_materials module": [[125, "module-armi.materials.tests.test_materials"]], "armi.materials.tests.test_sic module": [[126, "module-armi.materials.tests.test_sic"]], "armi.materials.tests.test_sulfur module": [[127, "module-armi.materials.tests.test_sulfur"]], "armi.materials.tests.test_thoriumOxide module": [[128, "module-armi.materials.tests.test_thoriumOxide"]], "armi.materials.tests.test_uZr module": [[129, "module-armi.materials.tests.test_uZr"]], "armi.materials.tests.test_water module": [[130, "module-armi.materials.tests.test_water"]], "armi.materials.thU module": [[131, "module-armi.materials.thU"]], "armi.materials.thorium module": [[132, "module-armi.materials.thorium"]], "armi.materials.thoriumOxide module": [[133, "module-armi.materials.thoriumOxide"]], "armi.materials.uThZr module": [[134, "module-armi.materials.uThZr"]], "armi.materials.uZr module": [[135, "module-armi.materials.uZr"]], "armi.materials.uranium module": [[136, "module-armi.materials.uranium"]], "armi.materials.uraniumOxide module": [[137, "module-armi.materials.uraniumOxide"]], "armi.materials.void module": [[138, "module-armi.materials.void"]], "armi.materials.water module": [[139, "module-armi.materials.water"]], "armi.materials.yttriumOxide module": [[140, "module-armi.materials.yttriumOxide"]], "armi.materials.zincOxide module": [[141, "module-armi.materials.zincOxide"]], "armi.materials.zr module": [[142, "module-armi.materials.zr"]], "armi.meta module": [[143, "module-armi.meta"]], "armi.migration package": [[144, "module-armi.migration"]], "armi.migration.base module": [[145, "module-armi.migration.base"]], "armi.migration.m0_1_3 module": [[146, "module-armi.migration.m0_1_3"]], "armi.migration.m0_1_6 module": [[147, "module-armi.migration.m0_1_6"]], "armi.migration.tests package": [[148, "module-armi.migration.tests"]], "armi.migration.tests.test_m0_1_6 module": [[149, "module-armi.migration.tests.test_m0_1_6"]], "armi.migration.tests.test_migration_base module": [[150, "module-armi.migration.tests.test_migration_base"]], "armi.mpiActions module": [[151, "module-armi.mpiActions"]], "Sample MPI Action Workflow": [[151, "id1"]], "armi.nucDirectory package": [[152, "module-armi.nucDirectory"]], "Elements": [[152, "elements"]], "Nuclide Bases": [[152, "nuclide-bases"]], "Nuclide names, labels, and IDs": [[152, "nuclide-names-labels-and-ids"]], "Indices - rapid access": [[152, "indices-rapid-access"]], "armi.nucDirectory.elements module": [[153, "module-armi.nucDirectory.elements"]], "List of elements": [[153, "nuclide-bases-table"]], "armi.nucDirectory.nucDir module": [[154, "module-armi.nucDirectory.nucDir"]], "armi.nucDirectory.nuclideBases module": [[155, "module-armi.nucDirectory.nuclideBases"]], "armi.nucDirectory.tests package": [[156, "module-armi.nucDirectory.tests"]], "armi.nucDirectory.tests.test_elements module": [[157, "module-armi.nucDirectory.tests.test_elements"]], "armi.nucDirectory.tests.test_nucDirectory module": [[158, "module-armi.nucDirectory.tests.test_nucDirectory"]], "armi.nucDirectory.tests.test_nuclideBases module": [[159, "module-armi.nucDirectory.tests.test_nuclideBases"]], "armi.nucDirectory.tests.test_thermalScattering module": [[160, "module-armi.nucDirectory.tests.test_thermalScattering"]], "armi.nucDirectory.tests.test_transmutations module": [[161, "module-armi.nucDirectory.tests.test_transmutations"]], "armi.nucDirectory.thermalScattering module": [[162, "module-armi.nucDirectory.thermalScattering"]], "armi.nucDirectory.transmutations module": [[163, "module-armi.nucDirectory.transmutations"]], "armi.nuclearDataIO package": [[164, "module-armi.nuclearDataIO"]], "armi.nuclearDataIO.cccc package": [[165, "module-armi.nuclearDataIO.cccc"]], "Using the system": [[165, "using-the-system"]], "Implementation details": [[165, "implementation-details"]], "Discussion": [[165, "discussion"]], "armi.nuclearDataIO.cccc.cccc module": [[166, "module-armi.nuclearDataIO.cccc.cccc"]], "armi.nuclearDataIO.cccc.compxs module": [[167, "module-armi.nuclearDataIO.cccc.compxs"]], "armi.nuclearDataIO.cccc.dif3d module": [[168, "module-armi.nuclearDataIO.cccc.dif3d"]], "armi.nuclearDataIO.cccc.dlayxs module": [[169, "module-armi.nuclearDataIO.cccc.dlayxs"]], "armi.nuclearDataIO.cccc.fixsrc module": [[170, "module-armi.nuclearDataIO.cccc.fixsrc"]], "armi.nuclearDataIO.cccc.gamiso module": [[171, "module-armi.nuclearDataIO.cccc.gamiso"]], "armi.nuclearDataIO.cccc.geodst module": [[172, "module-armi.nuclearDataIO.cccc.geodst"]], "armi.nuclearDataIO.cccc.isotxs module": [[173, "module-armi.nuclearDataIO.cccc.isotxs"]], "armi.nuclearDataIO.cccc.labels module": [[174, "module-armi.nuclearDataIO.cccc.labels"]], "armi.nuclearDataIO.cccc.nhflux module": [[175, "module-armi.nuclearDataIO.cccc.nhflux"]], "armi.nuclearDataIO.cccc.pmatrx module": [[176, "module-armi.nuclearDataIO.cccc.pmatrx"]], "armi.nuclearDataIO.cccc.pwdint module": [[177, "module-armi.nuclearDataIO.cccc.pwdint"]], "armi.nuclearDataIO.cccc.rtflux module": [[178, "module-armi.nuclearDataIO.cccc.rtflux"]], "armi.nuclearDataIO.cccc.rzflux module": [[179, "module-armi.nuclearDataIO.cccc.rzflux"]], "armi.nuclearDataIO.cccc.tests package": [[180, "module-armi.nuclearDataIO.cccc.tests"]], "armi.nuclearDataIO.cccc.tests.test_cccc module": [[181, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "armi.nuclearDataIO.cccc.tests.test_compxs module": [[182, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "armi.nuclearDataIO.cccc.tests.test_dif3d module": [[183, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs module": [[184, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "armi.nuclearDataIO.cccc.tests.test_fixsrc module": [[185, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"]], "armi.nuclearDataIO.cccc.tests.test_gamiso module": [[186, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "armi.nuclearDataIO.cccc.tests.test_geodst module": [[187, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs module": [[188, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "armi.nuclearDataIO.cccc.tests.test_labels module": [[189, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "armi.nuclearDataIO.cccc.tests.test_nhflux module": [[190, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx module": [[191, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "armi.nuclearDataIO.cccc.tests.test_pwdint module": [[192, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "armi.nuclearDataIO.cccc.tests.test_rtflux module": [[193, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux module": [[194, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "armi.nuclearDataIO.nuclearFileMetadata module": [[195, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "armi.nuclearDataIO.tests package": [[196, "module-armi.nuclearDataIO.tests"]], "armi.nuclearDataIO.tests.test_xsCollections module": [[197, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "armi.nuclearDataIO.tests.test_xsLibraries module": [[198, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "armi.nuclearDataIO.tests.test_xsNuclides module": [[199, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "armi.nuclearDataIO.xsCollections module": [[200, "module-armi.nuclearDataIO.xsCollections"]], "armi.nuclearDataIO.xsLibraries module": [[201, "module-armi.nuclearDataIO.xsLibraries"]], "armi.nuclearDataIO.xsNuclides module": [[202, "module-armi.nuclearDataIO.xsNuclides"]], "armi.operators package": [[203, "module-armi.operators"]], "armi.operators.operator module": [[204, "module-armi.operators.operator"]], "armi.operators.operatorMPI module": [[205, "module-armi.operators.operatorMPI"]], "armi.operators.runTypes module": [[206, "module-armi.operators.runTypes"]], "armi.operators.settingsValidation module": [[207, "module-armi.operators.settingsValidation"]], "armi.operators.snapshots module": [[208, "module-armi.operators.snapshots"]], "armi.operators.tests package": [[209, "module-armi.operators.tests"]], "armi.operators.tests.test_operatorSnapshots module": [[210, "module-armi.operators.tests.test_operatorSnapshots"]], "armi.operators.tests.test_operators module": [[211, "module-armi.operators.tests.test_operators"]], "armi.physics package": [[212, "module-armi.physics"]], "Historical fun fact": [[212, null]], "armi.physics.constants module": [[213, "module-armi.physics.constants"]], "armi.physics.executers module": [[214, "module-armi.physics.executers"]], "armi.physics.fuelCycle package": [[215, "module-armi.physics.fuelCycle"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms module": [[216, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.fuelHandlerFactory module": [[217, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface module": [[218, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlers module": [[219, "module-armi.physics.fuelCycle.fuelHandlers"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module": [[220, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.settings module": [[221, "module-armi.physics.fuelCycle.settings"]], "armi.physics.fuelCycle.tests package": [[222, "module-armi.physics.fuelCycle.tests"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module": [[223, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.tests.test_fuelHandlers module": [[224, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module": [[225, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelPerformance package": [[226, "module-armi.physics.fuelPerformance"]], "armi.physics.fuelPerformance.executers module": [[227, "module-armi.physics.fuelPerformance.executers"]], "armi.physics.fuelPerformance.parameters module": [[228, "module-armi.physics.fuelPerformance.parameters"]], "armi.physics.fuelPerformance.plugin module": [[229, "module-armi.physics.fuelPerformance.plugin"]], "armi.physics.fuelPerformance.settings module": [[230, "module-armi.physics.fuelPerformance.settings"]], "armi.physics.fuelPerformance.tests package": [[231, "module-armi.physics.fuelPerformance.tests"]], "armi.physics.fuelPerformance.tests.test_executers module": [[232, "module-armi.physics.fuelPerformance.tests.test_executers"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module": [[233, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module": [[234, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.utils module": [[235, "module-armi.physics.fuelPerformance.utils"]], "armi.physics.neutronics package": [[236, "module-armi.physics.neutronics"]], "armi.physics.neutronics.const module": [[237, "module-armi.physics.neutronics.const"]], "armi.physics.neutronics.crossSectionGroupManager module": [[238, "module-armi.physics.neutronics.crossSectionGroupManager"]], "armi.physics.neutronics.crossSectionSettings module": [[239, "module-armi.physics.neutronics.crossSectionSettings"]], "armi.physics.neutronics.diffIsotxs module": [[240, "module-armi.physics.neutronics.diffIsotxs"]], "armi.physics.neutronics.energyGroups module": [[241, "module-armi.physics.neutronics.energyGroups"]], "armi.physics.neutronics.fissionProductModel package": [[242, "module-armi.physics.neutronics.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel module": [[243, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module": [[244, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module": [[245, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests package": [[246, "module-armi.physics.neutronics.fissionProductModel.tests"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module": [[247, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module": [[248, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "armi.physics.neutronics.globalFlux package": [[249, "module-armi.physics.neutronics.globalFlux"]], "armi.physics.neutronics.globalFlux.globalFluxInterface module": [[250, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests package": [[251, "module-armi.physics.neutronics.globalFlux.tests"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module": [[252, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "armi.physics.neutronics.latticePhysics package": [[253, "module-armi.physics.neutronics.latticePhysics"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module": [[254, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module": [[255, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests package": [[256, "module-armi.physics.neutronics.latticePhysics.tests"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module": [[257, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module": [[258, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "armi.physics.neutronics.macroXSGenerationInterface module": [[259, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "armi.physics.neutronics.parameters module": [[260, "module-armi.physics.neutronics.parameters"]], "armi.physics.neutronics.reports module": [[261, "module-armi.physics.neutronics.reports"]], "armi.physics.neutronics.settings module": [[262, "module-armi.physics.neutronics.settings"]], "armi.physics.neutronics.tests package": [[263, "module-armi.physics.neutronics.tests"]], "armi.physics.neutronics.tests.test_crossSectionManager module": [[264, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "armi.physics.neutronics.tests.test_crossSectionSettings module": [[265, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "armi.physics.neutronics.tests.test_crossSectionTable module": [[266, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "armi.physics.neutronics.tests.test_energyGroups module": [[267, "module-armi.physics.neutronics.tests.test_energyGroups"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface module": [[268, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_neutronicsPlugin module": [[269, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "armi.physics.safety package": [[270, "module-armi.physics.safety"]], "armi.physics.tests package": [[271, "module-armi.physics.tests"]], "armi.physics.tests.test_executers module": [[272, "module-armi.physics.tests.test_executers"]], "armi.physics.thermalHydraulics package": [[273, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalHydraulics.const module": [[274, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalHydraulics.parameters module": [[275, "module-armi.physics.thermalHydraulics.parameters"]], "armi.physics.thermalHydraulics.plugin module": [[276, "module-armi.physics.thermalHydraulics.plugin"]], "armi.physics.thermalHydraulics.settings module": [[277, "module-armi.physics.thermalHydraulics.settings"]], "armi.physics.thermalHydraulics.tests package": [[278, "module-armi.physics.thermalHydraulics.tests"]], "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin module": [[279, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"]], "armi.pluginManager module": [[280, "module-armi.pluginManager"]], "armi.plugins module": [[281, "module-armi.plugins"]], "armi.reactor package": [[282, "module-armi.reactor"]], "armi.reactor.assemblies module": [[283, "module-armi.reactor.assemblies"]], "armi.reactor.assemblyParameters module": [[284, "module-armi.reactor.assemblyParameters"]], "armi.reactor.blockParameters module": [[285, "module-armi.reactor.blockParameters"]], "armi.reactor.blocks module": [[286, "module-armi.reactor.blocks"]], "Parameter": [[286, "parameter"]], "armi.reactor.blueprints package": [[287, "module-armi.reactor.blueprints"]], "armi.reactor.blueprints.assemblyBlueprint module": [[288, "module-armi.reactor.blueprints.assemblyBlueprint"]], "armi.reactor.blueprints.blockBlueprint module": [[289, "module-armi.reactor.blueprints.blockBlueprint"]], "armi.reactor.blueprints.componentBlueprint module": [[290, "module-armi.reactor.blueprints.componentBlueprint"]], "armi.reactor.blueprints.gridBlueprint module": [[291, "module-armi.reactor.blueprints.gridBlueprint"]], "armi.reactor.blueprints.isotopicOptions module": [[292, "module-armi.reactor.blueprints.isotopicOptions"]], "armi.reactor.blueprints.reactorBlueprint module": [[293, "module-armi.reactor.blueprints.reactorBlueprint"]], "armi.reactor.blueprints.tests package": [[294, "module-armi.reactor.blueprints.tests"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints module": [[295, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "armi.reactor.blueprints.tests.test_blockBlueprints module": [[296, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "armi.reactor.blueprints.tests.test_blueprints module": [[297, "module-armi.reactor.blueprints.tests.test_blueprints"]], "armi.reactor.blueprints.tests.test_componentBlueprint module": [[298, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "armi.reactor.blueprints.tests.test_customIsotopics module": [[299, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "armi.reactor.blueprints.tests.test_gridBlueprints module": [[300, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "armi.reactor.blueprints.tests.test_materialModifications module": [[301, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "armi.reactor.blueprints.tests.test_reactorBlueprints module": [[302, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "armi.reactor.components package": [[303, "module-armi.reactor.components"]], "armi.reactor.components.basicShapes module": [[304, "module-armi.reactor.components.basicShapes"]], "armi.reactor.components.complexShapes module": [[305, "module-armi.reactor.components.complexShapes"]], "armi.reactor.components.component module": [[306, "module-armi.reactor.components.component"]], "armi.reactor.components.componentParameters module": [[307, "module-armi.reactor.components.componentParameters"]], "armi.reactor.components.volumetricShapes module": [[308, "module-armi.reactor.components.volumetricShapes"]], "armi.reactor.composites module": [[309, "module-armi.reactor.composites"]], "armi.reactor.converters package": [[310, "module-armi.reactor.converters"]], "armi.reactor.converters.axialExpansionChanger package": [[311, "module-armi.reactor.converters.axialExpansionChanger"]], "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage module": [[312, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"]], "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger module": [[313, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"]], "armi.reactor.converters.axialExpansionChanger.expansionData module": [[314, "module-armi.reactor.converters.axialExpansionChanger.expansionData"]], "armi.reactor.converters.blockConverters module": [[315, "module-armi.reactor.converters.blockConverters"]], "armi.reactor.converters.geometryConverters module": [[316, "module-armi.reactor.converters.geometryConverters"]], "armi.reactor.converters.meshConverters module": [[317, "module-armi.reactor.converters.meshConverters"]], "armi.reactor.converters.parameterSweeps package": [[318, "module-armi.reactor.converters.parameterSweeps"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module": [[319, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "armi.reactor.converters.pinTypeBlockConverters module": [[320, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests package": [[321, "module-armi.reactor.converters.tests"]], "armi.reactor.converters.tests.test_axialExpansionChanger module": [[322, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "armi.reactor.converters.tests.test_blockConverter module": [[323, "module-armi.reactor.converters.tests.test_blockConverter"]], "armi.reactor.converters.tests.test_geometryConverters module": [[324, "module-armi.reactor.converters.tests.test_geometryConverters"]], "armi.reactor.converters.tests.test_meshConverters module": [[325, "module-armi.reactor.converters.tests.test_meshConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters module": [[326, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "armi.reactor.converters.tests.test_uniformMesh module": [[327, "module-armi.reactor.converters.tests.test_uniformMesh"]], "armi.reactor.converters.uniformMesh module": [[328, "module-armi.reactor.converters.uniformMesh"]], "Requirements": [[328, "requirements"]], "armi.reactor.cores module": [[329, "module-armi.reactor.cores"]], "armi.reactor.excoreStructure module": [[330, "module-armi.reactor.excoreStructure"]], "armi.reactor.flags module": [[331, "module-armi.reactor.flags"]], "armi.reactor.geometry module": [[332, "module-armi.reactor.geometry"]], "armi.reactor.grids package": [[333, "module-armi.reactor.grids"]], "armi.reactor.grids.axial module": [[334, "module-armi.reactor.grids.axial"]], "armi.reactor.grids.cartesian module": [[335, "module-armi.reactor.grids.cartesian"]], "armi.reactor.grids.constants module": [[336, "module-armi.reactor.grids.constants"]], "armi.reactor.grids.grid module": [[337, "module-armi.reactor.grids.grid"]], "armi.reactor.grids.hexagonal module": [[338, "module-armi.reactor.grids.hexagonal"]], "armi.reactor.grids.locations module": [[339, "module-armi.reactor.grids.locations"]], "armi.reactor.grids.structuredGrid module": [[340, "module-armi.reactor.grids.structuredGrid"]], "armi.reactor.grids.thetarz module": [[341, "module-armi.reactor.grids.thetarz"]], "armi.reactor.parameters package": [[342, "module-armi.reactor.parameters"]], "Example Parameters": [[342, "id1"]], "Basic Usage": [[342, "basic-usage"]], "Design Considerations": [[342, "design-considerations"]], "Design considerations": [[342, "id2"]], "armi.reactor.parameters.exceptions module": [[343, "module-armi.reactor.parameters.exceptions"]], "armi.reactor.parameters.parameterCollections module": [[344, "module-armi.reactor.parameters.parameterCollections"]], "armi.reactor.parameters.parameterDefinitions module": [[345, "module-armi.reactor.parameters.parameterDefinitions"]], "armi.reactor.parameters.resolveCollections module": [[346, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorParameters module": [[347, "module-armi.reactor.reactorParameters"]], "armi.reactor.reactors module": [[348, "module-armi.reactor.reactors"]], "armi.reactor.spentFuelPool module": [[349, "module-armi.reactor.spentFuelPool"]], "armi.reactor.systemLayoutInput module": [[350, "module-armi.reactor.systemLayoutInput"]], "armi.reactor.tests package": [[351, "module-armi.reactor.tests"]], "armi.reactor.tests.test_assemblies module": [[352, "module-armi.reactor.tests.test_assemblies"]], "armi.reactor.tests.test_blocks module": [[353, "module-armi.reactor.tests.test_blocks"]], "armi.reactor.tests.test_components module": [[354, "module-armi.reactor.tests.test_components"]], "armi.reactor.tests.test_composites module": [[355, "module-armi.reactor.tests.test_composites"]], "armi.reactor.tests.test_excoreStructures module": [[356, "module-armi.reactor.tests.test_excoreStructures"]], "armi.reactor.tests.test_flags module": [[357, "module-armi.reactor.tests.test_flags"]], "armi.reactor.tests.test_geometry module": [[358, "module-armi.reactor.tests.test_geometry"]], "armi.reactor.tests.test_parameters module": [[359, "module-armi.reactor.tests.test_parameters"]], "armi.reactor.tests.test_reactors module": [[360, "module-armi.reactor.tests.test_reactors"]], "armi.reactor.tests.test_rz_reactors module": [[361, "module-armi.reactor.tests.test_rz_reactors"]], "armi.reactor.tests.test_zones module": [[362, "module-armi.reactor.tests.test_zones"]], "armi.reactor.zones module": [[363, "module-armi.reactor.zones"]], "armi.runLog module": [[364, "module-armi.runLog"]], "armi.settings package": [[365, "module-armi.settings"]], "armi.settings.caseSettings module": [[366, "module-armi.settings.caseSettings"]], "armi.settings.fwSettings package": [[367, "module-armi.settings.fwSettings"]], "armi.settings.fwSettings.databaseSettings module": [[368, "module-armi.settings.fwSettings.databaseSettings"]], "armi.settings.fwSettings.globalSettings module": [[369, "module-armi.settings.fwSettings.globalSettings"]], "armi.settings.fwSettings.reportSettings module": [[370, "module-armi.settings.fwSettings.reportSettings"]], "armi.settings.fwSettings.tightCouplingSettings module": [[371, "module-armi.settings.fwSettings.tightCouplingSettings"]], "armi.settings.setting module": [[372, "module-armi.settings.setting"]], "armi.settings.settingsIO module": [[373, "module-armi.settings.settingsIO"]], "armi.settings.settingsValidation module": [[374, "module-armi.settings.settingsValidation"]], "armi.settings.tests package": [[375, "module-armi.settings.tests"]], "armi.settings.tests.test_inspectors module": [[376, "module-armi.settings.tests.test_inspectors"]], "armi.settings.tests.test_settings module": [[377, "module-armi.settings.tests.test_settings"]], "armi.settings.tests.test_settingsIO module": [[378, "module-armi.settings.tests.test_settingsIO"]], "armi.tests package": [[379, "module-armi.tests"]], "armi.tests.mockRunLogs module": [[380, "module-armi.tests.mockRunLogs"]], "armi.tests.refSmallReactorShuffleLogic module": [[381, "module-armi.tests.refSmallReactorShuffleLogic"]], "armi.tests.test_apps module": [[382, "module-armi.tests.test_apps"]], "armi.tests.test_armiTestHelper module": [[383, "module-armi.tests.test_armiTestHelper"]], "armi.tests.test_cartesian module": [[384, "module-armi.tests.test_cartesian"]], "armi.tests.test_context module": [[385, "module-armi.tests.test_context"]], "armi.tests.test_interfaces module": [[386, "module-armi.tests.test_interfaces"]], "armi.tests.test_lwrInputs module": [[387, "module-armi.tests.test_lwrInputs"]], "armi.tests.test_mpiActions module": [[388, "module-armi.tests.test_mpiActions"]], "armi.tests.test_mpiFeatures module": [[389, "module-armi.tests.test_mpiFeatures"]], "armi.tests.test_mpiParameters module": [[390, "module-armi.tests.test_mpiParameters"]], "armi.tests.test_notebooks module": [[391, "module-armi.tests.test_notebooks"]], "armi.tests.test_plugins module": [[392, "module-armi.tests.test_plugins"]], "armi.tests.test_runLog module": [[393, "module-armi.tests.test_runLog"]], "armi.tests.test_tests module": [[394, "module-armi.tests.test_tests"]], "armi.tests.test_user_plugins module": [[395, "module-armi.tests.test_user_plugins"]], "armi.utils package": [[396, "module-armi.utils"]], "armi.utils.asciimaps module": [[397, "module-armi.utils.asciimaps"]], "armi.utils.codeTiming module": [[398, "module-armi.utils.codeTiming"]], "armi.utils.customExceptions module": [[399, "module-armi.utils.customExceptions"]], "armi.utils.densityTools module": [[400, "module-armi.utils.densityTools"]], "armi.utils.directoryChangers module": [[401, "module-armi.utils.directoryChangers"]], "armi.utils.directoryChangersMpi module": [[402, "module-armi.utils.directoryChangersMpi"]], "armi.utils.dynamicImporter module": [[403, "module-armi.utils.dynamicImporter"]], "armi.utils.flags module": [[404, "module-armi.utils.flags"]], "armi.utils.gridEditor module": [[405, "armi-utils-grideditor-module"]], "armi.utils.hexagon module": [[406, "module-armi.utils.hexagon"]], "armi.utils.iterables module": [[407, "module-armi.utils.iterables"]], "armi.utils.mathematics module": [[408, "module-armi.utils.mathematics"]], "armi.utils.outputCache module": [[409, "module-armi.utils.outputCache"]], "API usage": [[409, "api-usage"]], "armi.utils.parsing module": [[410, "module-armi.utils.parsing"]], "armi.utils.pathTools module": [[411, "module-armi.utils.pathTools"]], "armi.utils.plotting module": [[412, "module-armi.utils.plotting"]], "armi.utils.properties module": [[413, "module-armi.utils.properties"]], "armi.utils.reportPlotting module": [[414, "module-armi.utils.reportPlotting"]], "armi.utils.tabulate module": [[415, "module-armi.utils.tabulate"]], "Usage": [[415, "usage"]], "Table headers": [[415, "table-headers"]], "Column and Headers alignment": [[415, "column-and-headers-alignment"]], "Table formats": [[415, "table-formats"]], "Number parsing": [[415, "number-parsing"]], "Column Widths and Auto Line Wrapping": [[415, "column-widths-and-auto-line-wrapping"]], "armi.utils.tests package": [[416, "module-armi.utils.tests"]], "armi.utils.tests.test_asciimaps module": [[417, "module-armi.utils.tests.test_asciimaps"]], "armi.utils.tests.test_codeTiming module": [[418, "module-armi.utils.tests.test_codeTiming"]], "armi.utils.tests.test_custom_exceptions module": [[419, "module-armi.utils.tests.test_custom_exceptions"]], "armi.utils.tests.test_densityTools module": [[420, "module-armi.utils.tests.test_densityTools"]], "armi.utils.tests.test_directoryChangers module": [[421, "module-armi.utils.tests.test_directoryChangers"]], "armi.utils.tests.test_directoryChangersMpi module": [[422, "module-armi.utils.tests.test_directoryChangersMpi"]], "armi.utils.tests.test_flags module": [[423, "module-armi.utils.tests.test_flags"]], "armi.utils.tests.test_hexagon module": [[424, "module-armi.utils.tests.test_hexagon"]], "armi.utils.tests.test_iterables module": [[425, "module-armi.utils.tests.test_iterables"]], "armi.utils.tests.test_mathematics module": [[426, "module-armi.utils.tests.test_mathematics"]], "armi.utils.tests.test_outputCache module": [[427, "module-armi.utils.tests.test_outputCache"]], "armi.utils.tests.test_parsing module": [[428, "module-armi.utils.tests.test_parsing"]], "armi.utils.tests.test_pathTools module": [[429, "module-armi.utils.tests.test_pathTools"]], "armi.utils.tests.test_plotting module": [[430, "module-armi.utils.tests.test_plotting"]], "armi.utils.tests.test_properties module": [[431, "module-armi.utils.tests.test_properties"]], "armi.utils.tests.test_reportPlotting module": [[432, "module-armi.utils.tests.test_reportPlotting"]], "armi.utils.tests.test_tabulate module": [[433, "module-armi.utils.tests.test_tabulate"]], "armi.utils.tests.test_textProcessors module": [[434, "module-armi.utils.tests.test_textProcessors"]], "armi.utils.tests.test_triangle module": [[435, "module-armi.utils.tests.test_triangle"]], "armi.utils.tests.test_units module": [[436, "module-armi.utils.tests.test_units"]], "armi.utils.tests.test_utils module": [[437, "module-armi.utils.tests.test_utils"]], "armi.utils.textProcessors module": [[438, "module-armi.utils.textProcessors"]], "armi.utils.triangle module": [[439, "module-armi.utils.triangle"]], "armi.utils.units module": [[440, "module-armi.utils.units"]], "armi": [[441, "armi"]], "Documenting ARMI": [[442, "documenting-armi"]], "Building the documentation": [[442, "building-the-documentation"]], "Documentation for ARMI plugins": [[442, "documentation-for-armi-plugins"]], "Linking to ARMI documentation from plugins": [[442, "linking-to-armi-documentation-from-plugins"]], "Automatically building apidocs of namespace packages": [[442, "automatically-building-apidocs-of-namespace-packages"]], "Updating the Gallery": [[442, "updating-the-gallery"]], "Using Jupyter notebooks": [[442, "using-jupyter-notebooks"]], "Entry Points": [[443, "entry-points"], [445, "entry-points"]], "First Time Contributors Guide": [[444, "first-time-contributors-guide"]], "Help Wanted": [[444, "help-wanted"]], "Testing": [[444, "testing"]], "Submitting Changes": [[444, "submitting-changes"]], "Licensing of Tools": [[444, "licensing-of-tools"]], "Framework Architecture": [[445, "framework-architecture"]], "The Reactor Model": [[445, "the-reactor-model"]], "Finding objects in a model": [[445, "finding-objects-in-a-model"]], "Parameters": [[445, "parameters"]], "Converters": [[445, "converters"]], "Blueprints": [[445, "blueprints"]], "Operators": [[445, "operators"]], "The Standard Operator": [[445, "the-standard-operator"]], "The Snapshots Operator": [[445, "the-snapshots-operator"]], "The Interface Stack": [[445, "the-interface-stack"]], "Interface Interaction Hooks": [[445, "interface-interaction-hooks"]], "Adding a new interface": [[445, "adding-a-new-interface"]], "How interfaces get called": [[445, "how-interfaces-get-called"]], "Plugins": [[445, "plugins"]], "Developer Docs": [[446, "developer-docs"]], "Making ARMI-based Apps": [[447, "making-armi-based-apps"]], "Heads up": [[447, null]], "ARMI Plugins": [[447, "armi-plugins"]], "Some implementation details": [[447, "some-implementation-details"]], "Making your own Plugin": [[447, "making-your-own-plugin"]], "ARMI-Based Applications": [[447, "armi-based-applications"]], "Parallel Code in ARMI": [[448, "parallel-code-in-armi"]], "MPI communication crash course": [[448, "mpi-communication-crash-course"]], "MPI Communication within ARMI": [[448, "mpi-communication-within-armi"]], "Example using bcast": [[448, "example-using-bcast"]], "Example using scatter": [[448, "example-using-scatter"]], "A simplified approach": [[448, "a-simplified-approach"]], "Profiling ARMI": [[449, "profiling-armi"]], "Reports in ARMI": [[450, "reports-in-armi"]], "The Hook: getReportContents()": [[450, "the-hook-getreportcontents"]], "What is ReportContent?": [[450, "what-is-reportcontent"]], "Sections": [[450, "sections"]], "Tables": [[450, "tables"]], "Images": [[450, "images"]], "TimeSeries": [[450, "timeseries"]], "HTML Elements": [[450, "html-elements"]], "Summary": [[450, "summary"]], "Standards and Practices for Coding": [[451, "standards-and-practices-for-coding"]], "Code formatting with Black": [[451, "code-formatting-with-black"]], "Address the ruff warnings": [[451, "address-the-ruff-warnings"]], "Remove commented-out code": [[451, "remove-commented-out-code"]], "Avoid hard-coding run parameters": [[451, "avoid-hard-coding-run-parameters"]], "Avoid the global keyword": [[451, "avoid-the-global-keyword"]], "Naming conventions": [[451, "naming-conventions"]], "Use meaningful names": [[451, "use-meaningful-names"]], "General conventions": [[451, "general-conventions"]], "Naming quick-reference": [[451, "naming-quick-reference"]], "Common naming conventions within ARMI": [[451, "common-naming-conventions-within-armi"]], "Prefer shorter methods": [[451, "prefer-shorter-methods"]], "Avoid repeating code": [[451, "avoid-repeating-code"]], "Public methods should have docstrings": [[451, "public-methods-should-have-docstrings"]], "Unit tests": [[451, "unit-tests"]], "Import statements": [[451, "import-statements"]], "Import ordering": [[451, "import-ordering"]], "Don\u2019t create naked exceptions.": [[451, "don-t-create-naked-exceptions"]], "Data model": [[451, "data-model"]], "Input files": [[451, "input-files"]], "General do\u2019s and don\u2019ts": [[451, "general-do-s-and-don-ts"]], "Tooling and Infrastructure": [[452, "tooling-and-infrastructure"]], "Good Commit Messages": [[452, "good-commit-messages"]], "Good Pull Requests": [[452, "good-pull-requests"]], "One Idea = One PR": [[452, "one-idea-one-pr"]], "Don\u2019t open until it is ready": [[452, "don-t-open-until-it-is-ready"]], "Test It": [[452, "test-it"]], "Document It": [[452, "document-it"]], "Watch for Requirements": [[452, "watch-for-requirements"]], "Add Release Notes": [[452, "add-release-notes"]], "Packaging and dependency management": [[452, "packaging-and-dependency-management"]], "pyproject.toml": [[452, "pyproject-toml"]], "Third-Party Licensing": [[452, "third-party-licensing"]], "Releasing a New Version of ARMI": [[452, "releasing-a-new-version-of-armi"]], "Logging with runLog": [[452, "logging-with-runlog"]], "Blocking Duplicate Logs": [[452, "blocking-duplicate-logs"]], "Module-Level Logging": [[452, "module-level-logging"]], "Gallery": [[453, "gallery"], [478, "gallery"], [495, "gallery"]], "Analysis": [[454, "analysis"], [457, "analysis"], [478, "analysis"], [495, "analysis"]], "Applications": [[455, "applications"], [462, "applications"], [478, "applications"], [495, "applications"]], "Framework": [[456, "framework"], [463, "framework"], [478, "framework"], [495, "framework"]], "Write MCNP Material Cards": [[458, "write-mcnp-material-cards"]], "Hex block to RZ geometry conversion": [[459, "hex-block-to-rz-geometry-conversion"]], "Hex reactor to RZ geometry conversion": [[460, "hex-reactor-to-rz-geometry-conversion"]], "Computation times": [[461, "computation-times"], [477, "computation-times"]], "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion": [[464, "computing-component-volume-fractions-on-a-block-with-automatic-thermal-expansion"]], "Plot a chart of the nuclides.": [[465, "plot-a-chart-of-the-nuclides"]], "More details": [[465, null]], "Computing Reaction Rates on a Block.": [[466, "computing-reaction-rates-on-a-block"]], "Make a hex grid.": [[468, "make-a-hex-grid"]], "Make a Cartesian grid.": [[469, "make-a-cartesian-grid"]], "Make a Theta-R-Z grid.": [[470, "make-a-theta-r-z-grid"]], "Plotting Multi-group XS from ISOTXS.": [[471, "plotting-multi-group-xs-from-isotxs"]], "Plotting a multi-group scatter matrix.": [[472, "plotting-a-multi-group-scatter-matrix"]], "Listing of Material Library.": [[473, "listing-of-material-library"]], "Build Reactor Inputs Programmatically.": [[474, "build-reactor-inputs-programmatically"]], "Plot a reactor facemap.": [[475, "plot-a-reactor-facemap"]], "Transmutation and decay reactions.": [[476, "transmutation-and-decay-reactions"]], "Glossary": [[479, "glossary"]], "ARMI": [[480, "armi"]], "Quick links": [[480, "id3"]], "Quick start": [[480, "quick-start"]], "Background": [[480, "background"]], "Communication and coupling": [[480, "communication-and-coupling"]], "Automation": [[480, "automation"]], "New analysis and physics capabilities": [[480, "new-analysis-and-physics-capabilities"]], "Use cases": [[480, "use-cases"]], "The Research Scientist": [[480, "the-research-scientist"]], "The Nuclear Startup Engineer": [[480, "the-nuclear-startup-engineer"]], "Operating and Vendor Engineers": [[480, "operating-and-vendor-engineers"]], "The Enthusiast": [[480, "the-enthusiast"]], "History of ARMI": [[480, "history-of-armi"]], "System Requirements": [[480, "system-requirements"]], "Getting help": [[480, "getting-help"]], "Disclaimers": [[480, "disclaimers"]], "License": [[480, "license"]], "Installation": [[481, "installation"], [508, "installation"]], "Prerequisites": [[481, "prerequisites"], [508, "prerequisites"]], "The right Python command": [[481, null], [508, null]], "Preparing a Virtual Environment": [[481, "preparing-a-virtual-environment"], [508, "preparing-a-virtual-environment"]], "Getting the code": [[481, "getting-the-code"], [508, "getting-the-code"]], "Step 0: Update PIP": [[481, "step-0-update-pip"], [508, "step-0-update-pip"]], "Option 1: Install as a library": [[481, "option-1-install-as-a-library"], [508, "option-1-install-as-a-library"]], "Option 2: Install as a repository (for developers)": [[481, "option-2-install-as-a-repository-for-developers"], [508, "option-2-install-as-a-repository-for-developers"]], "Verifying installation": [[481, "verifying-installation"], [508, "verifying-installation"]], "Optional Setup": [[481, "optional-setup"], [508, "optional-setup"]], "GUI input": [[481, "gui-input"], [508, "gui-input"]], "GUI output": [[481, "gui-output"], [508, "gui-output"]], "ARMI v0.1 Release Notes": [[482, "armi-v0-1-release-notes"]], "ARMI v0.1.7": [[482, "armi-v0-1-7"]], "API changes": [[482, "api-changes"]], "Bug fixes": [[482, "bug-fixes"], [483, "bug-fixes"], [483, "id6"], [483, "id9"], [483, "id13"], [483, "id16"], [483, "id19"], [483, "id24"], [483, "id26"], [483, "id28"], [483, "id31"]], "ARMI v0.1.6": [[482, "armi-v0-1-6"]], "Deprecations": [[482, "deprecations"]], "Bugfixes": [[482, "bugfixes"], [482, "id1"], [482, "id2"], [482, "id4"]], "ARMI v0.1.5": [[482, "armi-v0-1-5"]], "User-facing enhancements": [[482, "user-facing-enhancements"], [482, "id3"], [482, "id6"]], "Backend changes": [[482, "backend-changes"], [482, "id5"], [482, "id7"]], "ARMI v0.1.4": [[482, "armi-v0-1-4"]], "ARMI v0.1.3": [[482, "armi-v0-1-3"]], "ARMI v0.1.2": [[482, "armi-v0-1-2"]], "Hotfixes": [[482, "hotfixes"]], "ARMI v0.1.1": [[482, "armi-v0-1-1"]], "ARMI v0.1.0": [[482, "armi-v0-1-0"]], "ARMI v0.2 Release Notes": [[483, "armi-v0-2-release-notes"]], "ARMI v0.2.9": [[483, "armi-v0-2-9"]], "What\u2019s new in ARMI": [[483, "what-s-new-in-armi"], [483, "id5"], [483, "id7"], [483, "id11"], [483, "id15"], [483, "id17"], [483, "id22"]], "Build changes": [[483, "build-changes"]], "ARMI v0.2.8": [[483, "armi-v0-2-8"]], "ARMI v0.2.7": [[483, "armi-v0-2-7"]], "ARMI v0.2.6": [[483, "armi-v0-2-6"]], "ARMI v0.2.5": [[483, "armi-v0-2-5"]], "ARMI v0.2.4": [[483, "armi-v0-2-4"]], "ARMI v0.2.3": [[483, "armi-v0-2-3"]], "ARMI v0.2.2": [[483, "armi-v0-2-2"]], "What\u2019s new in ARMI v0.2.2": [[483, "what-s-new-in-armi-v0-2-2"]], "ARMI v0.2.1": [[483, "armi-v0-2-1"]], "What\u2019s new in ARMI v0.2.1": [[483, "what-s-new-in-armi-v0-2-1"]], "ARMI v0.2.0": [[483, "armi-v0-2-0"]], "What\u2019s new in ARMI v0.2.0": [[483, "what-s-new-in-armi-v0-2-0"]], "Backwards incompatible changes": [[483, "backwards-incompatible-changes"]], "ARMI v0.3 Release Notes": [[484, "armi-v0-3-release-notes"]], "ARMI v0.3.0": [[484, "armi-v0-3-0"]], "What\u2019s new in ARMI?": [[484, "what-s-new-in-armi"]], "Bug Fixes": [[484, "bug-fixes"], [485, "bug-fixes"], [485, "id11"]], "Quality Work": [[484, "quality-work"], [485, "quality-work"], [485, "id12"]], "ARMI v0.4 Release Notes": [[485, "armi-v0-4-release-notes"]], "ARMI v0.4.1": [[485, "armi-v0-4-1"]], "New Features": [[485, "new-features"], [485, "id7"]], "API Changes": [[485, "api-changes"], [485, "id8"]], "Changes that Affect Requirements": [[485, "changes-that-affect-requirements"], [485, "id13"]], "ARMI v0.4.0": [[485, "armi-v0-4-0"]], "Release Notes": [[486, "release-notes"]], "Hands-on at the ARMI Terminal": [[487, "Hands-on-at-the-ARMI-Terminal"]], "Initializing and Exploring the ARMI Model": [[487, "Initializing-and-Exploring-the-ARMI-Model"]], "Quiz Question 1": [[487, null]], "Exploring the state of the reactor": [[487, "Exploring-the-state-of-the-reactor"]], "Modifying the state of the reactor": [[487, "Modifying-the-state-of-the-reactor"]], "Modifying number densities": [[487, "Modifying-number-densities"]], "Saving state to disk": [[487, "Saving-state-to-disk"]], "Fuel management": [[487, "Fuel-management"]], "Loading from the database": [[487, "Loading-from-the-database"]], "Tutorials": [[488, "tutorials"]], "Making your first ARMI-based App": [[489, "making-your-first-armi-based-app"]], "Starting a new app": [[489, "starting-a-new-app"]], "Registering the app with ARMI": [[489, "registering-the-app-with-armi"]], "Defining the app class": [[489, "defining-the-app-class"]], "Apps vs. plugins vs. interfaces": [[489, null]], "Defining the physics plugin": [[489, "defining-the-physics-plugin"]], "What are plugins again?": [[489, null]], "Defining custom settings": [[489, "defining-custom-settings"]], "Creating the physics kernels": [[489, "creating-the-physics-kernels"]], "Making the (dummy) flux kernel": [[489, "making-the-dummy-flux-kernel"]], "Making the thermal/hydraulics kernel": [[489, "making-the-thermal-hydraulics-kernel"]], "Adding entry points": [[489, "adding-entry-points"]], "Running the app and debugging": [[489, "running-the-app-and-debugging"]], "Windows tip": [[489, null]], "Submodule tip": [[489, null]], "Yet another way": [[489, null]], "Adding a new material": [[489, "adding-a-new-material"]], "Why __main__.py?": [[489, null]], "Checking the output": [[489, "checking-the-output"]], "Fancy XDMF format": [[489, null]], "Bonus: Ad-hoc UserPlugins": [[489, "bonus-ad-hoc-userplugins"]], "Define the UserPlugin in Python": [[489, "define-the-userplugin-in-python"]], "Define a list of UserPlugins in the Settings File": [[489, "define-a-list-of-userplugins-in-the-settings-file"]], "The ARMI Material Library": [[490, "The-ARMI-Material-Library"]], "The ARMI Nuclide and Element Packages": [[491, "The-ARMI-Nuclide-and-Element-Packages"]], "Accessing Individual Nuclide Data/Attributes": [[491, "Accessing-Individual-Nuclide-Data/Attributes"]], "How many total nuclides and elements are defined in the framework?": [[491, "How-many-total-nuclides-and-elements-are-defined-in-the-framework?"]], "Looking up nuclide and elemental data for U-235": [[491, "Looking-up-nuclide-and-elemental-data-for-U-235"]], "Looking up nuclide and elemental data for Li-7": [[491, "Looking-up-nuclide-and-elemental-data-for-Li-7"]], "Exploring elemental Lithium data": [[491, "Exploring-elemental-Lithium-data"]], "Plotting the Chart of the Nuclides": [[491, "Plotting-the-Chart-of-the-Nuclides"]], "Parameter sweeps": [[492, "Parameter-sweeps"]], "A simple one-dimensional parameter sweep": [[492, "A-simple-one-dimensional-parameter-sweep"]], "Modifying the reactor design": [[492, "Modifying-the-reactor-design"]], "A full factorial parameter sweep": [[492, "A-full-factorial-parameter-sweep"]], "Post-processing the results of the sweep": [[492, "Post-processing-the-results-of-the-sweep"]], "Building input files for a fast reactor": [[493, "building-input-files-for-a-fast-reactor"]], "Setting up the blueprints": [[493, "setting-up-the-blueprints"], [494, "setting-up-the-blueprints"]], "Defining non-fuel blocks": [[493, "defining-non-fuel-blocks"]], "Radial Shields": [[493, "radial-shields"]], "Reflectors": [[493, "reflectors"]], "Control": [[493, "control"]], "Plenum": [[493, "plenum"]], "Defining how the blocks are arranged into assemblies": [[493, "defining-how-the-blocks-are-arranged-into-assemblies"]], "Defining the fuel assemblies": [[493, "defining-the-fuel-assemblies"]], "Defining the non-fuel assemblies": [[493, "defining-the-non-fuel-assemblies"]], "Specifying the core map": [[493, "specifying-the-core-map"]], "Specifying settings": [[493, "specifying-settings"]], "Defining fuel management": [[493, "defining-fuel-management"], [494, "defining-fuel-management"]], "Building input files for a thermal reactor": [[494, "building-input-files-for-a-thermal-reactor"]], "Custom isotopic vectors": [[494, "custom-isotopic-vectors"]], "The UO2 block": [[494, "the-uo2-block"]], "The MOX block": [[494, "the-mox-block"]], "The moderator block": [[494, "the-moderator-block"]], "The 3-D Assembly definitions": [[494, "the-3-d-assembly-definitions"]], "The Systems definition": [[494, "the-systems-definition"]], "The Grids definitions": [[494, "the-grids-definitions"]], "Nuclide Flags": [[494, "nuclide-flags"], [502, "nuclide-flags"]], "The settings file": [[494, "the-settings-file"]], "Ok, so now what?": [[494, "ok-so-now-what"]], "Accessing Entry Points": [[496, "accessing-entry-points"]], "Reports Entry Point": [[496, "reports-entry-point"]], "Assembly Parameters": [[497, "assembly-parameters"]], "Assembly Parameters from Framework": [[497, "id1"]], "Block Parameters": [[498, "block-parameters"]], "Block Parameters from Framework": [[498, "id1"]], "Block Parameters from FuelPerformancePlugin": [[498, "id2"]], "Block Parameters from NeutronicsPlugin": [[498, "id3"]], "Block Parameters from ThermalHydraulicsPlugin": [[498, "id4"]], "Component Parameters": [[499, "component-parameters"]], "Component Parameters from Framework": [[499, "id1"]], "Core Parameters": [[500, "core-parameters"]], "Core Parameters from Framework": [[500, "id1"]], "Core Parameters from NeutronicsPlugin": [[500, "id2"]], "User Docs": [[501, "user-docs"]], "Inputs": [[502, "inputs"]], "YAML Files": [[502, "yaml-files"]], "The Settings Input File": [[502, "the-settings-input-file"]], "The ARMI GUI": [[502, "the-armi-gui"]], "The assembly clicker": [[502, "the-assembly-clicker"]], "The ARMI Environment Tab": [[502, "the-armi-environment-tab"]], "Some special settings": [[502, "some-special-settings"]], "Detail assemblies": [[502, "detail-assemblies"]], "Kinetics settings": [[502, "kinetics-settings"]], "Cycle history": [[502, "cycle-history"]], "Restart cases": [[502, "restart-cases"]], "The Blueprints Input File": [[502, "the-blueprints-input-file"]], "Blueprint sections": [[502, "blueprint-sections"]], "Blocks and Components": [[502, "blocks-and-components"]], "Defining a Component": [[502, "defining-a-component"]], "Component Types": [[502, "component-types"]], "Component Links": [[502, "component-links"]], "Pin lattices": [[502, "pin-lattices"]], "Flags and naming": [[502, "flags-and-naming"]], "Assemblies": [[502, "assemblies"]], "Systems": [[502, "systems"]], "Plugin Behavior": [[502, "plugin-behavior"]], "Grids": [[502, "grids"]], "Custom Isotopics": [[502, "custom-isotopics"]], "Advanced topics": [[502, "advanced-topics"]], "Overlapping shapes": [[502, "overlapping-shapes"]], "Component area modifications": [[502, "component-area-modifications"]], "Putting it all together to make a Block": [[502, "putting-it-all-together-to-make-a-block"]], "Making blocks with unshaped components": [[502, "making-blocks-with-unshaped-components"]], "Fuel Management Input": [[502, "fuel-management-input"]], "Fuel Management Operations": [[502, "fuel-management-operations"]], "swapAssemblies": [[502, "swapassemblies"]], "dischargeSwap": [[502, "dischargeswap"]], "swapCascade": [[502, "swapcascade"]], "Choosing Assemblies to Move": [[502, "choosing-assemblies-to-move"]], "Fuel Management Examples": [[502, "fuel-management-examples"]], "Convergent-Divergent": [[502, "convergent-divergent"]], "Fuel Management Tips": [[502, "fuel-management-tips"]], "Running a branch search": [[502, "running-a-branch-search"]], "Settings Report": [[502, "settings-report"]], "ARMI Settings": [[502, "id14"]], "Accessing Data in ARMI": [[503, "accessing-data-in-armi"]], "Settings and State Variables": [[503, "settings-and-state-variables"]], "Accessing Some Interesting Info": [[503, "accessing-some-interesting-info"]], "Outputs": [[504, "outputs"]], "The Standard Output": [[504, "the-standard-output"]], "The Database File": [[504, "the-database-file"]], "Loading Reactor State": [[504, "loading-reactor-state"]], "Extracting Reactor History": [[504, "extracting-reactor-history"]], "Extracting Settings and Blueprints": [[504, "extracting-settings-and-blueprints"]], "File format": [[504, "file-format"]], "Database Structure": [[504, "database-structure"]], "Database structure": [[504, "id1"]], "Physics Coupling": [[505, "physics-coupling"]], "Loose Coupling": [[505, "loose-coupling"]], "Tight Coupling": [[505, "tight-coupling"]], "Eigenvalue": [[505, "eigenvalue"]], "Block-wise Power": [[505, "block-wise-power"]], "The Global Flux Interface": [[505, "the-global-flux-interface"]], "Radial and Axial Expansion and Contraction": [[506, "radial-and-axial-expansion-and-contraction"]], "Thermal Expansion": [[506, "thermal-expansion"]], "Reactor Parameters": [[507, "reactor-parameters"]], "Reactor Parameters from Framework": [[507, "id1"]]}, "indexentries": {"applyasynciowindowsworkaround() (in module armi)": [[0, "armi.applyAsyncioWindowsWorkaround"]], "armi": [[0, "module-armi"], [479, "term-ARMI"]], "configure() (in module armi)": [[0, "armi.configure"]], "disablefutureconfigures() (in module armi)": [[0, "armi.disableFutureConfigures"]], "getapp() (in module armi)": [[0, "armi.getApp"]], "getdefaultpluginmanager() (in module armi)": [[0, "armi.getDefaultPluginManager"]], "getdefaultplugins() (in module armi)": [[0, "armi.getDefaultPlugins"]], "getpluginmanager() (in module armi)": [[0, "armi.getPluginManager"]], "getpluginmanagerorfail() (in module armi)": [[0, "armi.getPluginManagerOrFail"]], "init() (in module armi)": [[0, "armi.init"]], "isconfigured() (in module armi)": [[0, "armi.isConfigured"]], "isstablereleaseversion() (in module armi)": [[0, "armi.isStableReleaseVersion"]], "module": [[0, "module-armi"], [1, "module-armi.apps"], [2, "module-armi.bookkeeping"], [3, "module-armi.bookkeeping.db"], [4, "module-armi.bookkeeping.db.compareDB3"], [5, "module-armi.bookkeeping.db.database3"], [6, "module-armi.bookkeeping.db.databaseInterface"], [7, "module-armi.bookkeeping.db.factory"], [8, "module-armi.bookkeeping.db.jaggedArray"], [9, "module-armi.bookkeeping.db.layout"], [10, "module-armi.bookkeeping.db.passiveDBLoadPlugin"], [11, "module-armi.bookkeeping.db.permissions"], [12, "module-armi.bookkeeping.db.tests"], [13, "module-armi.bookkeeping.db.tests.test_comparedb3"], [14, "module-armi.bookkeeping.db.tests.test_database3"], [15, "module-armi.bookkeeping.db.tests.test_databaseInterface"], [16, "module-armi.bookkeeping.db.tests.test_jaggedArray"], [17, "module-armi.bookkeeping.db.tests.test_layout"], [18, "module-armi.bookkeeping.db.typedefs"], [19, "module-armi.bookkeeping.historyTracker"], [20, "module-armi.bookkeeping.mainInterface"], [21, "module-armi.bookkeeping.memoryProfiler"], [22, "module-armi.bookkeeping.report"], [23, "module-armi.bookkeeping.report.data"], [24, "module-armi.bookkeeping.report.html"], [25, "module-armi.bookkeeping.report.newReportUtils"], [26, "module-armi.bookkeeping.report.newReports"], [27, "module-armi.bookkeeping.report.reportInterface"], [28, "module-armi.bookkeeping.report.reportingUtils"], [29, "module-armi.bookkeeping.report.tests"], [30, "module-armi.bookkeeping.report.tests.test_newReport"], [31, "module-armi.bookkeeping.report.tests.test_report"], [32, "module-armi.bookkeeping.snapshotInterface"], [33, "module-armi.bookkeeping.tests"], [34, "module-armi.bookkeeping.tests.test_historyTracker"], [35, "module-armi.bookkeeping.tests.test_memoryProfiler"], [36, "module-armi.bookkeeping.tests.test_snapshot"], [37, "module-armi.bookkeeping.visualization"], [38, "module-armi.bookkeeping.visualization.dumper"], [39, "module-armi.bookkeeping.visualization.entryPoint"], [40, "module-armi.bookkeeping.visualization.tests"], [41, "module-armi.bookkeeping.visualization.tests.test_vis"], [42, "module-armi.bookkeeping.visualization.tests.test_xdmf"], [43, "module-armi.bookkeeping.visualization.utils"], [44, "module-armi.bookkeeping.visualization.vtk"], [45, "module-armi.bookkeeping.visualization.xdmf"], [46, "module-armi.cases"], [47, "module-armi.cases.case"], [48, "module-armi.cases.inputModifiers"], [49, "module-armi.cases.inputModifiers.inputModifiers"], [50, "module-armi.cases.inputModifiers.neutronicsModifiers"], [51, "module-armi.cases.inputModifiers.pinTypeInputModifiers"], [52, "module-armi.cases.inputModifiers.tests"], [53, "module-armi.cases.inputModifiers.tests.test_inputModifiers"], [54, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"], [55, "module-armi.cases.suite"], [56, "module-armi.cases.suiteBuilder"], [57, "module-armi.cases.tests"], [58, "module-armi.cases.tests.test_cases"], [59, "module-armi.cases.tests.test_suiteBuilder"], [60, "module-armi.cli"], [61, "module-armi.cli.checkInputs"], [62, "module-armi.cli.cleanTemps"], [63, "module-armi.cli.clone"], [64, "module-armi.cli.compareCases"], [65, "module-armi.cli.database"], [66, "module-armi.cli.entryPoint"], [67, "module-armi.cli.gridGui"], [68, "module-armi.cli.migrateInputs"], [69, "module-armi.cli.modify"], [70, "module-armi.cli.reportsEntryPoint"], [71, "module-armi.cli.run"], [72, "module-armi.cli.runSuite"], [73, "module-armi.cli.tests"], [74, "module-armi.cli.tests.test_runEntryPoint"], [75, "module-armi.cli.tests.test_runSuite"], [76, "module-armi.conftest"], [77, "module-armi.context"], [78, "module-armi.interfaces"], [79, "module-armi.materials"], [80, "module-armi.materials.air"], [81, "module-armi.materials.alloy200"], [82, "module-armi.materials.b4c"], [83, "module-armi.materials.be9"], [84, "module-armi.materials.caH2"], [85, "module-armi.materials.californium"], [86, "module-armi.materials.concrete"], [87, "module-armi.materials.copper"], [88, "module-armi.materials.cs"], [89, "module-armi.materials.custom"], [90, "module-armi.materials.graphite"], [91, "module-armi.materials.hafnium"], [92, "module-armi.materials.hastelloyN"], [93, "module-armi.materials.ht9"], [94, "module-armi.materials.inconel"], [95, "module-armi.materials.inconel600"], [96, "module-armi.materials.inconel625"], [97, "module-armi.materials.inconel800"], [98, "module-armi.materials.inconelPE16"], [99, "module-armi.materials.inconelX750"], [100, "module-armi.materials.lead"], [101, "module-armi.materials.leadBismuth"], [102, "module-armi.materials.lithium"], [103, "module-armi.materials.magnesium"], [104, "module-armi.materials.material"], [105, "module-armi.materials.mgO"], [106, "module-armi.materials.mixture"], [107, "module-armi.materials.molybdenum"], [108, "module-armi.materials.mox"], [109, "module-armi.materials.nZ"], [110, "module-armi.materials.potassium"], [111, "module-armi.materials.scandiumOxide"], [112, "module-armi.materials.siC"], [113, "module-armi.materials.sodium"], [114, "module-armi.materials.sodiumChloride"], [115, "module-armi.materials.sulfur"], [116, "module-armi.materials.tZM"], [117, "module-armi.materials.tantalum"], [118, "module-armi.materials.tests"], [119, "module-armi.materials.tests.test__init__"], [120, "module-armi.materials.tests.test_air"], [121, "module-armi.materials.tests.test_b4c"], [122, "module-armi.materials.tests.test_be9"], [123, "module-armi.materials.tests.test_graphite"], [124, "module-armi.materials.tests.test_lithium"], [125, "module-armi.materials.tests.test_materials"], [126, "module-armi.materials.tests.test_sic"], [127, "module-armi.materials.tests.test_sulfur"], [128, "module-armi.materials.tests.test_thoriumOxide"], [129, "module-armi.materials.tests.test_uZr"], [130, "module-armi.materials.tests.test_water"], [131, "module-armi.materials.thU"], [132, "module-armi.materials.thorium"], [133, "module-armi.materials.thoriumOxide"], [134, "module-armi.materials.uThZr"], [135, "module-armi.materials.uZr"], [136, "module-armi.materials.uranium"], [137, "module-armi.materials.uraniumOxide"], [138, "module-armi.materials.void"], [139, "module-armi.materials.water"], [140, "module-armi.materials.yttriumOxide"], [141, "module-armi.materials.zincOxide"], [142, "module-armi.materials.zr"], [143, "module-armi.meta"], [144, "module-armi.migration"], [145, "module-armi.migration.base"], [146, "module-armi.migration.m0_1_3"], [147, "module-armi.migration.m0_1_6"], [148, "module-armi.migration.tests"], [149, "module-armi.migration.tests.test_m0_1_6"], [150, "module-armi.migration.tests.test_migration_base"], [151, "module-armi.mpiActions"], [152, "module-armi.nucDirectory"], [153, "module-armi.nucDirectory.elements"], [154, "module-armi.nucDirectory.nucDir"], [155, "module-armi.nucDirectory.nuclideBases"], [156, "module-armi.nucDirectory.tests"], [157, "module-armi.nucDirectory.tests.test_elements"], [158, "module-armi.nucDirectory.tests.test_nucDirectory"], [159, "module-armi.nucDirectory.tests.test_nuclideBases"], [160, "module-armi.nucDirectory.tests.test_thermalScattering"], [161, "module-armi.nucDirectory.tests.test_transmutations"], [162, "module-armi.nucDirectory.thermalScattering"], [163, "module-armi.nucDirectory.transmutations"], [164, "module-armi.nuclearDataIO"], [165, "module-armi.nuclearDataIO.cccc"], [166, "module-armi.nuclearDataIO.cccc.cccc"], [167, "module-armi.nuclearDataIO.cccc.compxs"], [168, "module-armi.nuclearDataIO.cccc.dif3d"], [169, "module-armi.nuclearDataIO.cccc.dlayxs"], [170, "module-armi.nuclearDataIO.cccc.fixsrc"], [171, "module-armi.nuclearDataIO.cccc.gamiso"], [172, "module-armi.nuclearDataIO.cccc.geodst"], [173, "module-armi.nuclearDataIO.cccc.isotxs"], [174, "module-armi.nuclearDataIO.cccc.labels"], [175, "module-armi.nuclearDataIO.cccc.nhflux"], [176, "module-armi.nuclearDataIO.cccc.pmatrx"], [177, "module-armi.nuclearDataIO.cccc.pwdint"], [178, "module-armi.nuclearDataIO.cccc.rtflux"], [179, "module-armi.nuclearDataIO.cccc.rzflux"], [180, "module-armi.nuclearDataIO.cccc.tests"], [181, "module-armi.nuclearDataIO.cccc.tests.test_cccc"], [182, "module-armi.nuclearDataIO.cccc.tests.test_compxs"], [183, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"], [184, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"], [185, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"], [186, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"], [187, "module-armi.nuclearDataIO.cccc.tests.test_geodst"], [188, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"], [189, "module-armi.nuclearDataIO.cccc.tests.test_labels"], [190, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"], [191, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"], [192, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"], [193, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"], [194, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"], [195, "module-armi.nuclearDataIO.nuclearFileMetadata"], [196, "module-armi.nuclearDataIO.tests"], [197, "module-armi.nuclearDataIO.tests.test_xsCollections"], [198, "module-armi.nuclearDataIO.tests.test_xsLibraries"], [199, "module-armi.nuclearDataIO.tests.test_xsNuclides"], [200, "module-armi.nuclearDataIO.xsCollections"], [201, "module-armi.nuclearDataIO.xsLibraries"], [202, "module-armi.nuclearDataIO.xsNuclides"], [203, "module-armi.operators"], [204, "module-armi.operators.operator"], [205, "module-armi.operators.operatorMPI"], [206, "module-armi.operators.runTypes"], [207, "module-armi.operators.settingsValidation"], [208, "module-armi.operators.snapshots"], [209, "module-armi.operators.tests"], [210, "module-armi.operators.tests.test_operatorSnapshots"], [211, "module-armi.operators.tests.test_operators"], [212, "module-armi.physics"], [213, "module-armi.physics.constants"], [214, "module-armi.physics.executers"], [215, "module-armi.physics.fuelCycle"], [216, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"], [217, "module-armi.physics.fuelCycle.fuelHandlerFactory"], [218, "module-armi.physics.fuelCycle.fuelHandlerInterface"], [219, "module-armi.physics.fuelCycle.fuelHandlers"], [220, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"], [221, "module-armi.physics.fuelCycle.settings"], [222, "module-armi.physics.fuelCycle.tests"], [223, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"], [224, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"], [225, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"], [226, "module-armi.physics.fuelPerformance"], [227, "module-armi.physics.fuelPerformance.executers"], [228, "module-armi.physics.fuelPerformance.parameters"], [229, "module-armi.physics.fuelPerformance.plugin"], [230, "module-armi.physics.fuelPerformance.settings"], [231, "module-armi.physics.fuelPerformance.tests"], [232, "module-armi.physics.fuelPerformance.tests.test_executers"], [233, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"], [234, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"], [235, "module-armi.physics.fuelPerformance.utils"], [236, "module-armi.physics.neutronics"], [237, "module-armi.physics.neutronics.const"], [238, "module-armi.physics.neutronics.crossSectionGroupManager"], [239, "module-armi.physics.neutronics.crossSectionSettings"], [240, "module-armi.physics.neutronics.diffIsotxs"], [241, "module-armi.physics.neutronics.energyGroups"], [242, "module-armi.physics.neutronics.fissionProductModel"], [243, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"], [244, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"], [245, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"], [246, "module-armi.physics.neutronics.fissionProductModel.tests"], [247, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"], [248, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"], [249, "module-armi.physics.neutronics.globalFlux"], [250, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"], [251, "module-armi.physics.neutronics.globalFlux.tests"], [252, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"], [253, "module-armi.physics.neutronics.latticePhysics"], [254, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"], [255, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"], [256, "module-armi.physics.neutronics.latticePhysics.tests"], [257, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"], [258, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"], [259, "module-armi.physics.neutronics.macroXSGenerationInterface"], [260, "module-armi.physics.neutronics.parameters"], [261, "module-armi.physics.neutronics.reports"], [262, "module-armi.physics.neutronics.settings"], [263, "module-armi.physics.neutronics.tests"], [264, "module-armi.physics.neutronics.tests.test_crossSectionManager"], [265, "module-armi.physics.neutronics.tests.test_crossSectionSettings"], [266, "module-armi.physics.neutronics.tests.test_crossSectionTable"], [267, "module-armi.physics.neutronics.tests.test_energyGroups"], [268, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"], [269, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"], [270, "module-armi.physics.safety"], [271, "module-armi.physics.tests"], [272, "module-armi.physics.tests.test_executers"], [273, "module-armi.physics.thermalHydraulics"], [274, "module-armi.physics.thermalHydraulics.const"], [275, "module-armi.physics.thermalHydraulics.parameters"], [276, "module-armi.physics.thermalHydraulics.plugin"], [277, "module-armi.physics.thermalHydraulics.settings"], [278, "module-armi.physics.thermalHydraulics.tests"], [279, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"], [280, "module-armi.pluginManager"], [281, "module-armi.plugins"], [282, "module-armi.reactor"], [283, "module-armi.reactor.assemblies"], [284, "module-armi.reactor.assemblyParameters"], [285, "module-armi.reactor.blockParameters"], [286, "module-armi.reactor.blocks"], [287, "module-armi.reactor.blueprints"], [288, "module-armi.reactor.blueprints.assemblyBlueprint"], [289, "module-armi.reactor.blueprints.blockBlueprint"], [290, "module-armi.reactor.blueprints.componentBlueprint"], [291, "module-armi.reactor.blueprints.gridBlueprint"], [292, "module-armi.reactor.blueprints.isotopicOptions"], [293, "module-armi.reactor.blueprints.reactorBlueprint"], [294, "module-armi.reactor.blueprints.tests"], [295, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"], [296, "module-armi.reactor.blueprints.tests.test_blockBlueprints"], [297, "module-armi.reactor.blueprints.tests.test_blueprints"], [298, "module-armi.reactor.blueprints.tests.test_componentBlueprint"], [299, "module-armi.reactor.blueprints.tests.test_customIsotopics"], [300, "module-armi.reactor.blueprints.tests.test_gridBlueprints"], [301, "module-armi.reactor.blueprints.tests.test_materialModifications"], [302, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"], [303, "module-armi.reactor.components"], [304, "module-armi.reactor.components.basicShapes"], [305, "module-armi.reactor.components.complexShapes"], [306, "module-armi.reactor.components.component"], [307, "module-armi.reactor.components.componentParameters"], [308, "module-armi.reactor.components.volumetricShapes"], [309, "module-armi.reactor.composites"], [310, "module-armi.reactor.converters"], [311, "module-armi.reactor.converters.axialExpansionChanger"], [312, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"], [313, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"], [314, "module-armi.reactor.converters.axialExpansionChanger.expansionData"], [315, "module-armi.reactor.converters.blockConverters"], [316, "module-armi.reactor.converters.geometryConverters"], [317, "module-armi.reactor.converters.meshConverters"], [318, "module-armi.reactor.converters.parameterSweeps"], [319, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"], [320, "module-armi.reactor.converters.pinTypeBlockConverters"], [321, "module-armi.reactor.converters.tests"], [322, "module-armi.reactor.converters.tests.test_axialExpansionChanger"], [323, "module-armi.reactor.converters.tests.test_blockConverter"], [324, "module-armi.reactor.converters.tests.test_geometryConverters"], [325, "module-armi.reactor.converters.tests.test_meshConverters"], [326, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"], [327, "module-armi.reactor.converters.tests.test_uniformMesh"], [328, "module-armi.reactor.converters.uniformMesh"], [329, "module-armi.reactor.cores"], [330, "module-armi.reactor.excoreStructure"], [331, "module-armi.reactor.flags"], [332, "module-armi.reactor.geometry"], [333, "module-armi.reactor.grids"], [334, "module-armi.reactor.grids.axial"], [335, "module-armi.reactor.grids.cartesian"], [336, "module-armi.reactor.grids.constants"], [337, "module-armi.reactor.grids.grid"], [338, "module-armi.reactor.grids.hexagonal"], [339, "module-armi.reactor.grids.locations"], [340, "module-armi.reactor.grids.structuredGrid"], [341, "module-armi.reactor.grids.thetarz"], [342, "module-armi.reactor.parameters"], [343, "module-armi.reactor.parameters.exceptions"], [344, "module-armi.reactor.parameters.parameterCollections"], [345, "module-armi.reactor.parameters.parameterDefinitions"], [346, "module-armi.reactor.parameters.resolveCollections"], [347, "module-armi.reactor.reactorParameters"], [348, "module-armi.reactor.reactors"], [349, "module-armi.reactor.spentFuelPool"], [350, "module-armi.reactor.systemLayoutInput"], [351, "module-armi.reactor.tests"], [352, "module-armi.reactor.tests.test_assemblies"], [353, "module-armi.reactor.tests.test_blocks"], [354, "module-armi.reactor.tests.test_components"], [355, "module-armi.reactor.tests.test_composites"], [356, "module-armi.reactor.tests.test_excoreStructures"], [357, "module-armi.reactor.tests.test_flags"], [358, "module-armi.reactor.tests.test_geometry"], [359, "module-armi.reactor.tests.test_parameters"], [360, "module-armi.reactor.tests.test_reactors"], [361, "module-armi.reactor.tests.test_rz_reactors"], [362, "module-armi.reactor.tests.test_zones"], [363, "module-armi.reactor.zones"], [364, "module-armi.runLog"], [365, "module-armi.settings"], [366, "module-armi.settings.caseSettings"], [367, "module-armi.settings.fwSettings"], [368, "module-armi.settings.fwSettings.databaseSettings"], [369, "module-armi.settings.fwSettings.globalSettings"], [370, "module-armi.settings.fwSettings.reportSettings"], [371, "module-armi.settings.fwSettings.tightCouplingSettings"], [372, "module-armi.settings.setting"], [373, "module-armi.settings.settingsIO"], [374, "module-armi.settings.settingsValidation"], [375, "module-armi.settings.tests"], [376, "module-armi.settings.tests.test_inspectors"], [377, "module-armi.settings.tests.test_settings"], [378, "module-armi.settings.tests.test_settingsIO"], [379, "module-armi.tests"], [380, "module-armi.tests.mockRunLogs"], [381, "module-armi.tests.refSmallReactorShuffleLogic"], [382, "module-armi.tests.test_apps"], [383, "module-armi.tests.test_armiTestHelper"], [384, "module-armi.tests.test_cartesian"], [385, "module-armi.tests.test_context"], [386, "module-armi.tests.test_interfaces"], [387, "module-armi.tests.test_lwrInputs"], [388, "module-armi.tests.test_mpiActions"], [389, "module-armi.tests.test_mpiFeatures"], [390, "module-armi.tests.test_mpiParameters"], [391, "module-armi.tests.test_notebooks"], [392, "module-armi.tests.test_plugins"], [393, "module-armi.tests.test_runLog"], [394, "module-armi.tests.test_tests"], [395, "module-armi.tests.test_user_plugins"], [396, "module-armi.utils"], [397, "module-armi.utils.asciimaps"], [398, "module-armi.utils.codeTiming"], [399, "module-armi.utils.customExceptions"], [400, "module-armi.utils.densityTools"], [401, "module-armi.utils.directoryChangers"], [402, "module-armi.utils.directoryChangersMpi"], [403, "module-armi.utils.dynamicImporter"], [404, "module-armi.utils.flags"], [406, "module-armi.utils.hexagon"], [407, "module-armi.utils.iterables"], [408, "module-armi.utils.mathematics"], [409, "module-armi.utils.outputCache"], [410, "module-armi.utils.parsing"], [411, "module-armi.utils.pathTools"], [412, "module-armi.utils.plotting"], [413, "module-armi.utils.properties"], [414, "module-armi.utils.reportPlotting"], [415, "module-armi.utils.tabulate"], [416, "module-armi.utils.tests"], [417, "module-armi.utils.tests.test_asciimaps"], [418, "module-armi.utils.tests.test_codeTiming"], [419, "module-armi.utils.tests.test_custom_exceptions"], [420, "module-armi.utils.tests.test_densityTools"], [421, "module-armi.utils.tests.test_directoryChangers"], [422, "module-armi.utils.tests.test_directoryChangersMpi"], [423, "module-armi.utils.tests.test_flags"], [424, "module-armi.utils.tests.test_hexagon"], [425, "module-armi.utils.tests.test_iterables"], [426, "module-armi.utils.tests.test_mathematics"], [427, "module-armi.utils.tests.test_outputCache"], [428, "module-armi.utils.tests.test_parsing"], [429, "module-armi.utils.tests.test_pathTools"], [430, "module-armi.utils.tests.test_plotting"], [431, "module-armi.utils.tests.test_properties"], [432, "module-armi.utils.tests.test_reportPlotting"], [433, "module-armi.utils.tests.test_tabulate"], [434, "module-armi.utils.tests.test_textProcessors"], [435, "module-armi.utils.tests.test_triangle"], [436, "module-armi.utils.tests.test_units"], [437, "module-armi.utils.tests.test_utils"], [438, "module-armi.utils.textProcessors"], [439, "module-armi.utils.triangle"], [440, "module-armi.utils.units"]], "app (class in armi.apps)": [[1, "armi.apps.App"]], "armi.apps": [[1, "module-armi.apps"]], "getparamrenames() (armi.apps.app method)": [[1, "armi.apps.App.getParamRenames"]], "getsettings() (armi.apps.app method)": [[1, "armi.apps.App.getSettings"]], "name (armi.apps.app attribute)": [[1, "armi.apps.App.name"]], "pluginmanager (armi.apps.app property)": [[1, "armi.apps.App.pluginManager"]], "registerpluginflags() (armi.apps.app method)": [[1, "armi.apps.App.registerPluginFlags"]], "registeruserplugins() (armi.apps.app method)": [[1, "armi.apps.App.registerUserPlugins"]], "splashtext (armi.apps.app property)": [[1, "armi.apps.App.splashText"]], "version (armi.apps.app property)": [[1, "armi.apps.App.version"]], "bookkeepingplugin (class in armi.bookkeeping)": [[2, "armi.bookkeeping.BookkeepingPlugin"]], "armi.bookkeeping": [[2, "module-armi.bookkeeping"]], "definecasedependencies() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineEntryPoints"]], "exposeinterfaces() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.exposeInterfaces"]], "getreportcontents() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.mpiActionRequiresReset"]], "database3 (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.Database3"]], "databaseinterface (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.DatabaseInterface"]], "armi.bookkeeping.db": [[3, "module-armi.bookkeeping.db"]], "close() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.close"]], "closedb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.closeDB"]], "comparedatabases() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.compareDatabases"]], "database (armi.bookkeeping.db.databaseinterface property)": [[3, "armi.bookkeeping.db.DatabaseInterface.database"]], "databasefactory() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.databaseFactory"]], "distributable() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.distributable"]], "filename (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database3 static method)": [[3, "armi.bookkeeping.db.Database3.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getH5Group"]], "gethistories() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistories"]], "gethistories() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistory"]], "gethistory() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database3 static method)": [[3, "armi.bookkeeping.db.Database3.grabLocalCommitHash"]], "hastimestep() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.hasTimeStep"]], "initdb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEveryNode"]], "isopen() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.isOpen"]], "keys() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.keys"]], "load() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.load"]], "loadblueprints() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadGeometry"]], "loadoperator() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.loadOperator"]], "loadreadonly() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadReadOnly"]], "loadstate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.loadState"]], "mergehistory() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.mergeHistory"]], "name (armi.bookkeeping.db.databaseinterface attribute)": [[3, "armi.bookkeeping.db.DatabaseInterface.name"]], "open() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.open"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.prepRestartRun"]], "readinputsfromdb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database3 attribute)": [[3, "armi.bookkeeping.db.Database3.timeNodeGroupPattern"]], "version (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.version"]], "versionmajor (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.versionMajor"]], "versionminor (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.versionMinor"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.writeDBEveryNode"]], "writeinputstodb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database3 static method)": [[3, "armi.bookkeeping.db.Database3.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.writeToDB"]], "diffresults (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults"]], "outputwriter (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter"]], "adddiff() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addDiff"]], "addstructurediffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addStructureDiffs"]], "addtimestep() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addTimeStep"]], "armi.bookkeeping.db.comparedb3": [[4, "module-armi.bookkeeping.db.compareDB3"]], "comparedatabases() (in module armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.compareDatabases"]], "ndiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.nDiffs"]], "reportdiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.reportDiffs"]], "writeln() (armi.bookkeeping.db.comparedb3.outputwriter method)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter.writeln"]], "database3 (class in armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.Database3"]], "armi.bookkeeping.db.database3": [[5, "module-armi.bookkeeping.db.database3"]], "close() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.close"]], "collectblocknumberdensities() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.collectBlockNumberDensities"]], "filename (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database3.database3 static method)": [[5, "armi.bookkeeping.db.database3.Database3.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getH5Group"]], "geth5groupname() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.getH5GroupName"]], "gethistories() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database3.database3 static method)": [[5, "armi.bookkeeping.db.database3.Database3.grabLocalCommitHash"]], "h5db (armi.bookkeeping.db.database3.database3 attribute)": [[5, "armi.bookkeeping.db.database3.Database3.h5db"]], "hastimestep() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.hasTimeStep"]], "isopen() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.isOpen"]], "keys() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.keys"]], "load() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.load"]], "loadblueprints() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadGeometry"]], "loadreadonly() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadReadOnly"]], "mergehistory() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.mergeHistory"]], "open() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.open"]], "packspecialdata() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.packSpecialData"]], "readinputsfromdb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database3.database3 attribute)": [[5, "armi.bookkeeping.db.database3.Database3.timeNodeGroupPattern"]], "unpackspecialdata() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.unpackSpecialData"]], "version (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.version"]], "versionmajor (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.versionMajor"]], "versionminor (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.versionMinor"]], "writeinputstodb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database3.database3 static method)": [[5, "armi.bookkeeping.db.database3.Database3.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.writeToDB"]], "databaseinterface (class in armi.bookkeeping.db.databaseinterface)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface"]], "armi.bookkeeping.db.databaseinterface": [[6, "module-armi.bookkeeping.db.databaseInterface"]], "closedb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.closeDB"]], "database (armi.bookkeeping.db.databaseinterface.databaseinterface property)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.database"]], "describeinterfaces() (in module armi.bookkeeping.db.databaseinterface)": [[6, "armi.bookkeeping.db.databaseInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.distributable"]], "gethistories() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistories"]], "gethistory() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistory"]], "initdb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEveryNode"]], "loadstate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.loadState"]], "name (armi.bookkeeping.db.databaseinterface.databaseinterface attribute)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.name"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.prepRestartRun"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[7, "module-armi.bookkeeping.db.factory"]], "databasefactory() (in module armi.bookkeeping.db.factory)": [[7, "armi.bookkeeping.db.factory.databaseFactory"]], "jaggedarray (class in armi.bookkeeping.db.jaggedarray)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray"]], "armi.bookkeeping.db.jaggedarray": [[8, "module-armi.bookkeeping.db.jaggedArray"]], "flatten() (armi.bookkeeping.db.jaggedarray.jaggedarray static method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.flatten"]], "fromh5() (armi.bookkeeping.db.jaggedarray.jaggedarray class method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.fromH5"]], "tolist() (armi.bookkeeping.db.jaggedarray.jaggedarray method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.tolist"]], "unpack() (armi.bookkeeping.db.jaggedarray.jaggedarray method)": [[8, "armi.bookkeeping.db.jaggedArray.JaggedArray.unpack"]], "layout (class in armi.bookkeeping.db.layout)": [[9, "armi.bookkeeping.db.layout.Layout"]], "allsubclasses() (armi.bookkeeping.db.layout.layout static method)": [[9, "armi.bookkeeping.db.layout.Layout.allSubclasses"]], "armi.bookkeeping.db.layout": [[9, "module-armi.bookkeeping.db.layout"]], "computeancestors() (armi.bookkeeping.db.layout.layout static method)": [[9, "armi.bookkeeping.db.layout.Layout.computeAncestors"]], "replacenoneswithnonsense() (in module armi.bookkeeping.db.layout)": [[9, "armi.bookkeeping.db.layout.replaceNonesWithNonsense"]], "replacenonsensewithnones() (in module armi.bookkeeping.db.layout)": [[9, "armi.bookkeeping.db.layout.replaceNonsenseWithNones"]], "writetodb() (armi.bookkeeping.db.layout.layout method)": [[9, "armi.bookkeeping.db.layout.Layout.writeToDB"]], "passthroughyamlize (class in armi.bookkeeping.db.passivedbloadplugin)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize"]], "passivedbloadplugin (class in armi.bookkeeping.db.passivedbloadplugin)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin"]], "skip_bp_sections (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin attribute)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.SKIP_BP_SECTIONS"]], "unknown_params (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin attribute)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.UNKNOWN_PARAMS"]], "armi.bookkeeping.db.passivedbloadplugin": [[10, "module-armi.bookkeeping.db.passiveDBLoadPlugin"]], "attributes (armi.bookkeeping.db.passivedbloadplugin.passthroughyamlize attribute)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize.attributes"]], "buildparamcoll() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.buildParamColl"]], "defineblueprintssections() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.defineBlueprintsSections"]], "defineparameters() (armi.bookkeeping.db.passivedbloadplugin.passivedbloadplugin static method)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassiveDBLoadPlugin.defineParameters"]], "from_yaml() (armi.bookkeeping.db.passivedbloadplugin.passthroughyamlize class method)": [[10, "armi.bookkeeping.db.passiveDBLoadPlugin.PassThroughYamlize.from_yaml"]], "create_file_fie (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE"]], "create_file_fie2 (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE2"]], "create_file_tie (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_TIE"]], "default (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.DEFAULT"]], "permissions (class in armi.bookkeeping.db.permissions)": [[11, "armi.bookkeeping.db.permissions.Permissions"]], "read_only_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.READ_ONLY_FME"]], "read_write_create (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_CREATE"]], "read_write_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_FME"]], "all (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.all"]], "armi.bookkeeping.db.permissions": [[11, "module-armi.bookkeeping.db.permissions"]], "create (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.create"]], "read (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.read"]], "write (armi.bookkeeping.db.permissions.permissions attribute)": [[11, "armi.bookkeeping.db.permissions.Permissions.write"]], "armi.bookkeeping.db.tests": [[12, "module-armi.bookkeeping.db.tests"]], "testcomparedb3 (class in armi.bookkeeping.db.tests.test_comparedb3)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3": [[13, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "test_compareauxdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareAuxData"]], "test_comparedatabaseduplicate() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseDuplicate"]], "test_comparedatabasesim() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseSim"]], "test_comparesets() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareSets"]], "test_diffresultsbasic() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffResultsBasic"]], "test_diffsimpledata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSimpleData"]], "test_diffspecialdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSpecialData"]], "test_outputwriter() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[13, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_outputWriter"]], "small_yaml (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase attribute)": [[14, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.SMALL_YAML"]], "testdatabase3 (class in armi.bookkeeping.db.tests.test_database3)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3"]], "testdatabase3smaller (class in armi.bookkeeping.db.tests.test_database3)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller"]], "testwritereaddatabase (class in armi.bookkeeping.db.tests.test_database3)": [[14, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase"]], "armi.bookkeeping.db.tests.test_database3": [[14, "module-armi.bookkeeping.db.tests.test_database3"]], "makehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.makeHistory"]], "makeshufflehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.makeShuffleHistory"]], "test_auxdata() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_auxData"]], "test_baddata() (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.test_badData"]], "test_computeparents() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_computeParents"]], "test_deleting() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_deleting"]], "test_filename() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_fileName"]], "test_geth5file() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_getH5File"]], "test_grablocalcommithash() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_grabLocalCommitHash"]], "test_history() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_history"]], "test_load() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_load"]], "test_loadblueprints() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_loadBlueprints"]], "test_loadcs() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_loadCS"]], "test_loadsortsetting() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_loadSortSetting"]], "test_mergehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_mergeHistory"]], "test_open() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_open"]], "test_preprestartrun() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_prepRestartRun"]], "test_readinputsfromdb() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_readInputsFromDB"]], "test_readwriteroundtrip() (armi.bookkeeping.db.tests.test_database3.testwritereaddatabase method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestWriteReadDatabase.test_readWriteRoundTrip"]], "test_replacenones() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_replaceNones"]], "test_splitdatabase() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_splitDatabase"]], "test_writetodb() (armi.bookkeeping.db.tests.test_database3.testdatabase3smaller method)": [[14, "armi.bookkeeping.db.tests.test_database3.TestDatabase3Smaller.test_writeToDB"]], "mockinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface"]], "testbadname (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName"]], "testdatabaseinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface"]], "testdatabaseinterfacebol (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL"]], "testdatabasereading (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading"]], "testdatabasewriter (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter"]], "teststandardfollowon (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn"]], "armi.bookkeeping.db.tests.test_databaseinterface": [[15, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "getsimpledboperator() (in module armi.bookkeeping.db.tests.test_databaseinterface)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.getSimpleDBOperator"]], "interacteverynode() (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.interactEveryNode"]], "name (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface attribute)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.name"]], "test_baddbname() (armi.bookkeeping.db.tests.test_databaseinterface.testbadname method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName.test_badDBName"]], "test_demonstratewritinginteractions() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_demonstrateWritingInteractions"]], "test_distributable() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_distributable"]], "test_gethistory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistory"]], "test_gethistorybylocation() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistoryByLocation"]], "test_growtofullcore() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCore"]], "test_growtofullcorefromfactory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactory"]], "test_growtofullcorefromfactorywithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactoryWithCS"]], "test_growtofullcorewithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreWithCS"]], "test_interactbol() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterfacebol method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterfaceBOL.test_interactBOL"]], "test_interacteverynodereturntightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_interactEveryNodeReturnTightCoupling"]], "test_loadreadonly() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_loadReadOnly"]], "test_metadataendfail() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaDataEndFail"]], "test_metadata_endsuccessfully() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaData_endSuccessfully"]], "test_nosyncdbafterwrite() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_noSyncDbAfterWrite"]], "test_readwithoutinputs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWithoutInputs"]], "test_readwritten() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWritten"]], "test_standardrestart() (armi.bookkeeping.db.tests.test_databaseinterface.teststandardfollowon method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn.test_standardRestart"]], "test_syncdbafterwrite() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_syncDbAfterWrite"]], "test_timenodeloop_tightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_timeNodeLoop_tightCoupling"]], "test_timesteps() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_timesteps"]], "test_varioustypeswork() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_variousTypesWork"]], "test_writesystemattributes() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[15, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_writeSystemAttributes"]], "testjaggedarray (class in armi.bookkeeping.db.tests.test_jaggedarray)": [[16, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray"]], "armi.bookkeeping.db.tests.test_jaggedarray": [[16, "module-armi.bookkeeping.db.tests.test_jaggedArray"]], "test_backwardscompatible() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[16, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_backwardsCompatible"]], "test_flatten() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[16, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_flatten"]], "test_roundtrip() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[16, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_roundTrip"]], "test_roundtripbool() (armi.bookkeeping.db.tests.test_jaggedarray.testjaggedarray method)": [[16, "armi.bookkeeping.db.tests.test_jaggedArray.TestJaggedArray.test_roundTripBool"]], "testlocationpacking (class in armi.bookkeeping.db.tests.test_layout)": [[17, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout": [[17, "module-armi.bookkeeping.db.tests.test_layout"]], "test_close() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[17, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_close"]], "test_locationpacking() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[17, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPacking"]], "test_locationpackingoldversion() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[17, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOldVersion"]], "test_locationpackingolderversions() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[17, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOlderVersions"]], "armi.bookkeeping.db.typedefs": [[18, "module-armi.bookkeeping.db.typedefs"]], "historytrackerinterface (class in armi.bookkeeping.historytracker)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface"]], "addallfuelassems() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addAllFuelAssems"]], "adddetailassembliesbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembliesBOL"]], "adddetailassembly() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembly"]], "adddetailassemsbyassemnums() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssemsByAssemNums"]], "armi.bookkeeping.historytracker": [[19, "module-armi.bookkeeping.historyTracker"]], "describeinterfaces() (in module armi.bookkeeping.historytracker)": [[19, "armi.bookkeeping.historyTracker.describeInterfaces"]], "filtertimeindices() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.filterTimeIndices"]], "getblockhistoryval() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getBlockHistoryVal"]], "getdetailassemblies() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailAssemblies"]], "getdetailblocks() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailBlocks"]], "gettimesteps() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTimeSteps"]], "gettrackedparams() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTrackedParams"]], "interactboc() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOC"]], "interactbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOL"]], "interacteol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactEOL"]], "name (armi.bookkeeping.historytracker.historytrackerinterface attribute)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.name"]], "preloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.preloadBlockHistoryVals"]], "unloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.unloadBlockHistoryVals"]], "writeassemhistory() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[19, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.writeAssemHistory"]], "maininterface (class in armi.bookkeeping.maininterface)": [[20, "armi.bookkeeping.mainInterface.MainInterface"]], "armi.bookkeeping.maininterface": [[20, "module-armi.bookkeeping.mainInterface"]], "cleanarmifiles() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.cleanARMIFiles"]], "cleanlastcyclefiles() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.cleanLastCycleFiles"]], "describeinterfaces() (in module armi.bookkeeping.maininterface)": [[20, "armi.bookkeeping.mainInterface.describeInterfaces"]], "interactboc() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.interactBOC"]], "interactbol() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.interactBOL"]], "interacteol() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.maininterface.maininterface method)": [[20, "armi.bookkeeping.mainInterface.MainInterface.interactEveryNode"]], "name (armi.bookkeeping.maininterface.maininterface attribute)": [[20, "armi.bookkeeping.mainInterface.MainInterface.name"]], "instancecounter (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.InstanceCounter"]], "klasscounter (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.KlassCounter"]], "memoryprofiler (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler"]], "printsystemmemoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction"]], "profilememoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction"]], "systemandprocessmemoryusage (class in armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.SystemAndProcessMemoryUsage"]], "add() (armi.bookkeeping.memoryprofiler.instancecounter method)": [[21, "armi.bookkeeping.memoryProfiler.InstanceCounter.add"]], "armi.bookkeeping.memoryprofiler": [[21, "module-armi.bookkeeping.memoryProfiler"]], "checkforduplicateobjectsonarmimodel() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.checkForDuplicateObjectsOnArmiModel"]], "countobjects() (armi.bookkeeping.memoryprofiler.klasscounter method)": [[21, "armi.bookkeeping.memoryProfiler.KlassCounter.countObjects"]], "describeinterfaces() (in module armi.bookkeeping.memoryprofiler)": [[21, "armi.bookkeeping.memoryProfiler.describeInterfaces"]], "displaymemoryusage() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.displayMemoryUsage"]], "getreferrers() (armi.bookkeeping.memoryprofiler.memoryprofiler static method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.getReferrers"]], "interactbol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactBOL"]], "interacteol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEOL"]], "interacteverynode() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEveryNode"]], "invokehook() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[21, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.invokeHook"]], "invokehook() (armi.bookkeeping.memoryprofiler.profilememoryusageaction method)": [[21, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction.invokeHook"]], "maxprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[21, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.maxProcessMemoryInMB"]], "minprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[21, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.minProcessMemoryInMB"]], "name (armi.bookkeeping.memoryprofiler.memoryprofiler attribute)": [[21, "armi.bookkeeping.memoryProfiler.MemoryProfiler.name"]], "printusage() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[21, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.printUsage"]], "armi.bookkeeping.report": [[22, "module-armi.bookkeeping.report"]], "setdata() (in module armi.bookkeeping.report)": [[22, "armi.bookkeeping.report.setData"]], "group (class in armi.bookkeeping.report.data)": [[23, "armi.bookkeeping.report.data.Group"]], "image (class in armi.bookkeeping.report.data)": [[23, "armi.bookkeeping.report.data.Image"]], "report (class in armi.bookkeeping.report.data)": [[23, "armi.bookkeeping.report.data.Report"]], "table (class in armi.bookkeeping.report.data)": [[23, "armi.bookkeeping.report.data.Table"]], "addtoreport() (armi.bookkeeping.report.data.report method)": [[23, "armi.bookkeeping.report.data.Report.addToReport"]], "armi.bookkeeping.report.data": [[23, "module-armi.bookkeeping.report.data"]], "componentwellgroups (armi.bookkeeping.report.data.report attribute)": [[23, "armi.bookkeeping.report.data.Report.componentWellGroups"]], "count (armi.bookkeeping.report.data.image attribute)": [[23, "armi.bookkeeping.report.data.Image.count"]], "groupsorderfirst (armi.bookkeeping.report.data.report attribute)": [[23, "armi.bookkeeping.report.data.Report.groupsOrderFirst"]], "writegroupshtml() (armi.bookkeeping.report.data.report method)": [[23, "armi.bookkeeping.report.data.Report.writeGroupsHTML"]], "writehtml() (armi.bookkeeping.report.data.group method)": [[23, "armi.bookkeeping.report.data.Group.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.image method)": [[23, "armi.bookkeeping.report.data.Image.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.report method)": [[23, "armi.bookkeeping.report.data.Report.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.table method)": [[23, "armi.bookkeeping.report.data.Table.writeHTML"]], "a (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.A"]], "b (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.B"]], "body (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Body"]], "caption (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Caption"]], "div (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Div"]], "footer (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Footer"]], "h1 (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.H1"]], "h2 (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.H2"]], "h3 (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.H3"]], "h4 (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.H4"]], "htmlfile (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.HTMLFile"]], "head (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Head"]], "html (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Html"]], "img (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Img"]], "li (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.LI"]], "link (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Link"]], "p (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.P"]], "script (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Script"]], "span (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Span"]], "style (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Style"]], "tbody (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.TBody"]], "td (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.TD"]], "th (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.TH"]], "thead (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.THead"]], "tr (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.TR"]], "table (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Table"]], "tag (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Tag"]], "title (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.Title"]], "ul (class in armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.UL"]], "armi.bookkeeping.report.html": [[24, "module-armi.bookkeeping.report.html"]], "encode64() (in module armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.encode64"]], "tag (armi.bookkeeping.report.html.a attribute)": [[24, "armi.bookkeeping.report.html.A.tag"]], "tag (armi.bookkeeping.report.html.b attribute)": [[24, "armi.bookkeeping.report.html.B.tag"]], "tag (armi.bookkeeping.report.html.body attribute)": [[24, "armi.bookkeeping.report.html.Body.tag"]], "tag (armi.bookkeeping.report.html.caption attribute)": [[24, "armi.bookkeeping.report.html.Caption.tag"]], "tag (armi.bookkeeping.report.html.div attribute)": [[24, "armi.bookkeeping.report.html.Div.tag"]], "tag (armi.bookkeeping.report.html.footer attribute)": [[24, "armi.bookkeeping.report.html.Footer.tag"]], "tag (armi.bookkeeping.report.html.h1 attribute)": [[24, "armi.bookkeeping.report.html.H1.tag"]], "tag (armi.bookkeeping.report.html.h2 attribute)": [[24, "armi.bookkeeping.report.html.H2.tag"]], "tag (armi.bookkeeping.report.html.h3 attribute)": [[24, "armi.bookkeeping.report.html.H3.tag"]], "tag (armi.bookkeeping.report.html.h4 attribute)": [[24, "armi.bookkeeping.report.html.H4.tag"]], "tag (armi.bookkeeping.report.html.head attribute)": [[24, "armi.bookkeeping.report.html.Head.tag"]], "tag (armi.bookkeeping.report.html.html attribute)": [[24, "armi.bookkeeping.report.html.Html.tag"]], "tag (armi.bookkeeping.report.html.img attribute)": [[24, "armi.bookkeeping.report.html.Img.tag"]], "tag (armi.bookkeeping.report.html.li attribute)": [[24, "armi.bookkeeping.report.html.LI.tag"]], "tag (armi.bookkeeping.report.html.link attribute)": [[24, "armi.bookkeeping.report.html.Link.tag"]], "tag (armi.bookkeeping.report.html.p attribute)": [[24, "armi.bookkeeping.report.html.P.tag"]], "tag (armi.bookkeeping.report.html.script attribute)": [[24, "armi.bookkeeping.report.html.Script.tag"]], "tag (armi.bookkeeping.report.html.span attribute)": [[24, "armi.bookkeeping.report.html.Span.tag"]], "tag (armi.bookkeeping.report.html.style attribute)": [[24, "armi.bookkeeping.report.html.Style.tag"]], "tag (armi.bookkeeping.report.html.tbody attribute)": [[24, "armi.bookkeeping.report.html.TBody.tag"]], "tag (armi.bookkeeping.report.html.td attribute)": [[24, "armi.bookkeeping.report.html.TD.tag"]], "tag (armi.bookkeeping.report.html.th attribute)": [[24, "armi.bookkeeping.report.html.TH.tag"]], "tag (armi.bookkeeping.report.html.thead attribute)": [[24, "armi.bookkeeping.report.html.THead.tag"]], "tag (armi.bookkeeping.report.html.tr attribute)": [[24, "armi.bookkeeping.report.html.TR.tag"]], "tag (armi.bookkeeping.report.html.table attribute)": [[24, "armi.bookkeeping.report.html.Table.tag"]], "tag (armi.bookkeeping.report.html.tag attribute)": [[24, "armi.bookkeeping.report.html.Tag.tag"]], "tag (armi.bookkeeping.report.html.title attribute)": [[24, "armi.bookkeeping.report.html.Title.tag"]], "tag (armi.bookkeeping.report.html.ul attribute)": [[24, "armi.bookkeeping.report.html.UL.tag"]], "write() (armi.bookkeeping.report.html.htmlfile method)": [[24, "armi.bookkeeping.report.html.HTMLFile.write"]], "writeescaped() (armi.bookkeeping.report.html.htmlfile method)": [[24, "armi.bookkeeping.report.html.HTMLFile.writeEscaped"]], "writestandardreporttemplate() (in module armi.bookkeeping.report.html)": [[24, "armi.bookkeeping.report.html.writeStandardReportTemplate"]], "design (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.DESIGN"]], "armi.bookkeeping.report.newreportutils": [[25, "module-armi.bookkeeping.report.newReportUtils"]], "comprehensivebolcontent() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.comprehensiveBOLContent"]], "createdimensionreport() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.createDimensionReport"]], "getpindesigntable() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.getPinDesignTable"]], "insertareafractionsreport() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertAreaFractionsReport"]], "insertblockdesignreport() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertBlockDesignReport"]], "insertblockdiagrams() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertBlockDiagrams"]], "insertblueprintcontent() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertBlueprintContent"]], "insertcoreandassemblymaps() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertCoreAndAssemblyMaps"]], "insertcoredesignreport() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertCoreDesignReport"]], "insertdesigncontent() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertDesignContent"]], "insertendoflifecontent() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertEndOfLifeContent"]], "insertgeneralreportcontent() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertGeneralReportContent"]], "insertmetatable() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertMetaTable"]], "insertsettingsdata() (in module armi.bookkeeping.report.newreportutils)": [[25, "armi.bookkeeping.report.newReportUtils.insertSettingsData"]], "begin (armi.bookkeeping.report.newreports.reportstage attribute)": [[26, "armi.bookkeeping.report.newReports.ReportStage.Begin"]], "end (armi.bookkeeping.report.newreports.reportstage attribute)": [[26, "armi.bookkeeping.report.newReports.ReportStage.End"]], "image (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.Image"]], "reportcontent (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.ReportContent"]], "reportnode (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.ReportNode"]], "reportstage (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.ReportStage"]], "section (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.Section"]], "standard (armi.bookkeeping.report.newreports.reportstage attribute)": [[26, "armi.bookkeeping.report.newReports.ReportStage.Standard"]], "table (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.Table"]], "timeseries (class in armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.TimeSeries"]], "add() (armi.bookkeeping.report.newreports.timeseries method)": [[26, "armi.bookkeeping.report.newReports.TimeSeries.add"]], "addchildelement() (armi.bookkeeping.report.newreports.section method)": [[26, "armi.bookkeeping.report.newReports.Section.addChildElement"]], "addrow() (armi.bookkeeping.report.newreports.table method)": [[26, "armi.bookkeeping.report.newReports.Table.addRow"]], "armi.bookkeeping.report.newreports": [[26, "module-armi.bookkeeping.report.newReports"]], "encode64() (in module armi.bookkeeping.report.newreports)": [[26, "armi.bookkeeping.report.newReports.encode64"]], "get() (armi.bookkeeping.report.newreports.reportcontent method)": [[26, "armi.bookkeeping.report.newReports.ReportContent.get"]], "get() (armi.bookkeeping.report.newreports.section method)": [[26, "armi.bookkeeping.report.newReports.Section.get"]], "items() (armi.bookkeeping.report.newreports.section method)": [[26, "armi.bookkeeping.report.newReports.Section.items"]], "leveldict (armi.bookkeeping.report.newreports.reportnode attribute)": [[26, "armi.bookkeeping.report.newReports.ReportNode.levelDict"]], "plot() (armi.bookkeeping.report.newreports.timeseries method)": [[26, "armi.bookkeeping.report.newReports.TimeSeries.plot"]], "render() (armi.bookkeeping.report.newreports.image method)": [[26, "armi.bookkeeping.report.newReports.Image.render"]], "render() (armi.bookkeeping.report.newreports.reportnode method)": [[26, "armi.bookkeeping.report.newReports.ReportNode.render"]], "render() (armi.bookkeeping.report.newreports.section method)": [[26, "armi.bookkeeping.report.newReports.Section.render"]], "render() (armi.bookkeeping.report.newreports.table method)": [[26, "armi.bookkeeping.report.newReports.Table.render"]], "render() (armi.bookkeeping.report.newreports.timeseries method)": [[26, "armi.bookkeeping.report.newReports.TimeSeries.render"]], "tableofcontents() (armi.bookkeeping.report.newreports.reportcontent method)": [[26, "armi.bookkeeping.report.newReports.ReportContent.tableOfContents"]], "writereports() (armi.bookkeeping.report.newreports.reportcontent method)": [[26, "armi.bookkeeping.report.newReports.ReportContent.writeReports"]], "reportinterface (class in armi.bookkeeping.report.reportinterface)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface"]], "armi.bookkeeping.report.reportinterface": [[27, "module-armi.bookkeeping.report.reportInterface"]], "countassembliessfp() (armi.bookkeeping.report.reportinterface.reportinterface static method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.countAssembliesSFP"]], "describeinterfaces() (in module armi.bookkeeping.report.reportinterface)": [[27, "armi.bookkeeping.report.reportInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.distributable"]], "generatedesignreport() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.generateDesignReport"]], "interactboc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOC"]], "interactbol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOL"]], "interacteoc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOC"]], "interacteol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEveryNode"]], "name (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.name"]], "printreports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.printReports"]], "reportsfp() (armi.bookkeeping.report.reportinterface.reportinterface static method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.reportSFP"]], "reports (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.reports"]], "writereports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.writeReports"]], "writerunsummary() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[27, "armi.bookkeeping.report.reportInterface.ReportInterface.writeRunSummary"]], "armi.bookkeeping.report.reportingutils": [[28, "module-armi.bookkeeping.report.reportingUtils"]], "getinterfacestacksummary() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.getInterfaceStackSummary"]], "getnodename() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.getNodeName"]], "getsysteminfo() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.getSystemInfo"]], "makeblockdesignreport() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.makeBlockDesignReport"]], "makecoreandassemblymaps() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.makeCoreAndAssemblyMaps"]], "makecoredesignreport() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.makeCoreDesignReport"]], "setneutronbalancesreport() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.setNeutronBalancesReport"]], "summarizepindesign() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.summarizePinDesign"]], "summarizepower() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.summarizePower"]], "summarizepowerpeaking() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.summarizePowerPeaking"]], "writeassemblymasssummary() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.writeAssemblyMassSummary"]], "writecyclesummary() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.writeCycleSummary"]], "writetightcouplingconvergencesummary() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.writeTightCouplingConvergenceSummary"]], "writewelcomeheaders() (in module armi.bookkeeping.report.reportingutils)": [[28, "armi.bookkeeping.report.reportingUtils.writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[29, "module-armi.bookkeeping.report.tests"]], "testreportcontentcreation (class in armi.bookkeeping.report.tests.test_newreport)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newreport": [[30, "module-armi.bookkeeping.report.tests.test_newReport"]], "test_neutronicsplotfunctions() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_neutronicsPlotFunctions"]], "test_reportbasics() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportBasics"]], "test_reportcontents() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContents"]], "test_reportcontentsend() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContentsEnd"]], "test_reportlogs() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportLogs"]], "test_tablecreation() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_tableCreation"]], "test_timeseries() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_timeSeries"]], "test_writereports() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[30, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_writeReports"]], "testreport (class in armi.bookkeeping.report.tests.test_report)": [[31, "armi.bookkeeping.report.tests.test_report.TestReport"]], "testreportinterface (class in armi.bookkeeping.report.tests.test_report)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface"]], "testreportingutils (class in armi.bookkeeping.report.tests.test_report)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils"]], "armi.bookkeeping.report.tests.test_report": [[31, "module-armi.bookkeeping.report.tests.test_report"]], "test_distributablereportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_distributableReportInt"]], "test_getdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReport.test_getData"]], "test_getnodename() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getNodeName"]], "test_getsysteminfo() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfo"]], "test_getsysteminfolinux() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoLinux"]], "test_getsysteminfomac() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoMac"]], "test_getsysteminfowindows() (armi.bookkeeping.report.tests.test_report.testreportingutils method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportingUtils.test_getSystemInfoWindows"]], "test_interactboc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOC"]], "test_interactbolreportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOLReportInt"]], "test_interacteoc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOC"]], "test_interacteol() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOL"]], "test_interacteverynode() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEveryNode"]], "test_printreports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_printReports"]], "test_reactorspecificreporting() (armi.bookkeeping.report.tests.test_report.testreport method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReport.test_reactorSpecificReporting"]], "test_setdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReport.test_setData"]], "test_writereports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_writeReports"]], "test_writewelcomeheaders() (armi.bookkeeping.report.tests.test_report.testreport method)": [[31, "armi.bookkeeping.report.tests.test_report.TestReport.test_writeWelcomeHeaders"]], "snapshotinterface (class in armi.bookkeeping.snapshotinterface)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface"]], "activatedefaultsnapshots() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface.activateDefaultSnapshots"]], "armi.bookkeeping.snapshotinterface": [[32, "module-armi.bookkeeping.snapshotInterface"]], "describeinterfaces() (in module armi.bookkeeping.snapshotinterface)": [[32, "armi.bookkeeping.snapshotInterface.describeInterfaces"]], "extractcyclenodefromstamp() (in module armi.bookkeeping.snapshotinterface)": [[32, "armi.bookkeeping.snapshotInterface.extractCycleNodeFromStamp"]], "getcyclenodestamp() (in module armi.bookkeeping.snapshotinterface)": [[32, "armi.bookkeeping.snapshotInterface.getCycleNodeStamp"]], "interactbol() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactBOL"]], "interactcoupled() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactCoupled"]], "interacteverynode() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactEveryNode"]], "name (armi.bookkeeping.snapshotinterface.snapshotinterface attribute)": [[32, "armi.bookkeeping.snapshotInterface.SnapshotInterface.name"]], "armi.bookkeeping.tests": [[33, "module-armi.bookkeeping.tests"]], "testhistorytracker (class in armi.bookkeeping.tests.test_historytracker)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker"]], "testhistorytrackernomodel (class in armi.bookkeeping.tests.test_historytracker)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel"]], "armi.bookkeeping.tests.test_historytracker": [[34, "module-armi.bookkeeping.tests.test_historyTracker"]], "runtutorialnotebook() (in module armi.bookkeeping.tests.test_historytracker)": [[34, "armi.bookkeeping.tests.test_historyTracker.runTutorialNotebook"]], "test_blockname() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_blockName"]], "test_calcmgfluence() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_calcMGFluence"]], "test_getblockinassembly() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_getBlockInAssembly"]], "test_historyparameters() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyParameters"]], "test_historyreport() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyReport"]], "test_timestepfiltering() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFiltering"]], "test_timestepfilteringwithgap() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[34, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFilteringWithGap"]], "klasscountertests (class in armi.bookkeeping.tests.test_memoryprofiler)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests"]], "testmemoryprofiler (class in armi.bookkeeping.tests.test_memoryprofiler)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryprofiler": [[35, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "get_containers() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.get_containers"]], "test_checkforduplicateobjectsonarmimodel() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_checkForDuplicateObjectsOnArmiModel"]], "test_counthandlesrecursion() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_countHandlesRecursion"]], "test_displaymemoryusage() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_displayMemoryUsage"]], "test_expandcontainer() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_expandContainer"]], "test_fullbreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_fullBreakdown"]], "test_getreferrers() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_getReferrers"]], "test_printfullmemorybreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_printFullMemoryBreakdown"]], "test_profilememoryusageaction() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[35, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_profileMemoryUsageAction"]], "mockreactor (class in armi.bookkeeping.tests.test_snapshot)": [[36, "armi.bookkeeping.tests.test_snapshot.MockReactor"]], "mockreactorparams (class in armi.bookkeeping.tests.test_snapshot)": [[36, "armi.bookkeeping.tests.test_snapshot.MockReactorParams"]], "testsnapshotinterface (class in armi.bookkeeping.tests.test_snapshot)": [[36, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot": [[36, "module-armi.bookkeeping.tests.test_snapshot"]], "test_activeatedefaultsnapshots_17cycles5burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[36, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_17cycles5BurnSteps"]], "test_activeatedefaultsnapshots_30cycles2burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[36, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_30cycles2BurnSteps"]], "test_interactcoupled() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[36, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactCoupled"]], "test_interacteverynode() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[36, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactEveryNode"]], "armi.bookkeeping.visualization": [[37, "module-armi.bookkeeping.visualization"]], "visfiledumper (class in armi.bookkeeping.visualization.dumper)": [[38, "armi.bookkeeping.visualization.dumper.VisFileDumper"]], "armi.bookkeeping.visualization.dumper": [[38, "module-armi.bookkeeping.visualization.dumper"]], "dumpstate() (armi.bookkeeping.visualization.dumper.visfiledumper method)": [[38, "armi.bookkeeping.visualization.dumper.VisFileDumper.dumpState"]], "visfileentrypoint (class in armi.bookkeeping.visualization.entrypoint)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint"]], "addoptions() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.addOptions"]], "armi.bookkeeping.visualization.entrypoint": [[39, "module-armi.bookkeeping.visualization.entryPoint"]], "description (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.description"]], "invoke() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.invoke"]], "name (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.name"]], "parse() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.parse"]], "settingsargument (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[39, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.settingsArgument"]], "armi.bookkeeping.visualization.tests": [[40, "module-armi.bookkeeping.visualization.tests"]], "testvisdump (class in armi.bookkeeping.visualization.tests.test_vis)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump"]], "testvtkmesh (class in armi.bookkeeping.visualization.tests.test_vis)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis": [[41, "module-armi.bookkeeping.visualization.tests.test_vis"]], "test_cartesianmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_cartesianMesh"]], "test_dumpreactorvtk() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorVtk"]], "test_dumpreactorxdmf() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorXdmf"]], "test_hexmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_hexMesh"]], "test_testvtkmesh() (armi.bookkeeping.visualization.tests.test_vis.testvtkmesh method)": [[41, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh.test_testVtkMesh"]], "testxdmf (class in armi.bookkeeping.visualization.tests.test_xdmf)": [[42, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[42, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "test_deduptimes() (armi.bookkeeping.visualization.tests.test_xdmf.testxdmf method)": [[42, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf.test_dedupTimes"]], "vtkmesh (class in armi.bookkeeping.visualization.utils)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh"]], "append() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.append"]], "armi.bookkeeping.visualization.utils": [[43, "module-armi.bookkeeping.visualization.utils"]], "createassemmesh() (in module armi.bookkeeping.visualization.utils)": [[43, "armi.bookkeeping.visualization.utils.createAssemMesh"]], "createblockmesh() (in module armi.bookkeeping.visualization.utils)": [[43, "armi.bookkeeping.visualization.utils.createBlockMesh"]], "createreactorassemmesh() (in module armi.bookkeeping.visualization.utils)": [[43, "armi.bookkeeping.visualization.utils.createReactorAssemMesh"]], "createreactorblockmesh() (in module armi.bookkeeping.visualization.utils)": [[43, "armi.bookkeeping.visualization.utils.createReactorBlockMesh"]], "empty() (armi.bookkeeping.visualization.utils.vtkmesh static method)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.empty"]], "write() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.write"]], "x (armi.bookkeeping.visualization.utils.vtkmesh property)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.x"]], "y (armi.bookkeeping.visualization.utils.vtkmesh property)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.y"]], "z (armi.bookkeeping.visualization.utils.vtkmesh property)": [[43, "armi.bookkeeping.visualization.utils.VtkMesh.z"]], "vtkdumper (class in armi.bookkeeping.visualization.vtk)": [[44, "armi.bookkeeping.visualization.vtk.VtkDumper"]], "armi.bookkeeping.visualization.vtk": [[44, "module-armi.bookkeeping.visualization.vtk"]], "dumpstate() (armi.bookkeeping.visualization.vtk.vtkdumper method)": [[44, "armi.bookkeeping.visualization.vtk.VtkDumper.dumpState"]], "xdmfdumper (class in armi.bookkeeping.visualization.xdmf)": [[45, "armi.bookkeeping.visualization.xdmf.XdmfDumper"]], "armi.bookkeeping.visualization.xdmf": [[45, "module-armi.bookkeeping.visualization.xdmf"]], "dumpstate() (armi.bookkeeping.visualization.xdmf.xdmfdumper method)": [[45, "armi.bookkeeping.visualization.xdmf.XdmfDumper.dumpState"]], "armi.cases": [[46, "module-armi.cases"]], "case (class in armi.cases.case)": [[47, "armi.cases.case.Case"]], "addexplicitdependency() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.addExplicitDependency"]], "armi.cases.case": [[47, "module-armi.cases.case"]], "bp (armi.cases.case.case property)": [[47, "armi.cases.case.Case.bp"]], "checkinputs() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.checkInputs"]], "clone() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.clone"]], "compare() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.compare"]], "copyinterfaceinputs() (in module armi.cases.case)": [[47, "armi.cases.case.copyInterfaceInputs"]], "dbname (armi.cases.case.case property)": [[47, "armi.cases.case.Case.dbName"]], "dependencies (armi.cases.case.case property)": [[47, "armi.cases.case.Case.dependencies"]], "directory (armi.cases.case.case property)": [[47, "armi.cases.case.Case.directory"]], "geom (armi.cases.case.case property)": [[47, "armi.cases.case.Case.geom"]], "getpotentialparentfromsettingvalue() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.getPotentialParentFromSettingValue"]], "independentvariables (armi.cases.case.case property)": [[47, "armi.cases.case.Case.independentVariables"]], "initializeoperator() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.initializeOperator"]], "run() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.run"]], "setuptaskdependence() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.setUpTaskDependence"]], "summarizedesign() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.summarizeDesign"]], "title (armi.cases.case.case property)": [[47, "armi.cases.case.Case.title"]], "writeinputs() (armi.cases.case.case method)": [[47, "armi.cases.case.Case.writeInputs"]], "armi.cases.inputmodifiers": [[48, "module-armi.cases.inputModifiers"]], "blueprintblockmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.BluePrintBlockModifier"]], "fail_if_after (armi.cases.inputmodifiers.inputmodifiers.inputmodifier attribute)": [[49, "armi.cases.inputModifiers.inputModifiers.InputModifier.FAIL_IF_AFTER"]], "fullcoremodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.FullCoreModifier"]], "inputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.InputModifier"]], "multisettingmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.MultiSettingModifier"]], "samplinginputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.SamplingInputModifier"]], "settingsmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[49, "armi.cases.inputModifiers.inputModifiers.SettingsModifier"]], "armi.cases.inputmodifiers.inputmodifiers": [[49, "module-armi.cases.inputModifiers.inputModifiers"]], "neutronicconvergencemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[50, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicConvergenceModifier"]], "neutronicmeshssizemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[50, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicMeshsSizeModifier"]], "armi.cases.inputmodifiers.neutronicsmodifiers": [[50, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "cladthicknessbyidmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[51, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier"]], "cladthicknessbyodmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[51, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyidmodifier attribute)": [[51, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier.FAIL_IF_AFTER"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyodmodifier attribute)": [[51, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier.FAIL_IF_AFTER"]], "smeardensitymodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[51, "armi.cases.inputModifiers.pinTypeInputModifiers.SmearDensityModifier"]], "armi.cases.inputmodifiers.pintypeinputmodifiers": [[51, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputmodifiers.tests": [[52, "module-armi.cases.inputModifiers.tests"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom"]], "neutronicskernelopts (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.NeutronicsKernelOpts"]], "testfullcoremodifier (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier"]], "testsettingsmodifiers (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers"]], "testsuitebuilderintegrations (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations"]], "armi.cases.inputmodifiers.tests.test_inputmodifiers": [[53, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_inputmodifiers.mockgeom attribute)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom.geomType"]], "test_neutronicconvergencemodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsettingsmodifiers method)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers.test_NeutronicConvergenceModifier"]], "test_blueprintblockmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_bluePrintBlockModifier"]], "test_fullcoreconversion() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testfullcoremodifier method)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier.test_fullCoreConversion"]], "test_settingsmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_settingsModifier"]], "test_smeardensityfail() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[53, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_smearDensityFail"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom"]], "testblueprintmodifiers (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers"]], "armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers": [[54, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.mockgeom attribute)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom.geomType"]], "test_adjustsmeardensity() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_AdjustSmearDensity"]], "test_cladthickenessbyidmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByIDModifier"]], "test_cladthickenessbyodmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[54, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByODModifier"]], "casesuite (class in armi.cases.suite)": [[55, "armi.cases.suite.CaseSuite"]], "add() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.add"]], "armi.cases.suite": [[55, "module-armi.cases.suite"]], "clone() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.clone"]], "compare() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.compare"]], "discover() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.discover"]], "echoconfiguration() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.echoConfiguration"]], "remove() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.remove"]], "run() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.run"]], "writeinputs() (armi.cases.suite.casesuite method)": [[55, "armi.cases.suite.CaseSuite.writeInputs"]], "writetable() (armi.cases.suite.casesuite static method)": [[55, "armi.cases.suite.CaseSuite.writeTable"]], "fullfactorialsuitebuilder (class in armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder"]], "fullfactorialsuitebuildernoisy (class in armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy"]], "latinhypercubesuitebuilder (class in armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder"]], "separateeffectssuitebuilder (class in armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder"]], "suitebuilder (class in armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.SuiteBuilder"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuilder method)": [[56, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuildernoisy method)": [[56, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[56, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.separateeffectssuitebuilder method)": [[56, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.suitebuilder method)": [[56, "armi.cases.suiteBuilder.SuiteBuilder.addDegreeOfFreedom"]], "addmodifierset() (armi.cases.suitebuilder.suitebuilder method)": [[56, "armi.cases.suiteBuilder.SuiteBuilder.addModifierSet"]], "armi.cases.suitebuilder": [[56, "module-armi.cases.suiteBuilder"]], "buildsuite() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[56, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.buildSuite"]], "buildsuite() (armi.cases.suitebuilder.suitebuilder method)": [[56, "armi.cases.suiteBuilder.SuiteBuilder.buildSuite"]], "getinputmodifiers() (in module armi.cases.suitebuilder)": [[56, "armi.cases.suiteBuilder.getInputModifiers"]], "armi.cases.tests": [[57, "module-armi.cases.tests"]], "multifilesinterfaces (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.MultiFilesInterfaces"]], "testarmicase (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestArmiCase"]], "testcasesuitecomparison (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteComparison"]], "testcasesuitedependencies (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies"]], "testcopyinterfaceinputs (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs"]], "testextrainputwriting (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestExtraInputWriting"]], "testpluginforcopyinterfacesmultiplefiles (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles"]], "testpluginwithduplicatesetting (class in armi.cases.tests.test_cases)": [[58, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases": [[58, "module-armi.cases.tests.test_cases"]], "definesettings() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[58, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.defineSettings"]], "definesettings() (armi.cases.tests.test_cases.testpluginwithduplicatesetting static method)": [[58, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting.defineSettings"]], "exposeinterfaces() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[58, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.exposeInterfaces"]], "name (armi.cases.tests.test_cases.multifilesinterfaces attribute)": [[58, "armi.cases.tests.test_cases.MultiFilesInterfaces.name"]], "specifyinputs() (armi.cases.tests.test_cases.multifilesinterfaces static method)": [[58, "armi.cases.tests.test_cases.MultiFilesInterfaces.specifyInputs"]], "test_checkinputs() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_checkInputs"]], "test_clone() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_clone"]], "test_clone() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_clone"]], "test_comparenodiffs() (armi.cases.tests.test_cases.testcasesuitecomparison method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteComparison.test_compareNoDiffs"]], "test_copyinputshelper() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInputsHelper"]], "test_copyinterfaceinputs_abspath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_absPath"]], "test_copyinterfaceinputs_multiplefiles() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_multipleFiles"]], "test_copyinterfaceinputs_nonfilepath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_nonFilePath"]], "test_copyinterfaceinputs_relpath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_relPath"]], "test_copyinterfaceinputs_singlefile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_singleFile"]], "test_copyinterfaceinputs_wildcardfile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_wildcardFile"]], "test_dependencieswithobscurepaths() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependenciesWithObscurePaths"]], "test_dependencyfromdbname() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromDBName"]], "test_dependencyfromexplictrepeatshuffles() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromExplictRepeatShuffles"]], "test_endcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_endCoverage"]], "test_endprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_endProfiling"]], "test_explicitdependency() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_explicitDependency"]], "test_failonduplicatesetting() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[58, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_failOnDuplicateSetting"]], "test_getcoveragercfile() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_getCoverageRcFile"]], "test_independentvariables() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_independentVariables"]], "test_run() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_run"]], "test_setuptaskdependence() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_setUpTaskDependence"]], "test_startcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_startCoverage"]], "test_startprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_startProfiling"]], "test_summarizedesign() (armi.cases.tests.test_cases.testarmicase method)": [[58, "armi.cases.tests.test_cases.TestArmiCase.test_summarizeDesign"]], "test_titlesettergetter() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[58, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_titleSetterGetter"]], "test_writeinput() (armi.cases.tests.test_cases.testextrainputwriting method)": [[58, "armi.cases.tests.test_cases.TestExtraInputWriting.test_writeInput"]], "latinhypercubemodifier (class in armi.cases.tests.test_suitebuilder)": [[59, "armi.cases.tests.test_suiteBuilder.LatinHyperCubeModifier"]], "settingmodifier (class in armi.cases.tests.test_suitebuilder)": [[59, "armi.cases.tests.test_suiteBuilder.SettingModifier"]], "testfullfactorialsuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[59, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder"]], "testlatinhypercubesuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[59, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder"]], "testseparateeffectsbuilder (class in armi.cases.tests.test_suitebuilder)": [[59, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suitebuilder": [[59, "module-armi.cases.tests.test_suiteBuilder"]], "test_adddegreeoffreedom() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[59, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_addDegreeOfFreedom"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testfullfactorialsuitebuilder method)": [[59, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[59, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testseparateeffectsbuilder method)": [[59, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder.test_buildSuite"]], "test_initialize() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[59, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_initialize"]], "armicli (class in armi.cli)": [[60, "armi.cli.ArmiCLI"]], "armiparser (class in armi.cli)": [[60, "armi.cli.ArmiParser"]], "entrypointsplugin (class in armi.cli)": [[60, "armi.cli.EntryPointsPlugin"]], "armi.cli": [[60, "module-armi.cli"]], "defineentrypoints() (armi.cli.entrypointsplugin static method)": [[60, "armi.cli.EntryPointsPlugin.defineEntryPoints"]], "executecommand() (armi.cli.armicli method)": [[60, "armi.cli.ArmiCLI.executeCommand"]], "listcommands() (armi.cli.armicli method)": [[60, "armi.cli.ArmiCLI.listCommands"]], "print_help() (armi.cli.armiparser method)": [[60, "armi.cli.ArmiParser.print_help"]], "run() (armi.cli.armicli method)": [[60, "armi.cli.ArmiCLI.run"]], "showversion() (armi.cli.armicli static method)": [[60, "armi.cli.ArmiCLI.showVersion"]], "splash() (in module armi.cli)": [[60, "armi.cli.splash"]], "checkinputentrypoint (class in armi.cli.checkinputs)": [[61, "armi.cli.checkInputs.CheckInputEntryPoint"]], "expandblueprints (class in armi.cli.checkinputs)": [[61, "armi.cli.checkInputs.ExpandBlueprints"]], "addoptions() (armi.cli.checkinputs.checkinputentrypoint method)": [[61, "armi.cli.checkInputs.CheckInputEntryPoint.addOptions"]], "addoptions() (armi.cli.checkinputs.expandblueprints method)": [[61, "armi.cli.checkInputs.ExpandBlueprints.addOptions"]], "armi.cli.checkinputs": [[61, "module-armi.cli.checkInputs"]], "invoke() (armi.cli.checkinputs.checkinputentrypoint method)": [[61, "armi.cli.checkInputs.CheckInputEntryPoint.invoke"]], "invoke() (armi.cli.checkinputs.expandblueprints method)": [[61, "armi.cli.checkInputs.ExpandBlueprints.invoke"]], "name (armi.cli.checkinputs.checkinputentrypoint attribute)": [[61, "armi.cli.checkInputs.CheckInputEntryPoint.name"]], "name (armi.cli.checkinputs.expandblueprints attribute)": [[61, "armi.cli.checkInputs.ExpandBlueprints.name"]], "settingsargument (armi.cli.checkinputs.checkinputentrypoint attribute)": [[61, "armi.cli.checkInputs.CheckInputEntryPoint.settingsArgument"]], "settingsargument (armi.cli.checkinputs.expandblueprints attribute)": [[61, "armi.cli.checkInputs.ExpandBlueprints.settingsArgument"]], "splash (armi.cli.checkinputs.expandblueprints attribute)": [[61, "armi.cli.checkInputs.ExpandBlueprints.splash"]], "cleantemps (class in armi.cli.cleantemps)": [[62, "armi.cli.cleanTemps.CleanTemps"]], "armi.cli.cleantemps": [[62, "module-armi.cli.cleanTemps"]], "invoke() (armi.cli.cleantemps.cleantemps method)": [[62, "armi.cli.cleanTemps.CleanTemps.invoke"]], "name (armi.cli.cleantemps.cleantemps attribute)": [[62, "armi.cli.cleanTemps.CleanTemps.name"]], "settingsargument (armi.cli.cleantemps.cleantemps attribute)": [[62, "armi.cli.cleanTemps.CleanTemps.settingsArgument"]], "clonearmiruncommandbatch (class in armi.cli.clone)": [[63, "armi.cli.clone.CloneArmiRunCommandBatch"]], "clonearmiruncommandinteractive (class in armi.cli.clone)": [[63, "armi.cli.clone.CloneArmiRunCommandInteractive"]], "clonesuitecommand (class in armi.cli.clone)": [[63, "armi.cli.clone.CloneSuiteCommand"]], "addoptions() (armi.cli.clone.clonearmiruncommandbatch method)": [[63, "armi.cli.clone.CloneArmiRunCommandBatch.addOptions"]], "addoptions() (armi.cli.clone.clonesuitecommand method)": [[63, "armi.cli.clone.CloneSuiteCommand.addOptions"]], "armi.cli.clone": [[63, "module-armi.cli.clone"]], "invoke() (armi.cli.clone.clonearmiruncommandbatch method)": [[63, "armi.cli.clone.CloneArmiRunCommandBatch.invoke"]], "invoke() (armi.cli.clone.clonesuitecommand method)": [[63, "armi.cli.clone.CloneSuiteCommand.invoke"]], "name (armi.cli.clone.clonearmiruncommandbatch attribute)": [[63, "armi.cli.clone.CloneArmiRunCommandBatch.name"]], "name (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[63, "armi.cli.clone.CloneArmiRunCommandInteractive.name"]], "name (armi.cli.clone.clonesuitecommand attribute)": [[63, "armi.cli.clone.CloneSuiteCommand.name"]], "settingsargument (armi.cli.clone.clonearmiruncommandbatch attribute)": [[63, "armi.cli.clone.CloneArmiRunCommandBatch.settingsArgument"]], "settingsargument (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[63, "armi.cli.clone.CloneArmiRunCommandInteractive.settingsArgument"]], "settingsargument (armi.cli.clone.clonesuitecommand attribute)": [[63, "armi.cli.clone.CloneSuiteCommand.settingsArgument"]], "comparecases (class in armi.cli.comparecases)": [[64, "armi.cli.compareCases.CompareCases"]], "comparesuites (class in armi.cli.comparecases)": [[64, "armi.cli.compareCases.CompareSuites"]], "addoptions() (armi.cli.comparecases.comparecases method)": [[64, "armi.cli.compareCases.CompareCases.addOptions"]], "addoptions() (armi.cli.comparecases.comparesuites method)": [[64, "armi.cli.compareCases.CompareSuites.addOptions"]], "armi.cli.comparecases": [[64, "module-armi.cli.compareCases"]], "invoke() (armi.cli.comparecases.comparecases method)": [[64, "armi.cli.compareCases.CompareCases.invoke"]], "invoke() (armi.cli.comparecases.comparesuites method)": [[64, "armi.cli.compareCases.CompareSuites.invoke"]], "name (armi.cli.comparecases.comparecases attribute)": [[64, "armi.cli.compareCases.CompareCases.name"]], "name (armi.cli.comparecases.comparesuites attribute)": [[64, "armi.cli.compareCases.CompareSuites.name"]], "parse() (armi.cli.comparecases.comparecases method)": [[64, "armi.cli.compareCases.CompareCases.parse"]], "settingsargument (armi.cli.comparecases.comparecases attribute)": [[64, "armi.cli.compareCases.CompareCases.settingsArgument"]], "settingsargument (armi.cli.comparecases.comparesuites attribute)": [[64, "armi.cli.compareCases.CompareSuites.settingsArgument"]], "extractinputs (class in armi.cli.database)": [[65, "armi.cli.database.ExtractInputs"]], "injectinputs (class in armi.cli.database)": [[65, "armi.cli.database.InjectInputs"]], "addoptions() (armi.cli.database.extractinputs method)": [[65, "armi.cli.database.ExtractInputs.addOptions"]], "addoptions() (armi.cli.database.injectinputs method)": [[65, "armi.cli.database.InjectInputs.addOptions"]], "armi.cli.database": [[65, "module-armi.cli.database"]], "invoke() (armi.cli.database.extractinputs method)": [[65, "armi.cli.database.ExtractInputs.invoke"]], "invoke() (armi.cli.database.injectinputs method)": [[65, "armi.cli.database.InjectInputs.invoke"]], "mode (armi.cli.database.extractinputs attribute)": [[65, "armi.cli.database.ExtractInputs.mode"]], "mode (armi.cli.database.injectinputs attribute)": [[65, "armi.cli.database.InjectInputs.mode"]], "name (armi.cli.database.extractinputs attribute)": [[65, "armi.cli.database.ExtractInputs.name"]], "name (armi.cli.database.injectinputs attribute)": [[65, "armi.cli.database.InjectInputs.name"]], "parse_args() (armi.cli.database.extractinputs method)": [[65, "armi.cli.database.ExtractInputs.parse_args"]], "settingsargument (armi.cli.database.extractinputs attribute)": [[65, "armi.cli.database.ExtractInputs.settingsArgument"]], "settingsargument (armi.cli.database.injectinputs attribute)": [[65, "armi.cli.database.InjectInputs.settingsArgument"]], "entrypoint (class in armi.cli.entrypoint)": [[66, "armi.cli.entryPoint.EntryPoint"]], "addoptions() (armi.cli.entrypoint.entrypoint method)": [[66, "armi.cli.entryPoint.EntryPoint.addOptions"]], "armi.cli.entrypoint": [[66, "module-armi.cli.entryPoint"]], "createoptionfromsetting() (armi.cli.entrypoint.entrypoint method)": [[66, "armi.cli.entryPoint.EntryPoint.createOptionFromSetting"]], "description (armi.cli.entrypoint.entrypoint attribute)": [[66, "armi.cli.entryPoint.EntryPoint.description"]], "invoke() (armi.cli.entrypoint.entrypoint method)": [[66, "armi.cli.entryPoint.EntryPoint.invoke"]], "loadsettings() (in module armi.cli.entrypoint)": [[66, "armi.cli.entryPoint.loadSettings"]], "mode (armi.cli.entrypoint.entrypoint attribute)": [[66, "armi.cli.entryPoint.EntryPoint.mode"]], "name (armi.cli.entrypoint.entrypoint attribute)": [[66, "armi.cli.entryPoint.EntryPoint.name"]], "parse() (armi.cli.entrypoint.entrypoint method)": [[66, "armi.cli.entryPoint.EntryPoint.parse"]], "parse_args() (armi.cli.entrypoint.entrypoint method)": [[66, "armi.cli.entryPoint.EntryPoint.parse_args"]], "setcasetitle() (in module armi.cli.entrypoint)": [[66, "armi.cli.entryPoint.setCaseTitle"]], "setsetting() (in module armi.cli.entrypoint)": [[66, "armi.cli.entryPoint.setSetting"]], "settingsargument (armi.cli.entrypoint.entrypoint attribute)": [[66, "armi.cli.entryPoint.EntryPoint.settingsArgument"]], "splash (armi.cli.entrypoint.entrypoint attribute)": [[66, "armi.cli.entryPoint.EntryPoint.splash"]], "storebool() (in module armi.cli.entrypoint)": [[66, "armi.cli.entryPoint.storeBool"]], "gridguientrypoint (class in armi.cli.gridgui)": [[67, "armi.cli.gridGui.GridGuiEntryPoint"]], "addoptions() (armi.cli.gridgui.gridguientrypoint method)": [[67, "armi.cli.gridGui.GridGuiEntryPoint.addOptions"]], "armi.cli.gridgui": [[67, "module-armi.cli.gridGui"]], "invoke() (armi.cli.gridgui.gridguientrypoint method)": [[67, "armi.cli.gridGui.GridGuiEntryPoint.invoke"]], "name (armi.cli.gridgui.gridguientrypoint attribute)": [[67, "armi.cli.gridGui.GridGuiEntryPoint.name"]], "settingsargument (armi.cli.gridgui.gridguientrypoint attribute)": [[67, "armi.cli.gridGui.GridGuiEntryPoint.settingsArgument"]], "migrateinputs (class in armi.cli.migrateinputs)": [[68, "armi.cli.migrateInputs.MigrateInputs"]], "addoptions() (armi.cli.migrateinputs.migrateinputs method)": [[68, "armi.cli.migrateInputs.MigrateInputs.addOptions"]], "armi.cli.migrateinputs": [[68, "module-armi.cli.migrateInputs"]], "invoke() (armi.cli.migrateinputs.migrateinputs method)": [[68, "armi.cli.migrateInputs.MigrateInputs.invoke"]], "name (armi.cli.migrateinputs.migrateinputs attribute)": [[68, "armi.cli.migrateInputs.MigrateInputs.name"]], "settingsargument (armi.cli.migrateinputs.migrateinputs attribute)": [[68, "armi.cli.migrateInputs.MigrateInputs.settingsArgument"]], "modifycasesettingscommand (class in armi.cli.modify)": [[69, "armi.cli.modify.ModifyCaseSettingsCommand"]], "addoptions() (armi.cli.modify.modifycasesettingscommand method)": [[69, "armi.cli.modify.ModifyCaseSettingsCommand.addOptions"]], "armi.cli.modify": [[69, "module-armi.cli.modify"]], "invoke() (armi.cli.modify.modifycasesettingscommand method)": [[69, "armi.cli.modify.ModifyCaseSettingsCommand.invoke"]], "name (armi.cli.modify.modifycasesettingscommand attribute)": [[69, "armi.cli.modify.ModifyCaseSettingsCommand.name"]], "settingsargument (armi.cli.modify.modifycasesettingscommand attribute)": [[69, "armi.cli.modify.ModifyCaseSettingsCommand.settingsArgument"]], "reportsentrypoint (class in armi.cli.reportsentrypoint)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint"]], "addoptions() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.addOptions"]], "armi.cli.reportsentrypoint": [[70, "module-armi.cli.reportsEntryPoint"]], "createreportfromsettings() (in module armi.cli.reportsentrypoint)": [[70, "armi.cli.reportsEntryPoint.createReportFromSettings"]], "description (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.description"]], "invoke() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.invoke"]], "name (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.name"]], "report_out_dir (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.report_out_dir"]], "settingsargument (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.settingsArgument"]], "totwotuple() (armi.cli.reportsentrypoint.reportsentrypoint static method)": [[70, "armi.cli.reportsEntryPoint.ReportsEntryPoint.toTwoTuple"]], "runentrypoint (class in armi.cli.run)": [[71, "armi.cli.run.RunEntryPoint"]], "addoptions() (armi.cli.run.runentrypoint method)": [[71, "armi.cli.run.RunEntryPoint.addOptions"]], "armi.cli.run": [[71, "module-armi.cli.run"]], "invoke() (armi.cli.run.runentrypoint method)": [[71, "armi.cli.run.RunEntryPoint.invoke"]], "name (armi.cli.run.runentrypoint attribute)": [[71, "armi.cli.run.RunEntryPoint.name"]], "settingsargument (armi.cli.run.runentrypoint attribute)": [[71, "armi.cli.run.RunEntryPoint.settingsArgument"]], "runsuitecommand (class in armi.cli.runsuite)": [[72, "armi.cli.runSuite.RunSuiteCommand"]], "addoptions() (armi.cli.runsuite.runsuitecommand method)": [[72, "armi.cli.runSuite.RunSuiteCommand.addOptions"]], "armi.cli.runsuite": [[72, "module-armi.cli.runSuite"]], "invoke() (armi.cli.runsuite.runsuitecommand method)": [[72, "armi.cli.runSuite.RunSuiteCommand.invoke"]], "name (armi.cli.runsuite.runsuitecommand attribute)": [[72, "armi.cli.runSuite.RunSuiteCommand.name"]], "settingsargument (armi.cli.runsuite.runsuitecommand attribute)": [[72, "armi.cli.runSuite.RunSuiteCommand.settingsArgument"]], "armi.cli.tests": [[73, "module-armi.cli.tests"]], "testcheckinputentrypoint (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint"]], "testclonearmiruncommandbatch (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch"]], "testclonesuitecommand (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand"]], "testcomparecases (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareCases"]], "testcompareisotxslibsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint"]], "testcomparesuites (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareSuites"]], "testexpandblueprints (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints"]], "testextractinputs (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestExtractInputs"]], "testinitializationentrypoints (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints"]], "testinjectinputs (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestInjectInputs"]], "testmigrateinputs (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs"]], "testmodifycasesettingscommand (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand"]], "testreportsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint"]], "testrunentrypoint (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint"]], "testrunsuitecommand (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand"]], "testvisfileentrypointcommand (class in armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand"]], "armi.cli.tests.test_runentrypoint": [[74, "module-armi.cli.tests.test_runEntryPoint"]], "buildtestdb() (in module armi.cli.tests.test_runentrypoint)": [[74, "armi.cli.tests.test_runEntryPoint.buildTestDB"]], "test_checkinputentrypointbasics() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointBasics"]], "test_checkinputentrypointinvoke() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointInvoke"]], "test_cleanargs() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_cleanArgs"]], "test_clonearmiruncommandbatchbasics() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchBasics"]], "test_clonearmiruncommandbatchinvokemedium() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeMedium"]], "test_clonearmiruncommandbatchinvokeshort() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeShort"]], "test_clonesuitecommandbasics() (armi.cli.tests.test_runentrypoint.testclonesuitecommand method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand.test_cloneSuiteCommandBasics"]], "test_comparecasesbasics() (armi.cli.tests.test_runentrypoint.testcomparecases method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareCases.test_compareCasesBasics"]], "test_compareisotxslibsbasics() (armi.cli.tests.test_runentrypoint.testcompareisotxslibsentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint.test_compareIsotxsLibsBasics"]], "test_comparesuitesbasics() (armi.cli.tests.test_runentrypoint.testcomparesuites method)": [[74, "armi.cli.tests.test_runEntryPoint.TestCompareSuites.test_compareSuitesBasics"]], "test_entrypointinitialization() (armi.cli.tests.test_runentrypoint.testinitializationentrypoints method)": [[74, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints.test_entryPointInitialization"]], "test_executecommand() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_executeCommand"]], "test_expandblueprintsbasics() (armi.cli.tests.test_runentrypoint.testexpandblueprints method)": [[74, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints.test_expandBlueprintsBasics"]], "test_extractinputsbasics() (armi.cli.tests.test_runentrypoint.testextractinputs method)": [[74, "armi.cli.tests.test_runEntryPoint.TestExtractInputs.test_extractInputsBasics"]], "test_injectinputsbasics() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[74, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsBasics"]], "test_injectinputsinvokeignore() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[74, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeIgnore"]], "test_injectinputsinvokenodata() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[74, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeNoData"]], "test_migrateinputsbasics() (armi.cli.tests.test_runentrypoint.testmigrateinputs method)": [[74, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs.test_migrateInputsBasics"]], "test_modifycasesettingscommandbasics() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[74, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandBasics"]], "test_modifycasesettingscommandinvoke() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[74, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandInvoke"]], "test_reportsentrypointbasics() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_reportsEntryPointBasics"]], "test_runcommandhelp() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runCommandHelp"]], "test_runentrypointbasics() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runEntryPointBasics"]], "test_runsuitecommandbasics() (armi.cli.tests.test_runentrypoint.testrunsuitecommand method)": [[74, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand.test_runSuiteCommandBasics"]], "test_totwotuple() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[74, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_toTwoTuple"]], "test_visfileentrypointbasics() (armi.cli.tests.test_runentrypoint.testvisfileentrypointcommand method)": [[74, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand.test_visFileEntryPointBasics"]], "testrunsuitesuite (class in armi.cli.tests.test_runsuite)": [[75, "armi.cli.tests.test_runSuite.TestRunSuiteSuite"]], "armi.cli.tests.test_runsuite": [[75, "module-armi.cli.tests.test_runSuite"]], "test_listcommand() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[75, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_listCommand"]], "test_run() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[75, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_run"]], "test_showversion() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[75, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_showVersion"]], "armi.conftest": [[76, "module-armi.conftest"]], "bootstraparmitestenv() (in module armi.conftest)": [[76, "armi.conftest.bootstrapArmiTestEnv"]], "pytest_sessionstart() (in module armi.conftest)": [[76, "armi.conftest.pytest_sessionstart"]], "batch (armi.context.mode attribute)": [[77, "armi.context.Mode.BATCH"]], "gui (armi.context.mode attribute)": [[77, "armi.context.Mode.GUI"]], "interactive (armi.context.mode attribute)": [[77, "armi.context.Mode.INTERACTIVE"]], "mode (class in armi.context)": [[77, "armi.context.Mode"]], "activatelocalfastpath() (in module armi.context)": [[77, "armi.context.activateLocalFastPath"]], "armi.context": [[77, "module-armi.context"]], "cleanallarmitempdirs() (in module armi.context)": [[77, "armi.context.cleanAllArmiTempDirs"]], "cleantempdirs() (in module armi.context)": [[77, "armi.context.cleanTempDirs"]], "disconnectallhdfdbs() (in module armi.context)": [[77, "armi.context.disconnectAllHdfDBs"]], "getfastpath() (in module armi.context)": [[77, "armi.context.getFastPath"]], "setmode() (armi.context.mode class method)": [[77, "armi.context.Mode.setMode"]], "after (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.AFTER"]], "before (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.BEFORE"]], "bookkeeping (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.BOOKKEEPING"]], "critical_control (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.CRITICAL_CONTROL"]], "cross_sections (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.CROSS_SECTIONS"]], "depletion (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.DEPLETION"]], "duplicate (armi.interfaces.interface.distribute attribute)": [[78, "armi.interfaces.Interface.Distribute.DUPLICATE"]], "flux (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.FLUX"]], "fuel_management (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.FUEL_MANAGEMENT"]], "fuel_performance (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.FUEL_PERFORMANCE"]], "inputwriter (class in armi.interfaces)": [[78, "armi.interfaces.InputWriter"]], "interface (class in armi.interfaces)": [[78, "armi.interfaces.Interface"]], "interface.distribute (class in armi.interfaces)": [[78, "armi.interfaces.Interface.Distribute"]], "interfaceinfo (class in armi.interfaces)": [[78, "armi.interfaces.InterfaceInfo"]], "new (armi.interfaces.interface.distribute attribute)": [[78, "armi.interfaces.Interface.Distribute.NEW"]], "outputreader (class in armi.interfaces)": [[78, "armi.interfaces.OutputReader"]], "postprocessing (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.POSTPROCESSING"]], "preprocessing (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.PREPROCESSING"]], "reactivity_coeffs (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.REACTIVITY_COEFFS"]], "skip (armi.interfaces.interface.distribute attribute)": [[78, "armi.interfaces.Interface.Distribute.SKIP"]], "stack_order (class in armi.interfaces)": [[78, "armi.interfaces.STACK_ORDER"]], "thermal_hydraulics (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.THERMAL_HYDRAULICS"]], "transient (armi.interfaces.stack_order attribute)": [[78, "armi.interfaces.STACK_ORDER.TRANSIENT"]], "tightcoupler (class in armi.interfaces)": [[78, "armi.interfaces.TightCoupler"]], "apply() (armi.interfaces.outputreader method)": [[78, "armi.interfaces.OutputReader.apply"]], "armi.interfaces": [[78, "module-armi.interfaces"]], "attachreactor() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.attachReactor"]], "bolforce() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.bolForce"]], "detachreactor() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.detachReactor"]], "distributable() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.distributable"]], "duplicate() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.duplicate"]], "enabled() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.enabled"]], "function (armi.interfaces.interface attribute)": [[78, "armi.interfaces.Interface.function"]], "getactiveinterfaceinfo() (in module armi.interfaces)": [[78, "armi.interfaces.getActiveInterfaceInfo"]], "getdependencies() (armi.interfaces.interface class method)": [[78, "armi.interfaces.Interface.getDependencies"]], "gethistoryparams() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.getHistoryParams"]], "getinputfiles() (armi.interfaces.interface class method)": [[78, "armi.interfaces.Interface.getInputFiles"]], "getinterface() (armi.interfaces.inputwriter method)": [[78, "armi.interfaces.InputWriter.getInterface"]], "getinterface() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.getInterface"]], "getinterface() (armi.interfaces.outputreader method)": [[78, "armi.interfaces.OutputReader.getInterface"]], "getlistdimension() (armi.interfaces.tightcoupler static method)": [[78, "armi.interfaces.TightCoupler.getListDimension"]], "gettightcouplingvalue() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.getTightCouplingValue"]], "interactboc() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactBOC"]], "interactbol() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactBOL"]], "interactcoupled() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactCoupled"]], "interactdistributestate() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactDistributeState"]], "interacteoc() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactEOC"]], "interacteol() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactEOL"]], "interacterror() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactError"]], "interacteverynode() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactEveryNode"]], "interactinit() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.interactInit"]], "interfacecls (armi.interfaces.interfaceinfo attribute)": [[78, "armi.interfaces.InterfaceInfo.interfaceCls"]], "isconverged() (armi.interfaces.tightcoupler method)": [[78, "armi.interfaces.TightCoupler.isConverged"]], "isinterfaceactive() (in module armi.interfaces)": [[78, "armi.interfaces.isInterfaceActive"]], "isrequesteddetailpoint() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.isRequestedDetailPoint"]], "kwargs (armi.interfaces.interfaceinfo attribute)": [[78, "armi.interfaces.InterfaceInfo.kwargs"]], "name (armi.interfaces.interface attribute)": [[78, "armi.interfaces.Interface.name"]], "namecontains() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.nameContains"]], "order (armi.interfaces.interfaceinfo attribute)": [[78, "armi.interfaces.InterfaceInfo.order"]], "postdistributestate() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.postDistributeState"]], "predistributestate() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.preDistributeState"]], "read() (armi.interfaces.outputreader method)": [[78, "armi.interfaces.OutputReader.read"]], "readoutput() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.readOutput"]], "specifyinputs() (armi.interfaces.interface static method)": [[78, "armi.interfaces.Interface.specifyInputs"]], "storepreviousiterationvalue() (armi.interfaces.tightcoupler method)": [[78, "armi.interfaces.TightCoupler.storePreviousIterationValue"]], "updatephysicscouplingcontrol() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.updatePhysicsCouplingControl"]], "workeroperate() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.workerOperate"]], "write() (armi.interfaces.inputwriter method)": [[78, "armi.interfaces.InputWriter.write"]], "writeinput() (armi.interfaces.interface method)": [[78, "armi.interfaces.Interface.writeInput"]], "armi.materials": [[79, "module-armi.materials"]], "importmaterialsintomodulenamespace() (in module armi.materials)": [[79, "armi.materials.importMaterialsIntoModuleNamespace"]], "iterallmaterialclassesinnamespace() (in module armi.materials)": [[79, "armi.materials.iterAllMaterialClassesInNamespace"]], "resolvematerialclassbyname() (in module armi.materials)": [[79, "armi.materials.resolveMaterialClassByName"]], "setmaterialnamespaceorder() (in module armi.materials)": [[79, "armi.materials.setMaterialNamespaceOrder"]], "air (class in armi.materials.air)": [[80, "armi.materials.air.Air"]], "armi.materials.air": [[80, "module-armi.materials.air"]], "heatcapacity() (armi.materials.air.air method)": [[80, "armi.materials.air.Air.heatCapacity"]], "propertyvalidtemperature (armi.materials.air.air attribute)": [[80, "armi.materials.air.Air.propertyValidTemperature"]], "pseudodensity() (armi.materials.air.air method)": [[80, "armi.materials.air.Air.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.air.air method)": [[80, "armi.materials.air.Air.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.air.air method)": [[80, "armi.materials.air.Air.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.air.air method)": [[80, "armi.materials.air.Air.thermalConductivity"]], "alloy200 (class in armi.materials.alloy200)": [[81, "armi.materials.alloy200.Alloy200"]], "armi.materials.alloy200": [[81, "module-armi.materials.alloy200"]], "density() (armi.materials.alloy200.alloy200 method)": [[81, "armi.materials.alloy200.Alloy200.density"]], "linearexpansion() (armi.materials.alloy200.alloy200 method)": [[81, "armi.materials.alloy200.Alloy200.linearExpansion"]], "linearexpansiontable (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.linearExpansionTable"]], "linearexpansiontablek (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.linearExpansionTableK"]], "modelconst (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.modelConst"]], "propertyvalidtemperature (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.propertyValidTemperature"]], "referencemaxpercentimpurites (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.referenceMaxPercentImpurites"]], "references (armi.materials.alloy200.alloy200 attribute)": [[81, "armi.materials.alloy200.Alloy200.references"]], "setdefaultmassfracs() (armi.materials.alloy200.alloy200 method)": [[81, "armi.materials.alloy200.Alloy200.setDefaultMassFracs"]], "b4c (class in armi.materials.b4c)": [[82, "armi.materials.b4c.B4C"]], "applyinputparams() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.applyInputParams"]], "armi.materials.b4c": [[82, "module-armi.materials.b4c"]], "density() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.density"]], "enrichednuclide (armi.materials.b4c.b4c attribute)": [[82, "armi.materials.b4c.B4C.enrichedNuclide"]], "getmassenrichmentfromnumenrich() (armi.materials.b4c.b4c static method)": [[82, "armi.materials.b4c.B4C.getMassEnrichmentFromNumEnrich"]], "linearexpansionpercent() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.b4c.b4c attribute)": [[82, "armi.materials.b4c.B4C.propertyValidTemperature"]], "pseudodensity() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.setDefaultMassFracs"]], "setnewmassfracsfrommassenrich() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.setNewMassFracsFromMassEnrich"]], "updatetd() (armi.materials.b4c.b4c method)": [[82, "armi.materials.b4c.B4C.updateTD"]], "be9 (class in armi.materials.be9)": [[83, "armi.materials.be9.Be9"]], "armi.materials.be9": [[83, "module-armi.materials.be9"]], "density() (armi.materials.be9.be9 method)": [[83, "armi.materials.be9.Be9.density"]], "linearexpansionpercent() (armi.materials.be9.be9 method)": [[83, "armi.materials.be9.Be9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.be9.be9 attribute)": [[83, "armi.materials.be9.Be9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.be9.be9 method)": [[83, "armi.materials.be9.Be9.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.be9.be9 attribute)": [[83, "armi.materials.be9.Be9.thermalScatteringLaws"]], "cah2 (class in armi.materials.cah2)": [[84, "armi.materials.caH2.CaH2"]], "armi.materials.cah2": [[84, "module-armi.materials.caH2"]], "density() (armi.materials.cah2.cah2 method)": [[84, "armi.materials.caH2.CaH2.density"]], "setdefaultmassfracs() (armi.materials.cah2.cah2 method)": [[84, "armi.materials.caH2.CaH2.setDefaultMassFracs"]], "californium (class in armi.materials.californium)": [[85, "armi.materials.californium.Californium"]], "armi.materials.californium": [[85, "module-armi.materials.californium"]], "density() (armi.materials.californium.californium method)": [[85, "armi.materials.californium.Californium.density"]], "setdefaultmassfracs() (armi.materials.californium.californium method)": [[85, "armi.materials.californium.Californium.setDefaultMassFracs"]], "concrete (class in armi.materials.concrete)": [[86, "armi.materials.concrete.Concrete"]], "armi.materials.concrete": [[86, "module-armi.materials.concrete"]], "density() (armi.materials.concrete.concrete method)": [[86, "armi.materials.concrete.Concrete.density"]], "setdefaultmassfracs() (armi.materials.concrete.concrete method)": [[86, "armi.materials.concrete.Concrete.setDefaultMassFracs"]], "cu (class in armi.materials.copper)": [[87, "armi.materials.copper.Cu"]], "armi.materials.copper": [[87, "module-armi.materials.copper"]], "density() (armi.materials.copper.cu method)": [[87, "armi.materials.copper.Cu.density"]], "linearexpansionpercent() (armi.materials.copper.cu method)": [[87, "armi.materials.copper.Cu.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.copper.cu attribute)": [[87, "armi.materials.copper.Cu.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.copper.cu method)": [[87, "armi.materials.copper.Cu.setDefaultMassFracs"]], "cs (class in armi.materials.cs)": [[88, "armi.materials.cs.Cs"]], "armi.materials.cs": [[88, "module-armi.materials.cs"]], "meltingpoint() (armi.materials.cs.cs method)": [[88, "armi.materials.cs.Cs.meltingPoint"]], "pseudodensity() (armi.materials.cs.cs method)": [[88, "armi.materials.cs.Cs.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.cs.cs method)": [[88, "armi.materials.cs.Cs.setDefaultMassFracs"]], "custom (class in armi.materials.custom)": [[89, "armi.materials.custom.Custom"]], "armi.materials.custom": [[89, "module-armi.materials.custom"]], "density() (armi.materials.custom.custom method)": [[89, "armi.materials.custom.Custom.density"]], "enrichednuclide (armi.materials.custom.custom attribute)": [[89, "armi.materials.custom.Custom.enrichedNuclide"]], "pseudodensity() (armi.materials.custom.custom method)": [[89, "armi.materials.custom.Custom.pseudoDensity"]], "setmassfrac() (armi.materials.custom.custom method)": [[89, "armi.materials.custom.Custom.setMassFrac"]], "graphite (class in armi.materials.graphite)": [[90, "armi.materials.graphite.Graphite"]], "armi.materials.graphite": [[90, "module-armi.materials.graphite"]], "density() (armi.materials.graphite.graphite method)": [[90, "armi.materials.graphite.Graphite.density"]], "linearexpansionpercent() (armi.materials.graphite.graphite method)": [[90, "armi.materials.graphite.Graphite.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.graphite.graphite method)": [[90, "armi.materials.graphite.Graphite.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.graphite.graphite attribute)": [[90, "armi.materials.graphite.Graphite.thermalScatteringLaws"]], "hafnium (class in armi.materials.hafnium)": [[91, "armi.materials.hafnium.Hafnium"]], "armi.materials.hafnium": [[91, "module-armi.materials.hafnium"]], "density() (armi.materials.hafnium.hafnium method)": [[91, "armi.materials.hafnium.Hafnium.density"]], "setdefaultmassfracs() (armi.materials.hafnium.hafnium method)": [[91, "armi.materials.hafnium.Hafnium.setDefaultMassFracs"]], "hastelloyn (class in armi.materials.hastelloyn)": [[92, "armi.materials.hastelloyN.HastelloyN"]], "armi.materials.hastelloyn": [[92, "module-armi.materials.hastelloyN"]], "density() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.density"]], "heatcapacity() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.heatCapacity"]], "linearexpansionpercent() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.linearExpansionPercent"]], "materialintro (armi.materials.hastelloyn.hastelloyn attribute)": [[92, "armi.materials.hastelloyN.HastelloyN.materialIntro"]], "meancoefficientthermalexpansion() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.hastelloyn.hastelloyn attribute)": [[92, "armi.materials.hastelloyN.HastelloyN.propertyValidTemperature"]], "reftempk (armi.materials.hastelloyn.hastelloyn attribute)": [[92, "armi.materials.hastelloyN.HastelloyN.refTempK"]], "setdefaultmassfracs() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.hastelloyn.hastelloyn method)": [[92, "armi.materials.hastelloyN.HastelloyN.thermalConductivity"]], "ht9 (class in armi.materials.ht9)": [[93, "armi.materials.ht9.HT9"]], "armi.materials.ht9": [[93, "module-armi.materials.ht9"]], "density() (armi.materials.ht9.ht9 method)": [[93, "armi.materials.ht9.HT9.density"]], "linearexpansionpercent() (armi.materials.ht9.ht9 method)": [[93, "armi.materials.ht9.HT9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.ht9.ht9 attribute)": [[93, "armi.materials.ht9.HT9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.ht9.ht9 method)": [[93, "armi.materials.ht9.HT9.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.ht9.ht9 method)": [[93, "armi.materials.ht9.HT9.thermalConductivity"]], "inconel (class in armi.materials.inconel)": [[94, "armi.materials.inconel.Inconel"]], "inconel617 (class in armi.materials.inconel)": [[94, "armi.materials.inconel.Inconel617"]], "armi.materials.inconel": [[94, "module-armi.materials.inconel"]], "density() (armi.materials.inconel.inconel method)": [[94, "armi.materials.inconel.Inconel.density"]], "references (armi.materials.inconel.inconel attribute)": [[94, "armi.materials.inconel.Inconel.references"]], "setdefaultmassfracs() (armi.materials.inconel.inconel method)": [[94, "armi.materials.inconel.Inconel.setDefaultMassFracs"]], "inconel600 (class in armi.materials.inconel600)": [[95, "armi.materials.inconel600.Inconel600"]], "armi.materials.inconel600": [[95, "module-armi.materials.inconel600"]], "density() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.density"]], "heatcapacity() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.heatCapacity"]], "linearexpansion() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel600.inconel600 attribute)": [[95, "armi.materials.inconel600.Inconel600.propertyValidTemperature"]], "reftempk (armi.materials.inconel600.inconel600 attribute)": [[95, "armi.materials.inconel600.Inconel600.refTempK"]], "references (armi.materials.inconel600.inconel600 attribute)": [[95, "armi.materials.inconel600.Inconel600.references"]], "setdefaultmassfracs() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel600.inconel600 method)": [[95, "armi.materials.inconel600.Inconel600.thermalConductivity"]], "inconel625 (class in armi.materials.inconel625)": [[96, "armi.materials.inconel625.Inconel625"]], "armi.materials.inconel625": [[96, "module-armi.materials.inconel625"]], "density() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.density"]], "heatcapacity() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.heatCapacity"]], "linearexpansion() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel625.inconel625 attribute)": [[96, "armi.materials.inconel625.Inconel625.propertyValidTemperature"]], "reftempk (armi.materials.inconel625.inconel625 attribute)": [[96, "armi.materials.inconel625.Inconel625.refTempK"]], "references (armi.materials.inconel625.inconel625 attribute)": [[96, "armi.materials.inconel625.Inconel625.references"]], "setdefaultmassfracs() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel625.inconel625 method)": [[96, "armi.materials.inconel625.Inconel625.thermalConductivity"]], "inconel800 (class in armi.materials.inconel800)": [[97, "armi.materials.inconel800.Inconel800"]], "armi.materials.inconel800": [[97, "module-armi.materials.inconel800"]], "density() (armi.materials.inconel800.inconel800 method)": [[97, "armi.materials.inconel800.Inconel800.density"]], "linearexpansionpercent() (armi.materials.inconel800.inconel800 method)": [[97, "armi.materials.inconel800.Inconel800.linearExpansionPercent"]], "meancoefficientthermalexpansion() (armi.materials.inconel800.inconel800 method)": [[97, "armi.materials.inconel800.Inconel800.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.inconel800.inconel800 attribute)": [[97, "armi.materials.inconel800.Inconel800.propertyValidTemperature"]], "reftempk (armi.materials.inconel800.inconel800 attribute)": [[97, "armi.materials.inconel800.Inconel800.refTempK"]], "setdefaultmassfracs() (armi.materials.inconel800.inconel800 method)": [[97, "armi.materials.inconel800.Inconel800.setDefaultMassFracs"]], "inconelpe16 (class in armi.materials.inconelpe16)": [[98, "armi.materials.inconelPE16.InconelPE16"]], "armi.materials.inconelpe16": [[98, "module-armi.materials.inconelPE16"]], "density() (armi.materials.inconelpe16.inconelpe16 method)": [[98, "armi.materials.inconelPE16.InconelPE16.density"]], "references (armi.materials.inconelpe16.inconelpe16 attribute)": [[98, "armi.materials.inconelPE16.InconelPE16.references"]], "setdefaultmassfracs() (armi.materials.inconelpe16.inconelpe16 method)": [[98, "armi.materials.inconelPE16.InconelPE16.setDefaultMassFracs"]], "inconelx750 (class in armi.materials.inconelx750)": [[99, "armi.materials.inconelX750.InconelX750"]], "armi.materials.inconelx750": [[99, "module-armi.materials.inconelX750"]], "density() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.density"]], "heatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.heatCapacity"]], "linearexpansion() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconelx750.inconelx750 attribute)": [[99, "armi.materials.inconelX750.InconelX750.propertyValidTemperature"]], "reftempk (armi.materials.inconelx750.inconelx750 attribute)": [[99, "armi.materials.inconelX750.InconelX750.refTempK"]], "references (armi.materials.inconelx750.inconelx750 attribute)": [[99, "armi.materials.inconelX750.InconelX750.references"]], "setdefaultmassfracs() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[99, "armi.materials.inconelX750.InconelX750.thermalConductivity"]], "lead (class in armi.materials.lead)": [[100, "armi.materials.lead.Lead"]], "armi.materials.lead": [[100, "module-armi.materials.lead"]], "heatcapacity() (armi.materials.lead.lead method)": [[100, "armi.materials.lead.Lead.heatCapacity"]], "propertyvalidtemperature (armi.materials.lead.lead attribute)": [[100, "armi.materials.lead.Lead.propertyValidTemperature"]], "pseudodensity() (armi.materials.lead.lead method)": [[100, "armi.materials.lead.Lead.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.lead.lead method)": [[100, "armi.materials.lead.Lead.setDefaultMassFracs"]], "volumetricexpansion() (armi.materials.lead.lead method)": [[100, "armi.materials.lead.Lead.volumetricExpansion"]], "leadbismuth (class in armi.materials.leadbismuth)": [[101, "armi.materials.leadBismuth.LeadBismuth"]], "armi.materials.leadbismuth": [[101, "module-armi.materials.leadBismuth"]], "dynamicvisc() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.dynamicVisc"]], "heatcapacity() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.heatCapacity"]], "propertyvalidtemperature (armi.materials.leadbismuth.leadbismuth attribute)": [[101, "armi.materials.leadBismuth.LeadBismuth.propertyValidTemperature"]], "pseudodensity() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.thermalConductivity"]], "volumetricexpansion() (armi.materials.leadbismuth.leadbismuth method)": [[101, "armi.materials.leadBismuth.LeadBismuth.volumetricExpansion"]], "lithium (class in armi.materials.lithium)": [[102, "armi.materials.lithium.Lithium"]], "applyinputparams() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.applyInputParams"]], "armi.materials.lithium": [[102, "module-armi.materials.lithium"]], "boilingpoint() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.boilingPoint"]], "enrichednuclide (armi.materials.lithium.lithium attribute)": [[102, "armi.materials.lithium.Lithium.enrichedNuclide"]], "heatcapacity() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.heatCapacity"]], "meltingpoint() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.meltingPoint"]], "pseudodensity() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.pseudoDensity"]], "references (armi.materials.lithium.lithium attribute)": [[102, "armi.materials.lithium.Lithium.references"]], "setdefaultmassfracs() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.lithium.lithium method)": [[102, "armi.materials.lithium.Lithium.thermalConductivity"]], "magnesium (class in armi.materials.magnesium)": [[103, "armi.materials.magnesium.Magnesium"]], "armi.materials.magnesium": [[103, "module-armi.materials.magnesium"]], "propertyvalidtemperature (armi.materials.magnesium.magnesium attribute)": [[103, "armi.materials.magnesium.Magnesium.propertyValidTemperature"]], "pseudodensity() (armi.materials.magnesium.magnesium method)": [[103, "armi.materials.magnesium.Magnesium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.magnesium.magnesium method)": [[103, "armi.materials.magnesium.Magnesium.setDefaultMassFracs"]], "data_source (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.DATA_SOURCE"]], "fluid (class in armi.materials.material)": [[104, "armi.materials.material.Fluid"]], "fuelmaterial (class in armi.materials.material)": [[104, "armi.materials.material.FuelMaterial"]], "material (class in armi.materials.material)": [[104, "armi.materials.material.Material"]], "simplesolid (class in armi.materials.material)": [[104, "armi.materials.material.SimpleSolid"]], "adjustmassenrichment() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.adjustMassEnrichment"]], "adjustmassfrac() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.adjustMassFrac"]], "adjusttd() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.adjustTD"]], "applyinputparams() (armi.materials.material.fuelmaterial method)": [[104, "armi.materials.material.FuelMaterial.applyInputParams"]], "applyinputparams() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.applyInputParams"]], "armi.materials.material": [[104, "module-armi.materials.material"]], "backup() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.backUp"]], "checkpropertytemprange() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.checkPropertyTempRange"]], "checktemprange() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.checkTempRange"]], "class1_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.class1_custom_isotopics"]], "class1_wt_frac (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.class1_wt_frac"]], "class2_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.class2_custom_isotopics"]], "clearcache() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.clearCache"]], "clearmassfrac() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.clearMassFrac"]], "density() (armi.materials.material.fluid method)": [[104, "armi.materials.material.Fluid.density"]], "density() (armi.materials.material.fuelmaterial method)": [[104, "armi.materials.material.FuelMaterial.density"]], "density() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.density"]], "density() (armi.materials.material.simplesolid method)": [[104, "armi.materials.material.SimpleSolid.density"]], "densitykgm3() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.densityKgM3"]], "densitytimesheatcapacity() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.densityTimesHeatCapacity"]], "duplicate() (armi.materials.material.fuelmaterial method)": [[104, "armi.materials.material.FuelMaterial.duplicate"]], "duplicate() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.duplicate"]], "enrichednuclide (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.enrichedNuclide"]], "gasporosity (armi.materials.material.material property)": [[104, "armi.materials.material.Material.gasPorosity"]], "getchildren() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getChildren"]], "getchildrenwithflags() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getChildrenWithFlags"]], "getcorrosionrate() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getCorrosionRate"]], "getmassfrac() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getMassFrac"]], "getname() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getName"]], "getnuclides() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getNuclides"]], "getproperty() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getProperty"]], "gettd() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getTD"]], "gettempchangefordensitychange() (armi.materials.material.fluid method)": [[104, "armi.materials.material.Fluid.getTempChangeForDensityChange"]], "gettempchangefordensitychange() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getTempChangeForDensityChange"]], "gettemperatureatdensity() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getTemperatureAtDensity"]], "getthermalexpansiondensityreduction() (armi.materials.material.fluid method)": [[104, "armi.materials.material.Fluid.getThermalExpansionDensityReduction"]], "getthermalexpansiondensityreduction() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.getThermalExpansionDensityReduction"]], "heatcapacity() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.heatCapacity"]], "linearexpansion() (armi.materials.material.fluid method)": [[104, "armi.materials.material.Fluid.linearExpansion"]], "linearexpansion() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.linearExpansion"]], "linearexpansionfactor() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.linearExpansionFactor"]], "linearexpansionpercent() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.linearExpansionPercent"]], "linearexpansionpercent() (armi.materials.material.simplesolid method)": [[104, "armi.materials.material.SimpleSolid.linearExpansionPercent"]], "liquidporosity (armi.materials.material.material property)": [[104, "armi.materials.material.Material.liquidPorosity"]], "modelconst (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.modelConst"]], "name (armi.materials.material.material property)": [[104, "armi.materials.material.Material.name"]], "parentawaredensityredirect() (in module armi.materials.material)": [[104, "armi.materials.material.parentAwareDensityRedirect"]], "propertyvalidtemperature (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.propertyValidTemperature"]], "pseudodensity() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.pseudoDensity"]], "pseudodensity() (armi.materials.material.simplesolid method)": [[104, "armi.materials.material.SimpleSolid.pseudoDensity"]], "pseudodensitykgm3() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.pseudoDensityKgM3"]], "pufrac (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.puFrac"]], "reftempk (armi.materials.material.simplesolid attribute)": [[104, "armi.materials.material.SimpleSolid.refTempK"]], "references (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.references"]], "removenucmassfrac() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.removeNucMassFrac"]], "restorebackup() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.restoreBackup"]], "setdefaultmassfracs() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.setDefaultMassFracs"]], "setmassfrac() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.setMassFrac"]], "thermalconductivity() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.thermalConductivity"]], "thermalscatteringlaws (armi.materials.material.material attribute)": [[104, "armi.materials.material.Material.thermalScatteringLaws"]], "ufrac (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.uFrac"]], "volumetricexpansion() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.volumetricExpansion"]], "yieldstrength() (armi.materials.material.material method)": [[104, "armi.materials.material.Material.yieldStrength"]], "zrfrac (armi.materials.material.fuelmaterial attribute)": [[104, "armi.materials.material.FuelMaterial.zrFrac"]], "mgo (class in armi.materials.mgo)": [[105, "armi.materials.mgO.MgO"]], "armi.materials.mgo": [[105, "module-armi.materials.mgO"]], "density() (armi.materials.mgo.mgo method)": [[105, "armi.materials.mgO.MgO.density"]], "linearexpansionpercent() (armi.materials.mgo.mgo method)": [[105, "armi.materials.mgO.MgO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.mgo.mgo attribute)": [[105, "armi.materials.mgO.MgO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.mgo.mgo method)": [[105, "armi.materials.mgO.MgO.setDefaultMassFracs"]], "armi.materials.mixture": [[106, "module-armi.materials.mixture"]], "molybdenum (class in armi.materials.molybdenum)": [[107, "armi.materials.molybdenum.Molybdenum"]], "armi.materials.molybdenum": [[107, "module-armi.materials.molybdenum"]], "density() (armi.materials.molybdenum.molybdenum method)": [[107, "armi.materials.molybdenum.Molybdenum.density"]], "setdefaultmassfracs() (armi.materials.molybdenum.molybdenum method)": [[107, "armi.materials.molybdenum.Molybdenum.setDefaultMassFracs"]], "mox (class in armi.materials.mox)": [[108, "armi.materials.mox.MOX"]], "applyinputparams() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.applyInputParams"]], "armi.materials.mox": [[108, "module-armi.materials.mox"]], "enrichednuclide (armi.materials.mox.mox attribute)": [[108, "armi.materials.mox.MOX.enrichedNuclide"]], "getmassfracpuo2() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.getMassFracPuO2"]], "getmolfracpuo2() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.getMolFracPuO2"]], "meltingpoint() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.meltingPoint"]], "setdefaultmassfracs() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.setDefaultMassFracs"]], "setmassfracpuo2() (armi.materials.mox.mox method)": [[108, "armi.materials.mox.MOX.setMassFracPuO2"]], "nz (class in armi.materials.nz)": [[109, "armi.materials.nZ.NZ"]], "armi.materials.nz": [[109, "module-armi.materials.nZ"]], "density() (armi.materials.nz.nz method)": [[109, "armi.materials.nZ.NZ.density"]], "setdefaultmassfracs() (armi.materials.nz.nz method)": [[109, "armi.materials.nZ.NZ.setDefaultMassFracs"]], "potassium (class in armi.materials.potassium)": [[110, "armi.materials.potassium.Potassium"]], "armi.materials.potassium": [[110, "module-armi.materials.potassium"]], "propertyvalidtemperature (armi.materials.potassium.potassium attribute)": [[110, "armi.materials.potassium.Potassium.propertyValidTemperature"]], "pseudodensity() (armi.materials.potassium.potassium method)": [[110, "armi.materials.potassium.Potassium.pseudoDensity"]], "sc2o3 (class in armi.materials.scandiumoxide)": [[111, "armi.materials.scandiumOxide.Sc2O3"]], "armi.materials.scandiumoxide": [[111, "module-armi.materials.scandiumOxide"]], "density() (armi.materials.scandiumoxide.sc2o3 method)": [[111, "armi.materials.scandiumOxide.Sc2O3.density"]], "linearexpansionpercent() (armi.materials.scandiumoxide.sc2o3 method)": [[111, "armi.materials.scandiumOxide.Sc2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.scandiumoxide.sc2o3 attribute)": [[111, "armi.materials.scandiumOxide.Sc2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.scandiumoxide.sc2o3 method)": [[111, "armi.materials.scandiumOxide.Sc2O3.setDefaultMassFracs"]], "sic (class in armi.materials.sic)": [[112, "armi.materials.siC.SiC"]], "armi.materials.sic": [[112, "module-armi.materials.siC"]], "cumulativelinearexpansion() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.cumulativeLinearExpansion"]], "density() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.density"]], "heatcapacity() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.heatCapacity"]], "meltingpoint() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.meltingPoint"]], "propertyequation (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.propertyEquation"]], "propertynotes (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.propertyNotes"]], "propertyunits (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.propertyUnits"]], "propertyvalidtemperature (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.propertyValidTemperature"]], "pseudodensity() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.pseudoDensity"]], "reftempk (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.refTempK"]], "references (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.references"]], "setdefaultmassfracs() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.sic.sic method)": [[112, "armi.materials.siC.SiC.thermalConductivity"]], "thermalscatteringlaws (armi.materials.sic.sic attribute)": [[112, "armi.materials.siC.SiC.thermalScatteringLaws"]], "sodium (class in armi.materials.sodium)": [[113, "armi.materials.sodium.Sodium"]], "armi.materials.sodium": [[113, "module-armi.materials.sodium"]], "enthalpy() (armi.materials.sodium.sodium method)": [[113, "armi.materials.sodium.Sodium.enthalpy"]], "propertyvalidtemperature (armi.materials.sodium.sodium attribute)": [[113, "armi.materials.sodium.Sodium.propertyValidTemperature"]], "pseudodensity() (armi.materials.sodium.sodium method)": [[113, "armi.materials.sodium.Sodium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sodium.sodium method)": [[113, "armi.materials.sodium.Sodium.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.sodium.sodium method)": [[113, "armi.materials.sodium.Sodium.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.sodium.sodium method)": [[113, "armi.materials.sodium.Sodium.thermalConductivity"]], "nacl (class in armi.materials.sodiumchloride)": [[114, "armi.materials.sodiumChloride.NaCl"]], "armi.materials.sodiumchloride": [[114, "module-armi.materials.sodiumChloride"]], "density() (armi.materials.sodiumchloride.nacl method)": [[114, "armi.materials.sodiumChloride.NaCl.density"]], "setdefaultmassfracs() (armi.materials.sodiumchloride.nacl method)": [[114, "armi.materials.sodiumChloride.NaCl.setDefaultMassFracs"]], "sulfur (class in armi.materials.sulfur)": [[115, "armi.materials.sulfur.Sulfur"]], "applyinputparams() (armi.materials.sulfur.sulfur method)": [[115, "armi.materials.sulfur.Sulfur.applyInputParams"]], "armi.materials.sulfur": [[115, "module-armi.materials.sulfur"]], "propertyvalidtemperature (armi.materials.sulfur.sulfur attribute)": [[115, "armi.materials.sulfur.Sulfur.propertyValidTemperature"]], "pseudodensity() (armi.materials.sulfur.sulfur method)": [[115, "armi.materials.sulfur.Sulfur.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sulfur.sulfur method)": [[115, "armi.materials.sulfur.Sulfur.setDefaultMassFracs"]], "updatetd() (armi.materials.sulfur.sulfur method)": [[115, "armi.materials.sulfur.Sulfur.updateTD"]], "volumetricexpansion() (armi.materials.sulfur.sulfur method)": [[115, "armi.materials.sulfur.Sulfur.volumetricExpansion"]], "tzm (class in armi.materials.tzm)": [[116, "armi.materials.tZM.TZM"]], "armi.materials.tzm": [[116, "module-armi.materials.tZM"]], "density() (armi.materials.tzm.tzm method)": [[116, "armi.materials.tZM.TZM.density"]], "linearexpansionpercent() (armi.materials.tzm.tzm method)": [[116, "armi.materials.tZM.TZM.linearExpansionPercent"]], "percentthermalexpansion (armi.materials.tzm.tzm attribute)": [[116, "armi.materials.tZM.TZM.percentThermalExpansion"]], "propertyvalidtemperature (armi.materials.tzm.tzm attribute)": [[116, "armi.materials.tZM.TZM.propertyValidTemperature"]], "references (armi.materials.tzm.tzm attribute)": [[116, "armi.materials.tZM.TZM.references"]], "setdefaultmassfracs() (armi.materials.tzm.tzm method)": [[116, "armi.materials.tZM.TZM.setDefaultMassFracs"]], "temperaturec (armi.materials.tzm.tzm attribute)": [[116, "armi.materials.tZM.TZM.temperatureC"]], "tantalum (class in armi.materials.tantalum)": [[117, "armi.materials.tantalum.Tantalum"]], "armi.materials.tantalum": [[117, "module-armi.materials.tantalum"]], "density() (armi.materials.tantalum.tantalum method)": [[117, "armi.materials.tantalum.Tantalum.density"]], "setdefaultmassfracs() (armi.materials.tantalum.tantalum method)": [[117, "armi.materials.tantalum.Tantalum.setDefaultMassFracs"]], "armi.materials.tests": [[118, "module-armi.materials.tests"]], "materials__init__tests (class in armi.materials.tests.test__init__)": [[119, "armi.materials.tests.test__init__.Materials__init__Tests"]], "armi.materials.tests.test__init__": [[119, "module-armi.materials.tests.test__init__"]], "bettersubclasscheck() (in module armi.materials.tests.test__init__)": [[119, "armi.materials.tests.test__init__.betterSubClassCheck"]], "test_canaccessclassesfrompackage() (armi.materials.tests.test__init__.materials__init__tests method)": [[119, "armi.materials.tests.test__init__.Materials__init__Tests.test_canAccessClassesFromPackage"]], "test_packageclassesequalmoduleclasses() (armi.materials.tests.test__init__.materials__init__tests method)": [[119, "armi.materials.tests.test__init__.Materials__init__Tests.test_packageClassesEqualModuleClasses"]], "test_air (class in armi.materials.tests.test_air)": [[120, "armi.materials.tests.test_air.Test_Air"]], "armi.materials.tests.test_air": [[120, "module-armi.materials.tests.test_air"]], "test_heatcapacity() (armi.materials.tests.test_air.test_air method)": [[120, "armi.materials.tests.test_air.Test_Air.test_heatCapacity"]], "test_massfrac() (armi.materials.tests.test_air.test_air method)": [[120, "armi.materials.tests.test_air.Test_Air.test_massFrac"]], "test_pseudodensity() (armi.materials.tests.test_air.test_air method)": [[120, "armi.materials.tests.test_air.Test_Air.test_pseudoDensity"]], "test_thermalconductivity() (armi.materials.tests.test_air.test_air method)": [[120, "armi.materials.tests.test_air.Test_Air.test_thermalConductivity"]], "test_validranges() (armi.materials.tests.test_air.test_air method)": [[120, "armi.materials.tests.test_air.Test_Air.test_validRanges"]], "b4c_testcase (class in armi.materials.tests.test_b4c)": [[121, "armi.materials.tests.test_b4c.B4C_TestCase"]], "mat_class (armi.materials.tests.test_b4c.b4c_testcase attribute)": [[121, "armi.materials.tests.test_b4c.B4C_TestCase.MAT_CLASS"]], "armi.materials.tests.test_b4c": [[121, "module-armi.materials.tests.test_b4c"]], "test_propertyvalidtemperature() (armi.materials.tests.test_b4c.b4c_testcase method)": [[121, "armi.materials.tests.test_b4c.B4C_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_b4c.b4c_testcase method)": [[121, "armi.materials.tests.test_b4c.B4C_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_be9.test_be9 attribute)": [[122, "armi.materials.tests.test_be9.Test_Be9.MAT_CLASS"]], "test_be9 (class in armi.materials.tests.test_be9)": [[122, "armi.materials.tests.test_be9.Test_Be9"]], "armi.materials.tests.test_be9": [[122, "module-armi.materials.tests.test_be9"]], "test_propertyvalidtemperature() (armi.materials.tests.test_be9.test_be9 method)": [[122, "armi.materials.tests.test_be9.Test_Be9.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_be9.test_be9 method)": [[122, "armi.materials.tests.test_be9.Test_Be9.test_pseudoDensity"]], "graphite_testcase (class in armi.materials.tests.test_graphite)": [[123, "armi.materials.tests.test_graphite.Graphite_TestCase"]], "mat_class (armi.materials.tests.test_graphite.graphite_testcase attribute)": [[123, "armi.materials.tests.test_graphite.Graphite_TestCase.MAT_CLASS"]], "armi.materials.tests.test_graphite": [[123, "module-armi.materials.tests.test_graphite"]], "test_density() (armi.materials.tests.test_graphite.graphite_testcase method)": [[123, "armi.materials.tests.test_graphite.Graphite_TestCase.test_density"]], "test_linearexpansionpercent() (armi.materials.tests.test_graphite.graphite_testcase method)": [[123, "armi.materials.tests.test_graphite.Graphite_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_graphite.graphite_testcase method)": [[123, "armi.materials.tests.test_graphite.Graphite_TestCase.test_propertyValidTemperature"]], "lithium_testcase (class in armi.materials.tests.test_lithium)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase"]], "mat_class (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.MAT_CLASS"]], "armi.materials.tests.test_lithium": [[124, "module-armi.materials.tests.test_lithium"]], "defaultmassfrac (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.defaultMassFrac"]], "test_lithium_material_modifications() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_Lithium_material_modifications"]], "test_boilingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_boilingPoint"]], "test_heatcapacity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[124, "armi.materials.tests.test_lithium.Lithium_TestCase.test_pseudoDensity"]], "alloy200_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase"]], "cah2_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.CaH2_TestCase"]], "californium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Californium_TestCase"]], "cesium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Cesium_TestCase"]], "copper_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Copper_TestCase"]], "fuelmaterial_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.FuelMaterial_TestCase"]], "hafnium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Hafnium_TestCase"]], "hastelloyn_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase"]], "inconel600_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase"]], "inconel625_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase"]], "inconelx750_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase"]], "inconel_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Inconel_TestCase"]], "leadbismuth_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase"]], "lead_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Lead_TestCase"]], "mat_class (armi.materials.tests.test_materials.alloy200_testcase attribute)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cah2_testcase attribute)": [[125, "armi.materials.tests.test_materials.CaH2_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.californium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Californium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cesium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Cesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.copper_testcase attribute)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hafnium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Hafnium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hastelloyn_testcase attribute)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel600_testcase attribute)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel625_testcase attribute)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconelx750_testcase attribute)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.leadbismuth_testcase attribute)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.lead_testcase attribute)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mox_testcase attribute)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesiumoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Magnesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mixture_testcase attribute)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.molybdenum_testcase attribute)": [[125, "armi.materials.tests.test_materials.Molybdenum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.nacl_testcase attribute)": [[125, "armi.materials.tests.test_materials.NaCl_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.niobiumzirconium_testcase attribute)": [[125, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.potassium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Potassium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.scandiumoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sodium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sulfur_testcase attribute)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tzm_testcase attribute)": [[125, "armi.materials.tests.test_materials.TZM_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tantalum_testcase attribute)": [[125, "armi.materials.tests.test_materials.Tantalum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumuraniummetal_testcase attribute)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thorium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uraniumoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uranium_testcase attribute)": [[125, "armi.materials.tests.test_materials.Uranium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.void_testcase attribute)": [[125, "armi.materials.tests.test_materials.Void_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.yttriumoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.YttriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zincoxide_testcase attribute)": [[125, "armi.materials.tests.test_materials.ZincOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zr_testcase attribute)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.MAT_CLASS"]], "mox_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.MOX_TestCase"]], "magnesiumoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase"]], "magnesium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Magnesium_TestCase"]], "materialconstructiontests (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.MaterialConstructionTests"]], "materialfindingtests (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.MaterialFindingTests"]], "mixture_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase"]], "molybdenum_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Molybdenum_TestCase"]], "nacl_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.NaCl_TestCase"]], "niobiumzirconium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase"]], "potassium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Potassium_TestCase"]], "scandiumoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.ScandiumOxide_TestCase"]], "sodium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase"]], "sulfur_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase"]], "tzm_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.TZM_TestCase"]], "tantalum_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Tantalum_TestCase"]], "thoriumoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase"]], "thoriumuraniummetal_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase"]], "thorium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase"]], "uraniumoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase"]], "uranium_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Uranium_TestCase"]], "void_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Void_TestCase"]], "yttriumoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.YttriumOxide_TestCase"]], "zincoxide_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.ZincOxide_TestCase"]], "zr_testcase (class in armi.materials.tests.test_materials)": [[125, "armi.materials.tests.test_materials.Zr_TestCase"]], "armi.materials.tests.test_materials": [[125, "module-armi.materials.tests.test_materials"]], "baseinput (armi.materials.tests.test_materials.fuelmaterial_testcase attribute)": [[125, "armi.materials.tests.test_materials.FuelMaterial_TestCase.baseInput"]], "loadassembly() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[125, "armi.materials.tests.test_materials.FuelMaterial_TestCase.loadAssembly"]], "test_00_applyinputparams() (armi.materials.tests.test_materials.tzm_testcase method)": [[125, "armi.materials.tests.test_materials.TZM_TestCase.test_00_applyInputParams"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_00_setDefaultMassFracs"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_01_linearExpansionPercent"]], "test_01_pseudodensity() (armi.materials.tests.test_materials.tzm_testcase method)": [[125, "armi.materials.tests.test_materials.TZM_TestCase.test_01_pseudoDensity"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_02_linearExpansion"]], "test_02_linearexpansionpercent() (armi.materials.tests.test_materials.tzm_testcase method)": [[125, "armi.materials.tests.test_materials.TZM_TestCase.test_02_linearExpansionPercent"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_03_pseudoDensity"]], "test_iconel800_linearexpansion() (armi.materials.tests.test_materials.inconel_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel_TestCase.test_Iconel800_linearExpansion"]], "test_adjustmassenrichment() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_adjustMassEnrichment"]], "test_applyinputparams() (armi.materials.tests.test_materials.mox_testcase method)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uranium_testcase method)": [[125, "armi.materials.tests.test_materials.Uranium_TestCase.test_applyInputParams"]], "test_class1class2_class1_wt_frac() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[125, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_class1_wt_frac"]], "test_class1class2_classx_custom_isotopics() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[125, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_classX_custom_isotopics"]], "test_density() (armi.materials.tests.test_materials.mox_testcase method)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.mixture_testcase method)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.nacl_testcase method)": [[125, "armi.materials.tests.test_materials.NaCl_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.void_testcase method)": [[125, "armi.materials.tests.test_materials.Void_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_density"]], "test_densityneverchanges() (armi.materials.tests.test_materials.copper_testcase method)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.test_densityNeverChanges"]], "test_densitytimesheatcapactiy() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_densityTimesHeatCapactiy"]], "test_duplicate() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_duplicate"]], "test_dynamicvisc() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_dynamicVisc"]], "test_enthalpy() (armi.materials.tests.test_materials.sodium_testcase method)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.test_enthalpy"]], "test_findmaterial() (armi.materials.tests.test_materials.materialfindingtests method)": [[125, "armi.materials.tests.test_materials.MaterialFindingTests.test_findMaterial"]], "test_getchildren() (armi.materials.tests.test_materials.copper_testcase method)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildren"]], "test_getchildrenwithflags() (armi.materials.tests.test_materials.copper_testcase method)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildrenWithFlags"]], "test_getcorrosionrate() (armi.materials.tests.test_materials.californium_testcase method)": [[125, "armi.materials.tests.test_materials.Californium_TestCase.test_getCorrosionRate"]], "test_getdensityexpansion3d() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getDensityExpansion3D"]], "test_getmassfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.test_getMassFracPuO2"]], "test_getmeltingpoint() (armi.materials.tests.test_materials.mox_testcase method)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.test_getMeltingPoint"]], "test_getmolfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[125, "armi.materials.tests.test_materials.MOX_TestCase.test_getMolFracPuO2"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_getTempChangeForDensityChange"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTempChangeForDensityChange"]], "test_gettemperatureatdensity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTemperatureAtDensity"]], "test_heatcapacity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_heatCapacity"]], "test_linearexpansion() (armi.materials.tests.test_materials.alloy200_testcase method)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.mixture_testcase method)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.void_testcase method)": [[125, "armi.materials.tests.test_materials.Void_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.zr_testcase method)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansion"]], "test_linearexpansionhotter() (armi.materials.tests.test_materials.alloy200_testcase method)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansionHotter"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.copper_testcase method)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zr_testcase method)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansionPercent"]], "test_material_initialization() (armi.materials.tests.test_materials.materialconstructiontests method)": [[125, "armi.materials.tests.test_materials.MaterialConstructionTests.test_material_initialization"]], "test_meancoefficientthermalexpansion() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_meanCoefficientThermalExpansion"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_meltingPoint"]], "test_namespacing() (armi.materials.tests.test_materials.materialfindingtests method)": [[125, "armi.materials.tests.test_materials.MaterialFindingTests.test_namespacing"]], "test_nicklecontent() (armi.materials.tests.test_materials.alloy200_testcase method)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase.test_nickleContent"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitHeatCapacity"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitThermalConductivity"]], "test_porosities() (armi.materials.tests.test_materials.californium_testcase method)": [[125, "armi.materials.tests.test_materials.Californium_TestCase.test_porosities"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.alloy200_testcase method)": [[125, "armi.materials.tests.test_materials.Alloy200_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cah2_testcase method)": [[125, "armi.materials.tests.test_materials.CaH2_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.californium_testcase method)": [[125, "armi.materials.tests.test_materials.Californium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cesium_testcase method)": [[125, "armi.materials.tests.test_materials.Cesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hafnium_testcase method)": [[125, "armi.materials.tests.test_materials.Hafnium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel600_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel600_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel625_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel625_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[125, "armi.materials.tests.test_materials.InconelX750_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesium_testcase method)": [[125, "armi.materials.tests.test_materials.Magnesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.mixture_testcase method)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[125, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.nacl_testcase method)": [[125, "armi.materials.tests.test_materials.NaCl_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[125, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.potassium_testcase method)": [[125, "armi.materials.tests.test_materials.Potassium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sodium_testcase method)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sulfur_testcase method)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tzm_testcase method)": [[125, "armi.materials.tests.test_materials.TZM_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tantalum_testcase method)": [[125, "armi.materials.tests.test_materials.Tantalum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uranium_testcase method)": [[125, "armi.materials.tests.test_materials.Uranium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.void_testcase method)": [[125, "armi.materials.tests.test_materials.Void_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zr_testcase method)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_materials.cah2_testcase method)": [[125, "armi.materials.tests.test_materials.CaH2_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.californium_testcase method)": [[125, "armi.materials.tests.test_materials.Californium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.cesium_testcase method)": [[125, "armi.materials.tests.test_materials.Cesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.hafnium_testcase method)": [[125, "armi.materials.tests.test_materials.Hafnium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.inconel_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesium_testcase method)": [[125, "armi.materials.tests.test_materials.Magnesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[125, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[125, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.potassium_testcase method)": [[125, "armi.materials.tests.test_materials.Potassium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sodium_testcase method)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sulfur_testcase method)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.tantalum_testcase method)": [[125, "armi.materials.tests.test_materials.Tantalum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.void_testcase method)": [[125, "armi.materials.tests.test_materials.Void_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.zr_testcase method)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.test_pseudoDensity"]], "test_removenucmassfrac() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_removeNucMassFrac"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.copper_testcase method)": [[125, "armi.materials.tests.test_materials.Copper_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel_testcase method)": [[125, "armi.materials.tests.test_materials.Inconel_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.mixture_testcase method)": [[125, "armi.materials.tests.test_materials.Mixture_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.sulfur_testcase method)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_setDefaultMassFracs"]], "test_specificvolumeliquid() (armi.materials.tests.test_materials.sodium_testcase method)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.test_specificVolumeLiquid"]], "test_thermalconductivity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[125, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.sodium_testcase method)": [[125, "armi.materials.tests.test_materials.Sodium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[125, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thorium_testcase method)": [[125, "armi.materials.tests.test_materials.Thorium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[125, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uranium_testcase method)": [[125, "armi.materials.tests.test_materials.Uranium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.zr_testcase method)": [[125, "armi.materials.tests.test_materials.Zr_TestCase.test_thermalConductivity"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[125, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[125, "armi.materials.tests.test_materials.Lead_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.sulfur_testcase method)": [[125, "armi.materials.tests.test_materials.Sulfur_TestCase.test_volumetricExpansion"]], "mat_class (armi.materials.tests.test_sic.test_sic attribute)": [[126, "armi.materials.tests.test_sic.Test_SiC.MAT_CLASS"]], "test_sic (class in armi.materials.tests.test_sic)": [[126, "armi.materials.tests.test_sic.Test_SiC"]], "armi.materials.tests.test_sic": [[126, "module-armi.materials.tests.test_sic"]], "test_heatcapacity() (armi.materials.tests.test_sic.test_sic method)": [[126, "armi.materials.tests.test_sic.Test_SiC.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_sic.test_sic method)": [[126, "armi.materials.tests.test_sic.Test_SiC.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sic.test_sic method)": [[126, "armi.materials.tests.test_sic.Test_SiC.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_sic.test_sic method)": [[126, "armi.materials.tests.test_sic.Test_SiC.test_pseudoDensity"]], "mat_class (armi.materials.tests.test_sulfur.sulfur_testcase attribute)": [[127, "armi.materials.tests.test_sulfur.Sulfur_TestCase.MAT_CLASS"]], "sulfur_testcase (class in armi.materials.tests.test_sulfur)": [[127, "armi.materials.tests.test_sulfur.Sulfur_TestCase"]], "armi.materials.tests.test_sulfur": [[127, "module-armi.materials.tests.test_sulfur"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[127, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_propertyValidTemperature"]], "test_sulfur_density_frac() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[127, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_sulfur_density_frac"]], "mat_class (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase attribute)": [[128, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.MAT_CLASS"]], "thoriumoxide_testcase (class in armi.materials.tests.test_thoriumoxide)": [[128, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumoxide": [[128, "module-armi.materials.tests.test_thoriumOxide"]], "test_linearexpansionpercent() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[128, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[128, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[128, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_uzr.uzr_testcase attribute)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.MAT_CLASS"]], "uzr_testcase (class in armi.materials.tests.test_uzr)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase"]], "armi.materials.tests.test_uzr": [[129, "module-armi.materials.tests.test_uZr"]], "test_td() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_TD"]], "test_cache() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_cache"]], "test_density() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_density"]], "test_densitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_densityKgM3"]], "test_duplicate() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_duplicate"]], "test_ispicklable() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_isPicklable"]], "test_propertyvalidtemperature() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_propertyValidTemperature"]], "test_pseudodensitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[129, "armi.materials.tests.test_uZr.UZR_TestCase.test_pseudoDensityKgM3"]], "test_water (class in armi.materials.tests.test_water)": [[130, "armi.materials.tests.test_water.Test_Water"]], "armi.materials.tests.test_water": [[130, "module-armi.materials.tests.test_water"]], "test_massfrac() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_massFrac"]], "test_propertyvalidtemperature() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_propertyValidTemperature"]], "test_validatenames() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_validateNames"]], "test_water_at_boiling() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_water_at_boiling"]], "test_water_at_critcalpoint() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_water_at_critcalPoint"]], "test_water_at_freezing() (armi.materials.tests.test_water.test_water method)": [[130, "armi.materials.tests.test_water.Test_Water.test_water_at_freezing"]], "thu (class in armi.materials.thu)": [[131, "armi.materials.thU.ThU"]], "applyinputparams() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.applyInputParams"]], "armi.materials.thu": [[131, "module-armi.materials.thU"]], "enrichednuclide (armi.materials.thu.thu attribute)": [[131, "armi.materials.thU.ThU.enrichedNuclide"]], "getenrichment() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.getEnrichment"]], "linearexpansion() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.linearExpansion"]], "meltingpoint() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.meltingPoint"]], "propertyvalidtemperature (armi.materials.thu.thu attribute)": [[131, "armi.materials.thU.ThU.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thu.thu method)": [[131, "armi.materials.thU.ThU.thermalConductivity"]], "thorium (class in armi.materials.thorium)": [[132, "armi.materials.thorium.Thorium"]], "armi.materials.thorium": [[132, "module-armi.materials.thorium"]], "linearexpansion() (armi.materials.thorium.thorium method)": [[132, "armi.materials.thorium.Thorium.linearExpansion"]], "meltingpoint() (armi.materials.thorium.thorium method)": [[132, "armi.materials.thorium.Thorium.meltingPoint"]], "propertyvalidtemperature (armi.materials.thorium.thorium attribute)": [[132, "armi.materials.thorium.Thorium.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thorium.thorium method)": [[132, "armi.materials.thorium.Thorium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thorium.thorium method)": [[132, "armi.materials.thorium.Thorium.thermalConductivity"]], "tho2 (class in armi.materials.thoriumoxide)": [[133, "armi.materials.thoriumOxide.ThO2"]], "thoriumoxide (class in armi.materials.thoriumoxide)": [[133, "armi.materials.thoriumOxide.ThoriumOxide"]], "applyinputparams() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.applyInputParams"]], "armi.materials.thoriumoxide": [[133, "module-armi.materials.thoriumOxide"]], "density() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.density"]], "linearexpansion() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.meltingPoint"]], "propertyvalidtemperature (armi.materials.thoriumoxide.thoriumoxide attribute)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thoriumoxide.thoriumoxide method)": [[133, "armi.materials.thoriumOxide.ThoriumOxide.thermalConductivity"]], "uthzr (class in armi.materials.uthzr)": [[134, "armi.materials.uThZr.UThZr"]], "applyinputparams() (armi.materials.uthzr.uthzr method)": [[134, "armi.materials.uThZr.UThZr.applyInputParams"]], "armi.materials.uthzr": [[134, "module-armi.materials.uThZr"]], "enrichednuclide (armi.materials.uthzr.uthzr attribute)": [[134, "armi.materials.uThZr.UThZr.enrichedNuclide"]], "pseudodensity() (armi.materials.uthzr.uthzr method)": [[134, "armi.materials.uThZr.UThZr.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.uthzr.uthzr method)": [[134, "armi.materials.uThZr.UThZr.setDefaultMassFracs"]], "uzr (class in armi.materials.uzr)": [[135, "armi.materials.uZr.UZr"]], "applyinputparams() (armi.materials.uzr.uzr method)": [[135, "armi.materials.uZr.UZr.applyInputParams"]], "armi.materials.uzr": [[135, "module-armi.materials.uZr"]], "enrichednuclide (armi.materials.uzr.uzr attribute)": [[135, "armi.materials.uZr.UZr.enrichedNuclide"]], "linearexpansionpercent() (armi.materials.uzr.uzr method)": [[135, "armi.materials.uZr.UZr.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.uzr.uzr method)": [[135, "armi.materials.uZr.UZr.setDefaultMassFracs"]], "ufracdefault (armi.materials.uzr.uzr attribute)": [[135, "armi.materials.uZr.UZr.uFracDefault"]], "zrfracdefault (armi.materials.uzr.uzr attribute)": [[135, "armi.materials.uZr.UZr.zrFracDefault"]], "uranium (class in armi.materials.uranium)": [[136, "armi.materials.uranium.Uranium"]], "applyinputparams() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.applyInputParams"]], "armi.materials.uranium": [[136, "module-armi.materials.uranium"]], "density() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.density"]], "enrichednuclide (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.enrichedNuclide"]], "heatcapacity() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.heatCapacity"]], "linearexpansion() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.linearExpansion"]], "linearexpansionpercent() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.linearExpansionPercent"]], "materialintro (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.materialIntro"]], "meltingpoint() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.meltingPoint"]], "propertyequation (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.propertyEquation"]], "propertynotes (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.propertyNotes"]], "propertyrawdata (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.propertyRawData"]], "propertyunits (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.propertyUnits"]], "propertyvalidtemperature (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.propertyValidTemperature"]], "pseudodensity() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.pseudoDensity"]], "refdens (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.refDens"]], "references (armi.materials.uranium.uranium attribute)": [[136, "armi.materials.uranium.Uranium.references"]], "setdefaultmassfracs() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uranium.uranium method)": [[136, "armi.materials.uranium.Uranium.thermalConductivity"]], "ea (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants.Ea"]], "heatcapacityconstants (class in armi.materials.uraniumoxide)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants"]], "reference_temperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.REFERENCE_TEMPERATURE"]], "uo2 (class in armi.materials.uraniumoxide)": [[137, "armi.materials.uraniumOxide.UO2"]], "uraniumoxide (class in armi.materials.uraniumoxide)": [[137, "armi.materials.uraniumOxide.UraniumOxide"]], "applyinputparams() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.applyInputParams"]], "armi.materials.uraniumoxide": [[137, "module-armi.materials.uraniumOxide"]], "c1 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants.c1"]], "c2 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants.c2"]], "c3 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants.c3"]], "density() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.density"]], "enrichednuclide (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.enrichedNuclide"]], "heatcapacity() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.heatCapacity"]], "heatcapacityconstants (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.heatCapacityConstants"]], "linearexpansion() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.meltingPoint"]], "propertyunits (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.propertyUnits"]], "propertyvalidtemperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.propertyValidTemperature"]], "references (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.references"]], "setdefaultmassfracs() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uraniumoxide.uraniumoxide method)": [[137, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivity"]], "thermalconductivitytable (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTable"]], "thermalconductivitytablek (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTableK"]], "thermalscatteringlaws (armi.materials.uraniumoxide.uraniumoxide attribute)": [[137, "armi.materials.uraniumOxide.UraniumOxide.thermalScatteringLaws"]], "theta (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[137, "armi.materials.uraniumOxide.HeatCapacityConstants.theta"]], "void (class in armi.materials.void)": [[138, "armi.materials.void.Void"]], "armi.materials.void": [[138, "module-armi.materials.void"]], "density() (armi.materials.void.void method)": [[138, "armi.materials.void.Void.density"]], "pseudodensity() (armi.materials.void.void method)": [[138, "armi.materials.void.Void.pseudoDensity"]], "alpha_0 (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.ALPHA_0"]], "density_critical_gpercubiccentimeter (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.DENSITY_CRITICAL_GPERCUBICCENTIMETER"]], "density_critical_kgpercubicmeter (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.DENSITY_CRITICAL_KGPERCUBICMETER"]], "phi_0 (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.PHI_0"]], "saturatedsteam (class in armi.materials.water)": [[139, "armi.materials.water.SaturatedSteam"]], "saturatedwater (class in armi.materials.water)": [[139, "armi.materials.water.SaturatedWater"]], "temperature_critical_k (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.TEMPERATURE_CRITICAL_K"]], "vapor_pressure_critical_mpa (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_MPA"]], "vapor_pressure_critical_pa (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_PA"]], "water (class in armi.materials.water)": [[139, "armi.materials.water.Water"]], "armi.materials.water": [[139, "module-armi.materials.water"]], "auxiliaryquantityspecificenthalpy() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.auxiliaryQuantitySpecificEnthalpy"]], "auxiliaryquantityspecificentropy() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.auxiliaryQuantitySpecificEntropy"]], "d (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.d"]], "enthalpy() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.enthalpy"]], "entropy() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.entropy"]], "pseudodensity() (armi.materials.water.saturatedsteam method)": [[139, "armi.materials.water.SaturatedSteam.pseudoDensity"]], "pseudodensity() (armi.materials.water.saturatedwater method)": [[139, "armi.materials.water.SaturatedWater.pseudoDensity"]], "pseudodensity() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.pseudoDensity"]], "references (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.references"]], "setdefaultmassfracs() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.setDefaultMassFracs"]], "tau() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.tau"]], "thermalscatteringlaws (armi.materials.water.water attribute)": [[139, "armi.materials.water.Water.thermalScatteringLaws"]], "theta() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.theta"]], "vaporpressure() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.vaporPressure"]], "vaporpressureprime() (armi.materials.water.water method)": [[139, "armi.materials.water.Water.vaporPressurePrime"]], "y2o3 (class in armi.materials.yttriumoxide)": [[140, "armi.materials.yttriumOxide.Y2O3"]], "armi.materials.yttriumoxide": [[140, "module-armi.materials.yttriumOxide"]], "density() (armi.materials.yttriumoxide.y2o3 method)": [[140, "armi.materials.yttriumOxide.Y2O3.density"]], "linearexpansionpercent() (armi.materials.yttriumoxide.y2o3 method)": [[140, "armi.materials.yttriumOxide.Y2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.yttriumoxide.y2o3 attribute)": [[140, "armi.materials.yttriumOxide.Y2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.yttriumoxide.y2o3 method)": [[140, "armi.materials.yttriumOxide.Y2O3.setDefaultMassFracs"]], "zno (class in armi.materials.zincoxide)": [[141, "armi.materials.zincOxide.ZnO"]], "armi.materials.zincoxide": [[141, "module-armi.materials.zincOxide"]], "density() (armi.materials.zincoxide.zno method)": [[141, "armi.materials.zincOxide.ZnO.density"]], "linearexpansionpercent() (armi.materials.zincoxide.zno method)": [[141, "armi.materials.zincOxide.ZnO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.zincoxide.zno attribute)": [[141, "armi.materials.zincOxide.ZnO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.zincoxide.zno method)": [[141, "armi.materials.zincOxide.ZnO.setDefaultMassFracs"]], "zr (class in armi.materials.zr)": [[142, "armi.materials.zr.Zr"]], "armi.materials.zr": [[142, "module-armi.materials.zr"]], "density() (armi.materials.zr.zr method)": [[142, "armi.materials.zr.Zr.density"]], "linearexpansion() (armi.materials.zr.zr method)": [[142, "armi.materials.zr.Zr.linearExpansion"]], "linearexpansionpercent() (armi.materials.zr.zr method)": [[142, "armi.materials.zr.Zr.linearExpansionPercent"]], "linearexpansiontable (armi.materials.zr.zr attribute)": [[142, "armi.materials.zr.Zr.linearExpansionTable"]], "linearexpansiontablek (armi.materials.zr.zr attribute)": [[142, "armi.materials.zr.Zr.linearExpansionTableK"]], "propertyvalidtemperature (armi.materials.zr.zr attribute)": [[142, "armi.materials.zr.Zr.propertyValidTemperature"]], "reftempk (armi.materials.zr.zr attribute)": [[142, "armi.materials.zr.Zr.refTempK"]], "references (armi.materials.zr.zr attribute)": [[142, "armi.materials.zr.Zr.references"]], "setdefaultmassfracs() (armi.materials.zr.zr method)": [[142, "armi.materials.zr.Zr.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.zr.zr method)": [[142, "armi.materials.zr.Zr.thermalConductivity"]], "armi.meta": [[143, "module-armi.meta"]], "armi.migration": [[144, "module-armi.migration"]], "blueprintsmigration (class in armi.migration.base)": [[145, "armi.migration.base.BlueprintsMigration"]], "databasemigration (class in armi.migration.base)": [[145, "armi.migration.base.DatabaseMigration"]], "migration (class in armi.migration.base)": [[145, "armi.migration.base.Migration"]], "settingsmigration (class in armi.migration.base)": [[145, "armi.migration.base.SettingsMigration"]], "apply() (armi.migration.base.migration method)": [[145, "armi.migration.base.Migration.apply"]], "armi.migration.base": [[145, "module-armi.migration.base"]], "fromversion (armi.migration.base.migration attribute)": [[145, "armi.migration.base.Migration.fromVersion"]], "toversion (armi.migration.base.migration attribute)": [[145, "armi.migration.base.Migration.toVersion"]], "removecentersfromblueprints (class in armi.migration.m0_1_3)": [[146, "armi.migration.m0_1_3.RemoveCentersFromBlueprints"]], "updateelementalnuclides (class in armi.migration.m0_1_3)": [[146, "armi.migration.m0_1_3.UpdateElementalNuclides"]], "armi.migration.m0_1_3": [[146, "module-armi.migration.m0_1_3"]], "deletions (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[146, "armi.migration.m0_1_3.UpdateElementalNuclides.deletions"]], "fromversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[146, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.fromVersion"]], "fromversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[146, "armi.migration.m0_1_3.UpdateElementalNuclides.fromVersion"]], "swaps (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[146, "armi.migration.m0_1_3.UpdateElementalNuclides.swaps"]], "toversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[146, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.toVersion"]], "toversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[146, "armi.migration.m0_1_3.UpdateElementalNuclides.toVersion"]], "convertalphanumlocationsettingstonum (class in armi.migration.m0_1_6)": [[147, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum"]], "armi.migration.m0_1_6": [[147, "module-armi.migration.m0_1_6"]], "fromversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[147, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.fromVersion"]], "getindicesfromdif3dstylelocatorlabel() (in module armi.migration.m0_1_6)": [[147, "armi.migration.m0_1_6.getIndicesFromDIF3DStyleLocatorLabel"]], "toversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[147, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.toVersion"]], "armi.migration.tests": [[148, "module-armi.migration.tests"]], "testmigration (class in armi.migration.tests.test_m0_1_6)": [[149, "armi.migration.tests.test_m0_1_6.TestMigration"]], "armi.migration.tests.test_m0_1_6": [[149, "module-armi.migration.tests.test_m0_1_6"]], "test_locationlabelmigration() (armi.migration.tests.test_m0_1_6.testmigration method)": [[149, "armi.migration.tests.test_m0_1_6.TestMigration.test_locationLabelMigration"]], "testmigrationbases (class in armi.migration.tests.test_migration_base)": [[150, "armi.migration.tests.test_migration_base.TestMigrationBases"]], "testsettingsmigration (class in armi.migration.tests.test_migration_base)": [[150, "armi.migration.tests.test_migration_base.TestSettingsMigration"]], "armi.migration.tests.test_migration_base": [[150, "module-armi.migration.tests.test_migration_base"]], "test_basic_validation() (armi.migration.tests.test_migration_base.testmigrationbases method)": [[150, "armi.migration.tests.test_migration_base.TestMigrationBases.test_basic_validation"]], "test_loadstreamfrompath() (armi.migration.tests.test_migration_base.testsettingsmigration method)": [[150, "armi.migration.tests.test_migration_base.TestSettingsMigration.test_loadStreamFromPath"]], "distributestateaction (class in armi.mpiactions)": [[151, "armi.mpiActions.DistributeStateAction"]], "distributionaction (class in armi.mpiactions)": [[151, "armi.mpiActions.DistributionAction"]], "mpiaction (class in armi.mpiactions)": [[151, "armi.mpiActions.MpiAction"]], "mpiactionerror": [[151, "armi.mpiActions.MpiActionError"]], "armi.mpiactions": [[151, "module-armi.mpiActions"]], "broadcast() (armi.mpiactions.mpiaction method)": [[151, "armi.mpiActions.MpiAction.broadcast"]], "gather() (armi.mpiactions.mpiaction method)": [[151, "armi.mpiActions.MpiAction.gather"]], "invoke() (armi.mpiactions.mpiaction method)": [[151, "armi.mpiActions.MpiAction.invoke"]], "invokeasmaster() (armi.mpiactions.mpiaction class method)": [[151, "armi.mpiActions.MpiAction.invokeAsMaster"]], "invokehook() (armi.mpiactions.distributestateaction method)": [[151, "armi.mpiActions.DistributeStateAction.invokeHook"]], "invokehook() (armi.mpiactions.distributionaction method)": [[151, "armi.mpiActions.DistributionAction.invokeHook"]], "invokehook() (armi.mpiactions.mpiaction method)": [[151, "armi.mpiActions.MpiAction.invokeHook"]], "mpiflatten() (armi.mpiactions.mpiaction static method)": [[151, "armi.mpiActions.MpiAction.mpiFlatten"]], "mpiiter() (armi.mpiactions.mpiaction static method)": [[151, "armi.mpiActions.MpiAction.mpiIter"]], "parallel (armi.mpiactions.mpiaction property)": [[151, "armi.mpiActions.MpiAction.parallel"]], "runactions() (in module armi.mpiactions)": [[151, "armi.mpiActions.runActions"]], "runactionsinserial() (in module armi.mpiactions)": [[151, "armi.mpiActions.runActionsInSerial"]], "armi.nucdirectory": [[152, "module-armi.nucDirectory"]], "actinide (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.ACTINIDE"]], "alkaline_earth_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.ALKALINE_EARTH_METAL"]], "alkali_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.ALKALI_METAL"]], "chemicalgroup (class in armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.ChemicalGroup"]], "chemicalphase (class in armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.ChemicalPhase"]], "element (class in armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.Element"]], "gas (armi.nucdirectory.elements.chemicalphase attribute)": [[153, "armi.nucDirectory.elements.ChemicalPhase.GAS"]], "halogen (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.HALOGEN"]], "lanthanide (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.LANTHANIDE"]], "liquid (armi.nucdirectory.elements.chemicalphase attribute)": [[153, "armi.nucDirectory.elements.ChemicalPhase.LIQUID"]], "metalloid (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.METALLOID"]], "noble_gas (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.NOBLE_GAS"]], "nonmetal (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.NONMETAL"]], "post_transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.POST_TRANSITION_METAL"]], "solid (armi.nucdirectory.elements.chemicalphase attribute)": [[153, "armi.nucDirectory.elements.ChemicalPhase.SOLID"]], "transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.TRANSITION_METAL"]], "unknown (armi.nucdirectory.elements.chemicalgroup attribute)": [[153, "armi.nucDirectory.elements.ChemicalGroup.UNKNOWN"]], "unknown (armi.nucdirectory.elements.chemicalphase attribute)": [[153, "armi.nucDirectory.elements.ChemicalPhase.UNKNOWN"]], "addglobalelement() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.addGlobalElement"]], "append() (armi.nucdirectory.elements.element method)": [[153, "armi.nucDirectory.elements.Element.append"]], "armi.nucdirectory.elements": [[153, "module-armi.nucDirectory.elements"]], "destroyglobalelements() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.destroyGlobalElements"]], "factory() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.factory"]], "getelementz() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.getElementZ"]], "getelementsbychemicalgroup() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.getElementsByChemicalGroup"]], "getelementsbychemicalphase() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.getElementsByChemicalPhase"]], "getname() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.getName"]], "getnaturalisotopics() (armi.nucdirectory.elements.element method)": [[153, "armi.nucDirectory.elements.Element.getNaturalIsotopics"]], "getsymbol() (in module armi.nucdirectory.elements)": [[153, "armi.nucDirectory.elements.getSymbol"]], "isheavymetal() (armi.nucdirectory.elements.element method)": [[153, "armi.nucDirectory.elements.Element.isHeavyMetal"]], "isnaturallyoccurring() (armi.nucdirectory.elements.element method)": [[153, "armi.nucDirectory.elements.Element.isNaturallyOccurring"]], "armi.nucdirectory.nucdir": [[154, "module-armi.nucDirectory.nucDir"]], "getatomicweight() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getAtomicWeight"]], "getelementname() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getElementName"]], "getelementsymbol() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getElementSymbol"]], "getmc2label() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getMc2Label"]], "getnaturalisotopics() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNaturalIsotopics"]], "getnaturalmassisotopics() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNaturalMassIsotopics"]], "getnuclide() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNuclide"]], "getnuclidefromname() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNuclideFromName"]], "getnuclidenames() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNuclideNames"]], "getnuclides() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getNuclides"]], "getthresholddisplacementenergy() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.getThresholdDisplacementEnergy"]], "isfissile() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.isFissile"]], "isheavymetal() (in module armi.nucdirectory.nucdir)": [[154, "armi.nucDirectory.nucDir.isHeavyMetal"]], "decay (armi.nucdirectory.nuclidebases.inuclide attribute)": [[155, "armi.nucDirectory.nuclideBases.INuclide.DECAY"]], "dummynuclidebase (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase"]], "imcnpnuclide (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.IMcnpNuclide"]], "inuclide (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.INuclide"]], "lumpnuclidebase (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase"]], "naturalnuclidebase (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase"]], "nuclidebase (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase"]], "nuclideinterface (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface"]], "nuclidewrapper (class in armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper"]], "spontaneous_fission (armi.nucdirectory.nuclidebases.inuclide attribute)": [[155, "armi.nucDirectory.nuclideBases.INuclide.SPONTANEOUS_FISSION"]], "transmutation (armi.nucdirectory.nuclidebases.inuclide attribute)": [[155, "armi.nucDirectory.nuclideBases.INuclide.TRANSMUTATION"]], "addglobalnuclide() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.addGlobalNuclide"]], "addnuclidebases() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.addNuclideBases"]], "armi.nucdirectory.nuclidebases": [[155, "module-armi.nucDirectory.nuclideBases"]], "changelabel() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.changeLabel"]], "destroyglobalnuclides() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.destroyGlobalNuclides"]], "factory() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.factory"]], "fissile (armi.nucdirectory.nuclidebases.inuclide attribute)": [[155, "armi.nucDirectory.nuclideBases.INuclide.fissile"]], "fromname() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.fromName"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[155, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getAAAZZZSId"]], "getdatabasename() (armi.nucdirectory.nuclidebases.inuclide method)": [[155, "armi.nucDirectory.nuclideBases.INuclide.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDatabaseName"]], "getdecay() (armi.nucdirectory.nuclidebases.inuclide method)": [[155, "armi.nucDirectory.nuclideBases.INuclide.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDecay"]], "getdepletablenuclides() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.getDepletableNuclides"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getEndfMatNum"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getEndfMatNum"]], "getisotopics() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.getIsotopics"]], "getmcc2id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc2Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc3Id"]], "getmcnpid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[155, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getMcnpId"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.inuclide method)": [[155, "armi.nucDirectory.nuclideBases.INuclide.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.getNaturalIsotopics"]], "getserpentid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.NuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.getSerpentId"]], "imposeburnchain() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.imposeBurnChain"]], "initreachableactivenuclidesthroughburnchain() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.initReachableActiveNuclidesThroughBurnChain"]], "isfissile() (armi.nucdirectory.nuclidebases.inuclide method)": [[155, "armi.nucDirectory.nuclideBases.INuclide.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.isFissile"]], "isheavymetal() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.DummyNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.inuclide method)": [[155, "armi.nucDirectory.nuclideBases.INuclide.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[155, "armi.nucDirectory.nuclideBases.LumpNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[155, "armi.nucDirectory.nuclideBases.NuclideInterface.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.isHeavyMetal"]], "ismonoisotopicelement() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.isMonoIsotopicElement"]], "isotopes() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.isotopes"]], "name (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.name"]], "readmccnuclidedata() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.readMCCNuclideData"]], "single() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.single"]], "updatenuclidebasesforspecialcases() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.updateNuclideBasesForSpecialCases"]], "weight (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[155, "armi.nucDirectory.nuclideBases.NuclideWrapper.weight"]], "where() (in module armi.nucdirectory.nuclidebases)": [[155, "armi.nucDirectory.nuclideBases.where"]], "armi.nucdirectory.tests": [[156, "module-armi.nucDirectory.tests"]], "testelement (class in armi.nucdirectory.tests.test_elements)": [[157, "armi.nucDirectory.tests.test_elements.TestElement"]], "armi.nucdirectory.tests.test_elements": [[157, "module-armi.nucDirectory.tests.test_elements"]], "test_abundancesaddtoone() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_abundancesAddToOne"]], "test_element_addexistingelementfails() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addExistingElementFails"]], "test_element_addedelementappearsinelementlist() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addedElementAppearsInElementList"]], "test_element_elementbynamereturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByNameReturnsElement"]], "test_element_elementbysymbolreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementBySymbolReturnsElement"]], "test_element_elementbyzreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByZReturnsElement"]], "test_element_getnatrualisotpicsonlyretrievesabundacegt0() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"]], "test_element_isnaturallyoccurring() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_element_isNaturallyOccurring"]], "test_elements_elementbulkproperties() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_elements_elementBulkProperties"]], "test_isheavymetal() (armi.nucdirectory.tests.test_elements.testelement method)": [[157, "armi.nucDirectory.tests.test_elements.TestElement.test_isHeavyMetal"]], "testnucdirectory (class in armi.nucdirectory.tests.test_nucdirectory)": [[158, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory"]], "armi.nucdirectory.tests.test_nucdirectory": [[158, "module-armi.nucDirectory.tests.test_nucDirectory"]], "test_getdisplacementenergy() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[158, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_getDisplacementEnergy"]], "test_nucdir_getnameforolddashednames() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[158, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNameForOldDashedNames"]], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclide() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[158, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"]], "test_nucdir_getnuclidesfromforbadname() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[158, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclidesFromForBadName"]], "testaaazzzsid (class in armi.nucdirectory.tests.test_nuclidebases)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId"]], "testnuclide (class in armi.nucdirectory.tests.test_nuclidebases)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide"]], "armi.nucdirectory.tests.test_nuclidebases": [[159, "module-armi.nucDirectory.tests.test_nuclideBases"]], "test_aaazzzsnamegenerator() (armi.nucdirectory.tests.test_nuclidebases.testaaazzzsid method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId.test_AAAZZZSNameGenerator"]], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"]], "test_naturalnuclidebase_getnatrualisotpics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclideBase_getNatrualIsotpics"]], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotopes() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"]], "test_nonmc2nuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NonMc2Nuclide"]], "test_curiedefinitionwithra226() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_curieDefinitionWithRa226"]], "test_getdecay() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getDecay"]], "test_getendfmatnum() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getEndfMatNum"]], "test_kryptondecayconstants() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_kryptonDecayConstants"]], "test_loadmcc2data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc2Data"]], "test_loadmcc3data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc3Data"]], "test_nucbase_allabundancesaddtoone() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBase_AllAbundancesAddToOne"]], "test_nucbases_alldatabasenamesareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllDatabaseNamesAreUnique"]], "test_nucbases_alllabelsareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllLabelsAreUnique"]], "test_nucbases_am242m() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Am242m"]], "test_nucbases_mc2elementals() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Mc2Elementals"]], "test_nucbases_negativezraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_NegativeZRaisesException"]], "test_nucbases_z295raisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Z295RaisesException"]], "test_nucbases_databasenamesstartwith_n() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_databaseNamesStartWith_n"]], "test_nucbases_fromnamebadnameraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_fromNameBadNameRaisesException"]], "test_nucbases_imposeburnchaindecaybulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainDecayBulkStatistics"]], "test_nucbases_imposeburnchaintransmutationbulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainTransmutationBulkStatistics"]], "test_nucbases_imposeburn_nusf() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurn_nuSF"]], "test_nucbases_isheavymetal() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_isHeavyMetal"]], "test_nucbases_labelandnamecollsionsareforsamenuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_labelAndNameCollsionsAreForSameNuclide"]], "test_nucbases_singlefailswithmultiplematches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithMultipleMatches"]], "test_nucbases_singlefailswithnomatches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithNoMatches"]], "test_nucbases_singleisprettyspecific() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[159, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleIsPrettySpecific"]], "testthermalscattering (class in armi.nucdirectory.tests.test_thermalscattering)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering"]], "armi.nucdirectory.tests.test_thermalscattering": [[160, "module-armi.nucDirectory.tests.test_thermalScattering"]], "buildblockwithtsl() (in module armi.nucdirectory.tests.test_thermalscattering)": [[160, "armi.nucDirectory.tests.test_thermalScattering.buildBlockWithTSL"]], "getnuclidethermalscatteringdata() (in module armi.nucdirectory.tests.test_thermalscattering)": [[160, "armi.nucDirectory.tests.test_thermalScattering.getNuclideThermalScatteringData"]], "test_acecompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACECompound"]], "test_aceelementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEElementInCompound"]], "test_aceisotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEIsotope"]], "test_endf8compound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Compound"]], "test_endf8elementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8ElementInCompound"]], "test_endf8isotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Isotope"]], "test_failonmultiple() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_failOnMultiple"]], "test_graphiteonreactor() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[160, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_graphiteOnReactor"]], "decaymodetests (class in armi.nucdirectory.tests.test_transmutations)": [[161, "armi.nucDirectory.tests.test_transmutations.DecayModeTests"]], "transmutationtests (class in armi.nucdirectory.tests.test_transmutations)": [[161, "armi.nucDirectory.tests.test_transmutations.TransmutationTests"]], "armi.nucdirectory.tests.test_transmutations": [[161, "module-armi.nucDirectory.tests.test_transmutations"]], "randomstring() (in module armi.nucdirectory.tests.test_transmutations)": [[161, "armi.nucDirectory.tests.test_transmutations.randomString"]], "test_decaymode_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[161, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_invalidReactionTypes"]], "test_decaymode_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[161, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_validReactionTypes"]], "test_transmutation_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[161, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_invalidReactionTypes"]], "test_transmutation_productparticle() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[161, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_productParticle"]], "test_transmutation_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[161, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_validReactionTypes"]], "thermalscattering (class in armi.nucdirectory.thermalscattering)": [[162, "armi.nucDirectory.thermalScattering.ThermalScattering"]], "armi.nucdirectory.thermalscattering": [[162, "module-armi.nucDirectory.thermalScattering"]], "factory() (in module armi.nucdirectory.thermalscattering)": [[162, "armi.nucDirectory.thermalScattering.factory"]], "getsubjectnuclidebases() (armi.nucdirectory.thermalscattering.thermalscattering method)": [[162, "armi.nucDirectory.thermalScattering.ThermalScattering.getSubjectNuclideBases"]], "decaymode (class in armi.nucdirectory.transmutations)": [[163, "armi.nucDirectory.transmutations.DecayMode"]], "transmutable (class in armi.nucdirectory.transmutations)": [[163, "armi.nucDirectory.transmutations.Transmutable"]], "transmutation (class in armi.nucdirectory.transmutations)": [[163, "armi.nucDirectory.transmutations.Transmutation"]], "armi.nucdirectory.transmutations": [[163, "module-armi.nucDirectory.transmutations"]], "getpreferredproduct() (armi.nucdirectory.transmutations.transmutable method)": [[163, "armi.nucDirectory.transmutations.Transmutable.getPreferredProduct"]], "armi.nucleardataio": [[164, "module-armi.nuclearDataIO"]], "getexpectedcompxsfilename() (in module armi.nucleardataio)": [[164, "armi.nuclearDataIO.getExpectedCOMPXSFileName"]], "getexpectedgamisofilename() (in module armi.nucleardataio)": [[164, "armi.nuclearDataIO.getExpectedGAMISOFileName"]], "getexpectedisotxsfilename() (in module armi.nucleardataio)": [[164, "armi.nuclearDataIO.getExpectedISOTXSFileName"]], "getexpectedpmatrxfilename() (in module armi.nucleardataio)": [[164, "armi.nuclearDataIO.getExpectedPMATRXFileName"]], "armi.nucleardataio.cccc": [[165, "module-armi.nuclearDataIO.cccc"]], "asciirecordreader (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader"]], "asciirecordwriter (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter"]], "binaryrecordreader (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader"]], "binaryrecordwriter (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter"]], "datacontainer (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.DataContainer"]], "implicit_int (in module armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.IMPLICIT_INT"]], "iorecord (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord"]], "stream (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream"]], "streamwithdatacontainer (class in armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.StreamWithDataContainer"]], "armi.nucleardataio.cccc.cccc": [[166, "module-armi.nuclearDataIO.cccc.cccc"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.close"]], "count (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.count"]], "createrecord() (armi.nucleardataio.cccc.cccc.stream method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.createRecord"]], "getblockbandwidth() (in module armi.nucleardataio.cccc.cccc)": [[166, "armi.nuclearDataIO.cccc.cccc.getBlockBandwidth"]], "maxsize (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.maxsize"]], "open() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.open"]], "readascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.readAscii"]], "readbinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.readBinary"]], "readwrite() (armi.nucleardataio.cccc.cccc.stream method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.readWrite"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwBool"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDouble"]], "rwdoublematrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDoubleMatrix"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwFloat"]], "rwimplicitlytypedmap() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwImplicitlyTypedMap"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwInt"]], "rwintmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwIntMatrix"]], "rwlist() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwList"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwLong"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwLong"]], "rwmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwMatrix"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[166, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.iorecord method)": [[166, "armi.nuclearDataIO.cccc.cccc.IORecord.rwString"]], "writeascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.writeAscii"]], "writebinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[166, "armi.nuclearDataIO.cccc.cccc.Stream.writeBinary"]], "compxsregion (class in armi.nucleardataio.cccc.compxs)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion"]], "allocatexs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.allocateXS"]], "armi.nucleardataio.cccc.compxs": [[167, "module-armi.nuclearDataIO.cccc.compxs"]], "compare() (in module armi.nucleardataio.cccc.compxs)": [[167, "armi.nuclearDataIO.cccc.compxs.compare"]], "getxs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.getXS"]], "initmetadata() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.initMetadata"]], "isfissile (armi.nucleardataio.cccc.compxs.compxsregion property)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.isFissile"]], "makescatteringmatrices() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.makeScatteringMatrices"]], "merge() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[167, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.merge"]], "dif3ddata (class in armi.nucleardataio.cccc.dif3d)": [[168, "armi.nuclearDataIO.cccc.dif3d.Dif3dData"]], "dif3dstream (class in armi.nucleardataio.cccc.dif3d)": [[168, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream"]], "armi.nucleardataio.cccc.dif3d": [[168, "module-armi.nuclearDataIO.cccc.dif3d"]], "readwrite() (armi.nucleardataio.cccc.dif3d.dif3dstream method)": [[168, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream.readWrite"]], "delayedneutrondata (class in armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.DelayedNeutronData"]], "dlayxs (class in armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs"]], "dlayxsio (class in armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO"]], "g (armi.nucleardataio.cccc.dlayxs.dlayxs property)": [[169, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.G"]], "armi.nucleardataio.cccc.dlayxs": [[169, "module-armi.nuclearDataIO.cccc.dlayxs"]], "compare() (in module armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.compare"]], "generateaveragedelayedneutronconstants() (armi.nucleardataio.cccc.dlayxs.dlayxs method)": [[169, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.generateAverageDelayedNeutronConstants"]], "readascii() (in module armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.readBinary"]], "readwrite() (armi.nucleardataio.cccc.dlayxs.dlayxsio method)": [[169, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.dlayxs)": [[169, "armi.nuclearDataIO.cccc.dlayxs.writeBinary"]], "fixsrc (class in armi.nucleardataio.cccc.fixsrc)": [[170, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC"]], "armi.nucleardataio.cccc.fixsrc": [[170, "module-armi.nuclearDataIO.cccc.fixsrc"]], "readbinary() (in module armi.nucleardataio.cccc.fixsrc)": [[170, "armi.nuclearDataIO.cccc.fixsrc.readBinary"]], "readwrite() (armi.nucleardataio.cccc.fixsrc.fixsrc method)": [[170, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC.readWrite"]], "writebinary() (in module armi.nucleardataio.cccc.fixsrc)": [[170, "armi.nuclearDataIO.cccc.fixsrc.writeBinary"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.gamiso)": [[171, "armi.nuclearDataIO.cccc.gamiso.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.gamiso": [[171, "module-armi.nuclearDataIO.cccc.gamiso"]], "compare() (in module armi.nucleardataio.cccc.gamiso)": [[171, "armi.nuclearDataIO.cccc.gamiso.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.gamiso)": [[171, "armi.nuclearDataIO.cccc.gamiso.compareNuclideXS"]], "geodstdata (class in armi.nucleardataio.cccc.geodst)": [[172, "armi.nuclearDataIO.cccc.geodst.GeodstData"]], "geodststream (class in armi.nucleardataio.cccc.geodst)": [[172, "armi.nuclearDataIO.cccc.geodst.GeodstStream"]], "armi.nucleardataio.cccc.geodst": [[172, "module-armi.nuclearDataIO.cccc.geodst"]], "readwrite() (armi.nucleardataio.cccc.geodst.geodststream method)": [[172, "armi.nuclearDataIO.cccc.geodst.GeodstStream.readWrite"]], "isotxsio (class in armi.nucleardataio.cccc.isotxs)": [[173, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.isotxs)": [[173, "armi.nuclearDataIO.cccc.isotxs.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.isotxs": [[173, "module-armi.nuclearDataIO.cccc.isotxs"]], "compare() (in module armi.nucleardataio.cccc.isotxs)": [[173, "armi.nuclearDataIO.cccc.isotxs.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.isotxs)": [[173, "armi.nuclearDataIO.cccc.isotxs.compareNuclideXS"]], "compareset() (in module armi.nucleardataio.cccc.isotxs)": [[173, "armi.nuclearDataIO.cccc.isotxs.compareSet"]], "readwrite() (armi.nucleardataio.cccc.isotxs.isotxsio method)": [[173, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO.readWrite"]], "labelsdata (class in armi.nucleardataio.cccc.labels)": [[174, "armi.nuclearDataIO.cccc.labels.LabelsData"]], "labelsstream (class in armi.nucleardataio.cccc.labels)": [[174, "armi.nuclearDataIO.cccc.labels.LabelsStream"]], "armi.nucleardataio.cccc.labels": [[174, "module-armi.nuclearDataIO.cccc.labels"]], "readwrite() (armi.nucleardataio.cccc.labels.labelsstream method)": [[174, "armi.nuclearDataIO.cccc.labels.LabelsStream.readWrite"]], "nhflux (class in armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.NHFLUX"]], "nafluxstream (class in armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.NafluxStream"]], "nafluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.NafluxStreamVariant"]], "nhfluxstream (class in armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream"]], "nhfluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.NhfluxStreamVariant"]], "armi.nucleardataio.cccc.nhflux": [[175, "module-armi.nuclearDataIO.cccc.nhflux"]], "fluxmoments (armi.nucleardataio.cccc.nhflux.nhflux property)": [[175, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.fluxMoments"]], "getnhfluxreader() (in module armi.nucleardataio.cccc.nhflux)": [[175, "armi.nuclearDataIO.cccc.nhflux.getNhfluxReader"]], "partialcurrentshex (armi.nucleardataio.cccc.nhflux.nhflux property)": [[175, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex"]], "partialcurrentshex_ext (armi.nucleardataio.cccc.nhflux.nhflux property)": [[175, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex_ext"]], "partialcurrentsz (armi.nucleardataio.cccc.nhflux.nhflux property)": [[175, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsZ"]], "readwrite() (armi.nucleardataio.cccc.nhflux.nhfluxstream method)": [[175, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream.readWrite"]], "pmatrxio (class in armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.pmatrx": [[176, "module-armi.nuclearDataIO.cccc.pmatrx"]], "compare() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.compareNuclideXS"]], "readascii() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.readBinary"]], "readwrite() (armi.nucleardataio.cccc.pmatrx.pmatrxio method)": [[176, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.pmatrx)": [[176, "armi.nuclearDataIO.cccc.pmatrx.writeBinary"]], "pwdintdata (class in armi.nucleardataio.cccc.pwdint)": [[177, "armi.nuclearDataIO.cccc.pwdint.PwdintData"]], "pwdintstream (class in armi.nucleardataio.cccc.pwdint)": [[177, "armi.nuclearDataIO.cccc.pwdint.PwdintStream"]], "armi.nucleardataio.cccc.pwdint": [[177, "module-armi.nuclearDataIO.cccc.pwdint"]], "readwrite() (armi.nucleardataio.cccc.pwdint.pwdintstream method)": [[177, "armi.nuclearDataIO.cccc.pwdint.PwdintStream.readWrite"]], "atfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[178, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream"]], "rtfluxdata (class in armi.nucleardataio.cccc.rtflux)": [[178, "armi.nuclearDataIO.cccc.rtflux.RtfluxData"]], "rtfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[178, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream"]], "armi.nucleardataio.cccc.rtflux": [[178, "module-armi.nuclearDataIO.cccc.rtflux"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.atfluxstream method)": [[178, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream.getEnergyGroupIndex"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[178, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.getEnergyGroupIndex"]], "getfdfluxreader() (in module armi.nucleardataio.cccc.rtflux)": [[178, "armi.nuclearDataIO.cccc.rtflux.getFDFluxReader"]], "groupfluxes (armi.nucleardataio.cccc.rtflux.rtfluxdata attribute)": [[178, "armi.nuclearDataIO.cccc.rtflux.RtfluxData.groupFluxes"]], "readwrite() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[178, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.readWrite"]], "converged (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[179, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGED"]], "converging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[179, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGING"]], "convergence (class in armi.nucleardataio.cccc.rzflux)": [[179, "armi.nuclearDataIO.cccc.rzflux.Convergence"]], "diverging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[179, "armi.nuclearDataIO.cccc.rzflux.Convergence.DIVERGING"]], "no_iterations (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[179, "armi.nuclearDataIO.cccc.rzflux.Convergence.NO_ITERATIONS"]], "rzfluxdata (class in armi.nucleardataio.cccc.rzflux)": [[179, "armi.nuclearDataIO.cccc.rzflux.RzfluxData"]], "rzfluxstream (class in armi.nucleardataio.cccc.rzflux)": [[179, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream"]], "armi.nucleardataio.cccc.rzflux": [[179, "module-armi.nuclearDataIO.cccc.rzflux"]], "readwrite() (armi.nucleardataio.cccc.rzflux.rzfluxstream method)": [[179, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream.readWrite"]], "armi.nucleardataio.cccc.tests": [[180, "module-armi.nuclearDataIO.cccc.tests"]], "ccccasciirecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccAsciiRecordTests"]], "ccccbinaryrecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests"]], "cccciostreamtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests"]], "armi.nucleardataio.cccc.tests.test_cccc": [[181, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "test_initwithfilemode() (armi.nucleardataio.cccc.tests.test_cccc.cccciostreamtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests.test_initWithFileMode"]], "test_notreadinganentirerecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_notReadingAnEntireRecordRaisesException"]], "test_readingbeyondrecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_readingBeyondRecordRaisesException"]], "test_writeandreadsimplefloatrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleFloatRecord"]], "test_writeandreadsimpleintegerrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleIntegerRecord"]], "test_writeandreadsimplestringrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleStringRecord"]], "testcompxs (class in armi.nucleardataio.cccc.tests.test_compxs)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs"]], "armi.nucleardataio.cccc.tests.test_compxs": [[182, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "asciiwritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.asciiWritePath"]], "binarywritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.binaryWritePath"]], "test_asciirw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_asciiRW"]], "test_binaryrw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_binaryRW"]], "test_getcompxsfilename() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_getCOMPXSFileName"]], "test_librarydata() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_libraryData"]], "test_mergecompxslibraries() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_mergeCompxsLibraries"]], "test_regionprimaryxs() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_regionPrimaryXS"]], "test_totalscattermatrix() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[182, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_totalScatterMatrix"]], "testdif3demptyrecords (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords"]], "testdif3dsimplehexz (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz"]], "armi.nucleardataio.cccc.tests.test_dif3d": [[183, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "test__rw2drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw2DRecord"]], "test__rw3drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw3DRecord"]], "test__rw4drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw4DRecord"]], "test__rw5drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw5DRecord"]], "test__rwfile1drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFile1DRecord"]], "test__rwfileid() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFileID"]], "test_empty4and5records() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3demptyrecords method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords.test_empty4and5Records"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[183, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test_writeBinary"]], "dlayxstests (class in armi.nucleardataio.cccc.tests.test_dlayxs)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests"]], "armi.nucleardataio.cccc.tests.test_dlayxs": [[184, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "test_endfvii1decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1DecayConstants"]], "test_endfvii1neutronsperfission() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1NeutronsPerFission"]], "test_nudelay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_NuDelay"]], "test_avg() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_avg"]], "test_chi_delay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delay"]], "test_chi_delaysumsto1() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delaySumsTo1"]], "test_compare() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_compare"]], "test_decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_decayConstants"]], "test_nuclides() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_nuclides"]], "test_writebinary_mcc3() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_writeBinary_mcc3"]], "testfixsrc (class in armi.nucleardataio.cccc.tests.test_fixsrc)": [[185, "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc"]], "armi.nucleardataio.cccc.tests.test_fixsrc": [[185, "module-armi.nuclearDataIO.cccc.tests.test_fixsrc"]], "test_writereadbinaryloop() (armi.nucleardataio.cccc.tests.test_fixsrc.testfixsrc method)": [[185, "armi.nuclearDataIO.cccc.tests.test_fixsrc.TestFixsrc.test_writeReadBinaryLoop"]], "testgamiso (class in armi.nucleardataio.cccc.tests.test_gamiso)": [[186, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso"]], "armi.nucleardataio.cccc.tests.test_gamiso": [[186, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "test_adddummynuclidestolibrary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[186, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_addDummyNuclidesToLibrary"]], "test_compare() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[186, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_compare"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[186, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_writeBinary"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_geodst)": [[187, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_geodst": [[187, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[187, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[187, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_writeGeodst"]], "isotxs_merge_tests (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests"]], "testisotxs (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs"]], "armi.nucleardataio.cccc.tests.test_isotxs": [[188, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "test_getgamisofilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getGAMISOFileName"]], "test_getisotxsfilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getISOTXSFileName"]], "test_getnuclide() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getNuclide"]], "test_getscatterweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatterWeights"]], "test_getscatteringweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatteringWeights"]], "test_isotxsdetaileddata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsDetailedData"]], "test_isotxsgeneraldata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsGeneralData"]], "test_mergemccv2filesremovesthefilewidechi() (armi.nucleardataio.cccc.tests.test_isotxs.isotxs_merge_tests method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests.test_mergeMccV2FilesRemovesTheFileWideChi"]], "test_n2nisreactionbased() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_n2nIsReactionBased"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[188, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_writeBinary"]], "testlabels (class in armi.nucleardataio.cccc.tests.test_labels)": [[189, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels"]], "armi.nucleardataio.cccc.tests.test_labels": [[189, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "test_readlabelsbinary() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[189, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_readLabelsBinary"]], "test_writelabelsascii() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[189, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_writeLabelsAscii"]], "testnhflux (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux"]], "testnhfluxvariant (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant"]], "armi.nucleardataio.cccc.tests.test_nhflux": [[190, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fc"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fc"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fluxMoments"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fluxMoments"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_write"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_write"]], "test_xypartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_xyPartialCurrents"]], "test_zpartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_zPartialCurrents"]], "testpmatrx (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx"]], "testpmatrxnuclides (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides"]], "testproductionmatrix_fromwritten (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten"]], "testproductionmatrix_fromwrittenascii (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWrittenAscii"]], "armi.nucleardataio.cccc.tests.test_pmatrx": [[191, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "test_getpmatrxfilename() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_getPMATRXFileName"]], "test_nuclidedataisdifferent() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_nuclideDataIsDifferent"]], "test_pmatrxdoesnthavedoseconversionfactors() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxDoesntHaveDoseConversionFactors"]], "test_pmatrxgammaenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxGammaEnergies"]], "test_pmatrxneutronenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNeutronEnergies"]], "test_pmatrxnuclidedataaa() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAA"]], "test_pmatrxnuclidedataab() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAB"]], "test_pmatrxnuclidenames() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNuclideNames"]], "test_writtenisidenticaltooriginal() (armi.nucleardataio.cccc.tests.test_pmatrx.testproductionmatrix_fromwritten method)": [[191, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten.test_writtenIsIdenticalToOriginal"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_pwdint)": [[192, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_pwdint": [[192, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[192, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_writeGeodst"]], "testrtflux (class in armi.nucleardataio.cccc.tests.test_rtflux)": [[193, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux"]], "armi.nucleardataio.cccc.tests.test_rtflux": [[193, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "test_adjoint() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[193, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_adjoint"]], "test_readrtflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[193, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_readrtflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[193, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_rwAscii"]], "test_writertflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[193, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_writertflux"]], "testrzflux (class in armi.nucleardataio.cccc.tests.test_rzflux)": [[194, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux"]], "armi.nucleardataio.cccc.tests.test_rzflux": [[194, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "binaryfilesequal() (in module armi.nucleardataio.cccc.tests.test_rzflux)": [[194, "armi.nuclearDataIO.cccc.tests.test_rzflux.binaryFilesEqual"]], "test_readrzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_readRzflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_rwAscii"]], "test_writerzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[194, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_writeRzflux"]], "filemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[195, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata"]], "nuclidemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[195, "armi.nuclearDataIO.nuclearFileMetadata.NuclideMetadata"]], "nuclidexsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[195, "armi.nuclearDataIO.nuclearFileMetadata.NuclideXSMetadata"]], "regionxsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[195, "armi.nuclearDataIO.nuclearFileMetadata.RegionXSMetadata"]], "armi.nucleardataio.nuclearfilemetadata": [[195, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "update() (armi.nucleardataio.nuclearfilemetadata.filemetadata method)": [[195, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata.update"]], "armi.nucleardataio.tests": [[196, "module-armi.nuclearDataIO.tests"]], "mockblock (class in armi.nucleardataio.tests.test_xscollections)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock"]], "mockblueprints (class in armi.nucleardataio.tests.test_xscollections)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlueprints"]], "mockreactor (class in armi.nucleardataio.tests.test_xscollections)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockReactor"]], "testxscollections (class in armi.nucleardataio.tests.test_xscollections)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections"]], "armi.nucleardataio.tests.test_xscollections": [[197, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "getnuclidenumberdensities() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclideNumberDensities"]], "getnuclides() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclides"]], "getvolume() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getVolume"]], "paramcollectiontype (armi.nucleardataio.tests.test_xscollections.mockblock attribute)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.paramCollectionType"]], "r (armi.nucleardataio.tests.test_xscollections.mockblock property)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.r"]], "setnumberdensity() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.setNumberDensity"]], "test_collapsecrosssection() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_collapseCrossSection"]], "test_createmacrosfrommicros() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_createMacrosFromMicros"]], "test_generatetotalscatteringmatrix() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrix"]], "test_generatetotalscatteringmatrixwithmissingdata() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrixWithMissingData"]], "test_plotnucxs() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[197, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_plotNucXs"]], "abstracttestxslibrarymerging (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging"]], "combined_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests"]], "gamiso_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests"]], "isotxs_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests"]], "pmatrx_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests"]], "tempfilemixin (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin"]], "testgetisotxsfilesinworkingdirectory (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory"]], "testxslibrary (class in armi.nucleardataio.tests.test_xslibraries)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary"]], "armi.nucleardataio.tests.test_xslibraries": [[198, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "assert_contains_only() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.assert_contains_only"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getErrorType"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibAAPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibAA_ABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibABPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getLibLumpedPath"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getReadFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_Merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_Merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.getWriteFunc"]], "testfilename (armi.nucleardataio.tests.test_xslibraries.tempfilemixin property)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin.testFileName"]], "test_canpickleandunpicklegamiso() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleGAMISO"]], "test_canpickleandunpickleisotxs() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleISOTXS"]], "test_canpickleandunpicklepmatrx() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpicklePMATRX"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_canRemoveIsotopes"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.test_canRemoveIsotopes"]], "test_canwritegamisofromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteGamisoFromCombinedXSLibrary"]], "test_canwriteisotxsfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteIsotxsFromCombinedXSLibrary"]], "test_canwritepmatrxfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWritePmatrxFromCombinedXSLibrary"]], "test_cannotmergexslibwithsamenuclidenames() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_cannotMergeXSLibWithSameNuclideNames"]], "test_cannotmergexslibswithdifferentgammagroupstructures() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_Merge_Tests.test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "test_cannotmergexslibxwithdifferentgroupstructure() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_cannotMergeXSLibxWithDifferentGroupStructure"]], "test_comparedifferentcomponentsofanxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareDifferentComponentsOfAnXSLibrary"]], "test_compareworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareWorks"]], "test_gamisolibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_gamisoLibraryAttributes"]], "test_getisotxsfileswithlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithLibrarySuffix"]], "test_getisotxsfileswithoutlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithoutLibrarySuffix"]], "test_isotxslibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_isotxsLibraryAttributes"]], "test_mergeallxslibfiles() (armi.nucleardataio.tests.test_xslibraries.combined_merge_tests method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_Merge_Tests.test_mergeAllXSLibFiles"]], "test_mergeemptyxslibwithotheressentiallyclonestheother() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_mergeEmptyXSLibWithOtherEssentiallyClonesTheOther"]], "test_mergefailswithnonisotxsfiles() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeFailsWithNonIsotxsFiles"]], "test_mergetwoxslibfiles() (armi.nucleardataio.tests.test_xslibraries.abstracttestxslibrarymerging method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.AbstractTestXSlibraryMerging.test_mergeTwoXSLibFiles"]], "test_mergexslibrarieswithdifferentdataworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeXSLibrariesWithDifferentDataWorks"]], "test_pmatrxlibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[198, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_pmatrxLibraryAttributes"]], "nuclidetests (class in armi.nucleardataio.tests.test_xsnuclides)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests"]], "armi.nucleardataio.tests.test_xsnuclides": [[199, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "test_getmicroxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getMicroXS"]], "test_getxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getXS"]], "test_nuclide_2dxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_2dXsArrangementIsCorrect"]], "test_nuclide_createfromlabelfailsonbadname() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_createFromLabelFailsOnBadName"]], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"]], "test_nuclide_isoaadetails() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_isoaaDetails"]], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclide() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"]], "test_nuclide_newlabelsdontcausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_newLabelsDontCauseWarnings"]], "test_nuclide_nuclidebasemethodsshouldnotfail() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_nuclideBaseMethodsShouldNotFail"]], "test_nuclide_oldlabelscausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_oldLabelsCauseWarnings"]], "test_nuclide_scatterxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[199, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_scatterXsArrangementIsCorrect"]], "macroscopiccrosssectioncreator (class in armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator"]], "xscollection (class in armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection"]], "armi.nucleardataio.xscollections": [[200, "module-armi.nuclearDataIO.xsCollections"]], "clear() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.clear"]], "collapsecrosssection() (armi.nucleardataio.xscollections.xscollection static method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.collapseCrossSection"]], "compare() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.compare"]], "computeblockaveragechi() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeBlockAverageChi"]], "computecaptureenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeCaptureEnergyGenerationConstants"]], "computefissionenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeFissionEnergyGenerationConstants"]], "computegammaenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeGammaEnergyDepositionConstants"]], "computemacroscopicgroupconstants() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeMacroscopicGroupConstants"]], "computeneutronenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[200, "armi.nuclearDataIO.xsCollections.computeNeutronEnergyDepositionConstants"]], "createmacrosfrommicros() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[200, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosFromMicros"]], "createmacrosonblocklist() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[200, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosOnBlocklist"]], "get() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.get"]], "getabsorptionxs() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.getAbsorptionXS"]], "getdefaultxs() (armi.nucleardataio.xscollections.xscollection class method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.getDefaultXs"]], "gettotalscattermatrix() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.getTotalScatterMatrix"]], "merge() (armi.nucleardataio.xscollections.xscollection method)": [[200, "armi.nuclearDataIO.xsCollections.XSCollection.merge"]], "compxslibrary (class in armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.CompxsLibrary"]], "isotxslibrary (class in armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary"]], "armi.nucleardataio.xslibraries": [[201, "module-armi.nuclearDataIO.xsLibraries"]], "compare() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.compare"]], "comparelibraryneutronenergies() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.compareLibraryNeutronEnergies"]], "comparexslibraryattribute() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.compareXSLibraryAttribute"]], "gammadoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaDoseConversionFactors"]], "gammaenergyupperbounds (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaEnergyUpperBounds"]], "get() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.get"]], "getisotxslibrariestomerge() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.getISOTXSLibrariesToMerge"]], "getnuclide() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclide"]], "getnuclides() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclides"]], "getscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getScatterWeights"]], "getsuffixfromnuclidelabel() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.getSuffixFromNuclideLabel"]], "merge() (armi.nucleardataio.xslibraries.compxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.merge"]], "merge() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.merge"]], "mergexslibrariesinworkingdirectory() (in module armi.nucleardataio.xslibraries)": [[201, "armi.nuclearDataIO.xsLibraries.mergeXSLibrariesInWorkingDirectory"]], "neutrondoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.neutronDoseConversionFactors"]], "nuclidelabels (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclideLabels"]], "nuclides (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclides"]], "numgroups (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroups"]], "numgroupsgamma (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroupsGamma"]], "purgefissionproducts() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.purgeFissionProducts"]], "regionlabels (armi.nucleardataio.xslibraries.compxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regionLabels"]], "regions (armi.nucleardataio.xslibraries.compxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regions"]], "resetscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.resetScatterWeights"]], "xsids (armi.nucleardataio.xslibraries.isotxslibrary property)": [[201, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.xsIDs"]], "xsnuclide (class in armi.nucleardataio.xsnuclides)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide"]], "armi.nucleardataio.xsnuclides": [[202, "module-armi.nuclearDataIO.xsNuclides"]], "buildnormalizedscattercolumns() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.buildNormalizedScatterColumns"]], "decays (armi.nucleardataio.xsnuclides.xsnuclide property)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.decays"]], "getmicroxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.getMicroXS"]], "getxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.getXS"]], "merge() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.merge"]], "plotcomparescattermatrix() (in module armi.nucleardataio.xsnuclides)": [[202, "armi.nuclearDataIO.xsNuclides.plotCompareScatterMatrix"]], "plotscattermatrix() (in module armi.nucleardataio.xsnuclides)": [[202, "armi.nuclearDataIO.xsNuclides.plotScatterMatrix"]], "trans (armi.nucleardataio.xsnuclides.xsnuclide property)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.trans"]], "updatebasenuclide() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[202, "armi.nuclearDataIO.xsNuclides.XSNuclide.updateBaseNuclide"]], "armi.operators": [[203, "module-armi.operators"]], "factory() (in module armi.operators)": [[203, "armi.operators.factory"]], "getoperatorclassfromsettings() (in module armi.operators)": [[203, "armi.operators.getOperatorClassFromSettings"]], "operator (class in armi.operators.operator)": [[204, "armi.operators.operator.Operator"]], "addinterface() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.addInterface"]], "armi.operators.operator": [[204, "module-armi.operators.operator"]], "ateol (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.atEOL"]], "availabilityfactors (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.availabilityFactors"]], "burnsteps (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.burnSteps"]], "couplingisactive() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.couplingIsActive"]], "createinterfaces() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.createInterfaces"]], "cyclelengths (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.cycleLengths"]], "cyclenames (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.cycleNames"]], "detach() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.detach"]], "getactiveinterfaces() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.getActiveInterfaces"]], "getinterface() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.getInterface"]], "getinterfaces() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.getInterfaces"]], "initializeinterfaces() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.initializeInterfaces"]], "inspector (armi.operators.operator.operator attribute)": [[204, "armi.operators.operator.Operator.inspector"]], "interactallboc() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllBOC"]], "interactallbol() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllBOL"]], "interactallcoupled() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllCoupled"]], "interactalleoc() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllEOC"]], "interactalleol() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllEOL"]], "interactallerror() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllError"]], "interactalleverynode() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllEveryNode"]], "interactallinit() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interactAllInit"]], "interfaceisactive() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.interfaceIsActive"]], "loadstate() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.loadState"]], "maxburnsteps (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.maxBurnSteps"]], "operate() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.operate"]], "powerfractions (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.powerFractions"]], "printinterfacesummary() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.printInterfaceSummary"]], "reattach() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.reattach"]], "removeallinterfaces() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.removeAllInterfaces"]], "removeinterface() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.removeInterface"]], "setstatetodefault() (armi.operators.operator.operator static method)": [[204, "armi.operators.operator.Operator.setStateToDefault"]], "snapshotrequest() (armi.operators.operator.operator method)": [[204, "armi.operators.operator.Operator.snapshotRequest"]], "steplengths (armi.operators.operator.operator property)": [[204, "armi.operators.operator.Operator.stepLengths"]], "operatormpi (class in armi.operators.operatormpi)": [[205, "armi.operators.operatorMPI.OperatorMPI"]], "armi.operators.operatormpi": [[205, "module-armi.operators.operatorMPI"]], "collapseallstderrs() (armi.operators.operatormpi.operatormpi method)": [[205, "armi.operators.operatorMPI.OperatorMPI.collapseAllStderrs"]], "operate() (armi.operators.operatormpi.operatormpi method)": [[205, "armi.operators.operatorMPI.OperatorMPI.operate"]], "workeroperate() (armi.operators.operatormpi.operatormpi method)": [[205, "armi.operators.operatorMPI.OperatorMPI.workerOperate"]], "workerquit() (armi.operators.operatormpi.operatormpi static method)": [[205, "armi.operators.operatorMPI.OperatorMPI.workerQuit"]], "equilibrium (armi.operators.runtypes.runtypes attribute)": [[206, "armi.operators.runTypes.RunTypes.EQUILIBRIUM"]], "runtypes (class in armi.operators.runtypes)": [[206, "armi.operators.runTypes.RunTypes"]], "snapshots (armi.operators.runtypes.runtypes attribute)": [[206, "armi.operators.runTypes.RunTypes.SNAPSHOTS"]], "standard (armi.operators.runtypes.runtypes attribute)": [[206, "armi.operators.runTypes.RunTypes.STANDARD"]], "armi.operators.runtypes": [[206, "module-armi.operators.runTypes"]], "armi.operators.settingsvalidation": [[207, "module-armi.operators.settingsValidation"]], "operatorsnapshots (class in armi.operators.snapshots)": [[208, "armi.operators.snapshots.OperatorSnapshots"]], "armi.operators.snapshots": [[208, "module-armi.operators.snapshots"]], "ateol (armi.operators.snapshots.operatorsnapshots property)": [[208, "armi.operators.snapshots.OperatorSnapshots.atEOL"]], "createinterfaces() (armi.operators.snapshots.operatorsnapshots method)": [[208, "armi.operators.snapshots.OperatorSnapshots.createInterfaces"]], "setstatetodefault() (armi.operators.snapshots.operatorsnapshots static method)": [[208, "armi.operators.snapshots.OperatorSnapshots.setStateToDefault"]], "armi.operators.tests": [[209, "module-armi.operators.tests"]], "testoperatorsnapshots (class in armi.operators.tests.test_operatorsnapshots)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots"]], "testoperatorsnapshotssettings (class in armi.operators.tests.test_operatorsnapshots)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorsnapshots": [[210, "module-armi.operators.tests.test_operatorSnapshots"]], "test_ateol() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_atEOL"]], "test_createinterfaces() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfaces"]], "test_createinterfacesdisabled() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfacesDisabled"]], "test_getoperatorclassfromsettings() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshotssettings method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings.test_getOperatorClassFromSettings"]], "test_mainoperate() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_mainOperate"]], "test_setstatetodefault() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[210, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_setStateToDefault"]], "cyclessettingstests (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests"]], "interfacea (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.InterfaceA"]], "interfaceb (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.InterfaceB"]], "interfacec (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.InterfaceC"]], "operatortests (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.OperatorTests"]], "testcreateoperator (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.TestCreateOperator"]], "testinterfaceandeventheaders (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders"]], "testtightcoupling (class in armi.operators.tests.test_operators)": [[211, "armi.operators.tests.test_operators.TestTightCoupling"]], "armi.operators.tests.test_operators": [[211, "module-armi.operators.tests.test_operators"]], "availabilityfactorssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.availabilityFactorsSolution"]], "burnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.burnStepsSolution"]], "cyclelengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleLengthsSolution"]], "cyclenamessolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleNamesSolution"]], "dbwriteforcoupling() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.dbWriteForCoupling"]], "detailedcyclessettings (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.detailedCyclesSettings"]], "function (armi.operators.tests.test_operators.interfacea attribute)": [[211, "armi.operators.tests.test_operators.InterfaceA.function"]], "function (armi.operators.tests.test_operators.interfaceb attribute)": [[211, "armi.operators.tests.test_operators.InterfaceB.function"]], "function (armi.operators.tests.test_operators.interfacec attribute)": [[211, "armi.operators.tests.test_operators.InterfaceC.function"]], "maxburnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.maxBurnStepsSolution"]], "name (armi.operators.tests.test_operators.interfacea attribute)": [[211, "armi.operators.tests.test_operators.InterfaceA.name"]], "name (armi.operators.tests.test_operators.interfaceb attribute)": [[211, "armi.operators.tests.test_operators.InterfaceB.name"]], "name (armi.operators.tests.test_operators.interfacec attribute)": [[211, "armi.operators.tests.test_operators.InterfaceC.name"]], "powerfractionssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.powerFractionsSolution"]], "steplengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.stepLengthsSolution"]], "test_addinterfacesubclasscollision() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_addInterfaceSubclassCollision"]], "test_computetightcouplingconvergence() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_computeTightCouplingConvergence"]], "test_couplingisactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_couplingIsActive"]], "test_createoperator() (armi.operators.tests.test_operators.testcreateoperator method)": [[211, "armi.operators.tests.test_operators.TestCreateOperator.test_createOperator"]], "test_expandcycleandtimenodeargs_coupled() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[211, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Coupled"]], "test_expandcycleandtimenodeargs_cycle() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[211, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Cycle"]], "test_expandcycleandtimenodeargs_empty() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[211, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Empty"]], "test_expandcycleandtimenodeargs_everynode() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[211, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_EveryNode"]], "test_getactiveinterfaces() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_getActiveInterfaces"]], "test_getavailabilityfactors() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getBurnSteps"]], "test_getcyclelengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleNames"]], "test_getmaxburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getpowerfractions() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getPowerFractions"]], "test_getsteplengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[211, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getStepLengths"]], "test_getsteplengths() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_getStepLengths"]], "test_interfaceisactive() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_interfaceIsActive"]], "test_loadstateerror() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_loadStateError"]], "test_operatordata() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_operatorData"]], "test_orderedinterfaces() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_orderedInterfaces"]], "test_performtightcoupling_inactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_Inactive"]], "test_performtightcoupling_nowritedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_NoWriteDB"]], "test_performtightcoupling_writedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_WriteDB"]], "test_performtightcoupling_notconverged() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_notConverged"]], "test_performtightcoupling_skip() (armi.operators.tests.test_operators.testtightcoupling method)": [[211, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_skip"]], "test_setstatetodefault() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_setStateToDefault"]], "test_snapshotrequest() (armi.operators.tests.test_operators.operatortests method)": [[211, "armi.operators.tests.test_operators.OperatorTests.test_snapshotRequest"]], "armi.physics": [[212, "module-armi.physics"]], "dpa_cross_sections (in module armi.physics.constants)": [[213, "armi.physics.constants.DPA_CROSS_SECTIONS"]], "armi.physics.constants": [[213, "module-armi.physics.constants"]], "defaultexecuter (class in armi.physics.executers)": [[214, "armi.physics.executers.DefaultExecuter"]], "executer (class in armi.physics.executers)": [[214, "armi.physics.executers.Executer"]], "executionoptions (class in armi.physics.executers)": [[214, "armi.physics.executers.ExecutionOptions"]], "armi.physics.executers": [[214, "module-armi.physics.executers"]], "describe() (armi.physics.executers.executionoptions method)": [[214, "armi.physics.executers.ExecutionOptions.describe"]], "fromreactor() (armi.physics.executers.executionoptions method)": [[214, "armi.physics.executers.ExecutionOptions.fromReactor"]], "fromusersettings() (armi.physics.executers.executionoptions method)": [[214, "armi.physics.executers.ExecutionOptions.fromUserSettings"]], "resolvederivedoptions() (armi.physics.executers.executionoptions method)": [[214, "armi.physics.executers.ExecutionOptions.resolveDerivedOptions"]], "run() (armi.physics.executers.defaultexecuter method)": [[214, "armi.physics.executers.DefaultExecuter.run"]], "run() (armi.physics.executers.executer method)": [[214, "armi.physics.executers.Executer.run"]], "setrundirfromcasetitle() (armi.physics.executers.executionoptions method)": [[214, "armi.physics.executers.ExecutionOptions.setRunDirFromCaseTitle"]], "writeinput() (armi.physics.executers.defaultexecuter method)": [[214, "armi.physics.executers.DefaultExecuter.writeInput"]], "fuelhandlerplugin (class in armi.physics.fuelcycle)": [[215, "armi.physics.fuelCycle.FuelHandlerPlugin"]], "armi.physics.fuelcycle": [[215, "module-armi.physics.fuelCycle"]], "definesettings() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[215, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[215, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[215, "armi.physics.fuelCycle.FuelHandlerPlugin.exposeInterfaces"]], "armi.physics.fuelcycle.assemblyrotationalgorithms": [[216, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "bureducingassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[216, "armi.physics.fuelCycle.assemblyRotationAlgorithms.buReducingAssemblyRotation"]], "simpleassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[216, "armi.physics.fuelCycle.assemblyRotationAlgorithms.simpleAssemblyRotation"]], "armi.physics.fuelcycle.fuelhandlerfactory": [[217, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "fuelhandlerfactory() (in module armi.physics.fuelcycle.fuelhandlerfactory)": [[217, "armi.physics.fuelCycle.fuelHandlerFactory.fuelHandlerFactory"]], "fuelhandlerinterface (class in armi.physics.fuelcycle.fuelhandlerinterface)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface"]], "armi.physics.fuelcycle.fuelhandlerinterface": [[218, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "interactboc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactBOC"]], "interacteoc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOC"]], "interacteol() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOL"]], "makeshufflereport() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.makeShuffleReport"]], "managefuel() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.manageFuel"]], "name (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface attribute)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.name"]], "specifyinputs() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface static method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.specifyInputs"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[218, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.workerOperate"]], "fuelhandler (class in armi.physics.fuelcycle.fuelhandlers)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler"]], "armi.physics.fuelcycle.fuelhandlers": [[219, "module-armi.physics.fuelCycle.fuelHandlers"]], "chooseswaps() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.chooseSwaps"]], "cs (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cs"]], "cycle (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cycle"]], "dischargeswap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.dischargeSwap"]], "dorepeatshuffle() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.doRepeatShuffle"]], "findassembly() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.findAssembly"]], "getfactorlist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.getFactorList"]], "isassemblyinazone() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.isAssemblyInAZone"]], "makeshufflearrows() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.makeShuffleArrows"]], "outage() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.outage"]], "prepcore() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepCore"]], "prepshufflemap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepShuffleMap"]], "processmovelist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.processMoveList"]], "r (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.r"]], "readmoves() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.readMoves"]], "repeatshufflepattern() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.repeatShufflePattern"]], "swapassemblies() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapAssemblies"]], "swapcascade() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapCascade"]], "trackchain() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.trackChain"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[219, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.workerOperate"]], "armi.physics.fuelcycle.hexassemblyfuelmgmtutils": [[220, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "buildconvergentringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[220, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildConvergentRingSchedule"]], "buildringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[220, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildRingSchedule"]], "getoptimalassemblyorientation() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[220, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.getOptimalAssemblyOrientation"]], "armi.physics.fuelcycle.settings": [[221, "module-armi.physics.fuelCycle.settings"]], "getfuelcyclesettingvalidators() (in module armi.physics.fuelcycle.settings)": [[221, "armi.physics.fuelCycle.settings.getFuelCycleSettingValidators"]], "getfuelcyclesettings() (in module armi.physics.fuelcycle.settings)": [[221, "armi.physics.fuelCycle.settings.getFuelCycleSettings"]], "armi.physics.fuelcycle.tests": [[222, "module-armi.physics.fuelCycle.tests"]], "testfuelhandlermgmttools (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools"]], "armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms": [[223, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "test_bureducingassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_buReducingAssemblyRotation"]], "test_simpleassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[223, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_simpleAssemblyRotation"]], "fuelhandlertesthelper (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.FuelHandlerTestHelper"]], "mocklatticephysicsinterface (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface"]], "mockxsgm (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM"]], "testfuelhandler (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler"]], "testfuelplugin (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin"]], "addsomedetailassemblies() (in module armi.physics.fuelcycle.tests.test_fuelhandlers)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.addSomeDetailAssemblies"]], "armi.physics.fuelcycle.tests.test_fuelhandlers": [[224, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.interactBOC"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mockxsgm method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM.interactBOC"]], "name (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface attribute)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.name"]], "runshuffling() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.runShuffling"]], "test_dischargeswap() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwap"]], "test_dischargeswapincompatiblestationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwapIncompatibleStationaryBlocks"]], "test_findbycoords() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findByCoords"]], "test_findhighbu() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findHighBu"]], "test_findinsfp() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findInSFP"]], "test_findmany() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findMany"]], "test_findwithminmax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findWithMinMax"]], "test_getassembliesinrings() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getAssembliesInRings"]], "test_getfactorlist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getFactorList"]], "test_getparammax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getParamMax"]], "test_interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_interactBOC"]], "test_isassemblyinazone() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_isAssemblyInAZone"]], "test_linpowbypin() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPin"]], "test_linpowbypingamma() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinGamma"]], "test_linpowbypinneutron() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinNeutron"]], "test_outage() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_outage"]], "test_outageedgecase() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_outageEdgeCase"]], "test_processmovelist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_processMoveList"]], "test_readmoves() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_readMoves"]], "test_repeatshuffles() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_repeatShuffles"]], "test_settingsarediscovered() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelplugin method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin.test_settingsAreDiscovered"]], "test_transferdifferentnumberstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferDifferentNumberStationaryBlocks"]], "test_transferincompatibleheightstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferIncompatibleHeightStationaryBlocks"]], "test_transferstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferStationaryBlocks"]], "test_transferunalignedlocationstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferUnalignedLocationStationaryBlocks"]], "test_width() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[224, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_width"]], "testhexassemmgmttools (class in armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils)": [[225, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools"]], "armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils": [[225, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "test_buildconvergentringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[225, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildConvergentRingSchedule"]], "test_buildringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[225, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildRingSchedule"]], "armi.physics.fuelperformance": [[226, "module-armi.physics.fuelPerformance"]], "fuelperformanceexecuter (class in armi.physics.fuelperformance.executers)": [[227, "armi.physics.fuelPerformance.executers.FuelPerformanceExecuter"]], "fuelperformanceoptions (class in armi.physics.fuelperformance.executers)": [[227, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions"]], "armi.physics.fuelperformance.executers": [[227, "module-armi.physics.fuelPerformance.executers"]], "fromreactor() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[227, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromReactor"]], "fromusersettings() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[227, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromUserSettings"]], "armi.physics.fuelperformance.parameters": [[228, "module-armi.physics.fuelPerformance.parameters"]], "getfuelperformanceparameterdefinitions() (in module armi.physics.fuelperformance.parameters)": [[228, "armi.physics.fuelPerformance.parameters.getFuelPerformanceParameterDefinitions"]], "fuelperformanceplugin (class in armi.physics.fuelperformance.plugin)": [[229, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin"]], "armi.physics.fuelperformance.plugin": [[229, "module-armi.physics.fuelPerformance.plugin"]], "defineparameters() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[229, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineParameters"]], "definesettings() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[229, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[229, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[229, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.exposeInterfaces"]], "armi.physics.fuelperformance.settings": [[230, "module-armi.physics.fuelPerformance.settings"]], "definesettings() (in module armi.physics.fuelperformance.settings)": [[230, "armi.physics.fuelPerformance.settings.defineSettings"]], "definevalidators() (in module armi.physics.fuelperformance.settings)": [[230, "armi.physics.fuelPerformance.settings.defineValidators"]], "armi.physics.fuelperformance.tests": [[231, "module-armi.physics.fuelPerformance.tests"]], "testfuelperformanceoptions (class in armi.physics.fuelperformance.tests.test_executers)": [[232, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions"]], "armi.physics.fuelperformance.tests.test_executers": [[232, "module-armi.physics.fuelPerformance.tests.test_executers"]], "test_fuelperformanceoptions() (armi.physics.fuelperformance.tests.test_executers.testfuelperformanceoptions method)": [[232, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions.test_fuelPerformanceOptions"]], "testfuelperformanceplugin (class in armi.physics.fuelperformance.tests.test_fuelperformanceplugin)": [[233, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin"]], "armi.physics.fuelperformance.tests.test_fuelperformanceplugin": [[233, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "plugin (armi.physics.fuelperformance.tests.test_fuelperformanceplugin.testfuelperformanceplugin attribute)": [[233, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin.plugin"]], "testfuelperformanceutils (class in armi.physics.fuelperformance.tests.test_fuelperformanceutils)": [[234, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils"]], "armi.physics.fuelperformance.tests.test_fuelperformanceutils": [[234, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "test_applyfueldisplacement() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[234, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_applyFuelDisplacement"]], "test_gasconductivitycorrection_morph0() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[234, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph0"]], "test_gasconductivitycorrection_morph1() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[234, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph1"]], "test_gasconductivitycorrection_morph2() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[234, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph2"]], "test_gasconductivitycorrection_morph3() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[234, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph3"]], "test_gasconductivitycorrection_morph4() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[234, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph4"]], "applyfueldisplacement() (in module armi.physics.fuelperformance.utils)": [[235, "armi.physics.fuelPerformance.utils.applyFuelDisplacement"]], "armi.physics.fuelperformance.utils": [[235, "module-armi.physics.fuelPerformance.utils"]], "gasconductivitycorrection() (in module armi.physics.fuelperformance.utils)": [[235, "armi.physics.fuelPerformance.utils.gasConductivityCorrection"]], "boc (armi.physics.neutronics.latticephysicsfrequency attribute)": [[236, "armi.physics.neutronics.LatticePhysicsFrequency.BOC"]], "bol (armi.physics.neutronics.latticephysicsfrequency attribute)": [[236, "armi.physics.neutronics.LatticePhysicsFrequency.BOL"]], "latticephysicsfrequency (class in armi.physics.neutronics)": [[236, "armi.physics.neutronics.LatticePhysicsFrequency"]], "neutronicsplugin (class in armi.physics.neutronics)": [[236, "armi.physics.neutronics.NeutronicsPlugin"]], "adjointcalculationrequested() (in module armi.physics.neutronics)": [[236, "armi.physics.neutronics.adjointCalculationRequested"]], "all (armi.physics.neutronics.latticephysicsfrequency attribute)": [[236, "armi.physics.neutronics.LatticePhysicsFrequency.all"]], "applyeffectivedelayedneutronfractiontocore() (in module armi.physics.neutronics)": [[236, "armi.physics.neutronics.applyEffectiveDelayedNeutronFractionToCore"]], "armi.physics.neutronics": [[236, "module-armi.physics.neutronics"]], "defineentrypoints() (armi.physics.neutronics.neutronicsplugin static method)": [[236, "armi.physics.neutronics.NeutronicsPlugin.defineEntryPoints"]], "defineparameters() (armi.physics.neutronics.neutronicsplugin static method)": [[236, "armi.physics.neutronics.NeutronicsPlugin.defineParameters"]], "definesettings() (armi.physics.neutronics.neutronicsplugin static method)": [[236, "armi.physics.neutronics.NeutronicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.neutronics.neutronicsplugin static method)": [[236, "armi.physics.neutronics.NeutronicsPlugin.defineSettingsValidators"]], "everynode (armi.physics.neutronics.latticephysicsfrequency attribute)": [[236, "armi.physics.neutronics.LatticePhysicsFrequency.everyNode"]], "exposeinterfaces() (armi.physics.neutronics.neutronicsplugin static method)": [[236, "armi.physics.neutronics.NeutronicsPlugin.exposeInterfaces"]], "firstcouplediteration (armi.physics.neutronics.latticephysicsfrequency attribute)": [[236, "armi.physics.neutronics.LatticePhysicsFrequency.firstCoupledIteration"]], "gammatransportisrequested() (in module armi.physics.neutronics)": [[236, "armi.physics.neutronics.gammaTransportIsRequested"]], "gammaxsarerequested() (in module armi.physics.neutronics)": [[236, "armi.physics.neutronics.gammaXsAreRequested"]], "getreportcontents() (armi.physics.neutronics.neutronicsplugin static method)": [[236, "armi.physics.neutronics.NeutronicsPlugin.getReportContents"]], "never (armi.physics.neutronics.latticephysicsfrequency attribute)": [[236, "armi.physics.neutronics.LatticePhysicsFrequency.never"]], "onprocesscoreloading() (armi.physics.neutronics.neutronicsplugin static method)": [[236, "armi.physics.neutronics.NeutronicsPlugin.onProcessCoreLoading"]], "realcalculationrequested() (in module armi.physics.neutronics)": [[236, "armi.physics.neutronics.realCalculationRequested"]], "armi.physics.neutronics.const": [[237, "module-armi.physics.neutronics.const"]], "averageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.AverageBlockCollection"]], "blockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection"]], "crosssectiongroupmanager (class in armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager"]], "cylindricalcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CylindricalComponentsAverageBlockCollection"]], "fluxweightedaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.FluxWeightedAverageBlockCollection"]], "medianblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.MedianBlockCollection"]], "slabcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.SlabComponentsAverageBlockCollection"]], "armi.physics.neutronics.crosssectiongroupmanager": [[238, "module-armi.physics.neutronics.crossSectionGroupManager"]], "blockcollectionfactory() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.blockCollectionFactory"]], "calcavgnuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.calcAvgNuclideTemperatures"]], "clearrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.clearRepresentativeBlocks"]], "createrepresentativeblock() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.createRepresentativeBlock"]], "createrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocks"]], "createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocksUsingExistingBlocks"]], "describeinterfaces() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.describeInterfaces"]], "disablebugroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.disableBuGroupUpdates"]], "enablebugroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.enableBuGroupUpdates"]], "fluxsolutionispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.fluxSolutionIsPregenerated"]], "getblocknuclidetemperatureavgterms() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.getBlockNuclideTemperatureAvgTerms"]], "getcandidateblocks() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getCandidateBlocks"]], "getnextavailablexstypes() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNextAvailableXsTypes"]], "getnuctemperature() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNucTemperature"]], "getweight() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getWeight"]], "getxstypelabelfromnumber() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeLabelFromNumber"]], "getxstypenumberfromlabel() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[238, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeNumberFromLabel"]], "interactboc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOC"]], "interactbol() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOL"]], "interactcoupled() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactCoupled"]], "interacteoc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEOC"]], "interacteverynode() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEveryNode"]], "makecrosssectiongroups() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.makeCrossSectionGroups"]], "name (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager attribute)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.name"]], "updatenuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.updateNuclideTemperatures"]], "xstypeispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[238, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.xsTypeIsPregenerated"]], "one_dimensional_cylinder (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[239, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_CYLINDER"]], "one_dimensional_slab (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[239, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_SLAB"]], "two_dimensional_hex (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[239, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.TWO_DIMENSIONAL_HEX"]], "xsgeometrytypes (class in armi.physics.neutronics.crosssectionsettings)": [[239, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes"]], "xsmodelingoptions (class in armi.physics.neutronics.crosssectionsettings)": [[239, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions"]], "xssettingdef (class in armi.physics.neutronics.crosssectionsettings)": [[239, "armi.physics.neutronics.crossSectionSettings.XSSettingDef"]], "xssettings (class in armi.physics.neutronics.crosssectionsettings)": [[239, "armi.physics.neutronics.crossSectionSettings.XSSettings"]], "zero_dimensional (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[239, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ZERO_DIMENSIONAL"]], "armi.physics.neutronics.crosssectionsettings": [[239, "module-armi.physics.neutronics.crossSectionSettings"]], "bugroup (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[239, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.buGroup"]], "dump() (armi.physics.neutronics.crosssectionsettings.xssettingdef method)": [[239, "armi.physics.neutronics.crossSectionSettings.XSSettingDef.dump"]], "fluxispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[239, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.fluxIsPregenerated"]], "getstr() (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes class method)": [[239, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.getStr"]], "serialize() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[239, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.serialize"]], "serializexssettings() (in module armi.physics.neutronics.crosssectionsettings)": [[239, "armi.physics.neutronics.crossSectionSettings.serializeXSSettings"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[239, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.setDefaults"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xssettings method)": [[239, "armi.physics.neutronics.crossSectionSettings.XSSettings.setDefaults"]], "validate() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[239, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.validate"]], "xsispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[239, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsIsPregenerated"]], "xssettingsvalidator() (in module armi.physics.neutronics.crosssectionsettings)": [[239, "armi.physics.neutronics.crossSectionSettings.xsSettingsValidator"]], "xstype (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[239, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsType"]], "compareisotxslibraries (class in armi.physics.neutronics.diffisotxs)": [[240, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries"]], "addoptions() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[240, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.addOptions"]], "armi.physics.neutronics.diffisotxs": [[240, "module-armi.physics.neutronics.diffIsotxs"]], "invoke() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[240, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.invoke"]], "name (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[240, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.name"]], "settingsargument (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[240, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.settingsArgument"]], "group_structure (in module armi.physics.neutronics.energygroups)": [[241, "armi.physics.neutronics.energyGroups.GROUP_STRUCTURE"]], "armi.physics.neutronics.energygroups": [[241, "module-armi.physics.neutronics.energyGroups"]], "getfastfluxgroupcutoff() (in module armi.physics.neutronics.energygroups)": [[241, "armi.physics.neutronics.energyGroups.getFastFluxGroupCutoff"]], "getgroupstructure() (in module armi.physics.neutronics.energygroups)": [[241, "armi.physics.neutronics.energyGroups.getGroupStructure"]], "getgroupstructuretype() (in module armi.physics.neutronics.energygroups)": [[241, "armi.physics.neutronics.energyGroups.getGroupStructureType"]], "armi.physics.neutronics.fissionproductmodel": [[242, "module-armi.physics.neutronics.fissionProductModel"]], "fissionproductmodel (class in armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodel": [[243, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "describeinterfaces() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.describeInterfaces"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getAllFissionProductNames"]], "getgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getGlobalLumpedFissionProducts"]], "interactboc() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOC"]], "interactbol() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOL"]], "interactdistributestate() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactDistributeState"]], "name (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel attribute)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.name"]], "removefissiongasesfromblocks() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.removeFissionGasesFromBlocks"]], "setallblocklfps() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllBlockLFPs"]], "setallcomponentfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllComponentFissionProducts"]], "setgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[243, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings": [[244, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "definesettings() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.defineSettings"]], "getfissionproductmodelsettingvalidators() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[244, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.getFissionProductModelSettingValidators"]], "fissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile"]], "lumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct"]], "lumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection"]], "armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct": [[245, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "createlfpsfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createLFPsFromFile"]], "createsinglelfpfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createSingleLFPFromFile"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.duplicate"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.duplicate"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNames"]], "getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNuclideBases"]], "getgaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getGaseousYieldFraction"]], "getlumpedfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getLumpedFissionProductNames"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFrac"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getMassFrac"]], "getmassfracdenom() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracDenom"]], "getmassfracs() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracs"]], "getnumberdensities() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getNumberDensities"]], "gettotalyield() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getTotalYield"]], "isgas() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.isGas"]], "items() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.items"]], "keys() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.keys"]], "lumpedfissionproductfactory() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.lumpedFissionProductFactory"]], "values() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.values"]], "armi.physics.neutronics.fissionproductmodel.tests": [[246, "module-armi.physics.neutronics.fissionProductModel.tests"]], "testfissionproductmodelexplicitmc2library (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library"]], "testfissionproductmodelexplicitmc2libraryslower (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower"]], "testfissionproductmodellumpedfissionproducts (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel": [[247, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "test_fpapplication() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_fpApplication"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_getAllFissionProductNames"]], "test_loadgloballfpsfromfile() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_loadGlobalLFPsFromFile"]], "test_nuclideflags() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclideFlags"]], "test_nuclidesinmodelalldepletableblocks() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2libraryslower method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2LibrarySlower.test_nuclidesInModelAllDepletableBlocks"]], "test_nuclidesinmodelfuel() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[247, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclidesInModelFuel"]], "testfissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile"]], "testlumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct"]], "testlumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection"]], "testlumpedfissionproductsexplicit (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit"]], "testlumpedfissionproductsfromreferencefile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile"]], "testmo99lfp (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP"]], "armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct": [[248, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "getdummylfpfile() (in module armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.getDummyLFPFile"]], "test_createlfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createLFPs"]], "test_createreferencelfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createReferenceLFPs"]], "test_duplicate() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_duplicate"]], "test_explicitfissionproducts() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsexplicit method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit.test_explicitFissionProducts"]], "test_fissionproductyields() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsfromreferencefile method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile.test_fissionProductYields"]], "test_gaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_gaseousYieldFraction"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNames"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testmo99lfp method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP.test_getAllFissionProductNames"]], "test_getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNuclideBases"]], "test_getmassfrac() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getMassFrac"]], "test_getnumberdensities() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getNumberDensities"]], "test_getyield() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_getYield"]], "test_isgas() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[248, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_isGas"]], "armi.physics.neutronics.globalflux": [[249, "module-armi.physics.neutronics.globalFlux"]], "globalfluxexecuter (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter"]], "globalfluxinterface (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface"]], "globalfluxinterfaceusingexecuters (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters"]], "globalfluxoptions (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions"]], "globalfluxresultmapper (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper"]], "armi.physics.neutronics.globalflux.globalfluxinterface": [[250, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "calcreactionrates() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.calcReactionRates"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.calculateKeff"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.calculateKeff"]], "checkenergybalance() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.checkEnergyBalance"]], "clearflux() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.clearFlux"]], "computedparate() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.computeDpaRate"]], "edgeassembliesareneeded() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxexecuter method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter.edgeAssembliesAreNeeded"]], "fromreactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromReactor"]], "fromusersettings() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromUserSettings"]], "function (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.function"]], "getburnuppeakingfactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getBurnupPeakingFactor"]], "getdpaxs() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getDpaXs"]], "getexecuter() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuter"]], "getexecutercls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterOptions"]], "gethistoryparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface static method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getHistoryParams"]], "getiofilenames() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getIOFileNames"]], "getkeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getKeff"]], "getlabel() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getLabel"]], "getoptionscls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getOptionsCls"]], "gettightcouplingvalue() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getTightCouplingValue"]], "interactboc() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactBOC"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactCoupled"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactCoupled"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactEveryNode"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactEveryNode"]], "name (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.name"]], "updatedparate() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateDpaRate"]], "updatemaxdpaparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[250, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateMaxDpaParams"]], "armi.physics.neutronics.globalflux.tests": [[251, "module-armi.physics.neutronics.globalFlux.tests"]], "mockcore (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCore"]], "mockcoreparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCoreParams"]], "mockglobalfluxexecuter (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxExecuter"]], "mockglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface"]], "mockglobalfluxwithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters"]], "mockglobalfluxwithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform"]], "mockreactor (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactor"]], "mockreactorparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactorParams"]], "testglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface"]], "testglobalfluxinterfacewithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters"]], "testglobalfluxinterfacewithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform"]], "testglobalfluxoptions (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions"]], "testglobalfluxresultmapper (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper"]], "testglobalfluxutils (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils"]], "applydummyflux() (in module armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.applyDummyFlux"]], "armi.physics.neutronics.globalflux.tests.test_globalfluxinterface": [[252, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecuters method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecutersnonuniform method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform.getExecuterOptions"]], "interactboc() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactBOC"]], "interacteverynode() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactEveryNode"]], "test_calcreactionrates() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxutils method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils.test_calcReactionRates"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_calculateKeff"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_calculateKeff"]], "test_checkenergybalance() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_checkEnergyBalance"]], "test_computedparate() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_computeDpaRate"]], "test_executerinteraction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_executerInteraction"]], "test_executerinteractionnonuniformassems() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_executerInteractionNonUniformAssems"]], "test_getburnuppeakingfactor() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactor"]], "test_getburnuppeakingfactorzero() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactorZero"]], "test_getdpaxs() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getDpaXs"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getExecuterCls"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_getExecuterCls"]], "test_gethistoryparams() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getHistoryParams"]], "test_getiofilenames() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getIOFileNames"]], "test_gettightcouplingvalue() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getTightCouplingValue"]], "test_interaction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_interaction"]], "test_mapper() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_mapper"]], "test_readfromreactors() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromReactors"]], "test_readfromsettings() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromSettings"]], "test_savephysicsfiles() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_savePhysicsFiles"]], "test_settightcouplingdefaults() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[252, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_setTightCouplingDefaults"]], "armi.physics.neutronics.latticephysics": [[253, "module-armi.physics.neutronics.latticePhysics"]], "latticephysicsinterface (class in armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface"]], "armi.physics.neutronics.latticephysics.latticephysicsinterface": [[254, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "clearxs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.clearXS"]], "computecrosssections() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.computeCrossSections"]], "function (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface attribute)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.function"]], "generatelatticephysicsinputs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.generateLatticePhysicsInputs"]], "getreader() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getReader"]], "getrepresentativeblocks() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getRepresentativeBlocks"]], "getwriters() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getWriters"]], "interactboc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOC"]], "interactbol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOL"]], "interactcoupled() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactCoupled"]], "interacteoc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEOC"]], "interacteverynode() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEveryNode"]], "makecyclexsfilesasbasefiles() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.makeCycleXSFilesAsBaseFiles"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.readExistingXSLibraries"]], "setblockneutronvelocities() (in module armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.setBlockNeutronVelocities"]], "updatephysicscouplingcontrol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updatePhysicsCouplingControl"]], "updatexslibrary() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updateXSLibrary"]], "coolant_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.COOLANT_CATEGORY"]], "depletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.DEPLETABLE"]], "fission_product_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FISSION_PRODUCT_CATEGORY"]], "fuel_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FUEL_CATEGORY"]], "latticephysicswriter (class in armi.physics.neutronics.latticephysics.latticephysicswriter)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter"]], "represented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.REPRESENTED"]], "structure_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.STRUCTURE_CATEGORY"]], "undepletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNDEPLETABLE"]], "unrepresented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNREPRESENTED"]], "unused_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNUSED_CATEGORY"]], "armi.physics.neutronics.latticephysics.latticephysicswriter": [[255, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "write() (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.write"]], "armi.physics.neutronics.latticephysics.tests": [[256, "module-armi.physics.neutronics.latticePhysics.tests"]], "latticeinterfacetester (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester"]], "latticeinterfacetesterlibfalse (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTesterLibFalse"]], "testlatticephysicsinterface (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface"]], "testlatticephysicsinterfacebase (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterfaceBase"]], "testlatticephysicslibrarycreation (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticephysics.tests.test_latticeinterface": [[257, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.latticeinterfacetester method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester.readExistingXSLibraries"]], "test_getsuffix() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_getSuffix"]], "test_includegammaxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_includeGammaXS"]], "test_interactall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactAll"]], "test_interactboc() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNode"]], "test_interacteverynodeall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeAll"]], "test_interacteverynodefirstcoupled() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeFirstCoupled"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactFirstCoupledIteration"]], "test_latticephysicsinterface() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_latticePhysicsInterface"]], "test_libcreation_genxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS"]], "test_libcreation_genxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_2"]], "test_libcreation_genxs_3() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_3"]], "test_libcreation_nogenxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS"]], "test_libcreation_nogenxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS_2"]], "fakelatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter"]], "testlatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticephysics.tests.test_latticewriter": [[258, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "test_getallnuclidesbytemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInC"]], "test_getallnuclidesbytemperatureincexplicitfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCExplicitFissionProducts"]], "test_getallnuclidesbytemperatureincnone() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCNone"]], "test_getavgnuclidetemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAvgNuclideTemperatureInC"]], "test_getdetailedfpdensities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFPDensities"]], "test_getdetailedfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProducts"]], "test_getdetailedfissionproductspass() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProductsPass"]], "test_getdriverblock() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDriverBlock"]], "test_getfueltemperature() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getFuelTemperature"]], "test_iscriticalbucklingsearchactive() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isCriticalBucklingSearchActive"]], "test_isgammaxsgenerationenabled() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isGammaXSGenerationEnabled"]], "test_issourcedriven() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isSourceDriven"]], "test_latticephysicswriter() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_latticePhysicsWriter"]], "test_setblockneutronvelocities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_setBlockNeutronVelocities"]], "test_writetitle() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_writeTitle"]], "write() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.fakelatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter.write"]], "macroxsgenerationinterface (class in armi.physics.neutronics.macroxsgenerationinterface)": [[259, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface"]], "macroxsgenerator (class in armi.physics.neutronics.macroxsgenerationinterface)": [[259, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator"]], "armi.physics.neutronics.macroxsgenerationinterface": [[259, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "buildmacros() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface method)": [[259, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.buildMacros"]], "invokehook() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerator method)": [[259, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator.invokeHook"]], "name (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface attribute)": [[259, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.name"]], "armi.physics.neutronics.parameters": [[260, "module-armi.physics.neutronics.parameters"]], "getneutronicsparameterdefinitions() (in module armi.physics.neutronics.parameters)": [[260, "armi.physics.neutronics.parameters.getNeutronicsParameterDefinitions"]], "pd_plot (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.PD_PLOT"]], "armi.physics.neutronics.reports": [[261, "module-armi.physics.neutronics.reports"]], "generatelineplot() (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.generateLinePlot"]], "insertinitialcorefuelassem() (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.insertInitialCoreFuelAssem"]], "insertneutronicsbolcontent() (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.insertNeutronicsBOLContent"]], "insertneutronicsreport() (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.insertNeutronicsReport"]], "neutronicsplotting() (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.neutronicsPlotting"]], "armi.physics.neutronics.settings": [[262, "module-armi.physics.neutronics.settings"]], "definesettings() (in module armi.physics.neutronics.settings)": [[262, "armi.physics.neutronics.settings.defineSettings"]], "getneutronicssettingvalidators() (in module armi.physics.neutronics.settings)": [[262, "armi.physics.neutronics.settings.getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[263, "module-armi.physics.neutronics.tests"]], "testblockcollection (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection"]], "testblockcollectionaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage"]], "testblockcollectioncomponentaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage"]], "testblockcollectioncomponentaverage1dcylinder (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder"]], "testblockcollectionfluxweightedaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage"]], "testblockcollectionmedian (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian"]], "testcomponentaveraging (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging"]], "testcrosssectiongroupmanager (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager"]], "testxsnumberconverters (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters"]], "armi.physics.neutronics.tests.test_crosssectionmanager": [[264, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "makeblocks() (in module armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.makeBlocks"]], "test_componentaverage1dcylinder() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_ComponentAverage1DCylinder"]], "test_componentaveragerepblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage.test_ComponentAverageRepBlock"]], "test_add() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_add"]], "test_addxsgroupsfromblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_addXsGroupsFromBlocks"]], "test_calcweightedburnup() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_calcWeightedBurnup"]], "test_checkblocksimilarity() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_checkBlockSimilarity"]], "test_checkcomponentconsistency() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_checkComponentConsistency"]], "test_conversion() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion"]], "test_conversion_2digit() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion_2digit"]], "test_copypregeneratedfiles() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_copyPregeneratedFiles"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionmedian method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian.test_createRepresentativeBlock"]], "test_createrepresentativeblockdissimilar() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlockDissimilar"]], "test_createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocks"]], "test_createrepresentativeblocksusingexistingblocksdisablevalidblocktypes() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocksDisableValidBlockTypes"]], "test_disablebugroupupdates() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_disableBuGroupUpdates"]], "test_enablebugroupupdates() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_enableBuGroupUpdates"]], "test_getaveragecomponentnumberdensities() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentNumberDensities"]], "test_getaveragecomponenttemperature() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperature"]], "test_getaveragecomponenttemperaturenomass() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureNoMass"]], "test_getaveragecomponenttemperaturevariedweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureVariedWeights"]], "test_getblocksingroup() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_getBlocksInGroup"]], "test_getnextavailablexstype() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getNextAvailableXsType"]], "test_getrepresentativeblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getRepresentativeBlocks"]], "test_interactallcoupled() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactAllCoupled"]], "test_interactboc() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactEveryNode"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactFirstCoupledIteration"]], "test_invalidweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_invalidWeights"]], "test_is_pickleable() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_is_pickleable"]], "test_performaveragebycomponent() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_performAverageByComponent"]], "test_setbugroupbounds() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_setBuGroupBounds"]], "test_updateburnupgroups() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_updateBurnupGroups"]], "test_xsgmisrunbeforexs() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_xsgmIsRunBeforeXS"]], "testcrosssectionsettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings"]], "testxssettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings"]], "armi.physics.neutronics.tests.test_crosssectionsettings": [[265, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "test_badcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_badCrossSections"]], "test_casesettings() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_caseSettings"]], "test_crosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_crossSections"]], "test_csblockrepresentation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentation"]], "test_csblockrepresentationfilelocation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentationFileLocation"]], "test_homogeneousxsdefaultsettingassignment() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_homogeneousXsDefaultSettingAssignment"]], "test_optionalkey() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_optionalKey"]], "test_pregeneratedcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedCrossSections"]], "test_pregeneratedfluxinputs() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedFluxInputs"]], "test_prioritization() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_prioritization"]], "test_setdefaultsettingsbylowestbugrouphomogeneous() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestBuGroupHomogeneous"]], "test_setdefaultsettingsbylowestbugrouponedimensional() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestBuGroupOneDimensional"]], "test_xssettingssetdefault() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_xsSettingsSetDefault"]], "test_yamlio() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_yamlIO"]], "testcrosssectiontable (class in armi.physics.neutronics.tests.test_crosssectiontable)": [[266, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crosssectiontable": [[266, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "test_isotopicdepletioninterface() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[266, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_isotopicDepletionInterface"]], "test_maketable() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[266, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_makeTable"]], "testenergygroups (class in armi.physics.neutronics.tests.test_energygroups)": [[267, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energygroups": [[267, "module-armi.physics.neutronics.tests.test_energyGroups"]], "test_consistenciesbetweengroupstructureandgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[267, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_consistenciesBetweenGroupStructureAndGroupStructureType"]], "test_getfastfluxgroupcutoff() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[267, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_getFastFluxGroupCutoff"]], "test_invalidgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[267, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_invalidGroupStructureType"]], "testmacroxsgenerationinterface (class in armi.physics.neutronics.tests.test_macroxsgenerationinterface)": [[268, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroxsgenerationinterface": [[268, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "test_macroxsgenerationinterfacebasics() (armi.physics.neutronics.tests.test_macroxsgenerationinterface.testmacroxsgenerationinterface method)": [[268, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface.test_macroXSGenerationInterfaceBasics"]], "neutronicsreactortests (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests"]], "testneutronicsplugin (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsplugin": [[269, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "plugin (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin attribute)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.plugin"]], "test_customsettingobjectio() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingObjectIO"]], "test_customsettingroundtrip() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingRoundTrip"]], "test_kineticsparameterassignment() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_kineticsParameterAssignment"]], "test_neutronicssettingsloaded() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_neutronicsSettingsLoaded"]], "test_neutronicssettingsvalidators() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_neutronicsSettingsValidators"]], "safetyplugin (class in armi.physics.safety)": [[270, "armi.physics.safety.SafetyPlugin"]], "armi.physics.safety": [[270, "module-armi.physics.safety"]], "definesettings() (armi.physics.safety.safetyplugin static method)": [[270, "armi.physics.safety.SafetyPlugin.defineSettings"]], "armi.physics.tests": [[271, "module-armi.physics.tests"]], "mockcore (class in armi.physics.tests.test_executers)": [[272, "armi.physics.tests.test_executers.MockCore"]], "mockparams (class in armi.physics.tests.test_executers)": [[272, "armi.physics.tests.test_executers.MockParams"]], "mockreactor (class in armi.physics.tests.test_executers)": [[272, "armi.physics.tests.test_executers.MockReactor"]], "testexecuters (class in armi.physics.tests.test_executers)": [[272, "armi.physics.tests.test_executers.TestExecuters"]], "testexecutionoptions (class in armi.physics.tests.test_executers)": [[272, "armi.physics.tests.test_executers.TestExecutionOptions"]], "armi.physics.tests.test_executers": [[272, "module-armi.physics.tests.test_executers"]], "test_collectinputsandoutputs() (armi.physics.tests.test_executers.testexecuters method)": [[272, "armi.physics.tests.test_executers.TestExecuters.test_collectInputsAndOutputs"]], "test_runexternalexecutable() (armi.physics.tests.test_executers.testexecuters method)": [[272, "armi.physics.tests.test_executers.TestExecuters.test_runExternalExecutable"]], "test_runningdirectorypath() (armi.physics.tests.test_executers.testexecutionoptions method)": [[272, "armi.physics.tests.test_executers.TestExecutionOptions.test_runningDirectoryPath"]], "test_updaterundir() (armi.physics.tests.test_executers.testexecuters method)": [[272, "armi.physics.tests.test_executers.TestExecuters.test_updateRunDir"]], "armi.physics.thermalhydraulics": [[273, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalhydraulics.const": [[274, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalhydraulics.parameters": [[275, "module-armi.physics.thermalHydraulics.parameters"]], "getparameterdefinitions() (in module armi.physics.thermalhydraulics.parameters)": [[275, "armi.physics.thermalHydraulics.parameters.getParameterDefinitions"]], "thermalhydraulicsplugin (class in armi.physics.thermalhydraulics.plugin)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin"]], "afterconstructionofassemblies() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.afterConstructionOfAssemblies"]], "armi.physics.thermalhydraulics.plugin": [[276, "module-armi.physics.thermalHydraulics.plugin"]], "defineparameters() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineParameters"]], "definesettings() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.exposeInterfaces"]], "armi.physics.thermalhydraulics.settings": [[277, "module-armi.physics.thermalHydraulics.settings"]], "definesettings() (in module armi.physics.thermalhydraulics.settings)": [[277, "armi.physics.thermalHydraulics.settings.defineSettings"]], "definevalidators() (in module armi.physics.thermalhydraulics.settings)": [[277, "armi.physics.thermalHydraulics.settings.defineValidators"]], "armi.physics.thermalhydraulics.tests": [[278, "module-armi.physics.thermalHydraulics.tests"]], "testthermalhydraulicsplugin (class in armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin)": [[279, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin"]], "armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin": [[279, "module-armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin"]], "plugin (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin attribute)": [[279, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.plugin"]], "test_thermalhydraulicssettingsloaded() (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin method)": [[279, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.test_thermalHydraulicsSettingsLoaded"]], "test_thermalhydraulicssettingsset() (armi.physics.thermalhydraulics.tests.test_thermalhydraulicsplugin.testthermalhydraulicsplugin method)": [[279, "armi.physics.thermalHydraulics.tests.test_thermalHydraulicsPlugin.TestThermalHydraulicsPlugin.test_thermalHydraulicsSettingsSet"]], "armipluginmanager (class in armi.pluginmanager)": [[280, "armi.pluginManager.ArmiPluginManager"]], "armi.pluginmanager": [[280, "module-armi.pluginManager"]], "counter (armi.pluginmanager.armipluginmanager property)": [[280, "armi.pluginManager.ArmiPluginManager.counter"]], "register() (armi.pluginmanager.armipluginmanager method)": [[280, "armi.pluginManager.ArmiPluginManager.register"]], "unregister() (armi.pluginmanager.armipluginmanager method)": [[280, "armi.pluginManager.ArmiPluginManager.unregister"]], "armiplugin (class in armi.plugins)": [[281, "armi.plugins.ArmiPlugin"]], "pluginerror": [[281, "armi.plugins.PluginError"]], "userplugin (class in armi.plugins)": [[281, "armi.plugins.UserPlugin"]], "afterconstructionofassemblies() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.afterConstructionOfAssemblies"]], "armi.plugins": [[281, "module-armi.plugins"]], "beforereactorconstruction() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.beforeReactorConstruction"]], "collectinterfacedescriptions() (in module armi.plugins)": [[281, "armi.plugins.collectInterfaceDescriptions"]], "defineassemblytypes() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineBlockTypes"]], "defineblueprintssections() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineBlueprintsSections"]], "definecasedependencies() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineEntryPoints"]], "defineflags() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineFlags"]], "defineguiwidgets() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineGuiWidgets"]], "defineparameterrenames() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineParameterRenames"]], "defineparameterrenames() (armi.plugins.userplugin static method)": [[281, "armi.plugins.UserPlugin.defineParameterRenames"]], "defineparameters() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineParameters"]], "defineparameters() (armi.plugins.userplugin static method)": [[281, "armi.plugins.UserPlugin.defineParameters"]], "definesettings() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineSettings"]], "definesettings() (armi.plugins.userplugin static method)": [[281, "armi.plugins.UserPlugin.defineSettings"]], "definesettingsvalidators() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineSettingsValidators"]], "definesettingsvalidators() (armi.plugins.userplugin static method)": [[281, "armi.plugins.UserPlugin.defineSettingsValidators"]], "definesystembuilders() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.defineSystemBuilders"]], "exposeinterfaces() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.exposeInterfaces"]], "getaxialexpansionchanger() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.getAxialExpansionChanger"]], "getnewpluginmanager() (in module armi.plugins)": [[281, "armi.plugins.getNewPluginManager"]], "getoperatorclassfromruntype() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.getOperatorClassFromRunType"]], "getreportcontents() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.mpiActionRequiresReset"]], "onprocesscoreloading() (armi.plugins.armiplugin static method)": [[281, "armi.plugins.ArmiPlugin.onProcessCoreLoading"]], "reactorplugin (class in armi.reactor)": [[282, "armi.reactor.ReactorPlugin"]], "armi.reactor": [[282, "module-armi.reactor"]], "beforereactorconstruction() (armi.reactor.reactorplugin static method)": [[282, "armi.reactor.ReactorPlugin.beforeReactorConstruction"]], "defineassemblytypes() (armi.reactor.reactorplugin static method)": [[282, "armi.reactor.ReactorPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.reactor.reactorplugin static method)": [[282, "armi.reactor.ReactorPlugin.defineBlockTypes"]], "definesystembuilders() (armi.reactor.reactorplugin static method)": [[282, "armi.reactor.ReactorPlugin.defineSystemBuilders"]], "getaxialexpansionchanger() (armi.reactor.reactorplugin static method)": [[282, "armi.reactor.ReactorPlugin.getAxialExpansionChanger"]], "assembly (class in armi.reactor.assemblies)": [[283, "armi.reactor.assemblies.Assembly"]], "cartesianassembly (class in armi.reactor.assemblies)": [[283, "armi.reactor.assemblies.CartesianAssembly"]], "database (armi.reactor.assemblies.assembly attribute)": [[283, "armi.reactor.assemblies.Assembly.DATABASE"]], "hexassembly (class in armi.reactor.assemblies)": [[283, "armi.reactor.assemblies.HexAssembly"]], "load_queue (armi.reactor.assemblies.assembly attribute)": [[283, "armi.reactor.assemblies.Assembly.LOAD_QUEUE"]], "not_in_core (armi.reactor.assemblies.assembly attribute)": [[283, "armi.reactor.assemblies.Assembly.NOT_IN_CORE"]], "rzassembly (class in armi.reactor.assemblies)": [[283, "armi.reactor.assemblies.RZAssembly"]], "spent_fuel_pool (armi.reactor.assemblies.assembly attribute)": [[283, "armi.reactor.assemblies.Assembly.SPENT_FUEL_POOL"]], "thrzassembly (class in armi.reactor.assemblies)": [[283, "armi.reactor.assemblies.ThRZAssembly"]], "add() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.add"]], "adjustresolution() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.adjustResolution"]], "armi.reactor.assemblies": [[283, "module-armi.reactor.assemblies"]], "calculatezcoords() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.calculateZCoords"]], "coords() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.coords"]], "countblockswithflags() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.countBlocksWithFlags"]], "dump() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.dump"]], "getage() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getAge"]], "getarea() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getArea"]], "getaverageplenumtemperature() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getAveragePlenumTemperature"]], "getaxialmesh() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getAxialMesh"]], "getbindexfromzindex() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getBIndexFromZIndex"]], "getblockatelevation() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getBlockAtElevation"]], "getblocks() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getBlocks"]], "getblocksandz() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getBlocksAndZ"]], "getblocksbetweenelevations() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getBlocksBetweenElevations"]], "getdim() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getDim"]], "getelevationboundariesbyblocktype() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getElevationBoundariesByBlockType"]], "getelevationsmatchingparamvalue() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getElevationsMatchingParamValue"]], "getfirstblock() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getFirstBlock"]], "getfirstblockbytype() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getFirstBlockByType"]], "getheight() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getHeight"]], "getlocation() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getLocation"]], "getnum() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getNum"]], "getparamofzfunction() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getParamOfZFunction"]], "getparamvaluesatz() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getParamValuesAtZ"]], "getpinplenumvolumeincubicmeters() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getPinPlenumVolumeInCubicMeters"]], "getreactiveheight() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getReactiveHeight"]], "getsymmetryfactor() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getSymmetryFactor"]], "gettotalheight() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getTotalHeight"]], "getvolume() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.getVolume"]], "hascontinuouscoolantchannel() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.hasContinuousCoolantChannel"]], "insert() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.insert"]], "isonwhichsymmetryline() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.isOnWhichSymmetryLine"]], "makeaxialsnaplist() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.makeAxialSnapList"]], "makenamefromassemnum() (armi.reactor.assemblies.assembly static method)": [[283, "armi.reactor.assemblies.Assembly.makeNameFromAssemNum"]], "makeunique() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.makeUnique"]], "moveto() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.moveTo"]], "pdefs (armi.reactor.assemblies.assembly attribute)": [[283, "armi.reactor.assemblies.Assembly.pDefs"]], "paramcollectiontype (armi.reactor.assemblies.assembly attribute)": [[283, "armi.reactor.assemblies.Assembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.cartesianassembly attribute)": [[283, "armi.reactor.assemblies.CartesianAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.hexassembly attribute)": [[283, "armi.reactor.assemblies.HexAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.rzassembly attribute)": [[283, "armi.reactor.assemblies.RZAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.thrzassembly attribute)": [[283, "armi.reactor.assemblies.ThRZAssembly.paramCollectionType"]], "radialinner() (armi.reactor.assemblies.rzassembly method)": [[283, "armi.reactor.assemblies.RZAssembly.radialInner"]], "radialouter() (armi.reactor.assemblies.rzassembly method)": [[283, "armi.reactor.assemblies.RZAssembly.radialOuter"]], "reestablishblockorder() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.reestablishBlockOrder"]], "renameblocksaccordingtoassemblynum() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.renameBlocksAccordingToAssemblyNum"]], "renumber() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.renumber"]], "rotate() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.rotate"]], "rotate() (armi.reactor.assemblies.hexassembly method)": [[283, "armi.reactor.assemblies.HexAssembly.rotate"]], "setblockheights() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.setBlockHeights"]], "setblockmesh() (armi.reactor.assemblies.assembly method)": [[283, "armi.reactor.assemblies.Assembly.setBlockMesh"]], "thetainner() (armi.reactor.assemblies.rzassembly method)": [[283, "armi.reactor.assemblies.RZAssembly.thetaInner"]], "thetaouter() (armi.reactor.assemblies.rzassembly method)": [[283, "armi.reactor.assemblies.RZAssembly.thetaOuter"]], "armi.reactor.assemblyparameters": [[284, "module-armi.reactor.assemblyParameters"]], "getassemblyparameterdefinitions() (in module armi.reactor.assemblyparameters)": [[284, "armi.reactor.assemblyParameters.getAssemblyParameterDefinitions"]], "armi.reactor.blockparameters": [[285, "module-armi.reactor.blockParameters"]], "getblockparameterdefinitions() (in module armi.reactor.blockparameters)": [[285, "armi.reactor.blockParameters.getBlockParameterDefinitions"]], "block (class in armi.reactor.blocks)": [[286, "armi.reactor.blocks.Block"]], "cartesianblock (class in armi.reactor.blocks)": [[286, "armi.reactor.blocks.CartesianBlock"]], "hexblock (class in armi.reactor.blocks)": [[286, "armi.reactor.blocks.HexBlock"]], "pitch_component_type (armi.reactor.blocks.block attribute)": [[286, "armi.reactor.blocks.Block.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.cartesianblock attribute)": [[286, "armi.reactor.blocks.CartesianBlock.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.hexblock attribute)": [[286, "armi.reactor.blocks.HexBlock.PITCH_COMPONENT_TYPE"]], "pitch_dimension (armi.reactor.blocks.block attribute)": [[286, "armi.reactor.blocks.Block.PITCH_DIMENSION"]], "pitch_dimension (armi.reactor.blocks.cartesianblock attribute)": [[286, "armi.reactor.blocks.CartesianBlock.PITCH_DIMENSION"]], "thrzblock (class in armi.reactor.blocks)": [[286, "armi.reactor.blocks.ThRZBlock"]], "add() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.add"]], "adjustdensity() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.adjustDensity"]], "adjustuenrich() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.adjustUEnrich"]], "armi.reactor.blocks": [[286, "module-armi.reactor.blocks"]], "autocreatespatialgrids() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.autoCreateSpatialGrids"]], "autocreatespatialgrids() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.autoCreateSpatialGrids"]], "axialinner() (armi.reactor.blocks.thrzblock method)": [[286, "armi.reactor.blocks.ThRZBlock.axialInner"]], "axialouter() (armi.reactor.blocks.thrzblock method)": [[286, "armi.reactor.blocks.ThRZBlock.axialOuter"]], "breakfuelcomponentsintoindividuals() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.breakFuelComponentsIntoIndividuals"]], "completeinitialloading() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.completeInitialLoading"]], "coords() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.coords"]], "coords() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.coords"]], "core (armi.reactor.blocks.block property)": [[286, "armi.reactor.blocks.Block.core"]], "createhomogenizedcopy() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.createHomogenizedCopy"]], "createhomogenizedcopy() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.createHomogenizedCopy"]], "getarea() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getArea"]], "getblocks() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getBlocks"]], "getboronmassenrich() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getBoronMassEnrich"]], "getcaptureenergygenerationconstants() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getCaptureEnergyGenerationConstants"]], "getcomponentareafrac() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getComponentAreaFrac"]], "getcomponentsinlinkedorder() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getComponentsInLinkedOrder"]], "getcomponentsthatarelinkedto() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getComponentsThatAreLinkedTo"]], "getdim() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getDim"]], "getdimensions() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getDimensions"]], "getductip() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.getDuctIP"]], "getductop() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.getDuctOP"]], "getfissionenergygenerationconstants() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getFissionEnergyGenerationConstants"]], "getflowarea() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.getFlowArea"]], "getflowareaperpin() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getFlowAreaPerPin"]], "getgammaenergydepositionconstants() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getGammaEnergyDepositionConstants"]], "getheight() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getHeight"]], "gethydraulicdiameter() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getHydraulicDiameter"]], "gethydraulicdiameter() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.getHydraulicDiameter"]], "getinputheight() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getInputHeight"]], "getintegratedmgflux() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getIntegratedMgFlux"]], "getlargestcomponent() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getLargestComponent"]], "getlocation() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getLocation"]], "getlumpedfissionproductcollection() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getLumpedFissionProductCollection"]], "getmaxarea() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.cartesianblock method)": [[286, "armi.reactor.blocks.CartesianBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.thrzblock method)": [[286, "armi.reactor.blocks.ThRZBlock.getMaxArea"]], "getmfp() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getMfp"]], "getmgflux() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getMgFlux"]], "getmicrosuffix() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getMicroSuffix"]], "getneutronenergydepositionconstants() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getNeutronEnergyDepositionConstants"]], "getnumpins() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getNumPins"]], "getpincenterflattoflat() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.cartesianblock method)": [[286, "armi.reactor.blocks.CartesianBlock.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.getPinCenterFlatToFlat"]], "getpincoordinates() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getPinCoordinates"]], "getpinpitch() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getPinPitch"]], "getpinpitch() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.getPinPitch"]], "getpintoductgap() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.getPinToDuctGap"]], "getpitch() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getPitch"]], "getplenumpin() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getPlenumPin"]], "getpumoles() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getPuMoles"]], "getrotationnum() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.getRotationNum"]], "getsmeardensity() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getSmearDensity"]], "getsortedcomponentsinsideofcomponent() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getSortedComponentsInsideOfComponent"]], "getsymmetryfactor() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.cartesianblock method)": [[286, "armi.reactor.blocks.CartesianBlock.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.getSymmetryFactor"]], "gettotalenergygenerationconstants() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getTotalEnergyGenerationConstants"]], "geturaniummassenrich() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getUraniumMassEnrich"]], "getvolume() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getVolume"]], "getwettedperimeter() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getWettedPerimeter"]], "getwettedperimeter() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.getWettedPerimeter"]], "getwirewrapcladgap() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.getWireWrapCladGap"]], "haspinpitch() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.hasPinPitch"]], "haspinpitch() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.hasPinPitch"]], "initializepinlocations() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.initializePinLocations"]], "isplenumpin() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.isPlenumPin"]], "makename() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.makeName"]], "mergewithblock() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.mergeWithBlock"]], "pdefs (armi.reactor.blocks.block attribute)": [[286, "armi.reactor.blocks.Block.pDefs"]], "paramcollectiontype (armi.reactor.blocks.block attribute)": [[286, "armi.reactor.blocks.Block.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.cartesianblock attribute)": [[286, "armi.reactor.blocks.CartesianBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.hexblock attribute)": [[286, "armi.reactor.blocks.HexBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.thrzblock attribute)": [[286, "armi.reactor.blocks.ThRZBlock.paramCollectionType"]], "plotflux() (armi.reactor.blocks.block static method)": [[286, "armi.reactor.blocks.Block.plotFlux"]], "radialinner() (armi.reactor.blocks.thrzblock method)": [[286, "armi.reactor.blocks.ThRZBlock.radialInner"]], "radialouter() (armi.reactor.blocks.thrzblock method)": [[286, "armi.reactor.blocks.ThRZBlock.radialOuter"]], "remove() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.remove"]], "removeall() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.removeAll"]], "replaceblockwithblock() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.replaceBlockWithBlock"]], "rotate() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.rotate"]], "rotate() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.rotate"]], "setareafractionsreport() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.setAreaFractionsReport"]], "setaxialexptargetcomp() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.setAxialExpTargetComp"]], "setb10volparam() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.setB10VolParam"]], "setbulimitinfo() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.setBuLimitInfo"]], "setheight() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.setHeight"]], "setpinmgfluxes() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.setPinMgFluxes"]], "setpinpowers() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.setPinPowers"]], "setpitch() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.setPitch"]], "setpitch() (armi.reactor.blocks.cartesianblock method)": [[286, "armi.reactor.blocks.CartesianBlock.setPitch"]], "setrotationnum() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.setRotationNum"]], "thetainner() (armi.reactor.blocks.thrzblock method)": [[286, "armi.reactor.blocks.ThRZBlock.thetaInner"]], "thetaouter() (armi.reactor.blocks.thrzblock method)": [[286, "armi.reactor.blocks.ThRZBlock.thetaOuter"]], "uniqid (armi.reactor.blocks.block attribute)": [[286, "armi.reactor.blocks.Block.uniqID"]], "updatecomponentdims() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.updateComponentDims"]], "verifyblockdims() (armi.reactor.blocks.block method)": [[286, "armi.reactor.blocks.Block.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.hexblock method)": [[286, "armi.reactor.blocks.HexBlock.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.thrzblock method)": [[286, "armi.reactor.blocks.ThRZBlock.verifyBlockDims"]], "blueprints (class in armi.reactor.blueprints)": [[287, "armi.reactor.blueprints.Blueprints"]], "adddefaultsfp() (armi.reactor.blueprints.blueprints method)": [[287, "armi.reactor.blueprints.Blueprints.addDefaultSFP"]], "armi.reactor.blueprints": [[287, "module-armi.reactor.blueprints"]], "attributes (armi.reactor.blueprints.blueprints attribute)": [[287, "armi.reactor.blueprints.Blueprints.attributes"]], "constructassem() (armi.reactor.blueprints.blueprints method)": [[287, "armi.reactor.blueprints.Blueprints.constructAssem"]], "load() (armi.reactor.blueprints.blueprints class method)": [[287, "armi.reactor.blueprints.Blueprints.load"]], "loadfromcs() (in module armi.reactor.blueprints)": [[287, "armi.reactor.blueprints.loadFromCs"]], "migrate() (armi.reactor.blueprints.blueprints class method)": [[287, "armi.reactor.blueprints.Blueprints.migrate"]], "migrate() (in module armi.reactor.blueprints)": [[287, "armi.reactor.blueprints.migrate"]], "assemblyblueprint (class in armi.reactor.blueprints.assemblyblueprint)": [[288, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint"]], "assemblykeyedlist (class in armi.reactor.blueprints.assemblyblueprint)": [[288, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList"]], "bycomponentmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[288, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications"]], "materialmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[288, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications"]], "modifications (class in armi.reactor.blueprints.assemblyblueprint)": [[288, "armi.reactor.blueprints.assemblyBlueprint.Modifications"]], "armi.reactor.blueprints.assemblyblueprint": [[288, "module-armi.reactor.blueprints.assemblyBlueprint"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.Modifications.attributes"]], "byspecifier (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist property)": [[288, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.bySpecifier"]], "construct() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint method)": [[288, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.construct"]], "getassemclass() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint class method)": [[288, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.getAssemClass"]], "item_type (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.item_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.Modifications.key_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[288, "armi.reactor.blueprints.assemblyBlueprint.Modifications.value_type"]], "blockblueprint (class in armi.reactor.blueprints.blockblueprint)": [[289, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint"]], "blockkeyedlist (class in armi.reactor.blueprints.blockblueprint)": [[289, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList"]], "blocklist (class in armi.reactor.blueprints.blockblueprint)": [[289, "armi.reactor.blueprints.blockBlueprint.BlockList"]], "armi.reactor.blueprints.blockblueprint": [[289, "module-armi.reactor.blueprints.blockBlueprint"]], "attributes (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[289, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.attributes"]], "attributes (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[289, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.attributes"]], "construct() (armi.reactor.blueprints.blockblueprint.blockblueprint method)": [[289, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.construct"]], "item_type (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[289, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[289, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blocklist attribute)": [[289, "armi.reactor.blueprints.blockBlueprint.BlockList.item_type"]], "componentblueprint (class in armi.reactor.blueprints.componentblueprint)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint"]], "componentdimension (class in armi.reactor.blueprints.componentblueprint)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentDimension"]], "componentgroup (class in armi.reactor.blueprints.componentblueprint)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentGroup"]], "componentgroups (class in armi.reactor.blueprints.componentblueprint)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentGroups"]], "componentkeyedlist (class in armi.reactor.blueprints.componentblueprint)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList"]], "groupedcomponent (class in armi.reactor.blueprints.componentblueprint)": [[290, "armi.reactor.blueprints.componentBlueprint.GroupedComponent"]], "armi.reactor.blueprints.componentblueprint": [[290, "module-armi.reactor.blueprints.componentBlueprint"]], "attributes (armi.reactor.blueprints.componentblueprint.componentblueprint attribute)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentdimension attribute)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.groupedcomponent attribute)": [[290, "armi.reactor.blueprints.componentBlueprint.GroupedComponent.attributes"]], "construct() (armi.reactor.blueprints.componentblueprint.componentblueprint method)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.construct"]], "expandelementals() (in module armi.reactor.blueprints.componentblueprint)": [[290, "armi.reactor.blueprints.componentBlueprint.expandElementals"]], "from_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.from_yaml"]], "insertdepletablenuclidekeys() (in module armi.reactor.blueprints.componentblueprint)": [[290, "armi.reactor.blueprints.componentBlueprint.insertDepletableNuclideKeys"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.item_type"]], "setcustomdensity() (armi.reactor.blueprints.componentblueprint.componentblueprint method)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.setCustomDensity"]], "to_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[290, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.to_yaml"]], "gridblueprint (class in armi.reactor.blueprints.gridblueprint)": [[291, "armi.reactor.blueprints.gridBlueprint.GridBlueprint"]], "grids (class in armi.reactor.blueprints.gridblueprint)": [[291, "armi.reactor.blueprints.gridBlueprint.Grids"]], "triplet (class in armi.reactor.blueprints.gridblueprint)": [[291, "armi.reactor.blueprints.gridBlueprint.Triplet"]], "armi.reactor.blueprints.gridblueprint": [[291, "module-armi.reactor.blueprints.gridBlueprint"]], "attributes (armi.reactor.blueprints.gridblueprint.gridblueprint attribute)": [[291, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.grids attribute)": [[291, "armi.reactor.blueprints.gridBlueprint.Grids.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.triplet attribute)": [[291, "armi.reactor.blueprints.gridBlueprint.Triplet.attributes"]], "construct() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[291, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.construct"]], "expandtofull() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[291, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.expandToFull"]], "getlocators() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[291, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getLocators"]], "getmultilocator() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[291, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getMultiLocator"]], "item_type (armi.reactor.blueprints.gridblueprint.grids attribute)": [[291, "armi.reactor.blueprints.gridBlueprint.Grids.item_type"]], "readfromlatticemap (armi.reactor.blueprints.gridblueprint.gridblueprint property)": [[291, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.readFromLatticeMap"]], "savetostream() (in module armi.reactor.blueprints.gridblueprint)": [[291, "armi.reactor.blueprints.gridBlueprint.saveToStream"]], "customisotopic (class in armi.reactor.blueprints.isotopicoptions)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic"]], "customisotopics (class in armi.reactor.blueprints.isotopicoptions)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics"]], "nuclideflag (class in armi.reactor.blueprints.isotopicoptions)": [[292, "armi.reactor.blueprints.isotopicOptions.NuclideFlag"]], "nuclideflags (class in armi.reactor.blueprints.isotopicoptions)": [[292, "armi.reactor.blueprints.isotopicOptions.NuclideFlags"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopic method)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.apply"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopics method)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.apply"]], "armi.reactor.blueprints.isotopicoptions": [[292, "module-armi.reactor.blueprints.isotopicOptions"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflag attribute)": [[292, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[292, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.attributes"]], "autoupdatenuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[292, "armi.reactor.blueprints.isotopicOptions.autoUpdateNuclideFlags"]], "density (armi.reactor.blueprints.isotopicoptions.customisotopic property)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.density"]], "eleexpandinfobasedoncodeendf() (in module armi.reactor.blueprints.isotopicoptions)": [[292, "armi.reactor.blueprints.isotopicOptions.eleExpandInfoBasedOnCodeENDF"]], "fileasactiveorinert() (armi.reactor.blueprints.isotopicoptions.nuclideflag method)": [[292, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.fileAsActiveOrInert"]], "from_yaml() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml"]], "from_yaml_key_val() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml_key_val"]], "gendefaultnucflags() (in module armi.reactor.blueprints.isotopicoptions)": [[292, "armi.reactor.blueprints.isotopicOptions.genDefaultNucFlags"]], "getallnuclidebasesbylibrary() (in module armi.reactor.blueprints.isotopicoptions)": [[292, "armi.reactor.blueprints.isotopicOptions.getAllNuclideBasesByLibrary"]], "getdefaultnuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[292, "armi.reactor.blueprints.isotopicOptions.getDefaultNuclideFlags"]], "item_type (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.item_type"]], "item_type (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[292, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.item_type"]], "key_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.key_type"]], "value_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[292, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.value_type"]], "systemblueprint (class in armi.reactor.blueprints.reactorblueprint)": [[293, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint"]], "systems (class in armi.reactor.blueprints.reactorblueprint)": [[293, "armi.reactor.blueprints.reactorBlueprint.Systems"]], "armi.reactor.blueprints.reactorblueprint": [[293, "module-armi.reactor.blueprints.reactorBlueprint"]], "attributes (armi.reactor.blueprints.reactorblueprint.systemblueprint attribute)": [[293, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.attributes"]], "attributes (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[293, "armi.reactor.blueprints.reactorBlueprint.Systems.attributes"]], "construct() (armi.reactor.blueprints.reactorblueprint.systemblueprint method)": [[293, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.construct"]], "item_type (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[293, "armi.reactor.blueprints.reactorBlueprint.Systems.item_type"]], "summarizematerialdata() (in module armi.reactor.blueprints.reactorblueprint)": [[293, "armi.reactor.blueprints.reactorBlueprint.summarizeMaterialData"]], "armi.reactor.blueprints.tests": [[294, "module-armi.reactor.blueprints.tests"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_assemblyblueprints)": [[295, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyblueprints": [[295, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "loadcustomassembly() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[295, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.loadCustomAssembly"]], "test_checkparamconsistency() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[295, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.test_checkParamConsistency"]], "twoblockinput_correct (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[295, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_correct"]], "twoblockinput_wrongheights (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[295, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongHeights"]], "twoblockinput_wrongmatmods (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[295, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMatMods"]], "twoblockinput_wrongmeshpoints (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[295, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMeshPoints"]], "twoblockinput_wrongxstypes (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[295, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongXSTypes"]], "testgriddedblock (class in armi.reactor.blueprints.tests.test_blockblueprints)": [[296, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockblueprints": [[296, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "test_blocklattice() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[296, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_blockLattice"]], "test_constructspatialgrid() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[296, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_constructSpatialGrid"]], "test_densityconsistentwithcomponentconstructor() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[296, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_densityConsistentWithComponentConstructor"]], "test_explicitflags() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[296, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_explicitFlags"]], "test_getlocatorsatlatticepositions() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[296, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_getLocatorsAtLatticePositions"]], "test_nonlatticecomponenthasrightmult() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[296, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_nonLatticeComponentHasRightMult"]], "testblueprints (class in armi.reactor.blueprints.tests.test_blueprints)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints"]], "testblueprintsschema (class in armi.reactor.blueprints.tests.test_blueprints)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints": [[297, "module-armi.reactor.blueprints.tests.test_blueprints"]], "test_assemblyparameters() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_assemblyParameters"]], "test_cladding_invalid() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_cladding_invalid"]], "test_componentdimensions() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_componentDimensions"]], "test_componentgroupinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_componentGroupInput"]], "test_components() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_components"]], "test_customisotopics() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_customIsotopics"]], "test_getassemblytypebyspecifier() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_getAssemblyTypeBySpecifier"]], "test_merge() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_merge"]], "test_noduplicatekeysinyamlblueprints() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_noDuplicateKeysInYamlBlueprints"]], "test_nuclideflags() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclideFlags"]], "test_nuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_nuclides"]], "test_nuclidesmc2v2() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v2"]], "test_nuclidesmc2v3() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v3"]], "test_roundtripcompletebp() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_roundTripCompleteBP"]], "test_specialisotopicvectors() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_specialIsotopicVectors"]], "test_toplevelcomponentinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_topLevelComponentInput"]], "test_tracenuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_traceNuclides"]], "test_withoutblocks() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[297, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_withoutBlocks"]], "testcomponentblueprint (class in armi.reactor.blueprints.tests.test_componentblueprint)": [[298, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentblueprint": [[298, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "componentstring (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint attribute)": [[298, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.componentString"]], "test_autodepletable() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[298, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_autoDepletable"]], "test_componentinitializationamericiumcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[298, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationAmericiumCustomIsotopics"]], "test_componentinitializationcontrolcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[298, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationControlCustomIsotopics"]], "test_componentinitializationincompleteburnchain() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[298, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationIncompleteBurnChain"]], "test_componentinitializationthoriumburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[298, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumBurnCustomIsotopics"]], "test_componentinitializationthoriumnoburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[298, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumNoBurnCustomIsotopics"]], "testcustomisotopics (class in armi.reactor.blueprints.tests.test_customisotopics)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics"]], "testcustomisotopics_errorconditions (class in armi.reactor.blueprints.tests.test_customisotopics)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions"]], "testnuclideflagsexpansion (class in armi.reactor.blueprints.tests.test_customisotopics)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customisotopics": [[299, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "test_customdensitylogsanderrors() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_customDensityLogsAndErrors"]], "test_densitiesappliedtononcustommaterials() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_densitiesAppliedToNonCustomMaterials"]], "test_densitymustbepositive() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_densityMustBePositive"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_expandedNatural"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.test_expandedNatural"]], "test_massfractionsareapplied() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_massFractionsAreApplied"]], "test_nonconformantelementname() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_nonConformantElementName"]], "test_numberdensities() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensities"]], "test_numberdensitiesanchor() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensitiesAnchor"]], "test_numberdensitiescannotspecifydensity() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_numberDensitiesCannotSpecifyDensity"]], "test_numberfractions() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberFractions"]], "test_unmodified() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unmodified"]], "test_unrepresentedareonlynatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unrepresentedAreOnlyNatural"]], "yamlbadblocks (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlBadBlocks"]], "yamlgoodblocks (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlGoodBlocks"]], "yamlpreamble (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlPreamble"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlString"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion attribute)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.yamlString"]], "yamlstringwitherror (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[299, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlStringWithError"]], "testgridbproundtrip (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[300, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip"]], "testgridblueprintssection (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[300, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection"]], "testrztgridblueprint (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[300, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridblueprints": [[300, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[300, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_construct"]], "test_contents() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[300, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_contents"]], "test_geomfile() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[300, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_geomFile"]], "test_roundtrip() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[300, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_roundTrip"]], "test_simpleread() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[300, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleRead"]], "test_simplereadlatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[300, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadLatticeMap"]], "test_simplereadnolatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[300, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadNoLatticeMap"]], "test_tinymap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[300, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_tinyMap"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_materialmodifications)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialmodifications": [[301, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "b4cinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.b4cInput"]], "loadb4cassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadB4CAssembly"]], "loaduzrassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadUZrAssembly"]], "test_bothu235zrwtfracmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_bothU235ZrWtFracModification"]], "test_checkbycomponentmaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_checkByComponentMaterialInput"]], "test_filtermaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_filterMaterialInput"]], "test_invalidcomponentmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidComponentModification"]], "test_invalidmatmodname() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidMatModName"]], "test_matmodsupthemro() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_matModsUpTheMRO"]], "test_materialmodificationlength() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_materialModificationLength"]], "test_nomaterialmodifications() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_noMaterialModifications"]], "test_theoreticaldensity() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_theoreticalDensity"]], "test_u235_wt_frac_bycomponent_modification1() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification1"]], "test_u235_wt_frac_bycomponent_modification2() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification2"]], "test_u235_wt_frac_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_modification"]], "test_zrwtfracmodification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_zrWtFracModification"]], "uzrinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[301, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.uZrInput"]], "testreactorblueprints (class in armi.reactor.blueprints.tests.test_reactorblueprints)": [[302, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorblueprints": [[302, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[302, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_construct"]], "test_excorestructure() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[302, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_excoreStructure"]], "test_materialdatasummary() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[302, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_materialDataSummary"]], "test_simpleread() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[302, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_simpleRead"]], "test_spentfuelpool() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[302, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_spentFuelPool"]], "dimension_names (armi.reactor.components.derivedshape attribute)": [[303, "armi.reactor.components.DerivedShape.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.nullcomponent attribute)": [[303, "armi.reactor.components.NullComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[303, "armi.reactor.components.PositiveOrNegativeVolumeComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedcomponent attribute)": [[303, "armi.reactor.components.UnshapedComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[303, "armi.reactor.components.UnshapedVolumetricComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.zeromasscomponent attribute)": [[303, "armi.reactor.components.ZeroMassComponent.DIMENSION_NAMES"]], "derivedshape (class in armi.reactor.components)": [[303, "armi.reactor.components.DerivedShape"]], "init_signature (armi.reactor.components.derivedshape attribute)": [[303, "armi.reactor.components.DerivedShape.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.nullcomponent attribute)": [[303, "armi.reactor.components.NullComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[303, "armi.reactor.components.PositiveOrNegativeVolumeComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedcomponent attribute)": [[303, "armi.reactor.components.UnshapedComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[303, "armi.reactor.components.UnshapedVolumetricComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.zeromasscomponent attribute)": [[303, "armi.reactor.components.ZeroMassComponent.INIT_SIGNATURE"]], "nullcomponent (class in armi.reactor.components)": [[303, "armi.reactor.components.NullComponent"]], "positiveornegativevolumecomponent (class in armi.reactor.components)": [[303, "armi.reactor.components.PositiveOrNegativeVolumeComponent"]], "unshapedcomponent (class in armi.reactor.components)": [[303, "armi.reactor.components.UnshapedComponent"]], "unshapedvolumetriccomponent (class in armi.reactor.components)": [[303, "armi.reactor.components.UnshapedVolumetricComponent"]], "zeromasscomponent (class in armi.reactor.components)": [[303, "armi.reactor.components.ZeroMassComponent"]], "armi.reactor.components": [[303, "module-armi.reactor.components"]], "computevolume() (armi.reactor.components.derivedshape method)": [[303, "armi.reactor.components.DerivedShape.computeVolume"]], "factory() (in module armi.reactor.components)": [[303, "armi.reactor.components.factory"]], "fromcomponent() (armi.reactor.components.unshapedcomponent static method)": [[303, "armi.reactor.components.UnshapedComponent.fromComponent"]], "getboundingcircleouterdiameter() (armi.reactor.components.derivedshape method)": [[303, "armi.reactor.components.DerivedShape.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.nullcomponent method)": [[303, "armi.reactor.components.NullComponent.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.unshapedcomponent method)": [[303, "armi.reactor.components.UnshapedComponent.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.derivedshape method)": [[303, "armi.reactor.components.DerivedShape.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedcomponent method)": [[303, "armi.reactor.components.UnshapedComponent.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedvolumetriccomponent method)": [[303, "armi.reactor.components.UnshapedVolumetricComponent.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[303, "armi.reactor.components.UnshapedVolumetricComponent.getComponentVolume"]], "getdimension() (armi.reactor.components.nullcomponent method)": [[303, "armi.reactor.components.NullComponent.getDimension"]], "getmaxvolume() (armi.reactor.components.derivedshape method)": [[303, "armi.reactor.components.DerivedShape.getMaxVolume"]], "getnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[303, "armi.reactor.components.ZeroMassComponent.getNumberDensity"]], "getvolume() (armi.reactor.components.derivedshape method)": [[303, "armi.reactor.components.DerivedShape.getVolume"]], "is3d (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[303, "armi.reactor.components.UnshapedVolumetricComponent.is3D"]], "material (armi.reactor.components.derivedshape attribute)": [[303, "armi.reactor.components.DerivedShape.material"]], "material (armi.reactor.components.nullcomponent attribute)": [[303, "armi.reactor.components.NullComponent.material"]], "material (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[303, "armi.reactor.components.PositiveOrNegativeVolumeComponent.material"]], "material (armi.reactor.components.unshapedcomponent attribute)": [[303, "armi.reactor.components.UnshapedComponent.material"]], "material (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[303, "armi.reactor.components.UnshapedVolumetricComponent.material"]], "material (armi.reactor.components.zeromasscomponent attribute)": [[303, "armi.reactor.components.ZeroMassComponent.material"]], "pdefs (armi.reactor.components.unshapedcomponent attribute)": [[303, "armi.reactor.components.UnshapedComponent.pDefs"]], "paramcollectiontype (armi.reactor.components.derivedshape attribute)": [[303, "armi.reactor.components.DerivedShape.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.nullcomponent attribute)": [[303, "armi.reactor.components.NullComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[303, "armi.reactor.components.PositiveOrNegativeVolumeComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedcomponent attribute)": [[303, "armi.reactor.components.UnshapedComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[303, "armi.reactor.components.UnshapedVolumetricComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.zeromasscomponent attribute)": [[303, "armi.reactor.components.ZeroMassComponent.paramCollectionType"]], "setnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[303, "armi.reactor.components.ZeroMassComponent.setNumberDensity"]], "setvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[303, "armi.reactor.components.UnshapedVolumetricComponent.setVolume"]], "circle (class in armi.reactor.components.basicshapes)": [[304, "armi.reactor.components.basicShapes.Circle"]], "dimension_names (armi.reactor.components.basicshapes.circle attribute)": [[304, "armi.reactor.components.basicShapes.Circle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.hexagon attribute)": [[304, "armi.reactor.components.basicShapes.Hexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.rectangle attribute)": [[304, "armi.reactor.components.basicShapes.Rectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.solidrectangle attribute)": [[304, "armi.reactor.components.basicShapes.SolidRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.square attribute)": [[304, "armi.reactor.components.basicShapes.Square.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.triangle attribute)": [[304, "armi.reactor.components.basicShapes.Triangle.DIMENSION_NAMES"]], "hexagon (class in armi.reactor.components.basicshapes)": [[304, "armi.reactor.components.basicShapes.Hexagon"]], "init_signature (armi.reactor.components.basicshapes.circle attribute)": [[304, "armi.reactor.components.basicShapes.Circle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.hexagon attribute)": [[304, "armi.reactor.components.basicShapes.Hexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.rectangle attribute)": [[304, "armi.reactor.components.basicShapes.Rectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.solidrectangle attribute)": [[304, "armi.reactor.components.basicShapes.SolidRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.square attribute)": [[304, "armi.reactor.components.basicShapes.Square.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.triangle attribute)": [[304, "armi.reactor.components.basicShapes.Triangle.INIT_SIGNATURE"]], "rectangle (class in armi.reactor.components.basicshapes)": [[304, "armi.reactor.components.basicShapes.Rectangle"]], "solidrectangle (class in armi.reactor.components.basicshapes)": [[304, "armi.reactor.components.basicShapes.SolidRectangle"]], "square (class in armi.reactor.components.basicshapes)": [[304, "armi.reactor.components.basicShapes.Square"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.circle attribute)": [[304, "armi.reactor.components.basicShapes.Circle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.hexagon attribute)": [[304, "armi.reactor.components.basicShapes.Hexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.rectangle attribute)": [[304, "armi.reactor.components.basicShapes.Rectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.solidrectangle attribute)": [[304, "armi.reactor.components.basicShapes.SolidRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.triangle attribute)": [[304, "armi.reactor.components.basicShapes.Triangle.THERMAL_EXPANSION_DIMS"]], "triangle (class in armi.reactor.components.basicshapes)": [[304, "armi.reactor.components.basicShapes.Triangle"]], "armi.reactor.components.basicshapes": [[304, "module-armi.reactor.components.basicShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.circle method)": [[304, "armi.reactor.components.basicShapes.Circle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[304, "armi.reactor.components.basicShapes.Hexagon.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[304, "armi.reactor.components.basicShapes.Rectangle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.square method)": [[304, "armi.reactor.components.basicShapes.Square.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.circle method)": [[304, "armi.reactor.components.basicShapes.Circle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[304, "armi.reactor.components.basicShapes.Hexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[304, "armi.reactor.components.basicShapes.Rectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.square method)": [[304, "armi.reactor.components.basicShapes.Square.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.basicshapes.circle method)": [[304, "armi.reactor.components.basicShapes.Circle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.hexagon method)": [[304, "armi.reactor.components.basicShapes.Hexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.rectangle method)": [[304, "armi.reactor.components.basicShapes.Rectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.solidrectangle method)": [[304, "armi.reactor.components.basicShapes.SolidRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.square method)": [[304, "armi.reactor.components.basicShapes.Square.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.triangle method)": [[304, "armi.reactor.components.basicShapes.Triangle.getComponentArea"]], "getperimeter() (armi.reactor.components.basicshapes.hexagon method)": [[304, "armi.reactor.components.basicShapes.Hexagon.getPerimeter"]], "getpitchdata() (armi.reactor.components.basicshapes.hexagon method)": [[304, "armi.reactor.components.basicShapes.Hexagon.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.rectangle method)": [[304, "armi.reactor.components.basicShapes.Rectangle.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.square method)": [[304, "armi.reactor.components.basicShapes.Square.getPitchData"]], "is3d (armi.reactor.components.basicshapes.circle attribute)": [[304, "armi.reactor.components.basicShapes.Circle.is3D"]], "is3d (armi.reactor.components.basicshapes.hexagon attribute)": [[304, "armi.reactor.components.basicShapes.Hexagon.is3D"]], "is3d (armi.reactor.components.basicshapes.rectangle attribute)": [[304, "armi.reactor.components.basicShapes.Rectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.solidrectangle attribute)": [[304, "armi.reactor.components.basicShapes.SolidRectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.square attribute)": [[304, "armi.reactor.components.basicShapes.Square.is3D"]], "is3d (armi.reactor.components.basicshapes.triangle attribute)": [[304, "armi.reactor.components.basicShapes.Triangle.is3D"]], "isencapsulatedby() (armi.reactor.components.basicshapes.circle method)": [[304, "armi.reactor.components.basicShapes.Circle.isEncapsulatedBy"]], "islatticecomponent() (armi.reactor.components.basicshapes.rectangle method)": [[304, "armi.reactor.components.basicShapes.Rectangle.isLatticeComponent"]], "material (armi.reactor.components.basicshapes.circle attribute)": [[304, "armi.reactor.components.basicShapes.Circle.material"]], "material (armi.reactor.components.basicshapes.hexagon attribute)": [[304, "armi.reactor.components.basicShapes.Hexagon.material"]], "material (armi.reactor.components.basicshapes.rectangle attribute)": [[304, "armi.reactor.components.basicShapes.Rectangle.material"]], "material (armi.reactor.components.basicshapes.solidrectangle attribute)": [[304, "armi.reactor.components.basicShapes.SolidRectangle.material"]], "material (armi.reactor.components.basicshapes.square attribute)": [[304, "armi.reactor.components.basicShapes.Square.material"]], "material (armi.reactor.components.basicshapes.triangle attribute)": [[304, "armi.reactor.components.basicShapes.Triangle.material"]], "pdefs (armi.reactor.components.basicshapes.circle attribute)": [[304, "armi.reactor.components.basicShapes.Circle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.hexagon attribute)": [[304, "armi.reactor.components.basicShapes.Hexagon.pDefs"]], "pdefs (armi.reactor.components.basicshapes.rectangle attribute)": [[304, "armi.reactor.components.basicShapes.Rectangle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.triangle attribute)": [[304, "armi.reactor.components.basicShapes.Triangle.pDefs"]], "paramcollectiontype (armi.reactor.components.basicshapes.circle attribute)": [[304, "armi.reactor.components.basicShapes.Circle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.hexagon attribute)": [[304, "armi.reactor.components.basicShapes.Hexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.rectangle attribute)": [[304, "armi.reactor.components.basicShapes.Rectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.solidrectangle attribute)": [[304, "armi.reactor.components.basicShapes.SolidRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.square attribute)": [[304, "armi.reactor.components.basicShapes.Square.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.triangle attribute)": [[304, "armi.reactor.components.basicShapes.Triangle.paramCollectionType"]], "dimension_names (armi.reactor.components.complexshapes.helix attribute)": [[305, "armi.reactor.components.complexShapes.Helix.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[305, "armi.reactor.components.complexShapes.HexHoledCircle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedhexagon attribute)": [[305, "armi.reactor.components.complexShapes.HoledHexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedrectangle attribute)": [[305, "armi.reactor.components.complexShapes.HoledRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedsquare attribute)": [[305, "armi.reactor.components.complexShapes.HoledSquare.DIMENSION_NAMES"]], "helix (class in armi.reactor.components.complexshapes)": [[305, "armi.reactor.components.complexShapes.Helix"]], "hexholedcircle (class in armi.reactor.components.complexshapes)": [[305, "armi.reactor.components.complexShapes.HexHoledCircle"]], "holedhexagon (class in armi.reactor.components.complexshapes)": [[305, "armi.reactor.components.complexShapes.HoledHexagon"]], "holedrectangle (class in armi.reactor.components.complexshapes)": [[305, "armi.reactor.components.complexShapes.HoledRectangle"]], "holedsquare (class in armi.reactor.components.complexshapes)": [[305, "armi.reactor.components.complexShapes.HoledSquare"]], "init_signature (armi.reactor.components.complexshapes.helix attribute)": [[305, "armi.reactor.components.complexShapes.Helix.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[305, "armi.reactor.components.complexShapes.HexHoledCircle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedhexagon attribute)": [[305, "armi.reactor.components.complexShapes.HoledHexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedrectangle attribute)": [[305, "armi.reactor.components.complexShapes.HoledRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedsquare attribute)": [[305, "armi.reactor.components.complexShapes.HoledSquare.INIT_SIGNATURE"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.helix attribute)": [[305, "armi.reactor.components.complexShapes.Helix.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[305, "armi.reactor.components.complexShapes.HexHoledCircle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedhexagon attribute)": [[305, "armi.reactor.components.complexShapes.HoledHexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedrectangle attribute)": [[305, "armi.reactor.components.complexShapes.HoledRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedsquare attribute)": [[305, "armi.reactor.components.complexShapes.HoledSquare.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.complexshapes": [[305, "module-armi.reactor.components.complexShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.complexshapes.helix method)": [[305, "armi.reactor.components.complexShapes.Helix.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.helix method)": [[305, "armi.reactor.components.complexShapes.Helix.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.hexholedcircle method)": [[305, "armi.reactor.components.complexShapes.HexHoledCircle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedhexagon method)": [[305, "armi.reactor.components.complexShapes.HoledHexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedrectangle method)": [[305, "armi.reactor.components.complexShapes.HoledRectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedsquare method)": [[305, "armi.reactor.components.complexShapes.HoledSquare.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.complexshapes.helix method)": [[305, "armi.reactor.components.complexShapes.Helix.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.hexholedcircle method)": [[305, "armi.reactor.components.complexShapes.HexHoledCircle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedhexagon method)": [[305, "armi.reactor.components.complexShapes.HoledHexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedrectangle method)": [[305, "armi.reactor.components.complexShapes.HoledRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedsquare method)": [[305, "armi.reactor.components.complexShapes.HoledSquare.getComponentArea"]], "is3d (armi.reactor.components.complexshapes.helix attribute)": [[305, "armi.reactor.components.complexShapes.Helix.is3D"]], "material (armi.reactor.components.complexshapes.helix attribute)": [[305, "armi.reactor.components.complexShapes.Helix.material"]], "material (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[305, "armi.reactor.components.complexShapes.HexHoledCircle.material"]], "material (armi.reactor.components.complexshapes.holedhexagon attribute)": [[305, "armi.reactor.components.complexShapes.HoledHexagon.material"]], "material (armi.reactor.components.complexshapes.holedrectangle attribute)": [[305, "armi.reactor.components.complexShapes.HoledRectangle.material"]], "material (armi.reactor.components.complexshapes.holedsquare attribute)": [[305, "armi.reactor.components.complexShapes.HoledSquare.material"]], "pdefs (armi.reactor.components.complexshapes.helix attribute)": [[305, "armi.reactor.components.complexShapes.Helix.pDefs"]], "pdefs (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[305, "armi.reactor.components.complexShapes.HexHoledCircle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedhexagon attribute)": [[305, "armi.reactor.components.complexShapes.HoledHexagon.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedrectangle attribute)": [[305, "armi.reactor.components.complexShapes.HoledRectangle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedsquare attribute)": [[305, "armi.reactor.components.complexShapes.HoledSquare.pDefs"]], "paramcollectiontype (armi.reactor.components.complexshapes.helix attribute)": [[305, "armi.reactor.components.complexShapes.Helix.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[305, "armi.reactor.components.complexShapes.HexHoledCircle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedhexagon attribute)": [[305, "armi.reactor.components.complexShapes.HoledHexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedrectangle attribute)": [[305, "armi.reactor.components.complexShapes.HoledRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedsquare attribute)": [[305, "armi.reactor.components.complexShapes.HoledSquare.paramCollectionType"]], "component (class in armi.reactor.components.component)": [[306, "armi.reactor.components.component.Component"]], "componenttype (class in armi.reactor.components.component)": [[306, "armi.reactor.components.component.ComponentType"]], "dimension_names (armi.reactor.components.component.component attribute)": [[306, "armi.reactor.components.component.Component.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.component.shapedcomponent attribute)": [[306, "armi.reactor.components.component.ShapedComponent.DIMENSION_NAMES"]], "init_signature (armi.reactor.components.component.component attribute)": [[306, "armi.reactor.components.component.Component.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.component.shapedcomponent attribute)": [[306, "armi.reactor.components.component.ShapedComponent.INIT_SIGNATURE"]], "non_dimension_names (armi.reactor.components.component.componenttype attribute)": [[306, "armi.reactor.components.component.ComponentType.NON_DIMENSION_NAMES"]], "shapedcomponent (class in armi.reactor.components.component)": [[306, "armi.reactor.components.component.ShapedComponent"]], "thermal_expansion_dims (armi.reactor.components.component.component attribute)": [[306, "armi.reactor.components.component.Component.THERMAL_EXPANSION_DIMS"]], "types (armi.reactor.components.component.componenttype attribute)": [[306, "armi.reactor.components.component.ComponentType.TYPES"]], "adjustdensityforheightexpansion() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.adjustDensityForHeightExpansion"]], "adjustmassenrichment() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.adjustMassEnrichment"]], "applymaterialmassfracstonumberdensities() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.applyMaterialMassFracsToNumberDensities"]], "armi.reactor.components.component": [[306, "module-armi.reactor.components.component"]], "backup() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.backUp"]], "clearcache() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.clearCache"]], "clearlinkedcache() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.clearLinkedCache"]], "componenttypeisvalid() (in module armi.reactor.components.component)": [[306, "armi.reactor.components.component.componentTypeIsValid"]], "computevolume() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.computeVolume"]], "containssolidmaterial() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.containsSolidMaterial"]], "containsvoidmaterial() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.containsVoidMaterial"]], "density() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.density"]], "dimensionislinked() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.dimensionIsLinked"]], "finalizeloadingfromdb() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.finalizeLoadingFromDB"]], "gasporosity (armi.reactor.components.component.component property)": [[306, "armi.reactor.components.component.Component.gasPorosity"]], "getarea() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getArea"]], "getboundingcircleouterdiameter() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getComponentVolume"]], "getdimension() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getDimension"]], "getdimensionnameslinkedto() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getDimensionNamesLinkedTo"]], "getenrichment() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getEnrichment"]], "getfuelmass() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getFuelMass"]], "getheightfactor() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getHeightFactor"]], "getintegratedmgflux() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getIntegratedMgFlux"]], "getlinkedcomponents() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getLinkedComponents"]], "getlumpedfissionproductcollection() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getLumpedFissionProductCollection"]], "getmass() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getMass"]], "getmassenrichment() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getMassEnrichment"]], "getmicrosuffix() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getMicroSuffix"]], "getnuclidenumberdensities() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getNuclides"]], "getnumberdensity() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getNumberDensity"]], "getpitchdata() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getPitchData"]], "getproperties() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getProperties"]], "getthermalexpansionfactor() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getThermalExpansionFactor"]], "getvolume() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.getVolume"]], "is3d (armi.reactor.components.component.component attribute)": [[306, "armi.reactor.components.component.Component.is3D"]], "itercomponents() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.iterComponents"]], "liquidporosity (armi.reactor.components.component.component property)": [[306, "armi.reactor.components.component.Component.liquidPorosity"]], "material (armi.reactor.components.component.component attribute)": [[306, "armi.reactor.components.component.Component.material"]], "material (armi.reactor.components.component.shapedcomponent attribute)": [[306, "armi.reactor.components.component.ShapedComponent.material"]], "mergenuclidesinto() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.mergeNuclidesInto"]], "pdefs (armi.reactor.components.component.component attribute)": [[306, "armi.reactor.components.component.Component.pDefs"]], "paramcollectiontype (armi.reactor.components.component.component attribute)": [[306, "armi.reactor.components.component.Component.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.component.shapedcomponent attribute)": [[306, "armi.reactor.components.component.ShapedComponent.paramCollectionType"]], "printcontents() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.printContents"]], "resolvelinkeddims() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.resolveLinkedDims"]], "restorebackup() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.restoreBackup"]], "setarea() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.setArea"]], "setdimension() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.setDimension"]], "setdimensionreport() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.setDimensionReport"]], "setlink() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.setLink"]], "setlumpedfissionproducts() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.setLumpedFissionProducts"]], "setname() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.setName"]], "setnumberdensities() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.setNumberDensities"]], "setnumberdensity() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.setNumberDensity"]], "setproperties() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.setProperties"]], "settemperature() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.setTemperature"]], "setvolume() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.setVolume"]], "temperatureinc (armi.reactor.components.component.component property)": [[306, "armi.reactor.components.component.Component.temperatureInC"]], "temperatureink (armi.reactor.components.component.component property)": [[306, "armi.reactor.components.component.Component.temperatureInK"]], "updatedims() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.updateDims"]], "updatenumberdensities() (armi.reactor.components.component.component method)": [[306, "armi.reactor.components.component.Component.updateNumberDensities"]], "armi.reactor.components.componentparameters": [[307, "module-armi.reactor.components.componentParameters"]], "getcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getCircleParameterDefinitions"]], "getcomponentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getComponentParameterDefinitions"]], "getcubeparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getCubeParameterDefinitions"]], "gethelixparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getHelixParameterDefinitions"]], "gethexholedcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getHexHoledCircleParameterDefinitions"]], "gethexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getHexagonParameterDefinitions"]], "getholedhexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getHoledHexagonParameterDefinitions"]], "getholedrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getHoledRectangleParameterDefinitions"]], "getradialsegmentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getRadialSegmentParameterDefinitions"]], "getrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getRectangleParameterDefinitions"]], "gettriangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getTriangleParameterDefinitions"]], "getunshapedparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[307, "armi.reactor.components.componentParameters.getUnshapedParameterDefinitions"]], "cube (class in armi.reactor.components.volumetricshapes)": [[308, "armi.reactor.components.volumetricShapes.Cube"]], "dimension_names (armi.reactor.components.volumetricshapes.cube attribute)": [[308, "armi.reactor.components.volumetricShapes.Cube.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.RadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.sphere attribute)": [[308, "armi.reactor.components.volumetricShapes.Sphere.DIMENSION_NAMES"]], "differentialradialsegment (class in armi.reactor.components.volumetricshapes)": [[308, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment"]], "init_signature (armi.reactor.components.volumetricshapes.cube attribute)": [[308, "armi.reactor.components.volumetricShapes.Cube.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.RadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.sphere attribute)": [[308, "armi.reactor.components.volumetricShapes.Sphere.INIT_SIGNATURE"]], "radialsegment (class in armi.reactor.components.volumetricshapes)": [[308, "armi.reactor.components.volumetricShapes.RadialSegment"]], "sphere (class in armi.reactor.components.volumetricshapes)": [[308, "armi.reactor.components.volumetricShapes.Sphere"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.cube attribute)": [[308, "armi.reactor.components.volumetricShapes.Cube.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.RadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.sphere attribute)": [[308, "armi.reactor.components.volumetricShapes.Sphere.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.volumetricshapes": [[308, "module-armi.reactor.components.volumetricShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.radialsegment method)": [[308, "armi.reactor.components.volumetricShapes.RadialSegment.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.sphere method)": [[308, "armi.reactor.components.volumetricShapes.Sphere.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.cube method)": [[308, "armi.reactor.components.volumetricShapes.Cube.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[308, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.radialsegment method)": [[308, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.sphere method)": [[308, "armi.reactor.components.volumetricShapes.Sphere.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.cube method)": [[308, "armi.reactor.components.volumetricShapes.Cube.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[308, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.radialsegment method)": [[308, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.sphere method)": [[308, "armi.reactor.components.volumetricShapes.Sphere.getComponentVolume"]], "is3d (armi.reactor.components.volumetricshapes.cube attribute)": [[308, "armi.reactor.components.volumetricShapes.Cube.is3D"]], "is3d (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.RadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.sphere attribute)": [[308, "armi.reactor.components.volumetricShapes.Sphere.is3D"]], "material (armi.reactor.components.volumetricshapes.cube attribute)": [[308, "armi.reactor.components.volumetricShapes.Cube.material"]], "material (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.material"]], "material (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.RadialSegment.material"]], "material (armi.reactor.components.volumetricshapes.sphere attribute)": [[308, "armi.reactor.components.volumetricShapes.Sphere.material"]], "pdefs (armi.reactor.components.volumetricshapes.cube attribute)": [[308, "armi.reactor.components.volumetricShapes.Cube.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.RadialSegment.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.sphere attribute)": [[308, "armi.reactor.components.volumetricShapes.Sphere.pDefs"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.cube attribute)": [[308, "armi.reactor.components.volumetricShapes.Cube.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[308, "armi.reactor.components.volumetricShapes.RadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.sphere attribute)": [[308, "armi.reactor.components.volumetricShapes.Sphere.paramCollectionType"]], "updatedims() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[308, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.updateDims"]], "armiobject (class in armi.reactor.composites)": [[309, "armi.reactor.composites.ArmiObject"]], "composite (class in armi.reactor.composites)": [[309, "armi.reactor.composites.Composite"]], "compositemodeltype (class in armi.reactor.composites)": [[309, "armi.reactor.composites.CompositeModelType"]], "flagserializer (class in armi.reactor.composites)": [[309, "armi.reactor.composites.FlagSerializer"]], "stateretainer (class in armi.reactor.composites)": [[309, "armi.reactor.composites.StateRetainer"]], "types (armi.reactor.composites.compositemodeltype attribute)": [[309, "armi.reactor.composites.CompositeModelType.TYPES"]], "add() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.add"]], "addmass() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.addMass"]], "addmasses() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.addMasses"]], "adjustmassenrichment() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.adjustMassEnrichment"]], "adjustmassfrac() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.adjustMassFrac"]], "append() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.append"]], "armi.reactor.composites": [[309, "module-armi.reactor.composites"]], "backup() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.backUp"]], "calcavgparam() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.calcAvgParam"]], "calctotalparam() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.calcTotalParam"]], "changendensbyfactor() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.changeNDensByFactor"]], "clearcache() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.clearCache"]], "clearnumberdensities() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.clearNumberDensities"]], "constituentreport() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.constituentReport"]], "containsatleastonechildwithflags() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.containsAtLeastOneChildWithFlags"]], "containsheavymetal() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.containsHeavyMetal"]], "containsonlychildrenwithflags() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.containsOnlyChildrenWithFlags"]], "copyparamsfrom() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.copyParamsFrom"]], "copyparamstochildren() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.copyParamsToChildren"]], "density() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.density"]], "dochildrenhaveflags() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.doChildrenHaveFlags"]], "duplicate() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.duplicate"]], "expandallelementalstoisotopics() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.expandAllElementalsToIsotopics"]], "expandelementaltoisotopics() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.expandElementalToIsotopics"]], "extend() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.extend"]], "gathermaterialsbyvolume() (in module armi.reactor.composites)": [[309, "armi.reactor.composites.gatherMaterialsByVolume"]], "getancestor() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getAncestor"]], "getancestoranddistance() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getAncestorAndDistance"]], "getancestorwithflags() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getAncestorWithFlags"]], "getarea() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getArea"]], "getatomicweight() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getAtomicWeight"]], "getaveragetempinc() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getAverageTempInC"]], "getboundingcircleouterdiameter() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.getBoundingCircleOuterDiameter"]], "getboundingindices() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getBoundingIndices"]], "getchildparamvalues() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getChildParamValues"]], "getchildren() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getChildren"]], "getchildren() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.getChildren"]], "getchildrenoftype() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.getChildrenOfType"]], "getchildrenwithflags() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getChildrenWithFlags"]], "getchildrenwithflags() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.getChildrenWithFlags"]], "getchildrenwithnuclides() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getChildrenWithNuclides"]], "getcomponent() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getComponent"]], "getcomponentbyname() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getComponentByName"]], "getcomponentnames() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getComponentNames"]], "getcomponents() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getComponents"]], "getcomponents() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.getComponents"]], "getcomponentsofmaterial() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getComponentsOfMaterial"]], "getcomponentsofshape() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getComponentsOfShape"]], "getdominantmaterial() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getDominantMaterial"]], "getdominantmaterial() (in module armi.reactor.composites)": [[309, "armi.reactor.composites.getDominantMaterial"]], "getfpmass() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getFPMass"]], "getfissilemass() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getFissileMass"]], "getfissilemassenrich() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getFissileMassEnrich"]], "getfuelmass() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getFuelMass"]], "gethmdens() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getHMDens"]], "gethmmass() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getHMMass"]], "gethmmoles() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getHMMoles"]], "getintegratedmgflux() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getIntegratedMgFlux"]], "getintegratedmgflux() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.getIntegratedMgFlux"]], "getlumpedfissionproductcollection() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getLumpedFissionProductCollection"]], "getlumpedfissionproductcollection() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.getLumpedFissionProductCollection"]], "getlumpedfissionproductsifnecessary() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.getLumpedFissionProductsIfNecessary"]], "getmass() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getMass"]], "getmassfrac() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getMassFrac"]], "getmassfracs() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getMassFracs"]], "getmasses() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getMasses"]], "getmaxarea() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getMaxArea"]], "getmaxparam() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getMaxParam"]], "getmgflux() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getMgFlux"]], "getmicrosuffix() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getMicroSuffix"]], "getminparam() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getMinParam"]], "getname() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getName"]], "getnuclidenumberdensities() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getNuclides"]], "getnumcomponents() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getNumComponents"]], "getnumberdensities() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getNumberDensities"]], "getnumberdensity() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getNumberDensity"]], "getnumberofatoms() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getNumberOfAtoms"]], "getparamnames() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getParamNames"]], "getparametercollection() (armi.reactor.composites.armiobject class method)": [[309, "armi.reactor.composites.ArmiObject.getParameterCollection"]], "getreactionratedict() (in module armi.reactor.composites)": [[309, "armi.reactor.composites.getReactionRateDict"]], "getreactionrates() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.getReactionRates"]], "getsymmetryfactor() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getSymmetryFactor"]], "gettotalndens() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getTotalNDens"]], "gettype() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getType"]], "geturaniumnumenrich() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getUraniumNumEnrich"]], "getvolume() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getVolume"]], "getvolumefraction() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getVolumeFraction"]], "getvolumefractions() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.getVolumeFractions"]], "hascomponents() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.hasComponents"]], "hasflags() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.hasFlags"]], "index() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.index"]], "insert() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.insert"]], "isfuel() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.isFuel"]], "itercomponents() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.iterComponents"]], "itercomponents() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.iterComponents"]], "moveto() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.moveTo"]], "namecontains() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.nameContains"]], "pdefs (armi.reactor.composites.armiobject attribute)": [[309, "armi.reactor.composites.ArmiObject.pDefs"]], "pack() (armi.reactor.composites.flagserializer static method)": [[309, "armi.reactor.composites.FlagSerializer.pack"]], "paramcollectiontype (armi.reactor.composites.armiobject attribute)": [[309, "armi.reactor.composites.ArmiObject.paramCollectionType"]], "paramcollectiontype (armi.reactor.composites.composite attribute)": [[309, "armi.reactor.composites.Composite.paramCollectionType"]], "printcontents() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.printContents"]], "remove() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.remove"]], "removeall() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.removeAll"]], "removemass() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.removeMass"]], "requireslumpedfissionproducts() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.requiresLumpedFissionProducts"]], "resolvelinkeddims() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.resolveLinkedDims"]], "restorebackup() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.restoreBackup"]], "retainstate() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.retainState"]], "setchildren() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.setChildren"]], "setchildrenlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.setChildrenLumpedFissionProducts"]], "setcomponentdimensionsreport() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.setComponentDimensionsReport"]], "setlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.setLumpedFissionProducts"]], "setmass() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.setMass"]], "setmassfrac() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.setMassFrac"]], "setmassfracs() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.setMassFracs"]], "setmasses() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.setMasses"]], "setname() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.setName"]], "setnumberdensities() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.setNumberDensities"]], "setnumberdensity() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.setNumberDensity"]], "settype() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.setType"]], "sort() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.sort"]], "syncmpistate() (armi.reactor.composites.composite method)": [[309, "armi.reactor.composites.Composite.syncMpiState"]], "unpack() (armi.reactor.composites.flagserializer class method)": [[309, "armi.reactor.composites.FlagSerializer.unpack"]], "updatenumberdensities() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.updateNumberDensities"]], "updateparamsfrom() (armi.reactor.composites.armiobject method)": [[309, "armi.reactor.composites.ArmiObject.updateParamsFrom"]], "version (armi.reactor.composites.flagserializer attribute)": [[309, "armi.reactor.composites.FlagSerializer.version"]], "armi.reactor.converters": [[310, "module-armi.reactor.converters"]], "armi.reactor.converters.axialexpansionchanger": [[311, "module-armi.reactor.converters.axialExpansionChanger"]], "assemblyaxiallinkage (class in armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage)": [[312, "armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage.AssemblyAxialLinkage"]], "armi.reactor.converters.axialexpansionchanger.assemblyaxiallinkage": [[312, "module-armi.reactor.converters.axialExpansionChanger.assemblyAxialLinkage"]], "axialexpansionchanger (class in armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[313, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger"]], "applycoldheightmassincrease() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[313, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.applyColdHeightMassIncrease"]], "armi.reactor.converters.axialexpansionchanger.axialexpansionchanger": [[313, "module-armi.reactor.converters.axialExpansionChanger.axialExpansionChanger"]], "axiallyexpandassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[313, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.axiallyExpandAssembly"]], "expandcolddimstohot() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger class method)": [[313, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.expandColdDimsToHot"]], "getdefaultreferenceassem() (in module armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[313, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.getDefaultReferenceAssem"]], "makeassemsabletosnaptouniformmesh() (in module armi.reactor.converters.axialexpansionchanger.axialexpansionchanger)": [[313, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.makeAssemsAbleToSnapToUniformMesh"]], "managecoremesh() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[313, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.manageCoreMesh"]], "performprescribedaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[313, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.performPrescribedAxialExpansion"]], "performthermalaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[313, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.performThermalAxialExpansion"]], "reset() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[313, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.reset"]], "setassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger.axialexpansionchanger method)": [[313, "armi.reactor.converters.axialExpansionChanger.axialExpansionChanger.AxialExpansionChanger.setAssembly"]], "expansiondata (class in armi.reactor.converters.axialexpansionchanger.expansiondata)": [[314, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData"]], "armi.reactor.converters.axialexpansionchanger.expansiondata": [[314, "module-armi.reactor.converters.axialExpansionChanger.expansionData"]], "computethermalexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[314, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.computeThermalExpansionFactors"]], "determinetargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[314, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.determineTargetComponent"]], "getexpansionfactor() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[314, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.getExpansionFactor"]], "getsolidcomponents() (in module armi.reactor.converters.axialexpansionchanger.expansiondata)": [[314, "armi.reactor.converters.axialExpansionChanger.expansionData.getSolidComponents"]], "istargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[314, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.isTargetComponent"]], "setexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[314, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.setExpansionFactors"]], "updatecomponenttemp() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[314, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.updateComponentTemp"]], "updatecomponenttempsby1dtempfield() (armi.reactor.converters.axialexpansionchanger.expansiondata.expansiondata method)": [[314, "armi.reactor.converters.axialExpansionChanger.expansionData.ExpansionData.updateComponentTempsBy1DTempField"]], "blockavgtocylconverter (class in armi.reactor.converters.blockconverters)": [[315, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter"]], "blockconverter (class in armi.reactor.converters.blockconverters)": [[315, "armi.reactor.converters.blockConverters.BlockConverter"]], "componentmerger (class in armi.reactor.converters.blockconverters)": [[315, "armi.reactor.converters.blockConverters.ComponentMerger"]], "hexcomponentstocylconverter (class in armi.reactor.converters.blockconverters)": [[315, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter"]], "multiplecomponentmerger (class in armi.reactor.converters.blockconverters)": [[315, "armi.reactor.converters.blockConverters.MultipleComponentMerger"]], "armi.reactor.converters.blockconverters": [[315, "module-armi.reactor.converters.blockConverters"]], "convert() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[315, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.blockconverter method)": [[315, "armi.reactor.converters.blockConverters.BlockConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.componentmerger method)": [[315, "armi.reactor.converters.blockConverters.ComponentMerger.convert"]], "convert() (armi.reactor.converters.blockconverters.hexcomponentstocylconverter method)": [[315, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.multiplecomponentmerger method)": [[315, "armi.reactor.converters.blockConverters.MultipleComponentMerger.convert"]], "dissolvecomponentintocomponent() (armi.reactor.converters.blockconverters.blockconverter method)": [[315, "armi.reactor.converters.blockConverters.BlockConverter.dissolveComponentIntoComponent"]], "getouterdiamfromidandarea() (in module armi.reactor.converters.blockconverters)": [[315, "armi.reactor.converters.blockConverters.getOuterDiamFromIDAndArea"]], "plotconvertedblock() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[315, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.plotConvertedBlock"]], "radiifromhexpitches() (in module armi.reactor.converters.blockconverters)": [[315, "armi.reactor.converters.blockConverters.radiiFromHexPitches"]], "radiifromhexsides() (in module armi.reactor.converters.blockconverters)": [[315, "armi.reactor.converters.blockConverters.radiiFromHexSides"]], "radiifromringofrods() (in module armi.reactor.converters.blockconverters)": [[315, "armi.reactor.converters.blockConverters.radiiFromRingOfRods"]], "restablishlinks() (armi.reactor.converters.blockconverters.blockconverter method)": [[315, "armi.reactor.converters.blockConverters.BlockConverter.restablishLinks"]], "expected_input_symmetry (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger attribute)": [[316, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.EXPECTED_INPUT_SYMMETRY"]], "edgeassemblychanger (class in armi.reactor.converters.geometryconverters)": [[316, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger"]], "fuelassemnummodifier (class in armi.reactor.converters.geometryconverters)": [[316, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier"]], "geometrychanger (class in armi.reactor.converters.geometryconverters)": [[316, "armi.reactor.converters.geometryConverters.GeometryChanger"]], "geometryconverter (class in armi.reactor.converters.geometryconverters)": [[316, "armi.reactor.converters.geometryConverters.GeometryConverter"]], "hextorzconverter (class in armi.reactor.converters.geometryconverters)": [[316, "armi.reactor.converters.geometryConverters.HexToRZConverter"]], "hextorzthetaconverter (class in armi.reactor.converters.geometryconverters)": [[316, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter"]], "thirdcorehextofullcorechanger (class in armi.reactor.converters.geometryconverters)": [[316, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger"]], "addedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[316, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.addEdgeAssemblies"]], "addring() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[316, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.addRing"]], "armi.reactor.converters.geometryconverters": [[316, "module-armi.reactor.converters.geometryConverters"]], "convert() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[316, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.convert"]], "convert() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[316, "armi.reactor.converters.geometryConverters.GeometryChanger.convert"]], "convert() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[316, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.convert"]], "convert() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[316, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.convert"]], "createhomogenizedrztblock() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[316, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.createHomogenizedRZTBlock"]], "plotconvertedreactor() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[316, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.plotConvertedReactor"]], "removeedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[316, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.removeEdgeAssemblies"]], "reset() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[316, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.reset"]], "reset() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[316, "armi.reactor.converters.geometryConverters.GeometryChanger.reset"]], "reset() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[316, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.reset"]], "restorepreviousgeometry() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[316, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.restorePreviousGeometry"]], "scaleparamsrelatedtosymmetry() (armi.reactor.converters.geometryconverters.edgeassemblychanger static method)": [[316, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.scaleParamsRelatedToSymmetry"]], "meshconverter (class in armi.reactor.converters.meshconverters)": [[317, "armi.reactor.converters.meshConverters.MeshConverter"]], "rzthetareactormeshconverter (class in armi.reactor.converters.meshconverters)": [[317, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter"]], "rzthetareactormeshconverterbyringcompositionaxialbins (class in armi.reactor.converters.meshconverters)": [[317, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialBins"]], "rzthetareactormeshconverterbyringcompositionaxialcoordinates (class in armi.reactor.converters.meshconverters)": [[317, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"]], "rzthetareactormeshconverterbyringcompositionaxialflags (class in armi.reactor.converters.meshconverters)": [[317, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialFlags"]], "armi.reactor.converters.meshconverters": [[317, "module-armi.reactor.converters.meshConverters"]], "checklastvalueinlist() (in module armi.reactor.converters.meshconverters)": [[317, "armi.reactor.converters.meshConverters.checkLastValueInList"]], "checklistbounds() (in module armi.reactor.converters.meshconverters)": [[317, "armi.reactor.converters.meshConverters.checkListBounds"]], "generatebins() (in module armi.reactor.converters.meshconverters)": [[317, "armi.reactor.converters.meshConverters.generateBins"]], "generatemesh() (armi.reactor.converters.meshconverters.meshconverter method)": [[317, "armi.reactor.converters.meshConverters.MeshConverter.generateMesh"]], "generatemesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[317, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.generateMesh"]], "setaxialmesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[317, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setAxialMesh"]], "setringstoconvert() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[317, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setRingsToConvert"]], "setthetamesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[317, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setThetaMesh"]], "writemeshdata() (armi.reactor.converters.meshconverters.meshconverter method)": [[317, "armi.reactor.converters.meshConverters.MeshConverter.writeMeshData"]], "writemeshdata() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[317, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.writeMeshData"]], "armi.reactor.converters.parametersweeps": [[318, "module-armi.reactor.converters.parameterSweeps"]], "custommodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[319, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier"]], "neutronicconvergencemodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[319, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier"]], "priority (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter attribute)": [[319, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.PRIORITY"]], "parametersweepconverter (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[319, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter"]], "settingsmodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[319, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier"]], "armi.reactor.converters.parametersweeps.generalparametersweepconverters": [[319, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.custommodifier method)": [[319, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.neutronicconvergencemodifier method)": [[319, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter method)": [[319, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.settingsmodifier method)": [[319, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier.convert"]], "adjustcladthicknessbyid() (in module armi.reactor.converters.pintypeblockconverters)": [[320, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByID"]], "adjustcladthicknessbyod() (in module armi.reactor.converters.pintypeblockconverters)": [[320, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByOD"]], "adjustsmeardensity() (in module armi.reactor.converters.pintypeblockconverters)": [[320, "armi.reactor.converters.pinTypeBlockConverters.adjustSmearDensity"]], "armi.reactor.converters.pintypeblockconverters": [[320, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests": [[321, "module-armi.reactor.converters.tests"]], "axialexpansiontestbase (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase"]], "fakemat (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat"]], "fakematexception (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException"]], "steel_component_lst (armi.reactor.converters.tests.test_axialexpansionchanger.axialexpansiontestbase attribute)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase.Steel_Component_Lst"]], "temperature (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.Temperature"]], "testaxialexpansionheight (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight"]], "testconservation (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation"]], "testdeterminetargetcomponent (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent"]], "testexceptions (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions"]], "testgetsolidcomponents (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents"]], "testinputheightsconsideredhot (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot"]], "testlinkage (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage"]], "testmanagecoremesh (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh"]], "armi.reactor.converters.tests.test_axialexpansionchanger": [[322, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "buildtestassemblywithfakematerial() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.buildTestAssemblyWithFakeMaterial"]], "checkcoldblockheight() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.checkColdBlockHeight"]], "checkcoldheightblockmass() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.checkColdHeightBlockMass"]], "complexconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.complexConservationTest"]], "expandassemformassconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.expandAssemForMassConservationTest"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.linearExpansionPercent"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.linearExpansionPercent"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat attribute)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.name"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception attribute)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.name"]], "runtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.runTest"]], "test_annularhexoverlappingthickannularhex() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_AnnularHexOverlappingThickAnnularHex"]], "test_assemblyaxialexpansionexception() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_AssemblyAxialExpansionException"]], "test_assemblyaxialexpansionheight() (armi.reactor.converters.tests.test_axialexpansionchanger.testaxialexpansionheight method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight.test_AssemblyAxialExpansionHeight"]], "test_annularpinnotoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_annularPinNotOverlappingWithAnnulus"]], "test_annularpinoverlappingwithannuls() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_annularPinOverlappingWithAnnuls"]], "test_coldassemblyexpansion() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.test_coldAssemblyExpansion"]], "test_computethermalexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_computeThermalExpansionFactors"]], "test_determinelinked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_determineLinked"]], "test_determinetargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponent"]], "test_determinetargetcomponentblockwithmultipleflags() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponentBlockWithMultipleFlags"]], "test_differentmultnotoverlapping() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_differentMultNotOverlapping"]], "test_getlinkedcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_getLinkedComponents"]], "test_getsolidcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testgetsolidcomponents method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents.test_getSolidComponents"]], "test_isfuellocked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isFuelLocked"]], "test_istopdummyblockpresent() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isTopDummyBlockPresent"]], "test_liquids() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_liquids"]], "test_managecoremesh() (armi.reactor.converters.tests.test_axialexpansionchanger.testmanagecoremesh method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh.test_manageCoreMesh"]], "test_manuallysettargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_manuallySetTargetComponent"]], "test_nomovementaclp() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_noMovementACLP"]], "test_overlappingsolidpins() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_overlappingSolidPins"]], "test_prescribedexpansioncontractionconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_prescribedExpansionContractionConservation"]], "test_reset() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_reset"]], "test_setexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_setExpansionFactors"]], "test_solidpinnotoverlappingannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_solidPinNotOverlappingAnnulus"]], "test_solidpinoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_solidPinOverlappingWithAnnulus"]], "test_specifytargetcomponent_notfound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_NotFound"]], "test_specifytargetcomponent_singlesolid() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_singleSolid"]], "test_specifytargetcomponet_multiplefound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponet_MultipleFound"]], "test_targetcomponentmassconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_targetComponentMassConservation"]], "test_thermalexpansioncontractionconservation_complex() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_complex"]], "test_thermalexpansioncontractionconservation_simple() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_simple"]], "test_thinannularpinoverlappingwiththickannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_thinAnnularPinOverlappingWithThickAnnulus"]], "test_unshapedcomponentandcircle() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_unshapedComponentAndCircle"]], "test_updatecomponenttempsby1dtempfieldruntimeerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldRuntimeError"]], "test_updatecomponenttempsby1dtempfieldvalueerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[322, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldValueError"]], "testblockconverter (class in armi.reactor.converters.tests.test_blockconverter)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter"]], "testtocircles (class in armi.reactor.converters.tests.test_blockconverter)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestToCircles"]], "armi.reactor.converters.tests.test_blockconverter": [[323, "module-armi.reactor.converters.tests.test_blockConverter"]], "buildcontrolblockwithlinkednegativeareacomponent() (in module armi.reactor.converters.tests.test_blockconverter)": [[323, "armi.reactor.converters.tests.test_blockConverter.buildControlBlockWithLinkedNegativeAreaComponent"]], "buildsimplefuelblocknegativearea() (in module armi.reactor.converters.tests.test_blockconverter)": [[323, "armi.reactor.converters.tests.test_blockConverter.buildSimpleFuelBlockNegativeArea"]], "test_build_nthring() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_build_NthRing"]], "test_convert() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convert"]], "test_convertcartesianlatticewithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertCartesianLatticeWithFuelDriver"]], "test_converthexwithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriver"]], "test_converthexwithfueldriveronnegativecomponentareablock() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"]], "test_dissolveintonegativearea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveIntoNegativeArea"]], "test_dissolveintozeroarea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveIntoZeroArea"]], "test_dissolvelinerintoclad() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveLinerIntoClad"]], "test_dissolvemultiple() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveMultiple"]], "test_dissolvenegativearea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveNegativeArea"]], "test_dissolvewireintocoolant() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveWireIntoCoolant"]], "test_dissolvezeroarea() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveZeroArea"]], "test_fromhex() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromHex"]], "test_fromringofrods() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[323, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromRingOfRods"]], "testedgeassemblychanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger"]], "testgeometryconverters (class in armi.reactor.converters.tests.test_geometryconverters)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters"]], "testhextorzconverter (class in armi.reactor.converters.tests.test_geometryconverters)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter"]], "testthirdcorehextofullcorechanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryconverters": [[324, "module-armi.reactor.converters.tests.test_geometryConverters"]], "test_addring() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_addRing"]], "test_convert() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_convert"]], "test_createhomogenizedrztblock() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_createHomogenizedRZTBlock"]], "test_edgeassemblies() (armi.reactor.converters.tests.test_geometryconverters.testedgeassemblychanger method)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger.test_edgeAssemblies"]], "test_getassembliesinsector() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_getAssembliesInSector"]], "test_growtofullcorefromthirdcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_growToFullCoreFromThirdCore"]], "test_initnewfullreactor() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_initNewFullReactor"]], "test_setnumberoffuelassems() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_setNumberOfFuelAssems"]], "test_skipgrowtofullcorewhenalreadyfullcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[324, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_skipGrowToFullCoreWhenAlreadyFullCore"]], "testrzreactormeshconverter (class in armi.reactor.converters.tests.test_meshconverters)": [[325, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshconverters": [[325, "module-armi.reactor.converters.tests.test_meshConverters"]], "test_meshbyringcompositionaxialbinslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[325, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsLargeCore"]], "test_meshbyringcompositionaxialbinssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[325, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsSmallCore"]], "test_meshbyringcompositionaxialcoordinateslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[325, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesLargeCore"]], "test_meshbyringcompositionaxialcoordinatessmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[325, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesSmallCore"]], "test_meshbyringcompositionaxialflagslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[325, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsLargeCore"]], "test_meshbyringcompositionaxialflagssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[325, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsSmallCore"]], "massconservationtests (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[326, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests"]], "testpintypeconverters (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[326, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pintypeblockconverters": [[326, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "test_adjustcladthicknessbyid() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[326, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByID"]], "test_adjustcladthicknessbyod() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[326, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByOD"]], "test_adjustsmeardensity() (armi.reactor.converters.tests.test_pintypeblockconverters.massconservationtests method)": [[326, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests.test_adjustSmearDensity"]], "dummyfluxoptions (class in armi.reactor.converters.tests.test_uniformmesh)": [[327, "armi.reactor.converters.tests.test_uniformMesh.DummyFluxOptions"]], "testassemblyuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh"]], "testconverterfactory (class in armi.reactor.converters.tests.test_uniformmesh)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory"]], "testgammauniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh"]], "testparamconversion (class in armi.reactor.converters.tests.test_uniformmesh)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion"]], "testuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh"]], "testuniformmeshcomponents (class in armi.reactor.converters.tests.test_uniformmesh)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents"]], "testuniformmeshgenerator (class in armi.reactor.converters.tests.test_uniformmesh)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator"]], "testuniformmeshnonuniformassemflags (class in armi.reactor.converters.tests.test_uniformmesh)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags"]], "applynonuniformheightdistribution() (in module armi.reactor.converters.tests.test_uniformmesh)": [[327, "armi.reactor.converters.tests.test_uniformMesh.applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformmesh": [[327, "module-armi.reactor.converters.tests.test_uniformMesh"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_applyStateToOriginal"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_applyStateToOriginal"]], "test_blueprintcopy() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshcomponents method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents.test_blueprintCopy"]], "test_clearassemblystate() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_clearAssemblyState"]], "test_computeaverageaxialmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_computeAverageAxialMesh"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_convertNumberDensities"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_convertNumberDensities"]], "test_converterfactory() (armi.reactor.converters.tests.test_uniformmesh.testconverterfactory method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory.test_converterFactory"]], "test_filtermesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filterMesh"]], "test_filteredtopandbottom() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filteredTopAndBottom"]], "test_generatecommonmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_generateCommonMesh"]], "test_makeassemuniformmeshparammappingsamemesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemUniformMeshParamMappingSameMesh"]], "test_makeassemwithuniformmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMesh"]], "test_makeassemwithuniformmeshsubmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMeshSubmesh"]], "test_reactorconversion() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshnonuniformassemflags method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags.test_reactorConversion"]], "test_setstatefromoverlaps() (armi.reactor.converters.tests.test_uniformmesh.testparamconversion method)": [[327, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion.test_setStateFromOverlaps"]], "gammauniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[328, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter"]], "neutronicsuniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[328, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter"]], "parammapper (class in armi.reactor.converters.uniformmesh)": [[328, "armi.reactor.converters.uniformMesh.ParamMapper"]], "uniformmeshgenerator (class in armi.reactor.converters.uniformmesh)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGenerator"]], "uniformmeshgeometryconverter (class in armi.reactor.converters.uniformmesh)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter"]], "applystatetooriginal() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.applyStateToOriginal"]], "armi.reactor.converters.uniformmesh": [[328, "module-armi.reactor.converters.uniformMesh"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[328, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[328, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.blockParamMappingCategories"]], "clearstateonassemblies() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.clearStateOnAssemblies"]], "convert() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.convert"]], "converterfactory() (in module armi.reactor.converters.uniformmesh)": [[328, "armi.reactor.converters.uniformMesh.converterFactory"]], "generatecommonmesh() (armi.reactor.converters.uniformmesh.uniformmeshgenerator method)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGenerator.generateCommonMesh"]], "initnewreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.initNewReactor"]], "makeassemwithuniformmesh() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.makeAssemWithUniformMesh"]], "paramgetter() (armi.reactor.converters.uniformmesh.parammapper method)": [[328, "armi.reactor.converters.uniformMesh.ParamMapper.paramGetter"]], "paramsetter() (armi.reactor.converters.uniformmesh.parammapper static method)": [[328, "armi.reactor.converters.uniformMesh.ParamMapper.paramSetter"]], "plotconvertedreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.plotConvertedReactor"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[328, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[328, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reactorParamMappingCategories"]], "reset() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reset"]], "setassemblystatefromoverlaps() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.setAssemblyStateFromOverlaps"]], "setnumberdensitiesfromoverlaps() (in module armi.reactor.converters.uniformmesh)": [[328, "armi.reactor.converters.uniformMesh.setNumberDensitiesFromOverlaps"]], "updatereactionrates() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[328, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.updateReactionRates"]], "core (class in armi.reactor.cores)": [[329, "armi.reactor.cores.Core"]], "add() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.add"]], "addmorenodes() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.addMoreNodes"]], "armi.reactor.cores": [[329, "module-armi.reactor.cores"]], "buildcircularringdictionary() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.buildCircularRingDictionary"]], "buildmanualzones() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.buildManualZones"]], "calcblockmaxes() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.calcBlockMaxes"]], "countblockswithflags() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.countBlocksWithFlags"]], "countfuelaxialblocks() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.countFuelAxialBlocks"]], "createassemblyoftype() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.createAssemblyOfType"]], "createfreshfeed() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.createFreshFeed"]], "findallaxialmeshpoints() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.findAllAxialMeshPoints"]], "findallazimeshpoints() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.findAllAziMeshPoints"]], "findallmeshpoints() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.findAllMeshPoints"]], "findallradmeshpoints() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.findAllRadMeshPoints"]], "findaxialmeshindexof() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.findAxialMeshIndexOf"]], "findneighbors() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.findNeighbors"]], "genassembliesaddedthiscycle() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.genAssembliesAddedThisCycle"]], "genblocksbylocname() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.genBlocksByLocName"]], "geomtype (armi.reactor.cores.core property)": [[329, "armi.reactor.cores.Core.geomType"]], "getallxssuffixes() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAllXsSuffixes"]], "getassemblies() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAssemblies"]], "getassembliesincircularring() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAssembliesInCircularRing"]], "getassembliesinring() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAssembliesInRing"]], "getassembliesinsquareorhexring() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAssembliesInSquareOrHexRing"]], "getassembliesoftype() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAssembliesOfType"]], "getassembliesonsymmetryline() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAssembliesOnSymmetryLine"]], "getassembly() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAssembly"]], "getassemblybyname() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAssemblyByName"]], "getassemblypitch() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAssemblyPitch"]], "getassemblywithassemnum() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAssemblyWithAssemNum"]], "getassemblywithstringlocation() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAssemblyWithStringLocation"]], "getavgtemp() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getAvgTemp"]], "getblockbyname() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getBlockByName"]], "getblocks() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getBlocks"]], "getblocksbyindices() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getBlocksByIndices"]], "getcoreradius() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getCoreRadius"]], "getfirstassembly() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getFirstAssembly"]], "getfirstblock() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getFirstBlock"]], "getfirstfuelblockaxialnode() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getFirstFuelBlockAxialNode"]], "getfluxvector() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getFluxVector"]], "getfuelbottomheight() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getFuelBottomHeight"]], "getlocationcontents() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getLocationContents"]], "getmaxassembliesinhexring() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getMaxAssembliesInHexRing"]], "getmaxblockparam() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getMaxBlockParam"]], "getmaxnumpins() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getMaxNumPins"]], "getminimumpercentfluxinfuel() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getMinimumPercentFluxInFuel"]], "getnozzletypes() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getNozzleTypes"]], "getnuclidecategories() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getNuclideCategories"]], "getnumassemblieswithallringsfilledout() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getNumAssembliesWithAllRingsFilledOut"]], "getnumenergygroups() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getNumEnergyGroups"]], "getnumhexrings() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getNumHexRings"]], "getnumrings() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getNumRings"]], "getscalarevolution() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getScalarEvolution"]], "gettotalblockparam() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.getTotalBlockParam"]], "growtofullcore() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.growToFullCore"]], "isfullcore (armi.reactor.cores.core property)": [[329, "armi.reactor.cores.Core.isFullCore"]], "lib (armi.reactor.cores.core property)": [[329, "armi.reactor.cores.Core.lib"]], "locateallassemblies() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.locateAllAssemblies"]], "makelocationlookup() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.makeLocationLookup"]], "normalizeinternalbookeeping() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.normalizeInternalBookeeping"]], "normalizenames() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.normalizeNames"]], "pdefs (armi.reactor.cores.core attribute)": [[329, "armi.reactor.cores.Core.pDefs"]], "paramcollectiontype (armi.reactor.cores.core attribute)": [[329, "armi.reactor.cores.Core.paramCollectionType"]], "powermultiplier (armi.reactor.cores.core property)": [[329, "armi.reactor.cores.Core.powerMultiplier"]], "processloading() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.processLoading"]], "r (armi.reactor.cores.core property)": [[329, "armi.reactor.cores.Core.r"]], "refassem (armi.reactor.cores.core property)": [[329, "armi.reactor.cores.Core.refAssem"]], "regenassemblylists() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.regenAssemblyLists"]], "removeassembliesinring() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.removeAssembliesInRing"]], "removeassembly() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.removeAssembly"]], "saveallflux() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.saveAllFlux"]], "setblockmassparams() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.setBlockMassParams"]], "setmovelist() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.setMoveList"]], "setoptionsfromcs() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.setOptionsFromCs"]], "setpitchuniform() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.setPitchUniform"]], "setpowerfromdensity() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.setPowerFromDensity"]], "setpowerifnecessary() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.setPowerIfNecessary"]], "sortassemsbyring() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.sortAssemsByRing"]], "summarizenuclidecategories() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.summarizeNuclideCategories"]], "summarizereactorstats() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.summarizeReactorStats"]], "symmetry (armi.reactor.cores.core property)": [[329, "armi.reactor.cores.Core.symmetry"]], "updateaxialmesh() (armi.reactor.cores.core method)": [[329, "armi.reactor.cores.Core.updateAxialMesh"]], "excorecollection (class in armi.reactor.excorestructure)": [[330, "armi.reactor.excoreStructure.ExcoreCollection"]], "excorestructure (class in armi.reactor.excorestructure)": [[330, "armi.reactor.excoreStructure.ExcoreStructure"]], "add() (armi.reactor.excorestructure.excorestructure method)": [[330, "armi.reactor.excoreStructure.ExcoreStructure.add"]], "armi.reactor.excorestructure": [[330, "module-armi.reactor.excoreStructure"]], "paramcollectiontype (armi.reactor.excorestructure.excorestructure attribute)": [[330, "armi.reactor.excoreStructure.ExcoreStructure.paramCollectionType"]], "r (armi.reactor.excorestructure.excorestructure property)": [[330, "armi.reactor.excoreStructure.ExcoreStructure.r"]], "a (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.A"]], "aclp (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.ACLP"]], "annular (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.ANNULAR"]], "axial (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.AXIAL"]], "b (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.B"]], "batchmassaddition (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.BATCHMASSADDITION"]], "blanket (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.BLANKET"]], "bond (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.BOND"]], "booster (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.BOOSTER"]], "c (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.C"]], "clad (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.CLAD"]], "control (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.CONTROL"]], "coolant (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.COOLANT"]], "core_barrel (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.CORE_BARREL"]], "d (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.D"]], "depletable (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.DEPLETABLE"]], "driver (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.DRIVER"]], "dspacerinside (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.DSPACERINSIDE"]], "duct (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.DUCT"]], "dummy (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.DUMMY"]], "e (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.E"]], "feed (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.FEED"]], "fission_chamber (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.FISSION_CHAMBER"]], "fuel (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.FUEL"]], "flags (class in armi.reactor.flags)": [[331, "armi.reactor.flags.Flags"]], "gap (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.GAP"]], "grid_plate (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.GRID_PLATE"]], "guide_tube (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.GUIDE_TUBE"]], "handling_socket (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.HANDLING_SOCKET"]], "high (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.HIGH"]], "igniter (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.IGNITER"]], "inlet_nozzle (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.INLET_NOZZLE"]], "inner (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.INNER"]], "intercoolant (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.INTERCOOLANT"]], "interductcoolant (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.INTERDUCTCOOLANT"]], "invalidflagserror": [[331, "armi.reactor.flags.InvalidFlagsError"]], "liner (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.LINER"]], "load_pad (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.LOAD_PAD"]], "low (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.LOW"]], "lower (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.LOWER"]], "material (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.MATERIAL"]], "medium (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.MEDIUM"]], "middle (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.MIDDLE"]], "moderator (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.MODERATOR"]], "moveable (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.MOVEABLE"]], "mox (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.MOX"]], "outer (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.OUTER"]], "pin (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.PIN"]], "plenum (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.PLENUM"]], "poison (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.POISON"]], "primary (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.PRIMARY"]], "radial (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.RADIAL"]], "reflector (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.REFLECTOR"]], "secondary (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.SECONDARY"]], "shield (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.SHIELD"]], "shield_block (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.SHIELD_BLOCK"]], "shutdown (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.SHUTDOWN"]], "skid (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.SKID"]], "slug (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.SLUG"]], "starter (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.STARTER"]], "structure (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.STRUCTURE"]], "target (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.TARGET"]], "tertiary (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.TERTIARY"]], "test (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.TEST"]], "ultimate (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.ULTIMATE"]], "upper (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.UPPER"]], "void (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.VOID"]], "wire (armi.reactor.flags.flags attribute)": [[331, "armi.reactor.flags.Flags.WIRE"]], "armi.reactor.flags": [[331, "module-armi.reactor.flags"]], "fromstring() (armi.reactor.flags.flags class method)": [[331, "armi.reactor.flags.Flags.fromString"]], "fromstringignoreerrors() (armi.reactor.flags.flags class method)": [[331, "armi.reactor.flags.Flags.fromStringIgnoreErrors"]], "tostring() (armi.reactor.flags.flags class method)": [[331, "armi.reactor.flags.Flags.toString"]], "boundarytype (class in armi.reactor.geometry)": [[332, "armi.reactor.geometry.BoundaryType"]], "cartesian (armi.reactor.geometry.geomtype attribute)": [[332, "armi.reactor.geometry.GeomType.CARTESIAN"]], "domaintype (class in armi.reactor.geometry)": [[332, "armi.reactor.geometry.DomainType"]], "eighth_core (armi.reactor.geometry.domaintype attribute)": [[332, "armi.reactor.geometry.DomainType.EIGHTH_CORE"]], "full_core (armi.reactor.geometry.domaintype attribute)": [[332, "armi.reactor.geometry.DomainType.FULL_CORE"]], "geomtype (class in armi.reactor.geometry)": [[332, "armi.reactor.geometry.GeomType"]], "hex (armi.reactor.geometry.geomtype attribute)": [[332, "armi.reactor.geometry.GeomType.HEX"]], "no_symmetry (armi.reactor.geometry.boundarytype attribute)": [[332, "armi.reactor.geometry.BoundaryType.NO_SYMMETRY"]], "null (armi.reactor.geometry.domaintype attribute)": [[332, "armi.reactor.geometry.DomainType.NULL"]], "periodic (armi.reactor.geometry.boundarytype attribute)": [[332, "armi.reactor.geometry.BoundaryType.PERIODIC"]], "quarter_core (armi.reactor.geometry.domaintype attribute)": [[332, "armi.reactor.geometry.DomainType.QUARTER_CORE"]], "reflective (armi.reactor.geometry.boundarytype attribute)": [[332, "armi.reactor.geometry.BoundaryType.REFLECTIVE"]], "rz (armi.reactor.geometry.geomtype attribute)": [[332, "armi.reactor.geometry.GeomType.RZ"]], "rzt (armi.reactor.geometry.geomtype attribute)": [[332, "armi.reactor.geometry.GeomType.RZT"]], "sixteenth_core (armi.reactor.geometry.domaintype attribute)": [[332, "armi.reactor.geometry.DomainType.SIXTEENTH_CORE"]], "symmetrytype (class in armi.reactor.geometry)": [[332, "armi.reactor.geometry.SymmetryType"]], "third_core (armi.reactor.geometry.domaintype attribute)": [[332, "armi.reactor.geometry.DomainType.THIRD_CORE"]], "valid_symmetry (armi.reactor.geometry.symmetrytype attribute)": [[332, "armi.reactor.geometry.SymmetryType.VALID_SYMMETRY"]], "armi.reactor.geometry": [[332, "module-armi.reactor.geometry"]], "checkvalidgeomsymmetrycombo() (in module armi.reactor.geometry)": [[332, "armi.reactor.geometry.checkValidGeomSymmetryCombo"]], "checkvalidsymmetry() (armi.reactor.geometry.symmetrytype method)": [[332, "armi.reactor.geometry.SymmetryType.checkValidSymmetry"]], "createvalidsymmetrystrings() (armi.reactor.geometry.symmetrytype class method)": [[332, "armi.reactor.geometry.SymmetryType.createValidSymmetryStrings"]], "fromany() (armi.reactor.geometry.boundarytype class method)": [[332, "armi.reactor.geometry.BoundaryType.fromAny"]], "fromany() (armi.reactor.geometry.domaintype class method)": [[332, "armi.reactor.geometry.DomainType.fromAny"]], "fromany() (armi.reactor.geometry.geomtype class method)": [[332, "armi.reactor.geometry.GeomType.fromAny"]], "fromany() (armi.reactor.geometry.symmetrytype class method)": [[332, "armi.reactor.geometry.SymmetryType.fromAny"]], "fromstr() (armi.reactor.geometry.boundarytype class method)": [[332, "armi.reactor.geometry.BoundaryType.fromStr"]], "fromstr() (armi.reactor.geometry.domaintype class method)": [[332, "armi.reactor.geometry.DomainType.fromStr"]], "fromstr() (armi.reactor.geometry.geomtype class method)": [[332, "armi.reactor.geometry.GeomType.fromStr"]], "fromstr() (armi.reactor.geometry.symmetrytype class method)": [[332, "armi.reactor.geometry.SymmetryType.fromStr"]], "hassymmetry() (armi.reactor.geometry.boundarytype method)": [[332, "armi.reactor.geometry.BoundaryType.hasSymmetry"]], "label (armi.reactor.geometry.boundarytype property)": [[332, "armi.reactor.geometry.BoundaryType.label"]], "label (armi.reactor.geometry.domaintype property)": [[332, "armi.reactor.geometry.DomainType.label"]], "label (armi.reactor.geometry.geomtype property)": [[332, "armi.reactor.geometry.GeomType.label"]], "symmetryfactor() (armi.reactor.geometry.domaintype method)": [[332, "armi.reactor.geometry.DomainType.symmetryFactor"]], "symmetryfactor() (armi.reactor.geometry.symmetrytype method)": [[332, "armi.reactor.geometry.SymmetryType.symmetryFactor"]], "armi.reactor.grids": [[333, "module-armi.reactor.grids"]], "locatorlabeltoindices() (in module armi.reactor.grids)": [[333, "armi.reactor.grids.locatorLabelToIndices"]], "axialgrid (class in armi.reactor.grids.axial)": [[334, "armi.reactor.grids.axial.AxialGrid"]], "armi.reactor.grids.axial": [[334, "module-armi.reactor.grids.axial"]], "armiobject (armi.reactor.grids.axial.axialgrid attribute)": [[334, "armi.reactor.grids.axial.AxialGrid.armiObject"]], "fromncells() (armi.reactor.grids.axial.axialgrid class method)": [[334, "armi.reactor.grids.axial.AxialGrid.fromNCells"]], "getindicesfromringandpos() (armi.reactor.grids.axial.axialgrid static method)": [[334, "armi.reactor.grids.axial.AxialGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.axial.axialgrid static method)": [[334, "armi.reactor.grids.axial.AxialGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.axial.axialgrid static method)": [[334, "armi.reactor.grids.axial.AxialGrid.getPositionsInRing"]], "getsymmetricequivalents() (armi.reactor.grids.axial.axialgrid static method)": [[334, "armi.reactor.grids.axial.AxialGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.axial.axialgrid static method)": [[334, "armi.reactor.grids.axial.AxialGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.axial.axialgrid static method)": [[334, "armi.reactor.grids.axial.AxialGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.axial.axialgrid property)": [[334, "armi.reactor.grids.axial.AxialGrid.pitch"]], "cartesiangrid (class in armi.reactor.grids.cartesian)": [[335, "armi.reactor.grids.cartesian.CartesianGrid"]], "armi.reactor.grids.cartesian": [[335, "module-armi.reactor.grids.cartesian"]], "armiobject (armi.reactor.grids.cartesian.cartesiangrid attribute)": [[335, "armi.reactor.grids.cartesian.CartesianGrid.armiObject"]], "changepitch() (armi.reactor.grids.cartesian.cartesiangrid method)": [[335, "armi.reactor.grids.cartesian.CartesianGrid.changePitch"]], "fromrectangle() (armi.reactor.grids.cartesian.cartesiangrid class method)": [[335, "armi.reactor.grids.cartesian.CartesianGrid.fromRectangle"]], "getindicesfromringandpos() (armi.reactor.grids.cartesian.cartesiangrid static method)": [[335, "armi.reactor.grids.cartesian.CartesianGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.cartesian.cartesiangrid method)": [[335, "armi.reactor.grids.cartesian.CartesianGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.cartesian.cartesiangrid method)": [[335, "armi.reactor.grids.cartesian.CartesianGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.cartesian.cartesiangrid method)": [[335, "armi.reactor.grids.cartesian.CartesianGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.cartesian.cartesiangrid method)": [[335, "armi.reactor.grids.cartesian.CartesianGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.cartesian.cartesiangrid method)": [[335, "armi.reactor.grids.cartesian.CartesianGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.cartesian.cartesiangrid method)": [[335, "armi.reactor.grids.cartesian.CartesianGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.cartesian.cartesiangrid property)": [[335, "armi.reactor.grids.cartesian.CartesianGrid.pitch"]], "armi.reactor.grids.constants": [[336, "module-armi.reactor.grids.constants"]], "grid (class in armi.reactor.grids.grid)": [[337, "armi.reactor.grids.grid.Grid"]], "armi.reactor.grids.grid": [[337, "module-armi.reactor.grids.grid"]], "armiobject (armi.reactor.grids.grid.grid attribute)": [[337, "armi.reactor.grids.grid.Grid.armiObject"]], "backup() (armi.reactor.grids.grid.grid method)": [[337, "armi.reactor.grids.grid.Grid.backUp"]], "geomtype (armi.reactor.grids.grid.grid property)": [[337, "armi.reactor.grids.grid.Grid.geomType"]], "getcellbase() (armi.reactor.grids.grid.grid method)": [[337, "armi.reactor.grids.grid.Grid.getCellBase"]], "getcelltop() (armi.reactor.grids.grid.grid method)": [[337, "armi.reactor.grids.grid.Grid.getCellTop"]], "getcoordinates() (armi.reactor.grids.grid.grid method)": [[337, "armi.reactor.grids.grid.Grid.getCoordinates"]], "getlabel() (armi.reactor.grids.grid.grid static method)": [[337, "armi.reactor.grids.grid.Grid.getLabel"]], "getsymmetricequivalents() (armi.reactor.grids.grid.grid method)": [[337, "armi.reactor.grids.grid.Grid.getSymmetricEquivalents"]], "isaxialonly (armi.reactor.grids.grid.grid property)": [[337, "armi.reactor.grids.grid.Grid.isAxialOnly"]], "items() (armi.reactor.grids.grid.grid method)": [[337, "armi.reactor.grids.grid.Grid.items"]], "locatorindomain() (armi.reactor.grids.grid.grid method)": [[337, "armi.reactor.grids.grid.Grid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.grid.grid method)": [[337, "armi.reactor.grids.grid.Grid.overlapsWhichSymmetryLine"]], "reduce() (armi.reactor.grids.grid.grid method)": [[337, "armi.reactor.grids.grid.Grid.reduce"]], "restorebackup() (armi.reactor.grids.grid.grid method)": [[337, "armi.reactor.grids.grid.Grid.restoreBackup"]], "symmetry (armi.reactor.grids.grid.grid property)": [[337, "armi.reactor.grids.grid.Grid.symmetry"]], "hexgrid (class in armi.reactor.grids.hexagonal)": [[338, "armi.reactor.grids.hexagonal.HexGrid"]], "armi.reactor.grids.hexagonal": [[338, "module-armi.reactor.grids.hexagonal"]], "armiobject (armi.reactor.grids.hexagonal.hexgrid attribute)": [[338, "armi.reactor.grids.hexagonal.HexGrid.armiObject"]], "changepitch() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.changePitch"]], "cornersup (armi.reactor.grids.hexagonal.hexgrid property)": [[338, "armi.reactor.grids.hexagonal.HexGrid.cornersUp"]], "frompitch() (armi.reactor.grids.hexagonal.hexgrid static method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.fromPitch"]], "generatesortedhexlocationlist() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.generateSortedHexLocationList"]], "getindicesfromringandpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.getIndicesFromRingAndPos"]], "getlabel() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.getLabel"]], "getminimumrings() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.getSymmetricEquivalents"]], "indicestoringpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.indicesToRingPos"]], "isinfirstthird() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.isInFirstThird"]], "locatorindomain() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.hexagonal.hexgrid property)": [[338, "armi.reactor.grids.hexagonal.HexGrid.pitch"]], "trianglecoords() (armi.reactor.grids.hexagonal.hexgrid method)": [[338, "armi.reactor.grids.hexagonal.HexGrid.triangleCoords"]], "coordinatelocation (class in armi.reactor.grids.locations)": [[339, "armi.reactor.grids.locations.CoordinateLocation"]], "indexlocation (class in armi.reactor.grids.locations)": [[339, "armi.reactor.grids.locations.IndexLocation"]], "locationbase (class in armi.reactor.grids.locations)": [[339, "armi.reactor.grids.locations.LocationBase"]], "multiindexlocation (class in armi.reactor.grids.locations)": [[339, "armi.reactor.grids.locations.MultiIndexLocation"]], "addingisvalid() (in module armi.reactor.grids.locations)": [[339, "armi.reactor.grids.locations.addingIsValid"]], "append() (armi.reactor.grids.locations.multiindexlocation method)": [[339, "armi.reactor.grids.locations.MultiIndexLocation.append"]], "armi.reactor.grids.locations": [[339, "module-armi.reactor.grids.locations"]], "associate() (armi.reactor.grids.locations.locationbase method)": [[339, "armi.reactor.grids.locations.LocationBase.associate"]], "associate() (armi.reactor.grids.locations.multiindexlocation method)": [[339, "armi.reactor.grids.locations.MultiIndexLocation.associate"]], "detachedcopy() (armi.reactor.grids.locations.indexlocation method)": [[339, "armi.reactor.grids.locations.IndexLocation.detachedCopy"]], "detachedcopy() (armi.reactor.grids.locations.multiindexlocation method)": [[339, "armi.reactor.grids.locations.MultiIndexLocation.detachedCopy"]], "distanceto() (armi.reactor.grids.locations.indexlocation method)": [[339, "armi.reactor.grids.locations.IndexLocation.distanceTo"]], "extend() (armi.reactor.grids.locations.multiindexlocation method)": [[339, "armi.reactor.grids.locations.MultiIndexLocation.extend"]], "getcompleteindices() (armi.reactor.grids.locations.coordinatelocation method)": [[339, "armi.reactor.grids.locations.CoordinateLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.indexlocation method)": [[339, "armi.reactor.grids.locations.IndexLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.multiindexlocation method)": [[339, "armi.reactor.grids.locations.MultiIndexLocation.getCompleteIndices"]], "getglobalcellbase() (armi.reactor.grids.locations.coordinatelocation method)": [[339, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellBase"]], "getglobalcellbase() (armi.reactor.grids.locations.indexlocation method)": [[339, "armi.reactor.grids.locations.IndexLocation.getGlobalCellBase"]], "getglobalcelltop() (armi.reactor.grids.locations.coordinatelocation method)": [[339, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellTop"]], "getglobalcelltop() (armi.reactor.grids.locations.indexlocation method)": [[339, "armi.reactor.grids.locations.IndexLocation.getGlobalCellTop"]], "getglobalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[339, "armi.reactor.grids.locations.IndexLocation.getGlobalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.coordinatelocation method)": [[339, "armi.reactor.grids.locations.CoordinateLocation.getLocalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[339, "armi.reactor.grids.locations.IndexLocation.getLocalCoordinates"]], "getringpos() (armi.reactor.grids.locations.indexlocation method)": [[339, "armi.reactor.grids.locations.IndexLocation.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.locations.indexlocation method)": [[339, "armi.reactor.grids.locations.IndexLocation.getSymmetricEquivalents"]], "grid (armi.reactor.grids.locations.locationbase property)": [[339, "armi.reactor.grids.locations.LocationBase.grid"]], "i (armi.reactor.grids.locations.locationbase property)": [[339, "armi.reactor.grids.locations.LocationBase.i"]], "indices (armi.reactor.grids.locations.indexlocation property)": [[339, "armi.reactor.grids.locations.IndexLocation.indices"]], "indices (armi.reactor.grids.locations.locationbase property)": [[339, "armi.reactor.grids.locations.LocationBase.indices"]], "indices (armi.reactor.grids.locations.multiindexlocation property)": [[339, "armi.reactor.grids.locations.MultiIndexLocation.indices"]], "j (armi.reactor.grids.locations.locationbase property)": [[339, "armi.reactor.grids.locations.LocationBase.j"]], "k (armi.reactor.grids.locations.locationbase property)": [[339, "armi.reactor.grids.locations.LocationBase.k"]], "parentlocation (armi.reactor.grids.locations.indexlocation property)": [[339, "armi.reactor.grids.locations.IndexLocation.parentLocation"]], "pop() (armi.reactor.grids.locations.multiindexlocation method)": [[339, "armi.reactor.grids.locations.MultiIndexLocation.pop"]], "gridparameters (class in armi.reactor.grids.structuredgrid)": [[340, "armi.reactor.grids.structuredGrid.GridParameters"]], "structuredgrid (class in armi.reactor.grids.structuredgrid)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid"]], "armi.reactor.grids.structuredgrid": [[340, "module-armi.reactor.grids.structuredGrid"]], "armiobject (armi.reactor.grids.structuredgrid.structuredgrid attribute)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.armiObject"]], "backup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.backUp"]], "bounds (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[340, "armi.reactor.grids.structuredGrid.GridParameters.bounds"]], "geomtype (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[340, "armi.reactor.grids.structuredGrid.GridParameters.geomType"]], "getaboveandbelowcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getAboveAndBelowCellIndices"]], "getallindices() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getAllIndices"]], "getbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getBounds"]], "getcellbase() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getCellBase"]], "getcelltop() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getCellTop"]], "getcoordinates() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getCoordinates"]], "getindexbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getIndexBounds"]], "getindicesfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getIndicesFromRingAndPos"]], "getlocatorfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getLocatorFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.getRingPos"]], "isaxialonly (armi.reactor.grids.structuredgrid.structuredgrid property)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.isAxialOnly"]], "items() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.items"]], "offset (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[340, "armi.reactor.grids.structuredGrid.GridParameters.offset"]], "offset (armi.reactor.grids.structuredgrid.structuredgrid property)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.offset"]], "pitch (armi.reactor.grids.structuredgrid.structuredgrid property)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.pitch"]], "reduce() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.reduce"]], "restorebackup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[340, "armi.reactor.grids.structuredGrid.StructuredGrid.restoreBackup"]], "symmetry (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[340, "armi.reactor.grids.structuredGrid.GridParameters.symmetry"]], "unitsteplimits (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[340, "armi.reactor.grids.structuredGrid.GridParameters.unitStepLimits"]], "unitsteps (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[340, "armi.reactor.grids.structuredGrid.GridParameters.unitSteps"]], "thetarzgrid (class in armi.reactor.grids.thetarz)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid"]], "armi.reactor.grids.thetarz": [[341, "module-armi.reactor.grids.thetarz"]], "armiobject (armi.reactor.grids.thetarz.thetarzgrid attribute)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.armiObject"]], "fromgeom() (armi.reactor.grids.thetarz.thetarzgrid class method)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.fromGeom"]], "getcoordinates() (armi.reactor.grids.thetarz.thetarzgrid method)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.getCoordinates"]], "getindicesfromringandpos() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.thetarz.thetarzgrid method)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.thetarz.thetarzgrid method)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.getSymmetricEquivalents"]], "indicesofbounds() (armi.reactor.grids.thetarz.thetarzgrid method)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.indicesOfBounds"]], "locatorindomain() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.overlapsWhichSymmetryLine"]], "pitch() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[341, "armi.reactor.grids.thetarz.ThetaRZGrid.pitch"]], "armi.reactor.parameters": [[342, "module-armi.reactor.parameters"]], "reset() (in module armi.reactor.parameters)": [[342, "armi.reactor.parameters.reset"]], "parameterdefinitionerror": [[343, "armi.reactor.parameters.exceptions.ParameterDefinitionError"]], "parametererror": [[343, "armi.reactor.parameters.exceptions.ParameterError"]], "unknownparametererror": [[343, "armi.reactor.parameters.exceptions.UnknownParameterError"]], "armi.reactor.parameters.exceptions": [[343, "module-armi.reactor.parameters.exceptions"]], "global_serial_num (in module armi.reactor.parameters.parametercollections)": [[344, "armi.reactor.parameters.parameterCollections.GLOBAL_SERIAL_NUM"]], "parametercollection (class in armi.reactor.parameters.parametercollections)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection"]], "applyallparameters() (in module armi.reactor.parameters.parametercollections)": [[344, "armi.reactor.parameters.parameterCollections.applyAllParameters"]], "applyparameters() (armi.reactor.parameters.parametercollections.parametercollection class method)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.applyParameters"]], "armi.reactor.parameters.parametercollections": [[344, "module-armi.reactor.parameters.parameterCollections"]], "backup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.backUp"]], "collectpluginparameters() (in module armi.reactor.parameters.parametercollections)": [[344, "armi.reactor.parameters.parameterCollections.collectPluginParameters"]], "get() (armi.reactor.parameters.parametercollections.parametercollection method)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.get"]], "getsyncdata() (armi.reactor.parameters.parametercollections.parametercollection method)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.getSyncData"]], "items() (armi.reactor.parameters.parametercollections.parametercollection method)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.items"]], "keys() (armi.reactor.parameters.parametercollections.parametercollection method)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.keys"]], "pdefs (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.pDefs"]], "paramdefs (armi.reactor.parameters.parametercollections.parametercollection property)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.paramDefs"]], "restorebackup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.restoreBackup"]], "serialnum (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.serialNum"]], "update() (armi.reactor.parameters.parametercollections.parametercollection method)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.update"]], "values() (armi.reactor.parameters.parametercollections.parametercollection method)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.values"]], "where() (armi.reactor.parameters.parametercollections.parametercollection method)": [[344, "armi.reactor.parameters.parameterCollections.ParameterCollection.where"]], "average (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.ParamLocation.AVERAGE"]], "bottom (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.ParamLocation.BOTTOM"]], "centroid (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CENTROID"]], "children (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CHILDREN"]], "corners (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CORNERS"]], "category (class in armi.reactor.parameters.parameterdefinitions)": [[345, "armi.reactor.parameters.parameterDefinitions.Category"]], "edges (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.ParamLocation.EDGES"]], "max (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.ParamLocation.MAX"]], "nodefault (class in armi.reactor.parameters.parameterdefinitions)": [[345, "armi.reactor.parameters.parameterDefinitions.NoDefault"]], "paramlocation (class in armi.reactor.parameters.parameterdefinitions)": [[345, "armi.reactor.parameters.parameterDefinitions.ParamLocation"]], "parameter (class in armi.reactor.parameters.parameterdefinitions)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter"]], "parameterbuilder (class in armi.reactor.parameters.parameterdefinitions)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder"]], "parameterdefinitioncollection (class in armi.reactor.parameters.parameterdefinitions)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection"]], "serializer (class in armi.reactor.parameters.parameterdefinitions)": [[345, "armi.reactor.parameters.parameterDefinitions.Serializer"]], "top (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.ParamLocation.TOP"]], "volume_integrated (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.ParamLocation.VOLUME_INTEGRATED"]], "add() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.add"]], "armi.reactor.parameters.parameterdefinitions": [[345, "module-armi.reactor.parameters.parameterDefinitions"]], "assigninblueprints (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.assignInBlueprints"]], "assigned (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.assigned"]], "associateparameterdefinitioncollection() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.associateParameterDefinitionCollection"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.atLocation"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.atLocation"]], "backup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.backUp"]], "bynameandcollectiontype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndCollectionType"]], "bynameandtype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndType"]], "categories (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.categories"]], "categories (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.categories"]], "collectiontype (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.collectionType"]], "createbuilder() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.createBuilder"]], "cumulative (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.cumulative"]], "cumulativeovercycle (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.cumulativeOverCycle"]], "defparam() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.defParam"]], "default (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.default"]], "depletion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.depletion"]], "description (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.description"]], "detailedaxialexpansion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.detailedAxialExpansion"]], "extend() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.extend"]], "fieldname (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.fieldName"]], "fluxquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.fluxQuantities"]], "fortype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.forType"]], "gamma (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.gamma"]], "hascategory() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.hasCategory"]], "incategory() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.inCategory"]], "isnumpyarray() (in module armi.reactor.parameters.parameterdefinitions)": [[345, "armi.reactor.parameters.parameterDefinitions.isNumpyArray"]], "items() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.items"]], "location (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.location"]], "lock() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.lock"]], "locked (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.locked"]], "multigroupquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.multiGroupQuantities"]], "name (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.name"]], "names (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.names"]], "neutronics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.neutronics"]], "pack() (armi.reactor.parameters.parameterdefinitions.serializer static method)": [[345, "armi.reactor.parameters.parameterDefinitions.Serializer.pack"]], "pinquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.pinQuantities"]], "reactivitycoefficients (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.reactivityCoefficients"]], "resetassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.resetAssignmentFlag"]], "restorebackup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.restoreBackup"]], "retainonreplacement (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.retainOnReplacement"]], "savetodb (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.saveToDB"]], "serializer (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.serializer"]], "setassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.setAssignmentFlag"]], "setter() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.setter"]], "since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.since"]], "thermalhydraulics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Category.thermalHydraulics"]], "towritetodb() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.toWriteToDB"]], "unchanged_since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[345, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.unchanged_since"]], "units (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Parameter.units"]], "unpack() (armi.reactor.parameters.parameterdefinitions.serializer class method)": [[345, "armi.reactor.parameters.parameterDefinitions.Serializer.unpack"]], "version (armi.reactor.parameters.parameterdefinitions.serializer attribute)": [[345, "armi.reactor.parameters.parameterDefinitions.Serializer.version"]], "resolveparametersmeta (class in armi.reactor.parameters.resolvecollections)": [[346, "armi.reactor.parameters.resolveCollections.ResolveParametersMeta"]], "armi.reactor.parameters.resolvecollections": [[346, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorparameters": [[347, "module-armi.reactor.reactorParameters"]], "definecoreparameters() (in module armi.reactor.reactorparameters)": [[347, "armi.reactor.reactorParameters.defineCoreParameters"]], "definereactorparameters() (in module armi.reactor.reactorparameters)": [[347, "armi.reactor.reactorParameters.defineReactorParameters"]], "makeparametersreadonly() (in module armi.reactor.reactorparameters)": [[347, "armi.reactor.reactorParameters.makeParametersReadOnly"]], "reactor (class in armi.reactor.reactors)": [[348, "armi.reactor.reactors.Reactor"]], "add() (armi.reactor.reactors.reactor method)": [[348, "armi.reactor.reactors.Reactor.add"]], "armi.reactor.reactors": [[348, "module-armi.reactor.reactors"]], "factory() (in module armi.reactor.reactors)": [[348, "armi.reactor.reactors.factory"]], "incrementassemnum() (armi.reactor.reactors.reactor method)": [[348, "armi.reactor.reactors.Reactor.incrementAssemNum"]], "loadfromcs() (in module armi.reactor.reactors)": [[348, "armi.reactor.reactors.loadFromCs"]], "normalizenames() (armi.reactor.reactors.reactor method)": [[348, "armi.reactor.reactors.Reactor.normalizeNames"]], "pdefs (armi.reactor.reactors.reactor attribute)": [[348, "armi.reactor.reactors.Reactor.pDefs"]], "paramcollectiontype (armi.reactor.reactors.reactor attribute)": [[348, "armi.reactor.reactors.Reactor.paramCollectionType"]], "spentfuelpool (class in armi.reactor.spentfuelpool)": [[349, "armi.reactor.spentFuelPool.SpentFuelPool"]], "add() (armi.reactor.spentfuelpool.spentfuelpool method)": [[349, "armi.reactor.spentFuelPool.SpentFuelPool.add"]], "armi.reactor.spentfuelpool": [[349, "module-armi.reactor.spentFuelPool"]], "getassembly() (armi.reactor.spentfuelpool.spentfuelpool method)": [[349, "armi.reactor.spentFuelPool.SpentFuelPool.getAssembly"]], "normalizenames() (armi.reactor.spentfuelpool.spentfuelpool method)": [[349, "armi.reactor.spentFuelPool.SpentFuelPool.normalizeNames"]], "paramcollectiontype (armi.reactor.spentfuelpool.spentfuelpool attribute)": [[349, "armi.reactor.spentFuelPool.SpentFuelPool.paramCollectionType"]], "root_tag (armi.reactor.systemlayoutinput.systemlayoutinput attribute)": [[350, "armi.reactor.systemLayoutInput.SystemLayoutInput.ROOT_TAG"]], "systemlayoutinput (class in armi.reactor.systemlayoutinput)": [[350, "armi.reactor.systemLayoutInput.SystemLayoutInput"]], "armi.reactor.systemlayoutinput": [[350, "module-armi.reactor.systemLayoutInput"]], "fromreactor() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[350, "armi.reactor.systemLayoutInput.SystemLayoutInput.fromReactor"]], "growtofullcore() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[350, "armi.reactor.systemLayoutInput.SystemLayoutInput.growToFullCore"]], "loadfromcs() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[350, "armi.reactor.systemLayoutInput.SystemLayoutInput.loadFromCs"]], "modifyeqpaths() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[350, "armi.reactor.systemLayoutInput.SystemLayoutInput.modifyEqPaths"]], "readgeomfromfile() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[350, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromFile"]], "readgeomfromstream() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[350, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromStream"]], "togridblueprints() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[350, "armi.reactor.systemLayoutInput.SystemLayoutInput.toGridBlueprints"]], "writegeom() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[350, "armi.reactor.systemLayoutInput.SystemLayoutInput.writeGeom"]], "armi.reactor.tests": [[351, "module-armi.reactor.tests"]], "annularfueltestcase (class in armi.reactor.tests.test_assemblies)": [[352, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase"]], "assemblyinreactor_testcase (class in armi.reactor.tests.test_assemblies)": [[352, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase"]], "assembly_testcase (class in armi.reactor.tests.test_assemblies)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase"]], "materialinassembly_testcase (class in armi.reactor.tests.test_assemblies)": [[352, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase"]], "armi.reactor.tests.test_assemblies": [[352, "module-armi.reactor.tests.test_assemblies"]], "buildtestassemblies() (in module armi.reactor.tests.test_assemblies)": [[352, "armi.reactor.tests.test_assemblies.buildTestAssemblies"]], "maketestassembly() (in module armi.reactor.tests.test_assemblies)": [[352, "armi.reactor.tests.test_assemblies.makeTestAssembly"]], "test_uthzrmaterial() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_UThZrMaterial"]], "test_add() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_add"]], "test_adjustresolution() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_adjustResolution"]], "test_append() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_append"]], "test_areacheck() (armi.reactor.tests.test_assemblies.annularfueltestcase method)": [[352, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase.test_areaCheck"]], "test_assem_block_types() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_block_types"]], "test_assem_hex_type() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_hex_type"]], "test_averageplenumtemperature() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_averagePlenumTemperature"]], "test_calcavgparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcAvgParam"]], "test_calctotalparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcTotalParam"]], "test_calculatezcoords() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calculateZCoords"]], "test_carestiancoordinates() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_carestianCoordinates"]], "test_countblocksoftype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_countBlocksOfType"]], "test_duplicate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_duplicate"]], "test_extend() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_extend"]], "test_getage() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAge"]], "test_getarea() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getArea"]], "test_getaxialmesh() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAxialMesh"]], "test_getbindexfromzindex() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBIndexFromZIndex"]], "test_getblockdata() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlockData"]], "test_getblocks() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocks"]], "test_getblocksandz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksAndZ"]], "test_getblocksbetweenelevations() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksBetweenElevations"]], "test_getdim() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDim"]], "test_getdominantmaterial() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDominantMaterial"]], "test_getelevationboundariesbyblocktype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationBoundariesByBlockType"]], "test_getelevationsmatchingparamvalue() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationsMatchingParamValue"]], "test_getfirstblock() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlock"]], "test_getfirstblockbytype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlockByType"]], "test_getfissilemass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFissileMass"]], "test_getheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getHeight"]], "test_getlocation() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getLocation"]], "test_getmass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMass"]], "test_getmaxparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMaxParam"]], "test_getname() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getName"]], "test_getnum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getNum"]], "test_getparamvaluesatz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getParamValuesAtZ"]], "test_getreactiveheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getReactiveHeight"]], "test_gettotalheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getTotalHeight"]], "test_getvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getVolume"]], "test_hascontinuouscoolantchannel() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasContinuousCoolantChannel"]], "test_hasflags() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasFlags"]], "test_isonwhichsymmetryline() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_isOnWhichSymmetryLine"]], "test_iter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iter"]], "test_iteration() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iteration"]], "test_len() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_len"]], "test_makeaxialsnaplist() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_makeAxialSnapList"]], "test_moveto() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_moveTo"]], "test_notesparameter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_notesParameter"]], "test_pinplenumvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_pinPlenumVolume"]], "test_reattach() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reattach"]], "test_reestablishblockorder() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reestablishBlockOrder"]], "test_renameblocksaccordingtoassemblynum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_renameBlocksAccordingToAssemblyNum"]], "test_rotate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_rotate"]], "test_snapaxialmeshtoreference() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_snapAxialMeshToReference"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockigniter() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[352, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[352, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "test_sortnolocator() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_sortNoLocator"]], "test_updatefromassembly() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[352, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_updateFromAssembly"]], "blockenergydepositionconstants (class in armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants"]], "blockinputheightstests (class in armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.BlockInputHeightsTests"]], "block_testcase (class in armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase"]], "cartesianblock_testcase (class in armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase"]], "emptyblockrotatetest (class in armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.EmptyBlockRotateTest"]], "hexblock_testcase (class in armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase"]], "massconservationtests (class in armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.MassConservationTests"]], "pitch (armi.reactor.tests.test_blocks.cartesianblock_testcase attribute)": [[353, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.PITCH"]], "testdetailedndensupdate (class in armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate"]], "testnegativevolume (class in armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.TestNegativeVolume"]], "thrzblock_testcase (class in armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase"]], "applydummydata() (in module armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.applyDummyData"]], "armi.reactor.tests.test_blocks": [[353, "module-armi.reactor.tests.test_blocks"]], "buildsimplefuelblock() (in module armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.buildSimpleFuelBlock"]], "getcomponentdata() (in module armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.getComponentData"]], "loadtestblock() (in module armi.reactor.tests.test_blocks)": [[353, "armi.reactor.tests.test_blocks.loadTestBlock"]], "test_100_getpinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_100_getPinPitch"]], "test_101_getpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_101_getPitch"]], "test_102_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_102_setPitch"]], "test_106_getareafractions() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_106_getAreaFractions"]], "test_27b_setbugroup() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_27b_setBuGroup"]], "test_add() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_add"]], "test_adjustdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustDensity"]], "test_adjustuenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustUEnrich"]], "test_axial() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_axial"]], "test_block_dims() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_block_dims"]], "test_breakfuelcomponentsintoindividuals() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_breakFuelComponentsIntoIndividuals"]], "test_cleardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_clearDensity"]], "test_coldmass() (armi.reactor.tests.test_blocks.massconservationtests method)": [[353, "armi.reactor.tests.test_blocks.MassConservationTests.test_coldMass"]], "test_completeinitialloading() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_completeInitialLoading"]], "test_component_type() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_component_type"]], "test_consistentareawithoverlappingcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentAreaWithOverlappingComponents"]], "test_consistentmassdensityvolumebetweencoldblockandcoldcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"]], "test_consistentmassdensityvolumebetweenhotblockandhotcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"]], "test_coords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_coords"]], "test_dimensionductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[353, "armi.reactor.tests.test_blocks.MassConservationTests.test_dimensionDuctHeatup"]], "test_duplicate() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_duplicate"]], "test_expandallelementalstoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandAllElementalsToIsotopics"]], "test_expandelementaltoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandElementalToIsotopics"]], "test_foundreactor() (armi.reactor.tests.test_blocks.blockinputheightstests method)": [[353, "armi.reactor.tests.test_blocks.BlockInputHeightsTests.test_foundReactor"]], "test_getarea() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getArea"]], "test_getcaptureenergygenerationconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[353, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getCaptureEnergyGenerationConstants"]], "test_getcartesiangrid() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getCartesianGrid"]], "test_getcomponent() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponent"]], "test_getcomponentareafrac() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentAreaFrac"]], "test_getcomponentbyname() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentByName"]], "test_getcomponentnames() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentNames"]], "test_getcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponents"]], "test_getcomponentsinlinkedorder() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsInLinkedOrder"]], "test_getcomponentsofmaterial() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfMaterial"]], "test_getcomponentsofshape() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfShape"]], "test_getdimensions() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getDimensions"]], "test_getductpitch() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getDuctPitch"]], "test_getfissilemassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFissileMassEnrich"]], "test_getfissionenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[353, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getFissionEnergyDepositionConstants"]], "test_getflowarea() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowArea"]], "test_getflowareaperpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowAreaPerPin"]], "test_getgammaenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[353, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getGammaEnergyDepositionConstants"]], "test_gethmdens() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHMDens"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getHydraulicDiameter"]], "test_getmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMass"]], "test_getmasses() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMasses"]], "test_getmfp() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMfp"]], "test_getmicrosuffix() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMicroSuffix"]], "test_getneutronenergydepositionconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[353, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getNeutronEnergyDepositionConstants"]], "test_getnumcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumComponents"]], "test_getnumpins() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumPins"]], "test_getnumpins() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getNumPins"]], "test_getnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberDensity"]], "test_getnumberofatoms() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberOfAtoms"]], "test_getpincenterflattoflat() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCenterFlatToFlat"]], "test_getpincoords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCoords"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchsquare() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchSquare"]], "test_getplenumpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPlenumPin"]], "test_getpu() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPu"]], "test_getreactionrates() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getReactionRates"]], "test_getsmeardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensity"]], "test_getsmeardensityedgecases() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityEdgeCases"]], "test_getsmeardensitymultipleliner() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityMultipleLiner"]], "test_getsortedcomponentsinsideofcomponentclad() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentClad"]], "test_getsortedcomponentsinsideofcomponentduct() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentDuct"]], "test_getthetarzgrid() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getThetaRZGrid"]], "test_gettotalenergygenerationconstants() (armi.reactor.tests.test_blocks.blockenergydepositionconstants method)": [[353, "armi.reactor.tests.test_blocks.BlockEnergyDepositionConstants.test_getTotalEnergyGenerationConstants"]], "test_gettotalmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalMass"]], "test_gettotalndens() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalNDens"]], "test_gettype() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getType"]], "test_geturaniummassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumMassEnrich"]], "test_geturaniumnumenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumNumEnrich"]], "test_getvolumefractionwithoutparent() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionWithoutParent"]], "test_getvolumefractionswithzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionsWithZeroHeight"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getWettedPerimeter"]], "test_getxstype() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_getXsType"]], "test_gridcreation() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridCreation"]], "test_gridnotcreatedmultiplemultiplicities() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNotCreatedMultipleMultiplicities"]], "test_gridnumpinsandlocations() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNumPinsAndLocations"]], "test_hascomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasComponents"]], "test_hasflags() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasFlags"]], "test_haspinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasPinPitch"]], "test_heightexpansiondifferences() (armi.reactor.tests.test_blocks.massconservationtests method)": [[353, "armi.reactor.tests.test_blocks.MassConservationTests.test_heightExpansionDifferences"]], "test_homogenizedmixture() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_homogenizedMixture"]], "test_masscladheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[353, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCladHeatup"]], "test_massconsistency() (armi.reactor.tests.test_blocks.massconservationtests method)": [[353, "armi.reactor.tests.test_blocks.MassConservationTests.test_massConsistency"]], "test_masscoolheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[353, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCoolHeatup"]], "test_massductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[353, "armi.reactor.tests.test_blocks.MassConservationTests.test_massDuctHeatup"]], "test_massfuelheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[353, "armi.reactor.tests.test_blocks.MassConservationTests.test_massFuelHeatup"]], "test_mergewithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_mergeWithBlock"]], "test_negativevolume() (armi.reactor.tests.test_blocks.testnegativevolume method)": [[353, "armi.reactor.tests.test_blocks.TestNegativeVolume.test_negativeVolume"]], "test_noblueprints() (armi.reactor.tests.test_blocks.blockinputheightstests method)": [[353, "armi.reactor.tests.test_blocks.BlockInputHeightsTests.test_noBlueprints"]], "test_orientation() (armi.reactor.tests.test_blocks.emptyblockrotatetest method)": [[353, "armi.reactor.tests.test_blocks.EmptyBlockRotateTest.test_orientation"]], "test_pinmgfluxes() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_pinMgFluxes"]], "test_radii() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_radii"]], "test_removemass() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_removeMass"]], "test_replaceblockwithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_replaceBlockWithBlock"]], "test_retainstate() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_retainState"]], "test_rotatepins() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_rotatePins"]], "test_setbulimitinfo() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_setBuLimitInfo"]], "test_setimportantparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_setImportantParams"]], "test_setlinpowbypin() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLinPowByPin"]], "test_setlocation() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLocation"]], "test_setmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_setMass"]], "test_setnumberdensities() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensity"]], "test_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_setPitch"]], "test_settype() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_setType"]], "test_setzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_setZeroHeight"]], "test_symmetryfactor() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_symmetryFactor"]], "test_theta() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_theta"]], "test_timenodeparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[353, "armi.reactor.tests.test_blocks.Block_TestCase.test_timeNodeParams"]], "test_updatedetailedndens() (armi.reactor.tests.test_blocks.testdetailedndensupdate method)": [[353, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate.test_updateDetailedNdens"]], "test_verifyblockdims() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[353, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_verifyBlockDims"]], "testcircle (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestCircle"]], "testcomponent (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestComponent"]], "testcomponentexpansion (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion"]], "testcomponentfactory (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestComponentFactory"]], "testcube (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestCube"]], "testderivedshape (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestDerivedShape"]], "testderivedshapegetarea (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestDerivedShapeGetArea"]], "testdifferentialradialsegment (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestDifferentialRadialSegment"]], "testgeneralcomponents (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestGeneralComponents"]], "testhelix (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestHelix"]], "testhexholedcircle (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestHexHoledCircle"]], "testhexagon (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestHexagon"]], "testholedhexagon (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestHoledHexagon"]], "testholedrectangle (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestHoledRectangle"]], "testholedsquare (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestHoledSquare"]], "testmaterialadjustments (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments"]], "testnullcomponent (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestNullComponent"]], "testradialsegment (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestRadialSegment"]], "testrectangle (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestRectangle"]], "testshapedcomponent (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestShapedComponent"]], "testsolidrectangle (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestSolidRectangle"]], "testsphere (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestSphere"]], "testsquare (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestSquare"]], "testtriangle (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestTriangle"]], "testunshapedcomponent (class in armi.reactor.tests.test_components)": [[354, "armi.reactor.tests.test_components.TestUnshapedComponent"]], "armi.reactor.tests.test_components": [[354, "module-armi.reactor.tests.test_components"]], "coldouterdiameter (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion.coldOuterDiameter"]], "componentcls (armi.reactor.tests.test_components.testcircle attribute)": [[354, "armi.reactor.tests.test_components.TestCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcomponent attribute)": [[354, "armi.reactor.tests.test_components.TestComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcube attribute)": [[354, "armi.reactor.tests.test_components.TestCube.componentCls"]], "componentcls (armi.reactor.tests.test_components.testderivedshape attribute)": [[354, "armi.reactor.tests.test_components.TestDerivedShape.componentCls"]], "componentcls (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[354, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[354, "armi.reactor.tests.test_components.TestGeneralComponents.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhelix attribute)": [[354, "armi.reactor.tests.test_components.TestHelix.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[354, "armi.reactor.tests.test_components.TestHexHoledCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexagon attribute)": [[354, "armi.reactor.tests.test_components.TestHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedhexagon attribute)": [[354, "armi.reactor.tests.test_components.TestHoledHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedrectangle attribute)": [[354, "armi.reactor.tests.test_components.TestHoledRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedsquare attribute)": [[354, "armi.reactor.tests.test_components.TestHoledSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testnullcomponent attribute)": [[354, "armi.reactor.tests.test_components.TestNullComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testradialsegment attribute)": [[354, "armi.reactor.tests.test_components.TestRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testrectangle attribute)": [[354, "armi.reactor.tests.test_components.TestRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[354, "armi.reactor.tests.test_components.TestSolidRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsphere attribute)": [[354, "armi.reactor.tests.test_components.TestSphere.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsquare attribute)": [[354, "armi.reactor.tests.test_components.TestSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testtriangle attribute)": [[354, "armi.reactor.tests.test_components.TestTriangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[354, "armi.reactor.tests.test_components.TestUnshapedComponent.componentCls"]], "componentdims (armi.reactor.tests.test_components.testcircle attribute)": [[354, "armi.reactor.tests.test_components.TestCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testcube attribute)": [[354, "armi.reactor.tests.test_components.TestCube.componentDims"]], "componentdims (armi.reactor.tests.test_components.testderivedshape attribute)": [[354, "armi.reactor.tests.test_components.TestDerivedShape.componentDims"]], "componentdims (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[354, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[354, "armi.reactor.tests.test_components.TestGeneralComponents.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhelix attribute)": [[354, "armi.reactor.tests.test_components.TestHelix.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[354, "armi.reactor.tests.test_components.TestHexHoledCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexagon attribute)": [[354, "armi.reactor.tests.test_components.TestHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedhexagon attribute)": [[354, "armi.reactor.tests.test_components.TestHoledHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedrectangle attribute)": [[354, "armi.reactor.tests.test_components.TestHoledRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedsquare attribute)": [[354, "armi.reactor.tests.test_components.TestHoledSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testradialsegment attribute)": [[354, "armi.reactor.tests.test_components.TestRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testrectangle attribute)": [[354, "armi.reactor.tests.test_components.TestRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[354, "armi.reactor.tests.test_components.TestSolidRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsphere attribute)": [[354, "armi.reactor.tests.test_components.TestSphere.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsquare attribute)": [[354, "armi.reactor.tests.test_components.TestSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testtriangle attribute)": [[354, "armi.reactor.tests.test_components.TestTriangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[354, "armi.reactor.tests.test_components.TestUnshapedComponent.componentDims"]], "componentmassindependentofinputtemp() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion.componentMassIndependentOfInputTemp"]], "componentmaterial (armi.reactor.tests.test_components.testderivedshape attribute)": [[354, "armi.reactor.tests.test_components.TestDerivedShape.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[354, "armi.reactor.tests.test_components.TestGeneralComponents.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[354, "armi.reactor.tests.test_components.TestUnshapedComponent.componentMaterial"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedrectangle attribute)": [[354, "armi.reactor.tests.test_components.TestHoledRectangle.dimsToTestExpansion"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedsquare attribute)": [[354, "armi.reactor.tests.test_components.TestHoledSquare.dimsToTestExpansion"]], "expansionconservationcoldheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationColdHeightDefined"]], "expansionconservationhotheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationHotHeightDefined"]], "getcirclefueldict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[354, "armi.reactor.tests.test_components.TestComponentFactory.getCircleFuelDict"]], "getcirclevoiddict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[354, "armi.reactor.tests.test_components.TestComponentFactory.getCircleVoidDict"]], "runexpansiontests() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion.runExpansionTests"]], "setclassdims() (armi.reactor.tests.test_components.testholedrectangle method)": [[354, "armi.reactor.tests.test_components.TestHoledRectangle.setClassDims"]], "setclassdims() (armi.reactor.tests.test_components.testholedsquare method)": [[354, "armi.reactor.tests.test_components.TestHoledSquare.setClassDims"]], "tcold (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion.tCold"]], "thot (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion.tHot"]], "twarm (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion.tWarm"]], "test_b4cexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion.test_B4CExpansion"]], "test_ht9expansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion.test_HT9Expansion"]], "test_uzrexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[354, "armi.reactor.tests.test_components.TestComponentExpansion.test_UZrExpansion"]], "test_adjustmassenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassEnrichment"]], "test_adjustmassfrac_u() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U"]], "test_adjustmassfrac_u235() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U235"]], "test_adjustmassfrac_clear_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_clear_ZR"]], "test_adjustmassfrac_invalid() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_invalid"]], "test_adjustmassfrac_leave_same() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_leave_same"]], "test_adjustmassfrac_set_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_set_ZR"]], "test_badcomponentname() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_badComponentName"]], "test_changenumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_changeNumberDensities"]], "test_cmp() (armi.reactor.tests.test_components.testnullcomponent method)": [[354, "armi.reactor.tests.test_components.TestNullComponent.test_cmp"]], "test_componentinitializationandduplication() (armi.reactor.tests.test_components.testcomponentfactory method)": [[354, "armi.reactor.tests.test_components.TestComponentFactory.test_componentInitializationAndDuplication"]], "test_componentinteractionslinkingbydimensions() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingByDimensions"]], "test_componentinteractionslinkingbysubtraction() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingBySubtraction"]], "test_component_less_than() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[354, "armi.reactor.tests.test_components.TestUnshapedComponent.test_component_less_than"]], "test_computevolume() (armi.reactor.tests.test_components.testderivedshape method)": [[354, "armi.reactor.tests.test_components.TestDerivedShape.test_computeVolume"]], "test_density() (armi.reactor.tests.test_components.testshapedcomponent method)": [[354, "armi.reactor.tests.test_components.TestShapedComponent.test_density"]], "test_densityconsistent() (armi.reactor.tests.test_components.testshapedcomponent method)": [[354, "armi.reactor.tests.test_components.TestShapedComponent.test_densityConsistent"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[354, "armi.reactor.tests.test_components.TestHelix.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[354, "armi.reactor.tests.test_components.TestHexHoledCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[354, "armi.reactor.tests.test_components.TestHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[354, "armi.reactor.tests.test_components.TestHoledHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[354, "armi.reactor.tests.test_components.TestHoledRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[354, "armi.reactor.tests.test_components.TestRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[354, "armi.reactor.tests.test_components.TestSolidRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[354, "armi.reactor.tests.test_components.TestSquare.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[354, "armi.reactor.tests.test_components.TestTriangle.test_dimensionThermallyExpands"]], "test_factory() (armi.reactor.tests.test_components.testcomponentfactory method)": [[354, "armi.reactor.tests.test_components.TestComponentFactory.test_factory"]], "test_factorybadshapename() (armi.reactor.tests.test_components.testcomponentfactory method)": [[354, "armi.reactor.tests.test_components.TestComponentFactory.test_factoryBadShapeName"]], "test_finalizeloaddbadjuststd() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_finalizeLoadDBAdjustsTD"]], "test_fromcomponent() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[354, "armi.reactor.tests.test_components.TestUnshapedComponent.test_fromComponent"]], "test_fuelmass() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_fuelMass"]], "test_getarea() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhelix method)": [[354, "armi.reactor.tests.test_components.TestHelix.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexholedcircle method)": [[354, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexagon method)": [[354, "armi.reactor.tests.test_components.TestHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedhexagon method)": [[354, "armi.reactor.tests.test_components.TestHoledHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedrectangle method)": [[354, "armi.reactor.tests.test_components.TestHoledRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testrectangle method)": [[354, "armi.reactor.tests.test_components.TestRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsolidrectangle method)": [[354, "armi.reactor.tests.test_components.TestSolidRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsquare method)": [[354, "armi.reactor.tests.test_components.TestSquare.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testtriangle method)": [[354, "armi.reactor.tests.test_components.TestTriangle.test_getArea"]], "test_getareacoldtrue() (armi.reactor.tests.test_components.testderivedshapegetarea method)": [[354, "armi.reactor.tests.test_components.TestDerivedShapeGetArea.test_getAreaColdTrue"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testderivedshape method)": [[354, "armi.reactor.tests.test_components.TestDerivedShape.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[354, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhelix method)": [[354, "armi.reactor.tests.test_components.TestHelix.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[354, "armi.reactor.tests.test_components.TestHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[354, "armi.reactor.tests.test_components.TestHoledHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[354, "armi.reactor.tests.test_components.TestHoledRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testradialsegment method)": [[354, "armi.reactor.tests.test_components.TestRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[354, "armi.reactor.tests.test_components.TestRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsolidrectangle method)": [[354, "armi.reactor.tests.test_components.TestSolidRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsquare method)": [[354, "armi.reactor.tests.test_components.TestSquare.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[354, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getBoundingCircleOuterDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhelix method)": [[354, "armi.reactor.tests.test_components.TestHelix.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexholedcircle method)": [[354, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[354, "armi.reactor.tests.test_components.TestHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[354, "armi.reactor.tests.test_components.TestHoledHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[354, "armi.reactor.tests.test_components.TestHoledRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedsquare method)": [[354, "armi.reactor.tests.test_components.TestHoledSquare.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[354, "armi.reactor.tests.test_components.TestRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testsquare method)": [[354, "armi.reactor.tests.test_components.TestSquare.test_getCircleInnerDiameter"]], "test_getcomponentarea() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[354, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getComponentArea"]], "test_getdimension() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_getDimension"]], "test_getdimension() (armi.reactor.tests.test_components.testnullcomponent method)": [[354, "armi.reactor.tests.test_components.TestNullComponent.test_getDimension"]], "test_getenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_getEnrichment"]], "test_getnumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_getNumberDensities"]], "test_getperimeter() (armi.reactor.tests.test_components.testhexagon method)": [[354, "armi.reactor.tests.test_components.TestHexagon.test_getPerimeter"]], "test_getthermalexpansionfactorconservedmassbylinearexpansionpercent() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"]], "test_getvolume() (armi.reactor.tests.test_components.testcube method)": [[354, "armi.reactor.tests.test_components.TestCube.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[354, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testradialsegment method)": [[354, "armi.reactor.tests.test_components.TestRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testsphere method)": [[354, "armi.reactor.tests.test_components.TestSphere.test_getVolume"]], "test_initializecomponentmaterial() (armi.reactor.tests.test_components.testcomponent method)": [[354, "armi.reactor.tests.test_components.TestComponent.test_initializeComponentMaterial"]], "test_invalidcoolantcomponentassignment() (armi.reactor.tests.test_components.testcomponentfactory method)": [[354, "armi.reactor.tests.test_components.TestComponentFactory.test_invalidCoolantComponentAssignment"]], "test_negativearea() (armi.reactor.tests.test_components.testrectangle method)": [[354, "armi.reactor.tests.test_components.TestRectangle.test_negativeArea"]], "test_negativearea() (armi.reactor.tests.test_components.testsquare method)": [[354, "armi.reactor.tests.test_components.TestSquare.test_negativeArea"]], "test_negativevolume() (armi.reactor.tests.test_components.testcube method)": [[354, "armi.reactor.tests.test_components.TestCube.test_negativeVolume"]], "test_nonzero() (armi.reactor.tests.test_components.testnullcomponent method)": [[354, "armi.reactor.tests.test_components.TestNullComponent.test_nonzero"]], "test_preservemassduringthermalexpansion() (armi.reactor.tests.test_components.testshapedcomponent method)": [[354, "armi.reactor.tests.test_components.TestShapedComponent.test_preserveMassDuringThermalExpansion"]], "test_setmassfrac() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFrac"]], "test_setmassfraconcomponentmaterial() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[354, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFracOnComponentMaterial"]], "test_setnumberdensities() (armi.reactor.tests.test_components.testcomponent method)": [[354, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_components.testcomponent method)": [[354, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensity"]], "test_solid_material() (armi.reactor.tests.test_components.testcomponent method)": [[354, "armi.reactor.tests.test_components.TestComponent.test_solid_material"]], "test_theoreticaldensitysetter() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_theoreticalDensitySetter"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[354, "armi.reactor.tests.test_components.TestCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcube method)": [[354, "armi.reactor.tests.test_components.TestCube.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[354, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[354, "armi.reactor.tests.test_components.TestHelix.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[354, "armi.reactor.tests.test_components.TestHexHoledCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[354, "armi.reactor.tests.test_components.TestHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[354, "armi.reactor.tests.test_components.TestHoledHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[354, "armi.reactor.tests.test_components.TestHoledRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedsquare method)": [[354, "armi.reactor.tests.test_components.TestHoledSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testradialsegment method)": [[354, "armi.reactor.tests.test_components.TestRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[354, "armi.reactor.tests.test_components.TestRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[354, "armi.reactor.tests.test_components.TestSolidRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsphere method)": [[354, "armi.reactor.tests.test_components.TestSphere.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[354, "armi.reactor.tests.test_components.TestSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[354, "armi.reactor.tests.test_components.TestTriangle.test_thermallyExpands"]], "test_updatedims() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[354, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_updateDims"]], "test_validparameters() (armi.reactor.tests.test_components.testhelix method)": [[354, "armi.reactor.tests.test_components.TestHelix.test_validParameters"]], "test_volumeafterclearcache() (armi.reactor.tests.test_components.testshapedcomponent method)": [[354, "armi.reactor.tests.test_components.TestShapedComponent.test_volumeAfterClearCache"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.A"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.A"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.B"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.B"]], "bprime (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.BPRIME"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.C"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.C"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.D"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.D"]], "dummycomposite (class in armi.reactor.tests.test_composites)": [[355, "armi.reactor.tests.test_composites.DummyComposite"]], "dummyleaf (class in armi.reactor.tests.test_composites)": [[355, "armi.reactor.tests.test_composites.DummyLeaf"]], "mockbp (class in armi.reactor.tests.test_composites)": [[355, "armi.reactor.tests.test_composites.MockBP"]], "testcompositepattern (class in armi.reactor.tests.test_composites)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern"]], "testcompositetree (class in armi.reactor.tests.test_composites)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree"]], "testflagserializer (class in armi.reactor.tests.test_composites)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer"]], "testflagserializer.testflagsa (class in armi.reactor.tests.test_composites)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA"]], "testflagserializer.testflagsb (class in armi.reactor.tests.test_composites)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB"]], "testgetreactionratedict (class in armi.reactor.tests.test_composites)": [[355, "armi.reactor.tests.test_composites.TestGetReactionRateDict"]], "testmiscmethods (class in armi.reactor.tests.test_composites)": [[355, "armi.reactor.tests.test_composites.TestMiscMethods"]], "activenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[355, "armi.reactor.tests.test_composites.MockBP.activeNuclides"]], "allnuclidesinproblem (armi.reactor.tests.test_composites.mockbp attribute)": [[355, "armi.reactor.tests.test_composites.MockBP.allNuclidesInProblem"]], "armi.reactor.tests.test_composites": [[355, "module-armi.reactor.tests.test_composites"]], "blueprintyaml (armi.reactor.tests.test_composites.testcompositetree attribute)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.blueprintYaml"]], "customisotopics (armi.reactor.tests.test_composites.mockbp attribute)": [[355, "armi.reactor.tests.test_composites.MockBP.customIsotopics"]], "elementstoexpand (armi.reactor.tests.test_composites.mockbp attribute)": [[355, "armi.reactor.tests.test_composites.MockBP.elementsToExpand"]], "getboundingcircleouterdiameter() (armi.reactor.tests.test_composites.dummyleaf method)": [[355, "armi.reactor.tests.test_composites.DummyLeaf.getBoundingCircleOuterDiameter"]], "getchildren() (armi.reactor.tests.test_composites.dummyleaf method)": [[355, "armi.reactor.tests.test_composites.DummyLeaf.getChildren"]], "getchildrenwithflags() (armi.reactor.tests.test_composites.dummyleaf method)": [[355, "armi.reactor.tests.test_composites.DummyLeaf.getChildrenWithFlags"]], "getdummyparamdefs() (in module armi.reactor.tests.test_composites)": [[355, "armi.reactor.tests.test_composites.getDummyParamDefs"]], "inactivenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[355, "armi.reactor.tests.test_composites.MockBP.inactiveNuclides"]], "itercomponents() (armi.reactor.tests.test_composites.dummyleaf method)": [[355, "armi.reactor.tests.test_composites.DummyLeaf.iterComponents"]], "pdefs (armi.reactor.tests.test_composites.dummycomposite attribute)": [[355, "armi.reactor.tests.test_composites.DummyComposite.pDefs"]], "pdefs (armi.reactor.tests.test_composites.dummyleaf attribute)": [[355, "armi.reactor.tests.test_composites.DummyLeaf.pDefs"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummycomposite attribute)": [[355, "armi.reactor.tests.test_composites.DummyComposite.paramCollectionType"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummyleaf attribute)": [[355, "armi.reactor.tests.test_composites.DummyLeaf.paramCollectionType"]], "test_arechildernoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_areChildernOfType"]], "test_composite() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_composite"]], "test_constituentreport() (armi.reactor.tests.test_composites.testcompositetree method)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.test_constituentReport"]], "test_containsatleastonechildoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsAtLeastOneChildOfType"]], "test_containsheavymetal() (armi.reactor.tests.test_composites.testmiscmethods method)": [[355, "armi.reactor.tests.test_composites.TestMiscMethods.test_containsHeavyMetal"]], "test_containsonlychildrenoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsOnlyChildrenOfType"]], "test_copyparamsfrom() (armi.reactor.tests.test_composites.testmiscmethods method)": [[355, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsFrom"]], "test_copyparamstochildren() (armi.reactor.tests.test_composites.testmiscmethods method)": [[355, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsToChildren"]], "test_dimensionreport() (armi.reactor.tests.test_composites.testmiscmethods method)": [[355, "armi.reactor.tests.test_composites.TestMiscMethods.test_dimensionReport"]], "test_expandlfps() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_expandLFPs"]], "test_flagconversion() (armi.reactor.tests.test_composites.testflagserializer method)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagConversion"]], "test_flagserialization() (armi.reactor.tests.test_composites.testflagserializer method)": [[355, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagSerialization"]], "test_getatomicweight() (armi.reactor.tests.test_composites.testmiscmethods method)": [[355, "armi.reactor.tests.test_composites.TestMiscMethods.test_getAtomicWeight"]], "test_getboundingcirlceouterdiameter() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_getBoundingCirlceOuterDiameter"]], "test_getchildren() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_getChildren"]], "test_getchildrenincludematerials() (armi.reactor.tests.test_composites.testcompositetree method)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.test_getChildrenIncludeMaterials"]], "test_getfpmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFPMass"]], "test_getfissilemass() (armi.reactor.tests.test_composites.testcompositetree method)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFissileMass"]], "test_getfuelmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFuelMass"]], "test_gethmmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.test_getHMMass"]], "test_getintegratedmgflux() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_getIntegratedMgFlux"]], "test_getlumpedfissionproductsifnecessarynullcase() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_getLumpedFissionProductsIfNecessaryNullCase"]], "test_getmaxparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMaxParam"]], "test_getminparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMinParam"]], "test_getname() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_getName"]], "test_getnuclides() (armi.reactor.tests.test_composites.testcompositetree method)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.test_getNuclides"]], "test_getnumberdensities() (armi.reactor.tests.test_composites.testmiscmethods method)": [[355, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensities"]], "test_getnumberdensitieswithexpandedfissionproducts() (armi.reactor.tests.test_composites.testmiscmethods method)": [[355, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensitiesWithExpandedFissionProducts"]], "test_getparamnames() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_getParamNames"]], "test_getreactionratedict() (armi.reactor.tests.test_composites.testgetreactionratedict method)": [[355, "armi.reactor.tests.test_composites.TestGetReactionRateDict.test_getReactionRateDict"]], "test_getreactionrates() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_getReactionRates"]], "test_hasflags() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlags"]], "test_hasflagsnotypespecified() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsNoTypeSpecified"]], "test_hasflagssubstring() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsSubstring"]], "test_itercomponents() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_iterComponents"]], "test_namecontains() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_nameContains"]], "test_nucspec() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_nucSpec"]], "test_ordering() (armi.reactor.tests.test_composites.testcompositetree method)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.test_ordering"]], "test_requireslumpedfissionproducts() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_requiresLumpedFissionProducts"]], "test_setchildrenlumpedfissionproducts() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_setChildrenLumpedFissionProducts"]], "test_setmass() (armi.reactor.tests.test_composites.testmiscmethods method)": [[355, "armi.reactor.tests.test_composites.TestMiscMethods.test_setMass"]], "test_sort() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_sort"]], "test_summing() (armi.reactor.tests.test_composites.testcompositetree method)": [[355, "armi.reactor.tests.test_composites.TestCompositeTree.test_summing"]], "test_syncparameters() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_syncParameters"]], "test_updatevolume() (armi.reactor.tests.test_composites.testcompositepattern method)": [[355, "armi.reactor.tests.test_composites.TestCompositePattern.test_updateVolume"]], "testexcorecollection (class in armi.reactor.tests.test_excorestructures)": [[356, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection"]], "testexcorestructure (class in armi.reactor.tests.test_excorestructures)": [[356, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure"]], "testspentfuelpool (class in armi.reactor.tests.test_excorestructures)": [[356, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool"]], "armi.reactor.tests.test_excorestructures": [[356, "module-armi.reactor.tests.test_excoreStructures"]], "test_add() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[356, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_add"]], "test_add() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[356, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_add"]], "test_addlikeattribute() (armi.reactor.tests.test_excorestructures.testexcorecollection method)": [[356, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection.test_addLikeAttribute"]], "test_addlikedict() (armi.reactor.tests.test_excorestructures.testexcorecollection method)": [[356, "armi.reactor.tests.test_excoreStructures.TestExcoreCollection.test_addLikeDict"]], "test_constructor() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[356, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_constructor"]], "test_constructor() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[356, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_constructor"]], "test_getassembly() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[356, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_getAssembly"]], "test_getnextlocation() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[356, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_getNextLocation"]], "test_normalizenames() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[356, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_normalizeNames"]], "test_parentreactor() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[356, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_parentReactor"]], "test_representation() (armi.reactor.tests.test_excorestructures.testexcorestructure method)": [[356, "armi.reactor.tests.test_excoreStructures.TestExcoreStructure.test_representation"]], "test_representation() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[356, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_representation"]], "test_updatenumberofcolumns() (armi.reactor.tests.test_excorestructures.testspentfuelpool method)": [[356, "armi.reactor.tests.test_excoreStructures.TestSpentFuelPool.test_updateNumberOfColumns"]], "testflags (class in armi.reactor.tests.test_flags)": [[357, "armi.reactor.tests.test_flags.TestFlags"]], "armi.reactor.tests.test_flags": [[357, "module-armi.reactor.tests.test_flags"]], "test_convertsstringswithnonflags() (armi.reactor.tests.test_flags.testflags method)": [[357, "armi.reactor.tests.test_flags.TestFlags.test_convertsStringsWithNonFlags"]], "test_defaultisfalse() (armi.reactor.tests.test_flags.testflags method)": [[357, "armi.reactor.tests.test_flags.TestFlags.test_defaultIsFalse"]], "test_flagsdefinedwithnumbers() (armi.reactor.tests.test_flags.testflags method)": [[357, "armi.reactor.tests.test_flags.TestFlags.test_flagsDefinedWithNumbers"]], "test_flagstoandfromstring() (armi.reactor.tests.test_flags.testflags method)": [[357, "armi.reactor.tests.test_flags.TestFlags.test_flagsToAndFromString"]], "test_fromstring() (armi.reactor.tests.test_flags.testflags method)": [[357, "armi.reactor.tests.test_flags.TestFlags.test_fromString"]], "test_fromstringstrict() (armi.reactor.tests.test_flags.testflags method)": [[357, "armi.reactor.tests.test_flags.TestFlags.test_fromStringStrict"]], "test_fromstringwithnumbers() (armi.reactor.tests.test_flags.testflags method)": [[357, "armi.reactor.tests.test_flags.TestFlags.test_fromStringWithNumbers"]], "test_ispickleable() (armi.reactor.tests.test_flags.testflags method)": [[357, "armi.reactor.tests.test_flags.TestFlags.test_isPickleable"]], "test_lookup() (armi.reactor.tests.test_flags.testflags method)": [[357, "armi.reactor.tests.test_flags.TestFlags.test_lookup"]], "test_tostringalphabetical() (armi.reactor.tests.test_flags.testflags method)": [[357, "armi.reactor.tests.test_flags.TestFlags.test_toStringAlphabetical"]], "testgeomtype (class in armi.reactor.tests.test_geometry)": [[358, "armi.reactor.tests.test_geometry.TestGeomType"]], "testsymmetrytype (class in armi.reactor.tests.test_geometry)": [[358, "armi.reactor.tests.test_geometry.TestSymmetryType"]], "testsystemlayoutinput (class in armi.reactor.tests.test_geometry)": [[358, "armi.reactor.tests.test_geometry.TestSystemLayoutInput"]], "testsystemlayoutinputtrz (class in armi.reactor.tests.test_geometry)": [[358, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry": [[358, "module-armi.reactor.tests.test_geometry"]], "test_symmetryfactor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[358, "armi.reactor.tests.test_geometry.TestSymmetryType.test_SymmetryFactor"]], "test_trzyamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[358, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_TRZyamlIO"]], "test_asciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[358, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_asciimap"]], "test_baseconstructor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[358, "armi.reactor.tests.test_geometry.TestSymmetryType.test_baseConstructor"]], "test_checkvalidgeomsymmetrycombo() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[358, "armi.reactor.tests.test_geometry.TestSymmetryType.test_checkValidGeomSymmetryCombo"]], "test_domaintypenulls() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[358, "armi.reactor.tests.test_geometry.TestSymmetryType.test_domainTypeNulls"]], "test_fromany() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[358, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromAny"]], "test_fromstr() (armi.reactor.tests.test_geometry.testgeomtype method)": [[358, "armi.reactor.tests.test_geometry.TestGeomType.test_fromStr"]], "test_fromstr() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[358, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromStr"]], "test_growtofullcore() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[358, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_growToFullCore"]], "test_label() (armi.reactor.tests.test_geometry.testgeomtype method)": [[358, "armi.reactor.tests.test_geometry.TestGeomType.test_label"]], "test_label() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[358, "armi.reactor.tests.test_geometry.TestSymmetryType.test_label"]], "test_readasciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[358, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readAsciimap"]], "test_readhexgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[358, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readHexGeomXML"]], "test_readreactor() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[358, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readReactor"]], "test_readtrzgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[358, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_readTRZGeomXML"]], "test_str() (armi.reactor.tests.test_geometry.testgeomtype method)": [[358, "armi.reactor.tests.test_geometry.TestGeomType.test_str"]], "test_yamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[358, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_yamlIO"]], "mockcomposite (class in armi.reactor.tests.test_parameters)": [[359, "armi.reactor.tests.test_parameters.MockComposite"]], "mockcompositechild (class in armi.reactor.tests.test_parameters)": [[359, "armi.reactor.tests.test_parameters.MockCompositeChild"]], "mockcompositegrandparent (class in armi.reactor.tests.test_parameters)": [[359, "armi.reactor.tests.test_parameters.MockCompositeGrandParent"]], "mockcompositeparent (class in armi.reactor.tests.test_parameters)": [[359, "armi.reactor.tests.test_parameters.MockCompositeParent"]], "paramcollectionwhere (class in armi.reactor.tests.test_parameters)": [[359, "armi.reactor.tests.test_parameters.ParamCollectionWhere"]], "paramcollectionwhere.scopeparamcollection (class in armi.reactor.tests.test_parameters)": [[359, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection"]], "parametertests (class in armi.reactor.tests.test_parameters)": [[359, "armi.reactor.tests.test_parameters.ParameterTests"]], "testmakeparametersreadonly (class in armi.reactor.tests.test_parameters)": [[359, "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly"]], "armi.reactor.tests.test_parameters": [[359, "module-armi.reactor.tests.test_parameters"]], "pdefs (armi.reactor.tests.test_parameters.paramcollectionwhere.scopeparamcollection attribute)": [[359, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection.pDefs"]], "pb (armi.reactor.tests.test_parameters.paramcollectionwhere.scopeparamcollection attribute)": [[359, "armi.reactor.tests.test_parameters.ParamCollectionWhere.ScopeParamCollection.pb"]], "test_attemptingtosetparamwithoutsetterfails() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_attemptingToSetParamWithoutSetterFails"]], "test_cannotcreateattrbuteonparametercollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateAttrbuteOnParameterCollectionSubclass"]], "test_cannotcreateinstanceof_nodefault() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_NoDefault"]], "test_cannotcreateinstanceof_undefined() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_Undefined"]], "test_cannotdefineparameterwithsamename() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameName"]], "test_cannotdefineparameterwithsamenameforcollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameNameForCollectionSubclass"]], "test_categories() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_categories"]], "test_complicated() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[359, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_complicated"]], "test_defaultlocation() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_defaultLocation"]], "test_getwithoutdefaultraisesparametererror() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_getWithoutDefaultRaisesParameterError"]], "test_makeparametersreadonly() (armi.reactor.tests.test_parameters.testmakeparametersreadonly method)": [[359, "armi.reactor.tests.test_parameters.TestMakeParametersReadOnly.test_makeParametersReadOnly"]], "test_mutabledefaultsnotsupported() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_mutableDefaultsNotSupported"]], "test_oncategory() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[359, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_onCategory"]], "test_onlocation() (armi.reactor.tests.test_parameters.paramcollectionwhere method)": [[359, "armi.reactor.tests.test_parameters.ParamCollectionWhere.test_onLocation"]], "test_paramdefinitionscompose() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_paramDefinitionsCompose"]], "test_parampropertydoesnotconflict() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflict"]], "test_parampropertydoesnotconflictwithnonedefault() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflictWithNoneDefault"]], "test_parametercollectionshave__slots__() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_parameterCollectionsHave__slots__"]], "test_serializer_pack_unpack() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_serializer_pack_unpack"]], "test_setter() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_setter"]], "test_settergetterbasics() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_setterGetterBasics"]], "test_writesomeparamstodb() (armi.reactor.tests.test_parameters.parametertests method)": [[359, "armi.reactor.tests.test_parameters.ParameterTests.test_writeSomeParamsToDB"]], "cartesianreactorneighbortests (class in armi.reactor.tests.test_reactors)": [[360, "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests"]], "cartesianreactortests (class in armi.reactor.tests.test_reactors)": [[360, "armi.reactor.tests.test_reactors.CartesianReactorTests"]], "hexreactortests (class in armi.reactor.tests.test_reactors)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests"]], "reactortests (class in armi.reactor.tests.test_reactors)": [[360, "armi.reactor.tests.test_reactors.ReactorTests"]], "armi.reactor.tests.test_reactors": [[360, "module-armi.reactor.tests.test_reactors"]], "buildoperatorofemptycartesianblocks() (in module armi.reactor.tests.test_reactors)": [[360, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyCartesianBlocks"]], "buildoperatorofemptyhexblocks() (in module armi.reactor.tests.test_reactors)": [[360, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyHexBlocks"]], "loadtestreactor() (in module armi.reactor.tests.test_reactors)": [[360, "armi.reactor.tests.test_reactors.loadTestReactor"]], "reducetestreactorrings() (in module armi.reactor.tests.test_reactors)": [[360, "armi.reactor.tests.test_reactors.reduceTestReactorRings"]], "test_add() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[360, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_add"]], "test_addmorenodes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMoreNodes"]], "test_addmultiplecores() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMultipleCores"]], "test_applythermalexpansion_coreconstruct() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_applyThermalExpansion_CoreConstruct"]], "test_buildmanualzones() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZones"]], "test_buildmanualzonesempty() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZonesEmpty"]], "test_coresfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_coreSfp"]], "test_countblocksoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_countBlocksOfType"]], "test_countfuelaxialblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_countFuelAxialBlocks"]], "test_createassemblyoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfType"]], "test_createassemblyoftypeexpandedcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfTypeExpandedCore"]], "test_createfreshfeed() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_createFreshFeed"]], "test_differentnuclidemodels() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_differentNuclideModels"]], "test_factorysortsetting() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_factorySortSetting"]], "test_findallaxialmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints"]], "test_findallaxialmeshpoints_wsubmesh() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints_wSubmesh"]], "test_findallazimeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAziMeshPoints"]], "test_findallmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllMeshPoints"]], "test_findallradmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllRadMeshPoints"]], "test_findaxialmeshindexof() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAxialMeshIndexOf"]], "test_findneighbors() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_findNeighbors"]], "test_findneighborscartesian() (armi.reactor.tests.test_reactors.cartesianreactorneighbortests method)": [[360, "armi.reactor.tests.test_reactors.CartesianReactorNeighborTests.test_findNeighborsCartesian"]], "test_genassembliesaddedthiscycle() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_genAssembliesAddedThisCycle"]], "test_genblocksbylocname() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_genBlocksByLocName"]], "test_geomtype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_geomType"]], "test_getallxssuffixes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAllXsSuffixes"]], "test_getassembliesincircularring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInCircularRing"]], "test_getassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInHexRing"]], "test_getassembliesinsquarering() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[360, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssembliesInSquareRing"]], "test_getassembliesonsymmetryline() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesOnSymmetryLine"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[360, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssemblyPitch"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyPitch"]], "test_getassemblywithloc() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithLoc"]], "test_getassemblywithname() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithName"]], "test_getavgtemp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAvgTemp"]], "test_getblocksbyindices() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getBlocksByIndices"]], "test_getdominantmaterial() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getDominantMaterial"]], "test_getfirstfuelblockaxialnode() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFirstFuelBlockAxialNode"]], "test_getfluxvector() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFluxVector"]], "test_getfuelbottomheight() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFuelBottomHeight"]], "test_getgridbounds() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getGridBounds"]], "test_getmass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMass"]], "test_getmaxassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxAssembliesInHexRing"]], "test_getmaxnumpins() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxNumPins"]], "test_getminimumpercentfluxinfuel() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMinimumPercentFluxInFuel"]], "test_getnozzletypes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNozzleTypes"]], "test_getnuclidecategories() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNuclideCategories"]], "test_getnuclidecategorieslogging() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[360, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getNuclideCategoriesLogging"]], "test_getnumassemblieswithallringsfilledout() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOut"]], "test_getnumassemblieswithallringsfilledoutbipass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOutBipass"]], "test_getnumenergygroups() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumEnergyGroups"]], "test_getnumrings() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumRings"]], "test_getreactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getReactor"]], "test_getscalarevolution() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getScalarEvolution"]], "test_getsetparameters() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSetParameters"]], "test_getsymmetryfactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSymmetryFactor"]], "test_gettotalparam() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_getTotalParam"]], "test_growtofullcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_growToFullCore"]], "test_ifmissingspatialgrid() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_ifMissingSpatialGrid"]], "test_ispickleable() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_isPickleable"]], "test_locations() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_locations"]], "test_nonuniformassems() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_nonUniformAssems"]], "test_normalizenames() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_normalizeNames"]], "test_pincoordsallblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_pinCoordsAllBlocks"]], "test_removeassembliesinring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRing"]], "test_removeassembliesinringbycount() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingByCount"]], "test_removeassembliesinringhex() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingHex"]], "test_removeassembly() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembly"]], "test_removeassemblynosfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssemblyNoSfp"]], "test_restorereactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_restoreReactor"]], "test_saveallflux() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_saveAllFlux"]], "test_setb10voloncreation() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_setB10VolOnCreation"]], "test_setpitchuniform() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPitchUniform"]], "test_setpowerifnecessary() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPowerIfNecessary"]], "test_sortassembyring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortAssemByRing"]], "test_sortchildren() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortChildren"]], "test_updateblockbolheights_dbload() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_updateBlockBOLHeights_DBLoad"]], "test_whennoassemblies() (armi.reactor.tests.test_reactors.hexreactortests method)": [[360, "armi.reactor.tests.test_reactors.HexReactorTests.test_whenNoAssemblies"]], "testrztreactor (class in armi.reactor.tests.test_rz_reactors)": [[361, "armi.reactor.tests.test_rz_reactors.TestRZTReactor"]], "testrztreactormodern (class in armi.reactor.tests.test_rz_reactors)": [[361, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors": [[361, "module-armi.reactor.tests.test_rz_reactors"]], "test_findallmeshpoints() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[361, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_findAllMeshPoints"]], "test_loadrzt() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[361, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_loadRZT"]], "test_loadrzt_reactor() (armi.reactor.tests.test_rz_reactors.testrztreactormodern method)": [[361, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern.test_loadRZT_reactor"]], "testzone (class in armi.reactor.tests.test_zones)": [[362, "armi.reactor.tests.test_zones.TestZone"]], "testzones (class in armi.reactor.tests.test_zones)": [[362, "armi.reactor.tests.test_zones.TestZones"]], "armi.reactor.tests.test_zones": [[362, "module-armi.reactor.tests.test_zones"]], "test_additem() (armi.reactor.tests.test_zones.testzone method)": [[362, "armi.reactor.tests.test_zones.TestZone.test_addItem"]], "test_additems() (armi.reactor.tests.test_zones.testzone method)": [[362, "armi.reactor.tests.test_zones.TestZone.test_addItems"]], "test_addloc() (armi.reactor.tests.test_zones.testzone method)": [[362, "armi.reactor.tests.test_zones.TestZone.test_addLoc"]], "test_addlocs() (armi.reactor.tests.test_zones.testzone method)": [[362, "armi.reactor.tests.test_zones.TestZone.test_addLocs"]], "test_blocks() (armi.reactor.tests.test_zones.testzone method)": [[362, "armi.reactor.tests.test_zones.TestZone.test_blocks"]], "test_dictionaryinterface() (armi.reactor.tests.test_zones.testzones method)": [[362, "armi.reactor.tests.test_zones.TestZones.test_dictionaryInterface"]], "test_findzoneitisin() (armi.reactor.tests.test_zones.testzones method)": [[362, "armi.reactor.tests.test_zones.TestZones.test_findZoneItIsIn"]], "test_getalllocations() (armi.reactor.tests.test_zones.testzones method)": [[362, "armi.reactor.tests.test_zones.TestZones.test_getAllLocations"]], "test_getzonelocations() (armi.reactor.tests.test_zones.testzones method)": [[362, "armi.reactor.tests.test_zones.TestZones.test_getZoneLocations"]], "test_iteration() (armi.reactor.tests.test_zones.testzone method)": [[362, "armi.reactor.tests.test_zones.TestZone.test_iteration"]], "test_removeitem() (armi.reactor.tests.test_zones.testzone method)": [[362, "armi.reactor.tests.test_zones.TestZone.test_removeItem"]], "test_removeitems() (armi.reactor.tests.test_zones.testzone method)": [[362, "armi.reactor.tests.test_zones.TestZone.test_removeItems"]], "test_removeloc() (armi.reactor.tests.test_zones.testzone method)": [[362, "armi.reactor.tests.test_zones.TestZone.test_removeLoc"]], "test_removelocs() (armi.reactor.tests.test_zones.testzone method)": [[362, "armi.reactor.tests.test_zones.TestZone.test_removeLocs"]], "test_repr() (armi.reactor.tests.test_zones.testzone method)": [[362, "armi.reactor.tests.test_zones.TestZone.test_repr"]], "test_sortzones() (armi.reactor.tests.test_zones.testzones method)": [[362, "armi.reactor.tests.test_zones.TestZones.test_sortZones"]], "test_summary() (armi.reactor.tests.test_zones.testzones method)": [[362, "armi.reactor.tests.test_zones.TestZones.test_summary"]], "valid_types (armi.reactor.zones.zone attribute)": [[363, "armi.reactor.zones.Zone.VALID_TYPES"]], "zone (class in armi.reactor.zones)": [[363, "armi.reactor.zones.Zone"]], "zones (class in armi.reactor.zones)": [[363, "armi.reactor.zones.Zones"]], "additem() (armi.reactor.zones.zone method)": [[363, "armi.reactor.zones.Zone.addItem"]], "additems() (armi.reactor.zones.zone method)": [[363, "armi.reactor.zones.Zone.addItems"]], "addloc() (armi.reactor.zones.zone method)": [[363, "armi.reactor.zones.Zone.addLoc"]], "addlocs() (armi.reactor.zones.zone method)": [[363, "armi.reactor.zones.Zone.addLocs"]], "addzone() (armi.reactor.zones.zones method)": [[363, "armi.reactor.zones.Zones.addZone"]], "addzones() (armi.reactor.zones.zones method)": [[363, "armi.reactor.zones.Zones.addZones"]], "armi.reactor.zones": [[363, "module-armi.reactor.zones"]], "checkduplicates() (armi.reactor.zones.zones method)": [[363, "armi.reactor.zones.Zones.checkDuplicates"]], "findzoneitisin() (armi.reactor.zones.zones method)": [[363, "armi.reactor.zones.Zones.findZoneItIsIn"]], "getalllocations() (armi.reactor.zones.zones method)": [[363, "armi.reactor.zones.Zones.getAllLocations"]], "getzonelocations() (armi.reactor.zones.zones method)": [[363, "armi.reactor.zones.Zones.getZoneLocations"]], "names (armi.reactor.zones.zones property)": [[363, "armi.reactor.zones.Zones.names"]], "removeitem() (armi.reactor.zones.zone method)": [[363, "armi.reactor.zones.Zone.removeItem"]], "removeitems() (armi.reactor.zones.zone method)": [[363, "armi.reactor.zones.Zone.removeItems"]], "removeloc() (armi.reactor.zones.zone method)": [[363, "armi.reactor.zones.Zone.removeLoc"]], "removelocs() (armi.reactor.zones.zone method)": [[363, "armi.reactor.zones.Zone.removeLocs"]], "removezone() (armi.reactor.zones.zones method)": [[363, "armi.reactor.zones.Zones.removeZone"]], "removezones() (armi.reactor.zones.zones method)": [[363, "armi.reactor.zones.Zones.removeZones"]], "sortzones() (armi.reactor.zones.zones method)": [[363, "armi.reactor.zones.Zones.sortZones"]], "summary() (armi.reactor.zones.zones method)": [[363, "armi.reactor.zones.Zones.summary"]], "deduplicationfilter (class in armi.runlog)": [[364, "armi.runLog.DeduplicationFilter"]], "fmt (armi.runlog.runlogger attribute)": [[364, "armi.runLog.RunLogger.FMT"]], "nulllogger (class in armi.runlog)": [[364, "armi.runLog.NullLogger"]], "runlogger (class in armi.runlog)": [[364, "armi.runLog.RunLogger"]], "addhandler() (armi.runlog.nulllogger method)": [[364, "armi.runLog.NullLogger.addHandler"]], "allowstopduplicates() (armi.runlog.runlogger method)": [[364, "armi.runLog.RunLogger.allowStopDuplicates"]], "armi.runlog": [[364, "module-armi.runLog"]], "close() (armi.runlog.runlogger method)": [[364, "armi.runLog.RunLogger.close"]], "close() (in module armi.runlog)": [[364, "armi.runLog.close"]], "concatenatelogs() (in module armi.runlog)": [[364, "armi.runLog.concatenateLogs"]], "createlogdir() (in module armi.runlog)": [[364, "armi.runLog.createLogDir"]], "debug() (in module armi.runlog)": [[364, "armi.runLog.debug"]], "error() (in module armi.runlog)": [[364, "armi.runLog.error"]], "extra() (in module armi.runlog)": [[364, "armi.runLog.extra"]], "filter() (armi.runlog.deduplicationfilter method)": [[364, "armi.runLog.DeduplicationFilter.filter"]], "flush() (armi.runlog.runlogger method)": [[364, "armi.runLog.RunLogger.flush"]], "getduplicatesfilter() (armi.runlog.runlogger method)": [[364, "armi.runLog.RunLogger.getDuplicatesFilter"]], "getverbosity() (in module armi.runlog)": [[364, "armi.runLog.getVerbosity"]], "header() (in module armi.runlog)": [[364, "armi.runLog.header"]], "important() (in module armi.runlog)": [[364, "armi.runLog.important"]], "info() (in module armi.runlog)": [[364, "armi.runLog.info"]], "log() (armi.runlog.runlogger method)": [[364, "armi.runLog.RunLogger.log"]], "logfactory() (in module armi.runlog)": [[364, "armi.runLog.logFactory"]], "raw() (in module armi.runlog)": [[364, "armi.runLog.raw"]], "setverbosity() (armi.runlog.runlogger method)": [[364, "armi.runLog.RunLogger.setVerbosity"]], "setverbosity() (in module armi.runlog)": [[364, "armi.runLog.setVerbosity"]], "warning() (in module armi.runlog)": [[364, "armi.runLog.warning"]], "warningreport() (armi.runlog.runlogger method)": [[364, "armi.runLog.RunLogger.warningReport"]], "warningreport() (in module armi.runlog)": [[364, "armi.runLog.warningReport"]], "write() (armi.runlog.runlogger method)": [[364, "armi.runLog.RunLogger.write"]], "armi.settings": [[365, "module-armi.settings"]], "isboolsetting() (in module armi.settings)": [[365, "armi.settings.isBoolSetting"]], "promptforsettingsfile() (in module armi.settings)": [[365, "armi.settings.promptForSettingsFile"]], "recursivelyloadsettingsfiles() (in module armi.settings)": [[365, "armi.settings.recursivelyLoadSettingsFiles"]], "settings (class in armi.settings.casesettings)": [[366, "armi.settings.caseSettings.Settings"]], "armi.settings.casesettings": [[366, "module-armi.settings.caseSettings"]], "casetitle (armi.settings.casesettings.settings property)": [[366, "armi.settings.caseSettings.Settings.caseTitle"]], "defaultcasetitle (armi.settings.casesettings.settings attribute)": [[366, "armi.settings.caseSettings.Settings.defaultCaseTitle"]], "duplicate() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.duplicate"]], "environmentsettings (armi.settings.casesettings.settings property)": [[366, "armi.settings.caseSettings.Settings.environmentSettings"]], "failonload() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.failOnLoad"]], "getsetting() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.getSetting"]], "getsettingssetbyuser() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.getSettingsSetByUser"]], "initlogverbosity() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.initLogVerbosity"]], "inputdirectory (armi.settings.casesettings.settings property)": [[366, "armi.settings.caseSettings.Settings.inputDirectory"]], "items() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.items"]], "keys() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.keys"]], "loadfrominputfile() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.loadFromInputFile"]], "loadfromstring() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.loadFromString"]], "modified() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.modified"]], "registeruserplugins() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.registerUserPlugins"]], "reverttodefaults() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.revertToDefaults"]], "setmoduleverbosities() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.setModuleVerbosities"]], "updateenvironmentsettingsfrom() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.updateEnvironmentSettingsFrom"]], "values() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.values"]], "writetoyamlfile() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.writeToYamlFile"]], "writetoyamlstream() (armi.settings.casesettings.settings method)": [[366, "armi.settings.caseSettings.Settings.writeToYamlStream"]], "armi.settings.fwsettings": [[367, "module-armi.settings.fwSettings"]], "getframeworksettings() (in module armi.settings.fwsettings)": [[367, "armi.settings.fwSettings.getFrameworkSettings"]], "armi.settings.fwsettings.databasesettings": [[368, "module-armi.settings.fwSettings.databaseSettings"]], "definesettings() (in module armi.settings.fwsettings.databasesettings)": [[368, "armi.settings.fwSettings.databaseSettings.defineSettings"]], "armi.settings.fwsettings.globalsettings": [[369, "module-armi.settings.fwSettings.globalSettings"]], "definesettings() (in module armi.settings.fwsettings.globalsettings)": [[369, "armi.settings.fwSettings.globalSettings.defineSettings"]], "armi.settings.fwsettings.reportsettings": [[370, "module-armi.settings.fwSettings.reportSettings"]], "definesettings() (in module armi.settings.fwsettings.reportsettings)": [[370, "armi.settings.fwSettings.reportSettings.defineSettings"]], "tightcouplingsettingdef (class in armi.settings.fwsettings.tightcouplingsettings)": [[371, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef"]], "tightcouplingsettings (class in armi.settings.fwsettings.tightcouplingsettings)": [[371, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettings"]], "armi.settings.fwsettings.tightcouplingsettings": [[371, "module-armi.settings.fwSettings.tightCouplingSettings"]], "dump() (armi.settings.fwsettings.tightcouplingsettings.tightcouplingsettingdef method)": [[371, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef.dump"]], "serializetightcouplingsettings() (in module armi.settings.fwsettings.tightcouplingsettings)": [[371, "armi.settings.fwSettings.tightCouplingSettings.serializeTightCouplingSettings"]], "tightcouplingsettingsvalidator() (in module armi.settings.fwsettings.tightcouplingsettings)": [[371, "armi.settings.fwSettings.tightCouplingSettings.tightCouplingSettingsValidator"]], "default (class in armi.settings.setting)": [[372, "armi.settings.setting.Default"]], "flaglistsetting (class in armi.settings.setting)": [[372, "armi.settings.setting.FlagListSetting"]], "option (class in armi.settings.setting)": [[372, "armi.settings.setting.Option"]], "setting (class in armi.settings.setting)": [[372, "armi.settings.setting.Setting"]], "addoption() (armi.settings.setting.setting method)": [[372, "armi.settings.setting.Setting.addOption"]], "addoptions() (armi.settings.setting.setting method)": [[372, "armi.settings.setting.Setting.addOptions"]], "armi.settings.setting": [[372, "module-armi.settings.setting"]], "changedefault() (armi.settings.setting.setting method)": [[372, "armi.settings.setting.Setting.changeDefault"]], "containedtype (armi.settings.setting.setting property)": [[372, "armi.settings.setting.Setting.containedType"]], "default (armi.settings.setting.setting property)": [[372, "armi.settings.setting.Setting.default"]], "dump() (armi.settings.setting.flaglistsetting method)": [[372, "armi.settings.setting.FlagListSetting.dump"]], "dump() (armi.settings.setting.setting method)": [[372, "armi.settings.setting.Setting.dump"]], "getcustomattributes() (armi.settings.setting.setting method)": [[372, "armi.settings.setting.Setting.getCustomAttributes"]], "getdefaultattributes() (armi.settings.setting.setting method)": [[372, "armi.settings.setting.Setting.getDefaultAttributes"]], "isdefault() (armi.settings.setting.setting method)": [[372, "armi.settings.setting.Setting.isDefault"]], "offdefault (armi.settings.setting.setting property)": [[372, "armi.settings.setting.Setting.offDefault"]], "option (armi.settings.setting.option attribute)": [[372, "armi.settings.setting.Option.option"]], "reverttodefault() (armi.settings.setting.setting method)": [[372, "armi.settings.setting.Setting.revertToDefault"]], "schema() (armi.settings.setting.flaglistsetting static method)": [[372, "armi.settings.setting.FlagListSetting.schema"]], "setvalue() (armi.settings.setting.setting method)": [[372, "armi.settings.setting.Setting.setValue"]], "settingname (armi.settings.setting.default attribute)": [[372, "armi.settings.setting.Default.settingName"]], "settingname (armi.settings.setting.option attribute)": [[372, "armi.settings.setting.Option.settingName"]], "underlyingtype (armi.settings.setting.setting property)": [[372, "armi.settings.setting.Setting.underlyingType"]], "value (armi.settings.setting.default attribute)": [[372, "armi.settings.setting.Default.value"]], "value (armi.settings.setting.setting property)": [[372, "armi.settings.setting.Setting.value"]], "custom (armi.settings.settingsio.roots attribute)": [[373, "armi.settings.settingsIO.Roots.CUSTOM"]], "roots (class in armi.settings.settingsio)": [[373, "armi.settings.settingsIO.Roots"]], "runlogpromptcancel": [[373, "armi.settings.settingsIO.RunLogPromptCancel"]], "runlogpromptunresolvable": [[373, "armi.settings.settingsIO.RunLogPromptUnresolvable"]], "settingrenamer (class in armi.settings.settingsio)": [[373, "armi.settings.settingsIO.SettingRenamer"]], "settingsreader (class in armi.settings.settingsio)": [[373, "armi.settings.settingsIO.SettingsReader"]], "settingsreader.settingsinputformat (class in armi.settings.settingsio)": [[373, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat"]], "settingswriter (class in armi.settings.settingsio)": [[373, "armi.settings.settingsIO.SettingsWriter"]], "version (armi.settings.settingsio.roots attribute)": [[373, "armi.settings.settingsIO.Roots.VERSION"]], "yaml (armi.settings.settingsio.settingsreader.settingsinputformat attribute)": [[373, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.YAML"]], "armi.settings.settingsio": [[373, "module-armi.settings.settingsIO"]], "fromext() (armi.settings.settingsio.settingsreader.settingsinputformat class method)": [[373, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.fromExt"]], "prompt() (in module armi.settings.settingsio)": [[373, "armi.settings.settingsIO.prompt"]], "readfromfile() (armi.settings.settingsio.settingsreader method)": [[373, "armi.settings.settingsIO.SettingsReader.readFromFile"]], "readfromstream() (armi.settings.settingsio.settingsreader method)": [[373, "armi.settings.settingsIO.SettingsReader.readFromStream"]], "renamesetting() (armi.settings.settingsio.settingrenamer method)": [[373, "armi.settings.settingsIO.SettingRenamer.renameSetting"]], "writeyaml() (armi.settings.settingsio.settingswriter method)": [[373, "armi.settings.settingsIO.SettingsWriter.writeYaml"]], "inspector (class in armi.settings.settingsvalidation)": [[374, "armi.settings.settingsValidation.Inspector"]], "no_action() (armi.settings.settingsvalidation.inspector static method)": [[374, "armi.settings.settingsValidation.Inspector.NO_ACTION"]], "query (class in armi.settings.settingsvalidation)": [[374, "armi.settings.settingsValidation.Query"]], "addquery() (armi.settings.settingsvalidation.inspector method)": [[374, "armi.settings.settingsValidation.Inspector.addQuery"]], "addquerybadlocationwilllikelyfail() (armi.settings.settingsvalidation.inspector method)": [[374, "armi.settings.settingsValidation.Inspector.addQueryBadLocationWillLikelyFail"]], "addquerycurrentsettingmaynotsupportfeatures() (armi.settings.settingsvalidation.inspector method)": [[374, "armi.settings.settingsValidation.Inspector.addQueryCurrentSettingMayNotSupportFeatures"]], "armi.settings.settingsvalidation": [[374, "module-armi.settings.settingsValidation"]], "createqueryrevertbadpathtodefault() (in module armi.settings.settingsvalidation)": [[374, "armi.settings.settingsValidation.createQueryRevertBadPathToDefault"]], "iscorrective() (armi.settings.settingsvalidation.query method)": [[374, "armi.settings.settingsValidation.Query.isCorrective"]], "resolve() (armi.settings.settingsvalidation.query method)": [[374, "armi.settings.settingsValidation.Query.resolve"]], "run() (armi.settings.settingsvalidation.inspector method)": [[374, "armi.settings.settingsValidation.Inspector.run"]], "validateversion() (in module armi.settings.settingsvalidation)": [[374, "armi.settings.settingsValidation.validateVersion"]], "armi.settings.tests": [[375, "module-armi.settings.tests"]], "testinspector (class in armi.settings.tests.test_inspectors)": [[376, "armi.settings.tests.test_inspectors.TestInspector"]], "armi.settings.tests.test_inspectors": [[376, "module-armi.settings.tests.test_inspectors"]], "test_assigncs() (armi.settings.tests.test_inspectors.testinspector method)": [[376, "armi.settings.tests.test_inspectors.TestInspector.test_assignCS"]], "test_callablecorrectioncheck() (armi.settings.tests.test_inspectors.testinspector method)": [[376, "armi.settings.tests.test_inspectors.TestInspector.test_callableCorrectionCheck"]], "test_changeofcs() (armi.settings.tests.test_inspectors.testinspector method)": [[376, "armi.settings.tests.test_inspectors.TestInspector.test_changeOfCS"]], "test_checkforbothsimpleanddetailedcyclesinputs() (armi.settings.tests.test_inspectors.testinspector method)": [[376, "armi.settings.tests.test_inspectors.TestInspector.test_checkForBothSimpleAndDetailedCyclesInputs"]], "test_correctcyclestozeroburnup() (armi.settings.tests.test_inspectors.testinspector method)": [[376, "armi.settings.tests.test_inspectors.TestInspector.test_correctCyclesToZeroBurnup"]], "test_createqueryrevertbadpathtodefault() (armi.settings.tests.test_inspectors.testinspector method)": [[376, "armi.settings.tests.test_inspectors.TestInspector.test_createQueryRevertBadPathToDefault"]], "test_noncorrectivequery() (armi.settings.tests.test_inspectors.testinspector method)": [[376, "armi.settings.tests.test_inspectors.TestInspector.test_nonCorrectiveQuery"]], "test_overwritesettingscorrectivequery() (armi.settings.tests.test_inspectors.testinspector method)": [[376, "armi.settings.tests.test_inspectors.TestInspector.test_overwriteSettingsCorrectiveQuery"]], "test_query() (armi.settings.tests.test_inspectors.testinspector method)": [[376, "armi.settings.tests.test_inspectors.TestInspector.test_query"]], "dummysettingplugin1 (class in armi.settings.tests.test_settings)": [[377, "armi.settings.tests.test_settings.DummySettingPlugin1"]], "dummysettingplugin2 (class in armi.settings.tests.test_settings)": [[377, "armi.settings.tests.test_settings.DummySettingPlugin2"]], "pluginaddsoptions (class in armi.settings.tests.test_settings)": [[377, "armi.settings.tests.test_settings.PluginAddsOptions"]], "testaddingoptions (class in armi.settings.tests.test_settings)": [[377, "armi.settings.tests.test_settings.TestAddingOptions"]], "testflaglistsetting (class in armi.settings.tests.test_settings)": [[377, "armi.settings.tests.test_settings.TestFlagListSetting"]], "testsettings (class in armi.settings.tests.test_settings)": [[377, "armi.settings.tests.test_settings.TestSettings"]], "testsettings2 (class in armi.settings.tests.test_settings)": [[377, "armi.settings.tests.test_settings.TestSettings2"]], "testsettingsutils (class in armi.settings.tests.test_settings)": [[377, "armi.settings.tests.test_settings.TestSettingsUtils"]], "testsettingsvalidationutils (class in armi.settings.tests.test_settings)": [[377, "armi.settings.tests.test_settings.TestSettingsValidationUtils"]], "armi.settings.tests.test_settings": [[377, "module-armi.settings.tests.test_settings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin1 static method)": [[377, "armi.settings.tests.test_settings.DummySettingPlugin1.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin2 static method)": [[377, "armi.settings.tests.test_settings.DummySettingPlugin2.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.pluginaddsoptions static method)": [[377, "armi.settings.tests.test_settings.PluginAddsOptions.defineSettings"]], "test_addingoptions() (armi.settings.tests.test_settings.testaddingoptions method)": [[377, "armi.settings.tests.test_settings.TestAddingOptions.test_addingOptions"]], "test_copysetting() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_copySetting"]], "test_copysettingnotdefault() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_copySettingNotDefault"]], "test_csworks() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_csWorks"]], "test_default() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_default"]], "test_empty() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_empty"]], "test_flaglistsetting() (armi.settings.tests.test_settings.testflaglistsetting method)": [[377, "armi.settings.tests.test_settings.TestFlagListSetting.test_flagListSetting"]], "test_getfailures() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_getFailures"]], "test_getsettingssetbyuser() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_getSettingsSetByUser"]], "test_invalidflaglisttypeerror() (armi.settings.tests.test_settings.testflaglistsetting method)": [[377, "armi.settings.tests.test_settings.TestFlagListSetting.test_invalidFlagListTypeError"]], "test_listcoercion() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_listCoercion"]], "test_listsmutable() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_listsMutable"]], "test_metadata() (armi.settings.tests.test_settings.testsettings method)": [[377, "armi.settings.tests.test_settings.TestSettings.test_metaData"]], "test_modified() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_modified"]], "test_pluginsettings() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_pluginSettings"]], "test_pluginvalidatorsarediscovered() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_pluginValidatorsAreDiscovered"]], "test_prompt() (armi.settings.tests.test_settings.testsettingsutils method)": [[377, "armi.settings.tests.test_settings.TestSettingsUtils.test_prompt"]], "test_recursivescan() (armi.settings.tests.test_settings.testsettingsutils method)": [[377, "armi.settings.tests.test_settings.TestSettingsUtils.test_recursiveScan"]], "test_schemacheckstype() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_schemaChecksType"]], "test_setmoduleverbosities() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_setModuleVerbosities"]], "test_settingisokaytograb() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_settingIsOkayToGrab"]], "test_typedetection() (armi.settings.tests.test_settings.testsettings2 method)": [[377, "armi.settings.tests.test_settings.TestSettings2.test_typeDetection"]], "test_updateenvironmentsettingsfrom() (armi.settings.tests.test_settings.testsettings method)": [[377, "armi.settings.tests.test_settings.TestSettings.test_updateEnvironmentSettingsFrom"]], "test_validateversion() (armi.settings.tests.test_settings.testsettingsvalidationutils method)": [[377, "armi.settings.tests.test_settings.TestSettingsValidationUtils.test_validateVersion"]], "mockentrypoint (class in armi.settings.tests.test_settingsio)": [[378, "armi.settings.tests.test_settingsIO.MockEntryPoint"]], "settingargstests (class in armi.settings.tests.test_settingsio)": [[378, "armi.settings.tests.test_settingsIO.SettingArgsTests"]], "settingsfailuretests (class in armi.settings.tests.test_settingsio)": [[378, "armi.settings.tests.test_settingsIO.SettingsFailureTests"]], "settingsreadertests (class in armi.settings.tests.test_settingsio)": [[378, "armi.settings.tests.test_settingsIO.SettingsReaderTests"]], "settingsrenametests (class in armi.settings.tests.test_settingsio)": [[378, "armi.settings.tests.test_settingsIO.SettingsRenameTests"]], "settingswritertests (class in armi.settings.tests.test_settingsio)": [[378, "armi.settings.tests.test_settingsIO.SettingsWriterTests"]], "armi.settings.tests.test_settingsio": [[378, "module-armi.settings.tests.test_settingsIO"]], "name (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[378, "armi.settings.tests.test_settingsIO.MockEntryPoint.name"]], "settingsargument (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[378, "armi.settings.tests.test_settingsIO.MockEntryPoint.settingsArgument"]], "testsettings (armi.settings.tests.test_settingsio.settingsrenametests attribute)": [[378, "armi.settings.tests.test_settingsIO.SettingsRenameTests.testSettings"]], "test_basicsettingsreader() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_basicSettingsReader"]], "test_cannotloadsettingsafterparsingcommandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[378, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_cannotLoadSettingsAfterParsingCommandLineSetting"]], "test_collidingrenames() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_collidingRenames"]], "test_commandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[378, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_commandLineSetting"]], "test_errorsettingswriter() (armi.settings.tests.test_settingsio.settingswritertests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_errorSettingsWriter"]], "test_invalidfile() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_invalidFile"]], "test_loadfromyamlfailsonbadnames() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_loadFromYamlFailsOnBadNames"]], "test_readfromfile() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_readFromFile"]], "test_rename() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_rename"]], "test_settingsobjsetting() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_settingsObjSetting"]], "test_writefull() (armi.settings.tests.test_settingsio.settingswritertests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeFull"]], "test_writemedium() (armi.settings.tests.test_settingsio.settingswritertests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeMedium"]], "test_writeshort() (armi.settings.tests.test_settingsio.settingswritertests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeShort"]], "test_writeyaml() (armi.settings.tests.test_settingsio.settingswritertests method)": [[378, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeYaml"]], "armitesthelper (class in armi.tests)": [[379, "armi.tests.ArmiTestHelper"]], "fixture (class in armi.tests)": [[379, "armi.tests.Fixture"]], "armi.tests": [[379, "module-armi.tests"]], "comparefileslinebyline() (armi.tests.armitesthelper method)": [[379, "armi.tests.ArmiTestHelper.compareFilesLineByLine"]], "comparelines() (armi.tests.armitesthelper static method)": [[379, "armi.tests.ArmiTestHelper.compareLines"]], "fixture() (in module armi.tests)": [[379, "armi.tests.fixture"]], "getemptycartesianreactor() (in module armi.tests)": [[379, "armi.tests.getEmptyCartesianReactor"]], "getemptyhexreactor() (in module armi.tests)": [[379, "armi.tests.getEmptyHexReactor"]], "rebaselinetextcomparisons() (in module armi.tests)": [[379, "armi.tests.rebaselineTextComparisons"]], "requires_fixture() (in module armi.tests)": [[379, "armi.tests.requires_fixture"]], "bufferlog (class in armi.tests.mockrunlogs)": [[380, "armi.tests.mockRunLogs.BufferLog"]], "logcounter (class in armi.tests.mockrunlogs)": [[380, "armi.tests.mockRunLogs.LogCounter"]], "armi.tests.mockrunlogs": [[380, "module-armi.tests.mockRunLogs"]], "clearsinglewarnings() (armi.tests.mockrunlogs.bufferlog method)": [[380, "armi.tests.mockRunLogs.BufferLog.clearSingleWarnings"]], "emptystdout() (armi.tests.mockrunlogs.bufferlog method)": [[380, "armi.tests.mockRunLogs.BufferLog.emptyStdout"]], "getstderrvalue() (armi.tests.mockrunlogs.bufferlog method)": [[380, "armi.tests.mockRunLogs.BufferLog.getStderrValue"]], "getstdout() (armi.tests.mockrunlogs.bufferlog method)": [[380, "armi.tests.mockRunLogs.BufferLog.getStdout"]], "log() (armi.tests.mockrunlogs.bufferlog method)": [[380, "armi.tests.mockRunLogs.BufferLog.log"]], "log() (armi.tests.mockrunlogs.logcounter method)": [[380, "armi.tests.mockRunLogs.LogCounter.log"]], "equilibriumshuffler (class in armi.tests.refsmallreactorshufflelogic)": [[381, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler"]], "armi.tests.refsmallreactorshufflelogic": [[381, "module-armi.tests.refSmallReactorShuffleLogic"]], "chooseswaps() (armi.tests.refsmallreactorshufflelogic.equilibriumshuffler method)": [[381, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler.chooseSwaps"]], "getfactorlist() (in module armi.tests.refsmallreactorshufflelogic)": [[381, "armi.tests.refSmallReactorShuffleLogic.getFactorList"]], "testapps (class in armi.tests.test_apps)": [[382, "armi.tests.test_apps.TestApps"]], "testarmihighlevel (class in armi.tests.test_apps)": [[382, "armi.tests.test_apps.TestArmiHighLevel"]], "testplugin1 (class in armi.tests.test_apps)": [[382, "armi.tests.test_apps.TestPlugin1"]], "testplugin2 (class in armi.tests.test_apps)": [[382, "armi.tests.test_apps.TestPlugin2"]], "testplugin3 (class in armi.tests.test_apps)": [[382, "armi.tests.test_apps.TestPlugin3"]], "testplugin4 (class in armi.tests.test_apps)": [[382, "armi.tests.test_apps.TestPlugin4"]], "armi.tests.test_apps": [[382, "module-armi.tests.test_apps"]], "defineparameterrenames() (armi.tests.test_apps.testplugin1 static method)": [[382, "armi.tests.test_apps.TestPlugin1.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin2 static method)": [[382, "armi.tests.test_apps.TestPlugin2.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin3 static method)": [[382, "armi.tests.test_apps.TestPlugin3.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin4 static method)": [[382, "armi.tests.test_apps.TestPlugin4.defineParameterRenames"]], "test_disablefutureconfigures() (armi.tests.test_apps.testapps method)": [[382, "armi.tests.test_apps.TestApps.test_disableFutureConfigures"]], "test_getdefaultpluginmanager() (armi.tests.test_apps.testarmihighlevel method)": [[382, "armi.tests.test_apps.TestArmiHighLevel.test_getDefaultPluginManager"]], "test_getparamrenames() (armi.tests.test_apps.testapps method)": [[382, "armi.tests.test_apps.TestApps.test_getParamRenames"]], "test_getparamrenamesinvalids() (armi.tests.test_apps.testapps method)": [[382, "armi.tests.test_apps.TestApps.test_getParamRenamesInvalids"]], "test_getsettings() (armi.tests.test_apps.testapps method)": [[382, "armi.tests.test_apps.TestApps.test_getSettings"]], "test_isstablereleaseversion() (armi.tests.test_apps.testapps method)": [[382, "armi.tests.test_apps.TestApps.test_isStableReleaseVersion"]], "test_main() (armi.tests.test_apps.testarmihighlevel method)": [[382, "armi.tests.test_apps.TestArmiHighLevel.test_main"]], "test_overconfigured() (armi.tests.test_apps.testarmihighlevel method)": [[382, "armi.tests.test_apps.TestArmiHighLevel.test_overConfigured"]], "test_registerpluginflags() (armi.tests.test_apps.testapps method)": [[382, "armi.tests.test_apps.TestApps.test_registerPluginFlags"]], "test_splashtext() (armi.tests.test_apps.testapps method)": [[382, "armi.tests.test_apps.TestApps.test_splashText"]], "test_splashtextdifferentapp() (armi.tests.test_apps.testapps method)": [[382, "armi.tests.test_apps.TestApps.test_splashTextDifferentApp"]], "test_version() (armi.tests.test_apps.testapps method)": [[382, "armi.tests.test_apps.TestApps.test_version"]], "testarmitesthelper (class in armi.tests.test_armitesthelper)": [[383, "armi.tests.test_armiTestHelper.TestArmiTestHelper"]], "armi.tests.test_armitesthelper": [[383, "module-armi.tests.test_armiTestHelper"]], "test_comparefilesfail() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[383, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesFail"]], "test_comparefilessucceedfalsenegative() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[383, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucceedFalseNegative"]], "test_comparefilessucess() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[383, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucess"]], "cartesianreactortests (class in armi.tests.test_cartesian)": [[384, "armi.tests.test_cartesian.CartesianReactorTests"]], "armi.tests.test_cartesian": [[384, "module-armi.tests.test_cartesian"]], "test_custom() (armi.tests.test_cartesian.cartesianreactortests method)": [[384, "armi.tests.test_cartesian.CartesianReactorTests.test_custom"]], "testcontextserial (class in armi.tests.test_context)": [[385, "armi.tests.test_context.TestContextSerial"]], "armi.tests.test_context": [[385, "module-armi.tests.test_context"]], "test_nonnonedata() (armi.tests.test_context.testcontextserial method)": [[385, "armi.tests.test_context.TestContextSerial.test_nonNoneData"]], "test_rank() (armi.tests.test_context.testcontextserial method)": [[385, "armi.tests.test_context.TestContextSerial.test_rank"]], "dummyinterface (class in armi.tests.test_interfaces)": [[386, "armi.tests.test_interfaces.DummyInterface"]], "testcodeinterface (class in armi.tests.test_interfaces)": [[386, "armi.tests.test_interfaces.TestCodeInterface"]], "testtextprocessor (class in armi.tests.test_interfaces)": [[386, "armi.tests.test_interfaces.TestTextProcessor"]], "testtightcoupler (class in armi.tests.test_interfaces)": [[386, "armi.tests.test_interfaces.TestTightCoupler"]], "armi.tests.test_interfaces": [[386, "module-armi.tests.test_interfaces"]], "function (armi.tests.test_interfaces.dummyinterface attribute)": [[386, "armi.tests.test_interfaces.DummyInterface.function"]], "name (armi.tests.test_interfaces.dummyinterface attribute)": [[386, "armi.tests.test_interfaces.DummyInterface.name"]], "test_coupleractive() (armi.tests.test_interfaces.testtightcoupler method)": [[386, "armi.tests.test_interfaces.TestTightCoupler.test_couplerActive"]], "test_distributable() (armi.tests.test_interfaces.testcodeinterface method)": [[386, "armi.tests.test_interfaces.TestCodeInterface.test_distributable"]], "test_duplicate() (armi.tests.test_interfaces.testcodeinterface method)": [[386, "armi.tests.test_interfaces.TestCodeInterface.test_duplicate"]], "test_enabled() (armi.tests.test_interfaces.testcodeinterface method)": [[386, "armi.tests.test_interfaces.TestCodeInterface.test_enabled"]], "test_fsearch() (armi.tests.test_interfaces.testtextprocessor method)": [[386, "armi.tests.test_interfaces.TestTextProcessor.test_fsearch"]], "test_fsearch_text() (armi.tests.test_interfaces.testtextprocessor method)": [[386, "armi.tests.test_interfaces.TestTextProcessor.test_fsearch_text"]], "test_getlistdimension() (armi.tests.test_interfaces.testtightcoupler method)": [[386, "armi.tests.test_interfaces.TestTightCoupler.test_getListDimension"]], "test_isconverged() (armi.tests.test_interfaces.testtightcoupler method)": [[386, "armi.tests.test_interfaces.TestTightCoupler.test_isConverged"]], "test_isconvergedruntimeerror() (armi.tests.test_interfaces.testtightcoupler method)": [[386, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedRuntimeError"]], "test_isconvergedvalueerror() (armi.tests.test_interfaces.testtightcoupler method)": [[386, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedValueError"]], "test_isrequesteddetailpoint() (armi.tests.test_interfaces.testcodeinterface method)": [[386, "armi.tests.test_interfaces.TestCodeInterface.test_isRequestedDetailPoint"]], "test_namecontains() (armi.tests.test_interfaces.testcodeinterface method)": [[386, "armi.tests.test_interfaces.TestCodeInterface.test_nameContains"]], "test_predistributestate() (armi.tests.test_interfaces.testcodeinterface method)": [[386, "armi.tests.test_interfaces.TestCodeInterface.test_preDistributeState"]], "test_storepreviousiterationvalue() (armi.tests.test_interfaces.testtightcoupler method)": [[386, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValue"]], "test_storepreviousiterationvalueexception() (armi.tests.test_interfaces.testtightcoupler method)": [[386, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValueException"]], "c5g7reactortests (class in armi.tests.test_lwrinputs)": [[387, "armi.tests.test_lwrInputs.C5G7ReactorTests"]], "armi.tests.test_lwrinputs": [[387, "module-armi.tests.test_lwrInputs"]], "test_loadc5g7() (armi.tests.test_lwrinputs.c5g7reactortests method)": [[387, "armi.tests.test_lwrInputs.C5G7ReactorTests.test_loadC5G7"]], "mpiitertests (class in armi.tests.test_mpiactions)": [[388, "armi.tests.test_mpiActions.MpiIterTests"]], "queueactionstests (class in armi.tests.test_mpiactions)": [[388, "armi.tests.test_mpiActions.QueueActionsTests"]], "armi.tests.test_mpiactions": [[388, "module-armi.tests.test_mpiActions"]], "passer() (in module armi.tests.test_mpiactions)": [[388, "armi.tests.test_mpiActions.passer"]], "test_diagnosepickleerrortestreactor() (armi.tests.test_mpiactions.mpiitertests method)": [[388, "armi.tests.test_mpiActions.MpiIterTests.test_diagnosePickleErrorTestReactor"]], "test_disableforexclusivetasks() (armi.tests.test_mpiactions.queueactionstests method)": [[388, "armi.tests.test_mpiActions.QueueActionsTests.test_disableForExclusiveTasks"]], "test_excessprocesses() (armi.tests.test_mpiactions.mpiitertests method)": [[388, "armi.tests.test_mpiActions.MpiIterTests.test_excessProcesses"]], "test_makequeue() (armi.tests.test_mpiactions.queueactionstests method)": [[388, "armi.tests.test_mpiActions.QueueActionsTests.test_makeQueue"]], "test_mpiiter() (armi.tests.test_mpiactions.mpiitertests method)": [[388, "armi.tests.test_mpiActions.MpiIterTests.test_mpiIter"]], "test_parallel() (armi.tests.test_mpiactions.mpiitertests method)": [[388, "armi.tests.test_mpiActions.MpiIterTests.test_parallel"]], "test_perfectbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[388, "armi.tests.test_mpiActions.MpiIterTests.test_perfectBalancing"]], "test_runactionsdistributestateaction() (armi.tests.test_mpiactions.mpiitertests method)": [[388, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributeStateAction"]], "test_runactionsdistributionaction() (armi.tests.test_mpiactions.mpiitertests method)": [[388, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributionAction"]], "test_serialgather() (armi.tests.test_mpiactions.mpiitertests method)": [[388, "armi.tests.test_mpiActions.MpiIterTests.test_serialGather"]], "test_typicalbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[388, "armi.tests.test_mpiActions.MpiIterTests.test_typicalBalancing"]], "bcastaction1 (class in armi.tests.test_mpifeatures)": [[389, "armi.tests.test_mpiFeatures.BcastAction1"]], "bcastaction2 (class in armi.tests.test_mpifeatures)": [[389, "armi.tests.test_mpiFeatures.BcastAction2"]], "failinginterface1 (class in armi.tests.test_mpifeatures)": [[389, "armi.tests.test_mpiFeatures.FailingInterface1"]], "failinginterface2 (class in armi.tests.test_mpifeatures)": [[389, "armi.tests.test_mpiFeatures.FailingInterface2"]], "failinginterface3 (class in armi.tests.test_mpifeatures)": [[389, "armi.tests.test_mpiFeatures.FailingInterface3"]], "mockinterface (class in armi.tests.test_mpifeatures)": [[389, "armi.tests.test_mpiFeatures.MockInterface"]], "mpidistributestatetests (class in armi.tests.test_mpifeatures)": [[389, "armi.tests.test_mpiFeatures.MpiDistributeStateTests"]], "mpioperatortests (class in armi.tests.test_mpifeatures)": [[389, "armi.tests.test_mpiFeatures.MpiOperatorTests"]], "mpipathtoolstests (class in armi.tests.test_mpifeatures)": [[389, "armi.tests.test_mpiFeatures.MpiPathToolsTests"]], "testcontextmpi (class in armi.tests.test_mpifeatures)": [[389, "armi.tests.test_mpiFeatures.TestContextMpi"]], "armi.tests.test_mpifeatures": [[389, "module-armi.tests.test_mpiFeatures"]], "fail() (armi.tests.test_mpifeatures.failinginterface3 method)": [[389, "armi.tests.test_mpiFeatures.FailingInterface3.fail"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface1 method)": [[389, "armi.tests.test_mpiFeatures.FailingInterface1.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface2 method)": [[389, "armi.tests.test_mpiFeatures.FailingInterface2.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface3 method)": [[389, "armi.tests.test_mpiFeatures.FailingInterface3.interactEveryNode"]], "interactinit() (armi.tests.test_mpifeatures.mockinterface method)": [[389, "armi.tests.test_mpiFeatures.MockInterface.interactInit"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction1 method)": [[389, "armi.tests.test_mpiFeatures.BcastAction1.invokeHook"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction2 method)": [[389, "armi.tests.test_mpiFeatures.BcastAction2.invokeHook"]], "name (armi.tests.test_mpifeatures.failinginterface1 attribute)": [[389, "armi.tests.test_mpiFeatures.FailingInterface1.name"]], "name (armi.tests.test_mpifeatures.failinginterface2 attribute)": [[389, "armi.tests.test_mpiFeatures.FailingInterface2.name"]], "name (armi.tests.test_mpifeatures.failinginterface3 attribute)": [[389, "armi.tests.test_mpiFeatures.FailingInterface3.name"]], "name (armi.tests.test_mpifeatures.mockinterface attribute)": [[389, "armi.tests.test_mpiFeatures.MockInterface.name"]], "test_basicoperatormpi() (armi.tests.test_mpifeatures.mpioperatortests method)": [[389, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_basicOperatorMPI"]], "test_cleanpathmpi() (armi.tests.test_mpifeatures.mpipathtoolstests method)": [[389, "armi.tests.test_mpiFeatures.MpiPathToolsTests.test_cleanPathMpi"]], "test_compileresults() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[389, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_compileResults"]], "test_distributeinterfaces() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[389, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeInterfaces"]], "test_distributereactor() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[389, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeReactor"]], "test_distributesettings() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[389, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeSettings"]], "test_distributestate() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[389, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeState"]], "test_finalizeinteract() (armi.tests.test_mpifeatures.mpioperatortests method)": [[389, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_finalizeInteract"]], "test_nonnonedata() (armi.tests.test_mpifeatures.testcontextmpi method)": [[389, "armi.tests.test_mpiFeatures.TestContextMpi.test_nonNoneData"]], "test_primarycritical() (armi.tests.test_mpifeatures.mpioperatortests method)": [[389, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryCritical"]], "test_primaryexception() (armi.tests.test_mpifeatures.mpioperatortests method)": [[389, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryException"]], "test_rank() (armi.tests.test_mpifeatures.testcontextmpi method)": [[389, "armi.tests.test_mpiFeatures.TestContextMpi.test_rank"]], "workeroperate() (armi.tests.test_mpifeatures.failinginterface3 method)": [[389, "armi.tests.test_mpiFeatures.FailingInterface3.workerOperate"]], "mocksyncpc (class in armi.tests.test_mpiparameters)": [[390, "armi.tests.test_mpiParameters.MockSyncPC"]], "synchronizationtests (class in armi.tests.test_mpiparameters)": [[390, "armi.tests.test_mpiParameters.SynchronizationTests"]], "armi.tests.test_mpiparameters": [[390, "module-armi.tests.test_mpiParameters"]], "makecomp() (in module armi.tests.test_mpiparameters)": [[390, "armi.tests.test_mpiParameters.makeComp"]], "pdefs (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[390, "armi.tests.test_mpiParameters.MockSyncPC.pDefs"]], "pb (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[390, "armi.tests.test_mpiParameters.MockSyncPC.pb"]], "test_conflictsmaintainwithstateretainer() (armi.tests.test_mpiparameters.synchronizationtests method)": [[390, "armi.tests.test_mpiParameters.SynchronizationTests.test_conflictsMaintainWithStateRetainer"]], "test_noconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[390, "armi.tests.test_mpiParameters.SynchronizationTests.test_noConflicts"]], "test_withconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[390, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflicts"]], "test_withconflictsbutsamevalue() (armi.tests.test_mpiparameters.synchronizationtests method)": [[390, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflictsButSameValue"]], "notebooktests (class in armi.tests.test_notebooks)": [[391, "armi.tests.test_notebooks.NotebookTests"]], "armi.tests.test_notebooks": [[391, "module-armi.tests.test_notebooks"]], "runnotebook() (in module armi.tests.test_notebooks)": [[391, "armi.tests.test_notebooks.runNotebook"]], "test_rundatamodel() (armi.tests.test_notebooks.notebooktests method)": [[391, "armi.tests.test_notebooks.NotebookTests.test_runDataModel"]], "test_runparamsweep() (armi.tests.test_notebooks.notebooktests method)": [[391, "armi.tests.test_notebooks.NotebookTests.test_runParamSweep"]], "beforereactorplugin (class in armi.tests.test_plugins)": [[392, "armi.tests.test_plugins.BeforeReactorPlugin"]], "pluginflags1 (class in armi.tests.test_plugins)": [[392, "armi.tests.test_plugins.PluginFlags1"]], "sillyaxialexpansionchanger (class in armi.tests.test_plugins)": [[392, "armi.tests.test_plugins.SillyAxialExpansionChanger"]], "sillyaxialplugin (class in armi.tests.test_plugins)": [[392, "armi.tests.test_plugins.SillyAxialPlugin"]], "testplugin (class in armi.tests.test_plugins)": [[392, "armi.tests.test_plugins.TestPlugin"]], "testpluginbasics (class in armi.tests.test_plugins)": [[392, "armi.tests.test_plugins.TestPluginBasics"]], "testpluginregistration (class in armi.tests.test_plugins)": [[392, "armi.tests.test_plugins.TestPluginRegistration"]], "armi.tests.test_plugins": [[392, "module-armi.tests.test_plugins"]], "beforereactorconstruction() (armi.tests.test_plugins.beforereactorplugin static method)": [[392, "armi.tests.test_plugins.BeforeReactorPlugin.beforeReactorConstruction"]], "defineflags() (armi.tests.test_plugins.pluginflags1 static method)": [[392, "armi.tests.test_plugins.PluginFlags1.defineFlags"]], "getaxialexpansionchanger() (armi.tests.test_plugins.sillyaxialplugin static method)": [[392, "armi.tests.test_plugins.SillyAxialPlugin.getAxialExpansionChanger"]], "plugin (armi.tests.test_plugins.testplugin attribute)": [[392, "armi.tests.test_plugins.TestPlugin.plugin"]], "test_axialexpansionhook() (armi.tests.test_plugins.testpluginregistration method)": [[392, "armi.tests.test_plugins.TestPluginRegistration.test_axialExpansionHook"]], "test_beforereactorconstructionhook() (armi.tests.test_plugins.testpluginregistration method)": [[392, "armi.tests.test_plugins.TestPluginRegistration.test_beforeReactorConstructionHook"]], "test_defineblueprintssections() (armi.tests.test_plugins.testplugin method)": [[392, "armi.tests.test_plugins.TestPlugin.test_defineBlueprintsSections"]], "test_defineflags() (armi.tests.test_plugins.testpluginregistration method)": [[392, "armi.tests.test_plugins.TestPluginRegistration.test_defineFlags"]], "test_defineparameters() (armi.tests.test_plugins.testpluginbasics method)": [[392, "armi.tests.test_plugins.TestPluginBasics.test_defineParameters"]], "test_exposeinterfaces() (armi.tests.test_plugins.testplugin method)": [[392, "armi.tests.test_plugins.TestPlugin.test_exposeInterfaces"]], "test_exposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[392, "armi.tests.test_plugins.TestPluginBasics.test_exposeInterfaces"]], "test_passivedbloadplugin() (armi.tests.test_plugins.testpluginregistration method)": [[392, "armi.tests.test_plugins.TestPluginRegistration.test_passiveDBLoadPlugin"]], "test_pluginsexposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[392, "armi.tests.test_plugins.TestPluginBasics.test_pluginsExposeInterfaces"]], "testrunlog (class in armi.tests.test_runlog)": [[393, "armi.tests.test_runLog.TestRunLog"]], "testrunlogger (class in armi.tests.test_runlog)": [[393, "armi.tests.test_runLog.TestRunLogger"]], "armi.tests.test_runlog": [[393, "module-armi.tests.test_runLog"]], "test_allowstopduplicates() (armi.tests.test_runlog.testrunlogger method)": [[393, "armi.tests.test_runLog.TestRunLogger.test_allowStopDuplicates"]], "test_callingstartlogmultipletimes() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_callingStartLogMultipleTimes"]], "test_closelogging() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_closeLogging"]], "test_concatenatelogs() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_concatenateLogs"]], "test_createlogdir() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_createLogDir"]], "test_getduplicatesfilter() (armi.tests.test_runlog.testrunlogger method)": [[393, "armi.tests.test_runLog.TestRunLogger.test_getDuplicatesFilter"]], "test_getwhitespace() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_getWhiteSpace"]], "test_invalidsetverbositybystring() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_invalidSetVerbosityByString"]], "test_parentrunlogging() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_parentRunLogging"]], "test_setverbosity() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_setVerbosity"]], "test_setverbositybeforestartlog() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_setVerbosityBeforeStartLog"]], "test_setverbosityfrominteger() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromInteger"]], "test_setverbosityfromstring() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromString"]], "test_verbosityoutofrange() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_verbosityOutOfRange"]], "test_warningreport() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_warningReport"]], "test_warningreportinvalid() (armi.tests.test_runlog.testrunlog method)": [[393, "armi.tests.test_runLog.TestRunLog.test_warningReportInvalid"]], "test_write() (armi.tests.test_runlog.testrunlogger method)": [[393, "armi.tests.test_runLog.TestRunLogger.test_write"]], "testcomparefiles (class in armi.tests.test_tests)": [[394, "armi.tests.test_tests.TestCompareFiles"]], "armi.tests.test_tests": [[394, "module-armi.tests.test_tests"]], "test_comparefileline() (armi.tests.test_tests.testcomparefiles method)": [[394, "armi.tests.test_tests.TestCompareFiles.test_compareFileLine"]], "testuserplugins (class in armi.tests.test_user_plugins)": [[395, "armi.tests.test_user_plugins.TestUserPlugins"]], "upinterface (class in armi.tests.test_user_plugins)": [[395, "armi.tests.test_user_plugins.UpInterface"]], "userpluginbaddefineparameterrenames (class in armi.tests.test_user_plugins)": [[395, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames"]], "userpluginbaddefinessettings (class in armi.tests.test_user_plugins)": [[395, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings"]], "userpluginflags (class in armi.tests.test_user_plugins)": [[395, "armi.tests.test_user_plugins.UserPluginFlags"]], "userpluginflags2 (class in armi.tests.test_user_plugins)": [[395, "armi.tests.test_user_plugins.UserPluginFlags2"]], "userpluginflags3 (class in armi.tests.test_user_plugins)": [[395, "armi.tests.test_user_plugins.UserPluginFlags3"]], "userpluginonprocesscoreloading (class in armi.tests.test_user_plugins)": [[395, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading"]], "userpluginwithinterface (class in armi.tests.test_user_plugins)": [[395, "armi.tests.test_user_plugins.UserPluginWithInterface"]], "armi.tests.test_user_plugins": [[395, "module-armi.tests.test_user_plugins"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags static method)": [[395, "armi.tests.test_user_plugins.UserPluginFlags.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags2 static method)": [[395, "armi.tests.test_user_plugins.UserPluginFlags2.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags3 static method)": [[395, "armi.tests.test_user_plugins.UserPluginFlags3.defineFlags"]], "defineparameterrenames() (armi.tests.test_user_plugins.userpluginbaddefineparameterrenames static method)": [[395, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames.defineParameterRenames"]], "definesettings() (armi.tests.test_user_plugins.userpluginbaddefinessettings static method)": [[395, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings.defineSettings"]], "exposeinterfaces() (armi.tests.test_user_plugins.userpluginwithinterface static method)": [[395, "armi.tests.test_user_plugins.UserPluginWithInterface.exposeInterfaces"]], "interacteverynode() (armi.tests.test_user_plugins.upinterface method)": [[395, "armi.tests.test_user_plugins.UpInterface.interactEveryNode"]], "name (armi.tests.test_user_plugins.upinterface attribute)": [[395, "armi.tests.test_user_plugins.UpInterface.name"]], "onprocesscoreloading() (armi.tests.test_user_plugins.userpluginonprocesscoreloading static method)": [[395, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading.onProcessCoreLoading"]], "test_registerrepeateduserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[395, "armi.tests.test_user_plugins.TestUserPlugins.test_registerRepeatedUserPlugins"]], "test_registeruserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[395, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPlugins"]], "test_registeruserpluginsabspath() (armi.tests.test_user_plugins.testuserplugins method)": [[395, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsAbsPath"]], "test_registeruserpluginsfromsettings() (armi.tests.test_user_plugins.testuserplugins method)": [[395, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsFromSettings"]], "test_userpluginonprocesscoreloading() (armi.tests.test_user_plugins.testuserplugins method)": [[395, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginOnProcessCoreLoading"]], "test_userpluginwithinterfaces() (armi.tests.test_user_plugins.testuserplugins method)": [[395, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginWithInterfaces"]], "test_userpluginsflags() (armi.tests.test_user_plugins.testuserplugins method)": [[395, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginsFlags"]], "test_validateuserpluginlimitations() (armi.tests.test_user_plugins.testuserplugins method)": [[395, "armi.tests.test_user_plugins.TestUserPlugins.test_validateUserPluginLimitations"]], "mergeabledict (class in armi.utils)": [[396, "armi.utils.MergeableDict"]], "mypickler (class in armi.utils)": [[396, "armi.utils.MyPickler"]], "armi.utils": [[396, "module-armi.utils"]], "capstrlen() (in module armi.utils)": [[396, "armi.utils.capStrLen"]], "classesinhierarchy() (in module armi.utils)": [[396, "armi.utils.classesInHierarchy"]], "copywithoutblocking() (in module armi.utils)": [[396, "armi.utils.copyWithoutBlocking"]], "createformattedstrwithdelimiter() (in module armi.utils)": [[396, "armi.utils.createFormattedStrWithDelimiter"]], "dotestpickleonallcontents2() (in module armi.utils)": [[396, "armi.utils.doTestPickleOnAllContents2"]], "getavailabilityfactors() (in module armi.utils)": [[396, "armi.utils.getAvailabilityFactors"]], "getburnsteps() (in module armi.utils)": [[396, "armi.utils.getBurnSteps"]], "getcumulativenodenum() (in module armi.utils)": [[396, "armi.utils.getCumulativeNodeNum"]], "getcyclelengths() (in module armi.utils)": [[396, "armi.utils.getCycleLengths"]], "getcyclenames() (in module armi.utils)": [[396, "armi.utils.getCycleNames"]], "getcyclenodefromcumulativenode() (in module armi.utils)": [[396, "armi.utils.getCycleNodeFromCumulativeNode"]], "getcyclenodefromcumulativestep() (in module armi.utils)": [[396, "armi.utils.getCycleNodeFromCumulativeStep"]], "getfilesha1hash() (in module armi.utils)": [[396, "armi.utils.getFileSHA1Hash"]], "getmaxburnsteps() (in module armi.utils)": [[396, "armi.utils.getMaxBurnSteps"]], "getnodespercycle() (in module armi.utils)": [[396, "armi.utils.getNodesPerCycle"]], "getpowerfractions() (in module armi.utils)": [[396, "armi.utils.getPowerFractions"]], "getprevioustimenode() (in module armi.utils)": [[396, "armi.utils.getPreviousTimeNode"]], "getsteplengths() (in module armi.utils)": [[396, "armi.utils.getStepLengths"]], "hasburnup() (in module armi.utils)": [[396, "armi.utils.hasBurnup"]], "list2str() (in module armi.utils)": [[396, "armi.utils.list2str"]], "merge() (armi.utils.mergeabledict method)": [[396, "armi.utils.MergeableDict.merge"]], "plotmatrix() (in module armi.utils)": [[396, "armi.utils.plotMatrix"]], "prependtolist() (in module armi.utils)": [[396, "armi.utils.prependToList"]], "safecopy() (in module armi.utils)": [[396, "armi.utils.safeCopy"]], "save() (armi.utils.mypickler method)": [[396, "armi.utils.MyPickler.save"]], "slantsplit() (in module armi.utils)": [[396, "armi.utils.slantSplit"]], "trypickleonallcontents() (in module armi.utils)": [[396, "armi.utils.tryPickleOnAllContents"]], "trypickleonallcontents3() (in module armi.utils)": [[396, "armi.utils.tryPickleOnAllContents3"]], "username() (in module armi.utils)": [[396, "armi.utils.userName"]], "asciimap (class in armi.utils.asciimaps)": [[397, "armi.utils.asciimaps.AsciiMap"]], "asciimapcartesian (class in armi.utils.asciimaps)": [[397, "armi.utils.asciimaps.AsciiMapCartesian"]], "asciimaphexfullflatsup (class in armi.utils.asciimaps)": [[397, "armi.utils.asciimaps.AsciiMapHexFullFlatsUp"]], "asciimaphexfulltipsup (class in armi.utils.asciimaps)": [[397, "armi.utils.asciimaps.AsciiMapHexFullTipsUp"]], "asciimaphexthirdflatsup (class in armi.utils.asciimaps)": [[397, "armi.utils.asciimaps.AsciiMapHexThirdFlatsUp"]], "armi.utils.asciimaps": [[397, "module-armi.utils.asciimaps"]], "asciilabelbyindices (armi.utils.asciimaps.asciimap attribute)": [[397, "armi.utils.asciimaps.AsciiMap.asciiLabelByIndices"]], "asciilines (armi.utils.asciimaps.asciimap attribute)": [[397, "armi.utils.asciimaps.AsciiMap.asciiLines"]], "asciimapfromgeomanddomain() (in module armi.utils.asciimaps)": [[397, "armi.utils.asciimaps.asciiMapFromGeomAndDomain"]], "asciioffsets (armi.utils.asciimaps.asciimap attribute)": [[397, "armi.utils.asciimaps.AsciiMap.asciiOffsets"]], "fromreactor() (armi.utils.asciimaps.asciimap static method)": [[397, "armi.utils.asciimaps.AsciiMap.fromReactor"]], "gridcontentstoascii() (armi.utils.asciimaps.asciimap method)": [[397, "armi.utils.asciimaps.AsciiMap.gridContentsToAscii"]], "items() (armi.utils.asciimaps.asciimap method)": [[397, "armi.utils.asciimaps.AsciiMap.items"]], "keys() (armi.utils.asciimaps.asciimap method)": [[397, "armi.utils.asciimaps.AsciiMap.keys"]], "readascii() (armi.utils.asciimaps.asciimap method)": [[397, "armi.utils.asciimaps.AsciiMap.readAscii"]], "writeascii() (armi.utils.asciimaps.asciimap method)": [[397, "armi.utils.asciimaps.AsciiMap.writeAscii"]], "mastertimer (class in armi.utils.codetiming)": [[398, "armi.utils.codeTiming.MasterTimer"]], "armi.utils.codetiming": [[398, "module-armi.utils.codeTiming"]], "endtimer() (armi.utils.codetiming.mastertimer static method)": [[398, "armi.utils.codeTiming.MasterTimer.endTimer"]], "getactivetimers() (armi.utils.codetiming.mastertimer static method)": [[398, "armi.utils.codeTiming.MasterTimer.getActiveTimers"]], "getmastertimer() (armi.utils.codetiming.mastertimer static method)": [[398, "armi.utils.codeTiming.MasterTimer.getMasterTimer"]], "getmastertimer() (in module armi.utils.codetiming)": [[398, "armi.utils.codeTiming.getMasterTimer"]], "gettimer() (armi.utils.codetiming.mastertimer static method)": [[398, "armi.utils.codeTiming.MasterTimer.getTimer"]], "report() (armi.utils.codetiming.mastertimer static method)": [[398, "armi.utils.codeTiming.MasterTimer.report"]], "startall() (armi.utils.codetiming.mastertimer static method)": [[398, "armi.utils.codeTiming.MasterTimer.startAll"]], "starttimer() (armi.utils.codetiming.mastertimer static method)": [[398, "armi.utils.codeTiming.MasterTimer.startTimer"]], "stopall() (armi.utils.codetiming.mastertimer static method)": [[398, "armi.utils.codeTiming.MasterTimer.stopAll"]], "time() (armi.utils.codetiming.mastertimer static method)": [[398, "armi.utils.codeTiming.MasterTimer.time"]], "timed() (in module armi.utils.codetiming)": [[398, "armi.utils.codeTiming.timed"]], "timeline() (armi.utils.codetiming.mastertimer static method)": [[398, "armi.utils.codeTiming.MasterTimer.timeline"]], "inputerror": [[399, "armi.utils.customExceptions.InputError"]], "invalidsettingsfileerror": [[399, "armi.utils.customExceptions.InvalidSettingsFileError"]], "invalidsettingsstopprocess": [[399, "armi.utils.customExceptions.InvalidSettingsStopProcess"]], "nonexistentsetting": [[399, "armi.utils.customExceptions.NonexistentSetting"]], "nonexistentsettingsfileerror": [[399, "armi.utils.customExceptions.NonexistentSettingsFileError"]], "settingexception": [[399, "armi.utils.customExceptions.SettingException"]], "armi.utils.customexceptions": [[399, "module-armi.utils.customExceptions"]], "important() (in module armi.utils.customexceptions)": [[399, "armi.utils.customExceptions.important"]], "info() (in module armi.utils.customexceptions)": [[399, "armi.utils.customExceptions.info"]], "warn() (in module armi.utils.customexceptions)": [[399, "armi.utils.customExceptions.warn"]], "warn_when_root() (in module armi.utils.customexceptions)": [[399, "armi.utils.customExceptions.warn_when_root"]], "applyisotopicsmix() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.applyIsotopicsMix"]], "armi.utils.densitytools": [[400, "module-armi.utils.densityTools"]], "calculatemassdensity() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.calculateMassDensity"]], "calculatenumberdensity() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.calculateNumberDensity"]], "expandelementalmassfracstonuclides() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.expandElementalMassFracsToNuclides"]], "expandelementalnuclidemassfracs() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.expandElementalNuclideMassFracs"]], "filternuclidelist() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.filterNuclideList"]], "formatmaterialcard() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.formatMaterialCard"]], "getchemicals() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.getChemicals"]], "getmassfractions() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.getMassFractions"]], "getmassingrams() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.getMassInGrams"]], "getndensfrommasses() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.getNDensFromMasses"]], "normalizenuclidelist() (in module armi.utils.densitytools)": [[400, "armi.utils.densityTools.normalizeNuclideList"]], "directorychanger (class in armi.utils.directorychangers)": [[401, "armi.utils.directoryChangers.DirectoryChanger"]], "forcedcreationdirectorychanger (class in armi.utils.directorychangers)": [[401, "armi.utils.directoryChangers.ForcedCreationDirectoryChanger"]], "getrandomdirectory() (armi.utils.directorychangers.temporarydirectorychanger class method)": [[401, "armi.utils.directoryChangers.TemporaryDirectoryChanger.GetRandomDirectory"]], "temporarydirectorychanger (class in armi.utils.directorychangers)": [[401, "armi.utils.directoryChangers.TemporaryDirectoryChanger"]], "armi.utils.directorychangers": [[401, "module-armi.utils.directoryChangers"]], "close() (armi.utils.directorychangers.directorychanger method)": [[401, "armi.utils.directoryChangers.DirectoryChanger.close"]], "directorychangerfactory() (in module armi.utils.directorychangers)": [[401, "armi.utils.directoryChangers.directoryChangerFactory"]], "movefiles() (armi.utils.directorychangers.directorychanger method)": [[401, "armi.utils.directoryChangers.DirectoryChanger.moveFiles"]], "open() (armi.utils.directorychangers.directorychanger method)": [[401, "armi.utils.directoryChangers.DirectoryChanger.open"]], "retrievefiles() (armi.utils.directorychangers.directorychanger method)": [[401, "armi.utils.directoryChangers.DirectoryChanger.retrieveFiles"]], "mpidirectorychanger (class in armi.utils.directorychangersmpi)": [[402, "armi.utils.directoryChangersMpi.MpiDirectoryChanger"]], "armi.utils.directorychangersmpi": [[402, "module-armi.utils.directoryChangersMpi"]], "close() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[402, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.close"]], "open() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[402, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.open"]], "armi.utils.dynamicimporter": [[403, "module-armi.utils.dynamicImporter"]], "getentirefamilytree() (in module armi.utils.dynamicimporter)": [[403, "armi.utils.dynamicImporter.getEntireFamilyTree"]], "flag (class in armi.utils.flags)": [[404, "armi.utils.flags.Flag"]], "armi.utils.flags": [[404, "module-armi.utils.flags"]], "auto (class in armi.utils.flags)": [[404, "armi.utils.flags.auto"]], "extend() (armi.utils.flags.flag class method)": [[404, "armi.utils.flags.Flag.extend"]], "fields() (armi.utils.flags.flag class method)": [[404, "armi.utils.flags.Flag.fields"]], "from_bytes() (armi.utils.flags.flag class method)": [[404, "armi.utils.flags.Flag.from_bytes"]], "sortedfields() (armi.utils.flags.flag class method)": [[404, "armi.utils.flags.Flag.sortedFields"]], "to_bytes() (armi.utils.flags.flag method)": [[404, "armi.utils.flags.Flag.to_bytes"]], "width() (armi.utils.flags.flag class method)": [[404, "armi.utils.flags.Flag.width"]], "area() (in module armi.utils.hexagon)": [[406, "armi.utils.hexagon.area"]], "armi.utils.hexagon": [[406, "module-armi.utils.hexagon"]], "corners() (in module armi.utils.hexagon)": [[406, "armi.utils.hexagon.corners"]], "getindexofrotatedcell() (in module armi.utils.hexagon)": [[406, "armi.utils.hexagon.getIndexOfRotatedCell"]], "numpositionsinring() (in module armi.utils.hexagon)": [[406, "armi.utils.hexagon.numPositionsInRing"]], "numringstoholdnumcells() (in module armi.utils.hexagon)": [[406, "armi.utils.hexagon.numRingsToHoldNumCells"]], "pitch() (in module armi.utils.hexagon)": [[406, "armi.utils.hexagon.pitch"]], "side() (in module armi.utils.hexagon)": [[406, "armi.utils.hexagon.side"]], "totalpositionsuptoring() (in module armi.utils.hexagon)": [[406, "armi.utils.hexagon.totalPositionsUpToRing"]], "sequence (class in armi.utils.iterables)": [[407, "armi.utils.iterables.Sequence"]], "append() (armi.utils.iterables.sequence method)": [[407, "armi.utils.iterables.Sequence.append"]], "armi.utils.iterables": [[407, "module-armi.utils.iterables"]], "chunk() (in module armi.utils.iterables)": [[407, "armi.utils.iterables.chunk"]], "copy() (armi.utils.iterables.sequence method)": [[407, "armi.utils.iterables.Sequence.copy"]], "drop() (armi.utils.iterables.sequence method)": [[407, "armi.utils.iterables.Sequence.drop"]], "extend() (armi.utils.iterables.sequence method)": [[407, "armi.utils.iterables.Sequence.extend"]], "flatten() (in module armi.utils.iterables)": [[407, "armi.utils.iterables.flatten"]], "packbinarystrings() (in module armi.utils.iterables)": [[407, "armi.utils.iterables.packBinaryStrings"]], "packhexstrings() (in module armi.utils.iterables)": [[407, "armi.utils.iterables.packHexStrings"]], "pivot() (in module armi.utils.iterables)": [[407, "armi.utils.iterables.pivot"]], "select() (armi.utils.iterables.sequence method)": [[407, "armi.utils.iterables.Sequence.select"]], "split() (in module armi.utils.iterables)": [[407, "armi.utils.iterables.split"]], "transform() (armi.utils.iterables.sequence method)": [[407, "armi.utils.iterables.Sequence.transform"]], "unpackbinarystrings() (in module armi.utils.iterables)": [[407, "armi.utils.iterables.unpackBinaryStrings"]], "unpackhexstrings() (in module armi.utils.iterables)": [[407, "armi.utils.iterables.unpackHexStrings"]], "armi.utils.mathematics": [[408, "module-armi.utils.mathematics"]], "average1dwithintolerance() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.average1DWithinTolerance"]], "converttoslice() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.convertToSlice"]], "efmt() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.efmt"]], "expandrepeatedfloats() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.expandRepeatedFloats"]], "findclosest() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.findClosest"]], "findnearestvalue() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.findNearestValue"]], "findnearestvalueandindex() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.findNearestValueAndIndex"]], "fixthreedigitexp() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.fixThreeDigitExp"]], "getfloat() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.getFloat"]], "getstepsfromvalues() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.getStepsFromValues"]], "ismonotonic() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.isMonotonic"]], "linearinterpolation() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.linearInterpolation"]], "minimizescalarfunc() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.minimizeScalarFunc"]], "newtonsmethod() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.newtonsMethod"]], "parabolafrompoints() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.parabolaFromPoints"]], "parabolicinterpolation() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.parabolicInterpolation"]], "relerr() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.relErr"]], "resamplestepwise() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.resampleStepwise"]], "rotatexy() (in module armi.utils.mathematics)": [[408, "armi.utils.mathematics.rotateXY"]], "armi.utils.outputcache": [[409, "module-armi.utils.outputCache"]], "cachecall() (in module armi.utils.outputcache)": [[409, "armi.utils.outputCache.cacheCall"]], "deletecache() (in module armi.utils.outputcache)": [[409, "armi.utils.outputCache.deleteCache"]], "retrieveoutput() (in module armi.utils.outputcache)": [[409, "armi.utils.outputCache.retrieveOutput"]], "store() (in module armi.utils.outputcache)": [[409, "armi.utils.outputCache.store"]], "armi.utils.parsing": [[410, "module-armi.utils.parsing"]], "datetimefromstr() (in module armi.utils.parsing)": [[410, "armi.utils.parsing.datetimeFromStr"]], "parsevalue() (in module armi.utils.parsing)": [[410, "armi.utils.parsing.parseValue"]], "tryliteraleval() (in module armi.utils.parsing)": [[410, "armi.utils.parsing.tryLiteralEval"]], "armi.utils.pathtools": [[411, "module-armi.utils.pathTools"]], "armiabspath() (in module armi.utils.pathtools)": [[411, "armi.utils.pathTools.armiAbsPath"]], "cleanpath() (in module armi.utils.pathtools)": [[411, "armi.utils.pathTools.cleanPath"]], "copyorwarn() (in module armi.utils.pathtools)": [[411, "armi.utils.pathTools.copyOrWarn"]], "importcustompymodule() (in module armi.utils.pathtools)": [[411, "armi.utils.pathTools.importCustomPyModule"]], "isaccessible() (in module armi.utils.pathtools)": [[411, "armi.utils.pathTools.isAccessible"]], "isfilepathnewer() (in module armi.utils.pathtools)": [[411, "armi.utils.pathTools.isFilePathNewer"]], "moduleandattributeexist() (in module armi.utils.pathtools)": [[411, "armi.utils.pathTools.moduleAndAttributeExist"]], "separatemoduleandattribute() (in module armi.utils.pathtools)": [[411, "armi.utils.pathTools.separateModuleAndAttribute"]], "depthslider (class in armi.utils.plotting)": [[412, "armi.utils.plotting.DepthSlider"]], "armi.utils.plotting": [[412, "module-armi.utils.plotting"]], "close() (in module armi.utils.plotting)": [[412, "armi.utils.plotting.close"]], "colorgenerator() (in module armi.utils.plotting)": [[412, "armi.utils.plotting.colorGenerator"]], "makehistogram() (in module armi.utils.plotting)": [[412, "armi.utils.plotting.makeHistogram"]], "next() (armi.utils.plotting.depthslider method)": [[412, "armi.utils.plotting.DepthSlider.next"]], "plotassemblytypes() (in module armi.utils.plotting)": [[412, "armi.utils.plotting.plotAssemblyTypes"]], "plotblockdepthmap() (in module armi.utils.plotting)": [[412, "armi.utils.plotting.plotBlockDepthMap"]], "plotblockdiagram() (in module armi.utils.plotting)": [[412, "armi.utils.plotting.plotBlockDiagram"]], "plotblockflux() (in module armi.utils.plotting)": [[412, "armi.utils.plotting.plotBlockFlux"]], "plotfacemap() (in module armi.utils.plotting)": [[412, "armi.utils.plotting.plotFaceMap"]], "plotnucxs() (in module armi.utils.plotting)": [[412, "armi.utils.plotting.plotNucXs"]], "previous() (armi.utils.plotting.depthslider method)": [[412, "armi.utils.plotting.DepthSlider.previous"]], "set_val() (armi.utils.plotting.depthslider method)": [[412, "armi.utils.plotting.DepthSlider.set_val"]], "updatepagedepthcolor() (armi.utils.plotting.depthslider method)": [[412, "armi.utils.plotting.DepthSlider.updatePageDepthColor"]], "immutablepropertyerror": [[413, "armi.utils.properties.ImmutablePropertyError"]], "areequal() (in module armi.utils.properties)": [[413, "armi.utils.properties.areEqual"]], "armi.utils.properties": [[413, "module-armi.utils.properties"]], "createimmutableproperty() (in module armi.utils.properties)": [[413, "armi.utils.properties.createImmutableProperty"]], "lockimmutableproperties() (in module armi.utils.properties)": [[413, "armi.utils.properties.lockImmutableProperties"]], "numpyhackforequal() (in module armi.utils.properties)": [[413, "armi.utils.properties.numpyHackForEqual"]], "unlockimmutableproperties() (in module armi.utils.properties)": [[413, "armi.utils.properties.unlockImmutableProperties"]], "armi.utils.reportplotting": [[414, "module-armi.utils.reportPlotting"]], "buvstime() (in module armi.utils.reportplotting)": [[414, "armi.utils.reportPlotting.buVsTime"]], "createplotmetadata() (in module armi.utils.reportplotting)": [[414, "armi.utils.reportPlotting.createPlotMetaData"]], "keffvstime() (in module armi.utils.reportplotting)": [[414, "armi.utils.reportPlotting.keffVsTime"]], "movesvscycle() (in module armi.utils.reportplotting)": [[414, "armi.utils.reportPlotting.movesVsCycle"]], "plotaxialprofile() (in module armi.utils.reportplotting)": [[414, "armi.utils.reportPlotting.plotAxialProfile"]], "plotcoreoverviewradar() (in module armi.utils.reportplotting)": [[414, "armi.utils.reportPlotting.plotCoreOverviewRadar"]], "plotreactorperformance() (in module armi.utils.reportplotting)": [[414, "armi.utils.reportPlotting.plotReactorPerformance"]], "valuevstime() (in module armi.utils.reportplotting)": [[414, "armi.utils.reportPlotting.valueVsTime"]], "xshistoryvstime() (in module armi.utils.reportplotting)": [[414, "armi.utils.reportPlotting.xsHistoryVsTime"]], "datarow (class in armi.utils.tabulate)": [[415, "armi.utils.tabulate.DataRow"]], "iterable (class in armi.utils.tabulate)": [[415, "armi.utils.tabulate.Iterable"]], "line (class in armi.utils.tabulate)": [[415, "armi.utils.tabulate.Line"]], "sized (class in armi.utils.tabulate)": [[415, "armi.utils.tabulate.Sized"]], "tableformat (class in armi.utils.tabulate)": [[415, "armi.utils.tabulate.TableFormat"]], "textwrapper (class in armi.utils.tabulate)": [[415, "armi.utils.tabulate.TextWrapper"]], "args (armi.utils.tabulate.partial attribute)": [[415, "armi.utils.tabulate.partial.args"]], "armi.utils.tabulate": [[415, "module-armi.utils.tabulate"]], "begin (armi.utils.tabulate.datarow attribute)": [[415, "armi.utils.tabulate.DataRow.begin"]], "begin (armi.utils.tabulate.line attribute)": [[415, "armi.utils.tabulate.Line.begin"]], "chain (class in armi.utils.tabulate)": [[415, "armi.utils.tabulate.chain"]], "datarow (armi.utils.tabulate.tableformat attribute)": [[415, "armi.utils.tabulate.TableFormat.datarow"]], "end (armi.utils.tabulate.datarow attribute)": [[415, "armi.utils.tabulate.DataRow.end"]], "end (armi.utils.tabulate.line attribute)": [[415, "armi.utils.tabulate.Line.end"]], "fill() (armi.utils.tabulate.textwrapper method)": [[415, "armi.utils.tabulate.TextWrapper.fill"]], "from_iterable() (armi.utils.tabulate.chain method)": [[415, "armi.utils.tabulate.chain.from_iterable"]], "func (armi.utils.tabulate.partial attribute)": [[415, "armi.utils.tabulate.partial.func"]], "headerrow (armi.utils.tabulate.tableformat attribute)": [[415, "armi.utils.tabulate.TableFormat.headerrow"]], "hline (armi.utils.tabulate.line attribute)": [[415, "armi.utils.tabulate.Line.hline"]], "keywords (armi.utils.tabulate.partial attribute)": [[415, "armi.utils.tabulate.partial.keywords"]], "lineabove (armi.utils.tabulate.tableformat attribute)": [[415, "armi.utils.tabulate.TableFormat.lineabove"]], "linebelow (armi.utils.tabulate.tableformat attribute)": [[415, "armi.utils.tabulate.TableFormat.linebelow"]], "linebelowheader (armi.utils.tabulate.tableformat attribute)": [[415, "armi.utils.tabulate.TableFormat.linebelowheader"]], "linebetweenrows (armi.utils.tabulate.tableformat attribute)": [[415, "armi.utils.tabulate.TableFormat.linebetweenrows"]], "namedtuple() (in module armi.utils.tabulate)": [[415, "armi.utils.tabulate.namedtuple"]], "padding (armi.utils.tabulate.tableformat attribute)": [[415, "armi.utils.tabulate.TableFormat.padding"]], "partial (class in armi.utils.tabulate)": [[415, "armi.utils.tabulate.partial"]], "reduce() (in module armi.utils.tabulate)": [[415, "armi.utils.tabulate.reduce"]], "sentence_end_re (armi.utils.tabulate.textwrapper attribute)": [[415, "armi.utils.tabulate.TextWrapper.sentence_end_re"]], "sep (armi.utils.tabulate.datarow attribute)": [[415, "armi.utils.tabulate.DataRow.sep"]], "sep (armi.utils.tabulate.line attribute)": [[415, "armi.utils.tabulate.Line.sep"]], "tabulate() (in module armi.utils.tabulate)": [[415, "armi.utils.tabulate.tabulate"]], "unicode_whitespace_trans (armi.utils.tabulate.textwrapper attribute)": [[415, "armi.utils.tabulate.TextWrapper.unicode_whitespace_trans"]], "uspace (armi.utils.tabulate.textwrapper attribute)": [[415, "armi.utils.tabulate.TextWrapper.uspace"]], "withheaderhide (armi.utils.tabulate.tableformat attribute)": [[415, "armi.utils.tabulate.TableFormat.withHeaderHide"]], "wordsep_re (armi.utils.tabulate.textwrapper attribute)": [[415, "armi.utils.tabulate.TextWrapper.wordsep_re"]], "wordsep_simple_re (armi.utils.tabulate.textwrapper attribute)": [[415, "armi.utils.tabulate.TextWrapper.wordsep_simple_re"]], "wrap() (armi.utils.tabulate.textwrapper method)": [[415, "armi.utils.tabulate.TextWrapper.wrap"]], "x (armi.utils.tabulate.textwrapper attribute)": [[415, "armi.utils.tabulate.TextWrapper.x"]], "zip_longest (class in armi.utils.tabulate)": [[415, "armi.utils.tabulate.zip_longest"]], "armi.utils.tests": [[416, "module-armi.utils.tests"]], "testasciimaps (class in armi.utils.tests.test_asciimaps)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps"]], "armi.utils.tests.test_asciimaps": [[417, "module-armi.utils.tests.test_asciimaps"]], "test_cartesian() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_cartesian"]], "test_flathexbases() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_flatHexBases"]], "test_hexfullcornersup() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullCornersUp"]], "test_hexfullcornersupspotcheck() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullCornersUpSpotCheck"]], "test_hexfullflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlat"]], "test_hexfullflatsup() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlatsUp"]], "test_hexsmallflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexSmallFlat"]], "test_hexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexThird"]], "test_hexwithemptyrow() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithEmptyRow"]], "test_hexwithholes() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithHoles"]], "test_troublesomehexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[417, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_troublesomeHexThird"]], "codetimingtest (class in armi.utils.tests.test_codetiming)": [[418, "armi.utils.tests.test_codeTiming.CodeTimingTest"]], "armi.utils.tests.test_codetiming": [[418, "module-armi.utils.tests.test_codeTiming"]], "test_alternate_usages() (armi.utils.tests.test_codetiming.codetimingtest method)": [[418, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_alternate_usages"]], "test_master() (armi.utils.tests.test_codetiming.codetimingtest method)": [[418, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_master"]], "test_messy_starts_and_stops() (armi.utils.tests.test_codetiming.codetimingtest method)": [[418, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_messy_starts_and_stops"]], "test_method_definitions() (armi.utils.tests.test_codetiming.codetimingtest method)": [[418, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_method_definitions"]], "test_property_access() (armi.utils.tests.test_codetiming.codetimingtest method)": [[418, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_property_access"]], "customexceptiontests (class in armi.utils.tests.test_custom_exceptions)": [[419, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions": [[419, "module-armi.utils.tests.test_custom_exceptions"]], "exampleimportantmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[419, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleImportantMessage"]], "exampleinfomessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[419, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleInfoMessage"]], "examplewarnmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[419, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnMessage"]], "examplewarnwhenrootmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[419, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnWhenRootMessage"]], "test_important_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[419, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_important_decorator"]], "test_info_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[419, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_info_decorator"]], "test_warn_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[419, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_decorator"]], "test_warn_when_root_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[419, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_when_root_decorator"]], "testdensitytools (class in armi.utils.tests.test_densitytools)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools"]], "uraniumoxide (class in armi.utils.tests.test_densitytools)": [[420, "armi.utils.tests.test_densityTools.UraniumOxide"]], "armi.utils.tests.test_densitytools": [[420, "module-armi.utils.tests.test_densityTools"]], "density() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[420, "armi.utils.tests.test_densityTools.UraniumOxide.density"]], "pseudodensity() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[420, "armi.utils.tests.test_densityTools.UraniumOxide.pseudoDensity"]], "test_applyisotopicsmix() (armi.utils.tests.test_densitytools.testdensitytools method)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools.test_applyIsotopicsMix"]], "test_calculatenumberdensity() (armi.utils.tests.test_densitytools.testdensitytools method)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools.test_calculateNumberDensity"]], "test_expandelement() (armi.utils.tests.test_densitytools.testdensitytools method)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElement"]], "test_expandelementalmassfracstonuclides() (armi.utils.tests.test_densitytools.testdensitytools method)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalMassFracsToNuclides"]], "test_expandelementalzeromassfrac() (armi.utils.tests.test_densitytools.testdensitytools method)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalZeroMassFrac"]], "test_formatmaterialcard() (armi.utils.tests.test_densitytools.testdensitytools method)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools.test_formatMaterialCard"]], "test_getchemicals() (armi.utils.tests.test_densitytools.testdensitytools method)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools.test_getChemicals"]], "test_getmassfractions() (armi.utils.tests.test_densitytools.testdensitytools method)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassFractions"]], "test_getmassingrams() (armi.utils.tests.test_densitytools.testdensitytools method)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassInGrams"]], "test_getndensfrommasses() (armi.utils.tests.test_densitytools.testdensitytools method)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools.test_getNDensFromMasses"]], "test_normalizenuclidelist() (armi.utils.tests.test_densitytools.testdensitytools method)": [[420, "armi.utils.tests.test_densityTools.TestDensityTools.test_normalizeNuclideList"]], "expectedexception": [[421, "armi.utils.tests.test_directoryChangers.ExpectedException"]], "testdirectorychangers (class in armi.utils.tests.test_directorychangers)": [[421, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers"]], "armi.utils.tests.test_directorychangers": [[421, "module-armi.utils.tests.test_directoryChangers"]], "test_change_to_nonexisting_fails() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[421, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_fails"]], "test_change_to_nonexisting_works_forced() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[421, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_works_forced"]], "test_exception() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[421, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception"]], "test_exception_disabled() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[421, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception_disabled"]], "test_file_retrieval() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[421, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval"]], "test_file_retrieval_missing_file() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[421, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval_missing_file"]], "test_mpiaction() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[421, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiAction"]], "test_mpiactionfailsonnonexistentpath() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[421, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiActionFailsOnNonexistentPath"]], "test_temporary_cleans() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[421, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_temporary_cleans"]], "revealyourdirectory (class in armi.utils.tests.test_directorychangersmpi)": [[422, "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory"]], "testmpi (class in armi.utils.tests.test_directorychangersmpi)": [[422, "armi.utils.tests.test_directoryChangersMpi.TestMPI"]], "armi.utils.tests.test_directorychangersmpi": [[422, "module-armi.utils.tests.test_directoryChangersMpi"]], "invokehook() (armi.utils.tests.test_directorychangersmpi.revealyourdirectory method)": [[422, "armi.utils.tests.test_directoryChangersMpi.RevealYourDirectory.invokeHook"]], "test_mpidirectorychanger() (armi.utils.tests.test_directorychangersmpi.testmpi method)": [[422, "armi.utils.tests.test_directoryChangersMpi.TestMPI.test_MpiDirectoryChanger"]], "bar (armi.utils.tests.test_flags.exampleflag attribute)": [[423, "armi.utils.tests.test_flags.ExampleFlag.BAR"]], "baz (armi.utils.tests.test_flags.exampleflag attribute)": [[423, "armi.utils.tests.test_flags.ExampleFlag.BAZ"]], "exampleflag (class in armi.utils.tests.test_flags)": [[423, "armi.utils.tests.test_flags.ExampleFlag"]], "foo (armi.utils.tests.test_flags.exampleflag attribute)": [[423, "armi.utils.tests.test_flags.ExampleFlag.FOO"]], "testflag (class in armi.utils.tests.test_flags)": [[423, "armi.utils.tests.test_flags.TestFlag"]], "armi.utils.tests.test_flags": [[423, "module-armi.utils.tests.test_flags"]], "test_auto() (armi.utils.tests.test_flags.testflag method)": [[423, "armi.utils.tests.test_flags.TestFlag.test_auto"]], "test_bitwise() (armi.utils.tests.test_flags.testflag method)": [[423, "armi.utils.tests.test_flags.TestFlag.test_bitwise"]], "test_bool() (armi.utils.tests.test_flags.testflag method)": [[423, "armi.utils.tests.test_flags.TestFlag.test_bool"]], "test_collision_creation() (armi.utils.tests.test_flags.testflag method)": [[423, "armi.utils.tests.test_flags.TestFlag.test_collision_creation"]], "test_collision_extension() (armi.utils.tests.test_flags.testflag method)": [[423, "armi.utils.tests.test_flags.TestFlag.test_collision_extension"]], "test_extend() (armi.utils.tests.test_flags.testflag method)": [[423, "armi.utils.tests.test_flags.TestFlag.test_extend"]], "test_getitem() (armi.utils.tests.test_flags.testflag method)": [[423, "armi.utils.tests.test_flags.TestFlag.test_getitem"]], "test_hashable() (armi.utils.tests.test_flags.testflag method)": [[423, "armi.utils.tests.test_flags.TestFlag.test_hashable"]], "test_inclusion() (armi.utils.tests.test_flags.testflag method)": [[423, "armi.utils.tests.test_flags.TestFlag.test_inclusion"]], "test_iteration() (armi.utils.tests.test_flags.testflag method)": [[423, "armi.utils.tests.test_flags.TestFlag.test_iteration"]], "n_fuzzy_draws (armi.utils.tests.test_hexagon.testhexagon attribute)": [[424, "armi.utils.tests.test_hexagon.TestHexagon.N_FUZZY_DRAWS"]], "testhexagon (class in armi.utils.tests.test_hexagon)": [[424, "armi.utils.tests.test_hexagon.TestHexagon"]], "armi.utils.tests.test_hexagon": [[424, "module-armi.utils.tests.test_hexagon"]], "test_hexagon_area() (armi.utils.tests.test_hexagon.testhexagon method)": [[424, "armi.utils.tests.test_hexagon.TestHexagon.test_hexagon_area"]], "test_indexwithnorotation() (armi.utils.tests.test_hexagon.testhexagon method)": [[424, "armi.utils.tests.test_hexagon.TestHexagon.test_indexWithNoRotation"]], "test_numpositionsinring() (armi.utils.tests.test_hexagon.testhexagon method)": [[424, "armi.utils.tests.test_hexagon.TestHexagon.test_numPositionsInRing"]], "test_positionsuptoring() (armi.utils.tests.test_hexagon.testhexagon method)": [[424, "armi.utils.tests.test_hexagon.TestHexagon.test_positionsUpToRing"]], "test_rotatefuzzy() (armi.utils.tests.test_hexagon.testhexagon method)": [[424, "armi.utils.tests.test_hexagon.TestHexagon.test_rotateFuzzy"]], "test_rotatedcellcenter() (armi.utils.tests.test_hexagon.testhexagon method)": [[424, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellCenter"]], "test_rotatedcellindexerrors() (armi.utils.tests.test_hexagon.testhexagon method)": [[424, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellIndexErrors"]], "test_rotatedcellorientationerrors() (armi.utils.tests.test_hexagon.testhexagon method)": [[424, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedCellOrientationErrors"]], "test_rotatedfirstring() (armi.utils.tests.test_hexagon.testhexagon method)": [[424, "armi.utils.tests.test_hexagon.TestHexagon.test_rotatedFirstRing"]], "testiterables (class in armi.utils.tests.test_iterables)": [[425, "armi.utils.tests.test_iterables.TestIterables"]], "armi.utils.tests.test_iterables": [[425, "module-armi.utils.tests.test_iterables"]], "test_addingsequences() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_addingSequences"]], "test_appendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_appendSequence"]], "test_arraypivot() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_arrayPivot"]], "test_chunk() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_chunk"]], "test_copysequence() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_copySequence"]], "test_extendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_extendSequence"]], "test_flatten() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_flatten"]], "test_listpivot() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_listPivot"]], "test_packingandunpackingbinarystrings() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingBinaryStrings"]], "test_packingandunpackinghexstrings() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingHexStrings"]], "test_sequence() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_sequence"]], "test_sequenceinit() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_sequenceInit"]], "test_split() (armi.utils.tests.test_iterables.testiterables method)": [[425, "armi.utils.tests.test_iterables.TestIterables.test_split"]], "testmath (class in armi.utils.tests.test_mathematics)": [[426, "armi.utils.tests.test_mathematics.TestMath"]], "armi.utils.tests.test_mathematics": [[426, "module-armi.utils.tests.test_mathematics"]], "test_average1dwithintolerance() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinTolerance"]], "test_average1dwithintoleranceinvalid() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinToleranceInvalid"]], "test_converttoslice() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_convertToSlice"]], "test_efmt() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_efmt"]], "test_expandrepeatedfloats() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_expandRepeatedFloats"]], "test_findclosest() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_findClosest"]], "test_findnearestvalue() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_findNearestValue"]], "test_fixthreedigitexp() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_fixThreeDigitExp"]], "test_getfloat() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_getFloat"]], "test_getstepsfromvalues() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_getStepsFromValues"]], "test_ismonotonic() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_isMonotonic"]], "test_linearinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_linearInterpolation"]], "test_minimizescalarfunc() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_minimizeScalarFunc"]], "test_newtonsmethod() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_newtonsMethod"]], "test_parabola() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_parabola"]], "test_parabolicinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_parabolicInterpolation"]], "test_relerr() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_relErr"]], "test_resamplestepwiseavg0() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg0"]], "test_resamplestepwiseavg1() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg1"]], "test_resamplestepwiseavg2() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg2"]], "test_resamplestepwiseavg3() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg3"]], "test_resamplestepwiseavg4() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg4"]], "test_resamplestepwiseavg5() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg5"]], "test_resamplestepwiseavg6() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg6"]], "test_resamplestepwiseavg7() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg7"]], "test_resamplestepwiseavgallnones() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgAllNones"]], "test_resamplestepwiseavgcomplicatednone() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgComplicatedNone"]], "test_resamplestepwiseavgnparray() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArray"]], "test_resamplestepwiseavgnparrayaverage() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArrayAverage"]], "test_resamplestepwiseavgonenone() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgOneNone"]], "test_resamplestepwisesum0() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum0"]], "test_resamplestepwisesum1() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum1"]], "test_resamplestepwisesum2() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum2"]], "test_resamplestepwisesum3() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum3"]], "test_resamplestepwisesum4() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum4"]], "test_resamplestepwisesum5() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum5"]], "test_resamplestepwisesum6() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum6"]], "test_resamplestepwisesum7() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum7"]], "test_resamplestepwisesumallnones() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumAllNones"]], "test_resamplestepwisesumonenone() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumOneNone"]], "test_rotatexy() (armi.utils.tests.test_mathematics.testmath method)": [[426, "armi.utils.tests.test_mathematics.TestMath.test_rotateXY"]], "testoutputcache (class in armi.utils.tests.test_outputcache)": [[427, "armi.utils.tests.test_outputCache.TestOutputCache"]], "armi.utils.tests.test_outputcache": [[427, "module-armi.utils.tests.test_outputCache"]], "test_deletecache() (armi.utils.tests.test_outputcache.testoutputcache method)": [[427, "armi.utils.tests.test_outputCache.TestOutputCache.test_deleteCache"]], "test_getcachedfolder() (armi.utils.tests.test_outputcache.testoutputcache method)": [[427, "armi.utils.tests.test_outputCache.TestOutputCache.test_getCachedFolder"]], "test_hashfiles() (armi.utils.tests.test_outputcache.testoutputcache method)": [[427, "armi.utils.tests.test_outputCache.TestOutputCache.test_hashFiles"]], "test_makeoutputmanifest() (armi.utils.tests.test_outputcache.testoutputcache method)": [[427, "armi.utils.tests.test_outputCache.TestOutputCache.test_makeOutputManifest"]], "test_retrieveoutput() (armi.utils.tests.test_outputcache.testoutputcache method)": [[427, "armi.utils.tests.test_outputCache.TestOutputCache.test_retrieveOutput"]], "literalevaltest (class in armi.utils.tests.test_parsing)": [[428, "armi.utils.tests.test_parsing.LiteralEvalTest"]], "armi.utils.tests.test_parsing": [[428, "module-armi.utils.tests.test_parsing"]], "test_parsevalue() (armi.utils.tests.test_parsing.literalevaltest method)": [[428, "armi.utils.tests.test_parsing.LiteralEvalTest.test_parseValue"]], "test_tryliteraleval() (armi.utils.tests.test_parsing.literalevaltest method)": [[428, "armi.utils.tests.test_parsing.LiteralEvalTest.test_tryLiteralEval"]], "pathtoolstests (class in armi.utils.tests.test_pathtools)": [[429, "armi.utils.tests.test_pathTools.PathToolsTests"]], "armi.utils.tests.test_pathtools": [[429, "module-armi.utils.tests.test_pathTools"]], "test_cleanpathnompi() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[429, "armi.utils.tests.test_pathTools.PathToolsTests.test_cleanPathNoMpi"]], "test_importcustommodule() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[429, "armi.utils.tests.test_pathTools.PathToolsTests.test_importCustomModule"]], "test_isaccessible() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[429, "armi.utils.tests.test_pathTools.PathToolsTests.test_isAccessible"]], "test_isfilepathnewer() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[429, "armi.utils.tests.test_pathTools.PathToolsTests.test_isFilePathNewer"]], "test_moduleandattributeexist() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[429, "armi.utils.tests.test_pathTools.PathToolsTests.test_moduleAndAttributeExist"]], "test_separatemoduleandattribute() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[429, "armi.utils.tests.test_pathTools.PathToolsTests.test_separateModuleAndAttribute"]], "testpatches (class in armi.utils.tests.test_plotting)": [[430, "armi.utils.tests.test_plotting.TestPatches"]], "testplotting (class in armi.utils.tests.test_plotting)": [[430, "armi.utils.tests.test_plotting.TestPlotting"]], "armi.utils.tests.test_plotting": [[430, "module-armi.utils.tests.test_plotting"]], "test_makeassempatches() (armi.utils.tests.test_plotting.testpatches method)": [[430, "armi.utils.tests.test_plotting.TestPatches.test_makeAssemPatches"]], "test_plotassemblytypes() (armi.utils.tests.test_plotting.testplotting method)": [[430, "armi.utils.tests.test_plotting.TestPlotting.test_plotAssemblyTypes"]], "test_plotblockflux() (armi.utils.tests.test_plotting.testplotting method)": [[430, "armi.utils.tests.test_plotting.TestPlotting.test_plotBlockFlux"]], "test_plotcartesianblock() (armi.utils.tests.test_plotting.testplotting method)": [[430, "armi.utils.tests.test_plotting.TestPlotting.test_plotCartesianBlock"]], "test_plotdepthmap() (armi.utils.tests.test_plotting.testplotting method)": [[430, "armi.utils.tests.test_plotting.TestPlotting.test_plotDepthMap"]], "test_plothexblock() (armi.utils.tests.test_plotting.testplotting method)": [[430, "armi.utils.tests.test_plotting.TestPlotting.test_plotHexBlock"]], "immutableclass (class in armi.utils.tests.test_properties)": [[431, "armi.utils.tests.test_properties.ImmutableClass"]], "immutablepropertytests (class in armi.utils.tests.test_properties)": [[431, "armi.utils.tests.test_properties.ImmutablePropertyTests"]], "armi.utils.tests.test_properties": [[431, "module-armi.utils.tests.test_properties"]], "initialize() (armi.utils.tests.test_properties.immutableclass method)": [[431, "armi.utils.tests.test_properties.ImmutableClass.initialize"]], "mynum (armi.utils.tests.test_properties.immutableclass property)": [[431, "armi.utils.tests.test_properties.ImmutableClass.myNum"]], "test_cannotassignvaluetoimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[431, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_cannotAssignValueToImmutableProperty"]], "test_retreivingunassignedvalueraiseserror() (armi.utils.tests.test_properties.immutablepropertytests method)": [[431, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_retreivingUnassignedValueRaisesError"]], "test_unlockdoesnotpermitsreassignmentofanimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[431, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "testradar (class in armi.utils.tests.test_reportplotting)": [[432, "armi.utils.tests.test_reportPlotting.TestRadar"]], "armi.utils.tests.test_reportplotting": [[432, "module-armi.utils.tests.test_reportPlotting"]], "test_buvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[432, "armi.utils.tests.test_reportPlotting.TestRadar.test_buVsTime"]], "test_createplotmetadata() (armi.utils.tests.test_reportplotting.testradar method)": [[432, "armi.utils.tests.test_reportPlotting.TestRadar.test_createPlotMetaData"]], "test_keffvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[432, "armi.utils.tests.test_reportPlotting.TestRadar.test_keffVsTime"]], "test_movesvscycle() (armi.utils.tests.test_reportplotting.testradar method)": [[432, "armi.utils.tests.test_reportPlotting.TestRadar.test_movesVsCycle"]], "test_plotaxialprofile() (armi.utils.tests.test_reportplotting.testradar method)": [[432, "armi.utils.tests.test_reportPlotting.TestRadar.test_plotAxialProfile"]], "test_radar() (armi.utils.tests.test_reportplotting.testradar method)": [[432, "armi.utils.tests.test_reportPlotting.TestRadar.test_radar"]], "test_valuevstime() (armi.utils.tests.test_reportplotting.testradar method)": [[432, "armi.utils.tests.test_reportPlotting.TestRadar.test_valueVsTime"]], "test_xshistoryvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[432, "armi.utils.tests.test_reportPlotting.TestRadar.test_xsHistoryVsTime"]], "testtabulateapi (class in armi.utils.tests.test_tabulate)": [[433, "armi.utils.tests.test_tabulate.TestTabulateAPI"]], "testtabulateinputs (class in armi.utils.tests.test_tabulate)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs"]], "testtabulateinternal (class in armi.utils.tests.test_tabulate)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal"]], "testtabulateoutput (class in armi.utils.tests.test_tabulate)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput"]], "armi.utils.tests.test_tabulate": [[433, "module-armi.utils.tests.test_tabulate"]], "test_aligncellveriticallybottommultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyBottomMultiTextMultiplePad"]], "test_aligncellveriticallybottomsingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyBottomSingleTextMultiplePad"]], "test_aligncellveriticallycentermultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyCenterMultiTextMultiplePad"]], "test_aligncellveriticallycentersingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyCenterSingleTextMultiplePad"]], "test_aligncellveriticallyonelineonly() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyOneLineOnly"]], "test_aligncellveriticallytopmultitextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyTopMultiTextMultiplePad"]], "test_aligncellveriticallytopsingletextmultiplepad() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignCellVeriticallyTopSingleTextMultiplePad"]], "test_aligncolumndecimal() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimal"]], "test_aligncolumndecimalwithincorrectthousandseparators() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimalWithIncorrectThousandSeparators"]], "test_aligncolumndecimalwiththousandseparators() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnDecimalWithThousandSeparators"]], "test_aligncolumnmultiline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnMultiline"]], "test_aligncolumnnone() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_alignColumnNone"]], "test_assortedrareedgecases() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_assortedRareEdgeCases"]], "test_bool() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_bool"]], "test_buildline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_buildLine"]], "test_buildrow() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_buildRow"]], "test_colalignmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignMulti"]], "test_colalignmultiwithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignMultiWithSepLine"]], "test_colalignorheadersaligntoolong() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_colAlignOrheadersAlignTooLong"]], "test_columnalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_columnAlignment"]], "test_columnglobalandspecificalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_columnGlobalAndSpecificAlignment"]], "test_dictlike() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_dictLike"]], "test_dictlikewithindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_dictLikeWithIndex"]], "test_disablenumparsedefault() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseDefault"]], "test_disablenumparselist() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseList"]], "test_disablenumparsetrue() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_disableNumParseTrue"]], "test_emptydata() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyData"]], "test_emptydatawithheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyDataWithHeaders"]], "test_emptydatawithoutheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_emptyDataWithoutHeaders"]], "test_floatconversions() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatConversions"]], "test_floatfmt() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatFmt"]], "test_floatfmtmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_floatFmtMulti"]], "test_format() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_format"]], "test_github() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_github"]], "test_grid() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_grid"]], "test_gridheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridHeaderless"]], "test_gridmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultiline"]], "test_gridmultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineHeaderless"]], "test_gridmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineWithEmptyCells"]], "test_gridmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_gridMultilineWithEmptyCellsHeaderless"]], "test_headersglobalandspecificalignment() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_headersGlobalAndSpecificAlignment"]], "test_intfmt() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_intFmt"]], "test_ismultiline() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_isMultiline"]], "test_iterableofempties() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfEmpties"]], "test_iterableofiterables() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterables"]], "test_iterableofiterablesfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterablesFirstrow"]], "test_iterableofiterablesheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_iterableOfIterablesHeaders"]], "test_listbytes() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listBytes"]], "test_listofdicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDicts"]], "test_listofdictsfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsFirstrow"]], "test_listofdictskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsKeys"]], "test_listofdictswithdictofheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithDictOfHeaders"]], "test_listofdictswithlistofheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithListOfHeaders"]], "test_listofdictswithmissingkeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfDictsWithMissingKeys"]], "test_listoflists() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfLists"]], "test_listoflistsfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfListsFirstrow"]], "test_listoflistskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfListsKeys"]], "test_listoflistswithindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndex"]], "test_listoflistswithindexfirstrow() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndexFirstrow"]], "test_listoflistswithindexwithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithIndexWithSepLine"]], "test_listoflistswithsuppliedindex() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_listOfListsWithSuppliedIndex"]], "test_listofnamedtuples() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfNamedtuples"]], "test_listofnamedtupleskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfNamedtuplesKeys"]], "test_listofordereddicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfOrdereddicts"]], "test_listofuserdicts() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfUserdicts"]], "test_listofuserdictskeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_listOfUserdictsKeys"]], "test_maxcolwidthsinglevalue() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxColWidthsingleValue"]], "test_maxcolwidthhonordisableparsenum() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxcolwidthHonorDisableParsenum"]], "test_maxcolwidthpadtailingwidths() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_maxcolwidthPadTailingWidths"]], "test_missingval() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_missingVal"]], "test_missingvalmulti() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_missingValMulti"]], "test_multilinewidth() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_multilineWidth"]], "test_nodata() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_noData"]], "test_nodatawithoutheaders() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_noDataWithoutHeaders"]], "test_normalizetabulardata() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_normalizeTabularData"]], "test_numpy2d() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2d"]], "test_numpy2dfirstrow() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2dFirstrow"]], "test_numpy2dkeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpy2dKeys"]], "test_numpyrecordarray() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArray"]], "test_numpyrecordarrayheaders() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArrayHeaders"]], "test_numpyrecordarraykeys() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_numpyRecordArrayKeys"]], "test_plain() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plain"]], "test_plainheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainHeaderless"]], "test_plainmaxcolwidthautowraps() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMaxcolwidthAutowraps"]], "test_plainmaxcolwidthautowrapswithsep() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMaxcolwidthAutowrapsWithSep"]], "test_plainmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultiline"]], "test_plainmultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineHeaderless"]], "test_plainmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithEmptyCells"]], "test_plainmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithEmptyCellsHeaderless"]], "test_plainmultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainMultilineWithLinks"]], "test_plainmaxheadercolwidthsautowraps() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_plainmaxHeaderColWidthsAutowraps"]], "test_pretty() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_pretty"]], "test_prettyheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyHeaderless"]], "test_prettymultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultiline"]], "test_prettymultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineHeaderless"]], "test_prettymultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithEmptyCells"]], "test_prettymultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithEmptyCellsHeaderless"]], "test_prettymultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_prettyMultilineWithLinks"]], "test_readmeexamplewithsep() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_readmeExampleWithSep"]], "test_rst() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rst"]], "test_rstheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstHeaderless"]], "test_rstmultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultiline"]], "test_rstmultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithEmptyCells"]], "test_rstmultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithEmptyCellsHeaderless"]], "test_rstmultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstMultilineWithLinks"]], "test_rstwithemptyvaluesinfirstcolumn() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_rstWithEmptyValuesInFirstColumn"]], "test_simple() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simple"]], "test_simpleheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleHeaderless"]], "test_simpleheaderlesswithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleHeaderlessWithSepLine"]], "test_simplemultiline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline"]], "test_simplemultiline2() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline2"]], "test_simplemultiline2withsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultiline2WithSepLine"]], "test_simplemultilineheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineHeaderless"]], "test_simplemultilinewithemptycells() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithEmptyCells"]], "test_simplemultilinewithemptycellsheaderless() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithEmptyCellsHeaderless"]], "test_simplemultilinewithlinks() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleMultilineWithLinks"]], "test_simplewithsepline() (armi.utils.tests.test_tabulate.testtabulateoutput method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateOutput.test_simpleWithSepLine"]], "test_tabulateformats() (armi.utils.tests.test_tabulate.testtabulateapi method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateAPI.test_tabulateFormats"]], "test_tightcouplingexample() (armi.utils.tests.test_tabulate.testtabulateinputs method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInputs.test_tightCouplingExample"]], "test_type() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_type"]], "test_visiblewidth() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_visibleWidth"]], "test_wraptexttocolwidths() (armi.utils.tests.test_tabulate.testtabulateinternal method)": [[433, "armi.utils.tests.test_tabulate.TestTabulateInternal.test_wrapTextToColWidths"]], "sequentialreadertests (class in armi.utils.tests.test_textprocessors)": [[434, "armi.utils.tests.test_textProcessors.SequentialReaderTests"]], "yamlincludetest (class in armi.utils.tests.test_textprocessors)": [[434, "armi.utils.tests.test_textProcessors.YamlIncludeTest"]], "armi.utils.tests.test_textprocessors": [[434, "module-armi.utils.tests.test_textProcessors"]], "test_findincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[434, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_findIncludes"]], "test_readfile() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[434, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFile"]], "test_readfilewithpattern() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[434, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFileWithPattern"]], "test_resolveincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[434, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes"]], "test_resolveincludes_stringio() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[434, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes_StringIO"]], "textstream (armi.utils.tests.test_textprocessors.sequentialreadertests attribute)": [[434, "armi.utils.tests.test_textProcessors.SequentialReaderTests.textStream"]], "testtriangle (class in armi.utils.tests.test_triangle)": [[435, "armi.utils.tests.test_triangle.TestTriangle"]], "armi.utils.tests.test_triangle": [[435, "module-armi.utils.tests.test_triangle"]], "test_checkifpointisintriangle() (armi.utils.tests.test_triangle.testtriangle method)": [[435, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle"]], "test_checkifpointisintriangle2() (armi.utils.tests.test_triangle.testtriangle method)": [[435, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle2"]], "test_gettrianglearea() (armi.utils.tests.test_triangle.testtriangle method)": [[435, "armi.utils.tests.test_triangle.TestTriangle.test_getTriangleArea"]], "testunits (class in armi.utils.tests.test_units)": [[436, "armi.utils.tests.test_units.TestUnits"]], "armi.utils.tests.test_units": [[436, "module-armi.utils.tests.test_units"]], "test_convertxtopascal() (armi.utils.tests.test_units.testunits method)": [[436, "armi.utils.tests.test_units.TestUnits.test_convertXtoPascal"]], "test_gettc() (armi.utils.tests.test_units.testunits method)": [[436, "armi.utils.tests.test_units.TestUnits.test_getTc"]], "test_gettemperature() (armi.utils.tests.test_units.testunits method)": [[436, "armi.utils.tests.test_units.TestUnits.test_getTemperature"]], "test_gettf() (armi.utils.tests.test_units.testunits method)": [[436, "armi.utils.tests.test_units.TestUnits.test_getTf"]], "test_gettk() (armi.utils.tests.test_units.testunits method)": [[436, "armi.utils.tests.test_units.TestUnits.test_getTk"]], "test_gettmev() (armi.utils.tests.test_units.testunits method)": [[436, "armi.utils.tests.test_units.TestUnits.test_getTmev"]], "test_getxylineparameters() (armi.utils.tests.test_units.testunits method)": [[436, "armi.utils.tests.test_units.TestUnits.test_getXYLineParameters"]], "test_pressure_converter() (armi.utils.tests.test_units.testunits method)": [[436, "armi.utils.tests.test_units.TestUnits.test_pressure_converter"]], "test_sanitizeangle() (armi.utils.tests.test_units.testunits method)": [[436, "armi.utils.tests.test_units.TestUnits.test_sanitizeAngle"]], "cyclessettingstests (class in armi.utils.tests.test_utils)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests"]], "testgeneralutils (class in armi.utils.tests.test_utils)": [[437, "armi.utils.tests.test_utils.TestGeneralUtils"]], "armi.utils.tests.test_utils": [[437, "module-armi.utils.tests.test_utils"]], "availabilityfactorsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsDetailedSolution"]], "availabilityfactorssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsSimpleSolution"]], "burnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsDetailedSolution"]], "burnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsSimpleSolution"]], "cyclelengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsDetailedSolution"]], "cyclelengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsSimpleSolution"]], "cyclenamesdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesDetailedSolution"]], "cyclenamessimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesSimpleSolution"]], "detailedcyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.detailedCyclesSettings"]], "maxburnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsDetailedSolution"]], "maxburnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsSimpleSolution"]], "nodespercycledetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleDetailedSolution"]], "nodespercyclesimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleSimpleSolution"]], "powerfractionsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsDetailedSolution"]], "powerfractionssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsSimpleSolution"]], "simplecyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.simpleCyclesSettings"]], "steplengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsDetailedSolution"]], "steplengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsSimpleSolution"]], "test_capstrlen() (armi.utils.tests.test_utils.testgeneralutils method)": [[437, "armi.utils.tests.test_utils.TestGeneralUtils.test_capStrLen"]], "test_classesinhierarchy() (armi.utils.tests.test_utils.testgeneralutils method)": [[437, "armi.utils.tests.test_utils.TestGeneralUtils.test_classesInHierarchy"]], "test_codetiming() (armi.utils.tests.test_utils.testgeneralutils method)": [[437, "armi.utils.tests.test_utils.TestGeneralUtils.test_codeTiming"]], "test_createformattedstrwithdelimiter() (armi.utils.tests.test_utils.testgeneralutils method)": [[437, "armi.utils.tests.test_utils.TestGeneralUtils.test_createFormattedStrWithDelimiter"]], "test_getavailabilityfactors() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getBurnSteps"]], "test_getcumulativenodenum() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCumulativeNodeNum"]], "test_getcyclelengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNames"]], "test_getcyclenodefromcumulativenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeNode"]], "test_getcyclenodefromcumulativestep() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeStep"]], "test_getmaxburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getnodespercycle() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getNodesPerCycle"]], "test_getpowerfractions() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPowerFractions"]], "test_getprevioustimenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPreviousTimeNode"]], "test_getsteplengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getStepLengths"]], "test_hasburnup() (armi.utils.tests.test_utils.cyclessettingstests method)": [[437, "armi.utils.tests.test_utils.CyclesSettingsTests.test_hasBurnup"]], "test_list2str() (armi.utils.tests.test_utils.testgeneralutils method)": [[437, "armi.utils.tests.test_utils.TestGeneralUtils.test_list2str"]], "test_mergeabledictionary() (armi.utils.tests.test_utils.testgeneralutils method)": [[437, "armi.utils.tests.test_utils.TestGeneralUtils.test_mergeableDictionary"]], "test_plotmatrix() (armi.utils.tests.test_utils.testgeneralutils method)": [[437, "armi.utils.tests.test_utils.TestGeneralUtils.test_plotMatrix"]], "test_prependtolist() (armi.utils.tests.test_utils.testgeneralutils method)": [[437, "armi.utils.tests.test_utils.TestGeneralUtils.test_prependToList"]], "test_safecopy() (armi.utils.tests.test_utils.testgeneralutils method)": [[437, "armi.utils.tests.test_utils.TestGeneralUtils.test_safeCopy"]], "test_slantsplit() (armi.utils.tests.test_utils.testgeneralutils method)": [[437, "armi.utils.tests.test_utils.TestGeneralUtils.test_slantSplit"]], "decimal_pattern (in module armi.utils.textprocessors)": [[438, "armi.utils.textProcessors.DECIMAL_PATTERN"]], "floating_pattern (in module armi.utils.textprocessors)": [[438, "armi.utils.textProcessors.FLOATING_PATTERN"]], "filemark (class in armi.utils.textprocessors)": [[438, "armi.utils.textProcessors.FileMark"]], "scientific_pattern (in module armi.utils.textprocessors)": [[438, "armi.utils.textProcessors.SCIENTIFIC_PATTERN"]], "sequentialreader (class in armi.utils.textprocessors)": [[438, "armi.utils.textProcessors.SequentialReader"]], "sequentialstringioreader (class in armi.utils.textprocessors)": [[438, "armi.utils.textProcessors.SequentialStringIOReader"]], "smartlist (class in armi.utils.textprocessors)": [[438, "armi.utils.textProcessors.SmartList"]], "textprocessor (class in armi.utils.textprocessors)": [[438, "armi.utils.textProcessors.TextProcessor"]], "armi.utils.textprocessors": [[438, "module-armi.utils.textProcessors"]], "checkerrors() (armi.utils.textprocessors.textprocessor method)": [[438, "armi.utils.textProcessors.TextProcessor.checkErrors"]], "close() (armi.utils.textprocessors.smartlist method)": [[438, "armi.utils.textProcessors.SmartList.close"]], "consumeline() (armi.utils.textprocessors.sequentialreader method)": [[438, "armi.utils.textProcessors.SequentialReader.consumeLine"]], "decimal (armi.utils.textprocessors.textprocessor attribute)": [[438, "armi.utils.textProcessors.TextProcessor.decimal"]], "errorchecking() (armi.utils.textprocessors.textprocessor method)": [[438, "armi.utils.textProcessors.TextProcessor.errorChecking"]], "findyamlinclusions() (in module armi.utils.textprocessors)": [[438, "armi.utils.textProcessors.findYamlInclusions"]], "fsearch() (armi.utils.textprocessors.textprocessor method)": [[438, "armi.utils.textProcessors.TextProcessor.fsearch"]], "issuewarningonfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[438, "armi.utils.textProcessors.SequentialReader.issueWarningOnFindingText"]], "next() (armi.utils.textprocessors.smartlist method)": [[438, "armi.utils.textProcessors.SmartList.next"]], "number (armi.utils.textprocessors.textprocessor attribute)": [[438, "armi.utils.textProcessors.TextProcessor.number"]], "raiseerroronfindingpattern() (armi.utils.textprocessors.sequentialreader method)": [[438, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingPattern"]], "raiseerroronfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[438, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingText"]], "reset() (armi.utils.textprocessors.textprocessor method)": [[438, "armi.utils.textProcessors.TextProcessor.reset"]], "resolvemarkupinclusions() (in module armi.utils.textprocessors)": [[438, "armi.utils.textProcessors.resolveMarkupInclusions"]], "scipat (armi.utils.textprocessors.textprocessor attribute)": [[438, "armi.utils.textProcessors.TextProcessor.scipat"]], "searchforpattern() (armi.utils.textprocessors.sequentialreader method)": [[438, "armi.utils.textProcessors.SequentialReader.searchForPattern"]], "searchforpatternonnextline() (armi.utils.textprocessors.sequentialreader method)": [[438, "armi.utils.textProcessors.SequentialReader.searchForPatternOnNextLine"]], "searchfortext() (armi.utils.textprocessors.sequentialreader method)": [[438, "armi.utils.textProcessors.SequentialReader.searchForText"]], "seek() (armi.utils.textprocessors.smartlist method)": [[438, "armi.utils.textProcessors.SmartList.seek"]], "armi.utils.triangle": [[439, "module-armi.utils.triangle"]], "checkifpointisintriangle() (in module armi.utils.triangle)": [[439, "armi.utils.triangle.checkIfPointIsInTriangle"]], "gettrianglearea() (in module armi.utils.triangle)": [[439, "armi.utils.triangle.getTriangleArea"]], "gettrianglecentroid() (in module armi.utils.triangle)": [[439, "armi.utils.triangle.getTriangleCentroid"]], "armi.utils.units": [[440, "module-armi.utils.units"]], "convertatmtopascal() (in module armi.utils.units)": [[440, "armi.utils.units.convertAtmToPascal"]], "convertbartopascal() (in module armi.utils.units)": [[440, "armi.utils.units.convertBarToPascal"]], "convertmmhgtopascal() (in module armi.utils.units)": [[440, "armi.utils.units.convertMmhgToPascal"]], "gettc() (in module armi.utils.units)": [[440, "armi.utils.units.getTc"]], "gettemperature() (in module armi.utils.units)": [[440, "armi.utils.units.getTemperature"]], "gettf() (in module armi.utils.units)": [[440, "armi.utils.units.getTf"]], "gettk() (in module armi.utils.units)": [[440, "armi.utils.units.getTk"]], "gettmev() (in module armi.utils.units)": [[440, "armi.utils.units.getTmev"]], "getxylineparameters() (in module armi.utils.units)": [[440, "armi.utils.units.getXYLineParameters"]], "sanitizeangle() (in module armi.utils.units)": [[440, "armi.utils.units.sanitizeAngle"]], "anl": [[479, "term-ANL"]], "boc": [[479, "term-BOC"]], "bol": [[479, "term-BOL"]], "cli": [[479, "term-CLI"]], "fima": [[479, "term-FIMA"]], "gui": [[479, "term-GUI"]], "in-use tests": [[479, "term-In-Use-Tests"]], "lwr": [[479, "term-LWR"]], "liner": [[479, "term-Liner"]], "mpi": [[479, "term-MPI"]], "twr": [[479, "term-TWR"]], "unit tests": [[479, "term-Unit-Tests"]], "v&v": [[479, "term-V-V"]], "xtview": [[479, "term-XTVIEW"]], "assembly": [[479, "term-assembly"]], "block": [[479, "term-block"]], "burnup": [[479, "term-burnup"]], "cladding": [[479, "term-cladding"]], "component": [[479, "term-component"]], "grid plate": [[479, "term-grid-plate"]], "interface": [[479, "term-interface"]], "material": [[479, "term-material"]], "node": [[479, "term-node"]], "operator": [[479, "term-operator"]], "parameter": [[479, "term-parameter"]], "plenum": [[479, "term-plenum"]], "reactor": [[479, "term-reactor"]], "reactor state": [[479, "term-reactor-state"]], "smear density": [[479, "term-smear-density"]]}})