Search.setIndex({"docnames": [".apidocs/armi", ".apidocs/armi.apps", ".apidocs/armi.bookkeeping", ".apidocs/armi.bookkeeping.db", ".apidocs/armi.bookkeeping.db.compareDB3", ".apidocs/armi.bookkeeping.db.database3", ".apidocs/armi.bookkeeping.db.databaseInterface", ".apidocs/armi.bookkeeping.db.factory", ".apidocs/armi.bookkeeping.db.layout", ".apidocs/armi.bookkeeping.db.permissions", ".apidocs/armi.bookkeeping.db.tests", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3", ".apidocs/armi.bookkeeping.db.tests.test_database3", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface", ".apidocs/armi.bookkeeping.db.tests.test_layout", ".apidocs/armi.bookkeeping.db.typedefs", ".apidocs/armi.bookkeeping.historyTracker", ".apidocs/armi.bookkeeping.mainInterface", ".apidocs/armi.bookkeeping.memoryProfiler", ".apidocs/armi.bookkeeping.report", ".apidocs/armi.bookkeeping.report.data", ".apidocs/armi.bookkeeping.report.html", ".apidocs/armi.bookkeeping.report.newReportUtils", ".apidocs/armi.bookkeeping.report.newReports", ".apidocs/armi.bookkeeping.report.reportInterface", ".apidocs/armi.bookkeeping.report.reportingUtils", ".apidocs/armi.bookkeeping.report.tests", ".apidocs/armi.bookkeeping.report.tests.test_newReport", ".apidocs/armi.bookkeeping.report.tests.test_report", ".apidocs/armi.bookkeeping.snapshotInterface", ".apidocs/armi.bookkeeping.tests", ".apidocs/armi.bookkeeping.tests.test_historyTracker", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler", ".apidocs/armi.bookkeeping.tests.test_snapshot", ".apidocs/armi.bookkeeping.visualization", ".apidocs/armi.bookkeeping.visualization.dumper", ".apidocs/armi.bookkeeping.visualization.entryPoint", ".apidocs/armi.bookkeeping.visualization.tests", ".apidocs/armi.bookkeeping.visualization.tests.test_vis", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf", ".apidocs/armi.bookkeeping.visualization.utils", ".apidocs/armi.bookkeeping.visualization.vtk", ".apidocs/armi.bookkeeping.visualization.xdmf", ".apidocs/armi.cases", ".apidocs/armi.cases.case", ".apidocs/armi.cases.inputModifiers", ".apidocs/armi.cases.inputModifiers.inputModifiers", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers", ".apidocs/armi.cases.inputModifiers.tests", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers", ".apidocs/armi.cases.suite", ".apidocs/armi.cases.suiteBuilder", ".apidocs/armi.cases.tests", ".apidocs/armi.cases.tests.test_cases", ".apidocs/armi.cases.tests.test_suiteBuilder", ".apidocs/armi.cli", ".apidocs/armi.cli.checkInputs", ".apidocs/armi.cli.cleanTemps", ".apidocs/armi.cli.clone", ".apidocs/armi.cli.compareCases", ".apidocs/armi.cli.database", ".apidocs/armi.cli.entryPoint", ".apidocs/armi.cli.gridGui", ".apidocs/armi.cli.migrateInputs", ".apidocs/armi.cli.modify", ".apidocs/armi.cli.reportsEntryPoint", ".apidocs/armi.cli.run", ".apidocs/armi.cli.runSuite", ".apidocs/armi.cli.tests", ".apidocs/armi.cli.tests.test_runEntryPoint", ".apidocs/armi.cli.tests.test_runSuite", ".apidocs/armi.conftest", ".apidocs/armi.context", ".apidocs/armi.interfaces", ".apidocs/armi.materials", ".apidocs/armi.materials.air", ".apidocs/armi.materials.alloy200", ".apidocs/armi.materials.b4c", ".apidocs/armi.materials.be9", ".apidocs/armi.materials.caH2", ".apidocs/armi.materials.californium", ".apidocs/armi.materials.concrete", ".apidocs/armi.materials.copper", ".apidocs/armi.materials.cs", ".apidocs/armi.materials.custom", ".apidocs/armi.materials.graphite", ".apidocs/armi.materials.hafnium", ".apidocs/armi.materials.hastelloyN", ".apidocs/armi.materials.ht9", ".apidocs/armi.materials.inconel", ".apidocs/armi.materials.inconel600", ".apidocs/armi.materials.inconel625", ".apidocs/armi.materials.inconel800", ".apidocs/armi.materials.inconelPE16", ".apidocs/armi.materials.inconelX750", ".apidocs/armi.materials.lead", ".apidocs/armi.materials.leadBismuth", ".apidocs/armi.materials.lithium", ".apidocs/armi.materials.magnesium", ".apidocs/armi.materials.material", ".apidocs/armi.materials.mgO", ".apidocs/armi.materials.mixture", ".apidocs/armi.materials.molybdenum", ".apidocs/armi.materials.mox", ".apidocs/armi.materials.nZ", ".apidocs/armi.materials.potassium", ".apidocs/armi.materials.scandiumOxide", ".apidocs/armi.materials.siC", ".apidocs/armi.materials.sodium", ".apidocs/armi.materials.sodiumChloride", ".apidocs/armi.materials.sulfur", ".apidocs/armi.materials.tZM", ".apidocs/armi.materials.tantalum", ".apidocs/armi.materials.tests", ".apidocs/armi.materials.tests.test__init__", ".apidocs/armi.materials.tests.test_air", ".apidocs/armi.materials.tests.test_b4c", ".apidocs/armi.materials.tests.test_be9", ".apidocs/armi.materials.tests.test_graphite", ".apidocs/armi.materials.tests.test_lithium", ".apidocs/armi.materials.tests.test_materials", ".apidocs/armi.materials.tests.test_sic", ".apidocs/armi.materials.tests.test_sulfur", ".apidocs/armi.materials.tests.test_thoriumOxide", ".apidocs/armi.materials.tests.test_uZr", ".apidocs/armi.materials.tests.test_water", ".apidocs/armi.materials.thU", ".apidocs/armi.materials.thorium", ".apidocs/armi.materials.thoriumOxide", ".apidocs/armi.materials.uThZr", ".apidocs/armi.materials.uZr", ".apidocs/armi.materials.uranium", ".apidocs/armi.materials.uraniumOxide", ".apidocs/armi.materials.void", ".apidocs/armi.materials.water", ".apidocs/armi.materials.yttriumOxide", ".apidocs/armi.materials.zincOxide", ".apidocs/armi.materials.zr", ".apidocs/armi.meta", ".apidocs/armi.migration", ".apidocs/armi.migration.base", ".apidocs/armi.migration.m0_1_3", ".apidocs/armi.migration.m0_1_6", ".apidocs/armi.migration.tests", ".apidocs/armi.migration.tests.test_m0_1_6", ".apidocs/armi.migration.tests.test_migration_base", ".apidocs/armi.mpiActions", ".apidocs/armi.nucDirectory", ".apidocs/armi.nucDirectory.elements", ".apidocs/armi.nucDirectory.nucDir", ".apidocs/armi.nucDirectory.nuclideBases", ".apidocs/armi.nucDirectory.tests", ".apidocs/armi.nucDirectory.tests.test_elements", ".apidocs/armi.nucDirectory.tests.test_nucDirectory", ".apidocs/armi.nucDirectory.tests.test_nuclideBases", ".apidocs/armi.nucDirectory.tests.test_thermalScattering", ".apidocs/armi.nucDirectory.tests.test_transmutations", ".apidocs/armi.nucDirectory.thermalScattering", ".apidocs/armi.nucDirectory.transmutations", ".apidocs/armi.nuclearDataIO", ".apidocs/armi.nuclearDataIO.cccc", ".apidocs/armi.nuclearDataIO.cccc.cccc", ".apidocs/armi.nuclearDataIO.cccc.compxs", ".apidocs/armi.nuclearDataIO.cccc.dif3d", ".apidocs/armi.nuclearDataIO.cccc.dlayxs", ".apidocs/armi.nuclearDataIO.cccc.fixsrc", ".apidocs/armi.nuclearDataIO.cccc.gamiso", ".apidocs/armi.nuclearDataIO.cccc.geodst", ".apidocs/armi.nuclearDataIO.cccc.isotxs", ".apidocs/armi.nuclearDataIO.cccc.labels", ".apidocs/armi.nuclearDataIO.cccc.nhflux", ".apidocs/armi.nuclearDataIO.cccc.pmatrx", ".apidocs/armi.nuclearDataIO.cccc.pwdint", ".apidocs/armi.nuclearDataIO.cccc.rtflux", ".apidocs/armi.nuclearDataIO.cccc.rzflux", ".apidocs/armi.nuclearDataIO.cccc.tests", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata", ".apidocs/armi.nuclearDataIO.tests", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides", ".apidocs/armi.nuclearDataIO.xsCollections", ".apidocs/armi.nuclearDataIO.xsLibraries", ".apidocs/armi.nuclearDataIO.xsNuclides", ".apidocs/armi.operators", ".apidocs/armi.operators.operator", ".apidocs/armi.operators.operatorMPI", ".apidocs/armi.operators.runTypes", ".apidocs/armi.operators.settingsValidation", ".apidocs/armi.operators.snapshots", ".apidocs/armi.operators.tests", ".apidocs/armi.operators.tests.test_inspectors", ".apidocs/armi.operators.tests.test_operatorSnapshots", ".apidocs/armi.operators.tests.test_operators", ".apidocs/armi.physics", ".apidocs/armi.physics.constants", ".apidocs/armi.physics.executers", ".apidocs/armi.physics.fuelCycle", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface", ".apidocs/armi.physics.fuelCycle.fuelHandlers", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelCycle.settings", ".apidocs/armi.physics.fuelCycle.tests", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelPerformance", ".apidocs/armi.physics.fuelPerformance.executers", ".apidocs/armi.physics.fuelPerformance.parameters", ".apidocs/armi.physics.fuelPerformance.plugin", ".apidocs/armi.physics.fuelPerformance.settings", ".apidocs/armi.physics.fuelPerformance.tests", ".apidocs/armi.physics.fuelPerformance.tests.test_executers", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils", ".apidocs/armi.physics.fuelPerformance.utils", ".apidocs/armi.physics.neutronics", ".apidocs/armi.physics.neutronics.const", ".apidocs/armi.physics.neutronics.crossSectionGroupManager", ".apidocs/armi.physics.neutronics.crossSectionSettings", ".apidocs/armi.physics.neutronics.diffIsotxs", ".apidocs/armi.physics.neutronics.energyGroups", ".apidocs/armi.physics.neutronics.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct", ".apidocs/armi.physics.neutronics.fissionProductModel.tests", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct", ".apidocs/armi.physics.neutronics.globalFlux", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface", ".apidocs/armi.physics.neutronics.globalFlux.tests", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface", ".apidocs/armi.physics.neutronics.isotopicDepletion", ".apidocs/armi.physics.neutronics.isotopicDepletion.crossSectionTable", ".apidocs/armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface", ".apidocs/armi.physics.neutronics.latticePhysics", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter", ".apidocs/armi.physics.neutronics.latticePhysics.tests", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.parameters", ".apidocs/armi.physics.neutronics.reports", ".apidocs/armi.physics.neutronics.settings", ".apidocs/armi.physics.neutronics.tests", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable", ".apidocs/armi.physics.neutronics.tests.test_energyGroups", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin", ".apidocs/armi.physics.safety", ".apidocs/armi.physics.tests", ".apidocs/armi.physics.tests.test_executers", ".apidocs/armi.physics.thermalHydraulics", ".apidocs/armi.physics.thermalHydraulics.const", ".apidocs/armi.physics.thermalHydraulics.parameters", ".apidocs/armi.physics.thermalHydraulics.plugin", ".apidocs/armi.physics.thermalHydraulics.settings", ".apidocs/armi.pluginManager", ".apidocs/armi.plugins", ".apidocs/armi.reactor", ".apidocs/armi.reactor.assemblies", ".apidocs/armi.reactor.assemblyLists", ".apidocs/armi.reactor.assemblyParameters", ".apidocs/armi.reactor.blockParameters", ".apidocs/armi.reactor.blocks", ".apidocs/armi.reactor.blueprints", ".apidocs/armi.reactor.blueprints.assemblyBlueprint", ".apidocs/armi.reactor.blueprints.blockBlueprint", ".apidocs/armi.reactor.blueprints.componentBlueprint", ".apidocs/armi.reactor.blueprints.gridBlueprint", ".apidocs/armi.reactor.blueprints.isotopicOptions", ".apidocs/armi.reactor.blueprints.reactorBlueprint", ".apidocs/armi.reactor.blueprints.tests", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blueprints", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints", ".apidocs/armi.reactor.components", ".apidocs/armi.reactor.components.basicShapes", ".apidocs/armi.reactor.components.complexShapes", ".apidocs/armi.reactor.components.component", ".apidocs/armi.reactor.components.componentParameters", ".apidocs/armi.reactor.components.volumetricShapes", ".apidocs/armi.reactor.composites", ".apidocs/armi.reactor.converters", ".apidocs/armi.reactor.converters.axialExpansionChanger", ".apidocs/armi.reactor.converters.blockConverters", ".apidocs/armi.reactor.converters.geometryConverters", ".apidocs/armi.reactor.converters.meshConverters", ".apidocs/armi.reactor.converters.parameterSweeps", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters", ".apidocs/armi.reactor.converters.pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger", ".apidocs/armi.reactor.converters.tests.test_blockConverter", ".apidocs/armi.reactor.converters.tests.test_geometryConverters", ".apidocs/armi.reactor.converters.tests.test_meshConverters", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests.test_uniformMesh", ".apidocs/armi.reactor.converters.uniformMesh", ".apidocs/armi.reactor.flags", ".apidocs/armi.reactor.geometry", ".apidocs/armi.reactor.grids", ".apidocs/armi.reactor.grids.axial", ".apidocs/armi.reactor.grids.cartesian", ".apidocs/armi.reactor.grids.constants", ".apidocs/armi.reactor.grids.grid", ".apidocs/armi.reactor.grids.hexagonal", ".apidocs/armi.reactor.grids.locations", ".apidocs/armi.reactor.grids.structuredgrid", ".apidocs/armi.reactor.grids.thetarz", ".apidocs/armi.reactor.parameters", ".apidocs/armi.reactor.parameters.exceptions", ".apidocs/armi.reactor.parameters.parameterCollections", ".apidocs/armi.reactor.parameters.parameterDefinitions", ".apidocs/armi.reactor.parameters.resolveCollections", ".apidocs/armi.reactor.reactorParameters", ".apidocs/armi.reactor.reactors", ".apidocs/armi.reactor.systemLayoutInput", ".apidocs/armi.reactor.tests", ".apidocs/armi.reactor.tests.test_assemblies", ".apidocs/armi.reactor.tests.test_blocks", ".apidocs/armi.reactor.tests.test_components", ".apidocs/armi.reactor.tests.test_composites", ".apidocs/armi.reactor.tests.test_flags", ".apidocs/armi.reactor.tests.test_geometry", ".apidocs/armi.reactor.tests.test_parameters", ".apidocs/armi.reactor.tests.test_reactors", ".apidocs/armi.reactor.tests.test_rz_reactors", ".apidocs/armi.reactor.tests.test_zones", ".apidocs/armi.reactor.zones", ".apidocs/armi.runLog", ".apidocs/armi.settings", ".apidocs/armi.settings.caseSettings", ".apidocs/armi.settings.fwSettings", ".apidocs/armi.settings.fwSettings.databaseSettings", ".apidocs/armi.settings.fwSettings.globalSettings", ".apidocs/armi.settings.fwSettings.reportSettings", ".apidocs/armi.settings.fwSettings.tightCouplingSettings", ".apidocs/armi.settings.setting", ".apidocs/armi.settings.settingsIO", ".apidocs/armi.settings.tests", ".apidocs/armi.settings.tests.test_settings", ".apidocs/armi.settings.tests.test_settingsIO", ".apidocs/armi.tests", ".apidocs/armi.tests.mockRunLogs", ".apidocs/armi.tests.refSmallReactorShuffleLogic", ".apidocs/armi.tests.test_apps", ".apidocs/armi.tests.test_armiTestHelper", ".apidocs/armi.tests.test_cartesian", ".apidocs/armi.tests.test_interfaces", ".apidocs/armi.tests.test_lwrInputs", ".apidocs/armi.tests.test_mpiActions", ".apidocs/armi.tests.test_mpiFeatures", ".apidocs/armi.tests.test_mpiParameters", ".apidocs/armi.tests.test_notebooks", ".apidocs/armi.tests.test_plugins", ".apidocs/armi.tests.test_runLog", ".apidocs/armi.tests.test_tests", ".apidocs/armi.tests.test_user_plugins", ".apidocs/armi.utils", ".apidocs/armi.utils.asciimaps", ".apidocs/armi.utils.codeTiming", ".apidocs/armi.utils.customExceptions", ".apidocs/armi.utils.densityTools", ".apidocs/armi.utils.directoryChangers", ".apidocs/armi.utils.directoryChangersMpi", ".apidocs/armi.utils.dochelpers", ".apidocs/armi.utils.dynamicImporter", ".apidocs/armi.utils.flags", ".apidocs/armi.utils.gridEditor", ".apidocs/armi.utils.hexagon", ".apidocs/armi.utils.iterables", ".apidocs/armi.utils.mathematics", ".apidocs/armi.utils.outputCache", ".apidocs/armi.utils.parsing", ".apidocs/armi.utils.pathTools", ".apidocs/armi.utils.plotting", ".apidocs/armi.utils.properties", ".apidocs/armi.utils.reportPlotting", ".apidocs/armi.utils.tests", ".apidocs/armi.utils.tests.test_asciimaps", ".apidocs/armi.utils.tests.test_codeTiming", ".apidocs/armi.utils.tests.test_custom_exceptions", ".apidocs/armi.utils.tests.test_densityTools", ".apidocs/armi.utils.tests.test_directoryChangers", ".apidocs/armi.utils.tests.test_dochelpers", ".apidocs/armi.utils.tests.test_flags", ".apidocs/armi.utils.tests.test_hexagon", ".apidocs/armi.utils.tests.test_iterables", ".apidocs/armi.utils.tests.test_mathematics", ".apidocs/armi.utils.tests.test_outputCache", ".apidocs/armi.utils.tests.test_parsing", ".apidocs/armi.utils.tests.test_pathTools", ".apidocs/armi.utils.tests.test_plotting", ".apidocs/armi.utils.tests.test_properties", ".apidocs/armi.utils.tests.test_reportPlotting", ".apidocs/armi.utils.tests.test_textProcessors", ".apidocs/armi.utils.tests.test_triangle", ".apidocs/armi.utils.tests.test_units", ".apidocs/armi.utils.tests.test_utils", ".apidocs/armi.utils.textProcessors", ".apidocs/armi.utils.triangle", ".apidocs/armi.utils.units", ".apidocs/modules", "developer/documenting", "developer/entrypoints", "developer/first_time_contributors", "developer/guide", "developer/index", "developer/making_armi_based_apps", "developer/parallel_coding", "developer/profiling", "developer/reports", "developer/standards_and_practices", "developer/tooling", "gallery-src/README", "gallery-src/analysis/README", "gallery-src/applications/README", "gallery-src/framework/README", "gallery/analysis/index", "gallery/analysis/run_blockMcnpMaterialCard", "gallery/analysis/run_hexBlockToRZConversion", "gallery/analysis/run_hexReactorToRZ", "gallery/analysis/sg_execution_times", "gallery/applications/index", "gallery/framework/index", "gallery/framework/run_blockVolumeFractions", "gallery/framework/run_chartOfNuclides", "gallery/framework/run_computeReactionRates", "gallery/framework/run_fuelManagement", "gallery/framework/run_grids1_hex", "gallery/framework/run_grids2_cartesian", "gallery/framework/run_grids3_rzt", "gallery/framework/run_isotxs", "gallery/framework/run_isotxs2_matrix", "gallery/framework/run_materials", "gallery/framework/run_programmaticReactorDefinition", "gallery/framework/run_reactorFacemap", "gallery/framework/run_transmutationMatrix", "gallery/framework/sg_execution_times", "gallery/index", "glossary", "index", "installation", "release/0.1", "release/0.2", "release/index", "tutorials/data_model", "tutorials/index", "tutorials/making_your_first_app", "tutorials/materials_demo", "tutorials/nuclide_demo", "tutorials/param_sweep", "tutorials/walkthrough_inputs", "tutorials/walkthrough_lwr_inputs", "user/_gallery/index", "user/accessingEntryPoints", "user/assembly_parameters_report", "user/block_parameters_report", "user/component_parameters_report", "user/core_parameters_report", "user/index", "user/inputs/blueprints", "user/inputs/fuel_management", "user/inputs/index", "user/inputs/settings", "user/inputs/settings_report", "user/manual_data_access", "user/outputs/database", "user/outputs/index", "user/outputs/stdout", "user/physics_coupling", "user/radial_and_axial_expansion", "user/reactor_parameters_report", "user/user_install"], "filenames": [".apidocs/armi.rst", ".apidocs/armi.apps.rst", ".apidocs/armi.bookkeeping.rst", ".apidocs/armi.bookkeeping.db.rst", ".apidocs/armi.bookkeeping.db.compareDB3.rst", ".apidocs/armi.bookkeeping.db.database3.rst", ".apidocs/armi.bookkeeping.db.databaseInterface.rst", ".apidocs/armi.bookkeeping.db.factory.rst", ".apidocs/armi.bookkeeping.db.layout.rst", ".apidocs/armi.bookkeeping.db.permissions.rst", ".apidocs/armi.bookkeeping.db.tests.rst", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3.rst", ".apidocs/armi.bookkeeping.db.tests.test_database3.rst", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface.rst", ".apidocs/armi.bookkeeping.db.tests.test_layout.rst", ".apidocs/armi.bookkeeping.db.typedefs.rst", ".apidocs/armi.bookkeeping.historyTracker.rst", ".apidocs/armi.bookkeeping.mainInterface.rst", ".apidocs/armi.bookkeeping.memoryProfiler.rst", ".apidocs/armi.bookkeeping.report.rst", ".apidocs/armi.bookkeeping.report.data.rst", ".apidocs/armi.bookkeeping.report.html.rst", ".apidocs/armi.bookkeeping.report.newReportUtils.rst", ".apidocs/armi.bookkeeping.report.newReports.rst", ".apidocs/armi.bookkeeping.report.reportInterface.rst", ".apidocs/armi.bookkeeping.report.reportingUtils.rst", ".apidocs/armi.bookkeeping.report.tests.rst", ".apidocs/armi.bookkeeping.report.tests.test_newReport.rst", ".apidocs/armi.bookkeeping.report.tests.test_report.rst", ".apidocs/armi.bookkeeping.snapshotInterface.rst", ".apidocs/armi.bookkeeping.tests.rst", ".apidocs/armi.bookkeeping.tests.test_historyTracker.rst", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler.rst", ".apidocs/armi.bookkeeping.tests.test_snapshot.rst", ".apidocs/armi.bookkeeping.visualization.rst", ".apidocs/armi.bookkeeping.visualization.dumper.rst", ".apidocs/armi.bookkeeping.visualization.entryPoint.rst", ".apidocs/armi.bookkeeping.visualization.tests.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_vis.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf.rst", ".apidocs/armi.bookkeeping.visualization.utils.rst", ".apidocs/armi.bookkeeping.visualization.vtk.rst", ".apidocs/armi.bookkeeping.visualization.xdmf.rst", ".apidocs/armi.cases.rst", ".apidocs/armi.cases.case.rst", ".apidocs/armi.cases.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers.rst", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.rst", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.rst", ".apidocs/armi.cases.suite.rst", ".apidocs/armi.cases.suiteBuilder.rst", ".apidocs/armi.cases.tests.rst", ".apidocs/armi.cases.tests.test_cases.rst", ".apidocs/armi.cases.tests.test_suiteBuilder.rst", ".apidocs/armi.cli.rst", ".apidocs/armi.cli.checkInputs.rst", ".apidocs/armi.cli.cleanTemps.rst", ".apidocs/armi.cli.clone.rst", ".apidocs/armi.cli.compareCases.rst", ".apidocs/armi.cli.database.rst", ".apidocs/armi.cli.entryPoint.rst", ".apidocs/armi.cli.gridGui.rst", ".apidocs/armi.cli.migrateInputs.rst", ".apidocs/armi.cli.modify.rst", ".apidocs/armi.cli.reportsEntryPoint.rst", ".apidocs/armi.cli.run.rst", ".apidocs/armi.cli.runSuite.rst", ".apidocs/armi.cli.tests.rst", ".apidocs/armi.cli.tests.test_runEntryPoint.rst", ".apidocs/armi.cli.tests.test_runSuite.rst", ".apidocs/armi.conftest.rst", ".apidocs/armi.context.rst", ".apidocs/armi.interfaces.rst", ".apidocs/armi.materials.rst", ".apidocs/armi.materials.air.rst", ".apidocs/armi.materials.alloy200.rst", ".apidocs/armi.materials.b4c.rst", ".apidocs/armi.materials.be9.rst", ".apidocs/armi.materials.caH2.rst", ".apidocs/armi.materials.californium.rst", ".apidocs/armi.materials.concrete.rst", ".apidocs/armi.materials.copper.rst", ".apidocs/armi.materials.cs.rst", ".apidocs/armi.materials.custom.rst", ".apidocs/armi.materials.graphite.rst", ".apidocs/armi.materials.hafnium.rst", ".apidocs/armi.materials.hastelloyN.rst", ".apidocs/armi.materials.ht9.rst", ".apidocs/armi.materials.inconel.rst", ".apidocs/armi.materials.inconel600.rst", ".apidocs/armi.materials.inconel625.rst", ".apidocs/armi.materials.inconel800.rst", ".apidocs/armi.materials.inconelPE16.rst", ".apidocs/armi.materials.inconelX750.rst", ".apidocs/armi.materials.lead.rst", ".apidocs/armi.materials.leadBismuth.rst", ".apidocs/armi.materials.lithium.rst", ".apidocs/armi.materials.magnesium.rst", ".apidocs/armi.materials.material.rst", ".apidocs/armi.materials.mgO.rst", ".apidocs/armi.materials.mixture.rst", ".apidocs/armi.materials.molybdenum.rst", ".apidocs/armi.materials.mox.rst", ".apidocs/armi.materials.nZ.rst", ".apidocs/armi.materials.potassium.rst", ".apidocs/armi.materials.scandiumOxide.rst", ".apidocs/armi.materials.siC.rst", ".apidocs/armi.materials.sodium.rst", ".apidocs/armi.materials.sodiumChloride.rst", ".apidocs/armi.materials.sulfur.rst", ".apidocs/armi.materials.tZM.rst", ".apidocs/armi.materials.tantalum.rst", ".apidocs/armi.materials.tests.rst", ".apidocs/armi.materials.tests.test__init__.rst", ".apidocs/armi.materials.tests.test_air.rst", ".apidocs/armi.materials.tests.test_b4c.rst", ".apidocs/armi.materials.tests.test_be9.rst", ".apidocs/armi.materials.tests.test_graphite.rst", ".apidocs/armi.materials.tests.test_lithium.rst", ".apidocs/armi.materials.tests.test_materials.rst", ".apidocs/armi.materials.tests.test_sic.rst", ".apidocs/armi.materials.tests.test_sulfur.rst", ".apidocs/armi.materials.tests.test_thoriumOxide.rst", ".apidocs/armi.materials.tests.test_uZr.rst", ".apidocs/armi.materials.tests.test_water.rst", ".apidocs/armi.materials.thU.rst", ".apidocs/armi.materials.thorium.rst", ".apidocs/armi.materials.thoriumOxide.rst", ".apidocs/armi.materials.uThZr.rst", ".apidocs/armi.materials.uZr.rst", ".apidocs/armi.materials.uranium.rst", ".apidocs/armi.materials.uraniumOxide.rst", ".apidocs/armi.materials.void.rst", ".apidocs/armi.materials.water.rst", ".apidocs/armi.materials.yttriumOxide.rst", ".apidocs/armi.materials.zincOxide.rst", ".apidocs/armi.materials.zr.rst", ".apidocs/armi.meta.rst", ".apidocs/armi.migration.rst", ".apidocs/armi.migration.base.rst", ".apidocs/armi.migration.m0_1_3.rst", ".apidocs/armi.migration.m0_1_6.rst", ".apidocs/armi.migration.tests.rst", ".apidocs/armi.migration.tests.test_m0_1_6.rst", ".apidocs/armi.migration.tests.test_migration_base.rst", ".apidocs/armi.mpiActions.rst", ".apidocs/armi.nucDirectory.rst", ".apidocs/armi.nucDirectory.elements.rst", ".apidocs/armi.nucDirectory.nucDir.rst", ".apidocs/armi.nucDirectory.nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.rst", ".apidocs/armi.nucDirectory.tests.test_elements.rst", ".apidocs/armi.nucDirectory.tests.test_nucDirectory.rst", ".apidocs/armi.nucDirectory.tests.test_nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.test_thermalScattering.rst", ".apidocs/armi.nucDirectory.tests.test_transmutations.rst", ".apidocs/armi.nucDirectory.thermalScattering.rst", ".apidocs/armi.nucDirectory.transmutations.rst", ".apidocs/armi.nuclearDataIO.rst", ".apidocs/armi.nuclearDataIO.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.labels.rst", ".apidocs/armi.nuclearDataIO.cccc.nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.rzflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux.rst", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata.rst", ".apidocs/armi.nuclearDataIO.tests.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides.rst", ".apidocs/armi.nuclearDataIO.xsCollections.rst", ".apidocs/armi.nuclearDataIO.xsLibraries.rst", ".apidocs/armi.nuclearDataIO.xsNuclides.rst", ".apidocs/armi.operators.rst", ".apidocs/armi.operators.operator.rst", ".apidocs/armi.operators.operatorMPI.rst", ".apidocs/armi.operators.runTypes.rst", ".apidocs/armi.operators.settingsValidation.rst", ".apidocs/armi.operators.snapshots.rst", ".apidocs/armi.operators.tests.rst", ".apidocs/armi.operators.tests.test_inspectors.rst", ".apidocs/armi.operators.tests.test_operatorSnapshots.rst", ".apidocs/armi.operators.tests.test_operators.rst", ".apidocs/armi.physics.rst", ".apidocs/armi.physics.constants.rst", ".apidocs/armi.physics.executers.rst", ".apidocs/armi.physics.fuelCycle.rst", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelCycle.settings.rst", ".apidocs/armi.physics.fuelCycle.tests.rst", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelPerformance.rst", ".apidocs/armi.physics.fuelPerformance.executers.rst", ".apidocs/armi.physics.fuelPerformance.parameters.rst", ".apidocs/armi.physics.fuelPerformance.plugin.rst", ".apidocs/armi.physics.fuelPerformance.settings.rst", ".apidocs/armi.physics.fuelPerformance.tests.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_executers.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.rst", ".apidocs/armi.physics.fuelPerformance.utils.rst", ".apidocs/armi.physics.neutronics.rst", ".apidocs/armi.physics.neutronics.const.rst", ".apidocs/armi.physics.neutronics.crossSectionGroupManager.rst", ".apidocs/armi.physics.neutronics.crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.diffIsotxs.rst", ".apidocs/armi.physics.neutronics.energyGroups.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.globalFlux.rst", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.isotopicDepletion.rst", ".apidocs/armi.physics.neutronics.isotopicDepletion.crossSectionTable.rst", ".apidocs/armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.rst", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.parameters.rst", ".apidocs/armi.physics.neutronics.reports.rst", ".apidocs/armi.physics.neutronics.settings.rst", ".apidocs/armi.physics.neutronics.tests.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable.rst", ".apidocs/armi.physics.neutronics.tests.test_energyGroups.rst", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin.rst", ".apidocs/armi.physics.safety.rst", ".apidocs/armi.physics.tests.rst", ".apidocs/armi.physics.tests.test_executers.rst", ".apidocs/armi.physics.thermalHydraulics.rst", ".apidocs/armi.physics.thermalHydraulics.const.rst", ".apidocs/armi.physics.thermalHydraulics.parameters.rst", ".apidocs/armi.physics.thermalHydraulics.plugin.rst", ".apidocs/armi.physics.thermalHydraulics.settings.rst", ".apidocs/armi.pluginManager.rst", ".apidocs/armi.plugins.rst", ".apidocs/armi.reactor.rst", ".apidocs/armi.reactor.assemblies.rst", ".apidocs/armi.reactor.assemblyLists.rst", ".apidocs/armi.reactor.assemblyParameters.rst", ".apidocs/armi.reactor.blockParameters.rst", ".apidocs/armi.reactor.blocks.rst", ".apidocs/armi.reactor.blueprints.rst", ".apidocs/armi.reactor.blueprints.assemblyBlueprint.rst", ".apidocs/armi.reactor.blueprints.blockBlueprint.rst", ".apidocs/armi.reactor.blueprints.componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.gridBlueprint.rst", ".apidocs/armi.reactor.blueprints.isotopicOptions.rst", ".apidocs/armi.reactor.blueprints.reactorBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.rst", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics.rst", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications.rst", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints.rst", ".apidocs/armi.reactor.components.rst", ".apidocs/armi.reactor.components.basicShapes.rst", ".apidocs/armi.reactor.components.complexShapes.rst", ".apidocs/armi.reactor.components.component.rst", ".apidocs/armi.reactor.components.componentParameters.rst", ".apidocs/armi.reactor.components.volumetricShapes.rst", ".apidocs/armi.reactor.composites.rst", ".apidocs/armi.reactor.converters.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.blockConverters.rst", ".apidocs/armi.reactor.converters.geometryConverters.rst", ".apidocs/armi.reactor.converters.meshConverters.rst", ".apidocs/armi.reactor.converters.parameterSweeps.rst", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.rst", ".apidocs/armi.reactor.converters.pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.rst", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.tests.test_blockConverter.rst", ".apidocs/armi.reactor.converters.tests.test_geometryConverters.rst", ".apidocs/armi.reactor.converters.tests.test_meshConverters.rst", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.test_uniformMesh.rst", ".apidocs/armi.reactor.converters.uniformMesh.rst", ".apidocs/armi.reactor.flags.rst", ".apidocs/armi.reactor.geometry.rst", ".apidocs/armi.reactor.grids.rst", ".apidocs/armi.reactor.grids.axial.rst", ".apidocs/armi.reactor.grids.cartesian.rst", ".apidocs/armi.reactor.grids.constants.rst", ".apidocs/armi.reactor.grids.grid.rst", ".apidocs/armi.reactor.grids.hexagonal.rst", ".apidocs/armi.reactor.grids.locations.rst", ".apidocs/armi.reactor.grids.structuredgrid.rst", ".apidocs/armi.reactor.grids.thetarz.rst", ".apidocs/armi.reactor.parameters.rst", ".apidocs/armi.reactor.parameters.exceptions.rst", ".apidocs/armi.reactor.parameters.parameterCollections.rst", ".apidocs/armi.reactor.parameters.parameterDefinitions.rst", ".apidocs/armi.reactor.parameters.resolveCollections.rst", ".apidocs/armi.reactor.reactorParameters.rst", ".apidocs/armi.reactor.reactors.rst", ".apidocs/armi.reactor.systemLayoutInput.rst", ".apidocs/armi.reactor.tests.rst", ".apidocs/armi.reactor.tests.test_assemblies.rst", ".apidocs/armi.reactor.tests.test_blocks.rst", ".apidocs/armi.reactor.tests.test_components.rst", ".apidocs/armi.reactor.tests.test_composites.rst", ".apidocs/armi.reactor.tests.test_flags.rst", ".apidocs/armi.reactor.tests.test_geometry.rst", ".apidocs/armi.reactor.tests.test_parameters.rst", ".apidocs/armi.reactor.tests.test_reactors.rst", ".apidocs/armi.reactor.tests.test_rz_reactors.rst", ".apidocs/armi.reactor.tests.test_zones.rst", ".apidocs/armi.reactor.zones.rst", ".apidocs/armi.runLog.rst", ".apidocs/armi.settings.rst", ".apidocs/armi.settings.caseSettings.rst", ".apidocs/armi.settings.fwSettings.rst", ".apidocs/armi.settings.fwSettings.databaseSettings.rst", ".apidocs/armi.settings.fwSettings.globalSettings.rst", ".apidocs/armi.settings.fwSettings.reportSettings.rst", ".apidocs/armi.settings.fwSettings.tightCouplingSettings.rst", ".apidocs/armi.settings.setting.rst", ".apidocs/armi.settings.settingsIO.rst", ".apidocs/armi.settings.tests.rst", ".apidocs/armi.settings.tests.test_settings.rst", ".apidocs/armi.settings.tests.test_settingsIO.rst", ".apidocs/armi.tests.rst", ".apidocs/armi.tests.mockRunLogs.rst", ".apidocs/armi.tests.refSmallReactorShuffleLogic.rst", ".apidocs/armi.tests.test_apps.rst", ".apidocs/armi.tests.test_armiTestHelper.rst", ".apidocs/armi.tests.test_cartesian.rst", ".apidocs/armi.tests.test_interfaces.rst", ".apidocs/armi.tests.test_lwrInputs.rst", ".apidocs/armi.tests.test_mpiActions.rst", ".apidocs/armi.tests.test_mpiFeatures.rst", ".apidocs/armi.tests.test_mpiParameters.rst", ".apidocs/armi.tests.test_notebooks.rst", ".apidocs/armi.tests.test_plugins.rst", ".apidocs/armi.tests.test_runLog.rst", ".apidocs/armi.tests.test_tests.rst", ".apidocs/armi.tests.test_user_plugins.rst", ".apidocs/armi.utils.rst", ".apidocs/armi.utils.asciimaps.rst", ".apidocs/armi.utils.codeTiming.rst", ".apidocs/armi.utils.customExceptions.rst", ".apidocs/armi.utils.densityTools.rst", ".apidocs/armi.utils.directoryChangers.rst", ".apidocs/armi.utils.directoryChangersMpi.rst", ".apidocs/armi.utils.dochelpers.rst", ".apidocs/armi.utils.dynamicImporter.rst", ".apidocs/armi.utils.flags.rst", ".apidocs/armi.utils.gridEditor.rst", ".apidocs/armi.utils.hexagon.rst", ".apidocs/armi.utils.iterables.rst", ".apidocs/armi.utils.mathematics.rst", ".apidocs/armi.utils.outputCache.rst", ".apidocs/armi.utils.parsing.rst", ".apidocs/armi.utils.pathTools.rst", ".apidocs/armi.utils.plotting.rst", ".apidocs/armi.utils.properties.rst", ".apidocs/armi.utils.reportPlotting.rst", ".apidocs/armi.utils.tests.rst", ".apidocs/armi.utils.tests.test_asciimaps.rst", ".apidocs/armi.utils.tests.test_codeTiming.rst", ".apidocs/armi.utils.tests.test_custom_exceptions.rst", ".apidocs/armi.utils.tests.test_densityTools.rst", ".apidocs/armi.utils.tests.test_directoryChangers.rst", ".apidocs/armi.utils.tests.test_dochelpers.rst", ".apidocs/armi.utils.tests.test_flags.rst", ".apidocs/armi.utils.tests.test_hexagon.rst", ".apidocs/armi.utils.tests.test_iterables.rst", ".apidocs/armi.utils.tests.test_mathematics.rst", ".apidocs/armi.utils.tests.test_outputCache.rst", ".apidocs/armi.utils.tests.test_parsing.rst", ".apidocs/armi.utils.tests.test_pathTools.rst", ".apidocs/armi.utils.tests.test_plotting.rst", ".apidocs/armi.utils.tests.test_properties.rst", ".apidocs/armi.utils.tests.test_reportPlotting.rst", ".apidocs/armi.utils.tests.test_textProcessors.rst", ".apidocs/armi.utils.tests.test_triangle.rst", ".apidocs/armi.utils.tests.test_units.rst", ".apidocs/armi.utils.tests.test_utils.rst", ".apidocs/armi.utils.textProcessors.rst", ".apidocs/armi.utils.triangle.rst", ".apidocs/armi.utils.units.rst", ".apidocs/modules.rst", "developer/documenting.rst", "developer/entrypoints.rst", "developer/first_time_contributors.rst", "developer/guide.rst", "developer/index.rst", "developer/making_armi_based_apps.rst", "developer/parallel_coding.rst", "developer/profiling.rst", "developer/reports.rst", "developer/standards_and_practices.rst", "developer/tooling.rst", "gallery-src/README.rst", "gallery-src/analysis/README.rst", "gallery-src/applications/README.rst", "gallery-src/framework/README.rst", "gallery/analysis/index.rst", "gallery/analysis/run_blockMcnpMaterialCard.rst", "gallery/analysis/run_hexBlockToRZConversion.rst", "gallery/analysis/run_hexReactorToRZ.rst", "gallery/analysis/sg_execution_times.rst", "gallery/applications/index.rst", "gallery/framework/index.rst", "gallery/framework/run_blockVolumeFractions.rst", "gallery/framework/run_chartOfNuclides.rst", "gallery/framework/run_computeReactionRates.rst", "gallery/framework/run_fuelManagement.rst", "gallery/framework/run_grids1_hex.rst", "gallery/framework/run_grids2_cartesian.rst", "gallery/framework/run_grids3_rzt.rst", "gallery/framework/run_isotxs.rst", "gallery/framework/run_isotxs2_matrix.rst", "gallery/framework/run_materials.rst", "gallery/framework/run_programmaticReactorDefinition.rst", "gallery/framework/run_reactorFacemap.rst", "gallery/framework/run_transmutationMatrix.rst", "gallery/framework/sg_execution_times.rst", "gallery/index.rst", "glossary.rst", "index.rst", "installation.rst", "release/0.1.rst", "release/0.2.rst", "release/index.rst", "tutorials/data_model.nblink", "tutorials/index.rst", "tutorials/making_your_first_app.rst", "tutorials/materials_demo.ipynb", "tutorials/nuclide_demo.ipynb", "tutorials/param_sweep.nblink", "tutorials/walkthrough_inputs.rst", "tutorials/walkthrough_lwr_inputs.rst", "user/_gallery/index.rst", "user/accessingEntryPoints.rst", "user/assembly_parameters_report.rst", "user/block_parameters_report.rst", "user/component_parameters_report.rst", "user/core_parameters_report.rst", "user/index.rst", "user/inputs/blueprints.rst", "user/inputs/fuel_management.rst", "user/inputs/index.rst", "user/inputs/settings.rst", "user/inputs/settings_report.rst", "user/manual_data_access.rst", "user/outputs/database.rst", "user/outputs/index.rst", "user/outputs/stdout.rst", "user/physics_coupling.rst", "user/radial_and_axial_expansion.rst", "user/reactor_parameters_report.rst", "user/user_install.rst"], "titles": ["armi package", "armi.apps module", "armi.bookkeeping package", "armi.bookkeeping.db package", "armi.bookkeeping.db.compareDB3 module", "armi.bookkeeping.db.database3 module", "armi.bookkeeping.db.databaseInterface module", "armi.bookkeeping.db.factory module", "armi.bookkeeping.db.layout module", "armi.bookkeeping.db.permissions module", "armi.bookkeeping.db.tests package", "armi.bookkeeping.db.tests.test_comparedb3 module", "armi.bookkeeping.db.tests.test_database3 module", "armi.bookkeeping.db.tests.test_databaseInterface module", "armi.bookkeeping.db.tests.test_layout module", "armi.bookkeeping.db.typedefs module", "armi.bookkeeping.historyTracker module", "armi.bookkeeping.mainInterface module", "armi.bookkeeping.memoryProfiler module", "armi.bookkeeping.report package", "armi.bookkeeping.report.data module", "armi.bookkeeping.report.html module", "armi.bookkeeping.report.newReportUtils module", "armi.bookkeeping.report.newReports module", "armi.bookkeeping.report.reportInterface module", "armi.bookkeeping.report.reportingUtils module", "armi.bookkeeping.report.tests package", "armi.bookkeeping.report.tests.test_newReport module", "armi.bookkeeping.report.tests.test_report module", "armi.bookkeeping.snapshotInterface module", "armi.bookkeeping.tests package", "armi.bookkeeping.tests.test_historyTracker module", "armi.bookkeeping.tests.test_memoryProfiler module", "armi.bookkeeping.tests.test_snapshot module", "armi.bookkeeping.visualization package", "armi.bookkeeping.visualization.dumper module", "armi.bookkeeping.visualization.entryPoint module", "armi.bookkeeping.visualization.tests package", "armi.bookkeeping.visualization.tests.test_vis module", "armi.bookkeeping.visualization.tests.test_xdmf module", "armi.bookkeeping.visualization.utils module", "armi.bookkeeping.visualization.vtk module", "armi.bookkeeping.visualization.xdmf module", "armi.cases package", "armi.cases.case module", "armi.cases.inputModifiers package", "armi.cases.inputModifiers.inputModifiers module", "armi.cases.inputModifiers.neutronicsModifiers module", "armi.cases.inputModifiers.pinTypeInputModifiers module", "armi.cases.inputModifiers.tests package", "armi.cases.inputModifiers.tests.test_inputModifiers module", "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module", "armi.cases.suite module", "armi.cases.suiteBuilder module", "armi.cases.tests package", "armi.cases.tests.test_cases module", "armi.cases.tests.test_suiteBuilder module", "armi.cli package", "armi.cli.checkInputs module", "armi.cli.cleanTemps module", "armi.cli.clone module", "armi.cli.compareCases module", "armi.cli.database module", "armi.cli.entryPoint module", "armi.cli.gridGui module", "armi.cli.migrateInputs module", "armi.cli.modify module", "armi.cli.reportsEntryPoint module", "armi.cli.run module", "armi.cli.runSuite module", "armi.cli.tests package", "armi.cli.tests.test_runEntryPoint module", "armi.cli.tests.test_runSuite module", "armi.conftest module", "armi.context module", "armi.interfaces module", "armi.materials package", "armi.materials.air module", "armi.materials.alloy200 module", "armi.materials.b4c module", "armi.materials.be9 module", "armi.materials.caH2 module", "armi.materials.californium module", "armi.materials.concrete module", "armi.materials.copper module", "armi.materials.cs module", "armi.materials.custom module", "armi.materials.graphite module", "armi.materials.hafnium module", "armi.materials.hastelloyN module", "armi.materials.ht9 module", "armi.materials.inconel module", "armi.materials.inconel600 module", "armi.materials.inconel625 module", "armi.materials.inconel800 module", "armi.materials.inconelPE16 module", "armi.materials.inconelX750 module", "armi.materials.lead module", "armi.materials.leadBismuth module", "armi.materials.lithium module", "armi.materials.magnesium module", "armi.materials.material module", "armi.materials.mgO module", "armi.materials.mixture module", "armi.materials.molybdenum module", "armi.materials.mox module", "armi.materials.nZ module", "armi.materials.potassium module", "armi.materials.scandiumOxide module", "armi.materials.siC module", "armi.materials.sodium module", "armi.materials.sodiumChloride module", "armi.materials.sulfur module", "armi.materials.tZM module", "armi.materials.tantalum module", "armi.materials.tests package", "armi.materials.tests.test__init__ module", "armi.materials.tests.test_air module", "armi.materials.tests.test_b4c module", "armi.materials.tests.test_be9 module", "armi.materials.tests.test_graphite module", "armi.materials.tests.test_lithium module", "armi.materials.tests.test_materials module", "armi.materials.tests.test_sic module", "armi.materials.tests.test_sulfur module", "armi.materials.tests.test_thoriumOxide module", "armi.materials.tests.test_uZr module", "armi.materials.tests.test_water module", "armi.materials.thU module", "armi.materials.thorium module", "armi.materials.thoriumOxide module", "armi.materials.uThZr module", "armi.materials.uZr module", "armi.materials.uranium module", "armi.materials.uraniumOxide module", "armi.materials.void module", "armi.materials.water module", "armi.materials.yttriumOxide module", "armi.materials.zincOxide module", "armi.materials.zr module", "armi.meta module", "armi.migration package", "armi.migration.base module", "armi.migration.m0_1_3 module", "armi.migration.m0_1_6 module", "armi.migration.tests package", "armi.migration.tests.test_m0_1_6 module", "armi.migration.tests.test_migration_base module", "armi.mpiActions module", "armi.nucDirectory package", "armi.nucDirectory.elements module", "armi.nucDirectory.nucDir module", "armi.nucDirectory.nuclideBases module", "armi.nucDirectory.tests package", "armi.nucDirectory.tests.test_elements module", "armi.nucDirectory.tests.test_nucDirectory module", "armi.nucDirectory.tests.test_nuclideBases module", "armi.nucDirectory.tests.test_thermalScattering module", "armi.nucDirectory.tests.test_transmutations module", "armi.nucDirectory.thermalScattering module", "armi.nucDirectory.transmutations module", "armi.nuclearDataIO package", "armi.nuclearDataIO.cccc package", "armi.nuclearDataIO.cccc.cccc module", "armi.nuclearDataIO.cccc.compxs module", "armi.nuclearDataIO.cccc.dif3d module", "armi.nuclearDataIO.cccc.dlayxs module", "armi.nuclearDataIO.cccc.fixsrc module", "armi.nuclearDataIO.cccc.gamiso module", "armi.nuclearDataIO.cccc.geodst module", "armi.nuclearDataIO.cccc.isotxs module", "armi.nuclearDataIO.cccc.labels module", "armi.nuclearDataIO.cccc.nhflux module", "armi.nuclearDataIO.cccc.pmatrx module", "armi.nuclearDataIO.cccc.pwdint module", "armi.nuclearDataIO.cccc.rtflux module", "armi.nuclearDataIO.cccc.rzflux module", "armi.nuclearDataIO.cccc.tests package", "armi.nuclearDataIO.cccc.tests.test_cccc module", "armi.nuclearDataIO.cccc.tests.test_compxs module", "armi.nuclearDataIO.cccc.tests.test_dif3d module", "armi.nuclearDataIO.cccc.tests.test_dlayxs module", "armi.nuclearDataIO.cccc.tests.test_gamiso module", "armi.nuclearDataIO.cccc.tests.test_geodst module", "armi.nuclearDataIO.cccc.tests.test_isotxs module", "armi.nuclearDataIO.cccc.tests.test_labels module", "armi.nuclearDataIO.cccc.tests.test_nhflux module", "armi.nuclearDataIO.cccc.tests.test_pmatrx module", "armi.nuclearDataIO.cccc.tests.test_pwdint module", "armi.nuclearDataIO.cccc.tests.test_rtflux module", "armi.nuclearDataIO.cccc.tests.test_rzflux module", "armi.nuclearDataIO.nuclearFileMetadata module", "armi.nuclearDataIO.tests package", "armi.nuclearDataIO.tests.test_xsCollections module", "armi.nuclearDataIO.tests.test_xsLibraries module", "armi.nuclearDataIO.tests.test_xsNuclides module", "armi.nuclearDataIO.xsCollections module", "armi.nuclearDataIO.xsLibraries module", "armi.nuclearDataIO.xsNuclides module", "armi.operators package", "armi.operators.operator module", "armi.operators.operatorMPI module", "armi.operators.runTypes module", "armi.operators.settingsValidation module", "armi.operators.snapshots module", "armi.operators.tests package", "armi.operators.tests.test_inspectors module", "armi.operators.tests.test_operatorSnapshots module", "armi.operators.tests.test_operators module", "armi.physics package", "armi.physics.constants module", "armi.physics.executers module", "armi.physics.fuelCycle package", "armi.physics.fuelCycle.assemblyRotationAlgorithms module", "armi.physics.fuelCycle.fuelHandlerFactory module", "armi.physics.fuelCycle.fuelHandlerInterface module", "armi.physics.fuelCycle.fuelHandlers module", "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module", "armi.physics.fuelCycle.settings module", "armi.physics.fuelCycle.tests package", "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module", "armi.physics.fuelCycle.tests.test_fuelHandlers module", "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module", "armi.physics.fuelPerformance package", "armi.physics.fuelPerformance.executers module", "armi.physics.fuelPerformance.parameters module", "armi.physics.fuelPerformance.plugin module", "armi.physics.fuelPerformance.settings module", "armi.physics.fuelPerformance.tests package", "armi.physics.fuelPerformance.tests.test_executers module", "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module", "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module", "armi.physics.fuelPerformance.utils module", "armi.physics.neutronics package", "armi.physics.neutronics.const module", "armi.physics.neutronics.crossSectionGroupManager module", "armi.physics.neutronics.crossSectionSettings module", "armi.physics.neutronics.diffIsotxs module", "armi.physics.neutronics.energyGroups module", "armi.physics.neutronics.fissionProductModel package", "armi.physics.neutronics.fissionProductModel.fissionProductModel module", "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module", "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module", "armi.physics.neutronics.fissionProductModel.tests package", "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module", "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module", "armi.physics.neutronics.globalFlux package", "armi.physics.neutronics.globalFlux.globalFluxInterface module", "armi.physics.neutronics.globalFlux.tests package", "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module", "armi.physics.neutronics.isotopicDepletion package", "armi.physics.neutronics.isotopicDepletion.crossSectionTable module", "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface module", "armi.physics.neutronics.latticePhysics package", "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module", "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module", "armi.physics.neutronics.latticePhysics.tests package", "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module", "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module", "armi.physics.neutronics.macroXSGenerationInterface module", "armi.physics.neutronics.parameters module", "armi.physics.neutronics.reports module", "armi.physics.neutronics.settings module", "armi.physics.neutronics.tests package", "armi.physics.neutronics.tests.test_crossSectionManager module", "armi.physics.neutronics.tests.test_crossSectionSettings module", "armi.physics.neutronics.tests.test_crossSectionTable module", "armi.physics.neutronics.tests.test_energyGroups module", "armi.physics.neutronics.tests.test_macroXSGenerationInterface module", "armi.physics.neutronics.tests.test_neutronicsPlugin module", "armi.physics.safety package", "armi.physics.tests package", "armi.physics.tests.test_executers module", "armi.physics.thermalHydraulics package", "armi.physics.thermalHydraulics.const module", "armi.physics.thermalHydraulics.parameters module", "armi.physics.thermalHydraulics.plugin module", "armi.physics.thermalHydraulics.settings module", "armi.pluginManager module", "armi.plugins module", "armi.reactor package", "armi.reactor.assemblies module", "armi.reactor.assemblyLists module", "armi.reactor.assemblyParameters module", "armi.reactor.blockParameters module", "armi.reactor.blocks module", "armi.reactor.blueprints package", "armi.reactor.blueprints.assemblyBlueprint module", "armi.reactor.blueprints.blockBlueprint module", "armi.reactor.blueprints.componentBlueprint module", "armi.reactor.blueprints.gridBlueprint module", "armi.reactor.blueprints.isotopicOptions module", "armi.reactor.blueprints.reactorBlueprint module", "armi.reactor.blueprints.tests package", "armi.reactor.blueprints.tests.test_assemblyBlueprints module", "armi.reactor.blueprints.tests.test_blockBlueprints module", "armi.reactor.blueprints.tests.test_blueprints module", "armi.reactor.blueprints.tests.test_componentBlueprint module", "armi.reactor.blueprints.tests.test_customIsotopics module", "armi.reactor.blueprints.tests.test_gridBlueprints module", "armi.reactor.blueprints.tests.test_materialModifications module", "armi.reactor.blueprints.tests.test_reactorBlueprints module", "armi.reactor.components package", "armi.reactor.components.basicShapes module", "armi.reactor.components.complexShapes module", "armi.reactor.components.component module", "armi.reactor.components.componentParameters module", "armi.reactor.components.volumetricShapes module", "armi.reactor.composites module", "armi.reactor.converters package", "armi.reactor.converters.axialExpansionChanger module", "armi.reactor.converters.blockConverters module", "armi.reactor.converters.geometryConverters module", "armi.reactor.converters.meshConverters module", "armi.reactor.converters.parameterSweeps package", "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module", "armi.reactor.converters.pinTypeBlockConverters module", "armi.reactor.converters.tests package", "armi.reactor.converters.tests.test_axialExpansionChanger module", "armi.reactor.converters.tests.test_blockConverter module", "armi.reactor.converters.tests.test_geometryConverters module", "armi.reactor.converters.tests.test_meshConverters module", "armi.reactor.converters.tests.test_pinTypeBlockConverters module", "armi.reactor.converters.tests.test_uniformMesh module", "armi.reactor.converters.uniformMesh module", "armi.reactor.flags module", "armi.reactor.geometry module", "armi.reactor.grids package", "armi.reactor.grids.axial module", "armi.reactor.grids.cartesian module", "armi.reactor.grids.constants module", "armi.reactor.grids.grid module", "armi.reactor.grids.hexagonal module", "armi.reactor.grids.locations module", "armi.reactor.grids.structuredgrid module", "armi.reactor.grids.thetarz module", "armi.reactor.parameters package", "armi.reactor.parameters.exceptions module", "armi.reactor.parameters.parameterCollections module", "armi.reactor.parameters.parameterDefinitions module", "armi.reactor.parameters.resolveCollections module", "armi.reactor.reactorParameters module", "armi.reactor.reactors module", "armi.reactor.systemLayoutInput module", "armi.reactor.tests package", "armi.reactor.tests.test_assemblies module", "armi.reactor.tests.test_blocks module", "armi.reactor.tests.test_components module", "armi.reactor.tests.test_composites module", "armi.reactor.tests.test_flags module", "armi.reactor.tests.test_geometry module", "armi.reactor.tests.test_parameters module", "armi.reactor.tests.test_reactors module", "armi.reactor.tests.test_rz_reactors module", "armi.reactor.tests.test_zones module", "armi.reactor.zones module", "armi.runLog module", "armi.settings package", "armi.settings.caseSettings module", "armi.settings.fwSettings package", "armi.settings.fwSettings.databaseSettings module", "armi.settings.fwSettings.globalSettings module", "armi.settings.fwSettings.reportSettings module", "armi.settings.fwSettings.tightCouplingSettings module", "armi.settings.setting module", "armi.settings.settingsIO module", "armi.settings.tests package", "armi.settings.tests.test_settings module", "armi.settings.tests.test_settingsIO module", "armi.tests package", "armi.tests.mockRunLogs module", "armi.tests.refSmallReactorShuffleLogic module", "armi.tests.test_apps module", "armi.tests.test_armiTestHelper module", "armi.tests.test_cartesian module", "armi.tests.test_interfaces module", "armi.tests.test_lwrInputs module", "armi.tests.test_mpiActions module", "armi.tests.test_mpiFeatures module", "armi.tests.test_mpiParameters module", "armi.tests.test_notebooks module", "armi.tests.test_plugins module", "armi.tests.test_runLog module", "armi.tests.test_tests module", "armi.tests.test_user_plugins module", "armi.utils package", "armi.utils.asciimaps module", "armi.utils.codeTiming module", "armi.utils.customExceptions module", "armi.utils.densityTools module", "armi.utils.directoryChangers module", "armi.utils.directoryChangersMpi module", "armi.utils.dochelpers module", "armi.utils.dynamicImporter module", "armi.utils.flags module", "armi.utils.gridEditor module", "armi.utils.hexagon module", "armi.utils.iterables module", "armi.utils.mathematics module", "armi.utils.outputCache module", "armi.utils.parsing module", "armi.utils.pathTools module", "armi.utils.plotting module", "armi.utils.properties module", "armi.utils.reportPlotting module", "armi.utils.tests package", "armi.utils.tests.test_asciimaps module", "armi.utils.tests.test_codeTiming module", "armi.utils.tests.test_custom_exceptions module", "armi.utils.tests.test_densityTools module", "armi.utils.tests.test_directoryChangers module", "armi.utils.tests.test_dochelpers module", "armi.utils.tests.test_flags module", "armi.utils.tests.test_hexagon module", "armi.utils.tests.test_iterables module", "armi.utils.tests.test_mathematics module", "armi.utils.tests.test_outputCache module", "armi.utils.tests.test_parsing module", "armi.utils.tests.test_pathTools module", "armi.utils.tests.test_plotting module", "armi.utils.tests.test_properties module", "armi.utils.tests.test_reportPlotting module", "armi.utils.tests.test_textProcessors module", "armi.utils.tests.test_triangle module", "armi.utils.tests.test_units module", "armi.utils.tests.test_utils module", "armi.utils.textProcessors module", "armi.utils.triangle module", "armi.utils.units module", "armi", "<span class=\"section-number\">4. </span>Documenting ARMI", "<span class=\"section-number\">3. </span>Entry Points", "<span class=\"section-number\">8. </span>First Time Contributors Guide", "<span class=\"section-number\">1. </span>Framework Architecture", "Developer Docs", "<span class=\"section-number\">2. </span>Making ARMI-based Apps", "<span class=\"section-number\">5. </span>Parallel Code in ARMI", "<span class=\"section-number\">6. </span>Profiling ARMI", "<span class=\"section-number\">7. </span>Reports in ARMI", "<span class=\"section-number\">9. </span>Standards and Practices for Coding", "<span class=\"section-number\">10. </span>Tooling and Infrastructure", "Gallery", "Analysis", "Applications", "Framework", "Analysis", "Write MCNP Material Cards", "Hex block to RZ geometry conversion", "Hex reactor to RZ geometry conversion", "Computation times", "Applications", "Framework", "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion", "Plot a chart of the nuclides.", "Computing Reaction Rates on a Block.", "Fuel management in a LWR.", "Make a hex grid.", "Make a Cartesian grid.", "Make a Theta-R-Z grid.", "Plotting Multi-group XS from ISOTXS.", "Plotting a multi-group scatter matrix.", "Listing of Material Library.", "Build Reactor Inputs Programmatically.", "Plot a reactor facemap.", "Transmutation and decay reactions.", "Computation times", "Gallery", "Glossary", "ARMI", "Installation", "ARMI v0.1 Release Notes", "ARMI v0.2 Release Notes", "Release Notes", "<span class=\"section-number\">5. </span>Hands-on at the ARMI Terminal", "Tutorials", "<span class=\"section-number\">6. </span>Making your first ARMI-based App", "<span class=\"section-number\">2. </span>The ARMI Material Library", "<span class=\"section-number\">1. </span>The ARMI Nuclide and Element Packages", "<span class=\"section-number\">7. </span>Parameter sweeps", "<span class=\"section-number\">3. </span>Building input files for a fast reactor", "<span class=\"section-number\">4. </span>Building input files for a thermal reactor", "Gallery", "<span class=\"section-number\">12. </span>Accessing Entry Points", "<span class=\"section-number\">8. </span>Assembly Parameters", "<span class=\"section-number\">9. </span>Block Parameters", "<span class=\"section-number\">7. </span>Component Parameters", "<span class=\"section-number\">6. </span>Core Parameters", "User Docs", "<span class=\"section-number\">2.2. </span>The Blueprints Input File", "<span class=\"section-number\">2.3. </span>Fuel Management Input", "<span class=\"section-number\">2. </span>Inputs", "<span class=\"section-number\">2.1. </span>The Settings Input File", "<span class=\"section-number\">2.4. </span>Settings Report", "<span class=\"section-number\">4. </span>Accessing Data in ARMI", "<span class=\"section-number\">3.2. </span>The Database File", "<span class=\"section-number\">3. </span>Outputs", "<span class=\"section-number\">3.1. </span>The Standard Output", "<span class=\"section-number\">10. </span>Physics Coupling", "<span class=\"section-number\">11. </span>Radial and Axial Expansion and Contraction", "<span class=\"section-number\">5. </span>Reactor Parameters", "<span class=\"section-number\">1. </span>Installation"], "terms": {"welcom": [0, 25, 309, 468, 471], "advanc": [0, 3, 7, 89, 235, 236, 308, 309, 363, 396, 467, 468, 469, 473, 478, 490, 500], "reactor": [0, 2, 3, 5, 6, 8, 12, 13, 16, 17, 18, 22, 23, 25, 28, 29, 31, 35, 38, 40, 41, 42, 43, 44, 45, 55, 57, 58, 67, 75, 76, 79, 82, 86, 87, 89, 98, 101, 148, 152, 157, 161, 162, 163, 166, 167, 172, 173, 183, 188, 197, 199, 200, 208, 209, 211, 212, 213, 215, 216, 217, 221, 222, 223, 224, 235, 240, 242, 247, 249, 252, 254, 261, 264, 276, 279, 364, 369, 374, 375, 377, 378, 379, 384, 385, 386, 389, 391, 394, 396, 404, 429, 432, 434, 435, 436, 438, 439, 441, 444, 445, 446, 447, 449, 451, 452, 454, 455, 456, 457, 458, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 500], "model": [0, 3, 5, 6, 8, 18, 31, 43, 44, 53, 57, 75, 77, 78, 79, 80, 84, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139, 156, 157, 160, 171, 199, 203, 208, 209, 211, 223, 232, 233, 235, 236, 239, 240, 241, 244, 245, 251, 265, 276, 279, 280, 285, 286, 287, 288, 289, 290, 291, 296, 302, 304, 305, 308, 309, 311, 312, 316, 325, 329, 333, 336, 338, 339, 340, 342, 353, 357, 379, 385, 434, 435, 442, 444, 445, 447, 451, 454, 464, 466, 467, 468, 469, 470, 471, 474, 475, 476, 478, 479, 480, 481, 484, 486, 488, 490, 491, 492, 494, 495, 500], "interfac": [0, 1, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 29, 31, 44, 55, 148, 152, 162, 163, 171, 172, 175, 176, 185, 199, 200, 201, 208, 211, 212, 215, 216, 221, 226, 233, 235, 240, 244, 247, 249, 252, 253, 254, 257, 259, 266, 268, 276, 279, 281, 308, 326, 331, 336, 342, 360, 362, 363, 372, 375, 378, 381, 384, 394, 397, 404, 429, 430, 431, 435, 436, 439, 440, 455, 462, 463, 467, 468, 469, 470, 471, 473, 478, 488, 489, 492, 495, 496, 497, 500], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 20, 22, 23, 24, 29, 30, 31, 34, 36, 39, 40, 41, 42, 44, 46, 47, 48, 52, 53, 55, 57, 58, 59, 62, 63, 66, 67, 73, 74, 75, 76, 77, 79, 86, 87, 90, 91, 98, 100, 101, 102, 105, 110, 111, 112, 113, 116, 122, 130, 131, 132, 134, 135, 136, 142, 148, 149, 150, 151, 152, 157, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 186, 187, 188, 191, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 208, 209, 210, 211, 213, 214, 215, 216, 217, 221, 224, 232, 233, 235, 236, 237, 238, 240, 242, 244, 247, 249, 251, 252, 254, 257, 259, 261, 264, 265, 272, 278, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 300, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 316, 318, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 345, 346, 347, 348, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 363, 364, 365, 369, 370, 372, 375, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 421, 422, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 454, 455, 456, 457, 458, 459, 461, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 492, 494, 495, 496, 497, 498, 499, 500], "modul": [0, 2, 3, 10, 19, 26, 30, 34, 37, 43, 45, 49, 54, 57, 70, 76, 115, 141, 145, 149, 153, 161, 162, 177, 192, 199, 205, 209, 212, 219, 223, 228, 233, 239, 243, 246, 248, 250, 253, 256, 263, 271, 273, 280, 286, 293, 302, 309, 314, 317, 327, 336, 344, 357, 359, 366, 369, 385, 405, 429, 431, 433, 434, 435, 436, 439, 467, 468, 470, 471, 475, 477, 478, 479, 488, 489, 490, 491, 492, 494, 496], "initi": [0, 1, 3, 6, 44, 56, 58, 71, 75, 148, 150, 159, 163, 164, 167, 172, 197, 200, 201, 203, 213, 217, 240, 253, 261, 279, 285, 287, 288, 289, 290, 291, 292, 296, 300, 305, 308, 310, 318, 324, 336, 339, 342, 364, 387, 389, 390, 403, 405, 420, 433, 452, 455, 462, 463, 467, 468, 470, 471, 474, 484, 485, 490, 491, 492], "platform": [0, 52, 468, 469, 471, 500], "The": [0, 1, 2, 3, 4, 5, 6, 8, 12, 13, 16, 17, 18, 22, 23, 24, 29, 34, 36, 39, 41, 42, 44, 46, 47, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 78, 79, 85, 86, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 105, 109, 113, 133, 134, 136, 139, 142, 148, 149, 150, 151, 152, 156, 159, 160, 162, 163, 164, 166, 167, 169, 170, 171, 172, 175, 176, 184, 186, 193, 196, 197, 198, 199, 200, 201, 203, 204, 208, 209, 211, 212, 214, 215, 216, 217, 221, 223, 232, 233, 235, 236, 237, 239, 240, 241, 242, 247, 249, 250, 251, 252, 254, 259, 262, 265, 278, 279, 280, 281, 282, 285, 286, 287, 288, 290, 291, 292, 302, 303, 304, 305, 307, 308, 310, 311, 312, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 346, 348, 352, 353, 355, 356, 357, 358, 363, 364, 365, 368, 369, 375, 378, 382, 384, 385, 386, 389, 392, 396, 397, 398, 401, 402, 403, 404, 426, 428, 430, 431, 432, 434, 435, 436, 437, 439, 440, 447, 462, 464, 467, 470, 471, 473, 474, 475, 478, 479, 482, 483, 484, 485, 486, 487, 489, 490, 492, 493, 495, 497, 498, 499], "bootstrap": 0, "process": [0, 3, 4, 5, 18, 20, 36, 42, 44, 52, 74, 101, 148, 172, 200, 201, 211, 212, 215, 216, 221, 223, 224, 233, 236, 247, 254, 279, 282, 308, 318, 324, 338, 342, 358, 365, 377, 378, 379, 388, 426, 431, 432, 433, 436, 439, 440, 467, 468, 470, 471, 472, 473, 474, 475, 486, 492, 494, 496, 497], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 20, 22, 23, 24, 25, 29, 30, 31, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 100, 101, 102, 105, 110, 111, 112, 113, 128, 129, 130, 132, 133, 134, 135, 136, 142, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 181, 184, 186, 191, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 221, 223, 224, 232, 233, 235, 236, 237, 238, 240, 242, 245, 247, 249, 251, 252, 254, 257, 258, 259, 261, 264, 265, 272, 276, 278, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 316, 318, 320, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 346, 347, 348, 349, 351, 352, 353, 355, 356, 358, 363, 364, 365, 367, 368, 369, 370, 373, 375, 378, 380, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 404, 409, 410, 415, 418, 419, 421, 422, 423, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 439, 446, 447, 452, 454, 455, 456, 457, 458, 461, 462, 464, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 488, 489, 491, 492, 494, 495, 496, 497, 498, 499, 500], "broken": [0, 148, 285, 332, 397, 439, 470, 475, 488], "sever": [0, 74, 162, 216, 247, 254, 279, 324, 336, 430, 433, 439, 459, 468, 471, 475, 477, 488, 490], "phase": [0, 108, 137, 150, 159, 245], "import": [0, 1, 5, 30, 41, 73, 74, 76, 149, 151, 152, 162, 164, 166, 170, 172, 209, 212, 216, 234, 235, 240, 251, 254, 279, 298, 305, 324, 325, 334, 336, 342, 346, 356, 367, 385, 388, 391, 392, 393, 401, 402, 426, 429, 431, 434, 435, 436, 437, 438, 440, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 488, 489, 491, 492, 494, 500], "fundament": [0, 43, 57, 76, 77, 117, 138, 149, 150, 152, 308, 339, 396, 479], "depend": [0, 16, 23, 29, 34, 43, 44, 52, 53, 55, 74, 75, 76, 101, 148, 149, 162, 165, 166, 171, 200, 201, 202, 221, 232, 235, 236, 240, 252, 279, 281, 285, 290, 291, 305, 307, 308, 312, 324, 329, 331, 332, 339, 342, 352, 367, 369, 426, 430, 432, 433, 434, 438, 461, 464, 468, 469, 470, 471, 475, 476, 478, 486, 488, 490, 491, 493, 500], "python": [0, 1, 18, 34, 36, 44, 55, 63, 66, 67, 75, 76, 162, 163, 209, 216, 279, 285, 333, 336, 339, 364, 378, 385, 392, 394, 397, 400, 401, 426, 430, 431, 432, 433, 435, 436, 437, 439, 440, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 470, 471, 473, 478, 479, 480, 489, 491, 492, 494], "librari": [0, 18, 34, 44, 151, 152, 159, 160, 164, 166, 168, 170, 172, 173, 179, 184, 187, 191, 193, 196, 197, 198, 240, 247, 254, 259, 285, 291, 305, 308, 342, 356, 394, 402, 431, 432, 435, 436, 439, 440, 451, 454, 459, 460, 465, 466, 468, 470, 471, 474, 475, 480, 481, 488, 491, 492], "some": [0, 1, 2, 3, 4, 5, 7, 8, 12, 16, 17, 18, 25, 29, 36, 38, 41, 43, 46, 52, 53, 74, 75, 86, 101, 105, 142, 148, 149, 151, 152, 157, 162, 163, 164, 166, 169, 172, 176, 191, 195, 196, 200, 209, 210, 211, 216, 221, 222, 223, 233, 235, 236, 240, 247, 251, 262, 276, 279, 285, 286, 289, 290, 291, 296, 301, 305, 308, 309, 310, 323, 324, 325, 330, 331, 332, 334, 336, 339, 340, 342, 345, 346, 352, 355, 356, 357, 358, 364, 365, 367, 369, 377, 379, 381, 386, 394, 397, 398, 401, 402, 404, 415, 419, 425, 426, 430, 432, 433, 434, 436, 438, 439, 440, 441, 447, 461, 464, 466, 468, 469, 470, 471, 473, 475, 478, 479, 480, 481, 483, 485, 487, 488, 489, 490, 494, 496, 500], "third": [0, 29, 94, 164, 175, 208, 247, 279, 281, 290, 308, 312, 320, 331, 332, 342, 352, 398, 427, 432, 439, 462, 468, 479, 491, 492], "parti": [0, 29, 200, 432, 439, 468], "lib": [0, 80, 164, 168, 170, 173, 196, 197, 211, 247, 257, 259, 280, 308, 342, 385, 403, 439, 454, 459, 460], "investig": [0, 74, 476], "environ": [0, 44, 73, 74, 358, 364, 378, 430, 439, 468, 470, 479, 487, 490], "check": [0, 1, 4, 33, 39, 44, 58, 71, 75, 101, 122, 162, 186, 194, 195, 203, 206, 208, 211, 216, 233, 235, 236, 247, 249, 264, 269, 279, 285, 296, 305, 308, 310, 311, 313, 318, 320, 323, 325, 326, 332, 335, 342, 345, 346, 347, 364, 369, 370, 376, 381, 385, 397, 398, 399, 401, 403, 410, 419, 425, 432, 433, 435, 436, 438, 439, 467, 469, 470, 471, 473, 474, 478, 479, 489, 492, 500], "version": [0, 1, 2, 4, 5, 7, 8, 12, 41, 46, 57, 62, 65, 101, 141, 159, 162, 172, 203, 208, 236, 278, 279, 280, 291, 308, 336, 339, 342, 357, 363, 364, 365, 394, 397, 398, 402, 425, 433, 434, 468, 469, 470, 471, 473, 475, 478, 479, 480, 491, 492, 494, 500], "code": [0, 1, 3, 4, 5, 6, 7, 16, 17, 18, 24, 29, 44, 45, 57, 63, 65, 74, 75, 76, 83, 141, 148, 149, 151, 152, 157, 159, 162, 163, 164, 165, 166, 170, 173, 196, 199, 200, 209, 211, 212, 215, 216, 218, 233, 235, 240, 249, 250, 251, 252, 254, 255, 270, 279, 285, 286, 288, 289, 291, 296, 309, 311, 316, 324, 325, 326, 331, 332, 334, 339, 343, 356, 358, 375, 384, 386, 387, 390, 392, 394, 398, 407, 419, 426, 430, 431, 432, 433, 434, 435, 437, 438, 440, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 470, 471, 475, 477, 479, 484, 487, 488, 489, 491, 492, 494, 496], "mpi": [0, 2, 3, 5, 18, 24, 74, 75, 126, 200, 201, 215, 216, 236, 252, 259, 279, 308, 338, 377, 378, 379, 385, 391, 401, 418, 434, 467, 468, 469, 471, 492, 500], "situat": [0, 8, 203, 289, 302, 308, 325, 326, 333, 356, 382, 468, 475, 488], "tty": 0, "gui": [0, 57, 62, 63, 64, 74, 203, 279, 329, 358, 364, 398, 431, 433, 467, 468, 470, 471, 475, 479, 488, 489, 490, 493], "interact": [0, 3, 5, 6, 7, 8, 13, 16, 17, 60, 62, 63, 74, 75, 152, 164, 198, 199, 200, 223, 233, 235, 249, 252, 254, 257, 279, 338, 354, 430, 467, 468, 469, 470, 471, 473, 474, 475, 476, 484, 486, 492, 494, 497, 500], "set": [0, 1, 3, 4, 5, 6, 8, 12, 17, 18, 22, 25, 29, 33, 36, 40, 41, 42, 43, 44, 46, 47, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 86, 87, 92, 93, 96, 101, 142, 144, 146, 148, 151, 152, 160, 161, 164, 167, 168, 170, 171, 172, 173, 193, 196, 197, 199, 200, 201, 202, 203, 206, 208, 209, 211, 212, 213, 214, 216, 217, 223, 224, 226, 233, 235, 236, 237, 238, 240, 241, 242, 244, 247, 249, 251, 252, 254, 257, 261, 264, 265, 269, 270, 272, 273, 276, 278, 279, 281, 285, 286, 289, 290, 291, 292, 296, 305, 308, 310, 311, 312, 313, 315, 318, 322, 323, 324, 325, 326, 331, 333, 334, 336, 337, 338, 339, 342, 346, 347, 348, 352, 355, 375, 378, 382, 384, 385, 388, 389, 392, 397, 398, 399, 401, 402, 403, 404, 412, 422, 425, 426, 429, 431, 433, 435, 436, 438, 439, 447, 448, 452, 454, 462, 463, 468, 469, 470, 471, 472, 473, 474, 476, 478, 482, 483, 484, 486, 487, 488, 489, 490, 495, 496, 497, 498, 500], "up": [0, 3, 4, 5, 8, 16, 18, 23, 42, 44, 64, 74, 75, 76, 90, 101, 141, 143, 148, 149, 150, 151, 152, 159, 160, 162, 166, 196, 198, 200, 201, 203, 209, 211, 216, 232, 235, 247, 265, 272, 281, 285, 289, 291, 296, 300, 305, 308, 310, 312, 324, 325, 329, 332, 333, 334, 338, 339, 342, 346, 355, 375, 379, 385, 386, 389, 398, 402, 404, 406, 410, 415, 430, 431, 433, 436, 438, 439, 464, 468, 469, 470, 471, 473, 474, 475, 476, 478, 483, 484, 486, 488, 489, 491, 492, 495, 496, 500], "temp": [0, 22, 59, 74, 105, 305, 310, 318, 402, 471, 475, 492], "dir": [0, 59, 211, 390, 471], "printout": [0, 18, 52, 247, 301, 342, 470], "tabl": [0, 2, 4, 19, 20, 21, 22, 23, 52, 58, 77, 87, 89, 94, 102, 108, 110, 113, 120, 133, 137, 150, 151, 159, 181, 216, 251, 252, 261, 266, 281, 313, 342, 349, 392, 396, 434, 436, 478, 479, 488, 489, 491, 493, 494], "format": [0, 1, 3, 4, 5, 12, 20, 21, 34, 40, 42, 43, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 122, 128, 129, 130, 133, 134, 137, 138, 139, 152, 162, 163, 164, 169, 170, 171, 172, 174, 175, 176, 189, 190, 216, 242, 251, 252, 281, 287, 290, 291, 297, 298, 305, 342, 343, 350, 356, 358, 370, 385, 389, 392, 402, 404, 409, 434, 436, 438, 459, 460, 468, 470, 473, 478, 480, 488, 491, 492, 495], "prepar": [0, 75, 168, 208, 216, 240, 254, 308, 312, 324, 342, 385, 386, 476, 487], "log": [0, 3, 5, 52, 200, 352, 356, 358, 369, 370, 378, 382, 388, 404, 434, 454, 459, 471, 475, 478, 496], "info": [0, 16, 18, 75, 110, 133, 166, 172, 180, 186, 279, 308, 334, 336, 343, 356, 370, 385, 388, 429, 433, 440, 461, 473, 475, 478, 479, 484, 487, 492, 496], "all": [0, 1, 2, 3, 4, 5, 6, 8, 9, 16, 17, 18, 34, 41, 42, 44, 47, 48, 52, 57, 59, 63, 66, 69, 71, 74, 75, 76, 86, 101, 122, 126, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 162, 163, 164, 166, 168, 170, 171, 172, 173, 181, 184, 187, 191, 196, 198, 200, 201, 202, 209, 211, 213, 215, 216, 217, 224, 233, 235, 236, 240, 242, 244, 247, 251, 252, 254, 255, 257, 259, 264, 279, 281, 282, 285, 286, 289, 291, 302, 305, 308, 310, 312, 318, 324, 325, 326, 327, 332, 333, 334, 335, 336, 338, 339, 340, 342, 345, 346, 347, 348, 352, 355, 356, 364, 365, 368, 369, 370, 377, 384, 385, 386, 387, 389, 391, 392, 393, 394, 397, 398, 399, 402, 404, 410, 415, 426, 430, 432, 433, 435, 436, 438, 439, 440, 452, 461, 464, 467, 468, 469, 471, 473, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500], "possibl": [0, 3, 5, 6, 16, 17, 74, 75, 148, 162, 163, 200, 203, 217, 247, 278, 279, 281, 285, 286, 287, 291, 305, 312, 325, 334, 336, 338, 339, 342, 352, 364, 369, 394, 398, 399, 401, 402, 426, 438, 439, 440, 464, 468, 471, 475, 479, 482, 488, 491], "nuclid": [0, 5, 76, 79, 80, 86, 87, 99, 101, 105, 109, 128, 131, 132, 133, 134, 136, 143, 150, 151, 155, 156, 157, 159, 160, 161, 162, 166, 168, 170, 171, 173, 191, 193, 195, 196, 197, 198, 235, 236, 240, 242, 244, 245, 247, 251, 252, 255, 285, 286, 288, 289, 291, 296, 298, 300, 305, 308, 311, 318, 324, 342, 352, 389, 402, 409, 429, 451, 454, 455, 462, 463, 464, 465, 466, 467, 470, 471, 473, 474, 476, 481, 483, 484, 485, 486, 490, 492], "object": [0, 1, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29, 33, 40, 42, 43, 44, 45, 46, 50, 51, 52, 53, 55, 57, 63, 74, 75, 76, 101, 142, 148, 149, 150, 151, 152, 159, 160, 162, 163, 164, 166, 167, 168, 170, 172, 173, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 208, 211, 213, 214, 215, 216, 217, 224, 233, 236, 240, 242, 247, 249, 252, 254, 259, 265, 269, 272, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 296, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 315, 316, 318, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 345, 348, 351, 352, 354, 355, 356, 357, 358, 363, 364, 365, 367, 369, 375, 377, 378, 379, 384, 385, 386, 387, 389, 390, 394, 397, 398, 400, 402, 403, 404, 420, 426, 431, 435, 436, 438, 439, 440, 441, 462, 463, 466, 467, 468, 470, 471, 473, 476, 478, 481, 483, 484, 485, 488, 489, 492, 494], "directori": [0, 3, 5, 43, 44, 52, 53, 55, 59, 60, 66, 73, 74, 75, 151, 155, 159, 197, 200, 211, 247, 272, 342, 352, 356, 357, 369, 390, 391, 401, 410, 426, 431, 439, 453, 468, 469, 470, 471, 473, 475, 480, 489, 492, 495, 500], "discov": [0, 43, 44, 52, 53, 200, 221, 279, 433, 469, 478, 479, 500], "regist": [0, 1, 44, 72, 75, 278, 279, 282, 357, 367, 392, 435, 468, 474, 492, 497], "avail": [0, 1, 3, 5, 6, 16, 44, 57, 63, 148, 149, 151, 159, 172, 196, 198, 200, 201, 202, 208, 211, 235, 236, 240, 244, 251, 252, 279, 285, 291, 296, 308, 324, 339, 357, 367, 385, 392, 394, 425, 430, 432, 433, 435, 436, 438, 441, 466, 468, 473, 476, 477, 479, 480, 481, 486, 488, 489, 491, 492, 493, 494, 495, 497, 499], "built": [0, 8, 57, 197, 205, 216, 224, 233, 259, 264, 276, 279, 280, 281, 285, 286, 292, 308, 311, 318, 327, 384, 392, 430, 431, 433, 435, 439, 454, 467, 468, 473, 475, 488, 489, 492, 494], "plugin": [0, 1, 2, 22, 29, 44, 47, 52, 55, 57, 73, 75, 76, 90, 101, 110, 132, 149, 199, 202, 203, 209, 210, 212, 216, 221, 223, 224, 225, 228, 230, 233, 240, 241, 247, 252, 260, 263, 269, 270, 273, 275, 278, 280, 285, 289, 291, 305, 309, 324, 336, 338, 339, 357, 358, 361, 367, 369, 372, 380, 381, 384, 392, 394, 429, 434, 438, 446, 455, 461, 464, 468, 470, 471, 473, 474, 476, 480, 490, 491, 492, 495], "custom": [0, 1, 57, 63, 76, 90, 101, 105, 148, 199, 212, 215, 216, 221, 233, 236, 242, 247, 254, 265, 278, 279, 286, 289, 291, 298, 315, 324, 356, 357, 363, 364, 365, 374, 378, 389, 401, 402, 403, 408, 414, 426, 433, 435, 440, 462, 468, 470, 473, 474, 479, 489, 490, 492, 494, 496], "ones": [0, 57, 86, 152, 160, 163, 196, 221, 235, 285, 308, 342, 386, 455, 473, 475, 488, 489], "after": [0, 2, 13, 23, 46, 52, 69, 74, 75, 86, 101, 149, 164, 166, 172, 198, 200, 211, 216, 247, 254, 276, 279, 281, 285, 305, 308, 310, 312, 323, 324, 333, 334, 336, 338, 340, 342, 346, 347, 352, 356, 358, 384, 387, 392, 394, 398, 402, 403, 404, 433, 435, 436, 439, 440, 467, 471, 473, 475, 478, 484, 486, 488, 489, 491, 492], "input": [0, 1, 3, 5, 6, 12, 16, 17, 22, 25, 29, 36, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 57, 58, 60, 62, 63, 65, 66, 71, 75, 76, 86, 101, 122, 132, 141, 142, 143, 152, 156, 165, 166, 167, 170, 180, 182, 184, 195, 196, 200, 208, 211, 212, 215, 216, 217, 221, 235, 236, 240, 247, 251, 252, 254, 255, 279, 281, 285, 286, 287, 288, 289, 290, 291, 292, 296, 298, 299, 302, 303, 305, 308, 309, 312, 316, 318, 324, 325, 326, 334, 335, 342, 343, 346, 347, 350, 352, 355, 357, 358, 363, 364, 369, 376, 385, 386, 388, 389, 393, 398, 399, 400, 409, 415, 422, 425, 428, 431, 433, 434, 441, 451, 454, 455, 463, 464, 465, 466, 468, 470, 471, 473, 474, 475, 478, 481, 483, 484, 485, 487, 492, 493, 494, 495, 496], "defin": [0, 1, 3, 5, 7, 16, 17, 23, 29, 46, 55, 75, 76, 77, 85, 99, 100, 101, 105, 107, 112, 136, 142, 150, 152, 156, 159, 160, 162, 163, 169, 170, 172, 175, 176, 193, 196, 197, 200, 201, 202, 208, 212, 213, 216, 218, 220, 226, 227, 233, 235, 241, 247, 252, 254, 262, 265, 270, 276, 277, 279, 281, 285, 286, 287, 288, 289, 290, 291, 292, 296, 299, 302, 303, 305, 307, 308, 310, 311, 323, 324, 325, 327, 331, 333, 334, 336, 337, 338, 339, 340, 342, 350, 358, 360, 362, 364, 367, 375, 378, 381, 384, 386, 392, 394, 398, 401, 402, 404, 427, 428, 433, 435, 438, 439, 441, 447, 452, 454, 462, 464, 466, 467, 470, 471, 473, 474, 476, 478, 481, 484, 486, 489, 490, 491, 492, 494, 495], "potenti": [0, 18, 46, 75, 128, 129, 130, 159, 160, 200, 203, 211, 279, 331, 342, 365, 391, 399, 432, 433, 435, 438, 440, 468, 475, 478, 483, 486, 491, 499], "configur": [0, 1, 4, 73, 74, 236, 265, 279, 312, 364, 429, 433, 435, 439, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 468, 469, 470, 471, 473, 475, 478, 480, 483, 488, 492, 500], "from": [0, 1, 3, 4, 5, 6, 8, 12, 13, 16, 17, 18, 22, 23, 25, 29, 30, 31, 34, 36, 40, 41, 43, 44, 46, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 79, 84, 86, 87, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 105, 107, 108, 110, 111, 113, 117, 120, 122, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 141, 142, 143, 148, 149, 150, 151, 152, 156, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 179, 181, 183, 186, 187, 188, 191, 193, 196, 197, 198, 199, 200, 201, 203, 204, 208, 211, 212, 216, 217, 221, 224, 233, 235, 236, 237, 238, 240, 242, 244, 245, 247, 249, 251, 252, 254, 259, 264, 265, 269, 278, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 298, 299, 302, 304, 305, 308, 309, 310, 311, 312, 316, 318, 320, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 351, 352, 355, 356, 357, 358, 364, 365, 368, 369, 370, 375, 376, 378, 379, 384, 385, 386, 389, 390, 392, 394, 396, 397, 398, 399, 402, 404, 409, 426, 428, 431, 432, 433, 435, 436, 438, 439, 440, 441, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 490, 491, 492, 494, 496, 498, 500], "read": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 16, 31, 44, 75, 142, 152, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 215, 216, 221, 236, 242, 249, 250, 252, 265, 279, 286, 287, 292, 296, 299, 308, 324, 333, 338, 339, 342, 343, 350, 351, 358, 365, 368, 376, 386, 398, 402, 403, 406, 425, 426, 430, 431, 435, 436, 439, 468, 470, 471, 478, 479, 491, 494, 495], "file": [0, 1, 3, 4, 5, 6, 7, 8, 12, 16, 17, 20, 22, 23, 25, 29, 30, 31, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 78, 86, 116, 141, 142, 148, 149, 152, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 200, 201, 203, 206, 211, 213, 215, 216, 221, 234, 235, 236, 237, 240, 242, 244, 245, 247, 252, 254, 261, 264, 279, 281, 286, 287, 289, 290, 291, 292, 294, 295, 296, 299, 308, 309, 324, 325, 336, 339, 342, 343, 350, 352, 355, 356, 357, 358, 364, 365, 368, 369, 376, 382, 385, 386, 387, 388, 390, 391, 394, 399, 400, 401, 402, 404, 410, 426, 430, 431, 432, 433, 434, 437, 438, 440, 449, 454, 455, 459, 462, 463, 465, 468, 469, 470, 471, 473, 474, 478, 482, 487, 489, 490, 492, 495, 496, 500], "updat": [0, 2, 6, 44, 46, 55, 75, 101, 141, 143, 152, 156, 161, 162, 166, 172, 191, 196, 198, 200, 203, 204, 210, 211, 215, 233, 235, 240, 247, 249, 254, 257, 264, 272, 281, 285, 289, 291, 302, 305, 307, 308, 310, 312, 313, 318, 324, 334, 336, 338, 339, 342, 343, 347, 351, 352, 358, 364, 367, 369, 386, 389, 402, 434, 436, 439, 452, 468, 470, 471, 472, 473, 475, 488, 491, 492, 497], "deplet": [0, 75, 152, 160, 201, 209, 235, 236, 240, 244, 247, 250, 251, 252, 253, 255, 266, 280, 281, 285, 289, 291, 325, 336, 339, 385, 398, 433, 455, 467, 470, 471, 473, 479, 483, 484, 488, 491, 492], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 224, 226, 229, 230, 231, 233, 235, 236, 237, 240, 242, 244, 245, 247, 249, 251, 252, 254, 255, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 272, 276, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 397, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 433, 434, 438, 439, 440, 443, 447, 448, 450, 453, 464, 466, 468, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 484, 486, 488, 497], "config": [0, 73, 430], "state": [0, 1, 2, 3, 5, 6, 16, 17, 35, 41, 75, 77, 87, 90, 101, 110, 126, 133, 148, 152, 159, 166, 168, 172, 173, 196, 200, 203, 204, 209, 211, 215, 233, 235, 247, 249, 254, 276, 279, 282, 285, 305, 308, 310, 312, 318, 323, 324, 331, 336, 338, 339, 342, 343, 358, 379, 384, 392, 433, 435, 436, 438, 439, 444, 451, 464, 466, 467, 468, 474, 475, 479, 481, 486, 487, 488, 490, 491, 492, 495, 498], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 19, 22, 23, 25, 29, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 57, 63, 74, 75, 76, 77, 78, 79, 89, 92, 93, 94, 96, 101, 105, 110, 113, 136, 148, 150, 151, 152, 159, 163, 164, 167, 168, 169, 170, 172, 173, 174, 175, 176, 180, 196, 197, 198, 199, 200, 203, 208, 209, 213, 216, 217, 223, 226, 232, 233, 235, 236, 242, 247, 251, 252, 254, 259, 261, 273, 276, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 323, 324, 325, 329, 331, 332, 334, 335, 341, 342, 343, 346, 348, 351, 352, 355, 357, 358, 363, 364, 365, 369, 375, 378, 379, 381, 384, 385, 387, 389, 390, 391, 392, 394, 396, 397, 398, 401, 402, 403, 404, 426, 427, 428, 434, 435, 436, 462, 463, 467, 468, 470, 471, 473, 474, 479, 487, 488, 489, 490, 491, 492, 493, 494, 497], "data": [0, 1, 2, 3, 4, 5, 6, 8, 16, 19, 21, 23, 24, 40, 41, 42, 53, 75, 77, 78, 83, 89, 92, 93, 96, 102, 109, 113, 128, 129, 130, 134, 142, 149, 150, 151, 152, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 191, 195, 197, 198, 203, 208, 210, 211, 215, 216, 236, 240, 242, 247, 252, 254, 259, 276, 278, 279, 280, 281, 285, 287, 291, 292, 296, 299, 301, 303, 305, 308, 310, 312, 313, 324, 331, 333, 334, 336, 338, 339, 342, 343, 346, 363, 364, 369, 385, 386, 394, 402, 404, 422, 426, 431, 433, 434, 436, 438, 442, 444, 445, 448, 451, 452, 455, 462, 463, 466, 467, 468, 471, 473, 474, 475, 478, 479, 480, 481, 483, 487, 488, 492, 494, 495], "possibli": [0, 3, 5, 52, 75, 199, 302, 311, 402, 467, 473, 475, 488], "entri": [0, 1, 5, 34, 36, 43, 44, 52, 57, 58, 62, 63, 64, 65, 66, 71, 72, 74, 75, 160, 216, 217, 233, 279, 285, 288, 289, 290, 305, 308, 318, 343, 390, 397, 398, 434, 436, 470, 474, 479, 487, 488, 491, 494], "point": [0, 1, 3, 5, 23, 29, 34, 36, 42, 43, 44, 46, 47, 52, 53, 57, 58, 62, 63, 64, 65, 66, 71, 72, 74, 75, 105, 109, 112, 122, 128, 129, 130, 133, 134, 152, 160, 163, 166, 170, 180, 181, 198, 199, 200, 201, 216, 233, 236, 240, 247, 278, 279, 281, 286, 288, 290, 291, 294, 297, 298, 300, 309, 310, 313, 324, 327, 329, 332, 333, 334, 339, 342, 346, 348, 375, 398, 402, 423, 427, 434, 436, 438, 440, 447, 448, 467, 470, 473, 474, 478, 479, 480, 483, 484, 487, 488, 489, 491, 492, 494, 495], "choos": [0, 76, 142, 159, 199, 211, 291, 469, 475, 479, 488, 490, 491, 492, 500], "user": [0, 1, 3, 5, 7, 16, 20, 24, 29, 36, 44, 46, 52, 53, 57, 74, 76, 86, 90, 91, 101, 110, 132, 141, 149, 159, 160, 162, 164, 170, 197, 198, 199, 200, 203, 212, 213, 214, 216, 233, 235, 236, 240, 242, 247, 254, 265, 279, 281, 285, 287, 289, 291, 292, 296, 305, 308, 310, 326, 334, 336, 342, 352, 355, 356, 357, 358, 364, 365, 368, 382, 385, 386, 388, 390, 398, 401, 431, 432, 433, 435, 438, 439, 440, 464, 467, 468, 469, 471, 473, 475, 476, 480, 488, 489, 491, 492, 493, 495, 496, 497, 500], "command": [0, 16, 36, 44, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 164, 201, 203, 215, 216, 237, 279, 358, 364, 368, 387, 399, 430, 431, 436, 437, 439, 467, 468, 473, 475, 478, 488, 491, 496], "If": [0, 1, 3, 5, 6, 16, 18, 24, 36, 40, 44, 46, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 101, 132, 148, 149, 151, 152, 160, 161, 163, 164, 166, 167, 196, 197, 199, 200, 201, 203, 209, 211, 216, 217, 235, 236, 237, 240, 247, 251, 252, 254, 259, 278, 279, 281, 282, 285, 286, 287, 291, 305, 308, 309, 310, 311, 312, 318, 323, 324, 327, 329, 331, 332, 334, 336, 338, 339, 340, 342, 343, 346, 356, 358, 364, 365, 368, 369, 385, 389, 390, 392, 396, 397, 398, 401, 402, 404, 426, 430, 433, 436, 438, 439, 440, 468, 469, 473, 475, 479, 480, 483, 484, 488, 489, 491, 492, 494, 495, 496, 500], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 42, 43, 44, 45, 47, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 89, 92, 93, 94, 96, 101, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 132, 134, 135, 136, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 170, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 211, 213, 215, 216, 217, 220, 221, 222, 224, 229, 230, 231, 232, 235, 236, 237, 238, 240, 242, 244, 245, 247, 249, 251, 252, 254, 255, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 272, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 363, 364, 365, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 397, 398, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 445, 447, 448, 453, 455, 456, 462, 464, 466, 467, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 500], "run": [0, 1, 3, 4, 5, 6, 13, 16, 17, 18, 22, 24, 29, 30, 31, 34, 36, 43, 44, 45, 52, 53, 55, 57, 58, 59, 62, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 101, 148, 152, 159, 162, 178, 187, 193, 199, 200, 201, 202, 203, 204, 209, 211, 215, 216, 224, 233, 235, 236, 247, 249, 250, 252, 253, 254, 259, 264, 272, 279, 281, 285, 296, 308, 309, 311, 312, 318, 336, 339, 342, 352, 356, 357, 358, 369, 376, 377, 378, 379, 380, 385, 387, 392, 399, 402, 419, 430, 431, 432, 433, 434, 436, 437, 438, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 474, 476, 478, 479, 480, 483, 484, 486, 487, 488, 490, 491, 492, 494, 495, 496, 500], "addit": [0, 1, 2, 44, 57, 63, 148, 152, 162, 164, 170, 199, 200, 216, 236, 252, 276, 279, 285, 287, 302, 305, 308, 310, 312, 325, 333, 338, 340, 342, 364, 432, 433, 438, 440, 468, 471, 488, 490, 491, 492], "work": [0, 3, 5, 18, 40, 41, 42, 43, 44, 50, 52, 53, 55, 74, 75, 86, 101, 122, 141, 148, 184, 187, 197, 211, 216, 217, 242, 247, 249, 252, 267, 285, 290, 291, 292, 295, 296, 300, 305, 308, 310, 312, 316, 325, 326, 331, 340, 342, 343, 349, 352, 356, 364, 367, 369, 370, 375, 379, 382, 385, 386, 387, 390, 392, 396, 397, 401, 403, 409, 412, 418, 426, 430, 432, 433, 435, 436, 438, 440, 447, 448, 467, 468, 469, 471, 473, 475, 477, 479, 480, 482, 483, 489, 492, 495, 499, 500], "done": [0, 3, 18, 29, 44, 97, 98, 166, 216, 232, 240, 247, 249, 278, 305, 308, 309, 318, 325, 331, 338, 342, 369, 392, 397, 398, 399, 430, 431, 432, 433, 436, 440, 454, 468, 473, 475, 480, 488, 491], "build": [0, 3, 22, 25, 31, 43, 44, 50, 53, 57, 75, 76, 149, 181, 197, 198, 199, 200, 211, 212, 216, 217, 235, 240, 242, 247, 259, 269, 279, 281, 285, 289, 290, 292, 302, 310, 311, 319, 324, 327, 328, 329, 332, 335, 342, 343, 345, 346, 352, 355, 364, 434, 435, 440, 441, 447, 448, 451, 454, 456, 457, 458, 465, 466, 467, 468, 473, 474, 475, 476, 478, 481, 488, 489, 493], "oper": [0, 1, 2, 3, 5, 6, 8, 13, 25, 43, 44, 57, 74, 75, 148, 149, 167, 198, 214, 215, 216, 240, 279, 285, 291, 305, 308, 312, 316, 318, 323, 325, 326, 332, 334, 338, 339, 342, 352, 367, 371, 378, 385, 386, 397, 401, 403, 412, 429, 434, 435, 436, 439, 463, 467, 469, 470, 471, 473, 474, 475, 479, 480, 485, 488, 490, 491, 492, 499, 500], "specif": [0, 1, 2, 3, 4, 5, 8, 16, 17, 22, 29, 38, 39, 40, 44, 46, 52, 53, 55, 63, 75, 76, 77, 89, 92, 93, 96, 101, 105, 110, 136, 149, 150, 151, 152, 156, 163, 164, 166, 169, 171, 174, 196, 197, 198, 199, 200, 201, 208, 210, 211, 216, 222, 236, 240, 247, 252, 254, 269, 278, 279, 281, 282, 285, 287, 290, 291, 302, 305, 308, 309, 311, 313, 316, 318, 324, 325, 336, 338, 339, 340, 342, 347, 356, 370, 375, 378, 384, 386, 394, 398, 399, 404, 430, 431, 432, 433, 435, 438, 439, 440, 446, 467, 468, 471, 475, 477, 478, 479, 480, 483, 488, 491, 492, 493, 494], "calcul": [0, 3, 5, 29, 52, 75, 79, 89, 92, 93, 96, 101, 105, 107, 131, 136, 148, 151, 152, 160, 166, 172, 193, 198, 199, 200, 201, 208, 211, 224, 232, 233, 235, 236, 238, 240, 247, 249, 253, 254, 257, 264, 279, 281, 285, 303, 305, 308, 309, 310, 311, 312, 318, 324, 334, 339, 342, 345, 346, 347, 389, 396, 399, 413, 423, 433, 447, 452, 467, 468, 470, 471, 473, 475, 476, 478, 479, 480, 484, 486, 488, 489, 491, 492, 497], "loop": [0, 13, 16, 74, 148, 199, 200, 201, 203, 204, 208, 216, 224, 342, 345, 385, 402, 404, 433, 439, 464, 468, 473, 475, 478, 486, 496], "order": [0, 1, 3, 6, 8, 53, 75, 76, 89, 92, 93, 94, 96, 102, 148, 149, 152, 160, 162, 163, 164, 166, 167, 170, 172, 175, 200, 204, 208, 216, 217, 235, 264, 279, 281, 285, 305, 310, 311, 324, 332, 338, 342, 345, 346, 355, 379, 385, 399, 402, 403, 433, 436, 438, 447, 468, 470, 471, 473, 475, 479, 484, 488, 489, 492, 494], "stack": [0, 3, 6, 8, 16, 17, 75, 200, 201, 279, 281, 285, 318, 384, 455, 462, 463, 467, 471, 473, 475, 479, 480, 488, 492], "begin": [0, 2, 3, 5, 6, 17, 19, 22, 23, 67, 75, 162, 163, 200, 215, 233, 235, 261, 279, 281, 332, 342, 385, 386, 433, 438, 467, 473, 475, 476, 477, 483, 484, 486, 491, 492, 496, 498], "over": [0, 1, 16, 25, 30, 76, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139, 148, 159, 166, 172, 199, 200, 204, 208, 240, 249, 254, 281, 282, 285, 307, 308, 311, 312, 318, 324, 333, 336, 339, 342, 345, 397, 399, 402, 412, 433, 452, 454, 464, 468, 469, 478, 484, 488, 491, 497, 499, 500], "upon": [0, 5, 23, 41, 58, 63, 75, 149, 152, 199, 200, 211, 214, 305, 308, 325, 334, 338, 339, 342, 346, 369, 394, 412, 431, 433, 454, 468, 492], "accord": [0, 19, 53, 60, 166, 172, 235, 285, 342, 386, 433, 476, 489, 496], "design": [0, 1, 2, 16, 18, 19, 22, 25, 44, 46, 52, 53, 58, 75, 80, 101, 122, 150, 152, 210, 216, 236, 252, 279, 280, 281, 282, 285, 286, 289, 292, 308, 309, 310, 312, 316, 322, 327, 334, 342, 346, 358, 364, 433, 434, 435, 438, 439, 447, 467, 468, 470, 474, 476, 479, 488, 489, 492, 493, 498], "until": [0, 42, 216, 279, 292, 302, 305, 311, 338, 340, 348, 364, 396, 398, 426, 436, 438, 468, 489, 497], "complet": [0, 3, 13, 52, 63, 71, 75, 149, 211, 247, 291, 292, 296, 303, 304, 308, 311, 324, 333, 342, 369, 385, 432, 435, 439, 440, 455, 462, 463, 473, 475, 478, 479, 488, 492, 494, 496], "wrap": [0, 18, 20, 23, 200, 285, 304, 305, 346, 369, 425, 435, 438, 471, 473, 478, 479], "quit": [0, 1, 209, 247, 282, 311, 378, 468, 475, 476, 479, 488], "disablefutureconfigur": [0, 429], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 244, 245, 247, 249, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 469, 472, 473, 475, 477, 484, 486, 489, 491, 492, 493, 500], "expos": [0, 1, 6, 16, 17, 18, 24, 29, 226, 233, 235, 240, 276, 278, 279, 280, 381, 384, 435, 473], "function": [0, 1, 3, 5, 6, 8, 16, 17, 18, 24, 25, 29, 34, 39, 40, 44, 46, 50, 53, 55, 57, 58, 63, 75, 78, 86, 101, 105, 113, 122, 152, 163, 175, 200, 203, 205, 208, 216, 217, 235, 236, 240, 242, 246, 247, 250, 251, 252, 253, 254, 257, 259, 262, 279, 281, 282, 285, 286, 291, 295, 296, 308, 322, 324, 326, 332, 333, 334, 336, 338, 339, 342, 343, 346, 347, 351, 356, 359, 363, 364, 367, 369, 372, 373, 375, 377, 381, 382, 384, 385, 387, 392, 394, 397, 398, 399, 401, 402, 404, 411, 422, 425, 426, 428, 431, 433, 435, 436, 438, 439, 440, 454, 467, 468, 470, 471, 473, 475, 476, 478, 489, 491, 492, 497, 498], "ensur": [0, 50, 55, 71, 72, 150, 163, 183, 188, 189, 190, 195, 208, 211, 221, 235, 240, 244, 245, 247, 249, 265, 289, 295, 296, 298, 302, 313, 318, 323, 324, 333, 342, 346, 347, 348, 350, 356, 367, 370, 375, 376, 409, 412, 430, 436, 438, 439, 440, 470, 475, 480, 491], "isn": [0, 8, 39, 75, 198, 282, 325, 342, 438, 439, 440, 475, 479, 480], "t": [0, 2, 3, 4, 5, 8, 16, 17, 31, 39, 41, 44, 52, 55, 74, 75, 76, 80, 89, 90, 91, 94, 101, 105, 133, 136, 150, 152, 156, 159, 160, 164, 184, 196, 197, 198, 200, 201, 203, 204, 216, 232, 235, 236, 245, 247, 251, 259, 265, 276, 279, 282, 285, 286, 305, 308, 311, 325, 326, 327, 332, 333, 336, 338, 340, 342, 350, 352, 358, 363, 369, 387, 389, 396, 397, 398, 401, 402, 403, 410, 415, 419, 426, 428, 430, 431, 432, 434, 435, 436, 438, 461, 468, 469, 471, 473, 475, 476, 478, 479, 480, 483, 484, 488, 491, 492, 494, 498, 500], "call": [0, 1, 3, 5, 6, 8, 16, 17, 23, 29, 36, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 101, 142, 148, 150, 152, 159, 200, 201, 203, 209, 211, 213, 214, 216, 217, 221, 233, 235, 236, 237, 240, 242, 247, 249, 251, 252, 254, 278, 279, 281, 285, 290, 292, 296, 300, 305, 308, 310, 312, 320, 324, 326, 329, 332, 334, 335, 338, 339, 340, 342, 351, 356, 358, 364, 368, 369, 370, 379, 382, 384, 385, 387, 390, 394, 397, 399, 401, 419, 435, 436, 438, 439, 440, 471, 473, 475, 479, 480, 482, 489, 491, 494], "more": [0, 1, 3, 4, 5, 6, 8, 16, 29, 31, 34, 40, 41, 44, 47, 52, 53, 57, 75, 76, 90, 101, 122, 141, 152, 157, 159, 160, 162, 163, 170, 172, 198, 200, 203, 216, 217, 224, 236, 240, 242, 247, 279, 282, 285, 286, 290, 292, 296, 305, 307, 308, 309, 310, 311, 324, 325, 326, 327, 329, 331, 333, 334, 338, 342, 348, 355, 358, 364, 369, 386, 387, 392, 394, 396, 402, 404, 426, 427, 432, 433, 435, 436, 438, 439, 441, 455, 456, 457, 458, 461, 464, 466, 468, 471, 473, 474, 475, 476, 478, 479, 480, 481, 488, 489, 491, 492, 493, 494], "than": [0, 3, 4, 5, 16, 31, 41, 45, 46, 53, 74, 101, 122, 132, 136, 151, 152, 157, 160, 163, 164, 172, 175, 197, 200, 204, 208, 211, 216, 233, 235, 236, 247, 252, 279, 281, 285, 291, 302, 304, 305, 308, 318, 325, 329, 331, 332, 334, 335, 342, 355, 358, 364, 386, 387, 394, 396, 397, 401, 402, 404, 439, 440, 454, 462, 464, 468, 470, 473, 475, 479, 480, 483, 484, 488, 491, 492, 496], "onc": [0, 5, 152, 162, 209, 265, 285, 286, 312, 316, 319, 323, 324, 346, 358, 433, 435, 437, 438, 473, 475, 478, 482, 483, 488, 489, 491], "isstablereleasevers": [0, 429], "none": [0, 3, 4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 29, 36, 41, 42, 44, 46, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 148, 150, 151, 152, 159, 160, 161, 163, 180, 193, 196, 197, 198, 200, 203, 208, 211, 215, 216, 217, 221, 224, 235, 236, 237, 240, 242, 247, 249, 251, 252, 254, 255, 257, 259, 279, 281, 282, 285, 286, 289, 292, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 315, 316, 318, 324, 327, 328, 329, 331, 332, 334, 335, 338, 339, 340, 342, 345, 348, 351, 352, 355, 356, 357, 358, 363, 364, 368, 369, 370, 371, 375, 378, 379, 381, 384, 385, 389, 390, 391, 392, 397, 398, 399, 402, 404, 409, 415, 425, 426, 428, 430, 431, 436, 438, 457, 462, 463, 470, 473, 475, 478, 479, 489, 491, 492, 494], "determin": [0, 3, 5, 8, 23, 25, 44, 52, 53, 75, 148, 151, 152, 160, 162, 163, 164, 193, 197, 199, 200, 202, 216, 217, 235, 236, 240, 247, 251, 254, 279, 281, 285, 287, 291, 302, 303, 305, 308, 310, 311, 312, 318, 336, 338, 342, 346, 347, 357, 369, 370, 396, 398, 399, 402, 418, 426, 433, 439, 468, 471, 473, 475, 484, 488, 489, 491, 492], "should": [0, 1, 3, 4, 5, 6, 16, 18, 40, 44, 46, 52, 53, 55, 58, 63, 74, 75, 90, 101, 136, 141, 148, 149, 150, 152, 157, 159, 160, 162, 163, 164, 166, 172, 196, 197, 198, 200, 202, 208, 211, 213, 216, 217, 232, 233, 236, 240, 242, 247, 254, 259, 279, 281, 282, 285, 286, 287, 289, 291, 292, 303, 304, 305, 307, 308, 310, 311, 312, 313, 318, 324, 325, 326, 329, 331, 333, 334, 336, 338, 339, 340, 342, 346, 348, 351, 356, 358, 361, 364, 369, 370, 372, 377, 379, 382, 386, 387, 392, 394, 397, 398, 399, 402, 403, 404, 424, 430, 432, 433, 434, 436, 440, 468, 469, 474, 475, 478, 479, 480, 483, 484, 486, 488, 489, 490, 491, 492, 500], "consid": [0, 44, 75, 101, 151, 163, 236, 240, 242, 247, 249, 254, 279, 281, 285, 308, 309, 310, 318, 331, 333, 339, 342, 364, 394, 432, 439, 440, 447, 448, 452, 468, 480, 488, 489, 491, 492], "stabl": [0, 3, 5, 152, 331, 440, 471, 478], "releas": [0, 44, 136, 152, 162, 166, 223, 434, 468, 491], "init": [0, 74, 159, 200, 310, 325, 348, 358, 394, 412, 429, 430, 455, 462, 463, 471, 473, 480, 489], "choic": [0, 279, 291, 357, 473, 478], "fname": [0, 3, 4, 6, 16, 23, 75, 172, 198, 216, 247, 252, 281, 285, 311, 342, 343, 358, 385, 402, 404, 426, 473, 480], "c": [0, 1, 2, 3, 4, 5, 6, 8, 12, 13, 16, 17, 18, 22, 24, 25, 29, 33, 43, 44, 46, 52, 53, 55, 63, 67, 75, 76, 77, 78, 79, 80, 87, 89, 90, 92, 93, 94, 96, 101, 107, 109, 110, 113, 122, 148, 150, 152, 157, 159, 162, 168, 172, 193, 196, 197, 199, 200, 201, 203, 204, 208, 211, 212, 215, 216, 217, 221, 224, 226, 233, 235, 236, 240, 242, 247, 249, 252, 254, 257, 259, 261, 276, 279, 280, 285, 286, 287, 288, 289, 291, 292, 298, 304, 305, 308, 310, 312, 313, 315, 318, 323, 324, 325, 342, 343, 344, 348, 352, 358, 363, 365, 371, 375, 378, 384, 385, 390, 392, 398, 428, 431, 436, 438, 439, 448, 452, 453, 454, 462, 470, 473, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 488, 489, 491, 492, 494], "scan": [0, 18, 342, 357, 369, 426], "load": [0, 1, 2, 3, 5, 6, 12, 13, 16, 17, 22, 25, 31, 44, 52, 62, 64, 86, 101, 122, 149, 150, 152, 162, 196, 200, 204, 208, 215, 216, 221, 224, 233, 236, 242, 244, 245, 247, 269, 279, 280, 281, 285, 286, 292, 294, 296, 318, 321, 323, 342, 343, 350, 352, 353, 357, 358, 364, 365, 376, 377, 384, 386, 397, 433, 435, 436, 439, 446, 463, 464, 470, 471, 474, 475, 478, 479, 480, 486, 488, 489, 491, 492, 495], "one": [0, 1, 3, 4, 5, 6, 8, 13, 16, 17, 18, 23, 24, 29, 40, 41, 43, 44, 46, 52, 53, 55, 57, 69, 73, 74, 75, 101, 141, 142, 148, 150, 157, 159, 160, 162, 166, 169, 172, 186, 196, 197, 200, 201, 203, 208, 212, 215, 216, 217, 221, 235, 236, 240, 242, 247, 249, 251, 254, 259, 279, 285, 300, 302, 303, 304, 305, 307, 308, 309, 311, 312, 319, 324, 327, 328, 329, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 346, 352, 355, 356, 357, 358, 364, 365, 369, 370, 375, 378, 384, 385, 386, 392, 394, 397, 398, 401, 402, 404, 406, 415, 430, 433, 436, 438, 439, 440, 446, 464, 468, 469, 471, 473, 474, 475, 479, 480, 488, 489, 491, 492, 496, 497, 498, 500], "int": [0, 3, 4, 5, 6, 8, 16, 23, 44, 47, 52, 53, 57, 62, 63, 74, 75, 92, 93, 96, 150, 151, 152, 163, 166, 172, 200, 216, 217, 232, 235, 236, 247, 254, 279, 281, 282, 285, 288, 289, 308, 311, 327, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 342, 357, 385, 389, 394, 396, 397, 398, 402, 404, 428, 494], "option": [0, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 23, 24, 29, 34, 36, 41, 42, 44, 46, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 92, 93, 96, 101, 110, 133, 134, 135, 136, 148, 150, 151, 152, 159, 160, 163, 164, 167, 172, 196, 197, 200, 208, 211, 213, 215, 216, 217, 221, 224, 232, 233, 235, 236, 237, 240, 242, 247, 249, 251, 252, 254, 259, 265, 279, 281, 282, 285, 286, 287, 289, 291, 292, 302, 305, 307, 308, 310, 311, 312, 316, 318, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 339, 342, 348, 352, 355, 356, 357, 358, 364, 365, 368, 369, 375, 378, 379, 381, 384, 385, 387, 389, 390, 391, 392, 397, 398, 402, 404, 425, 426, 431, 433, 435, 436, 438, 440, 468, 470, 471, 473, 475, 477, 478, 479, 480, 487, 488, 489, 491, 492, 493, 497], "automat": [0, 53, 75, 152, 159, 233, 236, 240, 252, 282, 285, 308, 339, 340, 342, 363, 364, 392, 394, 439, 447, 448, 451, 465, 466, 468, 469, 473, 476, 479, 481, 488, 500], "item": [0, 18, 19, 23, 52, 53, 116, 149, 159, 160, 163, 216, 239, 242, 247, 281, 287, 288, 308, 327, 331, 334, 336, 338, 339, 354, 355, 357, 358, 385, 386, 387, 396, 397, 398, 404, 430, 438, 439, 446, 453, 457, 461, 462, 469, 473, 477, 500], "out": [0, 1, 3, 4, 5, 7, 8, 13, 16, 18, 20, 25, 29, 40, 42, 44, 45, 52, 53, 75, 101, 150, 152, 157, 162, 164, 184, 196, 197, 198, 200, 216, 217, 221, 223, 235, 240, 247, 251, 252, 279, 285, 286, 296, 304, 305, 307, 308, 312, 324, 325, 329, 336, 342, 343, 358, 365, 382, 384, 386, 387, 389, 404, 415, 426, 432, 433, 434, 435, 436, 440, 446, 452, 468, 470, 471, 473, 475, 478, 479, 480, 483, 484, 488, 489, 492, 493, 496, 497], "menu": [0, 491], "would": [0, 1, 2, 3, 5, 8, 42, 53, 58, 63, 74, 75, 101, 148, 152, 159, 162, 166, 200, 203, 216, 236, 240, 242, 279, 281, 282, 285, 305, 308, 311, 325, 326, 328, 331, 334, 336, 338, 339, 340, 342, 352, 355, 364, 378, 385, 386, 391, 392, 394, 398, 404, 426, 433, 436, 438, 439, 446, 455, 464, 467, 470, 471, 473, 475, 476, 478, 479, 480, 488, 489, 491], "produc": [0, 1, 4, 34, 36, 42, 44, 53, 58, 63, 79, 82, 113, 126, 166, 171, 172, 187, 193, 194, 196, 200, 235, 236, 242, 252, 285, 290, 318, 326, 328, 334, 335, 342, 365, 387, 388, 399, 402, 404, 419, 437, 467, 468, 470, 475, 478, 484, 486, 488, 491, 492, 495, 499], "exist": [0, 3, 5, 6, 34, 41, 43, 44, 52, 57, 60, 62, 66, 74, 75, 76, 149, 150, 152, 154, 159, 160, 167, 196, 197, 198, 200, 203, 240, 247, 254, 259, 264, 265, 267, 279, 281, 282, 285, 288, 305, 308, 312, 324, 336, 338, 339, 342, 343, 356, 358, 388, 390, 394, 399, 401, 404, 410, 418, 431, 433, 436, 438, 439, 440, 459, 467, 468, 469, 470, 475, 477, 484, 486, 488, 489, 491, 492, 494, 500], "xml": [0, 42, 343, 357, 365, 480], "str": [0, 1, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 19, 24, 29, 36, 40, 41, 42, 44, 46, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 101, 150, 151, 152, 159, 160, 163, 165, 167, 169, 171, 172, 174, 175, 176, 196, 197, 200, 203, 208, 211, 215, 216, 217, 221, 235, 236, 237, 240, 242, 247, 251, 254, 259, 279, 280, 281, 285, 286, 288, 290, 291, 302, 305, 308, 311, 312, 313, 318, 324, 326, 327, 329, 331, 336, 338, 339, 342, 343, 347, 352, 355, 356, 357, 358, 363, 364, 365, 368, 369, 375, 378, 384, 385, 386, 387, 389, 390, 391, 392, 394, 398, 401, 402, 403, 404, 426, 428, 438, 446], "an": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 36, 38, 39, 40, 42, 43, 44, 46, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 80, 88, 90, 101, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 136, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 220, 221, 222, 229, 230, 231, 233, 234, 235, 236, 237, 240, 242, 244, 245, 247, 249, 251, 252, 254, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 272, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 310, 311, 312, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 364, 365, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 452, 454, 456, 459, 460, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498], "actual": [0, 1, 3, 5, 31, 42, 74, 75, 160, 162, 163, 200, 209, 212, 216, 235, 236, 247, 282, 285, 298, 301, 305, 308, 326, 331, 332, 333, 334, 336, 339, 358, 364, 365, 369, 386, 402, 426, 430, 431, 435, 440, 455, 464, 471, 475, 479, 480, 488, 489], "case": [0, 1, 2, 3, 5, 6, 7, 8, 12, 22, 25, 29, 42, 57, 58, 60, 61, 62, 68, 69, 74, 75, 76, 80, 86, 101, 141, 148, 149, 150, 152, 157, 159, 160, 162, 166, 170, 194, 199, 200, 201, 206, 211, 215, 216, 221, 223, 233, 236, 247, 249, 251, 252, 254, 261, 264, 265, 272, 279, 285, 287, 291, 296, 304, 305, 308, 309, 312, 316, 318, 324, 325, 329, 331, 336, 339, 342, 350, 356, 358, 364, 376, 377, 382, 385, 386, 398, 399, 401, 404, 415, 429, 431, 433, 438, 439, 440, 441, 446, 447, 448, 455, 462, 463, 466, 467, 469, 470, 471, 473, 475, 476, 478, 480, 481, 483, 486, 488, 489, 490, 492, 494, 495, 496, 498, 500], "name": [0, 1, 2, 3, 5, 6, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 75, 76, 77, 78, 79, 80, 84, 86, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 142, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 160, 162, 163, 164, 167, 170, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 203, 205, 206, 207, 208, 209, 211, 212, 215, 216, 219, 220, 221, 222, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 249, 250, 251, 252, 254, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 272, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 325, 333, 336, 337, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 389, 392, 394, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 431, 433, 434, 438, 440, 452, 453, 461, 462, 464, 467, 469, 470, 471, 473, 475, 477, 478, 479, 480, 483, 484, 485, 486, 489, 490, 491, 492, 494, 499, 500], "e": [0, 1, 3, 4, 5, 6, 7, 8, 18, 23, 29, 34, 44, 57, 74, 75, 76, 86, 90, 92, 93, 96, 139, 148, 149, 150, 151, 152, 157, 159, 160, 162, 163, 164, 172, 191, 196, 197, 198, 199, 200, 217, 223, 235, 236, 240, 247, 251, 252, 254, 279, 280, 281, 285, 286, 289, 290, 302, 305, 308, 310, 312, 318, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 338, 339, 342, 356, 358, 363, 364, 370, 385, 389, 397, 398, 401, 402, 426, 430, 432, 433, 435, 436, 439, 462, 467, 468, 469, 470, 471, 473, 475, 478, 479, 484, 485, 488, 489, 490, 491, 492, 497, 500], "g": [0, 1, 3, 5, 6, 7, 8, 18, 29, 34, 44, 57, 74, 75, 76, 77, 79, 86, 87, 90, 97, 98, 99, 100, 101, 105, 107, 110, 130, 131, 132, 133, 134, 136, 148, 150, 151, 152, 157, 159, 160, 162, 164, 166, 172, 175, 181, 191, 196, 197, 198, 199, 200, 217, 223, 232, 235, 236, 247, 251, 254, 259, 279, 281, 285, 286, 289, 290, 302, 305, 308, 312, 318, 324, 325, 326, 327, 331, 332, 334, 336, 338, 339, 342, 356, 364, 370, 385, 389, 397, 401, 402, 432, 433, 435, 436, 439, 459, 462, 467, 468, 469, 470, 471, 473, 475, 476, 478, 479, 484, 485, 486, 488, 490, 491, 492, 497, 500], "nttwr1": 0, "suppli": [0, 3, 16, 44, 47, 53, 60, 75, 101, 148, 198, 286, 308, 338, 343, 399, 402, 468, 488, 491, 492], "superced": 0, "other": [0, 1, 3, 4, 5, 6, 16, 17, 18, 24, 29, 34, 40, 44, 46, 52, 53, 57, 63, 69, 73, 74, 75, 101, 132, 148, 149, 159, 160, 162, 164, 166, 170, 180, 181, 191, 196, 197, 198, 200, 201, 204, 211, 216, 223, 235, 236, 240, 245, 247, 257, 259, 279, 285, 286, 290, 296, 302, 303, 304, 305, 308, 309, 310, 311, 312, 327, 331, 333, 334, 335, 336, 338, 339, 340, 342, 346, 352, 358, 363, 369, 384, 385, 386, 394, 397, 398, 402, 418, 431, 433, 435, 436, 438, 439, 440, 467, 468, 469, 470, 473, 475, 476, 477, 478, 479, 480, 485, 488, 489, 491, 492, 493, 494, 496, 497, 500], "method": [0, 1, 3, 4, 5, 11, 12, 13, 14, 16, 18, 20, 27, 28, 31, 32, 33, 38, 39, 44, 46, 50, 51, 52, 53, 55, 56, 63, 71, 72, 75, 79, 86, 99, 101, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 142, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 162, 163, 166, 168, 170, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 200, 201, 203, 204, 206, 207, 208, 211, 213, 216, 220, 221, 222, 229, 230, 231, 232, 235, 236, 241, 242, 244, 245, 247, 249, 252, 255, 257, 258, 259, 262, 264, 265, 266, 267, 268, 269, 272, 279, 281, 285, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 307, 308, 310, 312, 315, 316, 318, 319, 320, 321, 322, 323, 324, 327, 329, 334, 336, 338, 339, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 364, 365, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 394, 396, 397, 398, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 433, 434, 435, 436, 438, 440, 456, 467, 468, 469, 471, 473, 475, 488, 489, 491, 492, 494, 500], "directli": [0, 1, 3, 4, 5, 16, 42, 74, 76, 101, 152, 160, 169, 174, 203, 240, 279, 285, 287, 290, 302, 305, 308, 310, 329, 332, 334, 335, 340, 342, 364, 369, 432, 438, 454, 462, 464, 468, 471, 475, 478, 480, 488, 494], "exampl": [0, 1, 3, 5, 8, 16, 23, 43, 46, 52, 53, 57, 73, 74, 75, 76, 101, 142, 148, 149, 150, 151, 152, 157, 159, 160, 161, 162, 164, 169, 170, 171, 172, 174, 175, 176, 196, 197, 200, 201, 213, 216, 217, 235, 236, 242, 247, 252, 279, 281, 285, 286, 287, 289, 290, 291, 292, 305, 308, 309, 311, 312, 324, 325, 327, 329, 333, 334, 335, 339, 340, 342, 346, 351, 355, 363, 364, 369, 381, 385, 387, 394, 397, 398, 399, 402, 403, 422, 426, 430, 431, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 473, 475, 476, 477, 478, 479, 480, 481, 483, 484, 486, 488, 490, 491, 492, 494, 496, 497], "o": [0, 3, 18, 25, 75, 105, 107, 134, 143, 148, 150, 152, 162, 167, 203, 211, 242, 247, 252, 257, 285, 291, 308, 312, 339, 352, 369, 390, 392, 401, 436, 437, 439, 448, 455, 462, 464, 471, 473, 476, 480, 484, 488, 493], "getdefaultplugin": [0, 429], "list": [0, 1, 3, 5, 8, 16, 18, 23, 29, 30, 31, 36, 41, 44, 46, 52, 53, 56, 57, 63, 67, 75, 76, 92, 93, 96, 101, 148, 149, 151, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 191, 193, 196, 197, 200, 208, 211, 215, 216, 217, 235, 236, 240, 242, 247, 251, 252, 254, 279, 281, 282, 285, 287, 288, 289, 290, 291, 302, 305, 308, 310, 311, 313, 318, 324, 325, 326, 328, 331, 332, 333, 335, 338, 339, 342, 343, 348, 351, 355, 357, 358, 359, 361, 364, 367, 369, 370, 375, 379, 385, 386, 389, 390, 392, 393, 394, 397, 398, 399, 401, 402, 404, 409, 426, 430, 433, 436, 438, 440, 451, 452, 465, 466, 467, 470, 471, 473, 477, 479, 480, 481, 483, 484, 485, 486, 489, 491, 492, 494, 495, 499], "type": [0, 3, 4, 5, 7, 8, 13, 16, 22, 23, 25, 38, 40, 44, 46, 52, 53, 63, 74, 75, 76, 77, 78, 79, 81, 89, 91, 92, 93, 94, 95, 96, 99, 101, 109, 110, 113, 122, 133, 134, 136, 139, 148, 150, 151, 152, 156, 157, 160, 163, 164, 171, 175, 191, 196, 197, 198, 199, 200, 202, 203, 216, 217, 221, 232, 233, 235, 236, 242, 247, 249, 254, 279, 280, 281, 282, 285, 286, 287, 290, 291, 294, 297, 298, 300, 302, 305, 308, 309, 310, 311, 312, 316, 318, 322, 324, 325, 326, 328, 331, 332, 334, 335, 336, 338, 339, 340, 342, 348, 352, 355, 357, 358, 364, 367, 372, 385, 386, 389, 394, 396, 397, 398, 400, 401, 402, 403, 404, 426, 428, 431, 432, 433, 435, 436, 438, 439, 447, 454, 464, 468, 469, 470, 471, 473, 475, 477, 479, 480, 483, 484, 485, 489, 490, 491, 492, 494, 498, 500], "armiplugin": [0, 1, 2, 55, 57, 212, 226, 233, 270, 276, 279, 280, 367, 372, 381, 429, 435, 475, 488], "return": [0, 1, 3, 4, 5, 6, 7, 8, 13, 16, 21, 22, 23, 29, 40, 44, 52, 53, 57, 63, 75, 76, 77, 78, 79, 80, 81, 84, 89, 92, 93, 94, 96, 100, 101, 105, 108, 110, 111, 113, 134, 136, 137, 138, 148, 150, 151, 152, 157, 159, 161, 163, 164, 166, 168, 170, 172, 173, 175, 179, 193, 195, 196, 197, 198, 199, 200, 203, 208, 214, 216, 217, 225, 232, 233, 235, 236, 238, 240, 242, 247, 249, 251, 252, 254, 260, 275, 279, 281, 282, 285, 290, 291, 302, 303, 304, 305, 306, 308, 310, 311, 318, 319, 323, 324, 326, 328, 329, 331, 332, 333, 334, 335, 338, 339, 342, 343, 346, 348, 351, 352, 355, 357, 358, 361, 363, 364, 365, 369, 384, 385, 387, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 402, 404, 410, 426, 427, 428, 435, 436, 438, 439, 454, 462, 464, 471, 473, 475, 478, 479, 489, 498], "contain": [0, 1, 3, 5, 8, 18, 23, 34, 40, 42, 44, 52, 53, 74, 75, 89, 92, 93, 96, 101, 148, 149, 152, 156, 157, 159, 160, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 191, 194, 196, 197, 198, 200, 203, 204, 209, 216, 233, 235, 236, 238, 240, 242, 244, 247, 250, 251, 252, 255, 259, 267, 279, 280, 281, 282, 285, 287, 288, 289, 290, 292, 302, 303, 305, 308, 309, 310, 312, 318, 319, 324, 325, 326, 327, 331, 333, 336, 339, 340, 342, 343, 346, 355, 358, 359, 361, 363, 365, 369, 370, 381, 385, 386, 388, 389, 392, 394, 396, 397, 398, 400, 401, 402, 403, 404, 422, 426, 428, 433, 435, 436, 437, 438, 440, 442, 443, 445, 450, 454, 466, 467, 468, 469, 473, 475, 478, 480, 481, 483, 484, 488, 489, 490, 491, 492, 493, 494, 500], "default": [0, 1, 2, 3, 4, 5, 9, 16, 22, 23, 25, 29, 41, 43, 44, 46, 53, 57, 62, 63, 75, 76, 79, 81, 86, 89, 101, 122, 150, 152, 160, 170, 196, 197, 203, 208, 211, 216, 217, 232, 233, 236, 247, 249, 254, 265, 279, 281, 282, 285, 286, 290, 291, 292, 308, 310, 324, 325, 332, 334, 336, 337, 338, 339, 342, 347, 352, 355, 356, 357, 358, 364, 365, 367, 368, 372, 381, 385, 390, 398, 402, 426, 430, 431, 435, 438, 440, 469, 470, 471, 473, 475, 478, 480, 483, 488, 489, 491, 492, 497, 500], "framework": [0, 1, 44, 73, 75, 76, 149, 150, 152, 157, 199, 200, 209, 216, 233, 236, 240, 250, 279, 325, 340, 357, 359, 361, 369, 372, 391, 432, 434, 435, 442, 445, 446, 455, 468, 471, 473, 475, 476, 478, 488, 491, 492, 495, 500], "applic": [0, 1, 53, 55, 57, 63, 73, 74, 75, 141, 150, 152, 233, 236, 240, 324, 339, 346, 370, 386, 392, 431, 432, 434, 439, 468, 469, 471, 475, 477, 479, 484, 488, 500], "fold": 0, "": [0, 1, 3, 4, 5, 6, 8, 13, 16, 17, 18, 23, 24, 29, 31, 36, 42, 44, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 78, 82, 98, 101, 105, 110, 132, 133, 134, 136, 139, 141, 148, 149, 150, 152, 154, 157, 159, 162, 163, 164, 166, 175, 196, 197, 198, 199, 200, 203, 204, 211, 215, 216, 232, 235, 237, 240, 247, 251, 279, 281, 282, 285, 286, 288, 290, 302, 305, 308, 309, 312, 325, 327, 329, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 355, 356, 358, 364, 368, 382, 384, 385, 386, 389, 394, 396, 397, 398, 399, 401, 402, 404, 426, 427, 430, 432, 433, 434, 435, 436, 437, 438, 442, 445, 453, 454, 462, 466, 468, 469, 473, 475, 476, 477, 479, 480, 481, 483, 484, 486, 488, 489, 491, 492, 493, 494, 500], "capabl": [0, 44, 52, 167, 200, 209, 216, 221, 233, 346, 419, 426, 435, 436, 441, 466, 470, 471, 473, 479, 480, 481, 488], "its": [0, 1, 5, 75, 101, 113, 122, 148, 149, 152, 166, 200, 203, 217, 232, 245, 280, 281, 285, 290, 296, 302, 305, 307, 308, 311, 321, 324, 336, 338, 340, 342, 352, 357, 358, 364, 370, 372, 389, 398, 402, 430, 433, 435, 438, 444, 451, 466, 467, 468, 469, 470, 473, 476, 481, 483, 484, 486, 487, 488, 489, 491, 494, 495, 500], "own": [0, 1, 23, 46, 53, 148, 159, 162, 166, 211, 216, 236, 240, 242, 247, 279, 282, 296, 308, 309, 336, 340, 357, 364, 372, 394, 431, 439, 441, 447, 448, 461, 464, 466, 468, 470, 471, 475, 478, 481, 488, 492, 498], "getdefaultpluginmanag": [0, 429], "armipluginmanag": [0, 1, 278, 279, 429], "manag": [0, 1, 3, 6, 24, 41, 44, 46, 148, 149, 200, 203, 204, 209, 212, 215, 216, 217, 221, 233, 235, 236, 240, 242, 264, 278, 279, 282, 308, 310, 318, 325, 339, 342, 363, 369, 372, 375, 390, 433, 434, 451, 465, 466, 467, 468, 469, 471, 474, 475, 478, 481, 484, 487, 490, 491, 492, 494, 496, 500], "when": [0, 2, 4, 5, 8, 11, 12, 13, 14, 16, 18, 20, 23, 27, 28, 29, 31, 32, 33, 36, 38, 39, 41, 42, 44, 47, 50, 51, 52, 53, 55, 56, 62, 63, 67, 71, 72, 73, 74, 75, 76, 79, 86, 90, 101, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 200, 201, 203, 206, 207, 208, 211, 216, 217, 220, 221, 222, 229, 230, 231, 233, 235, 236, 240, 244, 245, 247, 249, 254, 257, 258, 261, 264, 265, 266, 267, 268, 269, 272, 278, 279, 281, 282, 285, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 308, 310, 311, 312, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 331, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 364, 365, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 394, 397, 398, 399, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 435, 436, 438, 439, 440, 462, 468, 469, 470, 471, 475, 477, 478, 479, 480, 482, 483, 484, 485, 488, 489, 491, 492, 494, 497, 500], "standalon": [0, 20, 197, 468], "facil": 0, "without": [0, 3, 8, 39, 42, 44, 52, 75, 86, 101, 122, 134, 141, 148, 151, 157, 197, 200, 203, 216, 236, 247, 285, 289, 291, 296, 311, 324, 329, 334, 336, 356, 369, 370, 378, 397, 399, 401, 402, 430, 435, 438, 439, 440, 464, 467, 468, 469, 470, 471, 479, 484, 488, 491, 500], "isconfigur": [0, 429, 473, 478], "whether": [0, 3, 5, 8, 23, 36, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 101, 142, 152, 172, 195, 200, 203, 233, 237, 240, 247, 285, 291, 292, 305, 308, 310, 329, 331, 336, 339, 355, 357, 364, 365, 368, 370, 385, 401, 426, 438, 439, 468, 469, 471, 479, 488, 491, 492, 494, 500], "ha": [0, 1, 3, 5, 8, 13, 16, 18, 23, 31, 34, 44, 52, 53, 58, 74, 75, 80, 82, 88, 89, 101, 116, 122, 148, 149, 151, 157, 162, 163, 172, 175, 193, 200, 201, 203, 208, 211, 216, 217, 240, 242, 247, 249, 251, 257, 259, 265, 278, 279, 281, 282, 285, 287, 291, 295, 296, 302, 305, 307, 308, 310, 311, 312, 318, 323, 324, 325, 326, 329, 332, 333, 334, 336, 337, 338, 340, 342, 343, 346, 347, 348, 350, 351, 352, 357, 358, 364, 367, 369, 385, 390, 394, 397, 398, 401, 403, 421, 422, 426, 433, 436, 438, 440, 456, 464, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 483, 484, 486, 488, 489, 491, 492, 494, 500], "been": [0, 3, 4, 5, 6, 16, 41, 42, 44, 52, 75, 162, 164, 193, 196, 201, 211, 215, 216, 247, 249, 251, 265, 278, 279, 281, 282, 285, 287, 305, 308, 310, 325, 333, 336, 337, 338, 339, 340, 342, 343, 347, 348, 351, 367, 369, 390, 393, 394, 397, 398, 403, 433, 436, 438, 439, 464, 467, 468, 470, 475, 478, 480, 484, 488, 489, 497], "app": [0, 52, 57, 76, 203, 209, 260, 279, 372, 376, 392, 429, 431, 433, 434, 470, 473, 474, 478, 480, 492, 497], "getpluginmanag": [0, 429], "getpluginmanagerorfail": [0, 279, 429], "rais": [0, 3, 6, 11, 12, 13, 14, 16, 17, 27, 28, 29, 31, 32, 33, 38, 39, 44, 50, 51, 52, 53, 55, 56, 71, 72, 74, 75, 76, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 146, 147, 148, 152, 154, 155, 156, 157, 158, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 199, 200, 203, 206, 207, 208, 220, 221, 222, 229, 230, 231, 233, 235, 236, 244, 245, 247, 249, 254, 257, 258, 264, 265, 266, 267, 268, 269, 272, 279, 285, 286, 292, 294, 295, 296, 297, 298, 299, 300, 301, 308, 310, 318, 319, 320, 321, 322, 323, 325, 337, 338, 339, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 364, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 390, 401, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "error": [0, 1, 3, 5, 6, 55, 57, 58, 75, 101, 122, 148, 157, 159, 164, 166, 194, 196, 200, 201, 203, 211, 236, 247, 279, 292, 296, 308, 309, 325, 326, 335, 336, 337, 340, 356, 357, 364, 365, 367, 372, 385, 388, 390, 392, 397, 398, 403, 426, 429, 433, 438, 439, 440, 468, 469, 471, 475, 478, 479, 484, 486, 488, 492, 496, 500], "getapp": [0, 429], "permiss": [0, 2, 3, 5, 7, 401, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 468, 479], "fals": [0, 3, 5, 6, 16, 22, 25, 44, 58, 63, 75, 101, 122, 148, 150, 152, 163, 164, 166, 168, 170, 172, 173, 196, 197, 200, 203, 208, 211, 216, 235, 236, 240, 254, 255, 257, 259, 281, 285, 286, 290, 292, 294, 298, 300, 302, 303, 304, 305, 307, 308, 310, 312, 313, 318, 324, 326, 328, 329, 331, 332, 333, 334, 335, 342, 347, 348, 355, 356, 358, 364, 370, 371, 385, 387, 389, 398, 400, 401, 402, 404, 426, 431, 433, 471, 473, 477, 478, 480, 488, 491, 492], "intern": [0, 3, 4, 6, 42, 53, 75, 89, 136, 160, 172, 196, 217, 236, 326, 331, 334, 338, 342, 379, 433, 435, 439, 467, 471, 472, 475], "those": [0, 5, 39, 42, 53, 75, 152, 164, 216, 279, 281, 285, 291, 305, 308, 309, 324, 325, 326, 333, 336, 339, 342, 385, 397, 402, 433, 435, 438, 439, 469, 473, 475, 479, 480, 488, 491, 500], "instanc": [0, 3, 4, 5, 8, 11, 12, 13, 14, 18, 27, 28, 31, 32, 33, 38, 39, 41, 50, 51, 53, 55, 56, 71, 72, 74, 75, 80, 87, 101, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 134, 136, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 163, 164, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 198, 206, 207, 208, 216, 220, 221, 222, 229, 230, 231, 236, 244, 245, 249, 254, 257, 258, 264, 265, 266, 267, 268, 269, 272, 279, 281, 282, 286, 287, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 308, 311, 312, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 334, 336, 338, 339, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 364, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 394, 397, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 432, 433, 435, 436, 439, 440, 464, 468, 470, 473, 476, 477, 483, 488, 491, 492, 494], "which": [0, 1, 3, 4, 5, 8, 16, 23, 39, 40, 42, 44, 52, 53, 62, 63, 73, 74, 75, 76, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 136, 137, 138, 139, 148, 149, 152, 156, 160, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 175, 193, 196, 197, 198, 199, 200, 201, 202, 203, 214, 216, 217, 221, 223, 235, 236, 238, 240, 242, 247, 249, 251, 252, 254, 260, 261, 279, 281, 282, 285, 287, 290, 291, 292, 302, 303, 304, 305, 308, 310, 312, 318, 324, 325, 326, 331, 332, 333, 336, 339, 340, 342, 343, 351, 352, 357, 358, 365, 369, 370, 385, 387, 390, 392, 394, 396, 397, 398, 404, 426, 433, 435, 436, 437, 438, 439, 440, 447, 448, 464, 468, 469, 470, 473, 475, 476, 478, 479, 480, 483, 484, 488, 489, 490, 491, 492, 494, 496, 497, 500], "provid": [0, 1, 3, 5, 6, 16, 18, 25, 30, 36, 40, 44, 46, 53, 57, 63, 67, 71, 74, 75, 76, 83, 90, 101, 110, 132, 148, 149, 150, 152, 159, 162, 168, 170, 173, 191, 197, 200, 203, 209, 216, 235, 236, 241, 242, 247, 254, 255, 262, 272, 279, 281, 282, 285, 290, 291, 292, 305, 308, 310, 311, 318, 324, 325, 326, 334, 336, 339, 342, 346, 347, 356, 358, 364, 367, 369, 381, 384, 387, 390, 394, 397, 402, 426, 428, 430, 431, 435, 438, 439, 440, 444, 451, 455, 457, 461, 464, 466, 468, 469, 471, 475, 476, 479, 480, 481, 483, 484, 485, 486, 488, 491, 492, 494, 496, 499, 500], "onli": [0, 2, 3, 5, 6, 7, 8, 13, 16, 20, 29, 34, 41, 42, 53, 73, 75, 101, 132, 142, 148, 149, 152, 159, 160, 163, 172, 181, 196, 197, 198, 200, 211, 213, 214, 216, 217, 233, 235, 242, 247, 249, 252, 254, 259, 265, 279, 281, 285, 286, 290, 292, 298, 302, 303, 304, 305, 308, 310, 312, 316, 318, 323, 324, 325, 327, 329, 331, 332, 333, 336, 338, 339, 342, 343, 346, 356, 358, 361, 364, 365, 368, 369, 370, 378, 379, 385, 388, 392, 393, 394, 397, 398, 399, 402, 404, 409, 426, 432, 435, 436, 438, 439, 440, 447, 448, 468, 471, 473, 475, 478, 479, 480, 483, 484, 486, 488, 491, 492, 493, 494, 497], "true": [0, 3, 5, 13, 18, 22, 23, 25, 43, 44, 52, 57, 63, 75, 101, 122, 148, 149, 150, 152, 163, 164, 166, 168, 170, 173, 190, 196, 197, 200, 203, 216, 233, 235, 236, 240, 242, 247, 249, 252, 254, 259, 281, 285, 286, 291, 292, 294, 298, 300, 302, 303, 305, 307, 308, 310, 311, 312, 318, 324, 325, 326, 329, 332, 333, 339, 342, 346, 347, 348, 357, 358, 364, 365, 385, 390, 392, 397, 398, 400, 401, 402, 426, 430, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 468, 473, 477, 479, 480, 488, 491, 492, 493, 497], "under": [0, 3, 5, 52, 73, 74, 105, 211, 216, 233, 252, 279, 288, 302, 305, 308, 345, 355, 378, 432, 433, 439, 440, 468, 469, 475, 479, 488, 495, 497, 500], "test": [0, 2, 3, 19, 34, 43, 44, 45, 52, 57, 58, 73, 74, 76, 141, 149, 161, 162, 197, 199, 209, 212, 223, 233, 239, 246, 253, 278, 280, 286, 292, 308, 309, 325, 327, 331, 336, 357, 358, 364, 385, 399, 427, 429, 430, 433, 434, 441, 446, 447, 448, 452, 454, 455, 459, 460, 463, 466, 467, 468, 469, 470, 471, 475, 478, 480, 481, 488, 491, 492, 500], "demonstr": [0, 264, 346, 347, 352, 373, 419, 438, 441, 454, 455, 466, 467, 470, 474, 480, 481], "purpos": [0, 3, 5, 76, 149, 163, 197, 199, 211, 233, 235, 265, 285, 308, 326, 331, 342, 361, 392, 438, 439, 440, 455, 467, 470, 489], "where": [0, 2, 3, 5, 8, 16, 17, 23, 25, 29, 40, 51, 53, 55, 75, 76, 101, 105, 149, 150, 151, 152, 159, 163, 164, 172, 198, 200, 206, 208, 209, 211, 216, 217, 221, 235, 236, 240, 254, 265, 279, 281, 282, 285, 300, 302, 305, 308, 310, 318, 319, 324, 325, 326, 327, 328, 329, 331, 333, 334, 339, 340, 342, 375, 378, 384, 385, 398, 401, 426, 435, 438, 439, 440, 468, 470, 471, 475, 480, 483, 484, 486, 488, 489, 491, 492, 494, 497, 498], "content": [0, 2, 3, 5, 8, 20, 22, 23, 163, 172, 194, 233, 242, 261, 279, 290, 331, 332, 369, 370, 386, 390, 392, 426, 438, 440, 461, 473, 488], "otherwis": [0, 1, 3, 5, 6, 44, 75, 148, 152, 159, 160, 163, 216, 247, 281, 285, 289, 324, 325, 329, 331, 332, 334, 336, 338, 342, 369, 386, 398, 399, 401, 426, 436, 468, 476, 486, 489, 497], "independ": [0, 3, 5, 44, 46, 52, 53, 164, 166, 201, 204, 233, 234, 240, 311, 324, 436, 440, 468, 475, 479, 488, 492, 498], "script": [0, 2, 19, 21, 74, 233, 237, 436, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 469, 470, 475, 478, 479, 480, 489, 492, 494, 500], "need": [0, 1, 3, 5, 7, 8, 16, 24, 41, 44, 46, 52, 53, 55, 62, 86, 101, 141, 142, 148, 149, 152, 162, 166, 172, 193, 197, 200, 201, 202, 203, 211, 216, 235, 236, 240, 247, 251, 254, 259, 279, 281, 282, 285, 286, 287, 290, 291, 292, 305, 308, 309, 310, 312, 324, 325, 326, 329, 332, 334, 336, 339, 340, 342, 346, 352, 356, 358, 364, 369, 378, 386, 394, 398, 399, 402, 403, 409, 426, 430, 431, 432, 433, 435, 436, 438, 439, 440, 446, 455, 468, 469, 470, 473, 475, 476, 477, 478, 479, 480, 483, 488, 489, 491, 492, 493, 494, 500], "same": [0, 3, 4, 5, 6, 16, 44, 46, 52, 63, 74, 77, 85, 99, 100, 101, 107, 112, 136, 148, 149, 152, 157, 163, 166, 172, 175, 178, 179, 184, 196, 200, 201, 235, 236, 240, 279, 281, 282, 285, 308, 310, 311, 312, 324, 325, 326, 332, 335, 336, 337, 338, 339, 342, 346, 348, 356, 377, 379, 387, 392, 398, 399, 401, 402, 403, 426, 430, 433, 436, 438, 439, 440, 452, 468, 469, 471, 473, 475, 477, 479, 480, 484, 488, 491, 492, 500], "sinc": [0, 1, 3, 6, 7, 16, 23, 42, 44, 53, 75, 101, 116, 148, 152, 159, 162, 163, 164, 166, 168, 170, 173, 180, 198, 200, 201, 204, 235, 236, 247, 254, 259, 264, 279, 281, 285, 290, 302, 305, 308, 311, 325, 328, 334, 336, 338, 339, 340, 342, 346, 352, 372, 385, 387, 391, 394, 426, 438, 464, 468, 470, 473, 475, 477, 479, 480, 483, 486, 488, 489, 491], "affect": [0, 5, 73, 101, 223, 282, 285, 308, 325, 384, 385, 402, 439, 471, 479, 488, 492], "behavior": [0, 1, 3, 5, 31, 75, 116, 142, 176, 201, 217, 223, 233, 236, 244, 279, 289, 290, 302, 308, 324, 325, 333, 336, 339, 357, 364, 388, 394, 403, 435, 470, 471, 490, 491, 492], "time": [0, 1, 2, 3, 4, 5, 6, 12, 16, 23, 29, 41, 42, 44, 47, 74, 75, 101, 141, 148, 149, 152, 157, 160, 164, 172, 199, 200, 204, 208, 209, 216, 233, 235, 236, 240, 247, 249, 252, 254, 259, 261, 278, 279, 281, 291, 305, 308, 318, 324, 328, 333, 339, 342, 356, 369, 370, 382, 384, 385, 387, 397, 398, 399, 401, 402, 404, 407, 433, 434, 436, 438, 440, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 475, 479, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 495, 497, 499, 500], "gener": [0, 2, 3, 4, 5, 16, 19, 20, 22, 24, 25, 31, 36, 40, 42, 43, 52, 53, 57, 58, 63, 67, 74, 75, 86, 141, 142, 143, 148, 149, 150, 152, 156, 157, 159, 162, 171, 173, 193, 196, 199, 200, 203, 209, 211, 216, 217, 218, 223, 226, 227, 229, 230, 233, 235, 236, 240, 242, 247, 249, 251, 254, 255, 261, 262, 264, 268, 270, 272, 276, 277, 279, 281, 285, 286, 291, 292, 302, 305, 308, 309, 310, 311, 312, 313, 315, 324, 325, 331, 332, 334, 336, 340, 342, 357, 361, 362, 365, 369, 378, 385, 386, 387, 390, 392, 396, 397, 402, 404, 426, 427, 430, 432, 433, 434, 438, 440, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 470, 471, 475, 476, 478, 479, 480, 481, 482, 484, 486, 488, 489, 492, 494, 495, 496, 497], "safe": [0, 44, 278, 279, 305, 326, 334, 338, 356, 364, 372, 486], "re": [0, 3, 5, 17, 62, 74, 81, 101, 110, 142, 150, 152, 159, 163, 216, 251, 281, 285, 290, 302, 308, 309, 312, 324, 333, 355, 375, 399, 426, 433, 439, 455, 464, 470, 475, 478, 479, 480, 483, 484, 491], "therefor": [0, 3, 5, 148, 166, 200, 235, 240, 251, 279, 296, 308, 318, 325, 329, 339, 342, 399, 402, 404, 421, 433, 439, 489, 494], "runtimeerror": [0, 3, 6, 17, 29, 44, 53, 55, 75, 157, 200, 203, 208, 247, 279, 308, 310, 318, 375, 378, 384], "attempt": [0, 3, 4, 5, 44, 46, 52, 55, 62, 235, 247, 279, 287, 290, 292, 324, 325, 337, 338, 340, 358, 365, 385, 386, 397, 399, 403, 426, 468, 470, 471, 492], "unless": [0, 17, 41, 150, 152, 159, 252, 331, 342, 397, 435, 436, 438, 439, 440, 468, 469, 479, 488, 500], "we": [0, 1, 2, 3, 4, 5, 6, 8, 12, 23, 42, 52, 55, 71, 74, 77, 85, 99, 101, 107, 112, 126, 136, 151, 152, 156, 157, 159, 162, 163, 166, 172, 183, 184, 188, 189, 190, 193, 197, 200, 201, 208, 209, 216, 217, 224, 233, 235, 245, 247, 254, 257, 260, 261, 264, 265, 279, 281, 282, 285, 286, 289, 290, 291, 292, 296, 300, 302, 305, 308, 309, 310, 323, 324, 326, 331, 333, 334, 336, 338, 339, 340, 342, 346, 347, 348, 350, 351, 352, 355, 356, 364, 367, 370, 376, 377, 378, 379, 380, 382, 384, 386, 392, 394, 398, 399, 401, 406, 412, 426, 430, 432, 433, 435, 436, 437, 438, 439, 440, 446, 457, 460, 467, 468, 469, 472, 473, 475, 476, 477, 478, 479, 480, 483, 488, 489, 490, 494, 497, 498, 500], "ar": [0, 1, 3, 4, 5, 6, 8, 16, 17, 18, 23, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 46, 47, 52, 53, 55, 57, 63, 74, 75, 76, 77, 78, 79, 80, 84, 86, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 105, 107, 108, 109, 110, 112, 113, 122, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 141, 142, 148, 149, 150, 151, 152, 156, 159, 160, 162, 164, 165, 166, 170, 171, 172, 179, 181, 184, 186, 190, 193, 196, 197, 198, 199, 200, 201, 203, 204, 208, 209, 210, 211, 213, 216, 217, 220, 221, 223, 224, 235, 236, 238, 240, 242, 244, 245, 247, 249, 251, 252, 254, 259, 261, 264, 269, 276, 278, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 295, 296, 298, 300, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 316, 318, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 345, 346, 348, 352, 355, 357, 358, 361, 363, 364, 365, 367, 368, 369, 375, 376, 378, 379, 381, 384, 385, 386, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 404, 415, 419, 426, 428, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 452, 454, 459, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 476, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "plan": [0, 164, 342, 435, 469, 479, 488, 500], "encapsul": [0, 1, 196], "much": [0, 1, 3, 5, 16, 48, 90, 133, 149, 194, 200, 236, 279, 285, 286, 287, 325, 329, 331, 342, 347, 352, 386, 394, 426, 433, 435, 436, 440, 467, 468, 473, 475, 479, 488, 489, 491, 492], "global": [0, 1, 74, 76, 150, 152, 166, 170, 172, 200, 211, 240, 242, 244, 246, 247, 249, 265, 279, 281, 285, 305, 308, 324, 327, 333, 334, 336, 339, 342, 356, 358, 361, 388, 434, 440, 455, 468, 470, 471, 477, 480, 486, 488, 491, 492, 493, 497], "get": [0, 1, 2, 3, 4, 5, 6, 12, 18, 19, 23, 30, 42, 44, 52, 53, 57, 74, 75, 76, 79, 86, 90, 99, 101, 132, 141, 148, 149, 150, 151, 152, 154, 155, 156, 159, 160, 161, 162, 164, 170, 180, 196, 197, 198, 200, 211, 216, 217, 235, 242, 247, 251, 252, 267, 279, 281, 282, 285, 287, 290, 291, 295, 302, 305, 308, 312, 318, 322, 324, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 348, 352, 355, 356, 364, 367, 370, 376, 377, 385, 386, 389, 391, 398, 399, 404, 406, 409, 410, 426, 427, 431, 432, 434, 435, 436, 437, 438, 440, 470, 473, 475, 476, 478, 479, 487, 488, 489, 491, 492, 493, 494], "itself": [0, 3, 5, 42, 46, 62, 148, 149, 196, 282, 285, 302, 334, 336, 340, 342, 346, 357, 385, 386, 426, 430, 431, 433, 435, 438, 462, 468, 470, 473, 475, 478, 479, 489, 497], "thing": [0, 1, 3, 5, 6, 16, 20, 22, 25, 44, 52, 57, 74, 101, 148, 151, 160, 194, 203, 212, 240, 247, 279, 281, 282, 285, 290, 291, 300, 302, 308, 311, 324, 325, 326, 327, 331, 333, 334, 336, 338, 342, 348, 356, 357, 358, 370, 386, 398, 401, 431, 433, 435, 436, 438, 439, 441, 466, 467, 468, 470, 473, 475, 478, 479, 480, 481, 488, 489, 490, 494, 496], "go": [0, 8, 16, 83, 101, 152, 216, 269, 279, 281, 285, 286, 305, 312, 325, 338, 342, 398, 402, 430, 435, 436, 440, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 475, 488, 493], "number": [0, 3, 4, 5, 8, 16, 23, 28, 41, 44, 47, 52, 75, 79, 86, 101, 117, 134, 148, 149, 150, 151, 152, 163, 164, 166, 169, 172, 179, 193, 196, 197, 200, 216, 217, 221, 232, 235, 236, 240, 242, 247, 252, 254, 259, 264, 281, 282, 285, 288, 289, 298, 304, 305, 308, 310, 311, 312, 313, 318, 320, 323, 324, 325, 328, 329, 332, 334, 336, 338, 342, 346, 347, 348, 352, 356, 358, 364, 370, 375, 377, 385, 386, 389, 392, 394, 396, 397, 398, 402, 403, 404, 409, 413, 420, 426, 433, 436, 440, 453, 461, 470, 471, 474, 475, 476, 477, 479, 480, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 499], "benefit": [0, 3, 42, 53, 128, 129, 130, 332, 333, 336, 430, 433, 462, 468], "main": [0, 1, 3, 5, 6, 17, 39, 42, 57, 71, 77, 148, 149, 164, 197, 200, 201, 211, 233, 278, 279, 285, 288, 289, 308, 338, 343, 378, 432, 433, 440, 455, 462, 463, 469, 471, 473, 475, 488, 489, 491, 496, 500], "being": [0, 3, 4, 5, 16, 18, 34, 42, 44, 46, 63, 75, 76, 101, 142, 148, 149, 152, 160, 163, 169, 174, 175, 176, 180, 200, 203, 216, 217, 221, 223, 233, 236, 240, 254, 279, 281, 285, 290, 297, 305, 308, 311, 312, 318, 323, 324, 325, 327, 331, 340, 351, 364, 375, 385, 393, 398, 401, 403, 404, 426, 427, 464, 468, 471, 475, 483, 488, 489, 491, 494, 497], "becom": [0, 16, 40, 160, 279, 285, 304, 305, 311, 333, 335, 336, 342, 367, 402, 431, 432, 433, 468, 489], "trivial": [0, 46, 305, 308, 326, 339, 394, 399, 436], "current": [0, 2, 3, 5, 6, 16, 23, 29, 44, 46, 52, 60, 74, 75, 101, 148, 159, 161, 162, 164, 167, 168, 170, 172, 173, 186, 196, 197, 200, 203, 209, 211, 216, 217, 235, 236, 240, 247, 254, 261, 279, 285, 286, 290, 305, 308, 310, 312, 325, 327, 334, 339, 342, 343, 346, 358, 364, 365, 385, 386, 388, 398, 426, 435, 436, 438, 439, 447, 470, 473, 483, 484, 485, 488, 492, 497, 499], "applyasynciowindowsworkaround": [0, 429], "appli": [0, 1, 3, 6, 53, 75, 76, 79, 86, 101, 102, 132, 141, 142, 152, 196, 211, 217, 235, 236, 246, 247, 252, 265, 269, 279, 281, 285, 286, 287, 290, 291, 292, 305, 308, 310, 324, 325, 331, 334, 336, 338, 340, 342, 357, 385, 397, 430, 432, 436, 454, 455, 462, 463, 470, 471, 473, 475, 479, 480, 483, 484, 485, 488, 491, 494], "asyncio": 0, "workaround": 0, "window": [0, 1, 18, 55, 74, 401, 430, 468, 469, 492, 500], "3": [0, 3, 5, 8, 16, 18, 23, 31, 43, 53, 66, 75, 77, 78, 90, 92, 93, 96, 101, 105, 109, 110, 126, 132, 133, 134, 136, 143, 148, 149, 150, 152, 160, 164, 168, 170, 173, 174, 176, 183, 188, 196, 203, 208, 210, 216, 217, 232, 233, 238, 240, 244, 247, 281, 285, 289, 290, 292, 298, 302, 305, 307, 308, 309, 312, 323, 325, 326, 329, 332, 333, 334, 342, 346, 347, 355, 385, 386, 396, 397, 398, 402, 406, 422, 425, 430, 433, 436, 440, 446, 448, 454, 456, 458, 464, 468, 469, 473, 476, 477, 478, 479, 483, 484, 485, 486, 488, 489, 491, 492, 494, 498, 500], "8": [0, 8, 75, 78, 109, 134, 139, 150, 152, 210, 217, 236, 238, 242, 290, 311, 312, 325, 326, 329, 333, 334, 348, 353, 389, 394, 397, 402, 438, 446, 453, 454, 455, 456, 457, 473, 477, 478, 479, 480, 488, 489, 492], "prevent": [0, 2, 30, 247, 279, 324, 336, 338, 351, 370, 380, 403, 469, 500], "notimplementederror": [0, 21, 475], "hi": [0, 483, 484], "show": [0, 16, 18, 24, 25, 31, 42, 156, 164, 170, 184, 186, 187, 198, 265, 300, 324, 333, 346, 347, 370, 380, 384, 385, 387, 398, 402, 404, 436, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 464, 467, 477, 480, 489, 492, 494, 496], "dure": [0, 1, 3, 5, 12, 16, 18, 29, 44, 73, 75, 76, 86, 101, 148, 152, 159, 160, 162, 166, 198, 200, 203, 211, 223, 233, 235, 247, 254, 279, 280, 285, 289, 305, 308, 310, 316, 318, 322, 324, 338, 342, 346, 347, 351, 356, 380, 430, 431, 433, 467, 468, 469, 471, 473, 475, 484, 488, 489, 490, 491, 492, 494, 495, 496, 500], "jupyt": [0, 30, 31, 380, 434, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 473], "notebook": [0, 30, 31, 380, 434, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464], "document": [0, 20, 23, 24, 30, 31, 91, 92, 93, 94, 95, 96, 101, 162, 164, 171, 196, 281, 286, 292, 310, 325, 336, 392, 411, 426, 432, 433, 434, 435, 438, 467, 468, 470, 471, 473, 475, 478, 479, 480, 483, 484, 485, 486, 491, 492, 494, 497, 499], "see": [0, 1, 3, 5, 7, 16, 23, 63, 101, 113, 139, 152, 159, 162, 168, 172, 173, 175, 196, 200, 201, 203, 236, 279, 280, 281, 285, 286, 292, 296, 305, 308, 310, 312, 316, 318, 324, 325, 327, 329, 335, 336, 339, 342, 351, 385, 386, 394, 399, 402, 404, 427, 430, 432, 435, 436, 439, 440, 460, 468, 469, 471, 473, 475, 476, 478, 479, 480, 483, 484, 485, 488, 489, 491, 492, 494, 500], "http": [0, 18, 77, 78, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 105, 110, 127, 128, 129, 130, 132, 134, 136, 149, 159, 162, 164, 170, 172, 181, 303, 304, 339, 392, 402, 426, 427, 430, 468, 469, 471, 479, 500], "bug": [0, 141, 170, 279, 333, 432, 435, 439, 440, 468], "org": [0, 18, 81, 82, 85, 98, 127, 128, 129, 130, 132, 136, 162, 402, 427, 430, 468, 479], "issue37373": 0, "bookkeep": [0, 75, 135, 285, 339, 342, 404, 429, 438, 471, 473, 489, 494], "bookkeepingplugin": [0, 2, 429], "exposeinterfac": [0, 2, 54, 55, 209, 212, 223, 226, 233, 273, 276, 279, 369, 381, 384, 475], "defineentrypoint": [0, 2, 57, 209, 233, 279, 475], "definecasedepend": [0, 2, 279, 475], "mpiactionrequiresreset": [0, 2, 279, 470], "getreportcont": [0, 2, 209, 233, 279, 434], "db": [0, 2, 16, 17, 31, 62, 142, 150, 151, 200, 208, 339, 342, 352, 376, 384, 404, 439, 470, 473, 478, 492, 494], "databas": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 36, 42, 43, 44, 57, 61, 67, 75, 141, 142, 152, 200, 204, 233, 254, 279, 280, 281, 308, 326, 331, 333, 336, 338, 339, 351, 360, 385, 402, 433, 439, 455, 462, 463, 467, 468, 470, 471, 474, 475, 478, 480, 487, 489, 491, 492, 495], "revis": [0, 2, 136, 430], "changelog": [0, 2], "database3": [0, 2, 3, 6, 8, 12, 339, 351, 470, 471, 473, 494], "databaseinterfac": [0, 2, 3, 5, 13, 404, 471, 492], "comparedatabas": [0, 2, 3, 4, 11], "databasefactori": [0, 2, 3, 7, 473, 494], "convertdatabas": [0, 2, 3], "loadoper": [0, 2, 3, 200, 471], "report": [0, 2, 4, 18, 31, 38, 58, 67, 75, 98, 113, 164, 209, 215, 233, 279, 280, 282, 305, 308, 362, 364, 382, 385, 387, 402, 404, 433, 434, 455, 462, 468, 471, 473, 478, 487, 490], "setdata": [0, 2, 19], "visual": [0, 2, 5, 235, 304, 402, 437, 467, 468, 470, 475, 484], "historytrack": [0, 2, 404, 473], "histori": [0, 2, 3, 5, 6, 31, 75, 208, 216, 247, 254, 279, 325, 338, 342, 398, 404, 425, 433, 439, 455, 462, 463, 470, 473, 490, 492, 495], "inform": [0, 2, 3, 5, 6, 8, 18, 20, 24, 25, 28, 42, 44, 52, 53, 74, 75, 80, 87, 101, 109, 134, 136, 148, 149, 150, 152, 159, 163, 164, 166, 168, 169, 170, 173, 176, 179, 191, 197, 198, 200, 201, 203, 211, 216, 235, 247, 257, 276, 279, 281, 285, 287, 288, 290, 308, 310, 311, 324, 325, 333, 334, 336, 338, 342, 346, 356, 364, 365, 389, 392, 402, 404, 409, 426, 427, 432, 433, 436, 438, 439, 440, 455, 462, 463, 468, 473, 479, 480, 484, 488, 491, 492, 493, 494, 496], "describeinterfac": [0, 2, 3, 6, 16, 17, 18, 19, 24, 29, 75, 209, 233, 235, 239, 240, 279], "historytrackerinterfac": [0, 2, 16, 404], "maininterfac": [0, 2], "memoryprofil": [0, 2, 32, 455, 462, 463, 473], "klasscount": [0, 2, 18], "instancecount": [0, 2, 18], "profilememoryusageact": [0, 2, 18], "systemandprocessmemoryusag": [0, 2, 18], "printsystemmemoryusageact": [0, 2, 18], "snapshotinterfac": [0, 2, 471], "extractcyclenodefromstamp": [0, 2, 29], "getcyclenodestamp": [0, 2, 29], "inputmodifi": [0, 43, 53, 56, 309, 316, 478], "copyinterfaceinput": [0, 43, 44, 55, 471], "suit": [0, 2, 43, 44, 50, 53, 55, 56, 57, 60, 61, 69, 72, 279, 309, 323, 327, 431, 433, 463, 470, 471, 475, 478], "casesuit": [0, 43, 44, 52, 53, 55, 61, 75, 279, 478], "suitebuild": [0, 43, 44, 56, 470, 478], "getinputmodifi": [0, 43, 53], "fullfactorialsuitebuild": [0, 43, 53, 56, 478], "fullfactorialsuitebuildernoisi": [0, 43, 53], "separateeffectssuitebuild": [0, 43, 53, 478], "latinhypercubesuitebuild": [0, 43, 53, 56], "cli": [0, 43, 74, 279, 429, 431, 433, 467, 471, 475, 493], "entrypointsplugin": [0, 57, 429], "armipars": [0, 57, 429], "print_help": [0, 57], "armicli": [0, 57, 72, 429, 475], "showvers": [0, 57, 72], "listcommand": [0, 57], "executecommand": [0, 57, 71], "splash": [0, 1, 57, 58, 63, 429, 469, 475, 500], "checkinput": [0, 43, 44, 55, 57], "expandblueprint": [0, 57, 58], "checkinputentrypoint": [0, 57, 58], "cleantemp": [0, 57], "clone": [0, 43, 44, 52, 55, 57, 71, 75, 279, 358, 397, 430, 468, 469, 470, 471, 500], "clonearmiruncommandbatch": [0, 57, 60], "clonearmiruncommandinteract": [0, 57, 60], "clonesuitecommand": [0, 57, 60], "comparecas": [0, 57], "comparesuit": [0, 57, 61], "convertdb": [0, 57, 62], "extractinput": [0, 57, 62], "injectinput": [0, 57, 62], "entrypoint": [0, 2, 34, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 74, 237, 279, 368, 431, 471], "storebool": [0, 57, 63], "setset": [0, 57, 63], "setcasetitl": [0, 57, 63], "loadset": [0, 57, 63], "gridgui": [0, 57], "gridguientrypoint": [0, 57, 64], "migrateinput": [0, 57], "modifi": [0, 3, 44, 46, 47, 50, 51, 53, 57, 60, 62, 101, 149, 152, 156, 170, 183, 188, 189, 190, 193, 235, 240, 242, 249, 278, 281, 285, 305, 309, 310, 312, 315, 316, 320, 323, 324, 331, 338, 339, 342, 343, 347, 348, 352, 357, 358, 364, 367, 389, 397, 403, 440, 452, 468, 469, 471, 474, 479, 488, 491, 492, 500], "modifycasesettingscommand": [0, 57, 66], "reportsentrypoint": [0, 57], "createreportfromset": [0, 57, 67], "runentrypoint": [0, 57, 68, 69, 433], "runsuit": [0, 57, 72], "runsuitecommand": [0, 57, 69], "materi": [0, 8, 151, 152, 159, 210, 223, 232, 236, 247, 252, 279, 280, 281, 285, 286, 287, 288, 289, 291, 292, 294, 297, 298, 300, 301, 302, 303, 304, 305, 307, 308, 310, 312, 313, 318, 324, 325, 342, 345, 346, 347, 348, 369, 374, 389, 402, 409, 429, 432, 433, 435, 445, 447, 449, 451, 452, 454, 455, 462, 463, 465, 466, 467, 468, 470, 471, 473, 474, 479, 480, 481, 483, 484, 485, 488, 492, 493, 494, 499], "setmaterialnamespaceord": [0, 76, 429, 475], "importmaterialsintomodulenamespac": [0, 76, 429], "iterallmaterialclassesinnamespac": [0, 76, 429, 461], "resolvematerialclassbynam": [0, 76, 122, 429], "air": [0, 76, 117], "alloy200": [0, 76, 122, 471], "b4c": [0, 76, 118, 471, 473, 478, 479, 484, 488], "be9": [0, 76, 119, 152], "cah2": [0, 76, 122], "californium": [0, 76, 122, 150, 461], "concret": [0, 3, 6, 13, 16, 17, 18, 24, 29, 55, 75, 76, 142, 152, 157, 163, 208, 215, 221, 235, 240, 247, 259, 290, 308, 324, 375, 378, 384, 471], "copper": [0, 76, 150, 471], "cu": [0, 76, 78, 84, 122, 150, 152, 488], "graphit": [0, 76, 120, 157, 159], "hafnium": [0, 76, 122, 150], "hastelloyn": [0, 76, 122], "ht9": [0, 76, 101, 157, 247, 298, 318, 347, 348, 454, 462, 470, 473, 479, 488, 492, 493], "inconel": [0, 76, 92, 93, 95, 96, 471], "inconel617": [0, 76, 91], "inconel600": [0, 76, 122], "inconel625": [0, 76, 122], "inconel800": [0, 76], "inconelpe16": [0, 76], "inconelx750": [0, 76, 122], "lead": [0, 3, 4, 5, 74, 75, 76, 98, 122, 150, 162, 163, 196, 216, 279, 285, 308, 325, 336, 372, 382, 387, 394, 412, 433, 435, 439, 470, 488, 489], "leadbismuth": [0, 76, 122], "lithium": [0, 76, 121, 150, 471, 488], "magnesium": [0, 76, 102, 122, 150], "fluid": [0, 76, 77, 85, 97, 98, 99, 100, 101, 107, 110, 112, 135, 136, 209, 216, 310, 325, 488], "simplesolid": [0, 76, 81, 82, 88, 91, 95, 101, 104, 106, 111, 114, 130, 134], "fuelmateri": [0, 76, 101, 128, 129, 130, 131, 132, 133, 134, 389, 488], "mgo": [0, 76, 122], "mixtur": [0, 76, 105, 285, 318, 334, 389, 470, 488], "molybdenum": [0, 76, 122, 150], "mox": [0, 76, 122, 134, 280, 291, 325, 348, 471], "nz": [0, 76, 122], "potassium": [0, 76, 122, 150, 471], "scandiumoxid": [0, 76], "sc2o3": [0, 76, 108, 122], "sic": [0, 76, 123], "sodium": [0, 76, 107, 111, 122, 150, 223, 281, 291, 346, 347, 348, 435, 454, 462, 467, 468, 473, 475, 479, 480, 488], "sodiumchlorid": [0, 76], "nacl": [0, 76, 111, 122], "sulfur": [0, 76, 122, 124, 150, 488], "tzm": [0, 76, 122], "tantalum": [0, 76, 122, 150], "thu": [0, 31, 46, 76, 122, 159, 169, 209, 211, 236, 281, 285, 308, 312, 333, 334, 378, 386, 392, 455, 468, 479, 480, 488], "thorium": [0, 76, 122, 128, 130, 131, 150, 488], "thoriumoxid": [0, 76, 122, 125, 471, 488], "tho2": [0, 76, 125, 130], "uthzr": [0, 76, 345, 488], "uzr": [0, 76, 101, 122, 126, 294, 298, 300, 308, 345, 348, 454, 473, 479, 488, 492], "uranium": [0, 76, 101, 122, 128, 131, 134, 149, 150, 152, 298, 305, 308, 468, 473, 476, 477, 479, 488], "uraniumoxid": [0, 76, 105, 122, 385, 405, 409, 471, 476, 488], "heatcapacityconst": [0, 76, 134], "uo2": [0, 76, 105, 134, 308, 476], "void": [0, 76, 90, 101, 122, 235, 254, 280, 285, 303, 305, 308, 311, 325, 353, 462, 473, 479, 480, 484, 486, 488], "water": [0, 76, 127, 157, 240, 467, 480], "saturatedwat": [0, 76, 136, 480], "saturatedsteam": [0, 76, 136], "yttriumoxid": [0, 76], "y2o3": [0, 76, 122, 137], "zincoxid": [0, 76], "zno": [0, 76, 122, 138], "zr": [0, 76, 101, 122, 131, 132, 150, 151, 152, 285, 291, 294, 296, 298, 300, 308, 342, 473, 478, 480, 485], "migrat": [0, 3, 5, 44, 57, 62, 65, 279, 280, 286, 292, 309, 325, 342, 343, 364, 365, 402, 429, 470, 473], "blueprintsmigr": [0, 141, 142, 143], "settingsmigr": [0, 141, 142, 144], "databasemigr": [0, 141, 142], "m0_1_3": [0, 141], "removecentersfromblueprint": [0, 141, 143], "updateelementalnuclid": [0, 141, 143], "m0_1_6": [0, 141], "convertalphanumlocationsettingstonum": [0, 141, 144], "getindicesfromdif3dstylelocatorlabel": [0, 141, 144], "nucdirectori": [0, 1, 164, 198, 298, 308, 402, 429, 446, 453, 461, 464, 477], "element": [0, 4, 5, 8, 23, 42, 77, 79, 82, 88, 101, 143, 151, 152, 154, 159, 212, 251, 252, 279, 289, 291, 298, 305, 307, 308, 334, 343, 346, 369, 385, 389, 394, 397, 398, 409, 429, 433, 434, 454, 461, 468, 470, 473, 474, 478, 480, 488], "label": [0, 3, 5, 23, 80, 87, 101, 109, 134, 136, 144, 151, 152, 156, 159, 161, 162, 185, 197, 198, 211, 216, 224, 235, 247, 249, 261, 272, 280, 281, 285, 308, 326, 327, 331, 332, 355, 356, 364, 370, 386, 392, 402, 404, 438, 452, 454, 459, 464, 470, 471, 475, 477, 485, 488], "id": [0, 23, 40, 46, 51, 152, 156, 197, 216, 235, 236, 249, 254, 264, 281, 285, 290, 298, 303, 304, 305, 307, 311, 316, 347, 348, 454, 455, 462, 463, 471, 473, 479, 480, 484, 488, 492, 493], "indic": [0, 3, 8, 16, 23, 40, 75, 101, 144, 152, 159, 162, 163, 164, 169, 172, 174, 175, 176, 179, 186, 197, 198, 200, 203, 236, 240, 252, 279, 281, 282, 285, 290, 291, 308, 310, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 339, 342, 343, 369, 386, 398, 402, 404, 433, 439, 456, 470, 479, 484, 488, 492, 494], "rapid": [0, 468], "access": [0, 1, 16, 17, 98, 148, 157, 163, 164, 200, 208, 242, 255, 279, 285, 286, 305, 308, 310, 324, 336, 338, 339, 358, 364, 388, 401, 403, 433, 438, 468, 470, 473, 474, 475, 487, 489, 491, 492], "chemicalphas": [0, 149, 150, 477], "chemicalgroup": [0, 149, 150, 477], "getelementsbychemicalphas": [0, 149, 150], "getelementsbychemicalgroup": [0, 149, 150], "getnam": [0, 16, 76, 101, 149, 150, 250, 251, 280, 308, 348, 473], "getsymbol": [0, 149, 150], "getelementz": [0, 149, 150], "factori": [0, 2, 3, 53, 56, 76, 149, 150, 152, 159, 199, 200, 214, 280, 302, 305, 339, 342, 429, 433, 436, 456, 474], "addglobalel": [0, 149, 150], "destroyglobalel": [0, 149, 150], "nucdir": [0, 149], "getnuclidefromnam": [0, 149, 151], "getnaturalisotop": [0, 149, 150, 151, 152, 298], "getnaturalmassisotop": [0, 149, 151], "getmc2label": [0, 149, 151], "getelementnam": [0, 149, 151], "getelementsymbol": [0, 149, 151], "getnuclid": [0, 76, 101, 149, 151, 161, 170, 192, 193, 197, 251, 280, 302, 305, 308, 348, 459, 460], "getnuclidenam": [0, 149, 151], "getatomicweight": [0, 149, 151, 280, 308], "isheavymet": [0, 149, 150, 151, 152, 477], "isfissil": [0, 149, 151, 152, 162, 164], "getthresholddisplacementenergi": [0, 149, 151], "nuclidebas": [0, 1, 149, 151, 156, 157, 159, 160, 166, 242, 291, 298, 308, 389, 446, 453, 454, 461, 464, 477], "nuclideinterfac": [0, 149, 152], "nuclidewrapp": [0, 149, 152, 198], "inuclid": [0, 149, 151, 152, 159, 198], "imcnpnuclid": [0, 149, 152], "naturalnuclidebas": [0, 80, 87, 109, 134, 136, 149, 150, 151, 152, 159, 291, 477], "dummynuclidebas": [0, 149, 152, 477], "lumpnuclidebas": [0, 149, 152, 477], "initreachableactivenuclidesthroughburnchain": [0, 149, 152], "isotop": [0, 86, 88, 101, 105, 122, 149, 151, 152, 159, 162, 170, 196, 236, 240, 242, 251, 252, 266, 286, 289, 291, 296, 297, 298, 302, 303, 304, 305, 307, 308, 347, 389, 402, 409, 433, 467, 470, 473, 477, 478, 479, 485, 490], "getisotop": [0, 149, 152], "fromnam": [0, 149, 152, 464], "ismonoisotopicel": [0, 149, 152], "singl": [0, 3, 5, 6, 16, 35, 42, 44, 53, 149, 152, 163, 164, 196, 198, 200, 208, 216, 235, 236, 279, 281, 285, 289, 291, 302, 304, 305, 308, 311, 312, 325, 327, 329, 334, 342, 345, 346, 347, 355, 356, 370, 377, 381, 384, 385, 392, 394, 397, 402, 432, 436, 438, 439, 440, 454, 464, 468, 471, 475, 479, 484, 488, 489, 491, 492, 496, 497], "changelabel": [0, 149, 152], "getdepletablenuclid": [0, 149, 152], "imposeburnchain": [0, 149, 152, 464], "addnuclidebas": [0, 149, 152], "readmccnuclidedata": [0, 149, 152], "updatenuclidebasesforspecialcas": [0, 149, 152], "addglobalnuclid": [0, 149, 152], "destroyglobalnuclid": [0, 149, 152], "thermalscatt": [0, 80, 87, 101, 109, 134, 136, 149, 157], "transmut": [0, 149, 152, 156, 158, 198, 233, 250, 252, 291, 451, 465, 466, 481, 484, 488, 492], "decaymod": [0, 149, 152, 160], "nucleardataio": [0, 259, 308, 342, 429, 454, 459, 460], "getexpectedisotxsfilenam": [0, 161, 429], "getexpectedcompxsfilenam": [0, 161, 429], "getexpectedgamisofilenam": [0, 161, 429], "getexpectedpmatrxfilenam": [0, 161, 429], "cccc": [0, 149, 161, 197, 454, 459, 460, 470], "system": [0, 3, 5, 6, 24, 30, 34, 74, 152, 161, 172, 199, 200, 201, 203, 206, 209, 211, 215, 216, 223, 236, 240, 247, 279, 280, 281, 282, 286, 290, 292, 301, 305, 311, 325, 326, 327, 329, 332, 333, 336, 338, 339, 340, 342, 343, 349, 364, 367, 378, 379, 386, 387, 390, 394, 399, 401, 430, 433, 435, 439, 440, 447, 448, 462, 467, 469, 470, 472, 473, 478, 479, 490, 491, 494, 500], "implement": [0, 1, 3, 5, 17, 29, 41, 42, 46, 53, 55, 57, 63, 74, 75, 76, 90, 101, 136, 142, 148, 149, 152, 161, 163, 166, 170, 208, 212, 216, 233, 235, 236, 240, 247, 254, 278, 279, 281, 282, 285, 290, 308, 311, 312, 313, 318, 324, 329, 331, 333, 334, 336, 338, 342, 346, 364, 375, 378, 381, 384, 385, 386, 394, 397, 431, 433, 438, 440, 471, 475, 477, 480, 488, 492, 494, 497], "detail": [0, 3, 5, 6, 16, 29, 36, 58, 63, 67, 71, 75, 90, 101, 161, 199, 208, 213, 216, 217, 232, 236, 240, 247, 254, 279, 285, 286, 288, 290, 308, 309, 310, 325, 342, 375, 425, 433, 440, 447, 448, 468, 470, 471, 473, 474, 476, 478, 479, 480, 484, 488, 489, 490, 492, 493, 494], "discuss": [0, 5, 149, 161, 166, 209, 240, 279, 336, 433, 435, 436, 468, 475, 479, 491], "nuclearfilemetadata": [0, 161], "filemetadata": [0, 161, 191], "nuclidexsmetadata": [0, 161, 191], "regionxsmetadata": [0, 161, 191], "nuclidemetadata": [0, 161, 191], "xscollect": [0, 161, 193, 198, 251, 402], "macroscopiccrosssectioncr": [0, 161, 196], "computeblockaveragechi": [0, 161, 196], "computeneutronenergydepositionconst": [0, 161, 196], "computegammaenergydepositionconst": [0, 161, 196], "computefissionenergygenerationconst": [0, 161, 196], "computecaptureenergygenerationconst": [0, 161, 196], "computemacroscopicgroupconst": [0, 161, 196], "xslibrari": [0, 161, 164, 166, 168, 170, 173, 194, 196, 198, 247], "compar": [0, 1, 3, 4, 29, 43, 44, 52, 53, 61, 161, 162, 164, 166, 168, 169, 170, 173, 179, 182, 195, 196, 197, 198, 203, 216, 221, 237, 318, 326, 333, 334, 342, 353, 369, 402, 404, 489], "comparexslibraryattribut": [0, 161, 197], "comparelibraryneutronenergi": [0, 161, 197], "getsuffixfromnuclidelabel": [0, 161, 197], "getisotxslibrariestomerg": [0, 161, 197], "mergexslibrariesinworkingdirectori": [0, 161, 197], "isotxslibrari": [0, 161, 169, 173, 176, 194, 197, 342, 402], "compxslibrari": [0, 161, 164, 197], "xsnuclid": [0, 161, 164, 196, 460], "plotscattermatrix": [0, 161, 198, 402, 460], "plotcomparescattermatrix": [0, 161, 198], "getoperatorclassfromset": [0, 199, 429], "operatormpi": [0, 2, 148, 199, 204, 279, 433], "runtyp": [0, 199, 208, 279, 425, 433, 491, 492], "settingsvalid": [0, 199, 279, 471, 475], "queri": [0, 199, 203, 206, 216, 279, 308, 475], "inspector": [0, 199, 200, 203, 212, 218, 226, 227, 233, 241, 262, 276, 277, 279, 475], "createqueryrevertbadpathtodefault": [0, 199, 203], "validatevers": [0, 199, 203, 475], "snapshot": [0, 3, 5, 22, 29, 33, 44, 75, 199, 200, 202, 207, 233, 254, 281, 455, 462, 463, 470, 471, 473, 491, 492], "operatorsnapshot": [0, 199, 200, 204, 433], "physic": [0, 29, 47, 75, 76, 84, 100, 102, 134, 149, 152, 159, 160, 161, 162, 163, 166, 170, 181, 199, 200, 201, 204, 279, 281, 285, 289, 291, 305, 307, 308, 309, 310, 311, 324, 331, 336, 339, 342, 346, 361, 429, 430, 433, 435, 447, 455, 459, 467, 470, 471, 473, 474, 476, 478, 479, 483, 487, 488, 490, 491, 492, 495], "fuelcycl": [0, 209, 254, 279, 455, 473, 479], "fuelhandlerplugin": [0, 209, 212], "fuelperform": [0, 209], "neutron": [0, 25, 47, 75, 82, 98, 151, 152, 156, 159, 160, 162, 164, 166, 167, 176, 196, 197, 198, 209, 223, 279, 281, 285, 288, 289, 302, 305, 308, 309, 315, 324, 336, 339, 402, 435, 438, 453, 459, 464, 468, 470, 471, 475, 476, 477, 479, 480, 484, 486, 488, 489, 491, 492], "neutronicsplugin": [0, 209, 233, 269, 279, 435], "gammatransportisrequest": [0, 209, 233], "gammaxsarerequest": [0, 209, 233], "adjointcalculationrequest": [0, 209, 233], "realcalculationrequest": [0, 209, 233], "applyeffectivedelayedneutronfractiontocor": [0, 209, 233], "latticephysicsfrequ": [0, 209, 233, 235, 257, 471, 492], "safeti": [0, 166, 209, 394, 401, 468], "safetyplugin": [0, 209, 270], "thermalhydraul": [0, 209, 336, 339, 497], "constant": [0, 22, 74, 75, 78, 86, 100, 101, 156, 162, 166, 181, 196, 202, 209, 233, 234, 238, 252, 254, 261, 269, 280, 305, 308, 316, 326, 327, 331, 332, 334, 361, 389, 428, 439, 454, 464, 471, 475, 484, 486, 488, 489, 491, 492], "dpa_cross_sect": [0, 209, 210], "execut": [0, 11, 12, 13, 14, 27, 28, 31, 32, 33, 38, 39, 44, 50, 51, 52, 55, 56, 57, 58, 63, 71, 72, 74, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 146, 147, 148, 154, 155, 156, 157, 158, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 200, 201, 206, 207, 208, 209, 220, 221, 222, 223, 229, 230, 231, 236, 244, 245, 247, 249, 252, 254, 257, 258, 264, 265, 266, 267, 268, 269, 272, 285, 294, 295, 296, 297, 298, 299, 300, 301, 308, 318, 319, 320, 321, 322, 323, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 390, 392, 399, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 433, 436, 447, 449, 465, 468, 469, 470, 471, 475, 488, 492, 494, 495, 496, 500], "executionopt": [0, 209, 211, 224, 247], "defaultexecut": [0, 209, 211, 224, 247], "reactorplugin": [0, 279, 280, 429, 488], "defineblocktyp": [0, 279, 280], "defineassemblytyp": [0, 279, 280], "definesystembuild": [0, 279, 280, 488], "blueprint": [0, 2, 3, 5, 22, 44, 46, 52, 53, 58, 86, 101, 105, 142, 143, 152, 191, 200, 233, 235, 240, 252, 279, 280, 281, 285, 308, 318, 323, 325, 339, 342, 343, 352, 386, 402, 438, 439, 454, 462, 470, 471, 473, 474, 475, 478, 483, 485, 487, 490, 491, 492, 495], "loadfromc": [0, 280, 286, 342, 343], "compon": [0, 3, 4, 5, 8, 22, 41, 46, 48, 75, 101, 143, 150, 164, 179, 235, 236, 240, 264, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 300, 308, 310, 311, 318, 319, 325, 333, 336, 342, 346, 347, 348, 401, 402, 433, 435, 438, 446, 451, 454, 462, 465, 466, 467, 468, 470, 471, 473, 476, 478, 479, 480, 481, 484, 487, 490, 492, 493, 494], "nullcompon": [0, 280, 302, 305, 308, 347, 488], "unshapedcompon": [0, 280, 302, 305, 306, 308, 347, 488], "unshapedvolumetriccompon": [0, 280, 302, 305, 308, 488], "zeromasscompon": [0, 280, 302, 305, 308, 488], "positiveornegativevolumecompon": [0, 280, 302, 305, 308, 488], "derivedshap": [0, 280, 285, 302, 305, 308, 347, 348, 350, 452, 454, 462, 473, 479, 480, 488], "convert": [0, 3, 4, 5, 8, 23, 36, 45, 62, 67, 92, 93, 96, 101, 144, 151, 152, 163, 186, 196, 216, 235, 247, 249, 259, 279, 280, 281, 285, 305, 308, 325, 326, 327, 332, 333, 339, 342, 343, 349, 364, 367, 386, 389, 394, 397, 398, 400, 401, 424, 428, 438, 446, 447, 448, 470, 471, 473, 488, 492], "grid": [0, 3, 5, 8, 42, 46, 64, 236, 247, 279, 280, 281, 282, 285, 286, 290, 292, 295, 299, 308, 310, 311, 318, 342, 343, 346, 386, 396, 402, 433, 451, 452, 454, 459, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 476, 479, 481, 486, 489, 490, 491, 492, 500], "locatorlabeltoindic": [0, 280, 327], "basic": [0, 4, 12, 17, 28, 29, 43, 136, 148, 149, 152, 249, 257, 258, 259, 280, 286, 296, 303, 308, 315, 324, 327, 346, 348, 364, 376, 382, 389, 408, 410, 419, 423, 426, 431, 433, 436, 437, 440, 467, 468, 475, 478, 479, 480, 492, 493], "usag": [0, 4, 18, 57, 148, 198, 280, 285, 337, 385, 386, 402, 404, 436, 439, 471, 492], "consider": [0, 41, 233, 235, 279, 280, 334, 387, 433], "reset": [0, 2, 75, 247, 279, 280, 302, 308, 309, 310, 312, 324, 336, 358, 370, 382, 385, 426, 473, 484], "assembli": [0, 2, 3, 5, 13, 22, 23, 25, 40, 41, 44, 47, 75, 79, 86, 172, 213, 216, 217, 220, 221, 222, 235, 247, 249, 261, 276, 279, 280, 282, 283, 285, 286, 287, 288, 292, 294, 296, 297, 300, 302, 305, 308, 309, 310, 311, 312, 318, 320, 323, 324, 325, 327, 329, 331, 332, 333, 334, 336, 342, 343, 345, 348, 352, 355, 364, 375, 385, 386, 389, 398, 402, 404, 433, 436, 438, 439, 447, 454, 455, 462, 463, 467, 468, 470, 471, 473, 475, 478, 484, 486, 487, 490, 492, 493, 494, 497, 499], "hexassembli": [0, 279, 280, 281, 308, 454], "cartesianassembli": [0, 279, 280, 281, 308], "rzassembli": [0, 280, 281, 308], "thrzassembli": [0, 279, 280, 281, 308], "assemblylist": [0, 279, 280, 308, 463, 489], "autofil": [0, 240, 280, 282], "rowmajorautofil": [0, 280, 282], "spentfuelpool": [0, 279, 280, 282, 308, 488], "assemblyparamet": [0, 280], "getassemblyparameterdefinit": [0, 280, 283], "blockparamet": [0, 280], "getblockparameterdefinit": [0, 280, 284], "block": [0, 2, 3, 4, 5, 13, 22, 25, 38, 40, 41, 46, 47, 76, 122, 148, 149, 157, 163, 172, 193, 196, 216, 221, 232, 235, 236, 240, 242, 244, 247, 251, 252, 254, 258, 259, 264, 265, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 300, 302, 303, 305, 307, 308, 310, 311, 312, 313, 316, 318, 319, 322, 323, 324, 325, 327, 328, 333, 336, 339, 340, 342, 345, 346, 347, 348, 352, 355, 375, 384, 385, 389, 398, 402, 433, 436, 438, 439, 445, 446, 449, 451, 462, 463, 465, 466, 467, 470, 471, 473, 475, 476, 478, 481, 483, 486, 487, 490, 492, 493, 496], "hexblock": [0, 8, 193, 279, 280, 285, 308, 311, 312, 318, 345, 454, 471], "cartesianblock": [0, 279, 280, 285, 308, 311], "thrzblock": [0, 279, 280, 281, 285, 308], "composit": [0, 3, 5, 8, 76, 77, 78, 149, 164, 166, 171, 179, 196, 223, 235, 236, 251, 252, 264, 279, 280, 281, 282, 285, 286, 291, 302, 305, 311, 312, 313, 325, 329, 331, 333, 334, 336, 338, 339, 340, 342, 348, 379, 426, 433, 436, 448, 467, 470, 471, 473, 476, 479, 480, 488, 490, 492, 494], "flagseri": [0, 280, 308, 339], "compositemodeltyp": [0, 279, 280, 305, 308], "armiobject": [0, 3, 5, 6, 225, 242, 247, 252, 260, 275, 279, 280, 290, 308, 325, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 342, 392, 439, 454], "stateretain": [0, 280, 308, 348], "gathermaterialsbyvolum": [0, 280, 308], "getdominantmateri": [0, 280, 308, 342], "getreactionratedict": [0, 280, 308], "flag": [0, 1, 3, 9, 16, 23, 75, 101, 122, 143, 176, 200, 216, 233, 240, 244, 247, 249, 252, 279, 280, 281, 285, 286, 289, 290, 291, 294, 295, 296, 297, 298, 300, 302, 308, 310, 311, 312, 313, 318, 336, 338, 339, 342, 346, 348, 349, 364, 367, 381, 384, 385, 390, 401, 402, 404, 412, 428, 433, 436, 446, 447, 452, 454, 455, 470, 471, 473, 475, 478, 490, 492, 493, 494], "invalidflagserror": [0, 280, 325], "geometri": [0, 3, 5, 42, 44, 52, 53, 162, 167, 169, 171, 172, 175, 183, 188, 200, 211, 235, 236, 247, 249, 279, 280, 281, 285, 287, 290, 292, 305, 307, 309, 311, 312, 313, 318, 320, 323, 324, 327, 329, 331, 332, 334, 335, 342, 343, 350, 386, 402, 433, 445, 449, 454, 455, 458, 462, 463, 466, 468, 470, 473, 479, 481, 488, 491, 494], "geomtyp": [0, 49, 50, 51, 247, 280, 326, 327, 328, 329, 331, 332, 334, 335, 342, 386, 454, 470], "domaintyp": [0, 280, 326, 386, 454], "boundarytyp": [0, 280, 326, 454], "symmetrytyp": [0, 280, 312, 326, 331, 342, 454], "checkvalidgeomsymmetrycombo": [0, 280, 326], "reactorparamet": [0, 280], "definereactorparamet": [0, 280, 341], "definecoreparamet": [0, 280, 341], "core": [0, 3, 5, 8, 16, 22, 23, 25, 28, 41, 46, 50, 86, 164, 167, 172, 200, 212, 213, 216, 217, 221, 233, 235, 236, 240, 244, 247, 257, 259, 261, 279, 280, 281, 282, 285, 286, 290, 292, 301, 308, 310, 311, 312, 313, 315, 318, 320, 324, 325, 327, 329, 331, 332, 333, 334, 335, 336, 342, 343, 345, 352, 353, 355, 358, 384, 386, 402, 404, 406, 433, 438, 440, 446, 447, 448, 454, 455, 462, 463, 467, 468, 469, 470, 471, 473, 474, 475, 478, 480, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 497, 500], "systemlayoutinput": [0, 44, 46, 53, 280, 292, 335, 342, 470], "zone": [0, 162, 169, 171, 175, 176, 216, 280, 312, 342, 354, 455, 462, 463, 471, 473, 479, 480, 483, 484, 492], "isboolset": [0, 357, 429], "recursivelyloadsettingsfil": [0, 357, 429], "promptforsettingsfil": [0, 357, 429], "fwset": [0, 357, 475], "getframeworkset": [0, 357, 359], "caseset": [0, 3, 5, 22, 25, 44, 46, 52, 53, 75, 148, 200, 211, 279, 286, 287, 288, 324, 342, 343, 357, 365, 433, 462, 471, 473, 492], "flaglistset": [0, 357, 364], "settingsio": [0, 357, 368], "root": [0, 3, 5, 8, 44, 52, 74, 148, 152, 209, 282, 287, 340, 357, 365, 369, 388, 390, 398, 426, 436, 439, 475, 494], "settingrenam": [0, 357, 365], "settingsread": [0, 357, 365], "settingswrit": [0, 357, 358, 365, 471], "prompt": [0, 203, 357, 365, 475, 486, 491, 492], "runlogpromptcancel": [0, 357, 365], "runlogpromptunresolv": [0, 357, 365], "getemptyhexreactor": [0, 369, 429], "getemptycartesianreactor": [0, 369, 429], "fixtur": [0, 31, 369, 429], "requires_fixtur": [0, 369, 429], "armitesthelp": [0, 31, 221, 222, 369, 373, 429], "comparefileslinebylin": [0, 369], "comparelin": [0, 369], "rebaselinetextcomparison": [0, 369, 429], "mockrunlog": [0, 369], "bufferlog": [0, 369, 370], "logcount": [0, 369, 370], "refsmallreactorshufflelog": [0, 369], "equilibriumshuffl": [0, 369, 371], "getfactorlist": [0, 212, 216, 369, 371, 479, 489], "test_app": [0, 369], "testplugin1": [0, 369, 372], "testplugin2": [0, 369, 372], "testplugin3": [0, 369, 372], "testplugin4": [0, 369, 372], "testapp": [0, 369, 372], "testarmihighlevel": [0, 369, 372], "test_armitesthelp": [0, 369], "testarmitesthelp": [0, 369, 373], "test_cartesian": [0, 369, 405, 406], "cartesianreactortest": [0, 280, 344, 352, 369, 374], "test_interfac": [0, 369], "dummyinterfac": [0, 369, 375], "testcodeinterfac": [0, 369, 375], "testtextprocessor": [0, 369, 375], "testtightcoupl": [0, 199, 205, 208, 369, 375], "test_lwrinput": [0, 369], "c5g7reactortest": [0, 369, 376], "test_mpiact": [0, 369, 405, 410], "mpiitertest": [0, 369, 377], "queueactionstest": [0, 369, 377], "passer": [0, 356, 369, 370, 377], "test_mpifeatur": [0, 369], "failinginterface1": [0, 369, 378], "failinginterface2": [0, 369, 378], "failinginterface3": [0, 369, 378], "mpioperatortest": [0, 369, 378], "bcastaction1": [0, 369, 378], "bcastaction2": [0, 369, 378], "mpidistributestatetest": [0, 369, 378], "mpipathtoolstest": [0, 369, 378], "test_mpiparamet": [0, 369], "mocksyncpc": [0, 369, 379], "makecomp": [0, 369, 379], "synchronizationtest": [0, 369, 379], "test_notebook": [0, 369], "notebooktest": [0, 369, 380], "runnotebook": [0, 369, 380], "test_plugin": [0, 369], "pluginflags1": [0, 369, 381], "testpluginregistr": [0, 369, 381], "testpluginbas": [0, 369, 381], "testplugin": [0, 230, 269, 369, 381], "test_runlog": [0, 369], "testrunlog": [0, 369, 382], "testrunlogg": [0, 369, 382], "test_test": [0, 369], "testcomparefil": [0, 369, 383], "test_user_plugin": [0, 369, 475], "userpluginflag": [0, 369, 384], "userpluginflags2": [0, 369, 384], "userpluginflags3": [0, 369, 384], "userpluginbaddefinesset": [0, 369, 384], "userpluginbaddefineparameterrenam": [0, 369, 384], "userpluginonprocesscoreload": [0, 369, 384], "upinterfac": [0, 369, 384], "userpluginwithinterfac": [0, 369, 384], "testuserplugin": [0, 369, 384], "util": [0, 2, 4, 28, 34, 38, 58, 63, 74, 194, 196, 209, 211, 217, 223, 231, 250, 279, 287, 288, 290, 310, 316, 324, 325, 327, 365, 367, 378, 429, 430, 433, 436, 444, 446, 448, 451, 455, 462, 463, 466, 468, 470, 471, 473, 475, 479, 481, 491, 492], "getfilesha1hash": [0, 385, 429], "copywithoutblock": [0, 385, 429], "getpowerfract": [0, 385, 429], "getcyclenam": [0, 385, 429], "getavailabilityfactor": [0, 385, 429], "getsteplength": [0, 385, 429], "getcyclelength": [0, 385, 429], "getburnstep": [0, 385, 429], "hasburnup": [0, 385, 429], "getmaxburnstep": [0, 385, 429], "getcumulativenodenum": [0, 385, 429], "getcyclenodefromcumulativestep": [0, 385, 429], "getcyclenodefromcumulativenod": [0, 385, 429], "getnodespercycl": [0, 385, 429], "getprevioustimenod": [0, 385, 429], "trypickleonallcont": [0, 385, 429], "dotestpickleonallcontents2": [0, 385, 429], "mypickl": [0, 385, 429], "save": [0, 6, 36, 75, 200, 233, 259, 285, 290, 299, 308, 324, 336, 342, 358, 385, 402, 404, 433, 438, 440, 468, 471, 474, 491, 492], "trypickleonallcontents3": [0, 385, 429], "classesinhierarchi": [0, 385, 425, 429], "slantsplit": [0, 385, 429], "prependtolist": [0, 385, 429], "capstrlen": [0, 385, 429], "list2str": [0, 385, 429], "createformattedstrwithdelimit": [0, 385, 429], "plotmatrix": [0, 385, 429], "usernam": [0, 385, 429], "mergeabledict": [0, 75, 385, 429], "merg": [0, 1, 161, 162, 163, 164, 179, 184, 196, 197, 198, 236, 285, 305, 311, 372, 385, 470, 485], "safecopi": [0, 385, 429], "asciimap": [0, 290, 385, 471], "asciimapcartesian": [0, 385, 386], "asciimaphexthirdflatsup": [0, 385, 386], "asciimaphexfullflatsup": [0, 385, 386], "asciimaphexfulltipsup": [0, 385, 386], "asciimapfromgeomanddomain": [0, 385, 386], "codetim": [0, 385, 425, 471], "getmastertim": [0, 385, 387], "mastertim": [0, 385, 387], "customexcept": [0, 385, 470], "warn": [0, 3, 5, 75, 86, 196, 197, 208, 236, 281, 308, 326, 356, 365, 370, 376, 382, 385, 388, 390, 392, 401, 426, 429, 434, 473, 475, 478, 480, 492, 496], "warn_when_root": [0, 385, 388], "inputerror": [0, 385, 388], "settingexcept": [0, 385, 388], "invalidsettingsstopprocess": [0, 385, 388], "nonexistentset": [0, 385, 388], "invalidsettingsfileerror": [0, 385, 388], "nonexistentsettingsfileerror": [0, 385, 388], "densitytool": [0, 385, 409, 446], "getndensfrommass": [0, 385, 389], "getmassfract": [0, 385, 389], "calculatemassdens": [0, 385, 389], "calculatenumberdens": [0, 385, 389], "getmassingram": [0, 385, 389], "formatmaterialcard": [0, 385, 389, 446], "filternuclidelist": [0, 385, 389], "normalizenuclidelist": [0, 385, 389], "expandelementalmassfracstonuclid": [0, 385, 389], "expandelementalnuclidemassfrac": [0, 385, 389], "getchem": [0, 385, 389], "applyisotopicsmix": [0, 385, 389], "directorychang": [0, 211, 385, 391, 410, 471], "temporarydirectorychang": [0, 272, 385, 390, 471], "forcedcreationdirectorychang": [0, 43, 272, 385, 390], "directorychangerfactori": [0, 385, 390], "directorychangersmpi": [0, 385], "mpidirectorychang": [0, 385, 391], "dochelp": [0, 385, 411], "create_figur": [0, 385, 392], "create_t": [0, 385, 392], "execdirect": [0, 385, 392], "pyrevers": [0, 385, 392], "generateparamt": [0, 385, 392], "generatepluginsettingst": [0, 385, 392], "dynamicimport": [0, 385], "getentirefamilytre": [0, 385, 393], "auto": [0, 3, 5, 7, 74, 101, 143, 203, 211, 247, 252, 279, 282, 289, 308, 342, 348, 350, 385, 392, 394, 412, 430, 440, 470, 471, 492], "grideditor": [0, 64, 385], "hexagon": [0, 42, 122, 172, 279, 280, 285, 294, 297, 298, 300, 302, 303, 304, 305, 306, 308, 309, 311, 312, 327, 331, 334, 342, 345, 346, 347, 348, 385, 386, 402, 413, 433, 452, 454, 456, 462, 468, 473, 479, 484, 488, 491, 492, 493], "area": [0, 22, 51, 171, 217, 264, 279, 281, 285, 302, 303, 304, 305, 307, 308, 311, 319, 345, 346, 347, 350, 385, 396, 413, 423, 427, 438, 467, 475, 479, 483, 484, 485, 490, 492], "side": [0, 23, 216, 285, 303, 304, 311, 331, 369, 385, 396, 402, 447], "corner": [0, 186, 217, 285, 305, 308, 329, 336, 339, 385, 386, 396, 484], "pitch": [0, 285, 290, 303, 304, 305, 311, 312, 327, 328, 329, 332, 334, 335, 342, 344, 346, 369, 385, 396, 402, 456, 473, 478, 479, 480, 488, 492, 493], "numringstoholdnumcel": [0, 385, 396], "numpositionsinr": [0, 385, 396], "iter": [0, 3, 5, 8, 29, 44, 75, 76, 152, 200, 208, 233, 235, 247, 254, 257, 281, 285, 308, 312, 331, 334, 342, 369, 385, 398, 402, 404, 412, 414, 436, 452, 454, 475, 486, 491, 492, 497, 499], "flatten": [0, 148, 385, 397, 436, 494], "chunk": [0, 8, 285, 385, 394, 397, 426, 436, 439], "split": [0, 42, 148, 200, 281, 285, 312, 323, 329, 331, 336, 369, 385, 397, 436, 468, 471, 479, 483, 491], "unpackbinarystr": [0, 385, 397], "packbinarystr": [0, 385, 397], "unpackhexstr": [0, 385, 397], "packhexstr": [0, 385, 397], "sequenc": [0, 3, 4, 5, 6, 44, 52, 53, 57, 101, 208, 211, 254, 279, 287, 288, 289, 290, 291, 292, 308, 334, 339, 348, 385, 394, 397, 402, 404, 433, 467, 468], "mathemat": [0, 101, 385, 415], "average1dwithintoler": [0, 324, 385, 398], "converttoslic": [0, 385, 398], "efmt": [0, 385, 398], "expandrepeatedfloat": [0, 385, 398], "findclosest": [0, 385, 398], "findnearestvalu": [0, 385, 398], "findnearestvalueandindex": [0, 385, 398], "fixthreedigitexp": [0, 385, 398], "getfloat": [0, 385, 398], "getstepsfromvalu": [0, 385, 398], "ismonoton": [0, 385, 398], "linearinterpol": [0, 385, 398], "minimizescalarfunc": [0, 385, 398], "newtonsmethod": [0, 385, 398], "parabolafrompoint": [0, 385, 398], "parabolicinterpol": [0, 385, 398], "relerr": [0, 385, 398], "resamplestepwis": [0, 385, 398, 415], "rotatexi": [0, 385, 398], "outputcach": [0, 385], "api": [0, 1, 44, 216, 279, 308, 385, 430, 433, 435, 439, 440, 455, 468, 471, 473, 478, 489], "retrieveoutput": [0, 385, 399], "store": [0, 3, 4, 5, 8, 16, 19, 23, 29, 40, 42, 44, 75, 101, 150, 152, 167, 169, 172, 175, 179, 191, 196, 200, 216, 236, 251, 254, 279, 281, 282, 285, 292, 305, 308, 310, 311, 318, 324, 325, 326, 331, 333, 334, 336, 338, 339, 340, 342, 365, 385, 394, 397, 399, 404, 409, 433, 438, 439, 470, 471, 473, 475, 483, 484, 491, 492, 493, 494, 495, 497], "deletecach": [0, 385, 399], "cachecal": [0, 385, 399], "pars": [0, 34, 36, 44, 57, 61, 63, 215, 326, 369, 385, 417, 426], "tryliteralev": [0, 385, 400], "parsevalu": [0, 385, 400], "datetimefromstr": [0, 385, 400], "pathtool": [0, 385, 418], "armiabspath": [0, 385, 401], "copyorwarn": [0, 385, 401], "isfilepathnew": [0, 385, 401], "isaccess": [0, 385, 401], "separatemoduleandattribut": [0, 385, 401], "importcustompymodul": [0, 385, 401, 418], "moduleandattributeexist": [0, 385, 401], "cleanpath": [0, 385, 401, 418], "plot": [0, 19, 22, 23, 25, 42, 46, 164, 193, 198, 216, 261, 312, 334, 385, 404, 419, 421, 438, 447, 448, 451, 452, 454, 455, 457, 462, 464, 465, 466, 468, 470, 471, 473, 474, 475, 476, 478, 480, 481, 492], "colorgener": [0, 385, 402], "plotblockdepthmap": [0, 385, 402, 473], "plotfacemap": [0, 385, 402, 448, 455, 463, 473], "close": [0, 2, 3, 5, 6, 74, 156, 162, 163, 216, 308, 356, 382, 385, 389, 390, 391, 402, 404, 426, 429, 463, 473, 488], "depthslid": [0, 385, 402], "plotassemblytyp": [0, 385, 402, 462], "plotblockflux": [0, 385, 402], "makehistogram": [0, 385, 402], "plotblockdiagram": [0, 385, 402], "plottriangleflux": [0, 385, 402], "plotnucx": [0, 385, 402], "properti": [0, 1, 3, 4, 5, 6, 18, 40, 44, 76, 77, 78, 79, 80, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 110, 111, 112, 113, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 148, 152, 164, 166, 172, 179, 193, 194, 197, 198, 200, 204, 216, 223, 235, 236, 278, 282, 285, 286, 287, 290, 291, 305, 308, 311, 324, 326, 328, 329, 331, 332, 333, 334, 336, 338, 339, 342, 346, 348, 355, 358, 364, 369, 385, 420, 433, 435, 461, 467, 468, 470, 473, 475, 476, 480, 485, 488], "areequ": [0, 385, 403], "numpyhackforequ": [0, 385, 403], "createimmutableproperti": [0, 385, 403], "immutablepropertyerror": [0, 385, 403], "unlockimmutableproperti": [0, 385, 403], "lockimmutableproperti": [0, 385, 403], "reportplot": [0, 385], "plotreactorperform": [0, 385, 404], "valuevstim": [0, 385, 404], "keffvstim": [0, 385, 404], "buvstim": [0, 385, 404], "xshistoryvstim": [0, 385, 404], "movesvscycl": [0, 385, 404], "plotcoreoverviewradar": [0, 385, 404], "createplotmetadata": [0, 385, 404], "plotaxialprofil": [0, 385, 404], "textprocessor": [0, 385, 422], "scientific_pattern": [0, 385, 426], "floating_pattern": [0, 385, 426], "decimal_pattern": [0, 385, 426], "filemark": [0, 385, 426], "resolvemarkupinclus": [0, 385, 422, 426], "findyamlinclus": [0, 385, 426], "sequentialread": [0, 385, 426], "sequentialstringioread": [0, 385, 426], "smartlist": [0, 385, 426], "triangl": [0, 280, 302, 303, 305, 306, 308, 332, 347, 385, 402, 423, 488], "gettrianglearea": [0, 385, 423, 427], "gettrianglecentroid": [0, 385, 427], "checkifpointisintriangl": [0, 385, 427], "unit": [0, 13, 50, 51, 55, 56, 73, 74, 77, 87, 90, 101, 110, 117, 119, 122, 127, 133, 158, 168, 172, 173, 196, 247, 269, 285, 298, 318, 321, 322, 327, 328, 329, 334, 336, 339, 342, 346, 353, 364, 369, 377, 380, 383, 385, 396, 407, 417, 418, 424, 432, 434, 440, 467, 468, 471, 475, 479, 483, 484, 485, 486, 488, 489, 491, 492, 499], "gettk": [0, 385, 428], "gettc": [0, 385, 428, 475], "gettf": [0, 385, 428], "gettemperatur": [0, 385, 428], "gettmev": [0, 385, 428], "convertmmhgtopasc": [0, 385, 428], "convertbartopasc": [0, 385, 428], "convertatmtopasc": [0, 385, 428], "sanitizeangl": [0, 385, 428], "getxylineparamet": [0, 385, 428], "pluginmanag": [0, 1, 279, 429, 435], "getset": [0, 1, 357, 358], "getparamrenam": [0, 1], "registerpluginflag": [0, 1], "registeruserplugin": [0, 1, 357, 358], "splashtext": [0, 1, 435, 475], "conftest": [0, 429], "pytest_sessionstart": [0, 73, 429], "bootstraparmitestenv": [0, 73, 429], "context": [0, 41, 44, 148, 259, 285, 292, 326, 385, 390, 429, 440, 464, 468, 470, 480, 494], "mode": [0, 57, 62, 63, 74, 82, 144, 149, 152, 163, 247, 290, 342, 365, 375, 429, 479, 486], "batch": [0, 60, 62, 63, 71, 74, 252, 254, 302, 479], "setmod": [0, 74], "activatelocalfastpath": [0, 74, 429], "getfastpath": [0, 74, 429, 470], "cleantempdir": [0, 74, 429], "cleanallarmitempdir": [0, 74, 429], "disconnectallhdfdb": [0, 74, 429], "stack_ord": [0, 75, 200, 429, 475], "befor": [0, 3, 5, 16, 44, 46, 75, 148, 197, 200, 209, 211, 215, 216, 217, 232, 235, 236, 249, 264, 279, 281, 282, 285, 305, 308, 310, 311, 312, 323, 326, 336, 338, 342, 356, 382, 385, 386, 393, 398, 430, 432, 435, 436, 438, 439, 455, 468, 469, 470, 471, 473, 475, 484, 486, 488, 489, 491, 492, 500], "preprocess": [0, 75], "fuel_manag": [0, 75], "fuel_perform": [0, 75], "cross_sect": [0, 75], "critical_control": [0, 75], "flux": [0, 16, 31, 75, 162, 164, 166, 168, 170, 172, 175, 176, 186, 196, 200, 217, 235, 236, 240, 246, 247, 249, 251, 252, 260, 264, 279, 281, 285, 302, 305, 308, 323, 324, 325, 336, 339, 342, 346, 402, 433, 454, 455, 467, 468, 470, 471, 473, 484, 486, 488, 491, 492, 497], "thermal_hydraul": [0, 75, 475], "reactivity_coeff": [0, 75], "transient": [0, 29, 75, 199, 204, 209, 438, 468, 490], "postprocess": [0, 75], "tightcoupl": [0, 13, 75, 249, 375, 429, 492, 497], "storepreviousiterationvalu": [0, 75], "isconverg": [0, 75, 375], "getlistdimens": [0, 75], "getdepend": [0, 75], "getinputfil": [0, 75], "distribut": [0, 2, 3, 5, 6, 19, 24, 75, 140, 148, 149, 162, 216, 217, 233, 249, 285, 308, 310, 311, 334, 402, 436, 455, 463, 468, 471, 473, 475, 479, 484, 486, 488, 489, 497], "duplic": [0, 18, 41, 53, 55, 75, 76, 101, 122, 126, 150, 239, 242, 245, 280, 281, 296, 308, 334, 342, 356, 357, 358, 387, 399, 409, 412, 471, 479, 488, 494], "new": [0, 3, 4, 5, 16, 23, 27, 42, 44, 52, 53, 60, 62, 75, 77, 89, 101, 107, 117, 134, 139, 141, 144, 146, 148, 152, 179, 196, 198, 204, 209, 211, 214, 216, 235, 236, 247, 254, 259, 264, 276, 279, 281, 282, 285, 286, 289, 291, 302, 308, 310, 311, 312, 313, 316, 324, 325, 334, 338, 339, 340, 342, 343, 352, 355, 358, 364, 367, 379, 381, 384, 385, 390, 391, 392, 394, 397, 398, 426, 430, 431, 432, 434, 435, 438, 439, 448, 469, 470, 473, 474, 478, 479, 480, 488, 489, 491, 492, 494, 497, 498, 500], "skip": [0, 75, 159, 166, 172, 196, 208, 236, 247, 285, 324, 340, 352, 363, 364, 390, 402, 435, 464, 471, 480, 489, 491, 492], "namecontain": [0, 75, 280, 308], "predistributest": [0, 75], "postdistributest": [0, 75], "attachreactor": [0, 75], "detachreactor": [0, 75], "gethistoryparam": [0, 16, 75, 246, 247], "getinterfac": [0, 16, 75, 199, 200, 433, 473], "interactinit": [0, 75, 200, 433], "interactbol": [0, 2, 3, 6, 16, 17, 18, 19, 24, 29, 75, 200, 233, 235, 236, 239, 240, 253, 254, 257, 342, 433], "interacteol": [0, 2, 3, 6, 16, 17, 18, 19, 24, 75, 200, 212, 215, 433], "interactboc": [0, 2, 16, 17, 19, 24, 75, 212, 215, 219, 221, 233, 235, 239, 240, 246, 247, 248, 249, 253, 254, 257, 433], "interacteoc": [0, 2, 3, 6, 19, 24, 75, 212, 215, 233, 235, 246, 247, 253, 254, 433], "interacteverynod": [0, 2, 3, 6, 10, 13, 17, 18, 19, 24, 29, 75, 200, 233, 235, 246, 247, 248, 249, 253, 254, 257, 369, 378, 384, 433, 436, 475], "interactcoupl": [0, 2, 29, 75, 233, 235, 246, 247, 253, 254, 257, 471, 491], "gettightcouplingvalu": [0, 75, 246, 247, 249], "interacterror": [0, 2, 3, 6, 75, 433], "interactdistributest": [0, 2, 3, 6, 75, 239, 240], "isrequesteddetailpoint": [0, 29, 75], "workeroper": [0, 2, 75, 148, 199, 200, 201, 212, 215, 216, 279, 369, 378], "enabl": [0, 3, 6, 44, 75, 91, 101, 167, 200, 236, 240, 244, 245, 247, 260, 286, 287, 289, 310, 333, 342, 358, 364, 430, 433, 435, 440, 468, 470, 471, 473, 478, 484, 488, 491, 492, 497, 498], "bolforc": [0, 75, 200], "writeinput": [0, 43, 44, 52, 75, 209, 211, 312, 462, 478], "readoutput": [0, 75], "specifyinput": [0, 54, 55, 75, 212, 215, 279], "updatephysicscouplingcontrol": [0, 75, 253, 254], "inputwrit": [0, 75, 255, 429], "write": [0, 2, 3, 5, 6, 7, 8, 9, 12, 16, 19, 20, 21, 25, 28, 34, 40, 41, 44, 45, 52, 75, 142, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 211, 216, 221, 250, 252, 253, 254, 255, 256, 258, 265, 269, 281, 286, 296, 309, 313, 339, 342, 343, 350, 356, 358, 364, 365, 369, 382, 386, 387, 388, 398, 402, 433, 435, 436, 438, 439, 440, 445, 449, 452, 462, 466, 468, 469, 470, 471, 473, 475, 478, 479, 481, 489, 492, 494, 500], "outputread": [0, 75, 247, 249, 252, 429], "getactiveinterfaceinfo": [0, 75, 200, 429], "isinterfaceact": [0, 75, 429], "interfaceinfo": [0, 75, 429, 475], "interfacecl": [0, 75], "kwarg": [0, 75, 79, 86, 99, 101, 105, 128, 130, 131, 132, 133, 134, 148, 166, 193, 216, 235, 236, 251, 278, 279, 281, 287, 288, 289, 290, 291, 292, 302, 335, 339, 342, 348, 356, 370, 384, 402, 408], "meta": [0, 152, 198, 291, 336, 339, 348, 429], "mpiaction": [0, 18, 201, 211, 259, 279, 378, 429, 433, 436, 471], "parallel": [0, 69, 148, 200, 201, 254, 259, 308, 378, 432, 433, 434, 467, 468, 469, 489, 500], "invokeasmast": [0, 148, 436], "broadcast": [0, 24, 75, 148, 201, 308, 391, 436], "gather": [0, 2, 3, 5, 16, 52, 75, 148, 285, 334, 436, 493], "invok": [0, 1, 34, 36, 44, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 148, 233, 237, 247, 315, 340, 403, 426, 430, 431, 433, 436, 469, 470, 500], "mpiflatten": [0, 148, 436], "mpiiter": [0, 148, 436], "invokehook": [0, 2, 18, 148, 233, 259, 369, 378, 436], "runact": [0, 148, 429, 436], "runactionsinseri": [0, 148, 429], "distributionact": [0, 148, 429], "mpiactionerror": [0, 148, 429], "distributestateact": [0, 148, 429, 436], "counter": [0, 75, 278, 281, 285, 329, 332, 338, 397, 484], "unregist": [0, 278], "defineparamet": [0, 209, 223, 226, 233, 273, 276, 279, 475], "afterconstructionofassembli": [0, 273, 276, 279], "onprocesscoreload": [0, 209, 233, 279, 369, 384, 475], "defineflag": [0, 1, 279, 369, 381, 384, 488], "defineblueprintssect": [0, 279, 381], "defineset": [0, 54, 55, 209, 212, 223, 226, 227, 233, 239, 241, 262, 270, 273, 276, 277, 279, 357, 359, 360, 361, 362, 366, 367, 369, 384, 392, 475], "definesettingsvalid": [0, 209, 212, 223, 226, 233, 273, 276, 279, 475], "defineguiwidget": [0, 279], "getoperatorclassfromruntyp": [0, 279], "defineparameterrenam": [0, 279, 369, 372, 384, 475], "userplugin": [0, 279, 384, 429, 471, 474, 492], "getnewpluginmanag": [0, 279, 429], "collectinterfacedescript": [0, 279, 429], "pluginerror": [0, 279, 429], "runlog": [0, 4, 25, 57, 208, 311, 365, 370, 382, 429, 439, 440, 471, 475, 496], "concatenatelog": [0, 356, 429], "raw": [0, 356, 426, 429, 436], "extra": [0, 1, 4, 29, 55, 286, 308, 333, 336, 356, 364, 429, 430, 433, 440, 492, 496], "debug": [0, 2, 18, 44, 342, 356, 385, 429, 433, 440, 471, 474, 489, 491, 492, 496], "header": [0, 20, 23, 251, 252, 356, 429, 435, 438, 452, 471, 497], "warningreport": [0, 356, 382, 429], "setverbos": [0, 356, 382, 429, 440], "getverbos": [0, 356, 429], "deduplicationfilt": [0, 356, 429], "filter": [0, 16, 18, 52, 150, 152, 308, 323, 325, 339, 351, 356, 389, 397, 402, 455, 494], "runlogg": [0, 356, 429], "fmt": [0, 356, 365, 385, 454], "allowstopdupl": [0, 356], "flush": [0, 356, 471], "getduplicatesfilt": [0, 356], "nulllogg": [0, 356, 429], "addhandl": [0, 356], "createlogdir": [0, 356, 382, 429], "logfactori": [0, 356, 429], "k": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "class": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 211, 212, 215, 216, 220, 221, 222, 224, 226, 229, 230, 231, 233, 235, 236, 237, 240, 242, 244, 245, 247, 249, 251, 252, 254, 255, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 272, 276, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 397, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 433, 435, 436, 438, 439, 440, 470, 471, 474, 476, 477, 478, 479, 488, 489, 492], "simpl": [1, 3, 6, 13, 34, 76, 77, 83, 90, 101, 110, 111, 148, 149, 157, 179, 191, 211, 217, 235, 236, 279, 281, 285, 291, 324, 326, 334, 346, 363, 381, 382, 384, 386, 418, 425, 433, 436, 443, 450, 466, 468, 471, 474, 475, 479, 480, 481, 488, 489, 491, 492], "pattern": [1, 44, 52, 75, 162, 163, 211, 247, 308, 334, 348, 357, 422, 426, 433, 478, 484], "mani": [1, 3, 7, 8, 16, 18, 31, 41, 44, 52, 57, 63, 74, 101, 141, 149, 152, 160, 162, 163, 166, 196, 201, 211, 216, 223, 235, 240, 247, 254, 285, 303, 308, 311, 324, 325, 333, 334, 336, 338, 339, 342, 346, 357, 358, 369, 396, 397, 426, 432, 433, 438, 439, 441, 461, 464, 466, 467, 468, 469, 470, 471, 473, 475, 476, 480, 481, 484, 485, 488, 489, 491, 494, 495, 500], "wai": [1, 3, 5, 6, 18, 42, 44, 46, 52, 86, 101, 148, 149, 160, 162, 180, 200, 211, 235, 247, 279, 281, 285, 308, 312, 324, 325, 334, 336, 339, 342, 346, 355, 356, 364, 377, 398, 399, 430, 432, 433, 437, 438, 467, 468, 471, 473, 476, 479, 482, 488, 491, 492, 497], "what": [1, 3, 4, 5, 8, 16, 29, 46, 75, 86, 101, 149, 150, 152, 159, 163, 194, 201, 211, 216, 217, 240, 254, 261, 279, 281, 285, 290, 309, 325, 331, 336, 339, 340, 342, 346, 357, 367, 386, 394, 397, 399, 426, 431, 432, 433, 434, 435, 436, 440, 468, 473, 474, 476, 477, 479, 488, 489, 490, 491, 496], "made": [1, 3, 5, 41, 43, 44, 52, 75, 82, 101, 149, 240, 247, 281, 285, 286, 287, 308, 311, 312, 340, 342, 369, 387, 390, 433, 436, 438, 440, 446, 468, 470, 471, 473, 475, 479, 480, 488, 491], "heavi": [1, 58, 98, 150, 152, 285, 308, 342, 389, 402, 404, 467, 477, 484, 485, 486, 488, 492], "take": [1, 16, 25, 31, 45, 53, 105, 130, 142, 148, 166, 170, 198, 201, 203, 211, 216, 235, 236, 247, 279, 281, 285, 308, 334, 336, 342, 385, 387, 398, 402, 426, 435, 436, 437, 438, 439, 468, 470, 473, 475, 476, 486, 488, 489, 491, 498], "bit": [1, 17, 30, 53, 159, 163, 170, 240, 279, 281, 285, 305, 308, 329, 394, 436, 439, 464, 469, 475, 479, 483, 493, 494, 500], "effort": [1, 41, 285, 316, 324, 334, 398, 440, 468, 488], "refactor": [1, 216, 289, 326, 430, 439], "through": [1, 12, 29, 44, 66, 74, 110, 148, 149, 151, 152, 160, 164, 169, 174, 175, 176, 197, 198, 200, 201, 203, 235, 240, 279, 281, 285, 302, 305, 308, 318, 324, 325, 329, 331, 332, 333, 334, 336, 337, 338, 342, 351, 352, 358, 364, 377, 384, 385, 389, 398, 402, 424, 426, 433, 434, 435, 436, 438, 439, 440, 467, 468, 471, 473, 475, 479, 482, 483, 484, 486, 488, 489, 491, 492, 494, 496, 497, 500], "intend": [1, 5, 20, 52, 149, 197, 203, 211, 235, 236, 247, 279, 290, 296, 308, 311, 324, 325, 333, 334, 391, 394, 397, 433, 434, 439, 467, 475, 497, 498], "subclass": [1, 8, 46, 52, 53, 57, 63, 71, 75, 76, 142, 159, 162, 175, 199, 216, 224, 236, 247, 252, 254, 257, 258, 278, 279, 281, 282, 302, 305, 307, 308, 312, 324, 325, 331, 336, 338, 339, 340, 364, 370, 392, 393, 426, 431, 433, 435, 436, 471, 475, 491, 492], "look": [1, 16, 18, 136, 149, 151, 152, 160, 200, 211, 216, 235, 240, 281, 285, 308, 312, 325, 334, 336, 342, 393, 402, 432, 435, 436, 437, 440, 473, 475, 476, 479, 489, 491], "feel": [1, 435, 475], "popul": [1, 86, 164, 247, 290, 332, 334, 343, 386, 404, 433, 436, 438], "__init__": [1, 53, 116, 148, 200, 202, 209, 279, 290, 292, 302, 305, 329, 331, 332, 333, 335, 336, 338, 339, 365, 372, 435, 439, 475], "collect": [1, 3, 4, 5, 18, 23, 25, 29, 41, 42, 43, 44, 52, 57, 75, 148, 163, 196, 197, 200, 233, 235, 236, 240, 242, 245, 254, 261, 264, 279, 281, 282, 285, 305, 308, 326, 327, 333, 336, 338, 339, 342, 355, 379, 389, 392, 394, 402, 431, 433, 435, 436, 438, 452, 454, 456, 464, 468, 471, 473, 475, 476, 477, 488, 494], "deem": [1, 53, 235, 433], "suitabl": [1, 336], "given": [1, 3, 4, 5, 8, 16, 40, 67, 75, 77, 79, 80, 101, 105, 110, 142, 150, 151, 152, 155, 160, 196, 199, 200, 235, 236, 238, 240, 242, 247, 251, 255, 279, 281, 285, 286, 290, 291, 308, 310, 311, 312, 316, 324, 326, 329, 331, 334, 335, 336, 338, 339, 342, 352, 355, 394, 396, 397, 398, 401, 402, 404, 426, 427, 428, 433, 436, 438, 439, 447, 452, 455, 468, 475, 479, 483, 486, 488, 489, 491, 492, 494, 495, 497, 498], "well": [1, 3, 4, 5, 6, 8, 16, 40, 42, 46, 52, 53, 74, 75, 76, 134, 149, 159, 221, 223, 240, 247, 279, 285, 289, 291, 305, 308, 309, 324, 334, 336, 338, 342, 357, 389, 394, 397, 401, 402, 430, 433, 438, 439, 460, 462, 468, 473, 475, 478, 479, 480, 488, 491, 492, 494], "further": [1, 3, 5, 240, 312, 338, 342, 386, 436, 438, 488], "also": [1, 3, 4, 5, 8, 30, 41, 44, 46, 58, 63, 74, 76, 83, 101, 148, 149, 152, 160, 162, 163, 169, 172, 175, 176, 197, 198, 200, 209, 213, 215, 216, 233, 235, 240, 247, 249, 251, 252, 254, 264, 279, 281, 285, 291, 296, 304, 305, 308, 310, 316, 318, 325, 326, 329, 333, 336, 338, 339, 342, 364, 376, 386, 392, 394, 397, 398, 402, 426, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 453, 454, 457, 460, 462, 467, 468, 469, 470, 473, 475, 478, 479, 480, 482, 483, 484, 488, 489, 491, 492, 494, 500], "good": [1, 18, 42, 44, 89, 136, 170, 200, 217, 257, 286, 305, 339, 364, 369, 402, 432, 434, 438, 439, 468, 469, 470, 473, 475, 489, 500], "place": [1, 3, 5, 8, 18, 23, 24, 42, 44, 52, 75, 101, 148, 152, 211, 215, 216, 217, 235, 236, 279, 281, 282, 286, 288, 298, 312, 316, 329, 334, 338, 342, 385, 389, 397, 432, 433, 439, 468, 469, 470, 473, 475, 480, 488, 489, 491, 496, 500], "conveni": [1, 44, 149, 163, 200, 203, 211, 236, 279, 282, 334, 342, 369, 386, 387, 397, 430, 475, 479, 491], "pluggi": [1, 278, 279, 435], "hook": [1, 18, 44, 75, 200, 249, 252, 278, 279, 289, 381, 384, 392, 434, 435, 468, 470, 475, 488], "can": [1, 3, 4, 5, 6, 8, 12, 16, 18, 23, 29, 39, 41, 42, 43, 44, 45, 47, 52, 53, 55, 57, 58, 62, 63, 73, 74, 75, 76, 83, 86, 90, 101, 122, 126, 141, 148, 149, 152, 157, 159, 160, 162, 163, 164, 166, 169, 170, 172, 174, 176, 179, 183, 184, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 203, 204, 208, 209, 210, 211, 212, 213, 215, 216, 217, 223, 224, 235, 236, 240, 242, 247, 252, 254, 257, 259, 264, 265, 269, 272, 279, 281, 282, 285, 286, 289, 290, 291, 296, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 318, 320, 323, 324, 325, 326, 327, 329, 331, 333, 334, 336, 338, 339, 340, 342, 346, 347, 348, 350, 352, 355, 356, 358, 364, 365, 367, 369, 370, 375, 376, 378, 380, 381, 382, 384, 385, 387, 389, 392, 393, 394, 396, 397, 398, 401, 402, 406, 412, 423, 426, 430, 431, 432, 433, 435, 436, 438, 439, 440, 447, 448, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 475, 476, 478, 479, 480, 483, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500], "sometim": [1, 4, 44, 74, 152, 197, 216, 236, 252, 309, 336, 462, 473, 475, 488, 491, 494, 496], "pain": [1, 336, 392], "result": [1, 3, 5, 8, 16, 18, 23, 34, 44, 53, 58, 75, 79, 117, 120, 127, 141, 148, 160, 162, 164, 180, 193, 197, 211, 223, 235, 236, 242, 247, 249, 251, 252, 254, 278, 279, 285, 292, 295, 302, 308, 310, 311, 318, 324, 338, 339, 342, 364, 367, 376, 387, 392, 397, 399, 426, 433, 436, 438, 455, 467, 468, 469, 474, 475, 484, 488, 489, 491, 492, 493, 496, 497, 500], "individu": [1, 3, 5, 16, 43, 52, 57, 69, 75, 152, 200, 201, 203, 216, 233, 240, 242, 285, 292, 308, 312, 323, 325, 333, 347, 387, 436, 439, 473, 474, 479, 492], "mai": [1, 3, 4, 5, 16, 17, 23, 29, 30, 34, 40, 41, 43, 44, 46, 47, 52, 55, 57, 63, 66, 74, 75, 76, 78, 101, 105, 148, 149, 150, 151, 152, 160, 162, 163, 166, 170, 196, 199, 200, 201, 203, 204, 208, 211, 212, 216, 233, 236, 240, 242, 247, 251, 252, 254, 279, 281, 282, 285, 286, 287, 290, 302, 305, 307, 308, 309, 310, 311, 312, 324, 325, 326, 327, 331, 334, 336, 338, 339, 342, 348, 356, 357, 358, 375, 378, 382, 384, 392, 394, 397, 402, 404, 426, 431, 433, 435, 438, 439, 440, 453, 468, 469, 470, 471, 473, 475, 478, 479, 480, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500], "ad": [1, 5, 22, 23, 34, 36, 41, 42, 44, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 152, 160, 168, 170, 173, 200, 204, 216, 236, 237, 240, 245, 247, 252, 254, 279, 281, 282, 285, 291, 297, 302, 308, 311, 312, 316, 320, 328, 333, 338, 340, 342, 343, 346, 354, 358, 368, 385, 402, 403, 430, 438, 440, 455, 462, 463, 464, 467, 468, 470, 471, 473, 474, 478, 488, 489, 491, 492], "logic": [1, 75, 101, 159, 162, 169, 174, 200, 216, 221, 279, 286, 289, 291, 315, 324, 339, 342, 365, 382, 384, 470, 471, 473, 489, 490, 492], "here": [1, 3, 5, 12, 41, 44, 57, 63, 74, 75, 76, 142, 149, 150, 152, 159, 163, 164, 169, 171, 174, 184, 193, 196, 201, 202, 209, 211, 216, 217, 233, 235, 240, 247, 279, 285, 286, 290, 291, 296, 302, 305, 308, 309, 316, 318, 323, 331, 332, 333, 342, 346, 356, 364, 380, 386, 394, 426, 431, 433, 435, 436, 438, 439, 440, 446, 454, 460, 461, 467, 468, 473, 475, 476, 477, 479, 480, 482, 484, 487, 488, 491, 492, 496], "reduc": [1, 5, 281, 308, 324, 327, 331, 334, 338, 352, 470, 473, 488], "boilerpl": [1, 163], "throughout": [1, 6, 150, 152, 240, 308, 326, 327, 433, 439, 480, 483, 488, 492], "rest": [1, 78, 180, 281, 287, 325, 377, 392, 433, 454, 479, 480, 488, 496], "mostli": [1, 3, 5, 6, 55, 134, 166, 247, 279, 292, 308, 312, 358, 370, 382, 384, 401, 464, 468, 480], "free": [1, 101, 159, 285, 346, 402, 404, 435, 488], "adopt": [1, 340, 435], "throw": [1, 471], "awai": [1, 329], "start": [1, 3, 8, 23, 75, 152, 162, 169, 200, 216, 235, 236, 240, 247, 254, 282, 285, 309, 324, 332, 334, 342, 385, 386, 387, 396, 397, 398, 402, 404, 426, 432, 433, 434, 435, 437, 438, 439, 440, 446, 447, 448, 469, 471, 474, 478, 479, 485, 486, 488, 494, 500], "scratch": [1, 74, 462, 473, 475, 479, 480, 492], "thei": [1, 4, 5, 31, 44, 53, 63, 74, 75, 76, 101, 122, 141, 148, 149, 152, 162, 166, 169, 171, 172, 196, 198, 200, 201, 203, 204, 211, 213, 217, 220, 233, 236, 240, 242, 247, 252, 254, 265, 279, 281, 282, 285, 286, 287, 290, 292, 300, 302, 308, 309, 310, 325, 327, 331, 333, 334, 335, 336, 338, 339, 340, 342, 348, 355, 357, 365, 368, 369, 385, 387, 392, 398, 419, 431, 432, 433, 435, 436, 438, 439, 440, 462, 468, 470, 471, 473, 475, 478, 479, 480, 484, 488, 489, 492, 495, 496], "do": [1, 3, 4, 7, 13, 16, 17, 18, 24, 31, 41, 42, 43, 44, 46, 47, 55, 57, 61, 74, 75, 76, 101, 126, 148, 149, 150, 152, 159, 160, 162, 166, 196, 197, 211, 213, 216, 217, 235, 240, 251, 252, 279, 281, 282, 285, 308, 310, 311, 312, 318, 324, 325, 331, 333, 334, 335, 336, 338, 340, 342, 355, 356, 365, 369, 375, 377, 378, 387, 390, 391, 397, 398, 399, 410, 419, 426, 430, 431, 433, 434, 435, 436, 438, 440, 455, 468, 469, 470, 473, 475, 476, 478, 479, 480, 486, 488, 489, 491, 492, 494, 496, 500], "wish": [1, 3, 4, 5, 52, 172, 240, 279, 286, 287, 426, 435, 473, 475], "For": [1, 3, 4, 5, 7, 8, 16, 23, 41, 46, 52, 53, 57, 74, 75, 100, 101, 136, 142, 148, 149, 150, 160, 161, 162, 166, 172, 179, 200, 201, 216, 236, 247, 252, 254, 279, 285, 287, 290, 291, 302, 303, 304, 305, 308, 309, 311, 312, 324, 325, 326, 329, 331, 333, 334, 336, 339, 340, 342, 346, 352, 364, 385, 386, 392, 394, 397, 398, 406, 426, 430, 432, 433, 435, 436, 438, 439, 440, 447, 448, 464, 468, 473, 475, 476, 477, 478, 479, 480, 483, 484, 486, 488, 491, 492, 494, 495, 497], "descript": [1, 17, 18, 20, 34, 36, 42, 57, 63, 67, 101, 111, 162, 163, 191, 286, 290, 308, 336, 339, 342, 364, 392, 401, 403, 431, 438, 439, 447, 468, 471, 473, 475, 479, 483, 484, 485, 486, 492, 494, 499], "program": [1, 113, 203, 252, 336, 337, 436, 437, 439, 467, 468, 475, 478, 492], "appropri": [1, 3, 7, 17, 18, 23, 29, 44, 55, 73, 75, 151, 159, 162, 172, 175, 208, 225, 233, 260, 275, 279, 287, 288, 318, 324, 336, 375, 378, 384, 426, 436, 447, 448, 468, 469, 475, 492, 500], "__main__": [1, 433, 435, 462, 464], "expect": [1, 3, 4, 5, 46, 71, 75, 76, 98, 146, 156, 159, 163, 166, 193, 214, 216, 217, 235, 240, 251, 254, 264, 279, 281, 286, 291, 292, 296, 302, 308, 311, 313, 318, 342, 347, 353, 356, 369, 377, 393, 399, 400, 433, 435, 436, 441, 466, 473, 475, 476, 478, 481, 488, 497], "m": [1, 36, 63, 66, 67, 74, 77, 80, 89, 90, 92, 93, 94, 96, 98, 101, 109, 110, 126, 128, 129, 130, 133, 139, 162, 163, 168, 172, 334, 378, 385, 398, 431, 433, 437, 439, 440, 461, 469, 470, 475, 478, 480, 483, 484, 486, 494, 500], "myapp": [1, 431, 435, 475], "grab": [1, 12, 16, 149, 281, 358, 473, 494], "ridabl": 1, "develop": [1, 18, 44, 73, 141, 149, 203, 216, 240, 279, 280, 282, 285, 308, 325, 340, 342, 345, 387, 398, 403, 430, 431, 432, 433, 435, 439, 440, 462, 467, 468, 475, 480, 488, 491, 492, 497], "dict": [1, 3, 5, 6, 18, 44, 46, 75, 76, 101, 152, 157, 163, 166, 196, 198, 216, 235, 236, 242, 254, 279, 280, 285, 288, 290, 291, 302, 305, 308, 310, 312, 313, 318, 336, 338, 339, 342, 343, 352, 363, 364, 365, 385, 389, 394, 403, 404, 464, 478], "dictionari": [1, 3, 4, 5, 44, 75, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139, 149, 150, 152, 157, 166, 191, 216, 235, 236, 238, 240, 242, 252, 254, 279, 289, 290, 302, 308, 313, 318, 324, 336, 338, 339, 342, 343, 352, 358, 363, 364, 385, 389, 394, 397, 404, 433, 438, 471, 477, 489, 494], "renam": [1, 44, 211, 279, 282, 337, 342, 365, 402, 410, 439, 470, 475], "render": [1, 3, 5, 19, 20, 23, 24, 42, 311, 392, 430, 435, 437, 438], "It": [1, 3, 4, 5, 8, 13, 16, 17, 18, 40, 44, 53, 74, 75, 76, 78, 80, 82, 83, 89, 98, 101, 110, 134, 148, 149, 150, 160, 163, 166, 172, 175, 176, 198, 200, 211, 215, 216, 235, 236, 240, 247, 254, 259, 279, 280, 281, 285, 289, 291, 308, 310, 324, 329, 332, 333, 334, 335, 338, 339, 340, 342, 346, 351, 356, 358, 364, 370, 392, 396, 397, 398, 399, 401, 402, 404, 433, 434, 435, 438, 439, 457, 467, 468, 473, 475, 479, 482, 484, 487, 488, 491, 492, 496], "perform": [1, 3, 5, 8, 16, 17, 43, 44, 46, 47, 52, 57, 58, 62, 73, 74, 75, 84, 101, 148, 149, 162, 166, 198, 199, 201, 208, 211, 215, 216, 223, 224, 225, 226, 227, 229, 230, 231, 232, 236, 247, 251, 254, 279, 285, 286, 291, 308, 310, 311, 312, 324, 325, 334, 338, 339, 342, 347, 364, 369, 375, 397, 398, 401, 403, 433, 436, 439, 442, 445, 447, 452, 466, 467, 468, 470, 473, 475, 477, 478, 479, 481, 484, 488, 489, 490, 491, 492, 493, 494], "cach": [1, 16, 44, 101, 126, 197, 251, 278, 281, 282, 305, 308, 323, 324, 342, 347, 365, 399, 416, 478, 492], "somewhat": [1, 4, 40, 162, 247, 302, 308, 333, 334, 342, 440, 468, 475, 488], "expens": [1, 75, 278, 285, 308, 436], "detect": [1, 3, 5, 7, 8, 74, 278, 279, 300, 339], "chang": [1, 3, 4, 5, 6, 16, 44, 45, 74, 76, 101, 105, 148, 152, 170, 172, 209, 223, 233, 252, 254, 279, 281, 285, 286, 291, 302, 305, 308, 310, 311, 312, 316, 320, 324, 329, 331, 332, 334, 338, 339, 342, 356, 364, 367, 369, 390, 391, 398, 403, 430, 431, 433, 434, 436, 439, 440, 452, 468, 469, 473, 475, 476, 478, 483, 484, 488, 491, 492, 497, 498, 500], "invalid": [1, 3, 53, 55, 75, 142, 143, 254, 285, 296, 300, 305, 308, 336, 347, 382, 384, 388, 428, 470, 471, 473, 488], "recomput": [1, 101, 235, 285, 302, 305, 308], "specifi": [1, 2, 3, 5, 6, 11, 12, 13, 14, 19, 27, 28, 31, 32, 33, 36, 38, 39, 46, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 86, 101, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 146, 147, 152, 154, 155, 156, 157, 158, 160, 163, 167, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 200, 203, 206, 207, 208, 216, 220, 221, 222, 229, 230, 231, 233, 235, 236, 237, 240, 242, 244, 245, 247, 249, 252, 254, 257, 258, 259, 264, 265, 266, 267, 268, 269, 272, 279, 281, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 305, 308, 310, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 392, 394, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 438, 440, 448, 458, 462, 470, 471, 473, 474, 480, 483, 484, 488, 489, 491, 492, 495, 497], "pass": [1, 3, 5, 6, 8, 16, 22, 40, 44, 53, 55, 74, 75, 76, 148, 152, 163, 194, 203, 211, 235, 247, 249, 279, 281, 285, 286, 290, 308, 310, 318, 329, 331, 333, 334, 338, 339, 342, 357, 358, 364, 365, 369, 379, 389, 390, 392, 398, 424, 426, 431, 432, 435, 436, 440, 461, 464, 467, 478, 489, 492], "pluginpath": 1, "path": [1, 3, 4, 5, 7, 23, 40, 43, 44, 52, 53, 55, 73, 74, 75, 76, 142, 143, 144, 169, 174, 175, 176, 197, 203, 211, 216, 236, 242, 247, 272, 285, 290, 343, 346, 352, 357, 358, 365, 369, 385, 387, 388, 390, 392, 399, 401, 410, 426, 430, 431, 439, 462, 464, 469, 470, 471, 473, 475, 488, 489, 491, 492, 500], "These": [1, 4, 5, 16, 23, 31, 43, 45, 46, 57, 74, 75, 105, 149, 152, 159, 160, 172, 196, 200, 202, 203, 204, 213, 216, 217, 220, 224, 236, 240, 242, 247, 259, 279, 281, 285, 290, 302, 303, 308, 312, 316, 324, 325, 329, 336, 339, 342, 361, 363, 364, 370, 378, 386, 392, 419, 433, 436, 438, 439, 440, 467, 468, 469, 470, 475, 476, 479, 484, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500], "startup": [1, 200, 208], "full": [1, 3, 5, 16, 25, 44, 46, 50, 52, 53, 56, 57, 76, 86, 160, 164, 196, 197, 200, 217, 236, 247, 285, 290, 291, 304, 308, 309, 311, 312, 320, 323, 332, 333, 334, 342, 343, 350, 352, 353, 358, 365, 368, 386, 401, 402, 404, 406, 410, 433, 435, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 474, 475, 479, 480, 483, 484, 486, 488, 489, 490, 491, 492, 496, 499, 500], "namespac": [1, 8, 36, 76, 122, 209, 279, 339, 409, 435, 439, 471, 475, 492], "There": [1, 3, 5, 18, 57, 75, 149, 162, 166, 181, 212, 221, 233, 240, 247, 285, 286, 291, 302, 311, 324, 326, 336, 339, 342, 343, 380, 397, 432, 433, 436, 438, 439, 471, 475, 478, 479, 480, 482, 488, 490, 492, 494], "comma": [1, 439], "between": [1, 3, 4, 5, 6, 16, 47, 61, 62, 74, 75, 101, 157, 159, 160, 162, 163, 169, 172, 196, 198, 199, 200, 216, 217, 221, 235, 240, 247, 251, 252, 264, 279, 281, 285, 286, 291, 304, 308, 309, 316, 318, 324, 325, 329, 331, 332, 333, 334, 336, 339, 342, 347, 364, 369, 385, 391, 392, 396, 398, 402, 428, 436, 438, 439, 454, 467, 468, 470, 471, 473, 475, 476, 477, 478, 479, 483, 484, 488, 489, 491, 492, 494, 497, 498], "dot": [1, 334, 437, 475], "repres": [1, 3, 5, 43, 74, 91, 101, 148, 150, 152, 159, 162, 166, 172, 196, 197, 198, 211, 216, 217, 235, 236, 240, 242, 247, 253, 254, 255, 264, 279, 280, 281, 285, 286, 288, 290, 303, 304, 305, 307, 308, 324, 327, 329, 331, 332, 333, 334, 336, 339, 342, 348, 355, 357, 386, 394, 433, 471, 473, 475, 479, 480, 483, 484, 486, 488, 491, 492, 494, 496], "stuff": [1, 5, 44, 286, 387, 391, 426, 436, 439], "plugindir": 1, "pluginmod": 1, "plugincl": 1, "whatev": [1, 3, 4, 7, 44, 52, 63, 211, 292, 340, 387, 390, 398, 435, 436, 475, 488], "plugmod2": 1, "plugcls2": 1, "linux": [1, 55, 468, 469, 471, 475, 496, 500], "unix": [1, 475], "py": [1, 3, 6, 116, 122, 152, 197, 202, 209, 213, 216, 220, 252, 285, 308, 345, 346, 352, 358, 378, 401, 412, 414, 422, 424, 430, 433, 435, 436, 439, 440, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 470, 471, 473, 479, 492, 496], "meant": [1, 152, 279, 305, 324, 358, 419, 438, 440, 480, 483], "taken": [1, 235, 236, 308, 332, 336, 340, 347, 426, 478, 480], "though": [1, 4, 98, 162, 196, 249, 285, 308, 335, 342, 346, 386, 426, 433, 440, 470, 475, 491], "public": [1, 4, 53, 77, 128, 129, 130, 162, 172, 308, 434, 470], "idea": [1, 204, 305, 342, 426, 431, 435, 436, 439, 468, 475], "differ": [1, 3, 4, 5, 7, 12, 18, 44, 47, 52, 62, 74, 75, 76, 79, 101, 122, 159, 162, 164, 166, 170, 172, 189, 193, 199, 200, 202, 204, 211, 221, 232, 233, 235, 236, 240, 247, 254, 257, 281, 282, 285, 291, 292, 297, 305, 308, 309, 310, 312, 318, 324, 325, 332, 333, 336, 342, 346, 352, 358, 369, 375, 386, 390, 392, 394, 398, 399, 402, 409, 436, 438, 439, 447, 468, 471, 473, 475, 476, 479, 480, 483, 484, 488, 491, 492, 494, 497, 498], "regular": [1, 36, 44, 162, 175, 176, 311, 332, 334, 422, 426, 475, 480, 489], "becaus": [1, 2, 3, 5, 12, 16, 34, 53, 71, 74, 75, 90, 152, 157, 159, 160, 163, 170, 172, 193, 196, 198, 200, 213, 216, 223, 236, 238, 247, 252, 254, 279, 281, 285, 286, 302, 304, 305, 308, 310, 311, 324, 329, 331, 332, 333, 334, 339, 342, 350, 355, 364, 377, 384, 385, 386, 391, 398, 399, 403, 404, 426, 432, 435, 436, 438, 455, 468, 469, 473, 478, 480, 488, 491, 500], "As": [1, 3, 5, 44, 52, 76, 132, 162, 224, 279, 285, 292, 305, 308, 312, 325, 336, 385, 386, 409, 433, 435, 440, 468, 472, 473, 476, 479, 480, 484, 488, 489, 491, 494], "restrict": [1, 52, 197, 279, 281, 308, 312, 336, 342, 491, 497], "flexibl": [1, 3, 200, 211, 279, 324, 455, 468, 470, 475, 491], "power": [1, 25, 53, 92, 93, 96, 136, 141, 162, 164, 174, 175, 196, 200, 208, 209, 213, 215, 216, 217, 233, 235, 247, 249, 254, 281, 285, 308, 311, 312, 324, 336, 342, 357, 358, 385, 386, 425, 426, 433, 435, 438, 463, 468, 471, 473, 475, 478, 479, 480, 483, 484, 486, 489, 490, 491, 492, 493, 494, 499], "usual": [1, 3, 5, 31, 44, 76, 100, 152, 156, 172, 196, 216, 247, 279, 285, 325, 339, 342, 385, 435, 439, 470, 480, 488, 489], "textual": [1, 462, 480], "screen": [1, 402, 469, 475, 500], "want": [1, 2, 3, 5, 7, 18, 29, 44, 52, 75, 76, 101, 141, 159, 162, 163, 166, 170, 175, 209, 211, 216, 233, 235, 247, 251, 252, 279, 281, 282, 285, 290, 292, 302, 305, 308, 309, 324, 336, 339, 340, 342, 346, 355, 356, 358, 385, 386, 394, 398, 402, 412, 430, 433, 434, 435, 436, 438, 439, 440, 462, 468, 469, 473, 475, 478, 480, 488, 489, 491, 492, 496, 500], "handl": [2, 3, 5, 6, 12, 23, 25, 40, 41, 44, 52, 57, 74, 75, 76, 89, 101, 148, 157, 159, 163, 201, 216, 221, 222, 233, 235, 252, 279, 281, 285, 289, 290, 308, 313, 325, 331, 334, 339, 342, 346, 356, 364, 370, 385, 388, 392, 410, 422, 426, 468, 470, 471, 473, 476, 480, 483, 488, 489, 492], "persist": [2, 3, 6, 325, 336, 433, 438, 468, 471], "static": [2, 3, 5, 8, 12, 18, 40, 52, 55, 57, 75, 79, 148, 196, 200, 201, 203, 204, 212, 215, 216, 226, 233, 247, 270, 276, 279, 280, 281, 285, 302, 308, 312, 324, 328, 329, 331, 332, 334, 335, 339, 364, 367, 369, 372, 381, 384, 386, 387, 435, 446, 467, 468], "cmd": [2, 215, 216, 279, 378, 436], "bool": [2, 3, 5, 6, 22, 25, 44, 52, 63, 75, 101, 152, 163, 164, 172, 197, 200, 203, 208, 211, 216, 233, 236, 247, 254, 279, 281, 285, 290, 291, 292, 302, 305, 308, 310, 312, 318, 324, 326, 328, 329, 331, 332, 334, 335, 339, 342, 355, 357, 358, 364, 365, 385, 387, 390, 398, 401, 402, 404, 426, 427], "certain": [2, 57, 149, 200, 201, 203, 235, 247, 252, 279, 281, 285, 291, 308, 309, 316, 325, 339, 342, 370, 385, 435, 436, 438, 447, 468, 470, 475, 478, 479, 488, 491, 495], "action": [2, 13, 36, 63, 67, 201, 203, 208, 259, 339, 377, 387, 391, 403, 431, 433, 436, 438, 471], "memori": [2, 3, 4, 5, 6, 16, 18, 44, 75, 149, 201, 211, 235, 247, 279, 308, 334, 336, 342, 397, 402, 404, 436, 471, 480, 483, 486, 492], "profil": [2, 18, 44, 387, 404, 432, 434, 439, 469, 471, 478, 488, 492, 500], "small": [2, 170, 183, 188, 325, 342, 456, 467, 468, 471, 475, 476, 484, 492], "enough": [2, 34, 40, 53, 136, 157, 162, 166, 201, 217, 221, 285, 308, 311, 318, 396, 397, 439, 468, 476, 479, 480, 486, 494], "don": [2, 3, 8, 16, 75, 101, 150, 152, 159, 200, 204, 216, 245, 279, 285, 305, 308, 342, 352, 358, 396, 397, 398, 415, 419, 431, 434, 436, 438, 461, 469, 473, 488, 494, 500], "undon": 2, "so": [2, 3, 4, 5, 6, 8, 16, 17, 18, 30, 34, 40, 41, 44, 46, 55, 74, 75, 86, 101, 126, 141, 148, 149, 150, 152, 159, 163, 166, 172, 175, 198, 200, 211, 212, 216, 217, 235, 238, 240, 242, 247, 257, 258, 279, 281, 285, 286, 289, 290, 291, 296, 300, 302, 303, 305, 308, 309, 310, 311, 312, 324, 325, 329, 331, 332, 333, 334, 336, 338, 339, 340, 342, 356, 358, 365, 369, 370, 385, 392, 394, 396, 397, 398, 399, 402, 404, 426, 430, 432, 433, 435, 436, 437, 438, 439, 440, 446, 457, 464, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 486, 488, 489, 491, 492, 494, 496, 499, 500], "r": [2, 3, 5, 6, 7, 8, 9, 13, 16, 17, 18, 22, 23, 24, 25, 29, 35, 40, 41, 42, 44, 55, 75, 89, 90, 112, 139, 148, 162, 163, 168, 172, 192, 193, 197, 200, 208, 212, 215, 216, 217, 221, 233, 235, 240, 247, 249, 252, 254, 255, 257, 258, 259, 261, 279, 280, 282, 285, 299, 304, 308, 309, 310, 312, 313, 315, 324, 327, 332, 335, 336, 342, 345, 352, 375, 378, 384, 385, 398, 402, 433, 436, 438, 439, 446, 447, 448, 451, 454, 459, 464, 465, 466, 468, 470, 471, 473, 475, 478, 479, 480, 481, 488, 491, 492, 493, 494], "stage": [2, 22, 233, 261, 279, 438], "diagram": [2, 22, 152, 235, 280, 302, 402, 430, 438, 471], "come": [2, 4, 41, 62, 74, 76, 101, 162, 169, 174, 196, 197, 199, 201, 209, 233, 247, 279, 285, 336, 338, 339, 379, 385, 392, 394, 426, 431, 433, 435, 440, 443, 450, 455, 464, 466, 468, 471, 473, 475, 476, 478, 479, 481, 491, 492], "togeth": [2, 8, 42, 148, 197, 235, 236, 240, 251, 252, 285, 290, 327, 333, 340, 355, 426, 435, 438, 467, 475, 490, 494, 495], "happen": [2, 44, 55, 141, 142, 148, 152, 209, 216, 217, 247, 252, 254, 279, 285, 300, 308, 324, 336, 342, 357, 433, 435, 436, 438, 476, 489, 492, 496], "end": [2, 3, 5, 6, 11, 16, 17, 18, 19, 22, 23, 42, 74, 75, 101, 149, 160, 162, 163, 166, 200, 249, 254, 261, 279, 289, 311, 332, 333, 356, 375, 385, 386, 433, 438, 440, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 476, 478, 479, 484, 491, 495, 498], "section": [2, 3, 5, 19, 22, 23, 88, 133, 134, 149, 152, 160, 162, 164, 168, 170, 171, 173, 179, 191, 193, 195, 196, 197, 198, 209, 210, 221, 233, 235, 236, 240, 247, 249, 251, 252, 254, 259, 261, 264, 265, 266, 279, 285, 290, 291, 296, 299, 308, 311, 336, 342, 343, 392, 402, 404, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 454, 459, 460, 466, 468, 470, 471, 472, 473, 479, 480, 481, 483, 484, 485, 489, 490, 491, 492, 495, 496, 497, 498, 500], "creat": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 22, 23, 25, 27, 28, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 50, 51, 52, 53, 55, 56, 57, 58, 59, 63, 67, 71, 72, 74, 75, 101, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 134, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 160, 162, 163, 164, 166, 168, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 206, 207, 208, 215, 216, 220, 221, 222, 229, 230, 231, 235, 236, 242, 244, 245, 249, 254, 255, 257, 258, 261, 264, 265, 266, 267, 268, 269, 272, 279, 281, 285, 286, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 308, 312, 318, 319, 320, 321, 322, 323, 324, 326, 331, 333, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 364, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 392, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 432, 433, 434, 435, 436, 438, 443, 450, 454, 455, 456, 462, 463, 466, 468, 469, 471, 473, 474, 478, 479, 480, 481, 488, 491, 492, 494, 495, 498, 499, 500], "graph": [2, 23, 404, 438, 454], "across": [2, 44, 53, 88, 159, 162, 168, 170, 173, 282, 308, 336, 342, 355, 369, 379, 401, 402, 436, 468, 470, 477, 478, 479, 483, 489, 493, 494], "timenodegrouppattern": [2, 3, 5], "versionmajor": [2, 3, 5], "versionminor": [2, 3, 5], "open": [2, 3, 5, 6, 42, 57, 74, 162, 163, 232, 342, 385, 390, 391, 430, 431, 432, 439, 464, 468, 469, 472, 473, 479, 491, 494, 500], "writesystemattribut": [2, 3, 5, 13], "grablocalcommithash": [2, 3, 5], "splitdatabas": [2, 3, 5], "filenam": [2, 3, 5, 6, 74, 75, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 191, 200, 357, 380, 390, 392, 401, 402, 438], "loadc": [2, 3, 5, 473], "loadblueprint": [2, 3, 5], "loadgeometri": [2, 3, 5], "writeinputstodb": [2, 3, 5], "readinputsfromdb": [2, 3, 5], "mergehistori": [2, 3, 5], "gentimestepgroup": [2, 3, 5], "getlayout": [2, 3, 5], "gentimestep": [2, 3, 5], "genauxiliarydata": [2, 3, 5], "getauxiliarydatapath": [2, 3, 5], "kei": [2, 3, 5, 16, 23, 44, 52, 75, 101, 141, 152, 157, 163, 166, 193, 196, 198, 216, 235, 236, 239, 240, 242, 252, 254, 265, 279, 280, 285, 286, 287, 288, 289, 290, 291, 292, 302, 305, 307, 308, 310, 318, 336, 338, 342, 348, 352, 357, 358, 363, 385, 386, 389, 394, 402, 404, 438, 446, 454, 455, 469, 473, 477, 478, 483, 484, 486, 488, 489, 491, 500], "geth5group": [2, 3, 5], "hastimestep": [2, 3, 5], "writetodb": [2, 3, 5, 8, 473], "synctosharedfold": [2, 3, 5], "gethistorybyloc": [2, 3, 5], "gethistoriesbyloc": [2, 3, 5], "gethistori": [2, 3, 5, 6, 494], "initdb": [2, 3, 6, 473], "writedbeverynod": [2, 3, 6], "preprestartrun": [2, 3, 6], "loadstat": [2, 3, 6, 199, 200], "read_only_fm": [2, 3, 9], "read_write_fm": [2, 3, 9], "create_file_ti": [2, 3, 9], "create_file_fi": [2, 3, 9], "create_file_fie2": [2, 3, 9], "read_write_cr": [2, 3, 9], "comparedb3": [2, 3, 11], "outputwrit": [2, 3, 4], "diffresult": [2, 3, 4], "geth5groupnam": [2, 3, 5], "packspecialdata": [2, 3, 5, 339, 494], "unpackspecialdata": [2, 3, 5, 339], "collectblocknumberdens": [2, 3, 5], "layout": [2, 3, 5, 14, 279, 286, 292, 311, 324, 333, 343, 386, 438, 488, 491, 494], "replacenoneswithnonsens": [2, 3, 8], "replacenonsensewithnon": [2, 3, 8], "typedef": [2, 3], "group": [2, 3, 4, 5, 8, 19, 20, 23, 31, 41, 44, 149, 150, 162, 164, 166, 170, 171, 172, 175, 176, 179, 181, 189, 193, 196, 197, 198, 200, 221, 233, 235, 236, 238, 240, 247, 249, 251, 252, 254, 264, 267, 279, 285, 288, 289, 296, 305, 308, 312, 324, 334, 339, 342, 355, 389, 402, 404, 433, 436, 438, 439, 451, 454, 465, 466, 471, 473, 480, 481, 484, 486, 488, 491, 492, 494, 496], "imag": [2, 19, 20, 21, 23, 307, 311, 324, 387, 392, 402, 404, 419, 434, 437, 455, 471], "html": [2, 18, 19, 20, 23, 28, 44, 80, 98, 162, 170, 304, 339, 392, 402, 427, 430, 434, 468, 482, 492], "htmlfile": [2, 19, 21], "tag": [2, 19, 21, 23, 152, 247, 426, 440, 488], "head": [2, 19, 21, 23, 261, 342, 438, 468, 488], "bodi": [2, 19, 21, 63, 148, 392, 467], "img": [2, 19, 21, 23], "b": [2, 19, 21, 40, 46, 52, 79, 90, 92, 93, 96, 113, 133, 134, 150, 152, 159, 172, 181, 196, 197, 216, 217, 232, 235, 240, 242, 247, 280, 281, 285, 300, 308, 310, 324, 325, 336, 340, 342, 344, 348, 352, 398, 426, 428, 433, 436, 452, 454, 455, 459, 463, 470, 471, 473, 475, 478, 479, 480, 484, 486, 488, 489, 491, 493, 497], "p": [2, 3, 19, 21, 23, 77, 87, 90, 100, 101, 110, 112, 117, 133, 139, 150, 152, 160, 166, 168, 172, 173, 252, 285, 304, 305, 308, 310, 324, 336, 352, 396, 426, 431, 436, 438, 454, 455, 463, 471, 473, 475, 479, 483, 484, 486, 488, 494], "A": [2, 3, 5, 8, 17, 19, 20, 21, 23, 25, 29, 36, 40, 41, 43, 44, 52, 53, 55, 63, 67, 75, 76, 77, 80, 87, 90, 101, 102, 105, 109, 122, 134, 135, 136, 142, 148, 149, 150, 151, 152, 157, 160, 162, 163, 164, 166, 168, 170, 172, 196, 197, 198, 200, 203, 208, 211, 213, 215, 216, 217, 221, 232, 235, 236, 240, 242, 247, 254, 279, 280, 281, 282, 285, 287, 288, 289, 290, 292, 294, 297, 298, 300, 302, 303, 304, 305, 307, 308, 310, 312, 313, 318, 324, 325, 326, 332, 333, 334, 335, 338, 339, 340, 342, 344, 348, 355, 356, 358, 364, 369, 375, 378, 382, 384, 385, 386, 392, 394, 398, 402, 404, 409, 426, 428, 430, 433, 435, 438, 439, 440, 454, 462, 464, 467, 468, 470, 473, 474, 475, 477, 479, 480, 483, 484, 485, 488, 489, 491, 492, 493, 494], "titl": [2, 19, 20, 21, 23, 43, 44, 52, 53, 211, 272, 358, 385, 392, 402, 404, 431, 438, 453, 454, 473, 476, 477, 478, 491], "h1": [2, 19, 21, 23, 152], "h2": [2, 19, 21, 23, 81, 152], "h3": [2, 19, 21, 152], "h4": [2, 19, 21, 23, 152], "ul": [2, 19, 21], "li": [2, 19, 21, 150, 152, 172, 254, 303, 308, 342, 426], "style": [2, 19, 21, 44, 52, 101, 144, 152, 163, 279, 336, 338, 342, 343, 358, 365, 439, 468, 471, 488], "div": [2, 19, 21, 23, 438], "caption": [2, 19, 21, 23, 261, 392, 438], "tbodi": [2, 19, 21], "thead": [2, 19, 21], "tr": [2, 19, 21], "th": [2, 8, 19, 21, 23, 130, 150, 152, 172, 200, 308, 334, 433, 475, 484, 486, 491, 497], "td": [2, 19, 21, 79, 112], "span": [2, 19, 21, 329, 356], "footer": [2, 19, 21], "link": [2, 19, 21, 23, 160, 200, 216, 285, 289, 292, 298, 302, 305, 308, 310, 319, 333, 342, 347, 433, 438, 440, 467, 470, 479, 484, 490, 493], "encode64": [2, 19, 21, 23], "writestandardreporttempl": [2, 19, 21], "newreportutil": [2, 19, 438], "insertblueprintcont": [2, 19, 22], "insertgeneralreportcont": [2, 19, 22], "comprehensivebolcont": [2, 19, 22], "insertdesigncont": [2, 19, 22], "insertblockdesignreport": [2, 19, 22], "insertcoredesignreport": [2, 19, 22], "insertendoflifecont": [2, 19, 22], "insertblockdiagram": [2, 19, 22], "insertmetat": [2, 19, 22], "insertsettingsdata": [2, 19, 22], "getpindesignt": [2, 19, 22], "insertareafractionsreport": [2, 19, 22], "createdimensionreport": [2, 19, 22], "insertcoreandassemblymap": [2, 19, 22], "newreport": [2, 19, 22, 438, 471], "reportcont": [2, 19, 22, 23, 261, 279, 434], "reportnod": [2, 19, 23], "timeseri": [2, 19, 23, 27, 261, 434], "reportstag": [2, 19, 23, 261, 279, 438], "reportinterfac": [2, 19, 25, 44, 433], "reportingutil": [2, 19], "writewelcomehead": [2, 19, 25], "getinterfacestacksummari": [2, 19, 25], "writetightcouplingconvergencesummari": [2, 19, 25], "writeassemblymasssummari": [2, 19, 25], "writecyclesummari": [2, 19, 25], "setneutronbalancesreport": [2, 19, 25], "summarizepindesign": [2, 19, 25], "summarizepowerpeak": [2, 19, 25], "summarizepow": [2, 19, 25], "makecoredesignreport": [2, 19, 25], "makeblockdesignreport": [2, 19, 25], "makecoreandassemblymap": [2, 19, 25], "test_historytrack": [2, 30], "runtutorialnotebook": [2, 30, 31], "testhistorytrack": [2, 30, 31], "testhistorytrackernomodel": [2, 30, 31], "test_memoryprofil": [2, 30], "testmemoryprofil": [2, 30, 32], "klasscountertest": [2, 30, 32], "test_snapshot": [2, 30], "mockreactorparam": [2, 30, 33, 246, 248, 249], "mockreactor": [2, 30, 33, 161, 192, 193, 209, 246, 248, 249, 271, 272], "testsnapshotinterfac": [2, 30, 33], "dumper": [2, 34, 41, 42, 289], "visfiledump": [2, 34, 35, 41, 42], "visfileentrypoint": [2, 34, 36], "vtkmesh": [2, 34, 38, 40], "createreactorblockmesh": [2, 34, 40], "createreactorassemmesh": [2, 34, 40], "createblockmesh": [2, 34, 40], "createassemmesh": [2, 34, 40], "vtk": [2, 34, 40, 469, 470, 475, 500], "limit": [2, 3, 5, 34, 101, 152, 216, 223, 247, 254, 279, 285, 286, 309, 334, 335, 394, 426, 435, 439, 468, 470, 475, 479, 483, 484, 485, 488, 489, 491, 492, 497, 498], "vtkdumper": [2, 34, 41], "xdmf": [2, 34, 39, 469, 470, 500], "xdmfdumper": [2, 34, 42], "tracker": [2, 31, 75, 404, 468], "add": [2, 4, 18, 19, 22, 23, 24, 40, 43, 44, 52, 53, 55, 63, 75, 101, 148, 150, 152, 168, 170, 173, 200, 203, 204, 217, 240, 247, 249, 250, 251, 252, 261, 279, 280, 281, 282, 285, 302, 308, 311, 312, 318, 320, 333, 336, 338, 339, 340, 342, 346, 351, 355, 356, 358, 370, 384, 385, 387, 401, 402, 404, 426, 430, 431, 432, 433, 436, 438, 439, 440, 454, 464, 469, 470, 471, 473, 475, 478, 480, 485, 488, 491, 492, 500], "eol": [2, 29, 75, 200, 204, 215, 279, 433, 438, 473, 492], "track": [2, 3, 4, 6, 18, 41, 42, 44, 150, 160, 164, 216, 240, 247, 261, 281, 285, 308, 312, 338, 342, 358, 382, 426, 430, 470, 471, 488, 489, 492], "adddetailassembliesbol": [2, 16], "addallfuelassem": [2, 16], "adddetailassemsbyassemnum": [2, 16], "gettrackedparam": [2, 16], "adddetailassembli": [2, 16], "getdetailassembli": [2, 16], "getdetailblock": [2, 16], "filtertimeindic": [2, 16], "writeassemhistori": [2, 16], "preloadblockhistoryv": [2, 16], "unloadblockhistoryv": [2, 16], "getblockhistoryv": [2, 16], "gettimestep": [2, 16], "cleanarmifil": [2, 17], "cleanlastcyclefil": [2, 17], "displaymemoryusag": [2, 18], "checkforduplicateobjectsonarmimodel": [2, 18], "getreferr": [2, 18], "countobject": [2, 18], "minprocessmemoryinmb": [2, 18, 486], "maxprocessmemoryinmb": [2, 18, 486], "printusag": [2, 18], "activatedefaultsnapshot": [2, 29], "respons": [3, 8, 44, 52, 148, 254, 279, 287, 291, 303, 305, 340, 342, 440, 473, 475, 489], "disk": [3, 44, 162, 200, 211, 474], "progress": [3, 8, 211, 433, 468, 496], "period": [3, 74, 88, 150, 200, 280, 290, 326, 347, 439, 454, 462, 479, 484, 486, 491], "primari": [3, 6, 57, 75, 148, 179, 200, 201, 221, 279, 280, 310, 325, 342, 433, 435, 436, 439, 473, 475, 478, 483, 486, 488, 489, 492, 496], "output": [3, 4, 5, 17, 18, 41, 43, 44, 58, 62, 63, 65, 75, 141, 142, 170, 172, 184, 200, 211, 216, 247, 251, 252, 272, 285, 290, 308, 311, 312, 324, 331, 334, 343, 358, 368, 370, 382, 390, 391, 392, 397, 399, 410, 416, 426, 430, 433, 437, 438, 468, 470, 471, 474, 478, 480, 482, 487, 491, 492], "follow": [3, 4, 8, 16, 29, 141, 149, 160, 162, 197, 199, 200, 209, 216, 223, 240, 242, 247, 279, 305, 308, 311, 318, 324, 325, 329, 332, 340, 342, 365, 369, 397, 398, 401, 403, 426, 430, 431, 433, 435, 436, 438, 439, 440, 468, 469, 473, 474, 475, 477, 479, 480, 482, 488, 489, 491, 492, 493, 494, 497, 498, 500], "analysi": [3, 5, 16, 18, 29, 44, 52, 76, 162, 173, 199, 200, 201, 209, 211, 223, 232, 240, 251, 252, 279, 355, 386, 399, 404, 433, 435, 438, 447, 464, 467, 473, 475, 478, 479, 480, 488, 490, 491, 492, 493], "restart": [3, 5, 13, 17, 204, 215, 216, 247, 291, 385, 387, 433, 471, 490, 492, 494], "select": [3, 5, 34, 75, 162, 217, 235, 236, 240, 272, 279, 291, 339, 357, 385, 397, 398, 402, 455, 468, 473, 477, 489, 492], "relat": [3, 5, 13, 30, 41, 43, 47, 52, 57, 74, 136, 150, 166, 187, 196, 209, 224, 227, 235, 241, 250, 262, 270, 277, 282, 285, 308, 324, 336, 338, 339, 340, 360, 361, 362, 364, 387, 398, 401, 435, 470, 471, 475, 478, 483, 484, 491, 498], "associ": [3, 5, 14, 23, 41, 44, 46, 60, 136, 141, 148, 150, 161, 203, 209, 233, 240, 282, 287, 308, 327, 333, 334, 336, 338, 339, 340, 342, 364, 385, 433, 435, 462, 475, 483, 488, 494, 495, 496], "repeat": [3, 164, 171, 215, 216, 221, 279, 311, 312, 332, 334, 342, 388, 398, 402, 426, 434, 438, 468, 470, 491, 492, 497], "yourself": [3, 86, 149, 402, 439], "dry": [3, 5, 77, 488], "practic": [3, 5, 86, 159, 203, 279, 305, 318, 339, 340, 394, 432, 434, 436, 440, 468, 475, 491], "share": [3, 29, 166, 200, 201, 211, 240, 281, 316, 336, 340, 369, 386, 436, 479, 480, 488, 492], "major": [3, 200, 209, 286, 334, 336, 404, 433, 436, 438, 440, 468], "you": [3, 5, 7, 16, 17, 18, 29, 36, 44, 46, 52, 53, 55, 63, 67, 75, 86, 99, 101, 132, 149, 150, 151, 152, 159, 160, 162, 166, 169, 170, 175, 187, 194, 196, 200, 203, 209, 211, 216, 235, 236, 242, 247, 251, 252, 279, 281, 282, 285, 290, 292, 296, 302, 305, 308, 309, 332, 333, 340, 342, 356, 358, 364, 378, 385, 386, 392, 396, 401, 402, 403, 404, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 461, 462, 463, 466, 468, 469, 473, 474, 475, 477, 478, 479, 480, 481, 487, 488, 489, 491, 492, 493, 494, 500], "1": [3, 8, 12, 13, 18, 23, 31, 40, 46, 51, 53, 62, 74, 75, 77, 78, 79, 86, 87, 90, 92, 93, 96, 101, 102, 105, 107, 109, 110, 113, 117, 122, 128, 129, 130, 132, 133, 134, 136, 138, 139, 143, 144, 148, 150, 152, 156, 160, 163, 164, 166, 169, 170, 171, 172, 176, 179, 181, 183, 188, 193, 196, 200, 203, 208, 210, 216, 217, 232, 233, 235, 236, 238, 242, 247, 249, 254, 259, 279, 281, 285, 290, 292, 294, 297, 298, 300, 303, 304, 305, 307, 308, 310, 311, 312, 316, 318, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 339, 342, 343, 345, 346, 347, 348, 355, 358, 364, 365, 377, 384, 385, 386, 387, 389, 392, 394, 396, 397, 398, 402, 403, 404, 406, 412, 425, 426, 433, 437, 438, 439, 440, 446, 447, 448, 454, 456, 457, 458, 461, 462, 464, 468, 472, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 488, 489, 491, 492, 497, 498], "origin": [3, 4, 5, 36, 42, 44, 52, 75, 148, 149, 151, 156, 162, 186, 187, 198, 200, 201, 233, 235, 245, 247, 264, 282, 285, 290, 302, 308, 310, 312, 318, 323, 324, 325, 329, 332, 333, 342, 365, 367, 385, 386, 390, 396, 436, 440, 462, 468, 471, 475, 479, 480, 484, 485, 488, 491, 494], "were": [3, 4, 5, 52, 74, 148, 162, 201, 202, 213, 216, 221, 240, 279, 281, 282, 285, 305, 308, 316, 324, 325, 336, 340, 342, 370, 433, 438, 439, 468, 470, 471, 473, 475, 480, 492, 494, 496], "sql": [3, 75], "2": [3, 4, 8, 12, 18, 23, 31, 33, 51, 53, 74, 75, 80, 81, 87, 89, 90, 92, 93, 96, 101, 105, 107, 109, 110, 120, 122, 130, 132, 133, 134, 136, 143, 148, 149, 150, 151, 152, 160, 164, 168, 169, 172, 175, 176, 184, 196, 197, 203, 208, 210, 216, 217, 232, 233, 235, 236, 238, 242, 245, 247, 281, 285, 290, 298, 302, 303, 304, 305, 308, 311, 312, 316, 318, 325, 326, 327, 329, 332, 333, 334, 335, 336, 339, 342, 343, 345, 346, 347, 348, 352, 355, 378, 385, 386, 389, 396, 397, 398, 403, 404, 406, 412, 422, 425, 426, 428, 433, 438, 439, 446, 448, 454, 455, 456, 458, 459, 461, 463, 464, 468, 472, 473, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 488, 489, 491, 492, 494, 497], "storag": [3, 6, 20, 279, 333, 336, 351, 404, 492], "wa": [3, 4, 5, 6, 34, 74, 75, 77, 89, 101, 148, 152, 156, 162, 163, 166, 181, 183, 187, 188, 193, 200, 203, 216, 217, 233, 254, 279, 285, 286, 292, 305, 308, 311, 325, 332, 333, 334, 342, 364, 365, 370, 380, 387, 398, 401, 426, 428, 438, 439, 462, 468, 470, 471, 473, 475, 478, 479, 480, 483, 488, 491, 492, 494], "hdf5": [3, 4, 5, 9, 31, 42, 74, 339, 394, 470, 475, 478, 494], "requir": [3, 17, 28, 29, 31, 34, 36, 42, 46, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 101, 148, 151, 152, 160, 167, 196, 200, 208, 211, 216, 217, 221, 235, 236, 237, 240, 247, 254, 279, 280, 281, 285, 287, 289, 290, 291, 296, 298, 304, 308, 309, 313, 316, 325, 327, 328, 334, 336, 339, 342, 343, 350, 355, 363, 364, 368, 369, 375, 378, 384, 391, 392, 396, 399, 426, 430, 431, 432, 436, 438, 439, 464, 467, 469, 470, 471, 475, 476, 477, 479, 480, 483, 486, 488, 489, 490, 491, 492, 499, 500], "less": [3, 46, 101, 152, 160, 163, 164, 200, 217, 285, 304, 305, 311, 326, 331, 342, 387, 397, 404, 426, 438, 439, 470, 471, 475, 478, 491, 492], "extern": [3, 75, 77, 166, 172, 200, 211, 215, 235, 236, 247, 251, 252, 272, 279, 342, 389, 398, 433, 435, 439, 467, 468, 471, 475, 484, 488, 491, 492, 495], "infrastructur": [3, 279, 434, 468], "howev": [3, 5, 7, 8, 44, 46, 75, 149, 191, 235, 285, 291, 302, 308, 325, 331, 336, 339, 342, 346, 378, 394, 435, 437, 438, 439, 473, 475, 479, 488, 489, 491], "did": [3, 4, 305, 308, 333, 426, 470, 480], "ghost": 3, "could": [3, 4, 5, 34, 44, 46, 52, 53, 75, 101, 149, 157, 159, 160, 191, 194, 197, 200, 209, 233, 236, 240, 247, 254, 285, 286, 291, 305, 311, 335, 336, 339, 342, 364, 385, 396, 397, 398, 399, 401, 402, 426, 438, 468, 471, 473, 475, 478, 480, 483, 484, 488, 491, 494], "long": [3, 5, 29, 36, 63, 67, 101, 166, 170, 200, 216, 279, 285, 308, 385, 386, 387, 431, 438, 440, 468, 475], "dimens": [3, 4, 5, 22, 25, 46, 53, 75, 89, 94, 101, 164, 200, 232, 235, 281, 285, 286, 289, 290, 296, 302, 303, 305, 307, 308, 316, 318, 329, 334, 339, 345, 347, 375, 386, 433, 458, 467, 470, 471, 473, 479, 484, 488, 490, 492, 493, 498], "consist": [3, 44, 101, 148, 152, 156, 162, 163, 166, 168, 170, 173, 181, 196, 209, 211, 235, 254, 281, 285, 291, 308, 311, 318, 331, 342, 346, 348, 369, 386, 426, 436, 439, 467, 468, 470, 471, 475, 479, 484, 488, 491, 492], "inconveni": 3, "prone": [3, 309, 325, 326, 340, 468], "kept": [3, 101, 282, 325], "schema": [3, 236, 279, 296, 357, 363, 364, 367], "permit": [3, 5, 8, 281, 282, 308, 394, 470], "entir": [3, 5, 75, 101, 163, 200, 235, 279, 282, 285, 287, 290, 308, 310, 326, 342, 358, 390, 401, 406, 426, 439, 440, 448, 479, 480, 486, 491, 494], "written": [3, 4, 5, 6, 13, 16, 41, 42, 44, 52, 55, 162, 163, 167, 169, 171, 172, 174, 175, 176, 180, 181, 184, 186, 187, 208, 299, 333, 339, 351, 358, 402, 433, 438, 439, 440, 468, 470, 471, 473, 480, 489, 491, 492], "recov": [3, 8, 62, 318, 494], "just": [3, 5, 7, 8, 16, 18, 30, 42, 43, 46, 55, 75, 76, 101, 110, 112, 141, 148, 149, 151, 159, 160, 162, 194, 201, 204, 213, 216, 236, 247, 252, 279, 281, 285, 286, 290, 296, 300, 302, 305, 308, 318, 324, 331, 333, 334, 336, 342, 353, 356, 358, 364, 382, 384, 385, 392, 396, 398, 402, 418, 424, 426, 431, 435, 436, 438, 439, 440, 457, 468, 471, 473, 475, 477, 478, 479, 480, 488, 489, 491, 492, 493, 496], "improv": [3, 41, 44, 75, 159, 279, 285, 325, 348, 470, 471, 472, 488, 497], "strategi": [3, 42, 282], "larg": [3, 75, 82, 141, 217, 233, 236, 279, 308, 309, 324, 342, 352, 358, 369, 385, 391, 393, 396, 402, 433, 436, 439, 468, 470, 475, 479, 480, 483, 488, 493], "attribut": [3, 4, 5, 8, 21, 23, 46, 52, 63, 75, 101, 148, 150, 152, 159, 164, 166, 172, 196, 197, 198, 235, 236, 240, 247, 252, 259, 264, 265, 279, 280, 282, 286, 287, 288, 289, 290, 291, 292, 308, 312, 323, 324, 327, 336, 338, 339, 340, 342, 351, 363, 370, 401, 403, 418, 425, 426, 431, 433, 436, 439, 470, 471, 473, 474, 475, 488, 494], "special": [3, 4, 5, 8, 29, 43, 76, 94, 101, 152, 159, 160, 163, 170, 200, 216, 235, 236, 269, 279, 289, 304, 308, 336, 339, 342, 356, 378, 387, 401, 426, 430, 433, 438, 467, 470, 473, 475, 479, 488, 490, 492, 494], "string": [3, 5, 7, 23, 30, 36, 53, 63, 67, 75, 76, 152, 163, 169, 170, 174, 175, 176, 191, 197, 201, 208, 211, 216, 236, 251, 252, 254, 261, 279, 281, 285, 287, 288, 289, 290, 291, 292, 297, 302, 305, 308, 318, 325, 326, 331, 332, 336, 339, 342, 345, 349, 356, 358, 363, 364, 365, 367, 369, 382, 385, 387, 389, 392, 397, 398, 400, 402, 403, 426, 436, 439, 440, 470, 479, 483, 484, 488, 491, 492, 494], "symbol": [3, 101, 149, 150, 151, 152, 154, 389], "c00n00": [3, 5, 473], "attr": [3, 4, 5, 21, 305, 308, 339, 340, 401], "5_linkeddim": 3, "support": [3, 5, 8, 34, 40, 42, 44, 73, 75, 76, 83, 149, 152, 156, 159, 160, 162, 200, 201, 202, 203, 235, 240, 251, 279, 285, 292, 312, 318, 329, 336, 339, 342, 343, 347, 356, 382, 386, 394, 397, 426, 433, 439, 468, 470, 471, 475, 480, 491, 492, 494, 497, 498], "copi": [3, 5, 29, 44, 75, 101, 148, 168, 170, 173, 200, 211, 224, 236, 238, 242, 247, 264, 272, 285, 290, 308, 324, 333, 342, 355, 358, 367, 385, 390, 397, 399, 401, 410, 430, 439, 468, 470, 471, 478, 479, 480, 488, 492], "node": [3, 5, 6, 8, 13, 16, 17, 18, 23, 24, 29, 41, 57, 74, 75, 148, 161, 172, 186, 197, 200, 201, 204, 216, 233, 247, 249, 254, 257, 281, 289, 291, 308, 342, 365, 378, 384, 385, 388, 391, 392, 402, 404, 433, 436, 438, 467, 473, 475, 484, 491, 492, 494, 496, 497, 499], "dataset": [3, 4, 5, 42, 186, 494], "anoth": [3, 5, 29, 40, 44, 52, 53, 75, 130, 134, 141, 157, 160, 180, 191, 198, 200, 203, 216, 236, 247, 249, 279, 302, 305, 308, 309, 311, 312, 324, 333, 334, 339, 342, 385, 398, 404, 415, 426, 436, 438, 439, 440, 464, 468, 469, 478, 485, 488, 489, 491, 492, 498, 500], "refer": [3, 4, 5, 23, 44, 76, 77, 78, 91, 92, 93, 95, 96, 99, 101, 109, 113, 130, 133, 134, 136, 139, 148, 149, 150, 151, 152, 163, 171, 191, 216, 236, 245, 279, 281, 285, 290, 305, 308, 310, 327, 342, 346, 347, 358, 369, 385, 402, 426, 430, 433, 435, 436, 438, 441, 466, 469, 471, 479, 481, 484, 486, 488, 491, 492, 494, 498, 500], "maintain": [3, 101, 135, 151, 152, 166, 200, 281, 308, 318, 340, 447, 468, 469, 470, 488, 500], "previou": [3, 5, 17, 75, 141, 172, 184, 199, 200, 204, 216, 217, 247, 279, 285, 308, 364, 385, 402, 426, 433, 470, 475, 480, 484, 488, 489, 491, 492, 497], "old": [3, 4, 5, 74, 141, 142, 144, 146, 163, 216, 247, 279, 286, 292, 305, 308, 311, 339, 342, 343, 357, 364, 384, 390, 439, 468, 470, 471, 491, 494, 497], "cannot": [3, 4, 75, 76, 101, 148, 152, 199, 235, 236, 302, 305, 308, 309, 336, 337, 339, 340, 347, 365, 369, 385, 392, 398, 402, 403, 412, 473, 475, 478, 488, 491], "compress": 3, "locat": [3, 5, 8, 14, 36, 40, 44, 52, 75, 144, 211, 216, 217, 221, 279, 280, 281, 282, 285, 290, 295, 308, 310, 318, 326, 327, 328, 329, 331, 332, 334, 335, 336, 339, 342, 343, 345, 346, 352, 354, 355, 358, 369, 386, 393, 426, 433, 455, 469, 470, 471, 473, 478, 480, 483, 484, 486, 488, 489, 491, 492, 494, 500], "allow": [3, 4, 5, 6, 7, 18, 36, 42, 44, 52, 53, 57, 63, 67, 75, 76, 101, 148, 149, 156, 159, 160, 162, 164, 170, 197, 200, 203, 211, 215, 216, 217, 240, 247, 278, 279, 282, 285, 286, 289, 291, 297, 302, 308, 311, 313, 324, 325, 333, 336, 338, 339, 342, 356, 357, 363, 364, 365, 385, 386, 392, 394, 398, 399, 401, 431, 432, 433, 435, 438, 439, 440, 447, 455, 468, 470, 471, 478, 479, 480, 488, 489, 491, 492, 497], "multiindex": 3, "4": [3, 5, 8, 18, 31, 51, 53, 74, 75, 77, 78, 79, 80, 81, 87, 105, 108, 109, 122, 133, 134, 136, 149, 150, 152, 156, 160, 163, 172, 181, 210, 216, 217, 232, 233, 236, 238, 285, 290, 298, 311, 312, 325, 326, 329, 334, 339, 346, 347, 348, 385, 397, 402, 412, 422, 425, 432, 436, 446, 454, 455, 457, 462, 463, 464, 468, 473, 476, 477, 478, 479, 480, 488, 489, 491, 492, 497, 498], "includ": [3, 5, 23, 41, 44, 53, 58, 75, 76, 105, 134, 141, 149, 150, 160, 162, 166, 172, 179, 196, 200, 209, 212, 216, 217, 232, 235, 236, 240, 247, 252, 259, 261, 279, 285, 290, 291, 305, 308, 312, 324, 325, 332, 334, 336, 337, 340, 342, 348, 351, 352, 353, 361, 368, 385, 389, 394, 401, 426, 430, 432, 433, 435, 439, 440, 447, 461, 464, 467, 468, 470, 471, 473, 475, 479, 482, 484, 488, 490, 491, 492, 499], "compos": [3, 4, 20, 52, 326, 336, 342], "multipl": [3, 5, 23, 25, 44, 46, 47, 55, 58, 69, 74, 88, 148, 160, 172, 200, 203, 211, 235, 236, 279, 285, 289, 295, 300, 305, 308, 310, 311, 312, 318, 324, 327, 333, 336, 342, 346, 347, 352, 355, 382, 385, 398, 422, 436, 438, 439, 440, 468, 471, 473, 475, 478, 479, 483, 484, 485, 486, 488, 492, 493], "have": [3, 4, 5, 6, 8, 11, 12, 13, 14, 16, 23, 27, 28, 30, 31, 32, 33, 38, 39, 41, 42, 43, 44, 46, 50, 51, 52, 55, 56, 71, 72, 73, 74, 75, 76, 86, 101, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 141, 144, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 162, 163, 164, 166, 172, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 200, 204, 206, 207, 208, 209, 211, 215, 216, 217, 220, 221, 222, 229, 230, 231, 235, 236, 240, 244, 245, 249, 252, 254, 257, 258, 261, 264, 265, 266, 267, 268, 269, 272, 279, 281, 282, 285, 286, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 308, 310, 311, 312, 318, 319, 320, 321, 322, 323, 325, 326, 329, 331, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 364, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 397, 398, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 461, 462, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 484, 486, 488, 490, 491, 492, 493, 494, 497, 498, 500], "effici": [3, 8, 53, 149, 159, 196, 236, 308, 326, 334, 338, 342, 386, 447, 468, 471, 479], "mean": [3, 4, 8, 89, 92, 93, 94, 96, 163, 211, 236, 251, 257, 281, 285, 308, 325, 332, 346, 358, 385, 398, 433, 435, 439, 440, 468, 470, 479, 480, 483, 484, 488, 491, 492], "extract": [3, 5, 44, 62, 211, 216, 242, 255, 295, 308, 433, 467, 478, 495], "pathlik": [3, 5, 6], "serial": [3, 4, 5, 8, 148, 163, 233, 236, 280, 281, 287, 288, 289, 308, 336, 338, 339, 349, 351, 363, 364, 470, 471, 494], "push": [3, 5, 232, 346, 435, 439, 440, 470, 484], "aid": [3, 5, 209, 325, 336, 339, 364, 470, 484], "pack": [3, 5, 8, 280, 285, 308, 334, 336, 339, 351, 470, 488], "unpack": [3, 5, 8, 44, 280, 308, 336, 339, 351, 397, 470], "structur": [3, 4, 5, 46, 52, 75, 83, 89, 101, 149, 150, 152, 159, 162, 163, 164, 166, 169, 170, 171, 174, 175, 176, 200, 202, 210, 211, 215, 216, 236, 238, 242, 247, 255, 267, 279, 280, 281, 286, 290, 291, 292, 313, 324, 325, 327, 331, 335, 336, 338, 342, 363, 386, 433, 434, 452, 454, 467, 468, 470, 471, 473, 475, 480, 484, 486, 488, 491, 492, 495], "relationship": [3, 5, 327, 347, 498], "non": [3, 4, 5, 74, 75, 101, 148, 163, 164, 197, 213, 235, 236, 247, 249, 251, 255, 257, 267, 279, 281, 285, 290, 292, 295, 302, 304, 305, 308, 311, 318, 323, 324, 326, 333, 334, 338, 339, 342, 346, 367, 388, 394, 399, 400, 402, 431, 433, 471, 478, 484, 488, 489, 492, 498], "doc": [3, 5, 18, 57, 89, 236, 280, 289, 308, 392, 394, 403, 430, 433, 435, 440, 453, 471, 473, 475, 480, 489], "w": [3, 5, 9, 77, 80, 87, 89, 90, 92, 93, 96, 98, 101, 109, 110, 128, 129, 130, 133, 134, 136, 139, 143, 150, 152, 163, 232, 242, 298, 332, 352, 426, 468, 473, 477, 478, 483, 484, 486], "compil": [3, 5, 286, 338, 340, 430], "d": [3, 5, 16, 40, 76, 90, 136, 139, 150, 159, 160, 161, 164, 172, 216, 217, 279, 280, 281, 285, 289, 290, 305, 308, 309, 325, 327, 328, 329, 332, 333, 334, 335, 342, 343, 344, 348, 356, 426, 428, 431, 433, 436, 439, 447, 448, 455, 456, 458, 468, 469, 473, 475, 479, 484, 488, 489, 491, 500], "n": [3, 5, 73, 75, 80, 87, 89, 90, 110, 122, 132, 133, 143, 150, 152, 160, 163, 168, 172, 173, 175, 196, 208, 232, 233, 247, 251, 252, 285, 294, 297, 298, 300, 304, 305, 308, 312, 324, 328, 329, 332, 334, 335, 339, 348, 378, 385, 397, 402, 425, 432, 439, 452, 453, 459, 460, 464, 468, 470, 473, 477, 478, 479, 484, 486, 488, 492, 494], "h5db": [3, 5, 482], "try": [3, 5, 101, 166, 196, 216, 247, 281, 282, 285, 291, 296, 326, 336, 356, 358, 369, 378, 398, 401, 403, 409, 433, 436, 439, 440, 461, 468, 473, 475, 477, 488], "local": [3, 5, 12, 69, 74, 211, 247, 285, 327, 333, 334, 356, 436, 470, 471, 475, 478, 484], "git": [3, 5, 430, 439, 440, 468, 469, 471, 475, 500], "commit": [3, 5, 12, 430, 432, 434, 439, 475], "sure": [3, 5, 55, 63, 122, 146, 156, 162, 179, 187, 203, 206, 221, 265, 279, 285, 295, 296, 298, 300, 308, 336, 340, 346, 347, 348, 349, 352, 355, 367, 370, 378, 379, 380, 381, 394, 406, 410, 412, 419, 430, 435, 438, 439, 440, 468, 471, 475, 479, 480, 488, 489, 491], "doesn": [3, 5, 17, 44, 52, 74, 90, 91, 196, 197, 198, 201, 251, 285, 286, 305, 308, 311, 336, 338, 352, 369, 397, 401, 410, 430, 435, 440, 475, 479, 480, 491], "instal": [3, 5, 378, 430, 432, 437, 438, 440, 468, 470, 474, 475, 487], "Or": [3, 5, 356, 432, 440, 469, 491, 500], "simpli": [3, 4, 5, 18, 75, 148, 151, 157, 166, 181, 200, 211, 216, 217, 279, 308, 334, 336, 346, 364, 433, 436, 468, 473, 479, 480, 488, 489, 491], "insid": [3, 5, 18, 48, 216, 223, 236, 279, 285, 302, 303, 308, 311, 333, 334, 384, 386, 423, 467, 475, 479, 484, 488, 495], "repo": [3, 5, 101, 432, 439, 440, 475], "hash": [3, 5, 12, 279, 324, 385, 440, 471, 473], "unknown": [3, 5, 149, 150, 339], "completedsuccessfulli": [3, 5], "cleanup": [3, 5, 17, 74, 152, 308, 471], "convers": [3, 4, 5, 50, 101, 160, 164, 169, 197, 209, 247, 291, 308, 309, 311, 312, 313, 319, 323, 324, 326, 342, 428, 445, 449, 466, 470, 471, 476, 481, 484, 486, 492], "keeptimestep": [3, 5], "tupl": [3, 4, 5, 6, 8, 16, 18, 46, 53, 75, 80, 87, 101, 109, 134, 136, 151, 159, 211, 216, 279, 281, 285, 308, 318, 326, 327, 328, 329, 331, 332, 333, 334, 335, 339, 342, 364, 365, 389, 397, 398, 402, 426, 436, 439, 484, 485, 492, 494], "discard": [3, 5, 198, 235, 311, 435, 471], "except": [3, 5, 74, 148, 152, 156, 163, 172, 175, 196, 200, 279, 280, 285, 318, 325, 336, 338, 339, 364, 365, 377, 388, 390, 392, 394, 403, 408, 410, 426, 434, 440, 461, 468, 470, 479], "step": [3, 4, 5, 6, 12, 16, 42, 43, 148, 169, 174, 175, 176, 200, 208, 211, 215, 247, 249, 285, 292, 296, 308, 318, 324, 327, 329, 331, 332, 334, 339, 342, 345, 385, 398, 425, 430, 433, 435, 459, 468, 469, 470, 471, 473, 475, 478, 479, 483, 484, 491, 492, 495, 499, 500], "retain": [3, 5, 36, 63, 67, 75, 191, 216, 302, 308, 311, 339, 348, 365, 379, 470, 495], "separ": [3, 5, 20, 42, 52, 56, 76, 159, 200, 209, 236, 240, 251, 282, 308, 312, 323, 324, 325, 334, 342, 385, 391, 401, 402, 439, 468, 469, 471, 475, 479, 480, 488, 499, 500], "exot": [3, 5, 44], "analys": [3, 5, 45, 52, 196, 325, 433, 442, 445, 466, 468, 475, 479, 481, 491, 492], "each": [3, 5, 6, 8, 16, 23, 24, 29, 40, 42, 44, 52, 53, 69, 74, 75, 79, 148, 150, 151, 152, 159, 162, 163, 164, 166, 172, 176, 198, 200, 201, 203, 208, 216, 217, 225, 233, 235, 238, 240, 242, 251, 254, 260, 275, 279, 281, 285, 287, 288, 291, 296, 302, 303, 305, 307, 308, 310, 311, 312, 313, 318, 324, 325, 327, 328, 333, 334, 336, 338, 339, 340, 342, 346, 352, 355, 358, 363, 364, 380, 385, 386, 387, 396, 398, 399, 402, 404, 426, 433, 435, 436, 438, 439, 440, 446, 447, 472, 473, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 488, 489, 491, 492, 494, 495, 497, 498], "someth": [3, 5, 18, 29, 30, 43, 76, 148, 157, 187, 197, 200, 285, 308, 312, 325, 331, 336, 342, 358, 369, 426, 432, 433, 436, 438, 440, 475, 479, 480, 488, 489], "nuanc": [3, 5, 440], "equilibrium": [3, 5, 16, 199, 202, 254, 285, 343, 371, 468, 479, 484, 486, 489, 492, 499], "cycl": [3, 5, 6, 13, 16, 17, 18, 24, 25, 29, 33, 75, 128, 129, 130, 131, 161, 172, 199, 200, 208, 209, 212, 214, 215, 216, 218, 221, 233, 235, 240, 247, 249, 254, 257, 339, 342, 343, 357, 358, 371, 378, 384, 385, 389, 398, 402, 404, 425, 426, 433, 436, 438, 440, 455, 462, 463, 467, 468, 471, 473, 475, 479, 480, 483, 484, 486, 488, 489, 490, 492, 494, 495, 496, 497, 499], "converg": [3, 5, 47, 75, 161, 162, 176, 180, 208, 209, 217, 247, 254, 315, 324, 363, 371, 479, 486, 490, 492, 497], "At": [3, 4, 5, 16, 29, 200, 201, 214, 279, 285, 286, 316, 346, 433, 438, 439, 472, 478, 494], "last": [3, 5, 6, 148, 149, 172, 197, 200, 204, 217, 247, 313, 327, 331, 387, 396, 397, 426, 436, 471, 484, 489, 491, 492], "wherea": [3, 5, 329, 334, 488], "constitut": [3, 5, 279, 285, 308, 433, 435], "typic": [3, 4, 5, 17, 52, 75, 79, 101, 150, 152, 166, 196, 197, 215, 216, 223, 235, 236, 238, 240, 242, 247, 251, 279, 285, 291, 304, 305, 308, 310, 329, 336, 339, 357, 364, 377, 392, 433, 435, 467, 468, 473, 475, 479, 483, 488, 489, 492, 495], "back": [3, 5, 36, 44, 45, 52, 75, 162, 184, 211, 217, 238, 247, 269, 272, 308, 312, 318, 324, 325, 336, 338, 339, 342, 355, 358, 364, 367, 390, 398, 399, 410, 436, 440, 468, 470, 471, 475, 479, 488, 489, 494], "like": [3, 4, 5, 6, 8, 16, 17, 18, 25, 30, 43, 44, 46, 66, 74, 75, 76, 101, 141, 144, 149, 151, 157, 159, 162, 166, 197, 198, 200, 202, 203, 211, 212, 216, 235, 236, 240, 242, 247, 251, 252, 279, 281, 282, 285, 286, 289, 290, 292, 307, 308, 309, 311, 312, 324, 326, 329, 331, 332, 333, 336, 340, 342, 346, 350, 357, 358, 365, 385, 386, 392, 397, 398, 399, 403, 418, 426, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 454, 468, 469, 470, 471, 473, 475, 477, 478, 479, 484, 488, 489, 490, 491, 494, 495, 500], "Will": [3, 5, 6, 46, 75, 99, 200, 216, 242, 254, 285, 305, 308, 312, 342, 387, 402, 404, 473, 478, 492], "interpos": [3, 5], "h5": [3, 4, 5, 7, 12, 23, 152, 473, 475, 482, 491, 494], "extens": [3, 5, 23, 40, 42, 279, 281, 312, 387, 394, 402, 404, 470, 471, 484, 492], "guarante": [3, 5, 8, 184, 240, 329, 390, 436, 484], "usabl": [3, 5, 418, 494], "vastli": [3, 5], "futur": [3, 4, 5, 16, 41, 44, 46, 75, 76, 202, 236, 279, 281, 285, 286, 290, 292, 325, 326, 338, 342, 348, 394, 426, 480, 488, 491], "primarili": [3, 5, 101, 164, 216, 468], "replac": [3, 5, 8, 75, 76, 216, 221, 252, 279, 285, 292, 305, 308, 326, 333, 339, 342, 343, 396, 426, 464, 470, 471, 479, 488], "csstring": [3, 5], "geomstr": [3, 5, 326], "bpstring": [3, 5], "goal": [3, 5, 326, 352, 398, 439, 468, 473], "ani": [3, 4, 5, 6, 8, 13, 16, 17, 18, 19, 24, 29, 46, 52, 55, 59, 62, 73, 74, 75, 76, 79, 91, 101, 148, 150, 152, 162, 163, 175, 196, 197, 200, 201, 208, 215, 216, 217, 221, 232, 233, 235, 236, 240, 242, 247, 252, 259, 278, 279, 281, 285, 291, 292, 298, 302, 304, 305, 307, 308, 310, 325, 327, 333, 334, 336, 338, 339, 340, 342, 343, 346, 347, 352, 355, 356, 358, 361, 369, 370, 375, 378, 379, 384, 385, 386, 390, 392, 396, 402, 404, 418, 426, 430, 432, 433, 435, 436, 438, 439, 440, 463, 464, 468, 469, 470, 471, 473, 475, 476, 477, 479, 480, 484, 486, 488, 489, 492, 494, 495, 497, 500], "particular": [3, 5, 20, 29, 43, 44, 75, 76, 86, 113, 151, 159, 160, 198, 200, 201, 211, 216, 232, 233, 235, 236, 285, 291, 302, 308, 333, 336, 342, 355, 361, 364, 432, 440, 469, 473, 477, 480, 500], "veri": [3, 4, 5, 11, 13, 17, 18, 29, 75, 79, 111, 149, 160, 170, 171, 199, 203, 204, 209, 279, 285, 296, 308, 309, 324, 325, 331, 336, 339, 342, 358, 398, 426, 433, 435, 436, 439, 455, 468, 473, 475, 478, 479, 480, 489, 492], "dont": [3, 5], "easi": [3, 5, 16, 247, 281, 333, 334, 398, 426, 435, 438, 440, 468, 479], "hard": [3, 5, 39, 42, 74, 75, 76, 211, 296, 325, 434, 468], "geom": [3, 5, 43, 44, 53, 169, 286, 290, 292, 335, 342, 462, 470, 478, 479, 480, 488], "In": [3, 5, 6, 7, 12, 18, 36, 42, 44, 63, 67, 74, 76, 77, 85, 86, 99, 101, 107, 112, 136, 148, 157, 159, 162, 201, 203, 212, 215, 216, 223, 232, 234, 247, 252, 254, 279, 281, 285, 287, 298, 304, 308, 309, 311, 312, 324, 325, 327, 329, 332, 333, 334, 336, 338, 342, 356, 367, 377, 385, 386, 394, 398, 399, 401, 426, 432, 433, 436, 438, 439, 440, 454, 459, 462, 467, 468, 469, 473, 475, 476, 479, 480, 488, 489, 491, 496, 497, 500], "abl": [3, 4, 5, 42, 44, 141, 279, 340, 386, 412, 439, 469, 488, 492, 494, 500], "reproduc": [3, 5, 117, 120, 127, 494], "confid": [3, 5], "ident": [3, 5, 55, 152, 159, 166, 175, 186, 187, 190, 264, 312, 342, 436, 468], "inputdb": [3, 5], "startcycl": [3, 5, 6, 12, 491, 492], "startnod": [3, 5, 6, 12, 491, 492], "standard": [3, 5, 13, 18, 19, 23, 53, 58, 63, 75, 136, 148, 149, 150, 162, 163, 167, 175, 181, 199, 200, 201, 202, 203, 208, 211, 215, 217, 241, 247, 254, 261, 262, 279, 285, 318, 326, 342, 369, 379, 388, 394, 404, 425, 430, 431, 432, 434, 438, 468, 470, 471, 473, 484, 487, 491, 492, 495, 498], "timestep": [3, 5, 6, 16, 31, 42, 200, 247, 338, 492], "request": [3, 5, 6, 16, 29, 44, 74, 75, 148, 152, 193, 196, 200, 204, 208, 215, 233, 235, 247, 254, 257, 279, 281, 282, 291, 305, 308, 325, 331, 332, 338, 340, 342, 390, 394, 396, 410, 432, 433, 434, 439, 468, 473, 475, 489, 492], "present": [3, 5, 6, 7, 16, 75, 132, 157, 159, 164, 169, 171, 172, 174, 193, 197, 203, 221, 245, 257, 279, 282, 308, 326, 334, 338, 340, 342, 357, 369, 385, 399, 433, 440, 480, 488, 492], "auxiliari": [3, 5, 136, 200, 211, 342], "statepointnam": [3, 5], "h5group": [3, 5, 8, 494], "correct": [3, 5, 13, 20, 44, 156, 195, 203, 206, 221, 232, 236, 247, 249, 257, 264, 285, 298, 305, 308, 318, 320, 333, 346, 347, 356, 367, 439, 469, 500], "timenod": [3, 5, 6, 29, 75, 199, 200, 235, 308, 473, 475, 492, 494, 499], "fuel": [3, 5, 16, 23, 46, 48, 51, 90, 101, 105, 122, 128, 129, 130, 131, 132, 133, 134, 139, 150, 197, 209, 212, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 240, 244, 247, 255, 261, 279, 280, 281, 282, 285, 286, 290, 294, 298, 300, 305, 308, 310, 311, 312, 316, 318, 319, 320, 324, 325, 327, 342, 343, 345, 346, 348, 352, 353, 402, 433, 438, 446, 447, 451, 452, 454, 462, 463, 465, 466, 467, 468, 470, 471, 474, 475, 478, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494], "varieti": [3, 5, 53, 159, 285, 308, 334, 348, 369, 433, 438, 439, 468, 473, 476, 488, 491], "client": [3, 5, 7, 157, 159, 247, 278, 308, 326, 342], "server": [3, 5], "kind": [3, 5, 20, 101, 154, 163, 200, 204, 209, 211, 247, 281, 285, 290, 308, 325, 333, 376, 386, 440, 447, 467, 468, 478, 479, 487, 490], "unnecessari": [3, 5, 53, 285], "bp": [3, 5, 43, 44, 53, 58, 286, 292, 342, 398, 454, 462, 478, 488], "allowmiss": [3, 5, 471], "continu": [3, 5, 46, 53, 252, 327, 333, 385, 397, 433, 435, 453, 464, 468, 471, 477, 491, 492], "valu": [3, 4, 5, 6, 8, 16, 19, 20, 21, 23, 44, 46, 47, 48, 53, 56, 63, 74, 75, 76, 77, 86, 92, 93, 96, 101, 141, 144, 146, 148, 150, 152, 157, 160, 163, 164, 166, 176, 186, 193, 196, 197, 198, 200, 202, 203, 208, 216, 217, 224, 233, 235, 236, 238, 239, 242, 247, 249, 251, 254, 261, 265, 269, 279, 281, 285, 286, 287, 288, 289, 290, 291, 292, 296, 305, 308, 310, 312, 313, 316, 318, 324, 326, 331, 336, 337, 338, 339, 342, 348, 352, 357, 358, 363, 364, 365, 367, 368, 369, 379, 382, 385, 389, 394, 397, 398, 400, 402, 403, 404, 412, 415, 426, 431, 436, 438, 468, 470, 471, 473, 475, 477, 478, 479, 483, 484, 488, 489, 491, 492, 494, 497], "neg": [3, 5, 203, 247, 281, 285, 302, 308, 310, 318, 319, 332, 339, 346, 398, 491], "index": [3, 4, 5, 8, 40, 53, 149, 150, 160, 163, 172, 198, 200, 238, 242, 247, 251, 267, 280, 281, 285, 288, 308, 310, 327, 329, 331, 332, 333, 334, 342, 385, 386, 389, 398, 402, 430, 464, 468, 470, 471, 473, 484, 491, 492, 494], "eoc": [3, 5, 16, 75, 200, 235, 433, 484, 486], "backward": [3, 5, 101, 175, 216, 286, 402], "arbitrari": [3, 5, 41, 75, 136, 249, 252, 282, 291, 296, 324, 327, 342, 346, 347, 358, 394, 400, 415, 428, 431, 433, 436, 470, 475, 488], "statepoint": [3, 5, 473], "emit": [3, 5, 57, 160, 166, 370], "rather": [3, 5, 8, 16, 42, 44, 75, 101, 116, 136, 150, 151, 152, 163, 175, 200, 211, 216, 235, 236, 247, 252, 279, 281, 291, 308, 325, 329, 332, 334, 335, 336, 340, 342, 358, 364, 386, 402, 435, 454, 462, 464, 468, 470, 473, 475, 479, 480, 483, 488, 492], "crash": [3, 5, 59, 74, 157, 200, 356, 385, 434, 435, 470, 488], "undefin": [3, 5, 6, 13, 16, 17, 18, 24, 29, 55, 75, 208, 215, 221, 235, 240, 247, 259, 302, 303, 304, 325, 375, 378, 384, 491], "top": [3, 5, 18, 23, 76, 202, 216, 281, 285, 288, 289, 292, 296, 308, 318, 324, 327, 328, 333, 334, 336, 339, 342, 345, 346, 398, 435, 440, 473, 475, 483, 484, 486, 488, 489, 494, 496], "level": [3, 4, 5, 23, 29, 75, 76, 77, 152, 159, 162, 168, 170, 173, 196, 201, 216, 221, 236, 240, 242, 249, 251, 259, 279, 285, 289, 290, 292, 296, 305, 308, 310, 311, 318, 324, 327, 333, 339, 340, 342, 346, 352, 356, 358, 359, 369, 397, 433, 434, 436, 438, 439, 455, 468, 471, 475, 476, 477, 478, 479, 484, 486, 488, 489, 491, 494], "comp": [3, 5, 6, 8, 22, 285, 494], "param": [3, 5, 6, 8, 16, 41, 75, 216, 247, 249, 281, 285, 308, 312, 324, 339, 342, 346, 372, 379, 389, 402, 436, 455, 463, 470, 471, 473, 475, 478, 483, 484, 489], "too": [3, 5, 41, 74, 170, 308, 339, 342, 346, 385, 436, 471, 478, 479, 491, 492], "must": [3, 5, 6, 12, 13, 16, 17, 18, 24, 29, 46, 52, 55, 63, 73, 74, 75, 142, 148, 156, 159, 160, 163, 166, 167, 169, 197, 200, 203, 208, 215, 216, 217, 221, 235, 236, 240, 247, 252, 258, 259, 279, 281, 285, 291, 302, 305, 308, 311, 316, 324, 325, 331, 333, 334, 336, 338, 339, 340, 342, 349, 375, 378, 379, 384, 389, 392, 402, 403, 426, 430, 431, 432, 433, 436, 439, 440, 447, 468, 469, 471, 475, 479, 482, 488, 491, 492, 497, 500], "indexloc": [3, 5, 280, 327, 331, 332, 333, 334, 433], "make": [3, 5, 13, 16, 23, 24, 46, 47, 52, 53, 55, 58, 63, 75, 76, 122, 141, 146, 148, 149, 156, 157, 160, 162, 163, 166, 169, 179, 187, 203, 206, 209, 211, 215, 216, 217, 221, 235, 242, 247, 251, 252, 259, 265, 266, 278, 279, 281, 285, 286, 290, 291, 292, 295, 296, 298, 300, 305, 308, 310, 311, 312, 315, 325, 326, 327, 333, 334, 336, 338, 339, 340, 342, 346, 347, 348, 349, 352, 355, 367, 369, 370, 378, 379, 380, 381, 385, 386, 394, 398, 401, 402, 404, 406, 410, 412, 419, 426, 430, 431, 432, 433, 434, 436, 438, 439, 440, 448, 451, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 476, 478, 479, 480, 481, 483, 487, 489, 490, 491, 492], "sens": [3, 5, 8, 47, 52, 76, 247, 279, 285, 291, 305, 338, 342, 355, 385, 436, 479], "hierarchi": [3, 5, 8, 224, 285, 308, 336, 340, 342, 352, 426, 433, 473, 488, 494], "serv": [3, 5, 24, 75, 249, 279, 282, 326, 338, 339, 397, 470, 475], "anchor": [3, 5, 290, 292, 332, 333, 334, 345, 392, 426, 479, 480, 488], "fulli": [3, 5, 8, 76, 101, 163, 213, 217, 281, 290, 308, 334, 358, 435, 438, 468, 470, 476, 480, 483, 486, 488, 494, 495], "extend": [3, 5, 6, 13, 16, 17, 18, 20, 24, 29, 55, 75, 149, 202, 208, 215, 221, 235, 240, 247, 259, 279, 280, 281, 308, 324, 327, 333, 336, 339, 364, 375, 378, 384, 385, 394, 397, 412, 426, 435, 453, 462, 473, 476, 491, 492], "littl": [3, 4, 5, 8, 30, 31, 55, 163, 279, 296, 384, 386, 394, 439, 454, 473, 475, 480, 494], "complic": [3, 5, 8, 203, 247, 291, 302, 305, 308, 378, 386, 436, 475, 479, 488, 491], "depth": [3, 5, 8, 402, 435, 436, 473], "below": [3, 4, 5, 44, 63, 149, 160, 216, 232, 279, 280, 281, 307, 308, 324, 327, 329, 336, 340, 342, 369, 398, 422, 433, 435, 436, 438, 468, 475, 478, 479, 480, 488, 492, 494, 496], "occupi": [3, 5, 48, 217, 343, 484, 488], "easier": [3, 5, 200, 308, 332, 375, 435, 439], "figur": [3, 5, 7, 23, 29, 40, 75, 84, 122, 138, 196, 200, 217, 252, 285, 324, 325, 335, 342, 389, 392, 402, 404, 433, 437, 440, 453, 457, 458, 460, 468, 473, 477, 479, 480, 488], "pair": [3, 5, 23, 46, 211, 236, 281, 285, 286, 287, 288, 289, 290, 291, 292, 305, 308, 332, 333, 334, 342, 357, 363, 369, 389, 488, 491, 492], "unawar": [3, 5], "outsid": [3, 5, 209, 216, 223, 233, 236, 252, 292, 296, 308, 311, 312, 331, 337, 338, 358, 385, 423, 468, 473, 479, 484, 489], "normal": [3, 4, 5, 101, 136, 162, 166, 175, 181, 198, 200, 236, 247, 259, 279, 285, 311, 332, 342, 356, 363, 378, 389, 409, 426, 433, 446, 464, 468, 473, 475, 479, 489, 492], "know": [3, 4, 5, 6, 91, 149, 150, 159, 162, 209, 279, 281, 285, 291, 300, 302, 308, 325, 336, 339, 340, 342, 358, 386, 389, 397, 399, 403, 438, 475, 477, 479, 491, 493, 494], "about": [3, 4, 5, 16, 18, 25, 43, 52, 74, 75, 80, 87, 101, 109, 134, 136, 148, 149, 162, 163, 166, 181, 191, 196, 200, 216, 279, 281, 285, 290, 291, 308, 311, 325, 326, 331, 336, 338, 339, 340, 346, 358, 426, 435, 436, 438, 440, 456, 457, 458, 461, 468, 471, 473, 475, 477, 479, 480, 483, 484, 488, 489, 491, 494], "histor": [3, 5, 6, 91, 216, 305, 325, 326, 342, 356, 404, 433, 480, 488], "plu": [3, 5, 40, 152, 217, 281, 334, 340, 385, 468, 476, 488, 492], "similar": [3, 5, 16, 44, 52, 57, 76, 148, 149, 152, 160, 162, 164, 166, 170, 171, 172, 236, 264, 281, 282, 308, 331, 333, 334, 338, 342, 369, 394, 402, 436, 468, 475, 480], "omit": [3, 5, 285, 305, 308, 385, 386, 432, 468, 488], "help": [3, 6, 8, 18, 36, 52, 57, 63, 67, 74, 75, 149, 159, 279, 308, 324, 342, 365, 389, 393, 397, 398, 399, 426, 430, 431, 434, 435, 436, 439, 440, 470, 473, 475, 479, 491, 492, 494], "deriv": [3, 6, 17, 29, 40, 53, 55, 75, 136, 159, 191, 208, 211, 235, 247, 252, 278, 279, 285, 302, 308, 324, 325, 334, 340, 346, 364, 365, 375, 378, 384, 394, 398, 468, 478, 484, 488], "overridden": [3, 6, 13, 16, 17, 18, 24, 29, 55, 63, 75, 101, 148, 208, 215, 221, 235, 240, 247, 259, 305, 308, 375, 378, 384, 486, 489], "life": [3, 6, 18, 22, 75, 79, 84, 156, 200, 233, 235, 433, 438, 439, 467, 473, 477, 491, 499], "underli": [3, 5, 6, 44, 150, 152, 308, 331, 333, 336, 339, 394, 440, 473, 478, 494, 498], "earli": [3, 6, 17, 435, 491], "while": [3, 6, 18, 34, 36, 40, 42, 63, 67, 75, 135, 157, 162, 191, 201, 211, 232, 233, 254, 279, 285, 305, 308, 309, 311, 312, 316, 323, 324, 326, 327, 334, 340, 342, 385, 390, 394, 397, 426, 433, 435, 439, 447, 468, 469, 475, 476, 479, 488, 489, 491, 492, 494, 500], "first": [3, 5, 6, 8, 12, 17, 31, 40, 42, 44, 75, 76, 101, 148, 152, 162, 163, 164, 166, 172, 197, 200, 208, 215, 216, 217, 233, 235, 236, 257, 279, 281, 285, 289, 300, 305, 308, 311, 312, 331, 332, 334, 336, 338, 342, 343, 352, 385, 396, 398, 402, 406, 426, 427, 431, 433, 434, 435, 436, 438, 439, 440, 452, 457, 464, 468, 471, 473, 474, 478, 479, 482, 488, 489, 491, 496], "receiv": [3, 6, 75, 148, 296, 340, 377, 436], "tight": [3, 6, 75, 200, 208, 249, 254, 285, 363, 375, 471, 487, 488, 491, 492], "coupl": [3, 6, 8, 13, 29, 40, 55, 75, 200, 208, 223, 233, 235, 240, 247, 249, 251, 254, 279, 285, 342, 363, 433, 435, 471, 477, 484, 486, 487, 488, 491, 492], "_timenodeloop": [3, 6], "via": [3, 6, 73, 90, 101, 132, 166, 199, 247, 279, 285, 291, 298, 305, 308, 310, 318, 433, 436, 461, 464, 468, 471, 475, 479, 488], "anyth": [3, 6, 75, 160, 163, 203, 211, 216, 217, 247, 265, 285, 302, 305, 308, 338, 342, 392, 432, 440, 468, 475, 478, 488, 491], "rxswing": [3, 6, 486], "shutdown": [3, 6, 208, 280, 325, 356, 468, 473, 478, 479, 486, 491, 492], "even": [3, 4, 6, 18, 52, 74, 75, 141, 148, 152, 172, 200, 216, 217, 259, 279, 281, 286, 302, 308, 318, 329, 332, 342, 346, 365, 387, 397, 402, 404, 410, 433, 435, 436, 440, 468, 475, 479, 491], "encount": [3, 4, 5, 6, 16, 52], "reconnect": [3, 6], "pre": [3, 6, 8, 16, 52, 197, 215, 235, 236, 264, 279, 285, 324, 332, 342, 385, 426, 471, 475, 486, 488], "still": [3, 5, 6, 16, 52, 74, 75, 101, 149, 156, 184, 201, 211, 216, 217, 233, 236, 278, 279, 285, 286, 292, 303, 305, 308, 325, 333, 339, 342, 343, 355, 380, 382, 394, 410, 432, 433, 439, 440, 447, 468, 470, 475, 480, 488, 489, 491, 492, 494], "connect": [3, 6, 40, 164, 285, 334, 488], "worker": [3, 6, 18, 75, 148, 197, 200, 201, 216, 308, 378, 391, 436, 478], "reloaddbnam": [3, 6, 12, 433, 491, 492], "put": [3, 6, 101, 163, 211, 213, 235, 279, 281, 282, 285, 308, 342, 392, 398, 404, 471, 475, 489, 490, 491, 492, 494], "prior": [3, 6, 75, 200, 279, 312, 369, 436, 470, 492], "mix": [3, 6, 105, 216, 232, 240, 281, 285, 308, 409, 412, 468, 475, 479, 488], "v": [3, 6, 75, 76, 97, 98, 150, 152, 162, 196, 200, 209, 216, 232, 261, 279, 285, 298, 305, 308, 398, 404, 467, 468, 471, 473, 476, 479], "equival": [3, 6, 101, 105, 166, 172, 180, 181, 186, 311, 312, 333, 397, 436, 447, 469, 492, 500], "timestepnam": [3, 6, 200], "fresh": [3, 6, 200, 308, 342, 467, 468, 471, 476, 479, 489], "preferenti": [3, 6], "doe": [3, 4, 6, 8, 11, 12, 13, 14, 18, 27, 28, 29, 31, 32, 33, 38, 39, 42, 46, 50, 51, 55, 56, 71, 72, 74, 75, 101, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 146, 147, 148, 152, 154, 155, 156, 157, 158, 163, 164, 168, 170, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 200, 203, 206, 207, 208, 211, 216, 217, 220, 221, 222, 229, 230, 231, 235, 236, 238, 244, 245, 247, 249, 257, 258, 259, 264, 265, 266, 267, 268, 269, 272, 279, 285, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 308, 309, 311, 312, 313, 318, 319, 320, 321, 322, 323, 324, 331, 332, 333, 339, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 365, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 394, 398, 401, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 432, 436, 439, 440, 455, 468, 473, 475, 478, 479, 480, 484, 488, 492], "neither": [3, 6, 236, 286], "nor": [3, 6, 286], "mutablesequ": [3, 6], "byloc": [3, 6], "wrapper": [3, 6, 148, 152, 184, 187, 198, 286, 326, 356, 370, 402], "around": [3, 6, 7, 44, 74, 148, 160, 198, 212, 216, 279, 285, 286, 304, 312, 329, 342, 356, 370, 426, 431, 436, 456, 467, 468, 473, 479, 480, 483, 484, 486, 488, 489, 490], "how": [3, 4, 5, 6, 7, 8, 41, 42, 48, 53, 122, 160, 163, 164, 191, 196, 216, 217, 236, 240, 242, 252, 279, 281, 285, 289, 290, 292, 308, 311, 312, 325, 327, 331, 334, 336, 339, 340, 346, 347, 357, 358, 384, 386, 387, 402, 403, 419, 426, 434, 435, 436, 438, 447, 448, 454, 462, 467, 468, 470, 471, 473, 474, 475, 476, 484, 485, 487, 488, 489, 490, 491, 492, 494], "reffilenam": [3, 4], "srcfilenam": [3, 4], "exclus": [3, 4, 44, 52, 216, 236, 286, 290, 326, 334, 342, 352, 355, 471, 473, 489], "toler": [3, 4, 44, 52, 75, 164, 170, 197, 398, 497], "float": [3, 4, 5, 23, 46, 75, 77, 78, 79, 81, 89, 92, 93, 94, 96, 101, 110, 113, 133, 134, 135, 136, 151, 152, 160, 163, 164, 170, 172, 180, 196, 200, 216, 217, 232, 236, 242, 247, 251, 281, 285, 288, 289, 290, 302, 305, 308, 310, 311, 316, 318, 324, 326, 328, 329, 332, 333, 334, 335, 336, 339, 342, 363, 369, 375, 385, 387, 389, 397, 398, 402, 404, 427, 428, 471, 478, 494, 497], "0": [3, 4, 20, 23, 31, 44, 51, 52, 53, 75, 78, 79, 80, 81, 86, 89, 92, 93, 94, 96, 101, 105, 109, 110, 113, 121, 122, 132, 133, 134, 136, 143, 144, 148, 152, 156, 159, 160, 161, 163, 164, 166, 170, 171, 172, 175, 176, 196, 197, 198, 200, 208, 210, 216, 217, 232, 233, 235, 236, 238, 242, 245, 247, 249, 251, 254, 259, 279, 281, 282, 285, 289, 290, 294, 297, 298, 300, 302, 303, 304, 305, 307, 308, 310, 311, 313, 316, 318, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 339, 342, 345, 347, 348, 364, 369, 384, 385, 386, 387, 389, 394, 396, 397, 398, 401, 402, 403, 412, 422, 425, 426, 428, 433, 436, 438, 440, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 473, 475, 476, 477, 478, 479, 480, 483, 484, 486, 488, 489, 491, 492, 494, 496, 497], "timestepcompar": [3, 4, 44, 52], "high": [3, 4, 5, 74, 84, 88, 89, 91, 196, 221, 223, 247, 279, 280, 285, 296, 325, 342, 398, 402, 455, 468, 471, 473, 478, 480, 483, 484, 486, 488, 494], "two": [3, 4, 8, 44, 61, 112, 148, 149, 152, 160, 164, 166, 168, 170, 173, 186, 190, 196, 197, 198, 199, 200, 208, 209, 221, 233, 236, 237, 279, 281, 285, 287, 291, 303, 308, 311, 312, 318, 324, 326, 331, 333, 336, 337, 342, 343, 346, 369, 389, 398, 404, 433, 436, 438, 439, 464, 469, 470, 475, 478, 479, 482, 488, 489, 491, 497, 500], "dbname": [3, 7, 43, 44, 477], "basecas": [3, 7, 43, 53], "bookeep": [3, 7, 31, 200], "proper": [3, 7, 135, 199, 235, 281, 285, 333, 346, 433, 439, 489], "common": [3, 4, 7, 76, 134, 148, 149, 152, 163, 211, 247, 255, 281, 291, 308, 318, 324, 325, 333, 334, 365, 369, 400, 436, 440, 441, 466, 468, 469, 479, 481, 488, 489, 491, 500], "least": [3, 7, 63, 251, 254, 308, 343, 426, 430, 439, 468, 479, 488], "knowledg": [3, 4, 7, 43, 285, 308, 312, 469, 500], "probe": [3, 7, 44], "interrog": [3, 7], "map": [3, 8, 9, 157, 160, 166, 169, 172, 174, 175, 235, 247, 249, 279, 285, 286, 287, 288, 289, 290, 291, 292, 299, 323, 324, 327, 329, 333, 334, 336, 339, 342, 343, 350, 365, 384, 386, 392, 394, 402, 406, 433, 438, 447, 462, 468, 469, 470, 471, 473, 474, 475, 478, 480, 484, 486, 488, 490, 491, 492, 494, 500], "x": [3, 9, 34, 40, 42, 122, 142, 164, 170, 193, 195, 196, 197, 198, 215, 216, 235, 236, 247, 254, 257, 259, 264, 265, 268, 285, 286, 290, 291, 294, 297, 298, 300, 307, 308, 312, 327, 329, 333, 334, 342, 348, 364, 398, 402, 404, 427, 428, 439, 451, 453, 454, 455, 456, 457, 458, 463, 464, 465, 466, 470, 471, 473, 477, 478, 479, 480, 481, 484, 488, 492, 495, 496], "inputdbnam": 3, "outputdbnam": 3, "outputvers": 3, "outputdb": 3, "xtview": [3, 235, 312, 467, 470], "latest": [3, 65, 141, 156, 162, 235, 285, 308, 430, 484], "pathtodb": 3, "loadcycl": 3, "loadnod": 3, "alreadi": [3, 5, 53, 57, 74, 101, 152, 166, 196, 200, 216, 240, 251, 265, 279, 285, 286, 308, 320, 326, 339, 342, 358, 364, 438, 475, 479, 492], "vari": [3, 4, 53, 159, 254, 285, 292, 329, 336, 342, 468, 478, 488, 491, 492], "middl": [3, 45, 200, 280, 325, 332, 385, 464, 473, 478, 479], "attach": [3, 17, 29, 55, 75, 76, 200, 208, 240, 279, 311, 331, 375, 378, 384, 473, 484], "pathtodatabas": 3, "getfpmass": [3, 280, 308], "fission": [3, 82, 152, 156, 160, 164, 166, 170, 173, 181, 196, 197, 223, 233, 235, 236, 239, 240, 241, 242, 244, 245, 247, 251, 252, 255, 259, 291, 305, 308, 324, 325, 342, 402, 459, 464, 467, 468, 471, 473, 477, 479, 480, 484, 486, 492], "product": [3, 41, 53, 154, 160, 173, 184, 187, 196, 197, 233, 235, 236, 239, 240, 241, 242, 244, 245, 247, 252, 255, 291, 305, 308, 334, 342, 439, 457, 458, 464, 468, 471, 473, 484, 492], "12345": 3, "67": [3, 150, 152, 210, 238], "test_comparedb3": [3, 10], "testcomparedb3": [3, 10, 11], "test_database3": [3, 10], "testdatabase3": [3, 10, 12], "test_databaseinterfac": [3, 10], "getsimpledboper": [3, 10, 13], "mockinterfac": [3, 10, 13], "testdatabaseinterfac": [3, 10, 13], "testdatabasewrit": [3, 10, 13], "testdatabaseread": [3, 10, 13], "testbadnam": [3, 10, 13], "teststandardfollowon": [3, 10, 13], "test_layout": [3, 10], "testlocationpack": [3, 10, 14], "writeln": [3, 4], "adddiff": [3, 4], "addstructurediff": [3, 4], "addtimestep": [3, 4], "reportdiff": [3, 4], "ndiff": [3, 4], "computeancestor": [3, 8], "allsubclass": [3, 8], "assum": [4, 78, 101, 148, 167, 184, 196, 197, 232, 281, 285, 308, 310, 318, 334, 342, 346, 351, 380, 402, 435, 436, 469, 475, 478, 479, 480, 484, 491, 492, 500], "intim": [4, 333], "h5py": [4, 74, 339, 494], "within": [4, 8, 20, 23, 52, 57, 69, 75, 101, 148, 149, 150, 152, 163, 168, 191, 193, 197, 200, 202, 208, 211, 216, 221, 223, 235, 236, 240, 242, 244, 279, 281, 285, 286, 287, 288, 289, 292, 296, 302, 305, 308, 310, 312, 313, 318, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 339, 342, 345, 346, 347, 355, 390, 392, 426, 427, 433, 434, 435, 438, 452, 468, 471, 472, 475, 479, 480, 483, 484, 488, 491, 492, 494, 497, 498], "correspond": [4, 8, 22, 149, 196, 197, 200, 216, 217, 279, 281, 285, 290, 291, 302, 307, 308, 318, 335, 336, 340, 342, 358, 365, 385, 402, 428, 433, 436, 438, 472, 479, 484, 486, 488, 489, 491, 494], "easili": [4, 8, 203, 247, 308, 327, 377, 385, 387, 396, 398, 439, 468, 478, 480], "pull": [4, 44, 216, 221, 404, 432, 434, 439, 471, 475, 478], "cross": [4, 88, 149, 152, 159, 160, 162, 164, 168, 170, 171, 173, 179, 191, 193, 195, 196, 197, 198, 209, 210, 221, 233, 235, 236, 240, 247, 249, 251, 252, 254, 259, 264, 265, 266, 279, 285, 291, 308, 311, 342, 402, 404, 426, 430, 436, 439, 447, 454, 459, 460, 468, 471, 473, 479, 480, 483, 484, 485, 488, 491, 492, 496, 497], "probabl": [4, 36, 41, 44, 63, 67, 90, 149, 152, 242, 259, 279, 286, 305, 308, 338, 398, 399, 426, 440, 468, 475, 483, 493], "speak": [4, 240], "issu": [4, 18, 42, 74, 132, 160, 162, 197, 235, 236, 249, 279, 285, 311, 325, 336, 346, 370, 426, 432, 438, 439, 468, 470, 471, 475, 496], "aris": [4, 75, 149, 152, 279, 291, 379], "against": [4, 36, 44, 46, 75, 122, 203, 235, 308, 325, 342, 353, 364, 369, 387, 406, 432, 468, 471], "That": [4, 5, 55, 75, 86, 249, 285, 289, 308, 355, 356, 364, 473, 475, 479], "worri": [4, 331, 340, 436, 438, 440, 475], "especi": [4, 240, 401, 439], "temperatur": [4, 8, 76, 77, 78, 79, 80, 84, 87, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 105, 107, 108, 109, 110, 112, 113, 122, 128, 129, 130, 133, 134, 136, 137, 138, 139, 150, 200, 215, 223, 232, 233, 235, 254, 264, 276, 281, 285, 302, 305, 308, 309, 310, 311, 312, 317, 318, 336, 339, 342, 345, 346, 347, 428, 433, 438, 452, 461, 467, 468, 471, 473, 475, 476, 478, 479, 480, 483, 484, 485, 486, 488, 492, 493, 494, 497, 498], "uniformli": [4, 291, 452, 489], "realli": [4, 28, 41, 101, 194, 198, 204, 251, 290, 292, 329, 342, 356, 435, 436, 438, 468, 480], "line": [4, 23, 36, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 134, 143, 163, 200, 203, 209, 237, 247, 252, 279, 281, 285, 308, 309, 312, 329, 331, 332, 342, 346, 351, 358, 364, 368, 369, 385, 386, 387, 398, 401, 406, 415, 419, 422, 426, 428, 431, 436, 438, 439, 440, 454, 467, 469, 473, 475, 479, 492, 494, 496, 500], "suppos": [4, 290, 438], "volum": [4, 77, 84, 110, 132, 134, 135, 193, 196, 232, 235, 281, 285, 289, 296, 302, 305, 307, 308, 312, 324, 335, 342, 345, 346, 347, 353, 389, 451, 465, 466, 481, 484, 485, 486, 488], "rel": [4, 40, 44, 52, 75, 101, 163, 181, 211, 217, 290, 302, 305, 308, 309, 316, 318, 325, 335, 336, 342, 369, 398, 426, 439, 471, 475, 480, 484, 486, 488, 492, 494, 498], "self": [4, 16, 36, 53, 63, 75, 101, 148, 159, 162, 196, 216, 235, 242, 251, 257, 259, 282, 285, 286, 289, 305, 308, 310, 312, 318, 332, 334, 339, 342, 358, 367, 392, 397, 403, 426, 431, 435, 436, 439, 475, 478, 479, 480, 489, 492, 494], "evid": 4, "resourc": [4, 148, 336, 369], "hasn": [4, 196, 265, 403], "tee": 4, "msg": [4, 356, 370, 388, 426], "ignor": [4, 5, 76, 163, 170, 235, 285, 291, 302, 312, 325, 332, 357, 378, 379, 385, 404, 488, 492], "exce": [4, 313, 377], "organ": [4, 16, 30, 202, 211, 358, 433, 436, 471, 473], "later": [4, 19, 23, 34, 36, 75, 164, 166, 172, 200, 236, 287, 355, 431, 433, 435, 438, 439, 468, 469, 475, 484, 491, 500], "keep": [4, 5, 8, 18, 41, 141, 216, 217, 254, 261, 279, 281, 291, 305, 312, 316, 324, 340, 397, 426, 432, 435, 436, 437, 439, 440, 467, 468, 479, 483, 484, 488, 489, 491], "miss": [4, 86, 236, 291, 308, 473, 476, 478, 488], "incompat": 4, "weird": [4, 334], "strang": [4, 5, 8, 336, 394, 479], "smaller": [4, 23, 236, 308, 342, 352, 386, 394, 440, 475], "zero": [4, 8, 63, 74, 101, 126, 135, 152, 163, 164, 169, 170, 186, 196, 200, 235, 240, 247, 251, 254, 281, 282, 285, 302, 303, 304, 305, 308, 318, 342, 346, 396, 409, 439, 461, 470, 473, 475, 479, 484, 488, 492], "diff": [4, 237, 440], "infinit": [4, 236, 334, 397, 456, 457, 492], "rigor": [4, 468], "manner": [4, 236, 302, 426, 433, 468, 470, 475, 497], "fine": [4, 42, 169, 291, 300, 372, 398, 479], "revisit": [4, 279, 497], "comptyp": [4, 279], "paramnam": [4, 5, 8, 16, 308, 324, 336, 338, 436], "absmean": 4, "absmax": 4, "tsname": 4, "stream": [4, 142, 143, 144, 161, 162, 163, 166, 167, 169, 170, 172, 173, 174, 175, 176, 242, 244, 286, 290, 299, 343, 350, 358, 365, 382, 386, 394, 422, 426], "print": [4, 18, 25, 36, 52, 57, 63, 67, 75, 152, 169, 216, 242, 281, 286, 298, 305, 308, 356, 385, 387, 394, 402, 431, 433, 435, 436, 439, 446, 452, 473, 475, 476, 477, 478, 489, 492, 496], "exceed": [4, 75, 394, 396, 484, 485], "recover": 5, "down": [5, 8, 16, 18, 308, 336, 339, 346, 364, 404, 438, 439, 464, 471, 473, 475, 494], "bound": [5, 46, 53, 56, 159, 166, 197, 216, 217, 238, 267, 281, 302, 305, 307, 308, 310, 313, 325, 327, 328, 329, 332, 334, 335, 345, 347, 427, 456, 457, 458, 461, 480, 492], "hierarch": [5, 8, 279, 308, 488], "furthermor": [5, 52, 307, 329, 336, 439, 473], "dynam": [5, 44, 76, 98, 134, 200, 279, 308, 393, 401, 433, 492, 494], "yet": [5, 16, 43, 52, 197, 201, 216, 232, 236, 247, 285, 289, 308, 310, 324, 385, 438, 468, 473, 483, 488, 491, 492], "undevelop": 5, "most": [5, 13, 40, 42, 46, 52, 75, 76, 101, 110, 136, 148, 152, 159, 160, 162, 170, 216, 224, 236, 279, 285, 302, 305, 308, 329, 331, 334, 336, 338, 340, 342, 346, 356, 358, 370, 386, 394, 430, 433, 436, 438, 439, 440, 467, 468, 470, 475, 479, 480, 483, 486, 488, 489, 491], "dump": [5, 29, 35, 38, 39, 41, 42, 211, 233, 236, 280, 281, 338, 342, 357, 359, 363, 364, 464, 492], "again": [5, 8, 57, 184, 214, 279, 339, 342, 370, 426, 435, 438, 470, 479, 488, 489, 491, 494], "nitti": [5, 440], "gritti": [5, 440], "translat": [5, 279, 286, 323, 324, 334, 438, 468], "flat": [5, 8, 285, 305, 311, 332, 386, 396, 402, 406, 479], "pleas": [5, 101, 281, 342, 390, 431, 432, 433, 440, 469, 500], "convent": [5, 197, 211, 285, 325, 434, 440, 468, 488], "cxxnyi": 5, "simul": [5, 6, 17, 29, 57, 75, 134, 209, 216, 233, 249, 252, 254, 280, 288, 342, 356, 357, 384, 436, 439, 468, 473, 475, 479, 480, 486, 490, 491, 492, 497, 499], "ndarrai": [5, 8, 75, 175, 281, 331, 332, 333, 334, 335, 339, 398], "wouldn": [5, 41], "plai": [5, 279, 340, 433, 480], "nice": [5, 80, 148, 162, 201, 209, 308, 326, 340, 385, 392, 394, 426, 433, 462, 475, 488], "numpi": [5, 8, 40, 75, 163, 196, 281, 285, 298, 308, 310, 333, 336, 339, 375, 398, 439, 454, 458, 461, 471, 473, 475, 476, 478], "arrai": [5, 8, 40, 53, 75, 163, 164, 166, 196, 281, 285, 298, 308, 310, 324, 327, 332, 333, 336, 339, 342, 375, 397, 398, 415, 471, 473, 475, 484, 494, 497], "conform": [5, 149, 279, 289, 305, 310, 329, 439, 470, 486], "both": [5, 44, 46, 52, 55, 75, 141, 148, 151, 157, 162, 163, 172, 197, 201, 209, 216, 281, 285, 291, 308, 311, 318, 323, 324, 325, 326, 338, 340, 342, 369, 392, 402, 425, 431, 435, 447, 462, 468, 471, 473, 475, 488, 491, 492, 498], "fit": [5, 89, 92, 93, 94, 96, 102, 134, 171, 200, 204, 236, 247, 285, 308, 329, 332, 334, 339, 342, 396, 398, 489, 494], "ish": 5, "accomplish": [5, 75, 478, 494], "hand": [5, 23, 62, 162, 216, 318, 340, 347, 358, 364, 369, 402, 430, 433, 435, 438, 468, 474, 478, 488], "known": [5, 53, 134, 149, 152, 247, 254, 279, 305, 342, 381, 389, 406, 433, 467, 489], "offend": 5, "variou": [5, 16, 18, 22, 25, 31, 57, 74, 75, 131, 149, 152, 159, 163, 171, 199, 200, 208, 212, 216, 247, 269, 279, 286, 288, 308, 318, 325, 339, 342, 346, 347, 357, 386, 398, 415, 425, 431, 433, 435, 442, 443, 445, 450, 466, 468, 469, 470, 473, 475, 479, 480, 481, 487, 488, 489, 491, 492, 493, 495, 496, 500], "necessari": [5, 17, 40, 42, 44, 74, 110, 132, 148, 152, 168, 170, 172, 173, 191, 198, 257, 279, 281, 285, 289, 320, 323, 334, 336, 339, 390, 403, 426, 433, 468, 476, 488, 491, 492, 494], "mind": [5, 281, 340], "alwai": [5, 8, 101, 159, 162, 163, 164, 169, 171, 172, 191, 200, 217, 240, 247, 279, 285, 290, 302, 307, 308, 312, 318, 324, 329, 332, 334, 336, 339, 386, 392, 399, 401, 402, 426, 436, 438, 439, 475, 483, 488, 489, 492], "deal": [5, 8, 41, 163, 164, 203, 223, 242, 308, 397, 436, 438, 479], "routin": [5, 336, 398, 433, 468, 471, 489, 492], "find": [5, 8, 16, 18, 44, 52, 76, 80, 92, 93, 96, 101, 149, 152, 170, 196, 197, 216, 240, 261, 279, 281, 285, 302, 305, 308, 310, 312, 325, 336, 340, 342, 352, 356, 357, 385, 396, 398, 402, 426, 439, 468, 469, 470, 471, 473, 475, 478, 479, 488, 492, 498, 500], "themselv": [5, 203, 279, 336, 339, 342, 438, 470, 478], "lack": [5, 438, 468, 472], "nan": [5, 281, 302], "jag": [5, 339, 471, 494], "concaten": [5, 356], "dimension": [5, 164, 235, 285, 307, 311, 312, 346, 474, 494], "describ": [5, 8, 40, 42, 44, 63, 75, 86, 140, 152, 160, 209, 211, 216, 224, 247, 279, 281, 286, 289, 303, 308, 324, 325, 326, 331, 334, 336, 339, 365, 426, 438, 468, 479, 488, 489, 490, 492, 493, 495, 498, 499], "shape": [5, 40, 122, 163, 281, 294, 297, 298, 300, 302, 303, 304, 305, 307, 308, 326, 346, 347, 348, 462, 467, 479, 480, 484, 490, 493], "offset": [5, 40, 311, 327, 328, 329, 332, 334, 335, 342, 345, 386, 387, 454, 457, 464], "them": [5, 8, 12, 13, 16, 34, 42, 43, 44, 45, 52, 57, 75, 101, 105, 152, 159, 162, 163, 170, 198, 200, 201, 204, 235, 242, 247, 252, 254, 279, 281, 282, 285, 291, 292, 305, 308, 309, 310, 311, 312, 325, 326, 333, 334, 336, 338, 339, 342, 347, 348, 356, 364, 365, 370, 378, 380, 385, 386, 396, 399, 430, 433, 435, 436, 438, 439, 440, 467, 468, 473, 475, 478, 479, 480, 485, 488, 489, 491, 492], "magic": [5, 201, 209, 279, 336, 340, 435, 473], "shouldn": [5, 259, 325], "realist": [5, 491], "scenario": [5, 209, 212, 223, 285, 290, 292, 340, 418, 433, 439, 440, 488, 491], "dtype": [5, 308, 336], "diagnost": [5, 8], "invert": 5, "straight": [5, 8], "closest": [5, 216, 318, 398, 489], "represent": [5, 8, 23, 42, 75, 163, 169, 174, 176, 216, 235, 236, 265, 285, 286, 290, 308, 326, 327, 331, 332, 334, 339, 342, 386, 433, 438, 439, 467, 468, 480, 484, 488, 494], "homogen": [5, 103, 164, 196, 197, 213, 236, 259, 285, 308, 311, 312, 336, 346, 470, 471, 484, 488, 494], "densiti": [5, 46, 48, 51, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 120, 122, 126, 130, 131, 133, 134, 135, 136, 138, 139, 149, 150, 152, 162, 174, 193, 196, 200, 235, 236, 240, 242, 247, 252, 254, 259, 264, 280, 285, 286, 289, 291, 298, 302, 305, 308, 310, 316, 318, 322, 323, 324, 336, 342, 346, 347, 348, 374, 389, 405, 409, 433, 447, 467, 468, 470, 471, 474, 476, 479, 480, 483, 484, 485, 486, 488, 492, 494, 499], "ago": [5, 166], "No": [5, 41, 75, 77, 109, 113, 257, 259, 363, 386, 433, 439, 470, 473, 478, 480], "longer": [5, 31, 45, 74, 236, 285, 291, 304, 305, 348, 404, 439, 468, 470, 471, 476, 484, 491], "numberdens": [5, 149, 196, 305, 308, 389, 485], "tool": [5, 8, 14, 18, 34, 42, 52, 165, 208, 220, 222, 247, 279, 351, 356, 382, 400, 402, 404, 413, 416, 419, 434, 435, 437, 467, 468, 469, 471, 475, 479, 494, 500], "comput": [5, 51, 75, 79, 89, 94, 101, 130, 160, 162, 163, 166, 196, 200, 201, 204, 208, 233, 235, 247, 249, 254, 260, 285, 302, 303, 304, 305, 307, 308, 310, 312, 324, 333, 334, 350, 355, 386, 398, 433, 434, 436, 439, 447, 451, 466, 468, 471, 473, 475, 478, 481, 491, 492, 497], "slap": 5, "remov": [5, 16, 43, 52, 101, 143, 200, 216, 221, 235, 240, 242, 247, 251, 252, 265, 279, 280, 282, 285, 286, 289, 292, 302, 305, 308, 312, 316, 336, 342, 352, 355, 367, 385, 399, 401, 434, 436, 468, 470, 471, 473, 483, 484, 486, 488, 492], "better": [5, 16, 57, 75, 152, 159, 172, 200, 202, 279, 281, 325, 327, 342, 388, 392, 432, 439, 468, 470, 492], "viz": [5, 41], "view": [5, 23, 24, 312, 332, 402, 438, 469, 473, 475, 489, 494, 500], "_readparam": 5, "groundwork": 8, "datbas": 8, "tree": [8, 23, 66, 202, 308, 333, 334, 340, 365, 369, 390, 430], "recurs": [8, 18, 43, 52, 69, 101, 148, 308, 333, 338, 357, 385, 401, 471], "append": [8, 23, 34, 40, 149, 150, 200, 280, 281, 308, 310, 327, 333, 385, 397, 426, 436, 452, 453, 454, 456, 457, 458, 461, 464, 477, 480], "search": [8, 52, 66, 76, 162, 197, 216, 236, 254, 281, 285, 300, 308, 310, 318, 325, 342, 393, 398, 426, 468, 486, 490, 491, 492], "a1": [8, 78, 216, 308, 342, 489], "a1b1": 8, "a1b1c1": 8, "a1b1c2": 8, "a1b2": 8, "a1b2c1": 8, "a2": [8, 78, 216, 308, 489], "aren": [8, 17, 156, 216, 236, 247, 363, 435, 479, 488], "algorithm": [8, 41, 46, 53, 213, 220, 324, 455, 468, 471, 479, 492], "travers": [8, 308, 334, 433], "region": [8, 161, 164, 169, 171, 179, 191, 196, 197, 236, 281, 292, 312, 313, 346, 402, 475, 484, 486, 491, 499], "indexindata": [8, 494], "increas": [8, 249, 251, 279, 310, 313, 334, 342, 384, 394, 398, 440, 452, 468, 484, 486, 491, 492], "monoton": [8, 398, 491], "children": [8, 101, 281, 285, 292, 308, 336, 339, 345, 346, 348, 393, 438, 494], "parent": [8, 44, 57, 79, 101, 160, 196, 201, 211, 216, 254, 255, 282, 285, 288, 290, 296, 302, 305, 308, 327, 333, 334, 336, 340, 342, 346, 356, 382, 402, 436, 473, 484], "contigu": [8, 479], "interleav": 8, "sibl": [8, 281, 282, 285, 302, 308, 488], "asid": [8, 325], "necessarili": [8, 53, 149, 162, 197, 468, 492], "child": [8, 23, 252, 285, 290, 308, 324, 327, 433, 471, 494], "zeroth": [8, 172], "serialnum": [8, 336, 338, 494], "numchildren": [8, 494], "layer": [8, 288, 325, 333, 467, 475], "reach": [8, 152, 208, 390, 396, 440, 468, 475, 489], "desir": [8, 19, 24, 44, 90, 152, 164, 196, 211, 235, 259, 279, 285, 290, 308, 334, 336, 338, 356, 390, 394, 396, 401, 432, 462, 468, 488, 491, 492, 495], "ancestor": [8, 285, 308, 336, 340], "yield": [8, 23, 101, 164, 235, 240, 242, 245, 308, 342, 397, 471, 477, 492], "direct": [8, 58, 76, 163, 164, 186, 247, 285, 292, 307, 308, 312, 324, 327, 328, 332, 334, 339, 392, 398, 426, 428, 438, 468, 484, 486, 488, 492, 494], "elemen": 8, "subsequ": [8, 172, 233, 282, 311, 338, 339, 396], "form": [8, 24, 75, 134, 136, 162, 203, 208, 235, 236, 247, 252, 254, 279, 285, 289, 290, 296, 302, 308, 312, 326, 336, 340, 363, 375, 385, 428, 470, 475, 478, 479, 484, 488], "lightweight": [8, 80, 247], "stitch": [8, 426], "troubl": [8, 305, 475], "laid": [8, 336], "approach": [8, 18, 200, 216, 217, 279, 281, 310, 336, 342, 343, 398, 439, 468, 471, 479, 489], "reason": [8, 39, 101, 148, 149, 235, 240, 247, 282, 286, 291, 311, 325, 333, 334, 338, 364, 426, 432, 435, 436, 440, 468, 475, 484, 488], "bad": [8, 152, 203, 384, 439], "second": [8, 74, 89, 164, 179, 198, 208, 216, 236, 247, 279, 281, 308, 331, 332, 342, 343, 398, 404, 427, 436, 439, 440, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 477, 488, 489, 492], "pretti": [8, 286, 426, 464], "unwieldi": 8, "consum": [8, 259, 291, 326, 397, 426, 468], "cursor": 8, "slice": [8, 307, 334, 398, 402], "ineffici": [8, 285, 302, 305, 308], "cl": [8, 53, 150, 152, 338, 393, 478, 488], "nonsens": 8, "who": [8, 141, 196, 200, 203, 385, 434, 439, 440, 468, 492], "treat": [8, 232, 235, 240, 285, 308, 324, 325, 342, 369, 426, 488, 491, 492, 498], "might": [8, 44, 57, 149, 191, 200, 201, 247, 281, 285, 305, 398, 402, 426, 433, 435, 439, 440, 471, 473, 475, 488, 491, 492, 494], "valid": [8, 31, 44, 57, 63, 66, 75, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 122, 128, 129, 130, 133, 134, 137, 138, 139, 150, 160, 184, 203, 206, 217, 233, 235, 236, 241, 249, 254, 262, 278, 279, 291, 300, 301, 305, 308, 311, 312, 324, 325, 326, 333, 339, 342, 347, 355, 357, 358, 363, 364, 388, 392, 398, 399, 430, 433, 467, 468, 471, 473, 475, 478, 488, 497], "storabl": [8, 394], "numer": [8, 136, 144, 160, 235, 236, 279, 285, 289, 291, 324, 327, 470, 471, 484, 488, 497], "7": [8, 75, 79, 92, 93, 96, 102, 105, 134, 139, 144, 150, 152, 170, 181, 210, 217, 238, 289, 290, 298, 312, 329, 333, 347, 348, 397, 439, 440, 446, 454, 473, 478, 480, 486, 488, 489, 491, 498], "9": [8, 18, 75, 79, 80, 98, 105, 132, 139, 150, 152, 210, 217, 238, 298, 312, 329, 385, 397, 398, 446, 454, 468, 473, 477, 478, 479, 480, 489, 491], "6": [8, 53, 73, 75, 87, 96, 109, 133, 139, 144, 149, 150, 152, 170, 172, 181, 210, 217, 238, 281, 285, 290, 298, 307, 311, 312, 329, 332, 342, 347, 348, 386, 396, 397, 425, 432, 446, 453, 454, 456, 458, 461, 464, 468, 469, 473, 477, 478, 480, 488, 489, 498, 500], "revers": [8, 172, 175, 200, 217, 267, 308, 324, 332, 355, 433, 473], "essenti": [8, 16, 101, 148, 172, 259, 279, 286, 426, 479], "test_outputwrit": [10, 11], "test_compareset": [10, 11], "test_diffresultsbas": [10, 11], "test_comparedatabasedupl": [10, 11], "test_comparedatabasesim": [10, 11], "test_diffspecialdata": [10, 11], "test_diffsimpledata": [10, 11], "test_compareauxdata": [10, 11], "test_writetodb": [10, 12], "test_geth5fil": [10, 12], "makehistori": [10, 12], "makeshufflehistori": [10, 12], "test_preprestartrun": [10, 12], "test_computepar": [10, 12], "test_load": [10, 12], "test_loadsortset": [10, 12], "test_histori": [10, 12], "test_auxdata": [10, 12], "test_replacenon": [10, 12], "test_mergehistori": [10, 12], "test_splitdatabas": [10, 12], "test_grablocalcommithash": [10, 12], "test_filenam": [10, 12], "test_readinputsfromdb": [10, 12], "test_delet": [10, 12], "test_open": [10, 12], "test_loadc": [10, 12], "test_loadblueprint": [10, 12], "test_interacteverynodereturn": [10, 13], "test_interactbol": [10, 13, 256, 257, 263, 264], "test_distribut": [10, 13, 369, 375], "test_timenodeloop_tightcoupl": [10, 13], "test_writesystemattribut": [10, 13], "test_metadata_endsuccessfulli": [10, 13], "test_metadataendfail": [10, 13], "test_gethistori": [10, 13], "test_gethistorybyloc": [10, 13], "test_growtofullcor": [10, 13, 344, 350, 352], "test_growtofullcorewithc": [10, 13], "test_growtofullcorefromfactori": [10, 13], "test_growtofullcorefromfactorywithc": [10, 13], "test_readwritten": [10, 13], "test_readwithoutinput": [10, 13], "test_varioustypeswork": [10, 13], "test_baddbnam": [10, 13], "test_standardrestart": [10, 13], "test_locationpack": [10, 14], "test_locationpackingoldervers": [10, 14], "test_locationpackingoldvers": [10, 14], "test_clos": [10, 14], "methodnam": [11, 12, 13, 14, 27, 28, 31, 32, 33, 38, 39, 50, 51, 55, 56, 71, 72, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 146, 147, 154, 155, 156, 157, 158, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 206, 207, 208, 220, 221, 222, 229, 230, 231, 244, 245, 249, 257, 258, 264, 265, 266, 267, 268, 269, 272, 294, 295, 296, 297, 298, 299, 300, 301, 318, 319, 320, 321, 322, 323, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "runtest": [11, 12, 13, 14, 27, 28, 31, 32, 33, 38, 39, 50, 51, 55, 56, 71, 72, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 146, 147, 154, 155, 156, 157, 158, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 206, 207, 208, 220, 221, 222, 229, 230, 231, 244, 245, 249, 257, 258, 264, 265, 266, 267, 268, 269, 272, 294, 295, 296, 297, 298, 299, 300, 301, 317, 318, 319, 320, 321, 322, 323, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "testcas": [11, 12, 13, 14, 27, 28, 31, 32, 33, 38, 39, 50, 51, 55, 56, 71, 72, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 146, 147, 154, 155, 156, 157, 158, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 206, 207, 208, 221, 229, 231, 244, 245, 249, 257, 258, 264, 265, 266, 267, 268, 269, 272, 294, 295, 296, 297, 298, 299, 300, 301, 318, 319, 320, 321, 322, 323, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 367, 368, 369, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 439], "valueerror": [11, 12, 13, 14, 27, 28, 31, 32, 33, 38, 39, 50, 51, 55, 56, 71, 72, 75, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 146, 147, 154, 155, 156, 157, 158, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 199, 206, 207, 208, 220, 221, 222, 229, 230, 231, 235, 236, 244, 245, 249, 254, 257, 258, 264, 265, 266, 267, 268, 269, 272, 285, 286, 292, 294, 295, 296, 297, 298, 299, 300, 301, 310, 311, 318, 319, 320, 321, 322, 323, 339, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 364, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428], "photocopi": 11, "simlar": 11, "languag": [12, 336, 455, 468, 479], "agnost": 12, "walk": [12, 473, 479], "few": [12, 16, 29, 152, 166, 201, 233, 247, 259, 342, 355, 433, 436, 439, 440, 454, 467, 468, 478, 479, 480, 491], "shuffl": [12, 213, 215, 216, 217, 221, 290, 315, 325, 342, 402, 471, 473, 479, 484, 486, 489, 491, 492], "armirun": [12, 221, 352], "yaml": [12, 43, 44, 66, 71, 156, 160, 221, 240, 265, 279, 286, 287, 288, 289, 290, 292, 296, 318, 326, 343, 350, 352, 357, 358, 364, 365, 368, 376, 426, 431, 439, 455, 464, 470, 471, 473, 475, 478, 479, 480, 482, 488, 491, 492], "setup": [12, 279, 312, 358, 440, 471, 487], "abov": [12, 99, 148, 150, 160, 232, 247, 279, 281, 296, 308, 318, 325, 333, 340, 352, 386, 397, 409, 428, 433, 435, 436, 438, 440, 454, 467, 468, 475, 479, 480, 484, 488, 489, 491, 492, 494, 497], "reloadingdb": 12, "nonexist": [12, 367], "super": [12, 41, 53, 133, 257, 258, 307, 394, 440], "correctli": [12, 162, 208, 257, 264, 265, 272, 281, 285, 307, 318, 323, 346, 352, 353, 379, 381, 384, 419, 423, 440, 471, 475], "cover": [13, 122, 157, 308, 323, 346, 369, 432, 439, 475, 487], "quickli": [13, 16, 200, 352, 369, 430, 437, 464, 468, 475, 478, 480], "NOT": [13, 74, 97, 98, 148, 172, 208, 216, 217, 285, 308, 310, 346], "metadata": [13, 140, 157, 164, 165, 172, 175, 180, 191, 279, 289, 336, 338, 339, 367, 404, 470, 471, 494], "text": [16, 18, 57, 58, 63, 75, 159, 247, 285, 286, 305, 308, 356, 369, 375, 382, 386, 392, 402, 426, 431, 456, 464, 471, 473, 479, 488, 491, 494, 497], "mechan": [16, 75, 76, 84, 113, 223, 305, 325, 342, 367, 436, 468, 469, 475, 488, 491, 497, 500], "etc": [16, 17, 23, 44, 74, 75, 101, 105, 131, 149, 151, 159, 160, 196, 197, 198, 200, 204, 209, 216, 235, 240, 242, 247, 260, 279, 280, 281, 282, 285, 286, 292, 303, 305, 308, 310, 311, 312, 325, 334, 336, 339, 342, 356, 358, 364, 370, 385, 386, 401, 402, 426, 433, 435, 436, 438, 439, 467, 468, 473, 477, 478, 479, 480, 487, 488, 490, 491, 492], "particularli": [16, 39, 63, 236, 318, 334, 342, 435, 439, 475, 480, 491], "eqhistorytrackerinterfac": 16, "unravel": 16, "interest": [16, 18, 46, 80, 82, 247, 251, 281, 310, 311, 318, 342, 348, 433, 453, 468, 475, 487, 491], "armiblock": 16, "blocknam": 16, "historykei": 16, "paralyzingli": 16, "slow": [16, 247, 308, 324, 426, 437, 471], "To": [16, 23, 42, 74, 79, 142, 151, 196, 216, 279, 281, 285, 312, 324, 325, 342, 369, 378, 380, 385, 426, 430, 431, 432, 433, 435, 436, 438, 468, 469, 475, 476, 478, 479, 488, 489, 491, 494, 497, 500], "def": [16, 53, 279, 339, 387, 397, 403, 431, 435, 436, 452, 454, 462, 464, 473, 475, 478, 479, 489], "percentbu": [16, 216, 455, 484, 485], "your": [16, 18, 43, 46, 74, 79, 101, 196, 203, 211, 216, 236, 242, 247, 309, 324, 342, 358, 385, 387, 390, 402, 404, 430, 431, 432, 433, 436, 439, 440, 441, 447, 448, 461, 466, 468, 469, 473, 474, 478, 479, 481, 488, 489, 490, 491, 492, 500], "now": [16, 34, 44, 46, 101, 136, 143, 172, 184, 197, 216, 235, 247, 249, 279, 285, 308, 332, 336, 430, 436, 438, 439, 440, 468, 469, 470, 471, 473, 474, 475, 478, 479, 483, 488, 489, 493, 497, 500], "assemswithhistori": 16, "timestepsavail": 16, "gettimeindic": 16, "fluxattimestep3": 16, "b1003a": 16, "variabl": [16, 44, 46, 47, 53, 75, 101, 142, 152, 160, 166, 167, 172, 191, 200, 211, 236, 247, 264, 281, 285, 290, 291, 305, 308, 310, 312, 313, 318, 331, 338, 342, 385, 401, 426, 433, 436, 439, 440, 467, 469, 470, 471, 475, 487, 488, 492, 500], "detailassemblynam": 16, "year": [16, 101, 404, 440, 468, 486], "ask": [16, 18, 57, 201, 203, 285, 308, 388, 401], "activ": [16, 29, 44, 57, 69, 75, 148, 152, 160, 197, 200, 203, 252, 279, 281, 289, 291, 305, 342, 365, 402, 430, 432, 433, 435, 439, 440, 468, 469, 471, 475, 484, 488, 489, 490, 491, 492, 500], "treatment": [16, 29, 240, 291, 339, 491, 492], "assem": [16, 216, 221, 282, 310, 312, 323, 324, 342, 385, 402, 473], "bol": [16, 22, 29, 67, 75, 200, 209, 233, 254, 261, 264, 279, 285, 286, 308, 310, 342, 402, 433, 438, 467, 470, 471, 473, 478, 484, 485, 486, 491, 492, 496, 499], "give": [16, 22, 90, 131, 136, 151, 216, 233, 285, 291, 302, 305, 308, 318, 333, 334, 356, 398, 399, 438, 471, 479, 480, 494], "signal": [16, 29, 74, 285, 339, 340], "timeindic": 16, "boc": [16, 75, 200, 209, 233, 247, 254, 257, 264, 285, 385, 433, 467, 484, 492, 496], "moc": [16, 75, 247], "fashion": [16, 439], "inexpens": 16, "simultan": [16, 200, 398], "preload": 16, "keyerror": [16, 52, 76, 325], "found": [16, 23, 39, 55, 76, 164, 209, 211, 216, 279, 281, 285, 308, 310, 318, 325, 326, 329, 331, 340, 342, 388, 393, 398, 399, 422, 426, 433, 438, 468, 472, 475, 489, 491], "manipul": [17, 44, 62, 73, 162, 200, 279, 330, 356, 401, 426, 490, 491, 493, 494], "catch": [17, 160, 412], "admittedli": 17, "_c": [17, 240], "instanti": [17, 74, 122, 152, 159, 198, 199, 200, 214, 216, 279, 336, 338, 340, 351, 355, 358, 433, 435], "databs": 17, "soon": [17, 279, 305, 308, 343, 439, 440, 443, 450, 466, 468, 470, 475, 476, 481], "construct": [17, 29, 53, 55, 67, 75, 76, 86, 149, 167, 179, 196, 203, 208, 252, 254, 260, 279, 282, 286, 287, 288, 289, 290, 292, 295, 296, 300, 301, 305, 308, 310, 325, 326, 329, 333, 334, 335, 336, 342, 375, 378, 384, 397, 455, 462, 463, 470, 473, 478, 488, 492, 494], "argument": [17, 29, 36, 50, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 101, 148, 151, 203, 208, 235, 237, 251, 279, 290, 303, 305, 308, 311, 318, 331, 333, 334, 336, 339, 342, 358, 368, 369, 375, 378, 384, 392, 431, 432, 433, 435, 438, 439, 440, 468, 470, 471, 473], "delet": [17, 18, 59, 74, 75, 141, 143, 150, 152, 172, 247, 312, 342, 355, 356, 369, 390, 391, 401, 430, 439, 471, 492], "temporari": [17, 59, 74, 247, 390, 404, 410], "clean": [17, 59, 74, 143, 152, 211, 308, 312, 390, 410, 430, 433, 471, 492], "job": [17, 44, 74, 236, 252, 419, 491], "next": [17, 40, 214, 235, 254, 282, 285, 305, 308, 311, 342, 385, 402, 426, 430, 431, 435, 436, 473, 475, 476, 478, 479, 480, 489, 494], "reload": [17, 200, 216, 247, 254, 491], "cours": [17, 216, 309, 434, 468, 478, 479, 480], "diagnos": [18, 377], "psutil": 18, "perspect": [18, 141, 240, 279, 426, 475, 483], "great": [18, 98, 279, 336, 342, 402, 419, 430, 440, 468, 491, 492], "everi": [18, 53, 75, 156, 172, 200, 233, 235, 240, 247, 254, 281, 308, 336, 342, 355, 358, 369, 384, 386, 387, 397, 402, 404, 426, 433, 438, 440, 469, 475, 478, 480, 483, 492, 500], "fast": [18, 74, 173, 181, 211, 217, 238, 240, 247, 285, 309, 327, 342, 426, 435, 447, 467, 468, 470, 473, 474, 478, 480, 484, 486, 488, 492], "gc": 18, "get_object": 18, "garbag": [18, 74], "collector": [18, 74], "count": [18, 19, 20, 162, 163, 235, 280, 282, 285, 329, 342, 370, 376, 385, 404, 471, 480], "size": [18, 23, 53, 162, 163, 198, 216, 281, 308, 324, 334, 342, 352, 386, 394, 402, 479, 480, 488, 492], "note": [18, 91, 149, 296, 394, 397, 404, 421, 432, 436, 440, 452, 464, 468, 473, 480, 483, 484, 488, 491, 492, 494], "sy": [18, 73, 252, 475], "getsizeof": 18, "certainli": [18, 440, 480, 492], "slightli": [18, 62, 216, 278, 285, 291, 334, 470, 475, 479, 488], "seem": [18, 30, 42, 217, 247, 296, 334, 336, 364], "de": [18, 41, 247, 285, 356], "alloc": [18, 164, 235, 236, 492], "got": [18, 141], "2gb": 18, "pythonhost": 18, "summari": [18, 24, 25, 36, 58, 63, 67, 150, 211, 280, 292, 301, 308, 313, 342, 355, 434, 455, 462, 463, 473, 492, 496], "timedescript": 18, "stdout": [18, 211, 301, 356, 475, 495, 496], "debugmem": [18, 492], "turn": [18, 80, 235, 247, 252, 254, 279, 281, 285, 290, 342, 356, 375, 385, 426, 431, 433, 435, 462, 468, 470, 478, 480, 492, 497], "problem": [18, 52, 75, 160, 164, 166, 167, 179, 203, 236, 247, 252, 254, 255, 291, 298, 308, 324, 333, 334, 335, 342, 355, 367, 404, 433, 464, 468, 479, 480, 486, 488, 491, 492], "attrnam": 18, "refobject": 18, "thorugh": 18, "obj": [18, 148, 152, 166, 168, 170, 173, 197, 247, 251, 252, 281, 308, 316, 324, 385], "referr": 18, "oppos": [18, 285, 305, 375, 386], "gigabyt": 18, "reports": 18, "helper": [18, 20, 55, 203, 216, 241, 262, 308, 339, 352, 356, 373, 377, 379, 383, 392, 411, 475], "u": [18, 105, 122, 131, 132, 133, 134, 150, 151, 152, 162, 181, 217, 240, 279, 285, 286, 289, 290, 294, 298, 300, 308, 325, 338, 342, 356, 389, 439, 459, 460, 464, 468, 473, 475, 479, 480], "footprint": 18, "ao": 18, "arbitrarili": [18, 324, 325, 342, 384, 475, 489], "deepli": 18, "nest": [18, 23, 279, 333, 385], "focus": [18, 332, 468, 480, 488], "held": [18, 308, 342], "classtyp": 18, "sys_mem": 18, "hostnam": 18, "14": [18, 109, 133, 150, 152, 217, 238, 329, 436, 454, 473, 477, 479, 491, 492], "ram": [18, 468], "proc": 18, "mem": 18, "mb": [18, 449, 465, 486], "491": [18, 210], "472": [18, 461, 465], "471": 18, "470": [18, 488], "13": [18, 133, 150, 152, 210, 217, 238, 329, 398, 433, 454, 471, 473, 477, 489], "474": 18, "473": [18, 78, 89, 238], "460": 18, "461": [18, 238], "printabl": 19, "test_newreport": [19, 26], "testreportcontentcr": [19, 26, 27], "test_report": [19, 26], "testreport": [19, 26, 28], "testreportinterfac": [19, 26, 28], "groupsorderfirst": [19, 20], "componentwellgroup": [19, 20], "addtoreport": [19, 20], "writehtml": [19, 20], "writegroupshtml": [19, 20], "writeescap": [19, 21], "writereport": [19, 23, 24, 438], "tableofcont": [19, 23], "leveldict": [19, 23], "addchildel": [19, 23, 438], "addrow": [19, 23, 438], "generatedesignreport": [19, 24], "printreport": [19, 24, 28], "writerunsummari": [19, 24], "insert": [20, 23, 62, 101, 200, 279, 280, 281, 282, 285, 308, 392, 404, 433, 438, 483], "datum": 20, "f": [20, 21, 90, 150, 152, 196, 217, 398, 402, 426, 431, 437, 452, 456, 473, 475, 476, 477, 478, 480, 488, 496], "midst": [20, 308], "abstract": [20, 23, 35, 40, 44, 46, 63, 75, 136, 148, 152, 162, 163, 170, 172, 247, 252, 258, 305, 307, 308, 315, 331, 333, 334, 339, 347, 365, 475], "accept": [20, 46, 148, 152, 216, 281, 331, 335, 339, 364, 392, 428, 432, 470, 488], "reportdatum": 20, "arg": [21, 36, 57, 61, 62, 63, 71, 75, 79, 86, 99, 105, 128, 130, 131, 132, 133, 134, 148, 166, 193, 200, 208, 216, 235, 236, 251, 252, 278, 279, 281, 287, 288, 289, 290, 291, 292, 302, 332, 335, 339, 342, 348, 356, 358, 370, 384, 387, 431, 471], "kwd": 21, "alia": [21, 63, 75, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 171, 193, 200, 230, 269, 281, 282, 285, 287, 288, 289, 290, 291, 292, 302, 303, 304, 305, 307, 308, 334, 338, 342, 347, 348, 364, 488], "file_path": [21, 23], "embed": [21, 23, 42, 492], "src": [21, 23, 385, 426, 430, 460], "base64": [21, 23], "casetitl": [21, 211, 247, 357, 358, 462], "comprehens": [22, 261, 325, 438], "summar": [22, 25, 36, 52, 63, 67, 200, 247, 355, 356, 438, 455, 462, 463, 471, 473, 489], "cold": [22, 101, 285, 302, 303, 304, 305, 307, 308, 310, 316, 318, 346, 347, 348, 402, 438, 471, 479, 483, 484, 488, 492, 493], "boolean": [22, 23, 75, 148, 152, 163, 200, 259, 285, 308, 310, 311, 312, 318, 326, 342, 357, 364, 402, 404, 426, 484, 492], "part": [22, 53, 113, 164, 200, 236, 252, 279, 308, 312, 316, 325, 329, 331, 339, 426, 435, 438, 439, 447, 468, 471, 475, 478, 488], "tablesect": [22, 23], "control": [22, 29, 47, 74, 79, 169, 171, 172, 174, 180, 186, 208, 216, 233, 235, 236, 252, 280, 281, 282, 285, 286, 290, 291, 308, 311, 312, 319, 324, 325, 335, 336, 342, 359, 436, 447, 467, 468, 470, 471, 473, 475, 478, 483, 484, 486, 488, 489, 490, 491, 492, 496], "pin": [22, 25, 213, 217, 223, 232, 247, 280, 281, 285, 290, 302, 304, 305, 308, 309, 310, 311, 316, 322, 325, 327, 333, 339, 342, 345, 346, 352, 386, 396, 433, 447, 467, 468, 471, 473, 478, 479, 480, 484, 485, 486, 490, 491, 493], "fraction": [22, 77, 79, 81, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 104, 105, 112, 122, 130, 131, 132, 134, 135, 151, 152, 160, 166, 200, 208, 232, 233, 235, 242, 269, 285, 289, 298, 302, 305, 308, 310, 312, 316, 324, 331, 342, 346, 347, 357, 385, 387, 389, 409, 425, 433, 438, 451, 461, 465, 466, 467, 468, 470, 471, 473, 476, 479, 481, 483, 484, 486, 488, 491, 492, 499], "subsect": [22, 23, 217, 286, 430, 469, 500], "componenet": 22, "generatefullcoremap": [22, 24, 25], "showblockaxmesh": [22, 24, 25, 402, 462], "hold": [23, 75, 162, 175, 176, 199, 236, 281, 287, 302, 305, 308, 312, 334, 336, 338, 364, 396, 467, 489], "abc": [23, 35, 282, 286, 331, 333], "htmltree": [23, 438], "htmlelement": [23, 438], "idprefix": 23, "higher": [23, 172, 216, 279, 281, 305, 318, 433, 479, 494, 496], "font": [23, 402], "rang": [23, 43, 53, 89, 100, 112, 296, 334, 336, 342, 382, 397, 436, 444, 451, 455, 457, 458, 466, 473, 478, 481, 492], "term": [23, 160, 163, 164, 209, 216, 235, 242, 247, 252, 281, 327, 342, 398, 467, 468, 479], "href": 23, "referenc": [23, 159, 162, 358], "left": [23, 152, 159, 215, 216, 247, 252, 279, 305, 308, 329, 331, 333, 334, 364, 386, 398, 438, 494, 497, 498], "either": [23, 41, 44, 53, 55, 75, 76, 101, 161, 164, 166, 172, 175, 196, 200, 201, 203, 211, 216, 236, 240, 247, 254, 259, 279, 285, 289, 290, 291, 296, 308, 312, 325, 327, 331, 333, 334, 356, 364, 369, 386, 387, 389, 402, 426, 435, 436, 440, 462, 468, 475, 479, 480, 488, 491], "subhead": 23, "imagepath": 23, "encod": 23, "hexplot": 23, "premad": 23, "png": [23, 312, 392, 402, 437, 446, 492], "With": [23, 41, 281, 282, 334, 340, 473, 479, 491, 497], "column": [23, 163, 164, 179, 198, 386, 404, 426, 479], "row": [23, 40, 163, 179, 198, 282, 308, 386, 397, 406, 438, 494], "rname": [23, 438], "yaxi": [23, 261, 404, 438], "eventu": [23, 148, 286, 326, 386, 470, 489], "length": [23, 92, 93, 96, 152, 158, 163, 166, 194, 200, 208, 247, 285, 304, 310, 311, 318, 331, 342, 385, 396, 397, 398, 402, 425, 436, 438, 439, 473, 476, 478, 479, 483, 488, 490, 491, 492, 498, 499], "y": [23, 34, 40, 90, 105, 111, 133, 139, 150, 152, 216, 261, 285, 290, 307, 327, 329, 333, 334, 396, 398, 402, 404, 422, 427, 428, 439, 453, 455, 456, 457, 458, 463, 464, 477, 479, 480, 484, 488, 492, 495], "axi": [23, 172, 261, 285, 318, 333, 334, 386, 396, 402, 404, 428, 483, 484, 486], "identifi": [23, 74, 101, 149, 152, 279, 285, 286, 310, 385, 389, 423, 468, 479, 484, 488], "peakdpa": 23, "keff": [23, 208, 247, 249, 342, 363, 398, 404, 433, 438, 473, 484, 486, 489], "seri": [23, 52, 53, 74, 148, 149, 170, 200, 398, 404, 430, 478, 491], "effect": [23, 48, 56, 105, 134, 152, 166, 235, 236, 254, 287, 291, 308, 311, 324, 338, 342, 369, 438, 468, 486, 488, 491, 492, 497], "uncertainti": [23, 438], "keffunc": [23, 404, 438, 486], "uncontrol": [23, 208, 404, 425, 479, 480, 486], "burn": [23, 122, 150, 152, 156, 160, 208, 235, 240, 247, 285, 286, 291, 294, 298, 300, 342, 385, 425, 439, 464, 467, 480, 484, 488, 489, 491, 492], "getassembli": [23, 280, 282, 342, 433, 455, 473, 494], "peakbu": 23, "bu": [23, 213, 216, 217, 235, 438, 439, 473, 478], "maxvalu": 23, "defaultdict": [23, 236, 452, 477], "max": [23, 78, 101, 208, 216, 221, 247, 261, 282, 285, 308, 336, 339, 342, 471, 483, 486, 492, 497, 499], "maxpercentbu": [23, 216, 342, 483, 486, 489], "linetoaddto": 23, "our": [23, 42, 187, 356, 364, 394, 414, 432, 435, 438, 439, 440, 453, 468, 472, 475, 479, 489, 497, 498], "ymin": [23, 404, 456], "ext": [23, 87, 89, 120, 365, 369, 430], "minimum": [23, 101, 236, 308, 311, 324, 329, 332, 334, 389, 402, 404, 484, 486, 492], "enum": [23, 74, 75, 150, 176, 234, 236, 326, 365, 394, 470], "enumer": [23, 150, 233, 326, 365, 436, 446, 461, 464, 470], "pdf": [24, 77, 78, 83, 89, 91, 92, 93, 94, 95, 96, 105, 127, 128, 129, 130, 134, 136, 151, 159, 172, 430, 471, 492], "disabl": [24, 75, 200, 236, 247, 254, 410, 433, 470, 484, 488, 492], "miscellan": 25, "convergencesummari": 25, "weight": [25, 52, 81, 149, 150, 151, 152, 166, 196, 197, 235, 264, 298, 305, 308, 342, 389, 464, 471, 475, 477, 484, 486, 488], "balanc": [25, 176, 196, 236, 247, 249, 377, 436, 439, 484], "duct": [25, 90, 280, 285, 302, 305, 311, 318, 325, 342, 346, 348, 402, 447, 452, 462, 468, 473, 478, 479, 484, 488], "simplist": [25, 492], "averag": [25, 89, 94, 101, 166, 172, 196, 235, 247, 264, 281, 285, 307, 308, 310, 312, 324, 325, 336, 339, 342, 345, 398, 402, 415, 471, 473, 477, 479, 483, 484, 486, 492], "fz": 25, "fxy": 25, "fq": 25, "edit": [25, 53, 289, 431, 433, 440, 469, 479, 488, 491, 494, 500], "test_timeseri": [26, 27], "test_tablecr": [26, 27], "test_reportcont": [26, 27], "test_reportcontentsend": [26, 27], "test_neutronicsplotfunct": [26, 27], "test_writereport": [26, 27, 28], "test_reportbas": [26, 27], "test_reportlog": [26, 27], "test_setdata": [26, 28], "test_getdata": [26, 28], "test_reactorspecificreport": [26, 28], "test_writewelcomehead": [26, 28], "test_printreport": [26, 28], "test_distributablereportint": [26, 28], "test_interactbolreportint": [26, 28], "test_interacteverynod": [26, 28, 30, 33, 256, 257, 263, 264], "test_interactboc": [26, 28, 219, 221, 256, 257, 263, 264], "test_interacteoc": [26, 28], "test_interacteol": [26, 28], "trigger": [29, 148, 159, 163, 216, 233, 279, 340, 455, 462, 463, 467, 468, 473, 483, 496], "folder": [29, 58, 74, 200, 209, 211, 399, 410, 430, 438, 439, 469, 475, 478, 494, 495, 500], "review": [29, 134, 160, 200, 369, 432, 433, 439, 440], "collabor": [29, 279, 468], "dumpsnapshot": [29, 33, 491, 492], "defaultsnapshot": [29, 492], "manageri": 29, "assign": [29, 75, 101, 150, 196, 216, 236, 265, 285, 305, 308, 310, 325, 327, 333, 336, 338, 339, 347, 403, 471, 473, 484, 488], "mol": [29, 79, 105, 130, 134, 492], "stamp": 29, "cccnnn": [29, 491], "opposit": [29, 304, 334, 436], "engin": [30, 44, 80, 107, 160, 224, 434, 475, 476, 477, 478, 492], "world": [30, 247, 385], "test_calcmgflu": [30, 31], "test_historyparamet": [30, 31], "test_historyreport": [30, 31], "test_getblockinassembli": [30, 31], "test_timestepfilt": [30, 31], "test_timestepfilteringwithgap": [30, 31], "test_blocknam": [30, 31], "test_fullbreakdown": [30, 32], "test_displaymemoryusag": [30, 32], "test_printfullmemorybreakdown": [30, 32], "test_getreferr": [30, 32], "test_checkforduplicateobjectsonarmimodel": [30, 32], "test_profilememoryusageact": [30, 32], "get_contain": [30, 32], "test_expandcontain": [30, 32], "test_counthandlesrecurs": [30, 32], "test_interactcoupl": [30, 33], "test_activeatedefaultsnapshots_30cycles2burnstep": [30, 33], "test_activeatedefaultsnapshots_17cycles5burnstep": [30, 33], "confirm": [31, 203, 346], "mg": [31, 150, 152], "hdf": [31, 473], "hdfdb": [31, 74], "readblockshistori": 31, "historical_valu": 31, "historical_indic": 31, "cast": [31, 132], "energi": [31, 151, 155, 164, 166, 172, 175, 176, 179, 189, 196, 197, 238, 247, 249, 251, 267, 285, 305, 308, 342, 399, 402, 433, 459, 467, 468, 471, 475, 484, 486, 492], "preserv": [31, 79, 101, 141, 318, 352, 356, 365, 375, 398, 425, 436, 471, 488], "retriev": [31, 75, 149, 150, 152, 181, 197, 198, 208, 244, 285, 305, 308, 310, 325, 332, 336, 342, 345, 346, 347, 348, 352, 390, 470, 473, 477, 492], "paramat": 31, "swap": [31, 141, 143, 216, 404, 455, 473, 489], "5": [31, 33, 51, 53, 75, 77, 80, 90, 93, 94, 98, 109, 117, 133, 136, 137, 139, 148, 150, 152, 160, 164, 165, 170, 172, 186, 208, 210, 216, 217, 232, 233, 238, 242, 247, 252, 281, 285, 294, 298, 312, 318, 329, 334, 345, 347, 385, 397, 422, 425, 438, 440, 453, 454, 455, 457, 458, 462, 464, 473, 475, 477, 478, 479, 480, 484, 488, 489, 491, 492, 494, 498], "loc": [31, 282, 339, 342, 355, 433, 480], "sfp": [31, 216, 221, 279, 281, 282, 286, 290, 292, 342, 352, 471, 483, 488], "mocksnapshotrequest": 33, "30": [33, 105, 128, 129, 150, 152, 159, 175, 208, 238, 281, 332, 342, 347, 386, 397, 425, 462, 473, 479, 488, 491, 492], "burnstep": [33, 43, 199, 200, 385, 425, 479, 480, 491, 492], "17": [33, 105, 150, 152, 160, 164, 210, 217, 238, 329, 470, 473, 477, 488], "amen": 34, "theoret": [34, 79, 101, 126, 471], "sort": [34, 75, 150, 172, 280, 285, 302, 308, 325, 332, 336, 342, 346, 352, 355, 394, 402, 426, 454, 455, 471, 473, 478, 492], "wide": [34, 167, 304, 308, 328, 342, 361, 369, 402, 431, 476, 479, 486], "vi": [34, 35, 36, 475], "qualiti": [34, 90, 110, 132, 440, 461, 468, 476], "pure": [34, 78, 105, 107, 130, 133, 342, 356, 386, 394, 426, 476], "silo": 34, "tend": [34, 40, 305, 325, 339, 431, 476, 496], "binari": [34, 42, 75, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 179, 180, 181, 182, 186, 397, 459, 475, 491, 494], "test_vi": [34, 37, 39], "testvtkmesh": [34, 37, 38], "testvisdump": [34, 37, 38], "test_xdmf": [34, 37], "testxdmf": [34, 37, 39], "dumpstat": [34, 35, 41, 42], "addopt": [34, 36, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 233, 237, 357, 364, 431], "settingsargu": [34, 36, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 233, 237, 366, 368, 431], "empti": [34, 40, 75, 101, 135, 152, 197, 208, 235, 254, 279, 281, 285, 324, 338, 347, 348, 352, 369, 394, 402, 406, 467, 471, 475, 479, 488, 492], "z": [34, 40, 80, 87, 109, 134, 136, 149, 150, 151, 152, 154, 186, 281, 285, 290, 299, 308, 309, 312, 313, 318, 324, 327, 328, 329, 332, 333, 334, 342, 428, 433, 451, 453, 455, 456, 457, 461, 463, 464, 465, 466, 470, 473, 477, 479, 480, 481, 484, 488], "docstr": [36, 63, 67, 162, 403, 430, 434, 435, 438, 440, 471], "decor": [36, 63, 67, 339, 369, 387, 388, 399, 408, 435], "instead": [36, 63, 67, 76, 101, 152, 200, 211, 216, 254, 257, 279, 281, 285, 290, 292, 305, 308, 324, 326, 332, 334, 339, 340, 342, 358, 369, 370, 379, 385, 387, 399, 426, 436, 438, 439, 468, 470, 471, 473, 475, 479, 488, 491], "suffici": [36, 63, 67, 105, 200, 254, 309, 479, 488, 489], "short": [36, 44, 52, 57, 63, 67, 160, 211, 214, 247, 336, 338, 339, 358, 365, 435, 440, 469, 479, 491, 492, 500], "express": [36, 44, 326, 397, 422, 426, 439, 440, 455, 468, 479, 489, 498], "One": [36, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 159, 164, 191, 203, 237, 279, 305, 332, 336, 345, 364, 368, 393, 397, 433, 435, 438, 473, 477, 489], "unspecifi": [36, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 237, 265, 368], "parser": [36, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 163, 237, 368, 431], "posit": [36, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 216, 237, 247, 281, 285, 307, 308, 310, 312, 327, 329, 331, 332, 333, 334, 335, 342, 368, 386, 396, 398, 404, 413, 438, 470, 471, 480, 484, 486, 488, 489, 491, 492, 494], "final": [36, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 101, 223, 237, 240, 342, 368, 402, 403, 431, 440, 455, 471, 475, 479, 488, 492, 497], "test_testvtkmesh": [37, 38], "test_dumpreactorvtk": [37, 38], "test_dumpreactorxdmf": [37, 38], "test_hexmesh": [37, 38], "test_cartesianmesh": [37, 38], "test_deduptim": [37, 39], "whole": [38, 39, 58, 172, 196, 216, 295, 308, 342, 345, 432, 436, 440, 468, 470, 475, 479, 488], "funtion": 39, "vacuum": [39, 172, 342], "resort": 39, "goe": [40, 201, 331, 332, 342, 346, 432, 440, 464], "vertic": [40, 41, 304, 310, 318, 402, 467, 488], "problemat": [40, 292, 468, 488], "primit": [40, 302, 305, 467], "celltyp": 40, "unstructur": [40, 41, 331], "mesh": [40, 41, 42, 47, 122, 162, 167, 169, 174, 175, 180, 236, 247, 249, 281, 285, 286, 288, 294, 297, 298, 300, 307, 308, 310, 312, 313, 318, 321, 323, 324, 327, 328, 329, 332, 333, 334, 335, 339, 342, 348, 398, 402, 455, 462, 463, 470, 471, 473, 479, 480, 483, 484, 485, 486, 488, 492], "vertex": 40, "cell": [40, 285, 327, 329, 331, 333, 334, 342, 380, 386, 396, 430, 479], "onto": [40, 235, 308, 324, 338, 342, 468, 470, 475, 495], "concept": [40, 44, 89, 200, 292, 329, 342, 435, 439, 471, 489], "bunch": [40, 141, 357, 399, 436, 473, 494], "nx3": 40, "per": [40, 41, 47, 73, 122, 152, 156, 160, 162, 166, 200, 210, 254, 285, 302, 308, 312, 313, 323, 329, 342, 358, 385, 404, 433, 436, 439, 467, 468, 471, 479, 484, 486, 488, 492], "belong": [40, 44, 101, 150, 209, 279, 282, 308, 339, 440, 446], "contin": 40, "relev": [40, 75, 157, 200, 216, 224, 254, 287, 310, 325, 340, 342, 394, 432, 441, 466, 480, 481, 491, 495], "writer": [41, 166, 178, 179, 187, 216, 254, 255, 258, 308, 358, 471], "aspect": [41, 221, 433, 478], "export": [41, 74, 215, 469, 475, 500], "total": [41, 52, 79, 105, 130, 162, 164, 175, 179, 193, 196, 209, 221, 232, 242, 251, 281, 285, 305, 308, 311, 313, 318, 342, 346, 377, 386, 387, 389, 398, 402, 436, 438, 440, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 473, 475, 478, 483, 484, 486, 488, 497, 499], "doabl": 41, "visualiz": 41, "fanci": [41, 44, 279, 336], "difficult": [41, 292, 325, 336, 339, 399, 494], "big": [41, 141, 201, 235, 292, 312, 339, 433, 436, 479, 494], "basenam": [41, 42], "inputnam": [41, 42], "finish": [41, 233, 252, 478, 489], "includeparam": [41, 42], "excludeparam": [41, 42], "exclud": [41, 52, 200, 216, 235, 236, 240, 291, 389], "interchang": 42, "interpret": [42, 63, 75, 76, 79, 86, 99, 101, 105, 128, 131, 132, 133, 134, 149, 172, 252, 279, 289, 290, 291, 318, 325, 326, 342, 386, 392, 398, 473, 488, 489, 491, 492, 497], "light": [42, 240, 464, 467, 480], "live": [42, 74, 142, 160, 202, 209, 211, 214, 216, 233, 247, 251, 279, 282, 291, 435, 496], "paraview": [42, 469, 475, 500], "visit": [42, 385, 469, 475, 500], "properli": [42, 55, 166, 186, 309, 318, 320, 342, 347, 378, 381, 386, 409, 433, 470], "polyhedra": 42, "unfortun": [42, 333, 394, 403, 439], "__need__": 42, "prism": 42, "wedg": 42, "defeat": 42, "xmdf": 42, "cartesian": [42, 53, 172, 280, 281, 290, 308, 311, 326, 327, 331, 334, 346, 352, 369, 374, 386, 406, 451, 455, 465, 466, 468, 470, 471, 480, 481, 488, 491], "theta": [42, 76, 134, 136, 285, 299, 307, 308, 312, 313, 335, 342, 353, 428, 451, 465, 466, 470, 481, 488], "1287": [42, 113], "elementtre": 42, "temporalcollect": 42, "analyz": [43, 46, 52, 53, 212, 232, 433, 435, 468, 473, 487, 495], "often": [43, 44, 45, 63, 74, 76, 82, 83, 87, 101, 142, 149, 159, 163, 166, 170, 200, 211, 216, 223, 235, 247, 251, 252, 308, 309, 325, 327, 329, 330, 333, 339, 431, 447, 454, 468, 469, 470, 473, 475, 476, 478, 479, 488, 489, 491, 493, 495, 500], "sweep": [43, 44, 45, 53, 57, 247, 285, 314, 315, 316, 433, 462, 468, 470, 471, 474, 492], "send": [43, 74, 75, 148, 436, 439], "off": [43, 52, 74, 75, 77, 150, 159, 169, 174, 196, 235, 252, 254, 279, 281, 285, 308, 312, 333, 334, 342, 352, 356, 375, 386, 436, 454, 468, 470, 475, 479, 491, 492], "my": [43, 387, 401, 403, 420, 431, 435, 475, 491, 492], "interdepend": [43, 52], "sensit": [43, 47, 196, 279, 281, 324, 338, 339, 342, 468, 470, 478], "studi": [43, 47, 89, 184, 196, 216, 247, 281, 324, 468, 478, 479, 488], "armiloc": 43, "numstep": 43, "11": [43, 75, 79, 89, 98, 113, 134, 150, 152, 172, 183, 188, 217, 238, 329, 398, 433, 454, 462, 470, 471, 473, 477, 478, 479, 480, 489], "Then": [43, 162, 235, 281, 285, 308, 475], "submit": [43, 44, 52, 53, 57, 252, 365, 434, 436, 475, 478, 491, 492], "hpc": [43, 44, 52, 57, 74, 468, 475, 478], "cluster": [43, 44, 52, 57, 74, 201, 252, 358, 401, 436, 478, 491, 492], "samplinginputmodifi": [43, 45, 46, 53, 56], "fullcoremodifi": [43, 45, 46], "settingsmodifi": [43, 45, 46, 309, 314, 315, 471, 478], "multisettingmodifi": [43, 45, 46], "blueprintblockmodifi": [43, 45, 46, 50], "neutronicsmodifi": [43, 45], "neutronicconvergencemodifi": [43, 45, 47, 309, 314, 315], "neutronicmeshssizemodifi": [43, 45, 47], "pintypeinputmodifi": [43, 45], "smeardensitymodifi": [43, 45, 48], "cladthicknessbyodmodifi": [43, 45, 48], "cladthicknessbyidmodifi": [43, 45, 48], "test_cas": [43, 54], "testarmicas": [43, 54, 55], "testcasesuitedepend": [43, 54, 55], "testextrainputwrit": [43, 54, 55], "multifilesinterfac": [43, 54, 55], "testpluginwithduplicateset": [43, 54, 55], "testpluginforcopyinterfacesmultiplefil": [43, 54, 55], "testcopyinterfaceinput": [43, 54, 55], "test_suitebuild": [43, 54], "latinhypercubemodifi": [43, 54, 56], "settingmodifi": [43, 53, 54, 56], "testlatinhypercubesuitebuild": [43, 54, 56], "testfullfactorialsuitebuild": [43, 54, 56], "testseparateeffectsbuild": [43, 54, 56], "independentvari": [43, 44, 46, 55, 56, 478, 492], "addexplicitdepend": [43, 44], "getpotentialparentfromsettingvalu": [43, 44], "setuptaskdepend": [43, 44], "initializeoper": [43, 44, 462], "summarizedesign": [43, 44, 55], "buildcommand": [43, 44], "echoconfigur": [43, 52, 478], "writet": [43, 52], "adddegreeoffreedom": [43, 53, 478], "addmodifierset": [43, 53], "buildsuit": [43, 53, 478], "redirect": [44, 52, 356], "post": [44, 52, 74, 310, 431, 473, 474, 492, 494], "reactiv": [44, 101, 162, 209, 223, 235, 240, 247, 310, 339, 342, 468, 473, 484, 486, 488, 491, 492], "coeffici": [44, 76, 78, 80, 89, 92, 93, 94, 96, 101, 102, 130, 133, 134, 164, 171, 204, 209, 223, 235, 247, 254, 302, 310, 339, 342, 346, 398, 428, 473, 476, 484, 486, 488, 492, 498], "complex": [44, 75, 159, 211, 217, 221, 247, 279, 304, 308, 364, 386, 455, 468, 469, 475, 476, 479, 480, 488, 489, 500], "definit": [44, 46, 76, 79, 105, 152, 154, 156, 160, 162, 169, 174, 225, 233, 242, 252, 260, 275, 279, 280, 283, 284, 288, 289, 290, 292, 305, 306, 308, 324, 325, 334, 336, 337, 338, 339, 340, 341, 342, 352, 361, 364, 381, 384, 385, 388, 392, 402, 426, 432, 433, 435, 462, 464, 470, 471, 475, 476, 477, 478, 479, 483, 488, 492], "independentvariabl": 44, "lazi": [44, 439], "demand": [44, 200, 285, 308], "someon": [44, 53, 148, 247, 289, 336, 340, 392, 468], "reflect": [44, 74, 79, 172, 247, 280, 305, 308, 326, 342, 433, 480, 483, 492], "somehow": [44, 157, 355, 435, 436, 440], "ideal": [44, 75, 166, 279, 325, 369, 475], "explicit": [44, 101, 162, 215, 240, 244, 245, 290, 305, 308, 350, 412, 439, 470, 471, 479, 491], "evalu": [44, 90, 101, 132, 150, 156, 159, 163, 196, 201, 217, 240, 254, 290, 308, 316, 346, 394, 397, 398, 433, 439, 454, 468, 469, 480, 484, 492, 500], "impos": [44, 46, 152, 200, 279, 402], "implicitli": [44, 200, 286, 470, 484], "settingvalu": 44, "filepattern": 44, "match": [44, 52, 76, 148, 152, 161, 163, 196, 203, 216, 279, 281, 286, 308, 331, 335, 342, 347, 348, 357, 365, 369, 415, 426, 467, 470, 473, 475, 478, 492, 497], "groupdict": 44, "dirnam": 44, "task": [44, 57, 148, 149, 201, 217, 236, 247, 334, 400, 436, 468, 473, 478, 494], "account": [44, 105, 156, 159, 196, 242, 254, 285, 291, 305, 308, 310, 312, 346, 471, 476, 484, 488], "leftov": [44, 302, 305], "proprietari": [44, 435, 461, 468, 488], "commun": [44, 126, 148, 162, 200, 346, 365, 434, 497], "move": [44, 55, 75, 152, 162, 202, 211, 212, 215, 216, 279, 281, 282, 286, 289, 291, 308, 316, 318, 324, 325, 334, 342, 348, 369, 385, 391, 402, 404, 455, 467, 468, 470, 471, 473, 483, 488, 490, 492], "supervisori": [44, 216], "coverag": [44, 180, 296, 318, 432, 471, 478, 492], "trace": [44, 235, 305, 348, 437, 480, 488, 492], "room": [44, 87, 152, 285, 467, 476, 479, 480], "eleg": 44, "page": [44, 87, 107, 113, 132, 134, 139, 232, 402, 435, 436, 438, 468, 479, 480], "By": [44, 52, 75, 211, 235, 281, 325, 334, 398, 402, 447, 475, 480, 488, 491, 492, 498], "resolv": [44, 76, 199, 203, 206, 308, 310, 319, 385, 426, 471], "target": [44, 75, 240, 280, 285, 308, 309, 310, 318, 325, 342, 369, 398, 399, 404, 432, 468, 469, 471, 475, 484, 486, 488, 489, 492, 500], "additionalfil": 44, "modifiedset": 44, "writestyl": [44, 52], "modif": [44, 46, 53, 79, 86, 99, 101, 105, 128, 131, 132, 133, 134, 169, 238, 279, 280, 285, 286, 287, 288, 291, 294, 300, 312, 358, 403, 452, 455, 462, 463, 470, 471, 473, 475, 479, 480, 490], "safer": [44, 358, 438], "wonder": 44, "medium": [44, 52, 71, 280, 291, 325, 358, 365, 471, 480], "destin": [44, 281, 324, 358, 390, 391, 410], "01": [44, 52, 78, 79, 87, 105, 109, 134, 152, 170, 238, 285, 298, 318, 427, 433, 455, 462, 463, 465, 471, 473, 477, 496], "sourcedir": 44, "forthcom": 44, "baselin": [44, 224, 305, 480], "shufflelog": [44, 75, 216, 221, 473, 479, 489, 492], "loadingfil": [44, 479, 480, 488, 491, 492], "geomfil": [44, 286, 492, 494], "respect": [44, 92, 93, 96, 164, 200, 240, 291, 338, 363, 461, 468, 498], "let": [44, 52, 101, 236, 279, 285, 290, 382, 433, 436, 468, 473, 475, 476, 477, 479, 492, 493], "union": [44, 75, 101, 159, 236, 279, 280, 308, 326, 331, 334, 348, 355, 363, 386, 394, 426], "ping": 44, "modular": [44, 75, 260, 468, 475], "absolut": [44, 75, 308, 327, 334, 358, 401, 426, 471, 491], "wildcard": 44, "glob": [44, 75, 410, 470], "offer": [44, 203, 431, 441, 466, 477, 481], "noth": [44, 196, 213, 221, 282, 296, 342, 346, 377, 402], "inputdirectori": [44, 357, 358, 478], "newset": [44, 53, 358], "regard": [44, 232], "simplifi": [44, 90, 110, 126, 132, 148, 240, 369, 394, 479, 498], "runtim": [45, 74, 76, 198, 200, 259, 279, 316, 433, 470, 471, 475, 491], "test_inputmodifi": [45, 49], "mockgeom": [45, 49, 50, 51], "testsuitebuilderintegr": [45, 49, 50], "testsettingsmodifi": [45, 49, 50], "neutronicskernelopt": [45, 49, 50], "testfullcoremodifi": [45, 49, 50], "test_pintypeinputmodifi": [45, 49], "testblueprintmodifi": [45, 49, 51], "fail_if_aft": [45, 46, 48], "__call__": [46, 53, 478], "fail": [46, 71, 74, 152, 197, 203, 235, 267, 281, 329, 343, 357, 358, 369, 378, 379, 382, 385, 399, 403, 410, 470, 471, 492], "adjust": [46, 47, 48, 51, 53, 75, 101, 152, 232, 245, 247, 281, 285, 291, 305, 308, 310, 315, 316, 346, 347, 433, 464, 469, 471, 478, 479, 480, 483, 488, 491, 492, 500], "smear": [46, 48, 51, 285, 316, 322, 324, 467, 470, 479, 480, 484], "clad": [46, 48, 51, 90, 209, 223, 236, 280, 281, 285, 296, 298, 305, 308, 311, 316, 318, 319, 325, 342, 346, 348, 447, 452, 462, 467, 468, 471, 473, 478, 479, 480, 484, 486, 488, 492, 493], "constuctor": 46, "paramtyp": [46, 53, 56], "space": [46, 48, 53, 74, 101, 135, 163, 200, 211, 285, 290, 302, 308, 327, 328, 333, 334, 342, 385, 386, 402, 457, 467, 468, 479, 484, 488, 491, 492], "sampl": [46, 53, 308, 342, 406, 470, 479], "quasi": [46, 53, 282, 327, 467], "random": [46, 53, 281, 336, 403, 420, 436], "discret": [46, 53, 162, 333, 342], "constructor": [46, 74, 142, 148, 152, 200, 216, 305, 332, 333, 334, 336, 397, 426], "inclus": [46, 159, 426, 491], "grow": [46, 281, 311, 325, 339, 352, 402, 404, 476, 492], "symmetr": [46, 172, 285, 312, 331, 333, 334, 342, 433, 492], "besid": [46, 209], "expans": [46, 58, 76, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 101, 102, 108, 109, 112, 113, 122, 128, 129, 130, 132, 133, 134, 137, 138, 139, 216, 247, 281, 285, 291, 302, 305, 310, 311, 318, 319, 322, 346, 347, 389, 409, 410, 433, 451, 465, 466, 468, 470, 471, 473, 476, 478, 481, 484, 486, 487, 488, 492], "schedul": [46, 75, 199, 217, 439, 475, 488], "expand": [46, 58, 79, 101, 113, 122, 133, 152, 217, 232, 281, 289, 290, 291, 296, 302, 305, 308, 310, 311, 312, 318, 326, 342, 346, 347, 352, 386, 389, 398, 409, 430, 438, 456, 467, 470, 471, 473, 476, 478, 479, 480, 488, 492, 498], "themself": 46, "settingnam": [46, 53, 56, 63, 203, 357, 364], "settingv": 46, "conf_neutronics_typ": [46, 233, 247, 438], "conf_coarse_mesh_rebal": 46, "conf_eps_eig": 47, "conf_eps_fsavg": 47, "conf_eps_fspoint": 47, "100": [47, 77, 79, 92, 93, 96, 130, 150, 152, 210, 216, 238, 281, 285, 318, 403, 426, 439, 448, 452, 478, 479, 480, 486, 488, 491, 492, 499], "criteria": [47, 75, 180, 208, 216, 247, 285, 286, 308, 342, 489, 490, 492, 497], "multfactor": 47, "factor": [47, 101, 164, 180, 197, 200, 208, 216, 247, 281, 285, 304, 305, 308, 310, 318, 336, 342, 385, 425, 471, 473, 476, 479, 484, 486, 488, 489, 491, 492, 499], "switch": [47, 166, 203, 257, 285, 291, 336, 342, 386, 439, 471, 479, 489], "nodal": [47, 172, 175, 247, 285, 312], "finit": [47, 164, 171, 247, 312, 329, 332, 334, 397, 492], "approxim": [47, 130, 136, 233, 235, 236, 252, 302, 308, 312, 357, 404, 433, 447, 468, 478, 479, 484, 490, 491], "multipli": [47, 101, 151, 164, 196, 216, 232, 242, 247, 259, 285, 308, 397, 484, 489, 492], "axial": [47, 101, 122, 172, 180, 216, 247, 280, 281, 285, 286, 288, 294, 297, 298, 300, 304, 305, 307, 310, 312, 313, 318, 323, 324, 325, 327, 329, 331, 332, 333, 334, 342, 346, 348, 398, 402, 404, 448, 470, 471, 473, 475, 479, 480, 484, 486, 487, 488, 492], "_pintypeassemblymodifi": 48, "tube": [48, 285, 467, 479, 480], "fabric": [48, 209, 212, 389, 433, 484, 489], "thick": [48, 51, 307, 311, 316, 473, 479], "inner": [48, 51, 216, 217, 236, 280, 281, 285, 288, 304, 305, 307, 308, 311, 316, 325, 329, 335, 438, 471, 473, 475, 478, 479, 480, 484, 488, 492, 493], "diamet": [48, 51, 285, 304, 311, 316, 347, 473, 478, 479, 484, 488, 493], "outer": [48, 51, 172, 217, 247, 280, 281, 285, 302, 304, 307, 308, 311, 312, 316, 325, 335, 342, 346, 347, 386, 447, 471, 473, 475, 478, 479, 484, 488, 489, 492, 493], "test_smeardensityfail": [49, 50], "test_settingsmodifi": [49, 50], "test_blueprintblockmodifi": [49, 50], "test_neutronicconvergencemodifi": [49, 50], "test_fullcoreconvers": [49, 50], "test_adjustsmeardens": [49, 51, 317, 322], "test_cladthickenessbyodmodifi": [49, 51], "test_cladthickenessbyidmodifi": [49, 51], "hex": [50, 51, 172, 175, 183, 186, 188, 213, 217, 220, 222, 236, 247, 280, 281, 285, 290, 308, 311, 312, 320, 321, 326, 327, 329, 331, 332, 333, 334, 342, 343, 345, 346, 347, 350, 352, 369, 386, 396, 397, 406, 445, 449, 451, 454, 462, 465, 466, 467, 468, 470, 471, 473, 479, 481, 483, 484, 486, 488, 491], "areafuel": 51, "smeardens": [51, 285, 484], "innercladarea": 51, "fuelod": 51, "cladid": 51, "sqrt": [51, 285, 304, 316, 334, 396, 402, 455, 456, 497], "cladthick": [51, 478], "od": [51, 281, 285, 298, 303, 304, 307, 347, 348, 454, 462, 478, 479, 480, 488, 493], "cladthic": 51, "12": [51, 75, 78, 79, 98, 138, 139, 148, 150, 152, 210, 217, 238, 329, 385, 398, 426, 433, 440, 453, 454, 455, 461, 462, 470, 473, 477, 488, 489], "24": [51, 138, 150, 152, 210, 238, 247, 305, 329, 471], "cladod": 51, "025": [51, 238], "05": [51, 78, 81, 139, 152, 238, 242, 298, 363, 403, 433, 446, 455, 462, 463, 464, 471, 473, 477, 478, 488, 492], "conjunct": [52, 488], "facilit": [52, 62, 326, 343, 468, 470, 488], "circumst": [52, 302, 305, 324, 342, 378, 394, 433, 469, 492, 500], "meet": [52, 152, 285, 308, 329, 342, 486], "uniqu": [52, 116, 149, 152, 281, 285, 308, 336, 494], "rootdir": [52, 357], "ignorepattern": [52, 357], "won": [52, 55, 74, 173, 200, 387, 402, 426, 480], "deleg": [52, 215], "oldroot": 52, "thought": [52, 199, 440, 483], "benefici": [52, 63, 435, 438, 468], "person": 52, "consequ": [52, 148, 149, 160, 305, 336, 436], "infer": [52, 97, 98, 285, 367, 488, 491, 494], "mirror": [52, 209, 475], "tableresult": 52, "perturb": [53, 75, 101, 235, 247, 285, 307, 308, 316, 342, 468, 478], "combin": [53, 101, 131, 152, 170, 196, 308, 312, 325, 326, 327, 334, 355, 385, 394, 475, 478, 484, 491], "modifierset": [53, 478], "pop": [53, 203, 327, 333, 455], "degre": [53, 77, 78, 92, 93, 96, 101, 110, 213, 220, 281, 285, 308, 312, 332, 342, 386, 398, 426, 478, 483, 484, 486], "freedom": [53, 478], "sweepbuild": 53, "exact": [53, 150, 179, 209, 240, 281, 303, 305, 308, 332, 342, 348, 399, 433, 488, 491], "callabl": [53, 74, 203, 279, 280, 308, 339, 342, 364], "signatur": [53, 163, 216, 439, 470], "amount": [53, 247, 312, 318, 338, 439, 467, 473, 484, 486, 488], "inputmodifierset": 53, "namingfunc": 53, "meaning": [53, 203, 279, 305, 339, 365, 386, 426, 468, 475], "0000": [53, 160, 478], "four": [53, 308, 329, 488], "digit": [53, 84, 138, 149, 164, 235, 342, 385, 398, 468], "builder": [53, 56, 279, 392, 430, 471, 478, 488], "somecas": 53, "settingname1": 53, "settingname2": 53, "noisefract": 53, "nois": 53, "avoid": [53, 75, 216, 232, 235, 236, 311, 324, 346, 385, 399, 402, 434, 436, 470, 471, 480, 488, 492, 497], "statist": [53, 478], "postprocessor": 53, "caution": [53, 281], "ongo": [53, 59, 316, 468], "research": [53, 113, 475], "isol": [53, 478], "settignnam": 53, "latin": [53, 471], "hypercub": [53, 471], "lh": 53, "evenli": [53, 308, 436, 491], "fewer": [53, 282, 342, 432], "randomli": 53, "nonoverlap": 53, "partit": 53, "recommend": [53, 75, 209, 236, 285, 311, 329, 332, 335, 336, 390, 435, 437, 468, 469, 475, 479, 484, 492, 500], "surrog": [53, 287], "unlik": [53, 257, 282, 329, 333, 339, 435], "modfier": 53, "inputparametermodifi": 53, "pararmtyp": 53, "test_summarizedesign": [54, 55], "test_independentvari": [54, 55], "test_setuptaskdepend": [54, 55], "test_getcoveragercfil": [54, 55], "test_startcoverag": [54, 55], "test_endcoverag": [54, 55], "test_startprofil": [54, 55], "test_endprofil": [54, 55], "test_run": [54, 55, 70, 72], "test_clon": [54, 55], "test_checkinput": [54, 55], "test_dependencieswithobscurepath": [54, 55], "test_dependencyfromdbnam": [54, 55], "test_dependencyfromexplictrepeatshuffl": [54, 55], "test_explicitdepend": [54, 55], "test_titlesettergett": [54, 55], "test_buildcommand": [54, 55], "test_writeinput": [54, 55], "test_copyinputshelp": [54, 55], "test_copyinterfaceinputs_singlefil": [54, 55], "test_copyinterfaceinputs_nonfilepath": [54, 55], "test_failonduplicateset": [54, 55], "test_copyinterfaceinputs_multiplefil": [54, 55], "test_copyinterfaceinputs_wildcardfil": [54, 55], "test_copyinterfaceinputs_relpath": [54, 55], "test_copyinterfaceinputs_abspath": [54, 55], "test_initi": [54, 56], "test_buildsuit": [54, 56], "test_adddegreeoffreedom": [54, 56], "assert": [55, 122, 203, 208, 221, 249, 318, 352, 421, 439], "bonu": [55, 474, 484], "damag": [55, 151, 210], "pathlib": 55, "vehicl": 55, "lhc": 56, "event": [57, 240, 455, 462, 463, 471, 473, 492, 496], "submitsuit": 57, "prog": 57, "epilog": 57, "formatter_class": 57, "argpars": [57, 63, 431], "helpformatt": 57, "prefix_char": 57, "fromfile_prefix_char": 57, "argument_default": 57, "conflict_handl": 57, "add_help": 57, "allow_abbrev": 57, "exit_on_error": 57, "argumentpars": [57, 63], "exit": [57, 63, 74, 338, 390, 475, 492], "test_runentrypoint": [57, 70], "testinitializationentrypoint": [57, 70, 71], "testcheckinputentrypoint": [57, 70, 71], "testclonearmiruncommandbatch": [57, 70, 71], "testclonesuitecommand": [57, 70, 71], "testcomparecas": [57, 70, 71], "testcomparesuit": [57, 70, 71], "testconvertdb": [57, 70, 71], "testexpandblueprint": [57, 70, 71], "testextractinput": [57, 70, 71], "testinjectinput": [57, 70, 71], "testmigrateinput": [57, 70, 71], "testmodifycasesettingscommand": [57, 70, 71], "testreportsentrypoint": [57, 70, 71], "testcompareisotxslibsentrypoint": [57, 70, 71], "testrunentrypoint": [57, 70, 71], "testrunsuitecommand": [57, 70, 71], "testvisfileentrypointcommand": [57, 70, 71], "test_runsuit": [57, 70], "testrunsuitesuit": [57, 70, 72], "parse_arg": [57, 62, 63], "createoptionfromset": [57, 63, 431], "needlessli": [58, 63, 483], "clutter": [58, 63], "inconsist": [58, 75, 236, 333, 339, 342], "abil": [58, 101, 216, 221, 267, 281, 285, 334, 345, 351, 352, 402, 426, 438, 470, 471], "occasion": [59, 279, 394], "break": [59, 74, 91, 152, 200, 285, 308, 336, 339, 380, 397, 432, 436, 438, 439, 440], "comparison": [61, 308, 326, 342, 347, 369, 467, 471], "handi": [62, 468, 494], "overwrit": [62, 172, 308, 312, 358, 385, 430, 438, 491], "inject": [62, 289, 291, 384], "overrid": [63, 148, 216, 279, 289, 291, 356, 364, 385, 433, 436, 488, 492], "add_argu": [63, 431], "sub": [63, 148, 163, 200, 211, 285, 340, 468, 488], "exitcod": 63, "success": [63, 75, 200, 236, 363, 401], "additionalalia": 63, "suppresshelp": 63, "additionalalis": 63, "care": [63, 74, 196, 200, 233, 279, 285, 291, 308, 340, 342, 401, 426, 432, 438, 439, 440, 468, 488, 491, 494], "distinct": [63, 200, 339, 438, 480], "supresshelp": 63, "suppress": [63, 357], "messag": [63, 75, 279, 337, 356, 365, 370, 388, 426, 432, 434, 436, 467, 470, 488, 496], "almost": [63, 163, 172, 308, 325, 415, 440, 468], "unus": [63, 217, 254, 255, 342, 439, 470, 471, 492], "booldefault": 63, "ep": [63, 208, 313, 369], "editor": [64, 386, 469, 470, 479, 490, 491, 500], "spin": [64, 159, 242], "keyword": [66, 279, 342, 434], "numprocessor": [66, 479, 480, 492], "machin": [69, 201, 216, 221, 402, 404, 468, 469, 473, 500], "mpirun": [69, 379], "mpiexec": [69, 74, 378, 436], "test_entrypointiniti": [70, 71], "test_checkinputentrypointbas": [70, 71], "test_checkinputentrypointinvok": [70, 71], "test_clonearmiruncommandbatchbas": [70, 71], "test_clonearmiruncommandbatchinvokeshort": [70, 71], "test_clonearmiruncommandbatchinvokemedium": [70, 71], "test_clonesuitecommandbas": [70, 71], "test_comparecasesbas": [70, 71], "test_comparesuitesbas": [70, 71], "test_convertdbbas": [70, 71], "test_convertdboutputvers": [70, 71], "test_convertdboutputnod": [70, 71], "test_expandblueprintsbas": [70, 71], "test_extractinputsbas": [70, 71], "test_injectinputsbas": [70, 71], "test_injectinputsinvokeignor": [70, 71], "test_injectinputsinvokenodata": [70, 71], "test_migrateinputsbas": [70, 71], "test_modifycasesettingscommandbas": [70, 71], "test_modifycasesettingscommandinvok": [70, 71], "test_reportsentrypointbas": [70, 71], "test_compareisotxslibsbas": [70, 71], "test_runentrypointbas": [70, 71], "test_runcommandhelp": [70, 71], "test_executecommand": [70, 71], "test_runsuitecommandbas": [70, 71], "test_visfileentrypointbas": [70, 71], "test_listcommand": [70, 72], "test_showvers": [70, 72], "But": [71, 152, 166, 184, 252, 282, 285, 305, 333, 342, 356, 385, 398, 432, 436, 439, 440, 446, 468, 475, 476, 480, 493], "fiction": 71, "mockexecmd": 72, "pytest": [73, 378, 380, 432, 439, 468, 470], "act": [73, 197, 214, 281, 308, 335, 338, 342, 358, 397, 438, 473, 492], "stop": [73, 333, 387, 426, 461, 468], "shop": 73, "submodul": [73, 429, 430], "larger": [73, 398, 440, 479, 480, 488], "project": [73, 162, 307, 392, 431, 432, 435, 440, 457, 458, 468, 469, 475, 500], "session": [73, 200, 402, 470, 480], "circumstatc": 74, "packag": [74, 75, 197, 200, 202, 279, 308, 334, 339, 394, 426, 429, 433, 434, 435, 439, 468, 469, 473, 474, 475, 494, 500], "termin": [74, 148, 397, 433, 469, 474, 500], "lastli": [74, 479], "forc": [74, 152, 254, 281, 310, 311, 339, 342, 358, 379, 392, 398, 410, 433, 440, 471, 473, 492], "classmethod": [74, 75, 148, 162, 163, 196, 236, 286, 287, 289, 291, 308, 325, 326, 328, 329, 335, 338, 339, 343, 365, 390, 394], "fast_path": [74, 200, 470], "drive": [74, 211, 302, 378, 401, 439, 447, 479, 492], "processor": [74, 141, 148, 201, 236, 254, 375, 426, 436, 473, 479], "mpi_rank": 74, "obliter": 74, "danger": 74, "disconnect": 74, "offici": [74, 157, 171, 339, 440], "olderthandai": 74, "sigbreak": 74, "cancel": [74, 247, 308, 365, 497], "atexit": 74, "notabl": [74, 494], "microsoft": [74, 468], "taskcancelgraceperiod": 74, "sigterm": 74, "sigint": 74, "older": [74, 91, 149, 470], "unrel": [74, 440], "dai": [74, 162, 200, 208, 279, 281, 340, 385, 398, 425, 438, 467, 468, 473, 479, 483, 484, 485, 486, 491, 492, 499], "earlier": [74, 338], "concurr": 74, "forcibli": 74, "hack": [74, 364, 483], "gracefulli": [74, 308], "destroi": [74, 484], "lot": [74, 80, 82, 148, 149, 196, 200, 233, 242, 291, 308, 342, 369, 403, 431, 432, 436, 439, 440, 468, 469, 473, 480, 488, 500], "caus": [74, 170, 197, 203, 305, 308, 311, 324, 340, 342, 391, 432, 439, 469, 471, 484, 488, 500], "why": [74, 181, 281, 285, 426, 435, 480], "never": [74, 160, 209, 233, 254, 285, 290, 291, 302, 332, 436, 438, 439, 492], "appear": [74, 86, 217, 279, 355, 357, 364, 402, 419, 426, 473], "repr": 74, "ing": 74, "manual": [74, 152, 154, 156, 172, 186, 195, 196, 208, 240, 252, 282, 291, 309, 318, 325, 342, 355, 468, 473, 477, 491, 492], "learn": [75, 456, 457, 458, 468, 487], "architectur": [75, 200, 279, 348, 434, 468, 475], "els": [75, 76, 163, 164, 203, 216, 217, 252, 254, 281, 285, 308, 326, 342, 385, 392, 402, 436, 464, 473, 475, 478, 489], "createinterfac": [75, 199, 200, 204, 433], "importerror": 75, "subset": [75, 148, 235, 291, 308, 309, 323, 389, 409, 410, 470, 488], "everyth": [75, 152, 172, 197, 198, 201, 247, 308, 336, 401, 436, 479], "globalflux": [75, 200, 209, 233, 363, 497], "globalfluxinterfac": [75, 233, 246, 249, 471], "10": [75, 79, 87, 90, 102, 110, 111, 122, 132, 133, 138, 150, 151, 152, 159, 162, 163, 164, 168, 170, 172, 173, 208, 216, 217, 238, 247, 285, 290, 294, 298, 300, 305, 308, 312, 318, 329, 339, 347, 369, 397, 398, 402, 425, 426, 433, 436, 439, 454, 457, 458, 459, 462, 464, 468, 470, 473, 475, 476, 477, 478, 479, 480, 488, 489, 491, 492], "maxit": 75, "interactallcoupl": [75, 199, 200], "epsilon": [75, 369, 497], "maximum": [75, 101, 149, 216, 236, 285, 308, 325, 342, 385, 398, 402, 483, 484, 486, 489, 492], "val": [75, 101, 163, 193, 242, 285, 302, 305, 307, 308, 324, 342, 364, 385, 398, 402, 403, 420, 473], "_supported_typ": 75, "commonli": [75, 101, 159, 247, 369, 386, 401, 431, 492], "equal": [75, 148, 156, 162, 164, 166, 168, 170, 173, 197, 200, 216, 254, 285, 302, 304, 308, 313, 333, 346, 364, 369, 385, 386, 398, 402, 403, 436, 456, 464, 479, 491, 498], "typeerror": [75, 364, 367, 428], "met": [75, 285, 497], "recent": [75, 172, 468, 483], "critera": [75, 308], "On": [75, 162, 168, 308, 435, 468, 469, 476, 478, 500], "condit": [75, 148, 152, 160, 203, 211, 223, 233, 247, 254, 279, 281, 285, 326, 329, 331, 353, 391, 397, 467, 468, 478, 479, 480, 492], "stale": [75, 247, 339, 471], "increment": [75, 278, 281, 285, 386, 396, 398, 491], "clear": [75, 101, 152, 161, 196, 235, 281, 285, 305, 308, 312, 323, 324, 339, 342, 347, 430, 439, 471, 479], "2d": [75, 79, 85, 100, 101, 133, 195, 236, 303, 307, 332, 333, 334, 375, 398, 433, 471], "3d": [75, 79, 85, 100, 101, 296, 305, 307, 333, 347, 375, 457, 458, 475], "norm": [75, 473, 475, 497], "listtocheck": 75, "dim": [75, 285, 310, 454, 480], "eponym": 75, "contract": [75, 113, 305, 310, 318, 484, 487], "categori": [75, 208, 223, 247, 254, 280, 325, 336, 339, 342, 375, 455, 462, 463, 471, 473, 495], "driver": [75, 236, 280, 308, 311, 319, 325, 436, 492], "neutronsperfiss": 75, "torestor": 75, "restor": [75, 101, 305, 308, 331, 334, 338, 339, 346, 352, 356], "distributest": [75, 148, 378], "quiet": [75, 101, 308], "callback": 75, "pickl": [75, 281, 308, 331, 338, 377, 385], "detach": [75, 199, 200, 333], "deepcopi": [75, 101, 242, 281, 285, 286, 471], "immedi": [75, 308, 311, 332, 334, 336, 340, 342, 468], "occur": [75, 101, 148, 150, 152, 154, 160, 200, 215, 216, 279, 291, 318, 319, 336, 342, 365, 426, 433, 439, 477, 483, 484, 486, 488], "subcycl": [75, 200], "repeatedli": 75, "peripher": [75, 200, 217, 235], "cr": [75, 84, 150, 152, 204, 247, 291, 298, 473, 478, 479, 488], "worth": [75, 162, 204, 216, 247, 426, 438, 439, 440, 468, 486], "theori": [75, 164, 308], "_cmd": 75, "incom": [75, 172, 186, 216], "statu": [75, 310, 336, 365, 430, 469, 492, 500], "statement": [75, 201, 203, 247, 308, 318, 334, 337, 365, 390, 426, 434, 436], "wrong": [75, 285, 298, 308, 402, 435], "innam": [75, 247], "outnam": [75, 247], "interpol": [75, 112, 113, 281, 285, 398], "anywher": [75, 342, 475, 489], "failur": [75, 296, 308, 311, 380, 435, 488], "advent": [75, 281], "perhap": [75, 279, 333, 468, 491], "externalcodeinterfac": [75, 247, 252, 255], "eci": [75, 258], "involv": [75, 211, 342, 468, 488, 497], "klass": [75, 338, 392], "namedtupl": [75, 333], "addinterfac": [75, 199, 200], "ultim": [75, 216, 279, 280, 318, 325, 340, 342, 473, 478, 479, 497], "field": [75, 134, 200, 308, 310, 318, 334, 336, 364, 385, 394, 479, 488, 491], "scope": [76, 216, 240, 309, 369, 435, 468, 471, 473, 475, 478, 480, 491, 492], "thermo": [76, 305, 433, 488], "heat": [76, 77, 89, 92, 93, 96, 97, 98, 101, 109, 117, 133, 134, 209, 276, 327, 346, 433, 468, 475, 476, 480, 483, 484, 490, 492], "capac": [76, 77, 89, 92, 93, 96, 97, 98, 101, 109, 133, 134, 200, 433, 475, 476, 479, 491], "linear": [76, 78, 79, 80, 84, 90, 92, 93, 96, 101, 102, 108, 109, 113, 122, 128, 129, 130, 132, 133, 134, 137, 138, 139, 281, 285, 305, 318, 324, 398, 471, 473, 476, 478, 479, 484, 498], "viscos": [76, 98], "nuclear": [76, 80, 82, 83, 87, 101, 134, 149, 150, 152, 159, 160, 161, 162, 173, 181, 191, 209, 212, 232, 233, 240, 252, 308, 386, 433, 467, 473, 475, 477, 480, 486, 488], "alon": [76, 235, 305, 308, 454], "thermal": [76, 77, 78, 79, 80, 87, 89, 90, 92, 93, 94, 96, 98, 101, 105, 108, 109, 110, 113, 128, 130, 133, 134, 136, 137, 139, 157, 159, 223, 232, 273, 275, 276, 277, 302, 305, 308, 310, 311, 318, 319, 322, 339, 342, 346, 347, 432, 451, 465, 466, 468, 470, 471, 473, 474, 476, 479, 481, 484, 486, 487, 488, 491, 492, 493], "scatter": [76, 80, 87, 101, 109, 134, 136, 148, 157, 159, 164, 170, 179, 193, 195, 196, 197, 198, 247, 259, 451, 453, 457, 458, 465, 466, 470, 477, 480, 481, 484, 492], "law": [76, 157, 159, 432, 468, 479], "macroscop": [76, 164, 193, 196, 197, 247, 259, 268, 471, 480, 492], "highli": [76, 215, 236, 437, 455, 469, 479, 500], "team": [76, 432, 440, 468, 475], "updatesourc": 76, "dev": [76, 382, 468, 469, 500], "resolut": [76, 203, 336, 470], "formal": [76, 325, 338, 470, 472, 475], "registri": [76, 279], "data_sourc": [76, 101], "sai": [76, 166, 194, 196, 203, 279, 325, 356, 357, 396, 432, 436, 438, 440, 468, 479, 489], "namespaceord": 76, "latter": [76, 296], "conf_material_namespace_ord": 76, "kentucki": 76, "transport": [76, 77, 110, 167, 172, 209, 233, 247, 259, 281, 324, 468, 471, 479, 484], "cabinet": 76, "colon": [76, 475], "classnam": [76, 392, 488], "prefer": [76, 141, 160, 279, 308, 310, 334, 342, 364, 387, 434, 440, 469, 475, 489, 500], "material_namespace_ord": 76, "modulepath": [76, 401], "matcl": [76, 461], "test__init__": [76, 115], "bettersubclasscheck": [76, 115, 116], "materials__init__test": [76, 115, 116], "test_air": [76, 115], "test_b4c": [76, 115], "b4c_testcas": [76, 115, 118], "test_be9": [76, 115], "test_graphit": [76, 115], "graphite_testcas": [76, 115, 120], "test_lithium": [76, 115], "lithium_testcas": [76, 115, 121], "test_materi": [76, 115, 409], "materialconstructiontest": [76, 115, 122], "materialfindingtest": [76, 115, 122, 409], "californium_testcas": [76, 115, 122], "cesium_testcas": [76, 115, 122], "magnesium_testcas": [76, 115, 122], "magnesiumoxide_testcas": [76, 115, 122], "molybdenum_testcas": [76, 115, 122], "mox_testcas": [76, 115, 122], "nacl_testcas": [76, 115, 122], "niobiumzirconium_testcas": [76, 115, 122], "potassium_testcas": [76, 115, 122], "scandiumoxide_testcas": [76, 115, 122], "sodium_testcas": [76, 115, 122], "tantalum_testcas": [76, 115, 122], "thoriumuraniummetal_testcas": [76, 115, 122], "uranium_testcas": [76, 115, 122], "uraniumoxide_testcas": [76, 115, 122], "thorium_testcas": [76, 115, 122], "thoriumoxide_testcas": [76, 115, 122, 125], "void_testcas": [76, 115, 122], "mixture_testcas": [76, 115, 122], "lead_testcas": [76, 115, 122], "leadbismuth_testcas": [76, 115, 122], "copper_testcas": [76, 115, 122], "sulfur_testcas": [76, 115, 122, 124], "zr_testcas": [76, 115, 122], "inconel_testcas": [76, 115, 122], "inconel600_testcas": [76, 115, 122], "inconel625_testcas": [76, 115, 122], "inconelx750_testcas": [76, 115, 122], "alloy200_testcas": [76, 115, 122], "cah2_testcas": [76, 115, 122], "hafnium_testcas": [76, 115, 122], "hastelloyn_testcas": [76, 115, 122], "tzm_testcas": [76, 115, 122], "yttriumoxide_testcas": [76, 115, 122], "zincoxide_testcas": [76, 115, 122], "fuelmaterial_testcas": [76, 115, 122], "test_sic": [76, 115], "test_sulfur": [76, 115], "test_thoriumoxid": [76, 115], "test_uzr": [76, 115], "uzr_testcas": [76, 115, 126], "test_wat": [76, 115], "propertyvalidtemperatur": [76, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139], "setdefaultmassfrac": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139], "pseudodens": [76, 77, 79, 85, 86, 97, 98, 99, 100, 101, 107, 109, 110, 112, 131, 133, 135, 136, 405, 409, 471], "specificvolumeliquid": [76, 77, 110], "thermalconduct": [76, 77, 89, 90, 92, 93, 96, 98, 99, 101, 109, 110, 128, 129, 130, 133, 134, 139, 493], "heatcapac": [76, 77, 89, 92, 93, 96, 97, 98, 99, 101, 109, 133, 134, 475, 476], "modelconst": [76, 78, 101], "referencemaxpercentimpurit": [76, 78], "linearexpansiontablek": [76, 78, 139], "linearexpansiont": [76, 78, 139], "linearexpans": [76, 78, 92, 93, 96, 101, 128, 129, 130, 133, 134, 139], "enrichednuclid": [76, 79, 86, 99, 101, 105, 128, 131, 132, 133, 134, 305], "applyinputparam": [76, 79, 99, 101, 105, 112, 128, 130, 131, 132, 133, 134], "updatetd": [76, 79, 112], "setnewmassfracsfrommassenrich": [76, 79], "getmassenrichmentfromnumenrich": [76, 79], "linearexpansionperc": [76, 79, 80, 84, 87, 89, 90, 92, 93, 94, 96, 101, 102, 108, 113, 130, 132, 133, 134, 137, 138, 139, 317, 318, 498], "thermalscatteringlaw": [76, 80, 87, 101, 109, 134, 136], "meltingpoint": [76, 85, 99, 105, 109, 128, 129, 130, 133, 134], "setmassfrac": [76, 86, 101, 280, 308], "materialintro": [76, 89, 133], "reftempk": [76, 89, 92, 93, 94, 96, 101, 109, 139], "meancoefficientthermalexpans": [76, 89, 94], "polyfitthermalconduct": [76, 92, 93, 96], "polyfitheatcapac": [76, 92, 93, 96], "polyfitlinearexpansionperc": [76, 92, 93, 96], "volumetricexpans": [76, 97, 98, 101, 112], "dynamicvisc": [76, 98], "boilingpoint": [76, 99], "getchildren": [76, 101, 280, 308, 344, 348, 473], "getchildrenwithflag": [76, 101, 280, 308, 344, 348], "backup": [76, 101, 280, 302, 305, 308, 327, 331, 334, 336, 338, 339], "restorebackup": [76, 101, 280, 302, 305, 308, 327, 331, 334, 336, 338, 339], "clearcach": [76, 101, 280, 302, 305, 308], "linearexpansionfactor": [76, 101, 476, 498], "getthermalexpansiondensityreduct": [76, 101], "adjustmassenrich": [76, 101, 280, 302, 305, 308], "adjustmassfrac": [76, 101, 280, 308], "gettemperatureatdens": [76, 101], "liquidporos": [76, 101, 302, 305, 484], "gasporos": [76, 101, 302, 305, 484], "pseudodensitykgm3": [76, 101], "densitykgm3": [76, 101], "getcorrosionr": [76, 101], "yieldstrength": [76, 101], "getproperti": [76, 101, 302, 305, 475, 493], "getmassfrac": [76, 101, 239, 242, 280, 308], "clearmassfrac": [76, 101], "removenucmassfrac": [76, 101], "checkpropertytemprang": [76, 101], "checktemprang": [76, 101], "densitytimesheatcapac": [76, 101, 471], "gettempchangefordensitychang": [76, 101], "gettd": [76, 101], "adjusttd": [76, 101], "class1_wt_frac": [76, 101, 389, 488], "class1_custom_isotop": [76, 101, 488], "class2_custom_isotop": [76, 101, 488], "pufrac": [76, 101, 308, 471, 484], "ufrac": [76, 101], "zrfrac": [76, 101, 485], "getmassfracpuo2": [76, 105], "setmassfracpuo2": [76, 105], "getmolfracpuo2": [76, 105], "propertyequ": [76, 109, 133], "propertyunit": [76, 109, 133, 134], "propertynot": [76, 109, 133], "cumulativelinearexpans": [76, 109], "enthalpi": [76, 110, 136], "temperaturec": [76, 113], "percentthermalexpans": [76, 113], "getenrich": [76, 128, 302, 305, 470], "zrfracdefault": [76, 132], "ufracdefault": [76, 132], "propertyrawdata": [76, 133], "refden": [76, 78, 101, 133, 473], "ea": [76, 134], "c1": [76, 134], "c2": [76, 134], "c3": [76, 134], "reference_temperatur": [76, 134], "thermalconductivitytablek": [76, 134], "thermalconductivityt": [76, 134], "temperature_critical_k": [76, 136], "density_critical_kgpercubicmet": [76, 136], "density_critical_gpercubiccentimet": [76, 136], "vapor_pressure_critical_mpa": [76, 136], "vapor_pressure_critical_pa": [76, 136], "alpha_0": [76, 136], "phi_0": [76, 136], "tau": [76, 136], "vaporpressur": [76, 136], "vaporpressureprim": [76, 136], "auxiliaryquantityspecificenthalpi": [76, 136], "auxiliaryquantityspecificentropi": [76, 136], "entropi": [76, 136], "Near": 77, "sea": 77, "correl": [77, 92, 93, 96, 136, 210, 232, 428], "incropera": [77, 117], "frank": [77, 117], "et": [77, 89, 105, 117, 134, 468], "al": [77, 89, 105, 117, 134, 143, 150, 152, 298, 468, 480, 488], "mass": [77, 79, 81, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 110, 112, 117, 122, 130, 131, 132, 134, 149, 150, 151, 152, 209, 212, 216, 232, 242, 264, 281, 285, 291, 298, 302, 305, 308, 309, 310, 312, 318, 322, 323, 324, 339, 342, 346, 347, 348, 389, 409, 433, 447, 448, 452, 461, 467, 470, 471, 473, 475, 476, 477, 483, 484, 485, 486, 488, 492, 499], "transfer": [77, 117, 209, 276, 285, 324, 436, 484, 495], "vol": [77, 107, 109, 117, 139, 232, 285, 308, 452, 473, 475], "york": [77, 107, 117, 139], "wilei": [77, 117], "2002": [77, 117], "pnnl": [77, 117], "15870": [77, 117], "rev": [77, 117], "www": [77, 78, 80, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 110, 127, 128, 129, 130, 136, 181, 339, 468, 479], "gov": [77, 87, 90, 105, 110, 134, 149, 159, 170, 172, 181], "technical_report": 77, "15870rev1": 77, "1300": [77, 89, 98], "2400": [77, 133, 134], "conduct": [77, 89, 90, 92, 93, 96, 98, 101, 105, 109, 110, 128, 130, 133, 134, 139, 232, 433, 473, 476, 488, 493], "200": [77, 78, 122, 152, 238, 398, 478], "850": 77, "temperature_lower_limit": [77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139], "temperature_upper_limit": [77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139], "temperature_unit": [77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139], "mcconn": 77, "ronald": 77, "j": [77, 89, 90, 92, 93, 96, 97, 98, 100, 101, 107, 109, 110, 132, 133, 134, 136, 164, 172, 174, 175, 179, 196, 232, 290, 308, 327, 329, 331, 332, 333, 334, 335, 342, 386, 433, 456, 457, 458, 468, 470, 475, 476, 497], "compendium": 77, "radiat": [77, 83, 209, 468], "pacif": 77, "northwest": 77, "nation": [77, 89, 105, 134, 151, 162, 172, 467, 468], "lab": [77, 151, 468], "richland": 77, "2011": [77, 89, 162], "tk": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 318, 409, 428, 475, 476], "tc": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 150, 302, 303, 304, 305, 307, 308, 318, 348, 409, 428, 475, 476, 493], "cc": [77, 81, 97, 98, 99, 101, 107, 110, 131, 133, 134, 136, 162, 247, 305, 308, 389, 476, 484, 494], "dewitt": 77, "kelvin": [77, 78, 92, 93, 96, 101, 110, 136, 305, 428], "celsiu": [77, 78, 92, 93, 96, 101, 110, 305, 428], "liquid": [77, 85, 99, 100, 101, 110, 112, 136, 149, 150, 159, 305, 479, 484], "kg": [77, 89, 92, 93, 96, 97, 98, 101, 109, 110, 126, 133, 134, 136, 475, 476, 483, 484, 485, 499], "alloi": [78, 89, 91, 93, 94, 95, 106, 122, 131, 132, 471], "wrought": 78, "commerci": [78, 467, 468], "nickel": [78, 89, 91, 150], "201": [78, 152], "sheet": [78, 113], "jacquet": 78, "biz": 78, "usa": 78, "jcqusa": 78, "citat": [78, 91, 92, 93, 95, 96, 99, 101, 109, 113, 133, 134, 136, 139], "literatur": [78, 91, 92, 93, 95, 96, 99, 101, 105, 109, 113, 133, 134, 136, 139, 476], "trefa": 78, "20": [78, 81, 89, 92, 94, 150, 152, 160, 164, 238, 264, 298, 305, 329, 347, 397, 454, 462, 473, 478, 479, 488, 489, 492], "a0": 78, "2162e": 78, "3001e": 78, "09": [78, 152, 348, 433, 454, 470, 471, 473, 477, 488], "94985e": 78, "intepol": [78, 101], "lookup": [78, 101, 151, 240, 267, 279, 281, 285, 324, 339, 342, 349, 355, 396], "73": [78, 133, 150, 152, 210, 238], "15": [78, 89, 92, 93, 94, 96, 102, 105, 108, 109, 130, 134, 137, 139, 150, 152, 208, 217, 238, 285, 329, 389, 425, 446, 454, 464, 465, 470, 473, 479, 488, 491, 492], "1273": [78, 102], "mn": [78, 143, 150, 152, 298, 473, 478, 488], "35": [78, 79, 150, 152, 210, 238], "si": [78, 109, 150, 152, 298, 473, 478, 488], "25": [78, 79, 150, 152, 210, 238, 281, 290, 297, 298, 318, 332, 347, 348, 402, 458, 470, 473, 476, 478, 479, 480, 488, 492], "fe": [78, 149, 150, 151, 152, 291, 298, 454, 459, 473, 478, 488], "173": [78, 152], "373": [78, 89], "573": [78, 238], "673": 78, "773": [78, 238], "873": 78, "973": [78, 89], "1073": 78, "1173": [78, 89, 133, 238, 471], "01e": 78, "13e": [78, 139], "33e": [78, 109], "39e": 78, "43e": 78, "48e": 78, "52e": [78, 480], "56e": 78, "58e": 78, "62e": 78, "65e": [78, 480], "67e": 78, "instantan": [78, 92, 93, 96, 101, 467], "half": [78, 156, 160, 171, 216, 281, 312, 334, 345, 346, 477, 486, 488], "impur": [78, 468], "ni": [78, 150, 152, 298, 308, 473, 478, 488], "boron": [79, 118, 150, 285, 305, 308, 477], "carbid": [79, 109, 118], "difficulti": 79, "real": [79, 162, 172, 175, 199, 200, 233, 242, 247, 285, 305, 308, 324, 331, 342, 398, 402, 431, 436, 447, 475, 478, 480, 491, 492], "td_frac": [79, 101, 105, 112, 130, 133, 134, 471, 488], "b10": [79, 152, 291, 459, 473, 484], "enrich": [79, 86, 99, 101, 105, 128, 131, 132, 133, 134, 216, 281, 285, 305, 308, 342, 347, 389, 402, 468, 473, 479, 480, 484, 488, 489], "percent": [79, 80, 81, 84, 90, 92, 93, 96, 101, 102, 108, 113, 130, 131, 133, 134, 137, 138, 139, 166, 196, 310, 318, 342, 452, 467, 468, 471, 473, 478, 484, 486, 492], "500": [79, 139, 238, 347, 348, 452, 471, 473, 476, 478, 479, 493], "b10_wt_frac": [79, 488], "theoretical_dens": [79, 488], "massenrich": [79, 101], "boron10massgram": 79, "boron11massgram": 79, "carbonmassgram": 79, "012": [79, 210, 473], "009": [79, 473], "carbon": [79, 87, 150, 157, 159], "0107": 79, "mole": [79, 105, 130, 151, 285, 305, 308, 475, 484], "gram": [79, 81, 105, 130, 151, 156, 285, 305, 308, 473, 492], "199": [79, 152], "969552": 79, "801": [79, 160], "272836": 79, "mi": [79, 298, 461], "mb10": 79, "nb10": 79, "ab10": 79, "nb11": 79, "ab11": 79, "natur": [79, 97, 101, 134, 149, 150, 151, 152, 154, 240, 279, 291, 298, 308, 329, 342, 389, 432, 433, 453, 468, 470, 473, 476, 477, 478, 488], "19": [79, 105, 113, 133, 150, 152, 210, 238, 298, 329, 471, 473], "80": [79, 150, 152, 238, 492], "811": 79, "96796": 79, "27604": 79, "55": [79, 105, 110, 150, 152, 238], "2547": 79, "naturalb10numberfract": 79, "preliminari": 79, "beryllium": [80, 119, 150], "metal": [80, 84, 90, 94, 113, 128, 129, 131, 133, 139, 150, 152, 159, 232, 285, 308, 342, 348, 389, 467, 473, 477, 479, 484, 485, 486, 488, 492], "2n": [80, 160, 196, 251, 460, 464], "reaction": [80, 160, 173, 184, 196, 197, 233, 247, 249, 251, 308, 324, 402, 451, 465, 466, 468, 470, 481, 484], "inhal": 80, "hazard": 80, "compound": [80, 87, 109, 132, 134, 136, 159, 236, 363], "Be": [80, 159, 308, 432, 440, 468, 470], "frozenset": [80, 87, 109, 134, 136], "BE": [80, 150, 152], "012183e": [80, 152], "00": [80, 136, 152, 433, 449, 465, 477], "50": [80, 150, 152, 238, 281, 347, 392, 397, 440, 448, 468, 488, 491, 492], "1560": 80, "ferp": 80, "ucsd": 80, "edu": [80, 164], "prop": 80, "pano": 80, "fusion": 80, "fedee": 80, "141": [80, 152, 238], "234": [80, 152, 426, 477], "1987": 80, "calcium": [81, 150], "hydrid": 81, "calciumhydrid": 81, "atom": [81, 101, 105, 149, 150, 151, 152, 159, 162, 193, 196, 210, 236, 242, 247, 264, 285, 305, 308, 311, 312, 324, 389, 467, 468, 473, 477, 480, 483, 484, 485, 486, 488, 492], "kaeri": 81, "kr": [81, 150, 152, 402], "ton": 81, "iso": [81, 152, 491], "abund": [81, 149, 151, 152, 166, 181, 298, 453, 477], "ca": [81, 109, 150, 152, 488], "40": [81, 84, 150, 152, 172, 238, 385, 478], "96": [81, 150, 152, 238, 480], "941": [81, 238], "39": [81, 150, 152, 210, 238, 473, 476, 477, 478], "9625912": 81, "42": [81, 105, 150, 152, 238, 403, 480], "647": [81, 127, 136, 210], "41": [81, 150, 152, 210, 238], "9586183": 81, "43": [81, 84, 150, 152, 210, 238, 473], "135": [81, 136, 152, 238], "9587668": 81, "44": [81, 113, 150, 152, 238], "086": 81, "9554811": 81, "46": [81, 150, 152, 210, 232, 238, 491], "004": [81, 83, 473, 491], "45": [81, 150, 152, 238, 491], "9536928": 81, "48": [81, 150, 152, 238, 462, 473], "187": [81, 152, 238], "47": [81, 150, 152, 238], "9525335": 81, "01565": 81, "09367285": 81, "920331558": 81, "006449241": 81, "001377745": 81, "02178264": 81, "3668e": 81, "002130278": 81, "047884869": 81, "en": [81, 82, 85, 427], "wikipedia": [81, 82, 85, 99, 427, 477], "wiki": [81, 82, 85, 427], "calcium_hydrid": 81, "synthet": 82, "spontan": [82, 152, 160, 471, 477, 484, 486], "decai": [82, 149, 152, 154, 156, 160, 161, 166, 181, 198, 200, 233, 250, 252, 269, 291, 451, 465, 466, 468, 481, 483, 484, 486, 488, 491, 492], "equip": [83, 473], "shield": [83, 162, 196, 235, 280, 281, 312, 325, 342, 473, 478, 480, 484, 488, 490], "concreat": 83, "jolissrch": 83, "inter": [83, 279, 308, 398], "tokai": 83, "sc": [83, 150, 152, 403], "jaea": 83, "jp": 83, "pdfdata": 83, "jaeri": 83, "98": [83, 150, 152, 238, 461, 464, 473, 480, 491], "788": 84, "83": [84, 150, 152, 210, 238], "engaug": 84, "21": [84, 92, 93, 96, 113, 133, 150, 152, 238, 329, 403, 471, 473, 480], "thrust": 84, "chamber": [84, 480], "predict": [84, 223, 240, 479, 497], "rocket": 84, "nozzl": [84, 342, 483, 484, 488], "nasa": 84, "134806": 84, "cesium": [85, 150], "caesium": 85, "benchmark": [86, 353, 468, 479, 480, 488], "isotopicopt": [86, 240, 280, 286, 462], "customisotop": [86, 101, 280, 286, 291, 344, 348, 462, 488], "peopl": [86, 440, 468, 469, 488, 500], "overwritten": [86, 206, 211, 242, 305, 307, 352], "u235": [86, 101, 105, 131, 132, 133, 134, 149, 151, 152, 154, 166, 170, 197, 236, 251, 285, 298, 308, 389, 454, 459, 460, 473, 476, 477, 480, 488], "customloc": 86, "matter": [86, 139, 152, 200, 254, 264, 285, 325, 334, 394, 397, 439, 475], "moder": [87, 216, 280, 325, 342, 468], "ga": [87, 101, 149, 150, 152, 232, 235, 242, 245, 325, 468, 484, 492], "cool": [87, 435, 467, 468, 479, 480], "inl": [87, 89, 120], "16": [87, 113, 120, 150, 152, 210, 217, 238, 325, 326, 329, 339, 347, 348, 369, 454, 461, 468, 470, 473, 477, 479, 480, 488], "38241": [87, 120], "mceligot": 87, "donald": 87, "swank": 87, "david": 87, "cottl": 87, "l": [87, 89, 90, 94, 101, 110, 113, 133, 134, 139, 164, 285, 304, 318, 385, 402, 454, 461, 476, 498], "valentin": 87, "francisco": 87, "348": [87, 238, 492], "2016": [87, 168], "web": [87, 90, 110, 133, 162, 168, 172, 173, 430, 436], "doi": [87, 90, 102, 110, 132, 133, 162, 168, 172, 173, 468], "2172": [87, 90, 110, 133, 162, 168, 172, 173], "1330693": 87, "osti": [87, 90, 110, 162, 168, 173], "biblio": [87, 90, 110], "10p": 87, "201114e": [87, 109, 152], "dl": [87, 89, 90, 94, 101, 113, 134, 139], "l0": [87, 90, 310, 318, 476], "captur": [88, 159, 160, 164, 196, 233, 235, 254, 285, 286, 308, 311, 342, 370, 433, 464, 468, 479, 484, 491], "lenntech": 88, "com": [88, 89, 91, 92, 93, 94, 95, 96, 303, 304, 339, 426, 427, 432, 439, 468, 469, 471, 500], "hf": [88, 150, 152], "htm": 88, "hastelloi": [89, 470], "invent": 89, "ornl": [89, 105, 122, 134], "molten": [89, 107, 112, 468], "fluorid": 89, "salt": [89, 111, 209, 468], "un": [89, 94, 211, 484], "n10003": 89, "hayn": 89, "h": [89, 90, 132, 136, 150, 152, 159, 168, 201, 217, 232, 276, 324, 325, 342, 479, 480, 488, 491, 492], "2052d": 89, "2020": [89, 470, 480], "haynesintl": 89, "brochur": 89, "corros": [89, 101, 223, 467, 476, 484], "resist": 89, "sab": 89, "sabharwal": 89, "feasibl": 89, "secondari": [89, 200, 280, 325, 342, 404, 468, 486], "exchang": [89, 162, 327, 433, 467, 480, 490], "23076": 89, "oak": [89, 105, 134], "ridg": [89, 105, 134], "laboratori": [89, 105, 134, 162, 172, 467], "oxid": [89, 102, 105, 108, 130, 134, 137, 138, 476], "hot": [89, 94, 101, 113, 285, 302, 305, 310, 311, 318, 346, 347, 402, 471, 476, 479, 480, 484, 488, 492, 493, 498], "704": 89, "871c": 89, "1600f": 89, "293": [89, 90, 133, 139, 152], "polynomi": [89, 90, 92, 93, 94, 96, 102, 134], "sixth": 89, "97": [89, 110, 150, 152, 238], "dll": [89, 94, 101, 305, 476], "academ": [90, 110, 132, 461, 475, 476], "incomplet": [90, 279, 342, 476], "ferrit": 90, "martensit": 90, "stainless": 90, "steel": [90, 298, 479, 488], "famou": 90, "sfr": [90, 223, 468, 475, 479, 480], "swell": [90, 285, 476], "mfh": 90, "handbook": [90, 98, 107, 133, 139], "hofman": [90, 133], "billon": 90, "koenig": 90, "kramer": 90, "lambert": 90, "leibowitz": [90, 110], "orechwa": 90, "pedersen": 90, "porter": 90, "tsai": 90, "wright": 90, "2019": [90, 164, 468, 470, 479], "1506477": 90, "1050": 90, "ref": [90, 109, 112, 134, 170, 235, 342, 369], "eq": [90, 132, 196], "sped": [90, 471], "austenit": 91, "chromium": [91, 150], "superalloi": 91, "specialmet": [91, 92, 93, 94, 95, 96], "technic": [91, 216, 342, 469, 500], "bulletin": 91, "617": [91, 238, 471], "certainti": 91, "900": [92, 134, 139, 452, 454, 491, 494], "800": [92, 94, 139, 238, 452, 470], "20alloi": [92, 96], "20600": 92, "294": [92, 93, 94, 96, 134, 152, 210, 238], "equat": [92, 93, 96, 111, 166, 232, 259, 324, 398, 428, 439, 464, 476, 498], "thermalcond": [92, 93, 96], "cte": [92, 93, 96], "strain": [92, 93, 96, 223, 467, 468, 484, 492], "linexpperc": [92, 93, 96], "2nd": [92, 93, 96, 455], "divid": [92, 93, 96, 285, 308, 355, 377, 397, 454, 467, 483, 484], "differenti": [92, 93, 96, 247, 307, 436], "722e": 92, "303e": 92, "linexp": [92, 93, 96], "221": [93, 152, 238, 477], "1093": [93, 96], "927": 93, "982": [93, 96, 238], "asset": [93, 94, 95], "625": [93, 238], "083e": 93, "125e": 93, "incoloi": [94, 470], "800h": 94, "n08800": 94, "n08810": 94, "sm": [94, 150, 152, 240], "smc": 94, "pe16": 95, "nimon": 95, "x750": 96, "18": [96, 107, 150, 152, 159, 238, 298, 329, 473, 488], "156": [96, 152, 210, 238], "871": 96, "20x": 96, "750": 96, "8378e": 96, "056e": 96, "600": [97, 122, 128, 129, 134, 139, 238, 294, 297, 298, 300, 336, 452, 454, 488, 493], "1700": 97, "1500": [97, 109, 110, 134], "volumetr": [97, 98, 112, 324, 476, 484, 486], "ON": [97, 98], "measur": [97, 98, 120, 232, 279, 318, 334, 336, 387, 438, 467, 497], "sobolev": [97, 98], "nucl": [97, 98], "mat": [97, 98, 152, 289, 308, 342, 347, 461], "362": [97, 98, 238], "2007": [97, 98], "235": [97, 98, 105, 131, 149, 151, 152, 181, 238, 240, 285, 308, 459, 460, 473, 480], "247": [97, 98, 152, 238], "bismuth": [98, 150], "eutect": 98, "coolant": [98, 101, 255, 280, 285, 302, 305, 308, 311, 319, 324, 325, 342, 346, 348, 402, 447, 452, 454, 462, 468, 473, 475, 476, 479, 483, 484, 486, 488], "superfast": 98, "400": [98, 139, 238, 347, 452], "visc": 98, "1100": [98, 139], "pa": [98, 136, 150, 152, 483, 484, 486], "onlin": [98, 430], "oecd": 98, "nea": [98, 480], "scienc": [98, 160], "nea6195": 98, "ccapac": 98, "accuraci": 98, "whenev": [99, 200, 233, 279, 339, 384, 435, 475], "irradi": [99, 105, 134, 151, 223, 232, 467, 476, 484, 486], "tritium": 99, "li6": [99, 152, 477], "li_wt_frac": [99, 488], "li6_wt_frac": [99, 488], "180c": 99, "923": [100, 471], "1390": 100, "cm3": [100, 308, 389], "mcgonig": 100, "templ": 100, "univers": [100, 164, 247, 308, 386, 468, 492], "1961": 100, "bulk": [101, 291, 342, 483, 484], "massfrac": [101, 242, 308, 389, 461, 476], "theoreticaldensityfrac": 101, "realiti": [101, 467, 468, 488], "solid": [101, 130, 149, 150, 159, 223, 232, 285, 302, 303, 305, 310, 318, 325, 347, 476, 477, 479, 484, 488], "due": [101, 105, 164, 166, 223, 232, 247, 249, 254, 279, 285, 305, 308, 311, 319, 337, 364, 438, 468, 471, 484, 486], "manufactur": 101, "programmat": [101, 211, 247, 289, 412, 451, 465, 466, 475, 481, 493], "getter": [101, 324, 336, 342, 351, 358], "privat": [101, 172, 216, 308, 378, 432, 439, 440, 468], "compat": [101, 172, 216, 240, 281, 286, 305, 339, 394], "deep": [101, 308, 348, 488], "generationnum": [101, 308, 348], "includemateri": [101, 308, 348], "predic": [101, 152, 308, 342, 348], "typespec": [101, 216, 236, 281, 285, 305, 308, 325, 342, 348], "exactmatch": [101, 308, 342, 348], "paramstoappli": [101, 305, 308, 338, 339], "previous": [101, 217, 308, 399, 470, 486, 488], "dt": [101, 136, 475, 484], "t0": [101, 305], "methodologi": [101, 196, 232, 310, 468, 475, 498], "prevtempinc": 101, "newtempinc": 101, "temperatureinc": [101, 302, 305, 310, 452, 485, 494], "temperatureincnew": 101, "nucnam": [101, 151, 152, 193, 196, 197, 235, 242, 251, 252, 305, 308, 389, 402, 446, 454, 461], "thrown": [101, 296, 367], "nuclidenam": [101, 291, 305, 308], "massfract": [101, 305, 308], "u238": [101, 151, 152, 160, 298, 454, 459, 473, 476, 477, 480, 488], "likewis": [101, 149], "accordingli": [101, 305, 334, 468, 488, 489], "achiev": [101, 163, 200, 467, 486, 492], "targetdens": 101, "tempguessinc": 101, "celciu": [101, 136, 232, 305, 475], "unitless": 101, "cm": [101, 150, 174, 175, 193, 196, 216, 232, 242, 247, 281, 285, 290, 302, 303, 304, 305, 307, 308, 310, 324, 327, 328, 329, 331, 332, 333, 334, 342, 353, 389, 438, 439, 456, 457, 473, 476, 478, 479, 483, 484, 485, 486, 488, 492, 493], "agre": [101, 308, 468, 479], "inputheightsconsideredhot": [101, 310, 318, 347, 471, 492], "psuedodens": 101, "driven": [101, 236, 286, 478], "forward": [101, 175, 279, 356, 402], "dep": 101, "dp": [101, 136, 150], "rate": [101, 166, 196, 200, 247, 249, 251, 252, 305, 308, 324, 339, 433, 451, 464, 465, 466, 470, 475, 481, 483, 484, 485, 486, 488, 492, 497], "micron": 101, "strength": 101, "mpa": 101, "propnam": 101, "expandfissionproduct": [101, 308], "pu239": [101, 105, 149, 152, 160, 166, 197, 298, 308, 473, 480, 488], "sum": [101, 152, 160, 166, 193, 196, 198, 235, 242, 245, 285, 298, 308, 346, 385, 402, 415, 436, 473, 478, 488], "frac": [101, 132, 196, 232, 235, 247, 285, 305, 308, 324, 396, 409, 461, 476, 479, 485, 488, 497, 498], "altern": [101, 160, 184, 197, 213, 216, 247, 336, 394, 402, 433, 436, 471, 475, 478, 488], "critic": [101, 136, 162, 236, 285, 303, 468, 483, 486, 491, 492], "million": [101, 397], "nuc": [101, 151, 152, 170, 193, 242, 305, 308, 389, 477], "fall": [101, 223, 310, 432, 440, 468, 495], "min": [101, 221, 308, 334, 471, 486], "mint": 101, "maxt": 101, "convienc": 101, "rhocp": 101, "right": [101, 208, 211, 247, 292, 295, 308, 311, 312, 331, 332, 333, 334, 367, 386, 398, 400, 402, 412, 423, 433, 464, 491, 497, 498], "downstream": [101, 281, 342, 471], "embrac": 101, "deprec": [101, 151, 279, 292, 326, 343, 358, 471, 492], "densityfrac": 101, "fill": [101, 135, 149, 152, 232, 282, 285, 292, 302, 308, 312, 313, 336, 342, 454, 471, 475, 479, 480, 484, 491], "300": [101, 134, 476], "uniti": 101, "parameter": [101, 455, 488], "magnesiumoxid": 102, "273": [102, 108, 134, 137, 152, 238], "milo": 102, "durand": 102, "journal": [102, 132, 232], "297": [102, 238], "1936": 102, "1063": 102, "174539": 102, "3rd": [102, 329, 331, 332, 343, 483], "moli": 104, "ceram": [105, 130, 134], "thermophys": [105, 111, 134, 136, 139, 209], "popov": [105, 134], "tm": [105, 134, 150, 151, 152], "2000": [105, 109, 110, 122, 134, 139, 476], "351": [105, 134], "rsicc": [105, 134], "fmdp": [105, 134], "tm2000": [105, 134], "inherit": [105, 148, 152, 235, 280, 282, 302, 340, 342, 358, 439, 475, 488], "leav": [105, 152, 217, 252, 305, 308, 364, 473, 480, 488], "unchang": [105, 305, 364, 392, 471, 491], "u235_wt_frac": [105, 131, 132, 133, 134, 294, 479, 488], "mass_frac_pu02": 105, "massfracpuo2": 105, "puo2": 105, "pu238": [105, 152, 298, 473, 480, 488], "238": [105, 131, 151, 152, 238, 240, 285, 308, 459, 464, 477, 480], "0495599": 105, "239": [105, 131, 151, 152, 240, 464, 477], "0521634": [105, 151], "pu240": [105, 152, 298, 473, 480, 488], "240": [105, 152, 238, 240, 477], "0538135": 105, "pu241": [105, 152, 298, 473, 480, 488], "241": [105, 152, 238, 240, 477], "0568515": 105, "pu242": [105, 152, 166, 298, 473, 480, 488], "242": [105, 152, 477], "0587426": 105, "am241": [105, 151, 152, 286, 298, 473, 480, 488], "0568291": 105, "0439299": [105, 149, 151], "0507882": [105, 151], "oxygen": [105, 130, 150, 291, 308, 389, 480, 488], "9994": [105, 130, 238], "joyo": [105, 468], "pu": [105, 131, 132, 150, 240, 285, 308, 342, 389, 484], "76": [105, 150, 152, 238], "82": [105, 150, 152, 210, 238, 476], "23": [105, 150, 152, 238, 259, 329, 346, 426, 471, 473], "66": [105, 150, 152, 210, 238], "64": [105, 134, 150, 152, 210, 238, 325, 339, 394, 469, 480, 500], "326469": 105, "22": [105, 109, 113, 136, 150, 152, 238, 298, 329, 471, 473, 477, 492], "99": [105, 122, 150, 152, 198, 210, 238, 240, 398, 492], "77": [105, 150, 152, 163, 238], "237": [105, 152, 210, 238, 477], "359511": 105, "upu": 105, "70766": 105, "31": [105, 130, 150, 152, 210, 238, 470], "9988": [105, 130], "269": [105, 152], "70646": 105, "881357": 105, "177": [105, 152, 210, 238, 473, 475, 478, 479, 482], "156000": 105, "823": 105, "725356": 105, "001": [105, 313, 342, 355, 398, 470, 473, 488], "074256": 105, "000156": 105, "7682": 105, "119839": 105, "1923": 105, "029999": 105, "0266": 105, "004150": 105, "0055": 105, "000858": 105, "0064": 105, "000998": 105, "2299": 105, "195": [105, 152, 238], "633404": 105, "166759": 105, "7701": 105, "558597": 105, "118643": 105, "melt": [105, 109, 128, 129, 130, 133, 134], "liquidu": [105, 476], "tl": [105, 150, 152, 157], "solidu": [105, 476], "3120": [105, 134], "388": 105, "655": [105, 238], "336": [105, 238], "burnup": [105, 160, 171, 209, 216, 217, 223, 235, 236, 240, 247, 254, 285, 308, 385, 398, 404, 455, 467, 471, 483, 484, 485, 486, 488, 489, 491, 492], "niobium": [106, 150], "zirconium": [106, 131, 139, 150, 151, 480, 488], "foust": 107, "nak": 107, "gordon": 107, "breach": 107, "1972": 107, "63": [107, 150, 152, 238], "1250": 107, "scandium": [108, 150], "1573": [108, 137], "scandia": 108, "invers": [108, 137, 398], "rare": [108, 137, 159, 340, 358], "earth": [108, 137], "silicon": [109, 150], "808538e": [109, 152], "cumul": [109, 208, 247, 310, 336, 339, 385, 425, 471, 491, 492], "munro": 109, "phy": 109, "chem": 109, "26": [109, 149, 150, 152, 238, 285, 480], "1997": [109, 238], "51": [109, 150, 152, 238], "math": [109, 164, 199, 216, 396, 398, 415, 423, 427, 439, 448, 455, 456, 464, 471, 475], "exp": 109, "00527": 109, "0e": [109, 454, 480, 497], "rho0": 109, "tc0": 109, "0e3": 109, "1110": 109, "425": [109, 210], "003": [109, 342, 355, 473, 491], "52000": 109, "24e": 109, "437": 109, "298": [109, 130, 133, 134, 139], "bring": [110, 132, 279, 390, 410, 433, 468, 475, 479, 488], "anl": [110, 133, 139, 151, 172, 335, 467, 468, 473, 475, 478, 479, 482], "95": [110, 150, 152, 172, 210, 238, 491], "fink": 110, "thermodynam": 110, "vapor": [110, 136], "1995": [110, 172, 232], "94649": 110, "gxndli": 110, "webview": 110, "85": [110, 150, 152, 238], "2230": [110, 238], "371": [110, 238], "3715": 110, "chlorid": 111, "nabr": 111, "naf": 111, "rai": [111, 386], "attenu": 111, "techniqu": [111, 324, 488], "334": 112, "430": [112, 347], "sulfur_density_frac": [112, 488], "espeau": 112, "ceolin": 112, "508k": 112, "1382": 113, "tungsten": [113, 150, 470], "refractori": 113, "roll": [113, 483], "bureau": 113, "naval": 113, "weapon": 113, "n600": 113, "59530": 113, "southern": 113, "institut": 113, "456": 113, "574": 113, "702": 113, "840": 113, "56": [113, 150, 152, 238, 473, 477], "846": [113, 210, 471], "948": [113, 210], "89": [113, 150, 152, 210, 238, 464], "1023": 113, "1146": 113, "78": [113, 150, 152, 238, 491], "203": [113, 152, 238], "253": [113, 152, 232, 238], "303": 113, "342": [113, 210], "366": 113, "421": [113, 232, 238], "468": [113, 238], "504": [113, 238], "tabular": 113, "21c": 113, "1966": 113, "viii": [113, 159], "appendix": 113, "181": [113, 152, 238], "test_canaccessclassesfrompackag": [115, 116], "test_packageclassesequalmoduleclass": [115, 116], "test_pseudodens": [115, 117, 119, 121, 122, 123], "test_heatcapac": [115, 117, 121, 122, 123], "test_thermalconduct": [115, 117, 122], "test_massfrac": [115, 117, 127], "test_validrang": [115, 117], "mat_class": [115, 118, 119, 120, 121, 122, 123, 124, 125, 126], "test_theoretical_pseudodens": [115, 118, 125], "test_propertyvalidtemperatur": [115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "test_linearexpansionperc": [115, 120, 122, 125], "test_dens": [115, 120, 122, 126, 344, 347], "defaultmassfrac": [115, 121], "test_lithium_material_modif": [115, 121], "test_meltingpoint": [115, 121, 122, 123], "test_boilingpoint": [115, 121], "test_material_initi": [115, 122], "test_findmateri": [115, 122], "test_namespac": [115, 122, 409], "test_poros": [115, 122], "test_getcorrosionr": [115, 122], "test_getmassfracpuo2": [115, 122], "test_getmolfracpuo2": [115, 122], "test_getmeltingpoint": [115, 122], "test_applyinputparam": [115, 122], "test_specificvolumeliquid": [115, 122], "test_enthalpi": [115, 122], "test_linearexpans": [115, 122], "test_adjustmassenrich": [115, 122, 344, 347], "test_gettemperatureatdens": [115, 122], "test_getdensityexpansion3d": [115, 122], "test_removenucmassfrac": [115, 122], "test_densitytimesheatcapactii": [115, 122], "test_gettempchangefordensitychang": [115, 122], "test_dupl": [115, 122, 126, 243, 245, 344, 345, 346, 369, 375], "test_setdefaultmassfrac": [115, 122], "test_volumetricexpans": [115, 122], "test_dynamicvisc": [115, 122], "test_densityneverchang": [115, 122], "test_getchildren": [115, 122, 344, 348], "test_getchildrenwithflag": [115, 122], "test_iconel800_linearexpans": [115, 122], "test_00_setdefaultmassfrac": [115, 122], "test_01_linearexpansionperc": [115, 122], "test_02_linearexpans": [115, 122], "test_03_pseudodens": [115, 122], "test_polyfitthermalconduct": [115, 122], "test_polyfitheatcapac": [115, 122], "test_polyfitlinearexpansionperc": [115, 122], "test_nicklecont": [115, 122], "test_linearexpansionhott": [115, 122], "test_meancoefficientthermalexpans": [115, 122], "test_00_applyinputparam": [115, 122], "test_01_pseudodens": [115, 122], "test_02_linearexpansionperc": [115, 122], "baseinput": [115, 122], "loadassembli": [115, 122], "test_class1class2_class1_wt_frac": [115, 122], "test_class1class2_classx_custom_isotop": [115, 122], "test_sulfur_density_frac": [115, 124], "test_ispickl": [115, 126, 344, 349, 352], "test_td": [115, 126], "test_cach": [115, 126], "test_densitykgm3": [115, 126], "test_pseudodensitykgm3": [115, 126], "test_water_at_freez": [115, 127], "test_water_at_boil": [115, 127], "test_water_at_critcalpoint": [115, 127], "test_validatenam": [115, 127], "superclass": 116, "verif": [117, 127, 439, 467], "300k": 117, "ratio": [117, 160, 281, 285, 342, 385, 387, 464, 480, 484, 486, 492], "_material_test": [118, 119, 121, 122, 123, 124, 125], "0759": 121, "discover": [122, 471], "1723": 122, "efg": 122, "pseudo": [122, 126, 154, 436, 471, 494], "linearli": [122, 385], "_mixtur": 122, "nickl": 122, "spec": 122, "nnuclid": [122, 294, 298, 300], "ncustom": [122, 298], "customisotopic1": 122, "customisotopic2": 122, "nblock": [122, 294, 297, 298, 300], "block_fuel": [122, 294, 300, 479, 488], "fuel1": [122, 294, 300, 312, 325, 488], "component_fuel_fuel1": [122, 294, 300, 488], "tinput": [122, 294, 297, 298, 300, 302, 303, 304, 305, 307, 318, 347, 348, 454, 462, 479, 480, 488], "thot": [122, 294, 297, 298, 300, 302, 303, 304, 305, 307, 318, 344, 347, 348, 454, 462, 473, 479, 480, 488], "ip": [122, 285, 294, 297, 298, 300, 303, 305, 347, 348, 454, 462, 479, 488, 493], "mult": [122, 216, 285, 289, 294, 297, 298, 300, 303, 304, 305, 307, 347, 348, 454, 462, 479, 480, 485, 488, 493], "op": [122, 203, 285, 294, 297, 298, 300, 302, 303, 304, 305, 326, 347, 348, 376, 454, 462, 479, 488, 493], "fuel2": [122, 294, 300, 312, 325, 488], "component_fuel_fuel2": [122, 294, 300, 488], "nassembli": [122, 294, 297, 298, 300], "assembly_a": [122, 294, 297, 298, 300, 488], "ic": [122, 290, 294, 297, 298, 300, 462, 479, 488], "height": [122, 171, 221, 281, 285, 286, 288, 294, 296, 297, 298, 300, 303, 305, 307, 308, 310, 318, 324, 329, 334, 342, 345, 346, 347, 348, 384, 392, 398, 462, 470, 471, 473, 479, 480, 484, 488, 492], "materialmodif": [122, 280, 286, 287, 300], "picklabl": [126, 377], "iapw": [127, 136], "if97": [127, 136], "0c": 127, "relguid": [127, 136], "supsat": [127, 136], "100c": 127, "096k": 127, "challeng": [128, 129, 130, 163, 291, 334, 342, 440, 468], "iaea": [128, 129, 130, 209], "tecdoc": [128, 129, 130], "1450": [128, 129, 130], "2005": [128, 129, 130], "pub": [128, 129, 130], "mtcd": [128, 129, 130], "te_1450_web": [128, 129, 130], "u233": [128, 152, 477], "u233_wt_frac": [128, 488], "te": [128, 129, 130, 150, 152, 492], "1223": [130, 238], "232": [130, 131, 152, 477], "030806": 130, "264": [130, 152, 238], "029606": 130, "298k": 130, "zirc": 131, "233": [131, 152, 238, 477], "zr_wt_frac": [131, 132, 300, 488], "notion": [132, 247], "10zr": [132, 308], "chandrabhanu": 132, "incorrect": [132, 336, 471], "basak": 132, "prasad": 132, "kamath": 132, "prabhu": 132, "rich": [132, 203, 430, 468, 494], "480": 132, "2009": [132, 468], "857": 132, "862": [132, 238], "issn": 132, "0925": 132, "8388": 132, "1016": [132, 468], "jallcom": 132, "02": [132, 134, 152, 238, 281, 298, 433, 446, 455, 456, 462, 463, 465, 470, 471, 473, 477, 488, 496], "077": 132, "aaafuel": 133, "kim": 133, "aaa": [133, 139, 486], "2003": [133, 480], "822554": 133, "01591t": 133, "907": 133, "215": [133, 152, 477], "1600": [133, 139], "255": [133, 152, 238], "nse": 133, "gl": 133, "07": [133, 152, 160, 238, 433, 455, 462, 463, 473, 477, 492], "27": [134, 150, 152, 238, 470, 471, 473], "302": 134, "008463": 134, "87410000": 134, "548": 134, "68": [134, 150, 152, 238], "18531": 134, "3100": 134, "3123": 134, "3000": 134, "dioxid": 134, "nonequilibrium": 134, "molecular": [134, 308], "motoyama": 134, "60": [134, 150, 152, 213, 238, 281, 285, 332, 347, 386, 398, 483, 484, 486], "juli": 134, "1999": 134, "92": [134, 149, 150, 152, 210, 238, 477], "380289e": [134, 152, 477], "599930e": [134, 152], "1200": [134, 139, 452], "1800": [134, 139], "2100": 134, "2700": [134, 238], "991": 134, "864": 134, "768": 134, "567": 134, "073": 134, "891": [134, 238], "847": 134, "718": 134, "u234": [134, 152, 291, 298, 473, 477, 488], "curv": [134, 204, 398, 471], "faith": 136, "supplementari": 136, "ordinari": 136, "substanc": 136, "1992": 136, "steam": 136, "satur": 136, "industri": [136, 468, 475], "h2o": [136, 159], "007976e": [136, 152], "sr1": 136, "86": [136, 150, 152, 238, 491], "pressur": [136, 150, 209, 223, 276, 336, 428, 468, 483, 484, 486, 488], "096": 136, "322": [136, 238], "064": 136, "22064000": 136, "1000": [136, 139, 152, 249, 436, 473, 478, 479, 483, 488], "5453657571674064": 136, "65134998e": 136, "08": [136, 152, 238, 433, 454, 455, 462, 463, 470, 471, 473], "2690": 136, "66631": 136, "127": [136, 152, 210, 238, 456, 479], "287297": 136, "003439": 136, "981825814": 136, "alpha": [136, 152, 159, 160, 162, 251, 454, 459, 461, 464, 476, 484, 498], "1135": [136, 238], "905627715": 136, "phi": [136, 247], "2319": 136, "5246": 136, "1e": [136, 139, 164, 208, 247, 363, 389, 402, 448, 454, 463, 492, 497], "06": [136, 139, 152, 238, 242, 298, 433, 446, 455, 462, 463, 471, 473, 477], "wrt": 136, "quantiti": [136, 162, 285, 324, 339, 347, 402, 404, 483], "kgk": 136, "yttrium": [137, 150], "yttria": 137, "zinc": [138, 150], "1491": 138, "28": [138, 150, 152, 210, 238, 473], "polycrystallin": 138, "devic": 138, "technologi": [138, 232, 468], "45803": 139, "touloukian": 139, "kirbi": 139, "taylor": 139, "desai": 139, "ifi": [139, 402], "plenum": [139, 232, 280, 281, 285, 325, 345, 346, 467, 473, 478], "washington": 139, "1975": 139, "700": [139, 238, 452], "1136": [139, 471], "99999": 139, "1137": 139, "1400": 139, "7e": [139, 298, 454], "9e": [139, 454], "6e": [139, 454], "8e": [139, 454], "2e": [139, 156, 454], "5e": [139, 251, 252, 438, 454], "03e": 139, "mk": 139, "upgrad": [141, 247, 285, 471, 480, 488], "invest": [141, 468], "thousand": [141, 159, 342, 433, 468, 483, 484], "seriou": [141, 468, 475, 491], "analyst": [141, 252, 309, 435, 468, 473, 492], "strongli": [141, 308, 432, 494], "oftentim": [141, 291, 491], "gb": [141, 468], "cpu": [141, 148, 436, 468, 488, 489, 491, 492], "week": [141, 468], "monetari": 141, "tempor": 141, "meanwhil": [141, 468], "fix": [141, 149, 162, 167, 203, 236, 247, 324, 339, 346, 398, 432, 439, 440, 492], "eas": [141, 305, 468, 470], "train": 141, "cognit": 141, "burden": [141, 369, 488], "background": 141, "mainstream": 141, "word": [141, 308, 309, 327, 334, 348, 369, 404, 439], "spreadsheet": [141, 468], "test_m0_1_6": [141, 145], "testmigr": [141, 145, 146], "test_migration_bas": [141, 145], "testmigrationbas": [141, 145, 147], "testsettingsmigr": [141, 145, 147], "fromvers": [141, 142, 143, 144], "tovers": [141, 142, 143, 144], "classic": [142, 479], "_applytostream": 142, "center": [143, 216, 217, 281, 285, 304, 307, 308, 311, 312, 329, 332, 333, 334, 342, 345, 385, 386, 396, 456, 464, 471, 473, 475, 480, 484, 489], "na23": [143, 152, 454, 468, 473], "na": [143, 150, 152, 251, 252, 259, 291, 308, 346, 454, 473, 478, 488], "mn55": [143, 152, 473], "he4": [143, 152, 160, 473], "he": [143, 150, 152, 473, 478, 484], "w182": [143, 152, 298, 473], "o16": [143, 152, 291, 480, 488], "al27": [143, 152, 159], "n14": [143, 152], "w183": [143, 152, 298, 473], "w184": [143, 152, 298, 473], "w186": [143, 152, 298, 473], "alphanumer": [144, 470], "ring": [144, 216, 217, 236, 285, 303, 307, 311, 312, 319, 327, 328, 329, 332, 333, 334, 335, 342, 352, 355, 396, 413, 447, 448, 470, 486, 489, 491, 492, 494], "a2003b": 144, "test_locationlabelmigr": [145, 146], "test_basic_valid": [145, 147], "test_loadstreamfrompath": [145, 147], "locationlabel": 146, "mpi_comm": [148, 436], "bcast": [148, 201, 385], "wait": [148, 201, 252, 436, 440, 475], "sync": [148, 216, 379, 436], "sit": [148, 160, 201, 217, 342, 436, 464, 467], "someinst": 148, "comm_world": 148, "interestingli": 148, "strong": [148, 223, 240], "discourag": [148, 308], "sign": [148, 200, 308, 432, 438], "allcpuresult": 148, "objectsforallcorestoit": 148, "len": [148, 152, 308, 397, 402, 436, 454, 457, 458, 461, 477, 478, 494], "clase": 148, "numpernod": 148, "mpi_siz": [148, 259], "workload": 148, "spawn": [148, 252, 470], "varaibl": 148, "think": [148, 308, 440, 470, 494], "dsitributionact": 148, "amongst": [148, 336, 488], "skipinterfac": 148, "minim": [149, 217, 234, 285, 336, 379, 391, 398, 439, 464, 469, 479, 500], "mainli": [149, 236, 279], "three": [149, 152, 164, 179, 286, 307, 308, 334, 365, 398, 475, 479, 480, 488, 491], "byz": [149, 150, 477], "ironfromz": 149, "ironfromnam": 149, "bynam": [149, 150, 152, 159, 446, 453, 454, 461, 477], "iron": [149, 150, 151, 477, 488], "ironfromsymbol": 149, "bysymbol": [149, 150, 298, 477], "lower": [149, 216, 236, 280, 281, 285, 290, 308, 310, 325, 331, 334, 335, 342, 369, 471, 483], "upper": [149, 150, 166, 197, 216, 238, 247, 280, 281, 285, 310, 325, 331, 334, 335, 386, 492], "truli": [149, 385, 468, 484], "ever": [149, 325, 346, 348, 356, 439, 468, 475, 488], "118": [149, 150, 152, 238], "fe56": [149, 152, 159, 459, 473], "nist": [149, 151, 152], "cgi": 149, "bin": [149, 240, 312, 313, 328, 415, 469, 500], "stand_alon": 149, "pl": 149, "human": [149, 152, 326, 368], "readabl": [149, 152, 279, 368, 439], "capit": [149, 152, 235, 438, 439, 488], "letter": [149, 163, 197, 235, 285, 386, 401, 439, 479, 484, 488], "charact": [149, 152, 163, 236, 285, 287, 426, 439, 440, 470, 483, 488], "tradition": [149, 215], "legaci": [149, 233, 343, 468], "Of": [149, 160, 216, 309, 468, 473, 478, 480], "reserv": [149, 236, 439], "aa": [149, 161, 170, 197, 235, 236, 254, 342, 348, 459, 460], "ab": [149, 196, 235, 285, 308, 342, 473, 475, 484], "za": 149, "pu39": [149, 285], "along": [149, 152, 163, 209, 236, 247, 278, 285, 308, 309, 310, 318, 324, 325, 331, 363, 364, 385, 398, 433, 435], "bylabel": [149, 152, 477], "softwar": [149, 152, 162, 433, 439, 467, 468, 469, 479, 492, 500], "mcnp": [149, 152, 159, 240, 279, 285, 312, 342, 389, 398, 409, 428, 445, 449, 466, 471, 475, 481, 492], "serpent": [149, 152, 200, 236, 240, 492], "mc2": [149, 151, 152, 156, 166, 168, 170, 173, 196, 200, 240, 244, 254, 285, 399, 433, 468, 492], "incorpor": [149, 279, 491], "94": [149, 150, 151, 152, 210, 238, 471], "tinfromnam": 149, "sn112": [149, 152], "tinfromlabel": 149, "tinfrommcc2id": 149, "sn1125": 149, "tinfrommcc3id": 149, "sn1127": 149, "fulfil": 149, "ll": [149, 251, 252, 281, 334, 335, 436, 469, 473, 475, 478, 479, 489, 500], "test_el": [149, 153], "testel": [149, 153, 154], "test_nucdirectori": [149, 153], "testnucdirectori": [149, 153, 155], "test_nuclidebas": [149, 153], "testnuclid": [149, 153, 156], "testaaazzzsid": [149, 153, 156], "test_thermalscatt": [149, 153], "buildblockwithtsl": [149, 153, 157], "testthermalscatt": [149, 153, 157], "getnuclidethermalscatteringdata": [149, 153, 157], "test_transmut": [149, 153], "randomstr": [149, 153, 158], "transmutationtest": [149, 153, 158], "decaymodetest": [149, 153, 158], "alkali_met": [149, 150, 477], "alkaline_earth_met": [149, 150], "nonmet": [149, 150], "transition_met": [149, 150], "post_transition_met": [149, 150], "metalloid": [149, 150], "halogen": [149, 150], "noble_ga": [149, 150], "lanthanid": [149, 150], "actinid": [149, 150, 242, 291, 308, 464, 488], "isnaturallyoccur": [149, 150, 154, 477], "getdatabasenam": [149, 152], "getdecai": [149, 152], "getmcc2id": [149, 152], "getmcc3id": [149, 152], "getserpentid": [149, 152], "fissil": [149, 152, 179, 235, 281, 308, 473, 483, 484, 486, 488, 492, 499], "spontaneous_fiss": [149, 152], "getmcnpid": [149, 152], "getaaazzzsid": [149, 152], "getendfmatnum": [149, 152], "getsubjectnuclidebas": [149, 159], "getpreferredproduct": [149, 160], "outlin": [150, 152, 386, 438, 494], "gaseou": [150, 242, 471, 492], "stp": [150, 245], "hydrogen": [150, 157, 480], "helium": 150, "nitrogen": 150, "fluorin": 150, "ne": [150, 151, 152, 308], "neon": [150, 151], "chlorin": 150, "argon": 150, "36": [150, 152, 238], "krypton": [150, 402], "xe": [150, 152, 240, 402], "54": [150, 152, 238], "xenon": [150, 402, 491], "rn": 150, "radon": 150, "og": 150, "oganesson": 150, "classifi": [150, 308], "ac": [150, 159, 478], "actinium": 150, "90": [150, 152, 238, 285, 308, 386, 397, 455, 468, 479, 480, 491], "91": [150, 152, 210, 238], "protactinium": [150, 154], "np": [150, 160, 251, 252, 259, 308, 398, 454, 458, 461, 464, 473, 475, 476, 478], "93": [150, 152, 238, 491], "neptunium": 150, "plutonium": 150, "am": [150, 240], "americium": 150, "curium": [150, 488], "bk": 150, "berkelium": 150, "cf": 150, "einsteinium": 150, "fm": 150, "fermium": 150, "md": [150, 475], "101": [150, 152, 238, 398], "mendelevium": 150, "NO": 150, "102": [150, 152, 238], "nobelium": 150, "lr": 150, "103": [150, 152, 238, 457, 465], "lawrencium": 150, "num": [150, 208, 285, 345, 433, 455], "aluminium": 150, "phosphoru": 150, "32": [150, 152, 238, 325, 339, 394, 468, 473, 479], "37": [150, 152, 210, 238], "titanium": 150, "ti": [150, 152, 332, 333, 438, 464, 476], "vanadium": 150, "34": [150, 152, 238], "manganes": 150, "38": [150, 152, 238, 473, 479], "cobalt": 150, "co": [150, 152, 455, 469, 488, 500], "29": [150, 152, 238], "zn": [150, 152], "gallium": 150, "germanium": 150, "ge": [150, 152], "33": [150, 152, 175, 210, 238, 249, 454], "arsen": 150, "AS": [150, 152, 163, 468, 479], "selenium": 150, "se": [150, 152], "bromin": 150, "br": [150, 152], "rubidium": 150, "rb": [150, 152, 163, 167], "strontium": 150, "sr": [150, 152, 426], "57": [150, 152, 238], "nb": [150, 152, 159, 446, 461, 464], "mo": [150, 152, 240, 298, 473, 478, 488, 492], "technetium": 150, "ruthenium": 150, "ru": [150, 152], "rhodium": 150, "rh": [150, 152], "palladium": 150, "pd": [150, 152, 261], "53": [150, 152, 238], "silver": 150, "ag": [150, 152, 209], "74": [150, 152, 238, 353, 479], "cadmium": 150, "cd": [150, 152, 468, 469, 475, 500], "49": [150, 152, 238], "indium": 150, "IN": [150, 152, 164, 171], "88": [150, 152, 210, 238], "tin": [150, 492], "sn": [150, 152, 162, 247], "59": [150, 152, 238], "antimoni": 150, "sb": [150, 152], "52": [150, 152, 238], "tellurium": 150, "iodin": 150, "barium": 150, "ba": [150, 152, 235], "lanthanum": 150, "la": [150, 152, 159, 162], "58": [150, 152, 238, 336], "cerium": 150, "ce": [150, 152], "praseodymium": 150, "pr": [150, 152, 432, 439, 471], "neodymium": 150, "nd": [150, 152, 160, 259, 298], "61": [150, 152, 210, 238], "promethium": 150, "pm": [150, 338], "62": [150, 152, 238], "samarium": 150, "europium": 150, "eu": [150, 152], "gadolinium": 150, "gd": [150, 152], "65": [150, 152, 235, 238], "terbium": 150, "tb": [150, 152], "dysprosium": 150, "dy": [150, 152], "holmium": 150, "ho": [150, 152], "erbium": 150, "er": [150, 152], "69": [150, 152, 210, 238], "thulium": 150, "70": [150, 152, 238, 346, 397, 478, 491], "ytterbium": 150, "yb": [150, 152], "71": [150, 152, 238, 473], "lutetium": 150, "lu": [150, 152], "72": [150, 152, 238, 491], "ta": [150, 152], "75": [150, 152, 210, 238, 479], "rhenium": 150, "osmium": 150, "iridium": 150, "ir": [150, 152], "platinum": 150, "pt": [150, 152], "79": [150, 152, 210, 238, 488], "gold": [150, 426], "au": [150, 152], "mercuri": 150, "hg": [150, 152], "81": [150, 152, 238], "thallium": 150, "pb": [150, 152, 279, 369, 379], "bi": [150, 152, 436], "84": [150, 152, 238, 477], "polonium": 150, "po": [150, 285, 328, 329, 332, 334, 335, 342, 352, 470, 494], "astatin": 150, "AT": [150, 169], "87": [150, 152, 238, 477], "francium": 150, "fr": 150, "radium": 150, "ra": [150, 156], "104": [150, 152, 210, 238], "rutherfordium": 150, "rf": 150, "105": [150, 152, 210, 238], "dubnium": 150, "106": [150, 152, 238], "seaborgium": 150, "sg": 150, "107": [150, 152, 238, 458, 465], "bohrium": 150, "bh": 150, "108": [150, 152, 238], "hassium": 150, "109": [150, 152, 238], "meitnerium": 150, "mt": [150, 473, 499], "110": [150, 152, 232, 238, 347, 397], "darmstadtium": 150, "111": [150, 152, 238], "roentgenium": 150, "rg": 150, "112": [150, 152, 238], "copernicium": 150, "cn": 150, "113": [150, 152, 238], "nihonium": 150, "nh": 150, "114": [150, 152, 238], "flevrovium": 150, "fl": 150, "115": [150, 152, 210, 238], "moscovium": 150, "mc": [150, 151, 152, 168, 184, 196, 247, 290, 479, 488, 491], "116": [150, 152, 210, 238], "livermorium": 150, "lv": 150, "117": [150, 152, 238], "tennessin": 150, "119": [150, 152, 238], "dummi": [150, 152, 168, 170, 173, 196, 208, 280, 289, 318, 325, 342, 346, 348, 368, 375, 436, 454, 455, 463, 473, 480], "120": [150, 152, 220, 238, 285, 312, 477], "lumpedfissionproduct": [150, 233, 239, 285, 305, 308], "lp": 150, "proton": [150, 152, 160, 251, 453, 461, 464, 477], "chemic": [150, 223, 245, 252, 308, 389, 467, 484, 486], "cut": [150, 285, 307, 312, 386, 468, 491, 492], "elem": 150, "abbrevi": [150, 151, 156, 439], "getz": 150, "elementzbysymbol": 150, "lose": [150, 152, 468], "elementsymbol": 151, "prefix": [151, 162, 163, 211, 385, 392, 439], "xstype": [151, 233, 236, 240, 252, 285, 288, 462, 484], "suffix": [151, 161, 196, 197, 254, 285, 308, 343], "u235ia": 151, "zircfb": 151, "2355": [151, 152], "ia": 151, "fb": 151, "mc2liblabel": 151, "am242": [151, 152, 235, 298], "a242": 151, "am242m": [151, 152, 156, 473], "adjustnuclid": 151, "amass": 151, "u239": [151, 152, 477], "lindhard": 151, "cutoff": [151, 387, 480, 492], "displac": [151, 155, 210, 232, 247, 468, 484, 488, 492], "specter": 151, "ii": 151, "greenwood": 151, "fpp": 151, "197": [151, 152, 238], "argonn": [151, 164, 172, 467, 468], "1985": 151, "ed": [151, 492], "ev": [151, 166, 196, 238, 459, 484, 486], "350439e": [152, 477], "hl": [152, 477], "22160758861e": [152, 477], "204000e": [152, 477], "03": [152, 238, 298, 433, 446, 449, 455, 462, 463, 471, 473, 477, 488, 492, 496], "bymcc2id": [152, 477], "bymcc3id": [152, 477], "u235_7": 152, "bymcnpid": [152, 477], "92235": [152, 446], "aaazzz": 152, "byaaazzzsid": [152, 477], "2350920": 152, "halflif": [152, 477], "000000e": [152, 477], "inf": [152, 477, 497], "998500e": 152, "007825e": 152, "500000e": 152, "04": [152, 172, 210, 242, 298, 433, 446, 449, 455, 462, 463, 465, 468, 473, 477], "014102e": 152, "016049e": 152, "887813e": 152, "027807e": 152, "035311e": 152, "608259e": 152, "h6": 152, "044943e": 152, "943469e": 152, "h7": 152, "052749e": 152, "069308e": 152, "002602e": 152, "he3": 152, "370000e": 152, "016029e": 152, "999986e": 152, "002603e": 152, "he5": 152, "012223e": 152, "040705e": 152, "he6": 152, "018889e": 152, "067000e": 152, "he7": 152, "028021e": 152, "041585e": 152, "he8": 152, "033922e": 152, "191000e": 152, "he9": 152, "043950e": 152, "he10": 152, "005240e": 152, "520792e": 152, "940038e": [152, 477], "li3": [152, 477], "030775e": [152, 477], "111100e": 152, "li4": [152, 477], "027185e": [152, 477], "li5": [152, 477], "012538e": [152, 477], "709250e": 152, "590000e": [152, 477], "015123e": [152, 477], "li7": [152, 477], "241000e": [152, 477], "016004e": [152, 477], "li8": [152, 477], "022488e": [152, 477], "399000e": 152, "li9": [152, 477], "026789e": [152, 477], "783000e": 152, "li10": [152, 477], "003548e": [152, 477], "li11": [152, 477], "104380e": [152, 477], "750000e": 152, "li12": [152, 477], "205378e": [152, 477], "li13": [152, 477], "306117e": [152, 477], "be5": 152, "040790e": 152, "be6": 152, "019726e": 152, "959106e": 152, "be7": 152, "016930e": 152, "598208e": 152, "be8": 152, "005305e": 152, "190982e": 152, "be10": 152, "001353e": 152, "765096e": 152, "be11": 152, "102166e": 152, "376000e": 152, "be12": 152, "202692e": 152, "146000e": 152, "be13": 152, "303569e": 152, "700000e": 152, "be14": 152, "404289e": 152, "350000e": 152, "be15": 152, "505346e": 152, "866168e": 152, "be16": 152, "606192e": 152, "702971e": 152, "081202e": 152, "b6": 152, "046810e": 152, "b7": 152, "029918e": 152, "695852e": 152, "b8": 152, "024607e": 152, "b9": 152, "013329e": 152, "448847e": 152, "980000e": 152, "001294e": 152, "b11": [152, 291, 473], "020000e": 152, "100931e": 152, "b12": 152, "201435e": 152, "b13": 152, "301778e": 152, "733000e": 152, "b14": 152, "402540e": 152, "250000e": 152, "b15": 152, "503110e": 152, "930000e": 152, "b16": 152, "603981e": 152, "562377e": 152, "b17": 152, "704699e": 152, "080000e": 152, "b18": 152, "805617e": 152, "b19": 152, "906373e": 152, "920000e": 152, "b20": 152, "007450e": 152, "124754e": 152, "b21": 152, "108417e": 152, "603962e": 152, "c8": 152, "037675e": 152, "509521e": 152, "c9": 152, "031036e": 152, "265000e": 152, "c10": 152, "001685e": 152, "929000e": 152, "c11": 152, "101143e": 152, "221840e": 152, "c12": [152, 159], "889000e": 152, "200000e": 152, "c13": 152, "110000e": 152, "300335e": 152, "c14": 152, "400324e": 152, "798745e": 152, "c15": 152, "501060e": 152, "449000e": 152, "c16": 152, "601470e": 152, "470000e": 152, "c17": 152, "702259e": 152, "c18": 152, "802676e": 152, "c19": 152, "903481e": 152, "630000e": 152, "c20": 152, "004032e": 152, "c21": 152, "104934e": 152, "c22": 152, "205720e": 152, "100000e": 152, "c23": 152, "306892e": 152, "400672e": 152, "n10": 152, "004165e": 152, "824951e": 152, "n11": 152, "102609e": 152, "496840e": 152, "n12": 152, "201861e": 152, "n13": 152, "300574e": 152, "979000e": 152, "963400e": 152, "400307e": 152, "n15": 152, "660000e": 152, "500011e": 152, "n16": 152, "600610e": 152, "130000e": 152, "n17": 152, "700845e": 152, "173000e": 152, "n18": 152, "801408e": 152, "190000e": 152, "n19": 152, "901703e": 152, "360000e": 152, "n20": 152, "002337e": 152, "344000e": 152, "n21": 152, "102711e": 152, "400000e": [152, 477], "n22": 152, "203440e": 152, "300000e": 152, "n23": 152, "304122e": 152, "410000e": 152, "n24": 152, "405104e": 152, "n25": 152, "506066e": 152, "o11": 152, "105125e": 152, "o12": 152, "336635e": 152, "o13": 152, "302481e": 152, "580000e": 152, "o14": 152, "400860e": 152, "060600e": 152, "o15": 152, "500307e": 152, "222400e": 152, "976200e": 152, "599491e": 152, "o17": [152, 291, 480, 488], "800000e": 152, "699913e": 152, "o18": [152, 291, 389, 480], "799916e": 152, "o19": 152, "900358e": 152, "688000e": 152, "o20": 152, "000408e": 152, "351000e": 152, "o21": 152, "100866e": 152, "420000e": 152, "o22": 152, "200997e": 152, "o23": 152, "301569e": 152, "o24": 152, "402047e": 152, "o25": 152, "502946e": 152, "o26": 152, "603834e": 152, "o27": 152, "704826e": 152, "o28": 152, "805781e": 152, "899840e": 152, "f13": 152, "304509e": 152, "517205e": 152, "f14": 152, "403506e": 152, "013601e": 152, "f15": 152, "501801e": 152, "912693e": 152, "f16": 152, "601147e": 152, "140594e": 152, "f17": 152, "700210e": 152, "f18": 152, "800094e": 152, "586200e": 152, "f19": 152, "f20": 152, "999998e": 152, "107000e": 152, "f21": 152, "099995e": 152, "158000e": 152, "f22": 152, "200300e": 152, "230000e": 152, "f23": 152, "300357e": 152, "f24": 152, "400812e": 152, "900000e": 152, "f25": 152, "501210e": 152, "f26": 152, "601962e": 152, "f26m": 152, "602031e": 152, "f27": 152, "702676e": 152, "f28": 152, "803567e": 152, "600000e": 152, "f29": 152, "904326e": 152, "f30": 152, "005250e": 152, "f31": 152, "106043e": 152, "018005e": 152, "ne15": 152, "504317e": 152, "732843e": 152, "ne16": 152, "602576e": 152, "ne17": 152, "701767e": 152, "092000e": 152, "ne18": 152, "800571e": 152, "672000e": 152, "ne19": 152, "900188e": 152, "722000e": 152, "ne20": 152, "048000e": 152, "999244e": 152, "ne21": 152, "099385e": 152, "ne22": 152, "199138e": 152, "ne23": 152, "299447e": 152, "725000e": 152, "ne24": 152, "399361e": 152, "028000e": 152, "ne25": 152, "499774e": 152, "ne26": 152, "600046e": 152, "970000e": 152, "ne27": 152, "700759e": 152, "150000e": 152, "ne28": 152, "801207e": 152, "ne29": 152, "901939e": 152, "ne30": 152, "002480e": 152, "ne31": 152, "103311e": 152, "ne32": 152, "204002e": 152, "ne33": 152, "304938e": 152, "ne34": 152, "405703e": 152, "298977e": 152, "na17": 152, "703727e": 152, "na18": 152, "802597e": 152, "281189e": 152, "na19": 152, "901388e": 152, "na20": 152, "000735e": 152, "479000e": 152, "na21": 152, "099766e": 152, "249000e": 152, "na22": 152, "199444e": 152, "210481e": 152, "na24": 152, "399096e": 152, "398920e": 152, "na24m": 152, "399147e": 152, "018000e": 152, "na25": 152, "498995e": 152, "910000e": 152, "na26": 152, "599263e": 152, "071280e": 152, "na27": 152, "699408e": 152, "010000e": 152, "na28": 152, "799894e": 152, "050000e": 152, "na29": 152, "900286e": 152, "na30": 152, "000898e": 152, "na31": 152, "101359e": 152, "735000e": 152, "na32": 152, "202047e": 152, "320000e": 152, "na33": 152, "302672e": 152, "na34": 152, "403517e": 152, "na35": 152, "504249e": 152, "na36": 152, "605148e": 152, "na37": 152, "705934e": 152, "na38": 152, "806596e": 152, "na39": 152, "907384e": 152, "430505e": 152, "mg19": 152, "903547e": 152, "002085e": 152, "mg20": 152, "001886e": 152, "040000e": 152, "mg21": 152, "101171e": 152, "220000e": 152, "mg22": 152, "199957e": 152, "875500e": 152, "mg23": 152, "299412e": 152, "130460e": 152, "mg24": 152, "899000e": 152, "398504e": 152, "mg25": 152, "498584e": 152, "mg26": 152, "101000e": 152, "598259e": 152, "mg27": 152, "698434e": 152, "674800e": 152, "mg28": 152, "798388e": 152, "529400e": 152, "mg29": 152, "898860e": 152, "mg30": 152, "999043e": 152, "mg31": 152, "099655e": 152, "mg32": 152, "199897e": 152, "mg33": 152, "300525e": 152, "mg34": 152, "400946e": 152, "mg35": 152, "501734e": 152, "mg36": 152, "602300e": 152, "mg37": 152, "703140e": 152, "mg38": 152, "803757e": 152, "mg39": 152, "904677e": 152, "mg40": 152, "005393e": 152, "mg41": 152, "106246e": 152, "698154e": 152, "al21": 152, "102804e": 152, "al22": 152, "201952e": 152, "al23": 152, "300727e": 152, "460000e": 152, "al24": 152, "399994e": 152, "053000e": 152, "al24m": 152, "400040e": 152, "al25": 152, "499043e": 152, "183000e": 152, "al26": 152, "598689e": 152, "262632e": 152, "al26m": 152, "598714e": 152, "346000e": 152, "al28": 152, "798191e": 152, "347000e": 152, "al29": 152, "898045e": 152, "936000e": 152, "al30": 152, "998296e": 152, "620000e": 152, "al31": 152, "098395e": 152, "440000e": 152, "al32": 152, "198812e": 152, "al33": 152, "299084e": 152, "170000e": 152, "al34": 152, "399685e": 152, "al35": 152, "499986e": 152, "830000e": 152, "al36": 152, "600621e": 152, "al37": 152, "701068e": 152, "070000e": 152, "al38": 152, "801723e": 152, "al39": 152, "902297e": 152, "al40": 152, "003145e": 152, "al41": 152, "103833e": 152, "al42": 152, "204689e": 152, "al43": 152, "305311e": 152, "si22": 152, "203453e": 152, "si23": 152, "302552e": 152, "si24": 152, "401155e": 152, "si25": 152, "500411e": 152, "si26": 152, "599233e": 152, "245300e": 152, "si27": 152, "698671e": 152, "si28": [152, 473], "223000e": 152, "797693e": 152, "si29": [152, 473], "683000e": 152, "897649e": 152, "si30": [152, 473], "087000e": 152, "997377e": 152, "si31": 152, "097536e": 152, "441600e": 152, "si32": 152, "197415e": 152, "954437e": 152, "si33": 152, "297800e": 152, "si34": 152, "397858e": 152, "770000e": 152, "si35": 152, "498458e": 152, "si36": 152, "598660e": 152, "si37": 152, "699294e": 152, "si38": 152, "799563e": 152, "si39": 152, "900207e": 152, "si40": 152, "000587e": 152, "si41": 152, "101456e": 152, "si42": 152, "201979e": 152, "si43": 152, "302866e": 152, "si44": 152, "403526e": 152, "si45": 152, "504127e": 152, "097376e": 152, "p24": 152, "403435e": 152, "p25": 152, "502026e": 152, "p26": 152, "601178e": 152, "p27": 152, "699923e": 152, "p28": 152, "799231e": 152, "703000e": 152, "p29": 152, "898180e": 152, "142000e": 152, "p30": 152, "997831e": 152, "498800e": 152, "p31": 152, "p32": 152, "197391e": 152, "232755e": 152, "p33": 152, "297173e": 152, "190240e": 152, "p34": 152, "397364e": 152, "243000e": 152, "p35": 152, "497331e": 152, "730000e": 152, "p36": 152, "597826e": 152, "p37": 152, "697961e": 152, "310000e": 152, "p38": 152, "798416e": 152, "p39": 152, "898618e": 152, "p40": 152, "999130e": 152, "p41": 152, "099433e": 152, "p42": 152, "200101e": 152, "850000e": 152, "p43": 152, "300619e": 152, "650000e": 152, "p44": 152, "401299e": 152, "p45": 152, "501922e": 152, "p46": 152, "602738e": 152, "p47": 152, "703133e": 152, "206439e": 152, "s26": 152, "602788e": 152, "s27": 152, "701883e": 152, "550000e": 152, "s28": 152, "800437e": 152, "s29": 152, "899661e": 152, "880000e": 152, "s30": 152, "998490e": 152, "178000e": 152, "s31": 152, "097955e": 152, "553400e": 152, "s32": 152, "502000e": 152, "197207e": 152, "s33": 152, "297146e": 152, "s34": 152, "210000e": 152, "396787e": 152, "s35": 152, "496903e": 152, "548768e": 152, "s36": 152, "596708e": 152, "s37": 152, "697113e": 152, "030000e": 152, "s38": 152, "797116e": 152, "021800e": 152, "s39": 152, "897513e": 152, "s40": 152, "997545e": 152, "s41": 152, "097958e": 152, "990000e": 152, "s42": 152, "198102e": 152, "016000e": 152, "s43": 152, "298716e": 152, "s44": 152, "399021e": 152, "s45": 152, "499651e": 152, "s46": 152, "600075e": 152, "s47": 152, "700859e": 152, "s48": 152, "801417e": 152, "s49": 152, "902362e": 152, "545274e": 152, "cl28": 152, "802851e": 152, "cl29": 152, "901411e": 152, "cl30": 152, "000477e": 152, "cl31": 152, "099241e": 152, "cl32": 152, "198569e": 152, "cl33": 152, "297745e": 152, "511000e": 152, "cl34": 152, "397376e": 152, "526600e": 152, "cl34m": 152, "397392e": 152, "919000e": 152, "cl35": 152, "577000e": 152, "496885e": 152, "cl36": 152, "596831e": 152, "508102e": 152, "cl37": 152, "423000e": 152, "696590e": 152, "cl38": 152, "796801e": 152, "233800e": 152, "cl38m": 152, "796873e": 152, "cl39": 152, "896801e": 152, "372000e": 152, "cl40": 152, "997042e": 152, "cl41": 152, "097068e": 152, "840000e": 152, "cl42": 152, "197325e": 152, "cl43": 152, "297405e": 152, "cl44": 152, "397828e": 152, "cl45": 152, "498029e": 152, "cl46": 152, "598421e": 152, "cl47": 152, "698871e": 152, "cl48": 152, "799495e": 152, "cl49": 152, "900032e": 152, "cl50": 152, "000784e": 152, "cl51": 152, "101449e": 152, "cl52": 152, "202529e": 152, "994768e": 152, "ar29": 152, "903801e": 152, "ar30": 152, "002156e": 152, "ar31": 152, "101212e": 152, "ar32": 152, "199764e": 152, "ar33": 152, "298993e": 152, "ar34": 152, "398027e": 152, "438000e": 152, "ar35": 152, "497526e": 152, "775600e": 152, "ar36": 152, "365000e": 152, "596754e": 152, "ar37": 152, "696678e": 152, "024950e": 152, "ar38": 152, "796273e": 152, "ar39": 152, "896431e": 152, "457256e": 152, "ar40": 152, "960030e": 152, "996238e": 152, "ar41": 152, "096450e": 152, "576600e": 152, "ar42": 152, "196305e": 152, "038223e": 152, "ar43": 152, "296564e": 152, "222000e": 152, "ar44": 152, "396492e": 152, "122000e": 152, "ar45": 152, "496804e": 152, "148000e": 152, "ar46": 152, "596809e": 152, "ar47": 152, "697219e": 152, "ar48": 152, "797454e": 152, "160000e": 152, "ar49": 152, "898052e": 152, "ar50": 152, "998443e": 152, "060000e": 152, "ar51": 152, "099163e": 152, "ar52": 152, "199678e": 152, "ar53": 152, "300494e": 152, "ar54": 152, "401381e": 152, "909830e": 152, "k31": 152, "103453e": 152, "k32": 152, "202192e": 152, "k33": 152, "300726e": 152, "k34": 152, "399841e": 152, "k35": 152, "498801e": 152, "780000e": 152, "k36": 152, "598129e": 152, "k37": 152, "697338e": 152, "225000e": 152, "k38": 152, "796908e": 152, "590600e": 152, "k38m": 152, "796922e": 152, "244000e": 152, "k38m2": 152, "797279e": 152, "195000e": 152, "k39": 152, "325810e": 152, "896371e": 152, "k40": 152, "996400e": 152, "938304e": 152, "k41": 152, "730200e": 152, "096183e": 152, "k42": 152, "196240e": 152, "447800e": 152, "k43": 152, "296072e": 152, "k44": 152, "396156e": 152, "327800e": 152, "k45": 152, "496070e": 152, "068600e": 152, "k46": 152, "596198e": 152, "k47": 152, "696168e": 152, "k48": 152, "796551e": 152, "k49": 152, "896745e": 152, "260000e": 152, "k50": 152, "997278e": 152, "720000e": 152, "k51": 152, "097638e": 152, "k52": 152, "198261e": 152, "k53": 152, "298712e": 152, "k54": 152, "399420e": 152, "k55": 152, "499971e": 152, "k56": 152, "600958e": 152, "k57": 152, "701515e": 152, "k58": 152, "802354e": 152, "k59": 152, "902900e": 152, "007938e": 152, "ca33": 152, "303090e": 152, "ca34": 152, "401412e": 152, "ca35": 152, "500494e": 152, "570000e": 152, "ca36": 152, "599309e": 152, "012000e": 152, "ca37": 152, "698587e": 152, "811000e": 152, "ca38": 152, "797632e": 152, "437600e": 152, "ca39": 152, "897072e": 152, "603000e": 152, "ca40": 152, "694000e": 152, "996259e": 152, "ca41": 152, "096228e": 152, "136758e": 152, "ca42": 152, "195862e": 152, "ca43": 152, "295877e": 152, "ca44": 152, "090000e": 152, "395548e": 152, "ca45": 152, "495619e": 152, "404950e": 152, "ca46": 152, "595369e": 152, "ca47": 152, "695455e": 152, "919104e": 152, "ca48": 152, "870000e": 152, "795253e": 152, "151509e": 152, "ca49": 152, "895567e": 152, "230800e": 152, "ca50": 152, "995752e": 152, "345000e": 152, "ca51": 152, "096150e": 152, "ca52": 152, "196510e": 152, "ca53": 152, "297005e": 152, "610000e": 152, "ca54": 152, "397435e": 152, "ca55": 152, "498055e": 152, "ca56": 152, "598557e": 152, "ca57": 152, "699236e": 152, "ca58": 152, "799786e": 152, "ca59": 152, "900600e": 152, "ca60": 152, "001124e": 152, "ca61": 152, "101909e": 152, "495591e": 152, "sc35": 152, "502689e": 152, "sc36": 152, "601492e": 152, "sc37": 152, "700305e": 152, "sc38": 152, "799470e": 152, "sc39": 152, "898479e": 152, "sc40": 152, "997797e": 152, "823000e": 152, "sc41": 152, "096925e": 152, "963000e": 152, "sc42": 152, "196552e": 152, "807900e": 152, "sc42m": 152, "196618e": 152, "sc43": 152, "296115e": 152, "400760e": 152, "sc43m": 152, "296131e": 152, "380000e": 152, "sc44": 152, "395940e": 152, "429200e": 152, "sc44m": 152, "395969e": 152, "sc45": 152, "sc45m": 152, "495593e": 152, "258000e": 152, "sc46": 152, "595517e": 152, "239456e": 152, "sc46m": 152, "595533e": 152, "875000e": 152, "sc47": 152, "695241e": 152, "893709e": 152, "sc48": 152, "795223e": 152, "573560e": 152, "sc49": 152, "895002e": 152, "430800e": 152, "sc50": 152, "995219e": 152, "025000e": 152, "sc50m": 152, "995246e": 152, "sc51": 152, "095360e": 152, "240000e": 152, "sc52": 152, "195667e": 152, "sc53": 152, "295961e": 152, "sc54": 152, "396326e": 152, "sc55": 152, "496824e": 152, "sc56": 152, "597287e": 152, "sc56m": 152, "597292e": 152, "sc57": 152, "697779e": 152, "sc58": 152, "798371e": 152, "sc59": 152, "898922e": 152, "sc60": 152, "999571e": 152, "sc61": 152, "099890e": 152, "sc62": 152, "200716e": 152, "sc63": 152, "301254e": 152, "786675e": 152, "ti37": 152, "702429e": 152, "ti38": 152, "800977e": 152, "ti39": 152, "900161e": 152, "ti40": 152, "999050e": 152, "ti41": 152, "098315e": 152, "ti42": 152, "197303e": 152, "086500e": 152, "ti43": 152, "296852e": 152, "ti44": 152, "865014e": 152, "ti45": 152, "495813e": 152, "108800e": 152, "ti46": 152, "595263e": 152, "ti47": 152, "695176e": 152, "ti48": 152, "794795e": 152, "ti48m": 152, "795184e": 152, "ti49": 152, "894787e": 152, "ti50": 152, "180000e": 152, "994479e": 152, "ti51": 152, "094661e": 152, "456000e": 152, "ti52": 152, "194690e": 152, "ti53": 152, "294973e": 152, "270000e": 152, "ti54": 152, "395105e": 152, "ti55": 152, "495527e": 152, "ti56": 152, "595820e": 152, "ti57": 152, "696399e": 152, "ti58": 152, "796697e": 152, "ti59": 152, "897293e": 152, "ti60": 152, "997676e": 152, "ti61": 152, "098320e": 152, "ti62": 152, "198749e": 152, "ti63": 152, "299442e": 152, "ti64": 152, "399563e": 152, "ti65": 152, "500385e": 152, "ti66": 152, "599398e": 152, "094147e": 152, "v39": 152, "902132e": 152, "v40": 152, "001109e": 152, "v41": 152, "099978e": 152, "v42": 152, "199123e": 152, "v43": 152, "298065e": 152, "v44": 152, "397411e": 152, "v44m": 152, "397440e": 152, "v45": 152, "496578e": 152, "v46": 152, "596020e": 152, "v46m": 152, "596106e": 152, "v47": 152, "695491e": 152, "956000e": 152, "v48": 152, "795225e": 152, "380154e": 152, "v49": 152, "894852e": 152, "851200e": 152, "v50": 152, "994716e": 152, "362585e": 152, "v51": 152, "975000e": 152, "094396e": 152, "v52": 152, "194478e": 152, "245800e": 152, "v53": 152, "294434e": 152, "v54": 152, "394644e": 152, "v55": 152, "494723e": 152, "540000e": 152, "v56": 152, "595053e": 152, "v57": 152, "695256e": 152, "v58": 152, "795683e": 152, "v59": 152, "896021e": 152, "v60": 152, "996503e": 152, "v60m": 152, "996511e": 152, "v61": 152, "096848e": 152, "v62": 152, "197378e": 152, "v63": 152, "297755e": 152, "v64": 152, "398347e": 152, "v65": 152, "498792e": 152, "v66": 152, "599160e": 152, "v67": 152, "699669e": 152, "v68": 152, "798403e": 152, "v69": 152, "897366e": 152, "199613e": 152, "cr41": 152, "101900e": 152, "cr42": 152, "200643e": 152, "330000e": 152, "cr43": 152, "299771e": 152, "120000e": 152, "cr44": 152, "398555e": 152, "280000e": 152, "cr45": 152, "497964e": 152, "cr46": 152, "596836e": 152, "cr47": 152, "696290e": 152, "cr48": 152, "795403e": 152, "761600e": 152, "cr49": 152, "895134e": 152, "538000e": 152, "cr50": [152, 473], "994604e": 152, "102400e": 152, "cr51": 152, "094477e": 152, "393626e": 152, "cr52": [152, 473], "378900e": 152, "194051e": 152, "cr53": [152, 473], "501000e": 152, "294065e": 152, "cr54": [152, 473], "393888e": 152, "cr55": 152, "494084e": 152, "098200e": 152, "cr56": 152, "594065e": 152, "564000e": 152, "cr57": 152, "694361e": 152, "cr58": 152, "794435e": 152, "cr59": 152, "894859e": 152, "cr59m": 152, "894913e": 152, "cr60": 152, "995008e": 152, "cr61": 152, "095472e": 152, "340000e": 152, "cr62": 152, "195661e": 152, "cr63": 152, "296186e": 152, "290000e": 152, "cr64": 152, "396441e": 152, "cr65": 152, "497016e": 152, "cr66": 152, "597338e": 152, "cr67": 152, "697955e": 152, "cr68": 152, "798138e": 152, "cr69": 152, "898809e": 152, "cr70": 152, "999210e": 152, "cr71": 152, "098368e": 152, "cr72": 152, "196983e": 152, "493804e": 152, "mn43": 152, "301612e": 152, "mn44": 152, "400687e": 152, "mn45": 152, "499451e": 152, "mn46": 152, "598672e": 152, "mn47": 152, "697610e": 152, "mn48": 152, "796852e": 152, "mn49": 152, "895962e": 152, "820000e": 152, "mn50": 152, "995424e": 152, "831900e": 152, "mn50m": 152, "995448e": 152, "mn51": 152, "094821e": 152, "772000e": 152, "mn52": 152, "194557e": 152, "830624e": 152, "mn52m": 152, "194597e": 152, "266000e": 152, "mn53": 152, "294129e": 152, "167606e": 152, "mn54": 152, "394036e": 152, "697408e": 152, "mn56": 152, "593890e": 152, "284040e": 152, "mn57": 152, "693829e": 152, "mn58": 152, "793998e": 152, "mn58m": 152, "794006e": 152, "mn59": 152, "894044e": 152, "mn60": 152, "994291e": 152, "mn60m": 152, "994320e": 152, "mn61": 152, "094465e": 152, "mn62": 152, "194843e": 152, "mn62m": 152, "194880e": 152, "710000e": 152, "mn63": 152, "295024e": 152, "mn64": 152, "395425e": 152, "mn64m": 152, "395444e": 152, "mn65": 152, "495634e": 152, "mn66": 152, "596108e": 152, "mn67": 152, "696414e": 152, "mn68": 152, "796930e": 152, "mn69": 152, "897284e": 152, "mn70": 152, "997752e": 152, "mn71": 152, "098128e": 152, "mn72": 152, "198763e": 152, "mn73": 152, "299208e": 152, "mn74": 152, "397935e": 152, "584514e": 152, "fe45": 152, "501458e": 152, "890000e": 152, "fe46": 152, "600081e": 152, "fe47": 152, "699289e": 152, "fe48": 152, "798050e": 152, "fe49": 152, "897361e": 152, "fe50": 152, "996299e": 152, "520000e": 152, "fe51": 152, "095682e": 152, "fe52": 152, "194811e": 152, "fe52m": 152, "195558e": 152, "fe53": 152, "294531e": 152, "106000e": 152, "fe53m": 152, "294857e": 152, "524000e": 152, "fe54": [152, 298, 473], "845000e": 152, "393961e": 152, "fe55": 152, "493829e": 152, "659220e": 152, "175400e": 152, "593494e": 152, "fe57": [152, 473], "119000e": 152, "693539e": 152, "fe58": [152, 473], "793328e": 152, "fe59": 152, "893488e": 152, "843936e": 152, "fe60": 152, "993407e": 152, "267915e": 152, "fe61": 152, "093675e": 152, "588000e": 152, "fe62": 152, "193677e": 152, "fe63": 152, "294037e": 152, "fe64": 152, "394120e": 152, "fe65": 152, "494538e": 152, "fe65m": 152, "494581e": 152, "fe66": 152, "594678e": 152, "fe67": 152, "695095e": 152, "fe67m": 152, "695136e": 152, "fe68": 152, "795370e": 152, "fe69": 152, "895878e": 152, "fe70": 152, "996146e": 152, "fe71": 152, "096672e": 152, "fe72": 152, "196962e": 152, "fe73": 152, "297344e": 152, "fe74": 152, "397680e": 152, "fe75": 152, "498326e": 152, "fe76": 152, "fe77": 152, "696055e": 152, "893320e": 152, "co47": 152, "701149e": 152, "co48": 152, "800176e": 152, "co49": 152, "898972e": 152, "co50": 152, "998154e": 152, "co51": 152, "097072e": 152, "co52": 152, "196359e": 152, "co53": 152, "295422e": 152, "co53m": 152, "295765e": 152, "co54": 152, "394846e": 152, "932800e": 152, "co54m": 152, "394867e": 152, "co55": 152, "494200e": 152, "310800e": 152, "co56": 152, "593984e": 152, "673190e": 152, "co57": 152, "693629e": 152, "347834e": 152, "co58": 152, "793575e": 152, "122304e": 152, "co58m": 152, "793578e": 152, "276000e": 152, "co58m2": 152, "793581e": 152, "co59": 152, "co60": 152, "993382e": 152, "663442e": 152, "co60m": 152, "993388e": 152, "co61": 152, "093248e": 152, "936400e": 152, "co62": 152, "193405e": 152, "co62m": 152, "193407e": 152, "316000e": 152, "co63": 152, "293361e": 152, "740000e": 152, "co64": 152, "393581e": 152, "co65": 152, "493648e": 152, "co66": 152, "593976e": 152, "co67": 152, "694089e": 152, "co68": 152, "794487e": 152, "co68m": 152, "794503e": 152, "co69": 152, "894632e": 152, "co70": 152, "995121e": 152, "co71": 152, "095290e": 152, "co72": 152, "195781e": 152, "co73": 152, "296024e": 152, "co74": 152, "396538e": 152, "co75": 152, "496833e": 152, "co76": 152, "597201e": 152, "co77": 152, "697587e": 152, "co78": 152, "798351e": 152, "co79": 152, "897025e": 152, "869336e": 152, "ni48": 152, "801975e": 152, "ni49": 152, "900966e": 152, "ni50": 152, "999593e": 152, "ni51": 152, "098772e": 152, "ni52": 152, "197568e": 152, "ni53": 152, "296847e": 152, "ni54": 152, "395791e": 152, "ni55": 152, "495133e": 152, "047000e": 152, "ni56": 152, "594213e": 152, "248800e": 152, "ni57": 152, "693979e": 152, "281600e": 152, "ni58": [152, 473], "807700e": 152, "793534e": 152, "ni59": 152, "893435e": 152, "398326e": 152, "ni60": [152, 473], "622300e": 152, "993079e": 152, "ni61": [152, 473], "140000e": 152, "093106e": 152, "ni62": [152, 473], "634000e": 152, "192835e": 152, "ni63": 152, "292967e": 152, "193561e": 152, "ni64": [152, 473], "392797e": 152, "ni65": 152, "493008e": 152, "063000e": 152, "ni66": 152, "592914e": 152, "965600e": 152, "ni67": 152, "693157e": 152, "ni68": 152, "793187e": 152, "ni68m": 152, "793493e": 152, "ni69": 152, "893561e": 152, "ni69m": 152, "893595e": 152, "ni70": 152, "993650e": 152, "ni71": 152, "094074e": 152, "560000e": 152, "ni71m": 152, "094127e": 152, "ni72": 152, "194209e": 152, "ni73": 152, "294647e": 152, "ni74": 152, "394807e": 152, "077000e": 152, "ni75": 152, "495287e": 152, "ni76": 152, "ni77": 152, "589000e": 152, "ni78": 152, "796318e": 152, "ni79": 152, "896941e": 152, "ni80": 152, "997411e": 152, "ni81": 152, "098259e": 152, "ni82": 152, "198802e": 152, "354564e": 152, "cu52": 152, "199718e": 152, "cu53": 152, "298555e": 152, "cu54": 152, "397671e": 152, "cu55": 152, "496605e": 152, "cu56": 152, "595856e": 152, "cu57": 152, "694921e": 152, "cu58": 152, "794454e": 152, "cu59": 152, "893950e": 152, "cu60": 152, "993737e": 152, "422000e": 152, "cu61": 152, "093346e": 152, "202040e": 152, "cu62": 152, "193258e": 152, "802000e": 152, "cu63": 152, "917000e": 152, "292960e": 152, "cu64": 152, "392976e": 152, "572216e": 152, "cu65": 152, "083000e": 152, "492779e": 152, "cu66": 152, "592887e": 152, "072000e": 152, "cu67": 152, "692773e": 152, "225880e": 152, "cu68": 152, "792961e": 152, "cu68m": 152, "793039e": 152, "cu69": 152, "892943e": 152, "cu70": 152, "993239e": 152, "450000e": 152, "cu70m": 152, "993250e": 152, "cu70m2": 152, "993265e": 152, "cu71": 152, "093268e": 152, "940000e": 152, "cu72": 152, "193582e": 152, "cu73": 152, "293667e": 152, "cu74": 152, "393988e": 152, "cu75": 152, "494190e": 152, "224000e": 152, "cu76": 152, "594528e": 152, "cu76m": 152, "594570e": 152, "cu77": 152, "694785e": 152, "698000e": 152, "cu78": 152, "795196e": 152, "cu79": 152, "895456e": 152, "cu80": 152, "996087e": 152, "136000e": 152, "cu81": 152, "096550e": 152, "cu82": 152, "197285e": 152, "cu83": 152, "297817e": 152, "cu84": 152, "398593e": 152, "539556e": 152, "zn54": 152, "399295e": 152, "zn55": 152, "498398e": 152, "zn56": 152, "597238e": 152, "zn57": 152, "696479e": 152, "zn58": 152, "795459e": 152, "670000e": 152, "zn59": 152, "894926e": 152, "786000e": 152, "zn60": 152, "994183e": 152, "428000e": 152, "zn61": 152, "093951e": 152, "zn61m": 152, "093960e": 152, "zn61m2": 152, "093996e": 152, "zn61m3": 152, "094032e": 152, "zn62": 152, "193433e": 152, "309480e": 152, "zn63": 152, "293321e": 152, "308200e": 152, "zn64": 152, "863000e": 152, "392914e": 152, "zn65": 152, "492924e": 152, "107555e": 152, "zn66": 152, "790000e": 152, "592603e": 152, "zn67": 152, "692713e": 152, "zn68": 152, "792484e": 152, "zn69": 152, "892655e": 152, "384000e": 152, "zn69m": 152, "892702e": 152, "952000e": 152, "zn70": 152, "992532e": 152, "199163e": 152, "zn71": 152, "092772e": 152, "zn71m": 152, "092789e": 152, "426000e": 152, "zn72": 152, "192686e": 152, "674000e": 152, "zn73": 152, "292978e": 152, "zn73m": 152, "292999e": 152, "zn74": 152, "392946e": 152, "zn75": 152, "493294e": 152, "zn76": 152, "593329e": 152, "zn77": 152, "693696e": 152, "zn77m": 152, "693779e": 152, "zn78": 152, "793844e": 152, "zn79": 152, "894265e": 152, "zn80": 152, "994434e": 152, "619000e": 152, "zn81": 152, "095048e": 152, "zn82": 152, "195442e": 152, "zn83": 152, "296103e": 152, "zn84": 152, "396545e": 152, "zn85": 152, "497287e": 152, "zn86": 152, "597776e": 152, "zn87": 152, "696824e": 152, "972307e": 152, "ga56": 152, "ga57": 152, "698293e": 152, "ga58": 152, "797425e": 152, "ga59": 152, "896337e": 152, "ga60": 152, "995706e": 152, "ga61": 152, "094945e": 152, "ga62": 152, "194418e": 152, "161210e": 152, "ga63": 152, "293929e": 152, "ga64": 152, "393684e": 152, "576200e": 152, "ga65": 152, "493273e": 152, "ga66": 152, "593159e": 152, "416400e": 152, "ga67": 152, "692820e": 152, "818109e": 152, "ga68": 152, "792798e": 152, "062600e": 152, "ga69": 152, "010800e": 152, "892557e": 152, "ga70": 152, "992602e": 152, "268400e": 152, "ga71": 152, "989200e": 152, "092470e": 152, "ga72": 152, "192637e": 152, "076000e": 152, "ga72m": 152, "192650e": 152, "968000e": 152, "ga73": 152, "292518e": 152, "749600e": 152, "ga74": 152, "392695e": 152, "872000e": 152, "ga74m": 152, "392701e": 152, "ga75": 152, "492650e": 152, "ga76": 152, "592883e": 152, "ga77": 152, "692915e": 152, "ga78": 152, "793161e": 152, "ga79": 152, "893289e": 152, "848000e": 152, "ga80": 152, "993652e": 152, "ga80m": 152, "993654e": 152, "ga81": 152, "093775e": 152, "217000e": 152, "ga82": 152, "194299e": 152, "ga83": 152, "294698e": 152, "081000e": 152, "ga84": 152, "395265e": 152, "ga85": 152, "495700e": 152, "ga86": 152, "596312e": 152, "ga87": 152, "696892e": 152, "ga88": 152, "797607e": 152, "ga89": 152, "896379e": 152, "264024e": 152, "ge58": 152, "799101e": 152, "ge59": 152, "898175e": 152, "ge60": 152, "997019e": 152, "ge61": 152, "096379e": 152, "ge62": 152, "195465e": 152, "ge63": 152, "294964e": 152, "ge64": 152, "394165e": 152, "ge65": 152, "493944e": 152, "ge66": 152, "593384e": 152, "ge67": 152, "693273e": 152, "134000e": 152, "ge68": 152, "792809e": 152, "340835e": 152, "ge69": 152, "892796e": 152, "405800e": 152, "ge70": 152, "037000e": 152, "992425e": 152, "ge71": 152, "092495e": 152, "875520e": 152, "ge71m": 152, "092516e": 152, "041000e": 152, "ge72": 152, "731000e": 152, "192208e": 152, "ge73": [152, 242], "760000e": 152, "292346e": 152, "ge73m": 152, "292353e": 152, "ge74": [152, 242], "673000e": 152, "392118e": 152, "ge75": 152, "492286e": 152, "966800e": 152, "ge75m": 152, "492301e": 152, "ge76": [152, 242], "592140e": 152, "ge77": 152, "692355e": 152, "035960e": 152, "ge77m": 152, "692372e": 152, "ge78": 152, "792285e": 152, "ge79": 152, "892540e": 152, "898000e": 152, "ge79m": 152, "892560e": 152, "ge80": 152, "992537e": 152, "950000e": 152, "ge81": 152, "092882e": 152, "ge81m": 152, "092955e": 152, "ge82": 152, "192955e": 152, "ge83": 152, "293462e": 152, "ge84": 152, "393747e": 152, "ge85": 152, "494303e": 152, "ge86": 152, "594649e": 152, "ge87": 152, "695251e": 152, "ge88": 152, "795691e": 152, "ge89": 152, "896383e": 152, "ge90": 152, "996879e": 152, "ge91": 152, "096039e": 152, "ge92": 152, "196674e": 152, "492160e": 152, "as60": 152, "999313e": 152, "as61": 152, "098062e": 152, "as62": 152, "197320e": 152, "as63": 152, "296369e": 152, "as64": 152, "395757e": 152, "as65": 152, "494956e": 152, "as66": 152, "594471e": 152, "as67": 152, "693919e": 152, "as68": 152, "793677e": 152, "516000e": 152, "as69": 152, "893227e": 152, "as70": 152, "993092e": 152, "156000e": 152, "as71": 152, "092711e": 152, "350800e": 152, "as72": 152, "192675e": 152, "as73": 152, "292382e": 152, "937920e": 152, "as74": 152, "392393e": 152, "535328e": 152, "as74m": 152, "as75": [152, 242], "as75m": 152, "492192e": 152, "762000e": 152, "as76": 152, "592239e": 152, "446400e": 152, "as77": 152, "692065e": 152, "396440e": 152, "as77m": 152, "692116e": 152, "as78": 152, "792183e": 152, "442000e": 152, "as79": 152, "892095e": 152, "406000e": 152, "as80": 152, "992253e": 152, "as81": 152, "092213e": 152, "as82": 152, "192450e": 152, "as82m": 152, "192465e": 152, "as83": 152, "292498e": 152, "as84": 152, "392906e": 152, "as84m": 152, "392930e": 152, "as85": 152, "493202e": 152, "021000e": 152, "as86": 152, "593650e": 152, "as87": 152, "693990e": 152, "as88": 152, "794494e": 152, "as89": 152, "894939e": 152, "as90": 152, "995550e": 152, "as91": 152, "096043e": 152, "as92": 152, "196680e": 152, "as93": 152, "295629e": 152, "as94": 152, "396049e": 152, "895939e": 152, "se63": 152, "298182e": 152, "se64": 152, "397139e": 152, "se65": 152, "496466e": 152, "se66": 152, "595521e": 152, "se67": 152, "695009e": 152, "se68": 152, "794180e": 152, "se69": 152, "893956e": 152, "se70": 152, "993339e": 152, "466000e": 152, "se71": 152, "093224e": 152, "844000e": 152, "se72": 152, "192711e": 152, "257600e": 152, "se73": 152, "292676e": 152, "574000e": 152, "se73m": 152, "292679e": 152, "388000e": 152, "se74": 152, "392248e": 152, "se75": 152, "492252e": 152, "034899e": 152, "se76": 152, "591921e": 152, "se77": 152, "691991e": 152, "se77m": 152, "692009e": 152, "736000e": 152, "se78": 152, "377000e": 152, "791731e": 152, "se79": 152, "891850e": 152, "031911e": 152, "se79m": 152, "891860e": 152, "352000e": 152, "se80": 152, "961000e": 152, "991652e": 152, "se81": 152, "091799e": 152, "se81m": 152, "091810e": 152, "437000e": 152, "se82": 152, "191670e": 152, "029465e": 152, "se83": 152, "291912e": 152, "338000e": 152, "se83m": 152, "291936e": 152, "se84": 152, "391846e": 152, "se85": 152, "492225e": 152, "se85m": 152, "492226e": 152, "se86": 152, "592427e": 152, "430000e": 152, "se87": 152, "692852e": 152, "se88": 152, "793142e": 152, "530000e": 152, "se89": 152, "893645e": 152, "se90": 152, "993996e": 152, "se91": 152, "094596e": 152, "se92": 152, "194992e": 152, "se93": 152, "se94": 152, "se95": 152, "496617e": 152, "se96": 152, "595903e": 152, "se97": 152, "696344e": 152, "990353e": 152, "br65": 152, "498206e": 152, "br66": 152, "597469e": 152, "br67": 152, "br68": 152, "795852e": 152, "br69": 152, "895011e": 152, "br70": 152, "br70m": 152, "994725e": 152, "br71": 152, "093874e": 152, "br72": 152, "193664e": 152, "860000e": 152, "br72m": 152, "193675e": 152, "br73": 152, "293169e": 152, "br74": 152, "392989e": 152, "br74m": 152, "392991e": 152, "br75": 152, "492578e": 152, "br76": 152, "592454e": 152, "832000e": 152, "br76m": 152, "592465e": 152, "br77": 152, "692138e": 152, "053440e": 152, "br77m": 152, "692149e": 152, "568000e": 152, "br78": 152, "792115e": 152, "br78m": 152, "792134e": 152, "194000e": 152, "br79": 152, "069000e": 152, "891834e": 152, "br79m": 152, "891856e": 152, "br80": 152, "991853e": 152, "060800e": 152, "br80m": 152, "991862e": 152, "591000e": 152, "br81": 152, "931000e": 152, "091629e": 152, "br82": 152, "191680e": 152, "270152e": 152, "br82m": 152, "191685e": 152, "678000e": 152, "br83": 152, "291518e": 152, "546400e": 152, "br84": 152, "391648e": 152, "905600e": 152, "br84m": 152, "391682e": 152, "br85": 152, "491561e": 152, "br86": 152, "591880e": 152, "510000e": 152, "br86m": 152, "591881e": 152, "br87": 152, "692071e": 152, "br88": 152, "792407e": 152, "br89": 152, "892638e": 152, "357000e": 152, "br90": 152, "993063e": 152, "br91": 152, "093397e": 152, "br92": 152, "193926e": 152, "br93": 152, "294305e": 152, "br94": 152, "394868e": 152, "br95": 152, "br96": 152, "595853e": 152, "br97": 152, "696280e": 152, "br98": 152, "796798e": 152, "br99": 152, "895839e": 152, "br100": 152, "996237e": 152, "379932e": 152, "kr67": 152, "698235e": 152, "kr68": 152, "797167e": 152, "kr69": 152, "896518e": 152, "kr70": 152, "995526e": 152, "kr71": 152, "094963e": 152, "kr72": 152, "kr73": 152, "kr74": 152, "393308e": 152, "kr75": 152, "493095e": 152, "kr76": 152, "592591e": 152, "328000e": 152, "kr77": 152, "692467e": 152, "275000e": 152, "kr78": 152, "792036e": 152, "kr79": 152, "892008e": 152, "261440e": 152, "kr79m": 152, "892022e": 152, "kr80": 152, "991638e": 152, "kr81": 152, "091659e": 152, "226536e": 152, "kr81m": 152, "091680e": 152, "kr82": 152, "191348e": 152, "kr83": 152, "149000e": 152, "291414e": 152, "kr83m": 152, "291418e": 152, "kr84": 152, "391151e": 152, "kr85": 152, "491253e": 152, "388898e": 152, "kr85m": 152, "491285e": 152, "613000e": 152, "kr86": 152, "591061e": 152, "kr87": 152, "691336e": 152, "578000e": 152, "kr88": 152, "791445e": 152, "017000e": 152, "kr89": 152, "891763e": 152, "kr90": 152, "991952e": 152, "232000e": 152, "kr91": 152, "092345e": 152, "kr92": 152, "192616e": 152, "kr93": 152, "293127e": 152, "286000e": 152, "kr94": 152, "393436e": 152, "kr95": 152, "493984e": 152, "kr96": 152, "594307e": 152, "kr97": 152, "694856e": 152, "kr98": 152, "795191e": 152, "kr99": 152, "895760e": 152, "kr100": 152, "996114e": 152, "kr101": 152, "009670e": 152, "kr102": 152, "019595e": 152, "kr103": 152, "029639e": 152, "546766e": 152, "rb71": 152, "096532e": 152, "rb72": 152, "195908e": 152, "rb73": 152, "295056e": 152, "rb74": 152, "394426e": 152, "477600e": 152, "rb75": 152, "493857e": 152, "rb76": 152, "593507e": 152, "rb77": 152, "693041e": 152, "268000e": 152, "rb78": 152, "792814e": 152, "059600e": 152, "rb78m": 152, "792826e": 152, "444000e": 152, "rb79": 152, "892399e": 152, "374000e": 152, "rb80": 152, "992252e": 152, "rb81": 152, "091900e": 152, "645920e": 152, "rb81m": 152, "091909e": 152, "rb82": 152, "191821e": 152, "545000e": 152, "rb82m": 152, "191828e": 152, "rb83": 152, "291511e": 152, "447680e": 152, "rb84": 152, "391438e": 152, "835648e": 152, "rb84m": 152, "391488e": 152, "216000e": 152, "rb85": 152, "491179e": 152, "rb86": 152, "591117e": 152, "610669e": 152, "rb86m": 152, "591176e": 152, "102000e": 152, "rb87": 152, "690918e": 152, "568379e": 152, "rb88": 152, "791132e": 152, "066380e": 152, "rb89": 152, "891228e": 152, "192000e": 152, "rb90": 152, "991480e": 152, "rb90m": 152, "991492e": 152, "rb91": 152, "091654e": 152, "rb92": 152, "191973e": 152, "480000e": 152, "rb93": 152, "292204e": 152, "rb94": 152, "392641e": 152, "702000e": 152, "rb95": 152, "492930e": 152, "777000e": 152, "rb96": 152, "593427e": 152, "rb97": 152, "693735e": 152, "691000e": 152, "rb98": 152, "794179e": 152, "rb98m": 152, "794208e": 152, "rb99": 152, "894538e": 152, "rb100": 152, "994987e": 152, "rb101": 152, "009532e": 152, "rb102": 152, "019589e": 152, "rb103": 152, "029623e": 152, "rb104": 152, "039683e": 152, "rb105": 152, "049586e": 152, "rb106": 152, "059627e": 152, "761665e": 152, "sr73": 152, "296597e": 152, "sr74": 152, "395631e": 152, "sr75": 152, "494995e": 152, "sr76": 152, "594177e": 152, "sr77": 152, "693794e": 152, "sr78": 152, "793218e": 152, "sr79": 152, "892971e": 152, "sr80": 152, "992452e": 152, "378000e": 152, "sr81": 152, "092321e": 152, "sr82": 152, "191840e": 152, "sr83": 152, "291756e": 152, "166760e": 152, "sr83m": 152, "291784e": 152, "sr84": 152, "391343e": 152, "sr85": 152, "491293e": 152, "602954e": 152, "sr85m": 152, "491319e": 152, "058000e": 152, "sr86": 152, "590926e": 152, "sr87": 152, "690888e": 152, "sr87m": 152, "690929e": 152, "013000e": 152, "sr88": 152, "790561e": 152, "sr89": 152, "890745e": 152, "368643e": 152, "sr90": 152, "990774e": 152, "123107e": 152, "sr91": 152, "091020e": 152, "474000e": 152, "sr92": 152, "191104e": 152, "399600e": 152, "sr93": 152, "291403e": 152, "458000e": 152, "sr94": 152, "391536e": 152, "sr95": 152, "491936e": 152, "390000e": 152, "sr96": 152, "592170e": 152, "sr97": 152, "692615e": 152, "sr98": 152, "792845e": 152, "sr99": 152, "893324e": 152, "690000e": 152, "sr100": 152, "993535e": 152, "sr101": 152, "009405e": 152, "sr102": 152, "019430e": 152, "sr103": 152, "029489e": 152, "sr104": 152, "039523e": 152, "sr105": 152, "sr106": 152, "059606e": 152, "sr107": 152, "069669e": 152, "sr108": 152, "079600e": 152, "sr109": 152, "089644e": 152, "890585e": 152, "y75": 152, "496482e": 152, "y76": 152, "595845e": 152, "y77": 152, "694965e": 152, "y78": 152, "794361e": 152, "y78m": 152, "794388e": 152, "y79": 152, "893735e": 152, "y80": 152, "993428e": 152, "y80m": 152, "993453e": 152, "y81": 152, "092913e": 152, "y82": 152, "192679e": 152, "y83": 152, "292235e": 152, "248000e": 152, "y83m": 152, "292242e": 152, "y84": 152, "392039e": 152, "y84m": 152, "392046e": 152, "y85": 152, "491643e": 152, "648000e": 152, "y85m": 152, "491645e": 152, "y86": 152, "591489e": 152, "306400e": 152, "y86m": 152, "591512e": 152, "y87": 152, "691088e": 152, "872800e": 152, "y87m": 152, "691128e": 152, "813000e": 152, "y88": 152, "790950e": 152, "212486e": 152, "y88m": 152, "790992e": 152, "y88m2": 152, "791023e": 152, "398000e": 152, "y89": 152, "y89m": 152, "890682e": 152, "566000e": 152, "y90": 152, "990715e": 152, "305800e": 152, "y90m": 152, "990788e": 152, "y91": 152, "090730e": 152, "055264e": 152, "y91m": 152, "090790e": 152, "983000e": 152, "y92": 152, "190895e": 152, "274400e": 152, "y93": 152, "290958e": 152, "664800e": 152, "y93m": 152, "291040e": 152, "y94": 152, "391159e": 152, "y95": 152, "491282e": 152, "y96": 152, "591589e": 152, "y96m": 152, "591711e": 152, "y97": 152, "691813e": 152, "y97m": 152, "691885e": 152, "y97m2": 152, "692192e": 152, "y98": 152, "792220e": 152, "y98m": 152, "792270e": 152, "y99": 152, "892464e": 152, "484000e": 152, "y100": 152, "992776e": 152, "y100m": 152, "992791e": 152, "y101": 152, "009303e": 152, "y102": 152, "019336e": 152, "y102m": 152, "019337e": 152, "y103": 152, "029367e": 152, "y104": 152, "039410e": 152, "y105": 152, "049449e": 152, "y106": 152, "059498e": 152, "y107": 152, "069541e": 152, "y108": 152, "079595e": 152, "y109": 152, "089626e": 152, "y110": 152, "099540e": 152, "y111": 152, "109597e": 152, "122365e": 152, "zr77": 152, "696491e": 152, "zr78": 152, "795523e": 152, "zr79": 152, "894916e": 152, "zr80": 152, "994040e": 152, "zr81": 152, "093721e": 152, "zr82": 152, "193109e": 152, "zr83": 152, "292865e": 152, "zr84": 152, "392325e": 152, "548000e": 152, "zr85": 152, "492147e": 152, "716000e": 152, "zr85m": 152, "492179e": 152, "zr86": 152, "591647e": 152, "zr87": 152, "691482e": 152, "zr87m": 152, "691518e": 152, "zr88": 152, "205760e": 152, "zr89": 152, "890889e": 152, "822760e": 152, "zr89m": 152, "890952e": 152, "497000e": 152, "zr90": [152, 473], "145000e": 152, "990470e": 152, "zr90m": 152, "990719e": 152, "zr91": [152, 473], "090565e": 152, "zr92": [152, 473], "715000e": 152, "190504e": 152, "zr93": 152, "290648e": 152, "080665e": 152, "zr94": [152, 473], "738000e": 152, "390632e": 152, "zr95": 152, "490804e": 152, "532365e": 152, "zr96": [152, 473], "590827e": 152, "311385e": 152, "zr97": 152, "691095e": 152, "029640e": 152, "zr98": 152, "791273e": 152, "zr99": 152, "891651e": 152, "zr100": 152, "991776e": 152, "zr101": 152, "009211e": 152, "zr102": 152, "019230e": 152, "zr103": 152, "029266e": 152, "zr104": 152, "039288e": 152, "zr105": 152, "049330e": 152, "zr106": 152, "059359e": 152, "zr107": 152, "069408e": 152, "zr108": 152, "079440e": 152, "zr109": 152, "089492e": 152, "zr110": 152, "099529e": 152, "zr111": 152, "109583e": 152, "zr112": 152, "119626e": 152, "zr113": 152, "129698e": 152, "zr114": 152, "139620e": 152, "290638e": 152, "nb79": 152, "896521e": 152, "nb80": 152, "995844e": 152, "nb81": 152, "094903e": 152, "nb82": 152, "194313e": 152, "nb83": 152, "293670e": 152, "nb84": 152, "393357e": 152, "nb85": 152, "492791e": 152, "nb86": 152, "592504e": 152, "nb86m": 152, "592637e": 152, "nb87": 152, "692036e": 152, "nb87m": 152, "692037e": 152, "nb88": 152, "791833e": 152, "nb88m": 152, "791847e": 152, "nb89": 152, "891342e": 152, "308000e": 152, "nb89m": 152, "891346e": 152, "960000e": 152, "nb90": 152, "991127e": 152, "256000e": 152, "nb90m": 152, "991140e": 152, "nb90m2": 152, "891000e": 152, "nb91": 152, "090700e": 152, "145871e": 152, "nb91m": 152, "090711e": 152, "nb92": 152, "190719e": 152, "095025e": 152, "nb92m": 152, "190734e": 152, "nb93": 152, "nb93m": 152, "290641e": 152, "nb94": 152, "390728e": 152, "406056e": 152, "nb94m": 152, "390733e": 152, "758000e": 152, "nb95": 152, "490684e": 152, "023222e": 152, "nb95m": 152, "490709e": 152, "nb96": 152, "590810e": 152, "nb97": 152, "690810e": 152, "326000e": 152, "nb97m": 152, "690890e": 152, "nb98": 152, "791033e": 152, "nb98m": 152, "791042e": 152, "066000e": 152, "nb99": 152, "891162e": 152, "nb99m": 152, "891201e": 152, "nb100": 152, "991418e": 152, "nb100m": 152, "991452e": 152, "nb100m2": 152, "991497e": 152, "nb101": 152, "009153e": 152, "nb102": 152, "019180e": 152, "nb102m": 152, "019181e": 152, "nb103": 152, "029191e": 152, "nb104": 152, "039225e": 152, "nb104m": 152, "039227e": 152, "nb105": 152, "049239e": 152, "nb106": 152, "059280e": 152, "nb107": 152, "069303e": 152, "nb108": 152, "079348e": 152, "nb109": 152, "089376e": 152, "nb110": 152, "099424e": 152, "nb111": 152, "109456e": 152, "nb112": 152, "119508e": 152, "nb113": 152, "129547e": 152, "nb114": 152, "139615e": 152, "nb115": 152, "149654e": 152, "nb116": 152, "159710e": 152, "593129e": 152, "mo81": 152, "096590e": 152, "mo82": 152, "195750e": 152, "mo83": 152, "294874e": 152, "mo84": 152, "394009e": 152, "mo85": 152, "493655e": 152, "mo86": 152, "593070e": 152, "mo87": 152, "692733e": 152, "mo88": 152, "792195e": 152, "mo89": 152, "891948e": 152, "mo89m": 152, "891990e": 152, "mo90": 152, "991394e": 152, "001600e": 152, "mo91": 152, "091175e": 152, "294000e": 152, "mo91m": 152, "091245e": 152, "mo92": [152, 473], "190681e": 152, "mo93": 152, "290681e": 152, "262277e": 152, "mo93m": 152, "290942e": 152, "mo94": [152, 473], "390509e": 152, "mo95": [152, 473], "592000e": 152, "490584e": 152, "mo96": [152, 473], "668000e": 152, "590468e": 152, "mo97": [152, 473], "690602e": 152, "mo98": [152, 473], "413000e": 152, "790541e": 152, "mo99": [152, 245, 492], "890771e": 152, "373264e": 152, "mo100": [152, 473], "990748e": 152, "212141e": 152, "mo101": 152, "009103e": 152, "766000e": 152, "mo102": 152, "019103e": 152, "mo103": 152, "029132e": 152, "mo104": 152, "039138e": 152, "mo105": 152, "049170e": 152, "mo106": 152, "059181e": 152, "mo107": 152, "069217e": 152, "mo108": 152, "079235e": 152, "mo109": 152, "089278e": 152, "mo110": 152, "099297e": 152, "mo111": 152, "109344e": 152, "mo111m": 152, "109345e": 152, "mo112": 152, "119368e": 152, "mo113": 152, "129419e": 152, "mo114": 152, "139449e": 152, "mo115": 152, "149503e": 152, "mo116": 152, "159543e": 152, "mo117": 152, "169598e": 152, "mo118": 152, "179634e": 152, "mo119": 152, "189690e": 152, "tc83": 152, "296710e": 152, "tc84": 152, "396033e": 152, "tc85": 152, "494883e": 152, "tc86": 152, "594288e": 152, "tc87": 152, "693653e": 152, "tc88": 152, "793268e": 152, "tc88m": 152, "793275e": 152, "tc89": 152, "892717e": 152, "tc89m": 152, "892723e": 152, "tc90": 152, "992356e": 152, "tc90m": 152, "992371e": 152, "tc90m2": 152, "992498e": 152, "tc91": 152, "091843e": 152, "884000e": 152, "tc91m": 152, "091858e": 152, "tc92": 152, "191526e": 152, "tc93": 152, "291025e": 152, "tc93m": 152, "291067e": 152, "tc93m2": 152, "291259e": 152, "tc94": 152, "390966e": 152, "tc94m": 152, "390974e": 152, "tc95": 152, "490766e": 152, "tc95m": 152, "490770e": 152, "tc96": 152, "590787e": 152, "697920e": 152, "tc96m": 152, "590791e": 152, "tc97": 152, "690637e": 152, "328547e": 152, "tc97m": 152, "690647e": 152, "862000e": 152, "tc98": 152, "790722e": 152, "325391e": 152, "tc98m": 152, "790731e": 152, "tc99": 152, "890625e": 152, "661667e": 152, "tc99m": 152, "890641e": 152, "163000e": 152, "tc100": 152, "990766e": 152, "565000e": 152, "tc101": 152, "009073e": 152, "532000e": 152, "tc101m": 152, "009075e": 152, "tc102": 152, "019092e": 152, "tc102m": 152, "019093e": 152, "tc103": 152, "029092e": 152, "tc104": 152, "039114e": 152, "098000e": 152, "tc105": 152, "049117e": 152, "584000e": 152, "tc106": 152, "059144e": 152, "tc107": 152, "069151e": 152, "tc108": 152, "079185e": 152, "tc109": 152, "089200e": 152, "tc110": 152, "099238e": 152, "tc111": 152, "109257e": 152, "tc112": 152, "119291e": 152, "tc113": 152, "129316e": 152, "tc114": 152, "139359e": 152, "tc114m": 152, "139361e": 152, "tc115": 152, "149387e": 152, "tc116": 152, "159434e": 152, "tc117": 152, "169465e": 152, "tc118": 152, "179515e": 152, "tc119": 152, "189556e": 152, "tc120": 152, "199606e": 152, "tc121": 152, "121": [152, 238], "209644e": 152, "tc122": 152, "122": [152, 210, 238], "219698e": 152, "010649e": 152, "ru85": 152, "496895e": 152, "ru86": 152, "595873e": 152, "ru87": 152, "694918e": 152, "ru88": 152, "794026e": 152, "ru89": 152, "893611e": 152, "ru90": 152, "992989e": 152, "ru91": 152, "092629e": 152, "ru92": 152, "192012e": 152, "ru93": 152, "291705e": 152, "ru93m": 152, "ru94": 152, "391136e": 152, "108000e": 152, "ru94m": 152, "391420e": 152, "ru95": 152, "491041e": 152, "914800e": 152, "ru96": 152, "590760e": 152, "ru97": 152, "690755e": 152, "445120e": 152, "ru98": 152, "790529e": 152, "ru99": 152, "890594e": 152, "ru100": 152, "990422e": 152, "ru101": 152, "706000e": 152, "009056e": 152, "ru101m": 152, "009061e": 152, "ru102": 152, "155000e": 152, "019043e": 152, "ru103": 152, "029063e": 152, "390941e": 152, "ru103m": 152, "029066e": 152, "ru104": 152, "039054e": 152, "ru105": 152, "049078e": 152, "598040e": 152, "ru106": 152, "059073e": 152, "212352e": 152, "ru107": 152, "069099e": 152, "ru108": 152, "079102e": 152, "ru109": 152, "089132e": 152, "ru109m": 152, "089133e": 152, "ru110": 152, "099141e": 152, "ru111": 152, "109177e": 152, "ru112": 152, "119190e": 152, "ru113": 152, "129225e": 152, "ru113m": 152, "129226e": 152, "ru114": 152, "139243e": 152, "ru115": 152, "149287e": 152, "ru116": 152, "159308e": 152, "ru117": 152, "169356e": 152, "ru118": 152, "179378e": 152, "ru119": 152, "189428e": 152, "ru120": 152, "199453e": 152, "ru121": 152, "209503e": 152, "ru122": 152, "219534e": 152, "ru123": 152, "123": [152, 238, 440], "229587e": 152, "ru124": 152, "124": [152, 238], "239616e": 152, "ru125": 152, "125": [152, 238, 460, 465], "249660e": 152, "029055e": 152, "rh88": 152, "796123e": 152, "rh89": 152, "894884e": 152, "rh90": 152, "994287e": 152, "rh90m": 152, "994314e": 152, "rh91": 152, "093655e": 152, "rh91m": 152, "093707e": 152, "rh92": 152, "193198e": 152, "rh92m": 152, "193203e": 152, "rh93": 152, "292574e": 152, "rh94": 152, "392170e": 152, "rh94m": 152, "392202e": 152, "rh95": 152, "491590e": 152, "rh95m": 152, "491648e": 152, "176000e": 152, "rh96": 152, "591446e": 152, "rh96m": 152, "591452e": 152, "rh97": 152, "691134e": 152, "842000e": 152, "rh97m": 152, "691161e": 152, "rh98": 152, "791071e": 152, "rh98m": 152, "791077e": 152, "rh99": 152, "890813e": 152, "391040e": 152, "rh99m": 152, "890820e": 152, "692000e": 152, "rh100": 152, "990812e": 152, "rh100m": 152, "990824e": 152, "rh101": 152, "009062e": 152, "041379e": 152, "rh101m": 152, "009063e": 152, "rh102": 152, "019068e": 152, "791072e": 152, "rh102m": 152, "019070e": 152, "181000e": 152, "rh103": 152, "rh103m": 152, "367000e": 152, "rh104": 152, "039067e": 152, "rh104m": 152, "039068e": 152, "604000e": 152, "rh105": 152, "049057e": 152, "272276e": 152, "rh105m": 152, "049058e": 152, "rh106": 152, "007000e": 152, "rh106m": 152, "059074e": 152, "rh107": 152, "069067e": 152, "302000e": 152, "rh108": 152, "079087e": 152, "680000e": 152, "rh108m": 152, "079089e": 152, "rh109": 152, "089087e": 152, "rh109m": 152, "rh110": 152, "099111e": 152, "rh110m": 152, "099114e": 152, "rh111": 152, "109116e": 152, "rh112": 152, "119144e": 152, "rh112m": 152, "119148e": 152, "rh113": 152, "129155e": 152, "rh114": 152, "139188e": 152, "rh114m": 152, "139190e": 152, "rh115": 152, "149203e": 152, "rh116": 152, "159241e": 152, "rh116m": 152, "159242e": 152, "rh117": 152, "169260e": 152, "rh118": 152, "179301e": 152, "rh119": 152, "189321e": 152, "rh120": 152, "199364e": 152, "rh121": 152, "209387e": 152, "rh122": 152, "219432e": 152, "rh123": 152, "229463e": 152, "rh124": 152, "239509e": 152, "rh125": 152, "249537e": 152, "rh126": 152, "126": [152, 238], "259575e": 152, "rh127": 152, "269608e": 152, "rh128": 152, "128": [152, 210, 238, 325, 339, 468], "279682e": 152, "064153e": 152, "pd90": 152, "995788e": 152, "pd91": 152, "094911e": 152, "pd92": 152, "194042e": 152, "pd93": 152, "293591e": 152, "pd94": 152, "392877e": 152, "pd95": 152, "492469e": 152, "pd95m": 152, "492670e": 152, "pd96": 152, "591816e": 152, "pd97": 152, "691648e": 152, "pd98": 152, "791272e": 152, "062000e": 152, "pd99": 152, "891177e": 152, "284000e": 152, "pd100": 152, "990851e": 152, "136320e": 152, "pd101": 152, "009083e": 152, "049200e": 152, "pd102": 152, "019056e": 152, "pd103": 152, "029061e": 152, "468022e": 152, "pd104": 152, "114000e": 152, "039040e": 152, "pd105": 152, "233000e": 152, "049051e": 152, "pd105m": 152, "049056e": 152, "pd106": 152, "059035e": 152, "pd107": 152, "069051e": 152, "051200e": 152, "pd107m": 152, "069054e": 152, "pd108": 152, "646000e": 152, "079039e": 152, "pd109": 152, "089060e": 152, "892400e": 152, "pd109m": 152, "089062e": 152, "822000e": 152, "pd110": 152, "172000e": 152, "099052e": 152, "pd111": 152, "109077e": 152, "404000e": 152, "pd111m": 152, "109079e": 152, "pd112": 152, "119073e": 152, "574400e": 152, "pd113": 152, "129102e": 152, "pd113m": 152, "pd114": 152, "139104e": 152, "452000e": 152, "pd115": 152, "149137e": 152, "pd115m": 152, "149138e": 152, "pd116": 152, "159142e": 152, "pd117": 152, "169178e": 152, "pd117m": 152, "169181e": 152, "pd118": 152, "179190e": 152, "pd119": 152, "189231e": 152, "pd120": 152, "199247e": 152, "pd121": 152, "209289e": 152, "pd122": 152, "219306e": 152, "pd123": 152, "229349e": 152, "pd124": 152, "239369e": 152, "pd124m": 152, "239380e": 152, "pd125": 152, "249408e": 152, "pd126": 152, "259427e": 152, "pd126m": 152, "259453e": 152, "pd127": 152, "269469e": 152, "pd128": 152, "279497e": 152, "pd129": 152, "129": 152, "289568e": 152, "pd130": 152, "130": [152, 238, 397], "299622e": 152, "pd131": 152, "131": [152, 210, 238], "309700e": 152, "078682e": 152, "ag92": 152, "196006e": 152, "ag93": 152, "294978e": 152, "ag94": 152, "394278e": 152, "ag94m": 152, "394423e": 152, "ag94m2": 152, "394994e": 152, "ag95": 152, "493548e": 152, "ag95m": 152, "493585e": 152, "ag95m2": 152, "493820e": 152, "ag96": 152, "593068e": 152, "ag96m": 152, "593071e": 152, "ag97": 152, "692397e": 152, "ag98": 152, "792157e": 152, "ag99": 152, "891760e": 152, "ag99m": 152, "891814e": 152, "ag100": 152, "991610e": 152, "206000e": 152, "ag100m": 152, "991613e": 152, "ag101": 152, "009128e": 152, "ag101m": 152, "009131e": 152, "ag102": 152, "019117e": 152, "ag102m": 152, "ag103": 152, "029090e": 152, "942000e": 152, "ag103m": 152, "029091e": 152, "ag104": 152, "039086e": 152, "152000e": 152, "ag104m": 152, "ag105": 152, "049065e": 152, "567456e": 152, "ag105m": 152, "049066e": 152, "ag106": 152, "059067e": 152, "ag106m": 152, "059068e": 152, "154000e": 152, "ag107": 152, "183900e": 152, "ag107m": 152, "069052e": 152, "ag108": 152, "079060e": 152, "ag108m": 152, "079061e": 152, "382000e": 152, "ag109": 152, "816100e": 152, "089048e": 152, "ag109m": 152, "ag110": 152, "099061e": 152, "ag110m": 152, "099062e": 152, "159000e": 152, "ag111": 152, "109053e": 152, "436800e": 152, "ag111m": 152, "109054e": 152, "ag112": 152, "119070e": 152, "126800e": 152, "ag113": 152, "129066e": 152, "933200e": 152, "ag113m": 152, "ag114": 152, "139088e": 152, "ag114m": 152, "139090e": 152, "ag115": 152, "149088e": 152, "ag115m": 152, "ag116": 152, "159114e": 152, "ag116m": 152, "ag116m2": 152, "159115e": 152, "ag117": 152, "169117e": 152, "ag117m": 152, "ag118": 152, "179146e": 152, "ag118m": 152, "179147e": 152, "ag119": 152, "189157e": 152, "ag119m": 152, "ag120": 152, "199188e": 152, "ag120m": 152, "199190e": 152, "ag121": 152, "209198e": 152, "ag122": 152, "219235e": 152, "ag122m": 152, "219238e": 152, "ag123": 152, "229249e": 152, "ag124": 152, "239286e": 152, "ag124m": 152, "239287e": 152, "ag125": 152, "249304e": 152, "ag126": 152, "259345e": 152, "ag126m": 152, "259346e": 152, "ag126m2": 152, "259348e": 152, "ag127": 152, "269368e": 152, "ag128": 152, "279412e": 152, "ag129": 152, "289437e": 152, "ag130": 152, "299504e": 152, "ag131": 152, "309541e": 152, "ag132": 152, "132": [152, 210, 238], "319613e": 152, "ag133": 152, "133": [152, 238], "329671e": 152, "124116e": 152, "cd94": 152, "395659e": 152, "cd95": 152, "494987e": 152, "cd96": 152, "593977e": 152, "cd97": 152, "693494e": 152, "cd98": 152, "792740e": 152, "cd99": 152, "892501e": 152, "cd100": 152, "992029e": 152, "cd101": 152, "009187e": 152, "cd102": 152, "019145e": 152, "cd103": 152, "029134e": 152, "cd104": 152, "039098e": 152, "462000e": 152, "cd105": 152, "049095e": 152, "cd106": 152, "059065e": 152, "cd107": 152, "069066e": 152, "cd108": 152, "079042e": 152, "cd109": 152, "089050e": 152, "990816e": 152, "cd109m": 152, "cd109m2": 152, "089055e": 152, "cd110": 152, "099030e": 152, "cd111": 152, "109042e": 152, "cd111m": 152, "109046e": 152, "cd112": 152, "119028e": 152, "cd113": 152, "129044e": 152, "537177e": 152, "cd113m": 152, "129047e": 152, "cd114": 152, "873000e": 152, "139034e": 152, "cd115": 152, "149054e": 152, "924560e": 152, "cd115m": 152, "149056e": 152, "cd116": 152, "490000e": 152, "159048e": 152, "cd117": 152, "169072e": 152, "964000e": 152, "cd117m": 152, "169074e": 152, "cd118": 152, "179069e": 152, "cd119": 152, "189099e": 152, "614000e": 152, "cd119m": 152, "189101e": 152, "cd120": 152, "199099e": 152, "cd121": 152, "209130e": 152, "cd121m": 152, "209132e": 152, "cd122": 152, "219133e": 152, "cd123": 152, "229170e": 152, "cd123m": 152, "229172e": 152, "cd124": 152, "239176e": 152, "cd125": 152, "249212e": 152, "cd125m": 152, "249214e": 152, "cd126": 152, "259224e": 152, "cd127": 152, "269264e": 152, "cd128": 152, "279278e": 152, "cd129": 152, "289321e": 152, "cd129m": 152, "289325e": 152, "cd129m2": 152, "289342e": 152, "cd130": 152, "299339e": 152, "cd131": 152, "309407e": 152, "cd132": 152, "319455e": 152, "cd133": 152, "329507e": 152, "cd134": 152, "134": [152, 238], "339560e": 152, "cd135": 152, "349635e": 152, "cd136": 152, "136": [152, 238], "359400e": 152, "148181e": 152, "in96": 152, "595812e": 152, "in97": 152, "694954e": 152, "in98": 152, "794214e": 152, "in98m": 152, "794302e": 152, "in99": 152, "893422e": 152, "in100": 152, "993111e": 152, "in101": 152, "009263e": 152, "in102": 152, "019241e": 152, "in103": 152, "029199e": 152, "in103m": 152, "029206e": 152, "in104": 152, "039183e": 152, "in104m": 152, "039184e": 152, "in105": 152, "049147e": 152, "042000e": 152, "in105m": 152, "049154e": 152, "in106": 152, "059135e": 152, "in106m": 152, "in107": 152, "069103e": 152, "944000e": 152, "in107m": 152, "069110e": 152, "in108": 152, "079097e": 152, "in108m": 152, "in109": 152, "089072e": 152, "497240e": 152, "in109m": 152, "089078e": 152, "in109m2": 152, "089094e": 152, "in110": 152, "099072e": 152, "771200e": 152, "in110m": 152, "in111": 152, "109051e": 152, "423261e": 152, "in111m": 152, "109057e": 152, "in112": 152, "119055e": 152, "928000e": 152, "in112m": 152, "119057e": 152, "in113": 152, "129041e": 152, "in113m": 152, "129045e": 152, "969000e": 152, "in114": 152, "139049e": 152, "in114m": 152, "139051e": 152, "278000e": 152, "in114m2": 152, "139055e": 152, "in115": 152, "571000e": 152, "149039e": 152, "391660e": 152, "in115m": 152, "149042e": 152, "615000e": 152, "in116": 152, "159053e": 152, "in116m": 152, "159054e": 152, "257000e": 152, "in116m2": 152, "159056e": 152, "in117": 152, "169045e": 152, "in117m": 152, "169049e": 152, "972000e": 152, "in118": 152, "179064e": 152, "in118m": 152, "in118m2": 152, "179066e": 152, "in119": 152, "189058e": 152, "in119m": 152, "189062e": 152, "in120": 152, "199080e": 152, "in120m": 152, "in120m2": 152, "199083e": 152, "in121": 152, "209078e": 152, "in121m": 152, "209082e": 152, "in122": 152, "219103e": 152, "in122m": 152, "in122m2": 152, "219106e": 152, "in123": 152, "229104e": 152, "in123m": 152, "229108e": 152, "in123m2": 152, "229127e": 152, "in124": 152, "239132e": 152, "in124m": 152, "in125": 152, "249136e": 152, "in125m": 152, "249140e": 152, "in125m2": 152, "249159e": 152, "in126": 152, "259165e": 152, "in126m": 152, "259166e": 152, "640000e": 152, "in127": 152, "269174e": 152, "in127m": 152, "269178e": 152, "in127m2": 152, "269194e": 152, "in128": 152, "279202e": 152, "in128m": 152, "279205e": 152, "in129": 152, "289217e": 152, "in129m": 152, "289222e": 152, "in129m2": 152, "289234e": 152, "in130": 152, "299250e": 152, "in130m": 152, "in130m2": 152, "299254e": 152, "in131": 152, "309269e": 152, "in131m": 152, "309272e": 152, "in131m2": 152, "309309e": 152, "in132": 152, "319330e": 152, "in133": 152, "329378e": 152, "in133m": 152, "329387e": 152, "in134": 152, "339441e": 152, "in135": 152, "349493e": 152, "in136": 152, "359556e": 152, "in137": 152, "137": [152, 238], "369611e": 152, "in138": 152, "138": 152, "379518e": 152, "in139": 152, "139": [152, 210, 238, 464], "389466e": 152, "187101e": 152, "sn99": 152, "894933e": 152, "sn100": 152, "993904e": 152, "sn101": 152, "009361e": 152, "sn102": 152, "019303e": 152, "sn103": 152, "029281e": 152, "sn104": 152, "039231e": 152, "sn105": 152, "049213e": 152, "sn106": 152, "059169e": 152, "sn107": 152, "069156e": 152, "sn108": 152, "079119e": 152, "sn109": 152, "089113e": 152, "086000e": 152, "sn110": 152, "099078e": 152, "495440e": 152, "sn111": 152, "118000e": 152, "sn111m": 152, "109080e": 152, "119048e": 152, "sn113": 152, "129052e": 152, "943776e": 152, "sn113m": 152, "129053e": 152, "sn114": 152, "139028e": 152, "sn115": 152, "149033e": 152, "sn115m": 152, "149041e": 152, "sn116": 152, "454000e": 152, "159017e": 152, "sn117": 152, "169030e": 152, "sn117m": 152, "169033e": 152, "sn118": 152, "179016e": 152, "sn119": 152, "189033e": 152, "sn119m": 152, "189034e": 152, "sn120": 152, "199022e": 152, "sn121": 152, "209042e": 152, "730800e": 152, "sn121m": 152, "385000e": 152, "sn122": 152, "219034e": 152, "sn122m": 152, "219064e": 152, "sn123": 152, "229057e": 152, "116288e": 152, "sn123m": 152, "sn124": 152, "239053e": 152, "sn124m": 152, "239081e": 152, "sn125": 152, "249078e": 152, "328960e": 152, "sn125m": 152, "712000e": 152, "sn126": 152, "259077e": 152, "879410e": 152, "sn127": 152, "269104e": 152, "sn127m": 152, "478000e": 152, "sn128": 152, "279105e": 152, "544200e": 152, "sn128m": 152, "279128e": 152, "sn129": 152, "289135e": 152, "sn129m": 152, "sn130": 152, "299140e": 152, "sn130m": 152, "299161e": 152, "sn131": 152, "309170e": 152, "sn131m": 152, "309171e": 152, "sn132": 152, "319178e": 152, "sn133": 152, "329238e": 152, "sn134": 152, "339283e": 152, "sn135": 152, "349347e": 152, "sn136": 152, "359393e": 152, "sn137": 152, "369460e": 152, "sn138": 152, "379509e": 152, "sn139": 152, "389582e": 152, "sn140": 152, "140": [152, 160, 238], "399633e": 152, "sn141": 152, "409458e": 152, "217598e": 152, "sb102": 152, "019456e": 152, "sb103": 152, "029397e": 152, "sb104": 152, "039365e": 152, "sb105": 152, "049315e": 152, "sb106": 152, "059288e": 152, "sb107": 152, "069241e": 152, "sb108": 152, "079222e": 152, "sb109": 152, "089181e": 152, "sb110": 152, "099168e": 152, "sb111": 152, "109132e": 152, "sb112": 152, "119124e": 152, "sb113": 152, "129094e": 152, "002000e": 152, "sb114": 152, "139093e": 152, "094000e": 152, "sb114m": 152, "139098e": 152, "sb115": 152, "149066e": 152, "926000e": 152, "sb116": 152, "159068e": 152, "sb116m": 152, "159072e": 152, "618000e": 152, "sb117": 152, "169048e": 152, "008000e": 152, "sb117m": 152, "169082e": 152, "sb118": 152, "179055e": 152, "sb118m": 152, "179058e": 152, "sb119": 152, "189039e": 152, "374840e": 152, "sb119m": 152, "189070e": 152, "sb120": 152, "199051e": 152, "534000e": 152, "sb120m": 152, "977000e": 152, "sb121": 152, "721000e": 152, "209038e": 152, "sb121m": 152, "209067e": 152, "sb122": 152, "219052e": 152, "353363e": 152, "sb122m": 152, "219053e": 152, "sb122m2": 152, "515000e": 152, "sb123": 152, "279000e": 152, "229042e": 152, "sb123m": 152, "229070e": 152, "sb124": 152, "239059e": 152, "201280e": 152, "sb124m": 152, "sb124m2": 152, "239060e": 152, "212000e": 152, "sb125": 152, "249053e": 152, "705167e": 152, "sb126": 152, "259072e": 152, "067040e": 152, "sb126m": 152, "259073e": 152, "sb126m2": 152, "sb127": 152, "269069e": 152, "326400e": 152, "sb128": 152, "279092e": 152, "sb128m": 152, "246000e": 152, "sb129": 152, "289091e": 152, "571760e": 152, "sb129m": 152, "289111e": 152, "sb130": 152, "299117e": 152, "sb130m": 152, "sb131": 152, "309120e": 152, "381800e": 152, "sb132": 152, "319145e": 152, "sb132m": 152, "319146e": 152, "sb133": 152, "329153e": 152, "sb134": 152, "339204e": 152, "sb134m": 152, "339207e": 152, "sb135": 152, "349252e": 152, "679000e": 152, "sb136": 152, "359303e": 152, "sb137": 152, "369353e": 152, "sb138": 152, "379408e": 152, "sb139": 152, "389460e": 152, "sb140": 152, "399531e": 152, "sb140m": 152, "399534e": 152, "sb141": 152, "409579e": 152, "sb142": 152, "142": [152, 210, 238, 473, 479], "419653e": 152, "sb143": 152, "143": [152, 238], "429568e": 152, "sb144": 152, "144": [152, 238], "439514e": 152, "276031e": 152, "te104": 152, "039470e": 152, "te105": 152, "049436e": 152, "te106": 152, "059375e": 152, "te107": 152, "069350e": 152, "te108": 152, "079294e": 152, "te109": 152, "089274e": 152, "te110": 152, "099224e": 152, "te111": 152, "109211e": 152, "te112": 152, "119170e": 152, "te113": 152, "129159e": 152, "te114": 152, "139121e": 152, "te115": 152, "149119e": 152, "te115m": 152, "te116": 152, "159085e": 152, "te117": 152, "169086e": 152, "te117m": 152, "169090e": 152, "te118": 152, "184000e": 152, "te119": 152, "189064e": 152, "778000e": 152, "te119m": 152, "189067e": 152, "061000e": 152, "te120": 152, "199040e": 152, "te121": 152, "209049e": 152, "656288e": 152, "te121m": 152, "209053e": 152, "419000e": 152, "te122": 152, "219030e": 152, "te123": 152, "229043e": 152, "903237e": 152, "te123m": 152, "229045e": 152, "te124": 152, "239028e": 152, "te125": 152, "249044e": 152, "te125m": 152, "249046e": 152, "959000e": 152, "te126": 152, "259033e": 152, "te127": 152, "269052e": 152, "366000e": 152, "te127m": 152, "269053e": 152, "167000e": 152, "te128": 152, "174000e": 152, "279045e": 152, "429883e": 152, "te129": 152, "289066e": 152, "te129m": 152, "289067e": 152, "903000e": 152, "te130": 152, "408000e": 152, "299062e": 152, "492997e": 152, "te131": 152, "309085e": 152, "te131m": 152, "309087e": 152, "197000e": 152, "te131m2": 152, "309106e": 152, "te132": 152, "319086e": 152, "768256e": 152, "te132m": 152, "319106e": 152, "810000e": 152, "te133": 152, "329110e": 152, "te133m": 152, "329113e": 152, "324000e": 152, "te134": 152, "339114e": 152, "508000e": 152, "te135": 152, "349164e": 152, "te136": 152, "359201e": 152, "763000e": 152, "te137": 152, "369253e": 152, "te138": 152, "379292e": 152, "te139": 152, "389347e": 152, "te140": 152, "399388e": 152, "te141": 152, "409447e": 152, "te142": 152, "419491e": 152, "te143": 152, "429566e": 152, "te144": 152, "439608e": 152, "te145": 152, "145": [152, 488], "449673e": 152, "te146": 152, "146": [152, 210, 238], "459485e": 152, "269045e": 152, "i106": 152, "059544e": 152, "i107": 152, "069479e": 152, "i108": 152, "079435e": 152, "i109": 152, "089381e": 152, "i110": 152, "099352e": 152, "i111": 152, "109303e": 152, "i112": 152, "119280e": 152, "i113": 152, "129236e": 152, "i114": 152, "139219e": 152, "i114m": 152, "139221e": 152, "i115": 152, "149180e": 152, "i116": 152, "159168e": 152, "i117": 152, "169136e": 152, "332000e": 152, "i118": 152, "179131e": 152, "i118m": 152, "179133e": 152, "i119": 152, "i120": 152, "199100e": 152, "896000e": 152, "i120m": 152, "199104e": 152, "i121": 152, "209074e": 152, "632000e": 152, "i122": 152, "219076e": 152, "i123": 152, "229056e": 152, "760280e": 152, "i124": 152, "239062e": 152, "608064e": 152, "i125": 152, "132765e": 152, "i126": 152, "259056e": 152, "117152e": 152, "i127": 152, "i128": 152, "279058e": 152, "499400e": 152, "i129": 152, "289050e": 152, "i130": 152, "299067e": 152, "449600e": 152, "i130m": 152, "304000e": 152, "i131": 152, "309061e": 152, "933773e": 152, "i132": 152, "319080e": 152, "262000e": 152, "i132m": 152, "319081e": 152, "993000e": 152, "i133": 152, "329078e": 152, "i133m": 152, "329096e": 152, "i134": 152, "339097e": 152, "i134m": 152, "339101e": 152, "112000e": 152, "i135": 152, "349100e": 152, "368800e": 152, "i136": 152, "359147e": 152, "i136m": 152, "359149e": 152, "i137": 152, "369179e": 152, "i138": 152, "379223e": 152, "i139": 152, "389261e": 152, "i140": 152, "399310e": 152, "i141": 152, "409350e": 152, "i142": 152, "419402e": 152, "i143": 152, "429446e": 152, "i144": 152, "439500e": 152, "i145": 152, "449554e": 152, "i146": 152, "459612e": 152, "i147": 152, "147": [152, 238], "469657e": 152, "i148": 152, "148": [152, 238, 465], "479581e": 152, "i149": 152, "149": [152, 210, 238], "489530e": 152, "312928e": 152, "xe108": 152, "079556e": 152, "xe109": 152, "089517e": 152, "xe110": 152, "099443e": 152, "xe111": 152, "109416e": 152, "xe112": 152, "119356e": 152, "xe113": 152, "129333e": 152, "xe114": 152, "139280e": 152, "xe115": 152, "149263e": 152, "xe116": 152, "159216e": 152, "xe117": 152, "169204e": 152, "xe118": 152, "179162e": 152, "xe119": 152, "189154e": 152, "xe120": 152, "199118e": 152, "xe121": 152, "209115e": 152, "xe122": 152, "219084e": 152, "236000e": 152, "xe123": 152, "229085e": 152, "xe124": 152, "049108e": 152, "xe125": 152, "249064e": 152, "084000e": 152, "xe125m": 152, "249067e": 152, "xe126": 152, "259043e": 152, "xe127": 152, "140294e": 152, "xe127m": 152, "269055e": 152, "xe128": 152, "910200e": 152, "279035e": 152, "xe129": 152, "640060e": 152, "289048e": 152, "xe129m": 152, "xe130": 152, "071000e": 152, "299035e": 152, "xe131": 152, "123240e": 152, "309051e": 152, "xe131m": 152, "309053e": 152, "023000e": 152, "xe132": 152, "690860e": 152, "319042e": 152, "xe132m": 152, "319071e": 152, "xe133": 152, "329059e": 152, "533840e": 152, "xe133m": 152, "329062e": 152, "xe134": 152, "043570e": 152, "339054e": 152, "830302e": 152, "xe134m": 152, "339075e": 152, "xe135": 152, "349072e": 152, "290400e": 152, "xe135m": 152, "349078e": 152, "xe136": 152, "857300e": 152, "359072e": 152, "832074e": 152, "xe137": 152, "369116e": 152, "290800e": 152, "xe138": 152, "379140e": 152, "xe139": 152, "389188e": 152, "xe140": 152, "399216e": 152, "xe141": 152, "409266e": 152, "xe142": 152, "419297e": 152, "xe143": 152, "429351e": 152, "xe143m": 152, "429354e": 152, "xe144": 152, "439385e": 152, "xe145": 152, "449441e": 152, "xe146": 152, "459477e": 152, "xe147": 152, "469536e": 152, "xe148": 152, "479573e": 152, "xe149": 152, "489633e": 152, "xe150": 152, "150": [152, 160, 397, 398, 448, 492], "499675e": 152, "xe151": 152, "151": [152, 238], "509626e": 152, "329055e": 152, "cs111": 152, "109547e": 152, "cs112": 152, "119503e": 152, "cs113": 152, "129445e": 152, "cs114": 152, "139414e": 152, "cs115": 152, "149359e": 152, "cs116": 152, "159334e": 152, "cs116m": 152, "159335e": 152, "cs117": 152, "169287e": 152, "cs117m": 152, "169291e": 152, "cs118": 152, "179266e": 152, "cs118m": 152, "179267e": 152, "cs119": 152, "189224e": 152, "cs119m": 152, "cs120": 152, "199207e": 152, "cs120m": 152, "199208e": 152, "cs121": 152, "209172e": 152, "cs121m": 152, "209173e": 152, "cs122": 152, "219161e": 152, "cs122m": 152, "219162e": 152, "cs122m2": 152, "219163e": 152, "cs123": 152, "229130e": 152, "cs123m": 152, "229132e": 152, "cs124": 152, "239123e": 152, "cs124m": 152, "239128e": 152, "cs125": 152, "249097e": 152, "cs125m": 152, "249100e": 152, "cs126": 152, "259095e": 152, "858000e": 152, "cs127": 152, "269074e": 152, "cs127m": 152, "269079e": 152, "cs128": 152, "279077e": 152, "cs129": 152, "289061e": 152, "154160e": 152, "cs130": 152, "752600e": 152, "cs130m": 152, "299069e": 152, "cs131": 152, "309055e": 152, "371296e": 152, "cs132": 152, "319064e": 152, "598720e": 152, "cs133": 152, "cs134": 152, "339067e": 152, "517136e": 152, "cs134m": 152, "339069e": 152, "cs135": 152, "349060e": 152, "258093e": 152, "cs135m": 152, "349077e": 152, "cs136": 152, "359073e": 152, "124064e": 152, "cs136m": 152, "359080e": 152, "cs137": 152, "369071e": 152, "492323e": 152, "cs138": 152, "379110e": 152, "cs138m": 152, "379111e": 152, "746000e": 152, "cs139": 152, "389134e": 152, "562000e": 152, "cs140": 152, "399173e": 152, "cs141": 152, "409200e": 152, "cs142": 152, "419243e": 152, "684000e": 152, "cs143": 152, "429274e": 152, "791000e": 152, "cs144": 152, "439321e": 152, "cs144m": 152, "439326e": 152, "cs145": 152, "449355e": 152, "cs146": 152, "459403e": 152, "cs147": 152, "469442e": 152, "295000e": 152, "cs148": 152, "479492e": 152, "cs149": 152, "489529e": 152, "cs150": 152, "499582e": 152, "cs151": 152, "509622e": 152, "cs152": 152, "152": [152, 238], "519676e": 152, "cs153": 152, "153": [152, 210, 238, 479], "529604e": 152, "cs154": 152, "154": [152, 238, 464], "539552e": 152, "373269e": 152, "ba113": 152, "129586e": 152, "ba114": 152, "139507e": 152, "ba115": 152, "149474e": 152, "ba116": 152, "159414e": 152, "ba117": 152, "169385e": 152, "ba118": 152, "179330e": 152, "ba119": 152, "189307e": 152, "ba120": 152, "199260e": 152, "ba121": 152, "209241e": 152, "ba122": 152, "219199e": 152, "ba123": 152, "229188e": 152, "ba124": 152, "239151e": 152, "ba125": 152, "249145e": 152, "ba126": 152, "259113e": 152, "ba127": 152, "269111e": 152, "ba127m": 152, "269112e": 152, "ba128": 152, "279083e": 152, "099520e": 152, "ba129": 152, "289087e": 152, "ba129m": 152, "686000e": 152, "ba130": 152, "299063e": 152, "ba130m": 152, "299090e": 152, "ba131": 152, "309069e": 152, "ba131m": 152, "309071e": 152, "ba132": 152, "319051e": 152, "467078e": 152, "ba133": 152, "329060e": 152, "329571e": 152, "ba133m": 152, "329063e": 152, "401000e": 152, "ba134": 152, "417000e": 152, "339045e": 152, "ba135": 152, "349057e": 152, "ba135m": 152, "033000e": 152, "ba136": 152, "854000e": 152, "359046e": 152, "ba136m": 152, "359068e": 152, "ba137": 152, "123200e": 152, "369058e": 152, "ba137m": 152, "369065e": 152, "531000e": 152, "ba138": 152, "169800e": 152, "379052e": 152, "ba139": 152, "389088e": 152, "975800e": 152, "ba140": 152, "399106e": 152, "101686e": 152, "ba141": 152, "409144e": 152, "096200e": 152, "ba142": 152, "419165e": 152, "ba143": 152, "429206e": 152, "ba144": 152, "439230e": 152, "ba145": 152, "449276e": 152, "ba146": 152, "459302e": 152, "ba147": 152, "469349e": 152, "ba148": 152, "479377e": 152, "ba149": 152, "489426e": 152, "ba150": 152, "499457e": 152, "ba151": 152, "509508e": 152, "ba152": 152, "519543e": 152, "ba153": 152, "529596e": 152, "ba154": 152, "539636e": 152, "ba155": 152, "155": [152, 210], "549590e": 152, "ba156": 152, "559518e": 152, "389055e": 152, "la116": 152, "159565e": 152, "la117": 152, "169501e": 152, "la117m": 152, "169502e": 152, "la118": 152, "179467e": 152, "la119": 152, "189410e": 152, "la120": 152, "199381e": 152, "la121": 152, "209330e": 152, "la122": 152, "219307e": 152, "la123": 152, "229262e": 152, "la124": 152, "239246e": 152, "la124m": 152, "239247e": 152, "la125": 152, "249208e": 152, "la125m": 152, "249209e": 152, "la126": 152, "259195e": 152, "la126m": 152, "259201e": 152, "la127": 152, "269164e": 152, "la127m": 152, "la128": 152, "279156e": 152, "la128m": 152, "279157e": 152, "la129": 152, "289127e": 152, "la129m": 152, "289129e": 152, "la130": 152, "299124e": 152, "la131": 152, "309101e": 152, "la131m": 152, "309104e": 152, "la132": 152, "319101e": 152, "728000e": 152, "la132m": 152, "319103e": 152, "la133": 152, "329082e": 152, "408320e": 152, "la134": 152, "339085e": 152, "la134m": 152, "339090e": 152, "la135": 152, "349070e": 152, "la136": 152, "359076e": 152, "922000e": 152, "la136m": 152, "359079e": 152, "la137": 152, "893416e": 152, "la138": 152, "379071e": 152, "250363e": 152, "la139": 152, "991000e": 152, "389064e": 152, "la140": 152, "399095e": 152, "450293e": 152, "la141": 152, "409110e": 152, "411200e": 152, "la142": 152, "419141e": 152, "la143": 152, "429161e": 152, "la144": 152, "439196e": 152, "la145": 152, "449216e": 152, "la146": 152, "459258e": 152, "la146m": 152, "la147": 152, "469282e": 152, "la148": 152, "479322e": 152, "la149": 152, "489347e": 152, "la150": 152, "499388e": 152, "la151": 152, "509417e": 152, "la152": 152, "519462e": 152, "la153": 152, "529496e": 152, "la154": 152, "539545e": 152, "la155": 152, "549583e": 152, "la156": 152, "559638e": 152, "la157": 152, "157": [152, 238], "569678e": 152, "la158": 152, "158": [152, 238], "579524e": 152, "la159": 152, "159": 152, "589559e": 152, "401157e": 152, "ce119": 152, "189528e": 152, "ce120": 152, "199466e": 152, "ce121": 152, "209434e": 152, "ce122": 152, "219379e": 152, "ce123": 152, "229354e": 152, "ce124": 152, "239304e": 152, "ce125": 152, "249284e": 152, "ce126": 152, "259240e": 152, "ce127": 152, "269227e": 152, "ce127m": 152, "ce128": 152, "279189e": 152, "358000e": 152, "ce129": 152, "289181e": 152, "ce130": 152, "299147e": 152, "ce131": 152, "309144e": 152, "ce131m": 152, "309145e": 152, "ce132": 152, "319115e": 152, "263600e": 152, "ce132m": 152, "319140e": 152, "ce133": 152, "329115e": 152, "ce133m": 152, "329116e": 152, "836000e": 152, "ce134": 152, "339089e": 152, "730240e": 152, "ce135": 152, "349092e": 152, "ce135m": 152, "349096e": 152, "ce136": 152, "ce137": 152, "369078e": 152, "ce137m": 152, "369081e": 152, "238000e": 152, "ce138": 152, "379060e": 152, "388505e": 152, "ce138m": 152, "379083e": 152, "ce139": 152, "389067e": 152, "189123e": 152, "ce139m": 152, "389075e": 152, "ce140": 152, "399054e": 152, "ce141": 152, "409083e": 152, "808950e": 152, "ce142": 152, "111400e": 152, "419092e": 152, "577846e": 152, "ce143": 152, "429124e": 152, "189404e": 152, "ce144": 152, "439136e": 152, "461622e": 152, "ce145": 152, "449172e": 152, "806000e": 152, "ce146": 152, "459188e": 152, "ce147": 152, "469227e": 152, "ce148": 152, "479244e": 152, "ce149": 152, "489284e": 152, "ce150": 152, "499304e": 152, "ce151": 152, "509340e": 152, "ce152": 152, "519365e": 152, "ce153": 152, "529406e": 152, "ce154": 152, "539434e": 152, "ce155": 152, "549480e": 152, "ce156": 152, "559513e": 152, "ce157": 152, "569563e": 152, "ce158": 152, "579600e": 152, "ce159": 152, "589653e": 152, "ce160": 152, "160": [152, 238, 347], "599494e": 152, "ce161": 152, "161": [152, 238], "609543e": 152, "ce162": 152, "162": [152, 238], "619502e": 152, "409077e": 152, "pr121": 152, "209554e": 152, "pr122": 152, "219518e": 152, "pr123": 152, "229460e": 152, "pr124": 152, "239430e": 152, "pr125": 152, "249378e": 152, "pr126": 152, "259353e": 152, "pr127": 152, "269308e": 152, "pr128": 152, "279288e": 152, "pr129": 152, "289251e": 152, "pr130": 152, "299236e": 152, "pr131": 152, "309203e": 152, "pr131m": 152, "309204e": 152, "pr132": 152, "319193e": 152, "pr133": 152, "329163e": 152, "pr133m": 152, "329165e": 152, "pr134": 152, "339157e": 152, "pr134m": 152, "339158e": 152, "pr135": 152, "349131e": 152, "pr135m": 152, "349135e": 152, "pr136": 152, "359127e": 152, "pr137": 152, "369107e": 152, "608000e": 152, "pr138": 152, "379108e": 152, "pr138m": 152, "pr139": 152, "389089e": 152, "587600e": 152, "pr140": 152, "399091e": 152, "034000e": 152, "pr141": 152, "pr142": 152, "419100e": 152, "883200e": 152, "pr142m": 152, "pr143": 152, "429108e": 152, "172448e": 152, "pr144": 152, "439133e": 152, "036800e": 152, "pr144m": 152, "439134e": 152, "pr145": 152, "449145e": 152, "154240e": 152, "pr146": 152, "459176e": 152, "445400e": 152, "pr147": 152, "469190e": 152, "064000e": 152, "pr148": 152, "479221e": 152, "pr148m": 152, "479222e": 152, "pr149": 152, "489237e": 152, "356000e": 152, "pr150": 152, "499267e": 152, "pr151": 152, "509283e": 152, "pr152": 152, "519315e": 152, "pr153": 152, "529338e": 152, "pr154": 152, "539375e": 152, "pr155": 152, "549401e": 152, "pr156": 152, "559443e": 152, "pr157": 152, "569474e": 152, "pr158": 152, "579520e": 152, "pr159": 152, "589555e": 152, "pr160": 152, "599604e": 152, "pr161": 152, "609642e": 152, "pr162": 152, "pr163": 152, "163": [152, 238], "629536e": 152, "pr164": 152, "164": [152, 160, 238], "639484e": 152, "442361e": 152, "nd124": 152, "239522e": 152, "nd125": 152, "249489e": 152, "nd126": 152, "259432e": 152, "nd127": 152, "269405e": 152, "nd128": 152, "279354e": 152, "nd129": 152, "289332e": 152, "nd130": 152, "299285e": 152, "nd131": 152, "nd132": 152, "319233e": 152, "nd133": 152, "329223e": 152, "nd133m": 152, "329225e": 152, "nd134": 152, "339188e": 152, "nd134m": 152, "339213e": 152, "nd135": 152, "349182e": 152, "nd136": 152, "359150e": 152, "039000e": 152, "nd137": 152, "369146e": 152, "nd137m": 152, "369151e": 152, "nd138": 152, "379120e": 152, "814400e": 152, "nd139": 152, "389120e": 152, "782000e": 152, "nd139m": 152, "389122e": 152, "nd140": 152, "911680e": 152, "nd140m": 152, "399119e": 152, "nd141": 152, "409096e": 152, "nd141m": 152, "409104e": 152, "nd142": 152, "419077e": 152, "nd143": 152, "429098e": 152, "nd144": 152, "439101e": 152, "nd145": 152, "449126e": 152, "nd146": 152, "459131e": 152, "nd147": 152, "469161e": 152, "529920e": 152, "nd148": 152, "479169e": 152, "nd149": 152, "489201e": 152, "220800e": 152, "nd150": 152, "499209e": 152, "871680e": 152, "nd151": 152, "509238e": 152, "464000e": 152, "nd152": 152, "519247e": 152, "nd153": 152, "529277e": 152, "nd154": 152, "539295e": 152, "nd155": 152, "549329e": 152, "nd156": 152, "559350e": 152, "nd157": 152, "569390e": 152, "nd158": 152, "579416e": 152, "nd159": 152, "589461e": 152, "nd160": 152, "nd161": 152, "609539e": 152, "nd162": 152, "619569e": 152, "nd163": 152, "629622e": 152, "nd164": 152, "nd165": 152, "165": [152, 238, 346, 456, 465], "649530e": 152, "nd166": 152, "166": 152, "659496e": 152, "nd167": 152, "167": [152, 238], "669529e": 152, "pm126": 152, "pm127": 152, "269516e": 152, "pm128": 152, "279484e": 152, "pm129": 152, "289432e": 152, "pm130": 152, "299405e": 152, "pm131": 152, "309359e": 152, "pm132": 152, "319338e": 152, "pm133": 152, "329298e": 152, "pm133m": 152, "329299e": 152, "pm134": 152, "339284e": 152, "pm134m": 152, "pm135": 152, "349249e": 152, "pm135m": 152, "349251e": 152, "pm136": 152, "359236e": 152, "pm136m": 152, "359237e": 152, "pm137": 152, "369205e": 152, "pm138": 152, "379195e": 152, "pm138m": 152, "379196e": 152, "pm139": 152, "389168e": 152, "pm139m": 152, "389170e": 152, "pm140": 152, "399160e": 152, "pm140m": 152, "399165e": 152, "pm141": 152, "409136e": 152, "254000e": 152, "pm142": 152, "419129e": 152, "pm142m": 152, "419138e": 152, "pm143": 152, "429109e": 152, "289600e": 152, "pm144": 152, "439126e": 152, "pm145": 152, "449127e": 152, "585576e": 152, "pm146": 152, "459147e": 152, "745098e": 152, "pm147": 152, "469151e": 152, "278644e": 152, "pm148": 152, "479175e": 152, "637952e": 152, "pm148m": 152, "479176e": 152, "567000e": 152, "pm149": 152, "489183e": 152, "910880e": 152, "pm150": 152, "499210e": 152, "712800e": 152, "pm151": 152, "509212e": 152, "022400e": 152, "pm152": 152, "519235e": 152, "472000e": 152, "pm152m": 152, "519237e": 152, "512000e": 152, "pm152m2": 152, "519239e": 152, "pm153": 152, "529241e": 152, "pm154": 152, "539265e": 152, "pm154m": 152, "539266e": 152, "pm155": 152, "549281e": 152, "pm156": 152, "559311e": 152, "pm156m": 152, "559312e": 152, "pm157": 152, "569330e": 152, "056000e": 152, "pm158": 152, "579366e": 152, "pm159": 152, "589390e": 152, "pm160": 152, "599430e": 152, "pm161": 152, "609459e": 152, "pm162": 152, "619503e": 152, "pm163": 152, "629537e": 152, "pm164": 152, "639578e": 152, "pm165": 152, "649616e": 152, "pm166": 152, "pm167": 152, "pm168": 152, "168": [152, 238], "679481e": 152, "pm169": 152, "169": [152, 210, 238, 285, 297, 298, 453, 465, 488], "689526e": 152, "503663e": 152, "sm128": 152, "279581e": 152, "sm129": 152, "289546e": 152, "sm130": 152, "299489e": 152, "sm131": 152, "309461e": 152, "sm132": 152, "319407e": 152, "sm133": 152, "sm133m": 152, "329389e": 152, "sm134": 152, "339340e": 152, "sm135": 152, "349325e": 152, "sm136": 152, "359283e": 152, "sm137": 152, "369270e": 152, "sm138": 152, "379232e": 152, "sm139": 152, "389223e": 152, "542000e": 152, "sm139m": 152, "389228e": 152, "sm140": 152, "399190e": 152, "892000e": 152, "sm141": 152, "409185e": 152, "sm141m": 152, "409187e": 152, "sm142": 152, "419152e": 152, "349400e": 152, "sm143": 152, "429146e": 152, "sm143m": 152, "429154e": 152, "sm143m2": 152, "429176e": 152, "sm144": 152, "439120e": 152, "sm145": 152, "449134e": 152, "937600e": 152, "sm146": 152, "459130e": 152, "sm147": 152, "499000e": 152, "469149e": 152, "386058e": 152, "sm148": 152, "124000e": 152, "479148e": 152, "208985e": 152, "sm149": 152, "489172e": 152, "sm150": 152, "499173e": 152, "sm151": 152, "509199e": 152, "840123e": 152, "sm152": 152, "675000e": 152, "519197e": 152, "sm153": 152, "529221e": 152, "666224e": 152, "sm153m": 152, "529222e": 152, "sm154": 152, "539222e": 152, "sm155": 152, "549246e": 152, "330800e": 152, "sm156": 152, "559255e": 152, "sm157": 152, "569284e": 152, "818000e": 152, "sm158": 152, "579300e": 152, "sm159": 152, "589332e": 152, "137000e": 152, "sm160": 152, "599351e": 152, "sm161": 152, "609388e": 152, "sm162": 152, "619412e": 152, "sm163": 152, "629454e": 152, "sm164": 152, "639483e": 152, "sm165": 152, "sm166": 152, "659556e": 152, "sm167": 152, "669610e": 152, "sm168": 152, "679646e": 152, "sm169": 152, "sm170": 152, "170": [152, 347, 397], "699498e": 152, "sm171": 152, "171": [152, 210, 238], "709527e": 152, "sm172": 152, "172": [152, 238], "719485e": 152, "519644e": 152, "eu130": 152, "299636e": 152, "eu131": 152, "309578e": 152, "eu132": 152, "319544e": 152, "eu133": 152, "329492e": 152, "eu134": 152, "339465e": 152, "eu135": 152, "349418e": 152, "eu136": 152, "359396e": 152, "eu136m": 152, "359397e": 152, "eu137": 152, "369356e": 152, "eu138": 152, "379338e": 152, "eu139": 152, "389298e": 152, "eu139m": 152, "389300e": 152, "eu140": 152, "399281e": 152, "eu140m": 152, "399283e": 152, "eu141": 152, "409249e": 152, "eu141m": 152, "409250e": 152, "eu142": 152, "419234e": 152, "eu142m": 152, "419239e": 152, "eu143": 152, "429203e": 152, "554000e": 152, "eu144": 152, "439188e": 152, "eu145": 152, "449163e": 152, "123520e": 152, "eu146": 152, "459172e": 152, "983040e": 152, "eu146m": 152, "459179e": 152, "eu147": 152, "469167e": 152, "082240e": 152, "eu148": 152, "479181e": 152, "708800e": 152, "eu149": 152, "489179e": 152, "043840e": 152, "eu150": 152, "499197e": 152, "164451e": 152, "eu150m": 152, "eu151": [152, 242], "781000e": 152, "364677e": 152, "eu151m": 152, "509201e": 152, "eu152": 152, "519217e": 152, "265550e": 152, "eu152m": 152, "519218e": 152, "eu152m2": 152, "519219e": 152, "eu153": 152, "219000e": 152, "529212e": 152, "eu154": 152, "539230e": 152, "714211e": 152, "eu154m": 152, "539231e": 152, "eu155": 152, "549229e": 152, "499901e": 152, "eu156": 152, "559248e": 152, "312416e": 152, "eu157": 152, "569254e": 152, "464800e": 152, "eu158": 152, "579278e": 152, "754000e": 152, "eu159": 152, "589291e": 152, "eu160": 152, "599320e": 152, "eu160m": 152, "599321e": 152, "eu161": 152, "609337e": 152, "eu162": 152, "619370e": 152, "eu163": 152, "629392e": 152, "eu164": 152, "639430e": 152, "eu165": 152, "649457e": 152, "eu166": 152, "659500e": 152, "eu167": 152, "669532e": 152, "eu168": 152, "679572e": 152, "eu169": 152, "689609e": 152, "eu170": 152, "699659e": 152, "eu171": 152, "eu172": 152, "572521e": 152, "gd133": 152, "329606e": 152, "gd134": 152, "339554e": 152, "gd135": 152, "349526e": 152, "gd136": 152, "359473e": 152, "gd137": 152, "369450e": 152, "gd138": 152, "379401e": 152, "gd139": 152, "389382e": 152, "gd139m": 152, "389385e": 152, "gd140": 152, "399337e": 152, "gd141": 152, "409321e": 152, "gd141m": 152, "409325e": 152, "gd142": 152, "419281e": 152, "gd143": 152, "429267e": 152, "gd143m": 152, "429269e": 152, "gd144": 152, "682000e": 152, "gd145": 152, "449217e": 152, "gd145m": 152, "449225e": 152, "gd146": 152, "459183e": 152, "170528e": 152, "gd147": 152, "469191e": 152, "370160e": 152, "gd148": 152, "243697e": 152, "gd149": 152, "489193e": 152, "017920e": 152, "gd150": 152, "499187e": 152, "648690e": 152, "gd151": 152, "509203e": 152, "070496e": 152, "gd152": 152, "519198e": 152, "408148e": 152, "gd153": 152, "529217e": 152, "077056e": 152, "gd153m": 152, "529219e": 152, "gd154": 152, "539209e": 152, "gd155": 152, "549226e": 152, "gd155m": 152, "549228e": 152, "gd156": 152, "559221e": 152, "gd157": 152, "569240e": 152, "gd157m": 152, "569244e": 152, "gd158": 152, "579241e": 152, "gd159": 152, "589264e": 152, "652440e": 152, "gd160": 152, "186000e": 152, "599271e": 152, "gd161": 152, "609297e": 152, "196000e": 152, "gd162": 152, "619310e": 152, "gd163": 152, "629340e": 152, "gd164": 152, "639359e": 152, "gd165": 152, "649394e": 152, "gd166": 152, "659416e": 152, "gd167": 152, "669456e": 152, "gd168": 152, "679484e": 152, "gd169": 152, "689529e": 152, "gd170": 152, "699552e": 152, "gd171": 152, "709602e": 152, "gd172": 152, "719634e": 152, "589253e": 152, "tb135": 152, "349638e": 152, "tb136": 152, "359614e": 152, "tb137": 152, "369560e": 152, "tb138": 152, "379532e": 152, "tb139": 152, "389483e": 152, "tb140": 152, "399458e": 152, "tb141": 152, "409414e": 152, "tb141m": 152, "409418e": 152, "tb142": 152, "419387e": 152, "tb142m": 152, "419390e": 152, "tb142m2": 152, "419394e": 152, "tb143": 152, "tb143m": 152, "tb144": 152, "439330e": 152, "tb144m": 152, "439335e": 152, "tb145": 152, "449293e": 152, "tb146": 152, "459272e": 152, "tb146m": 152, "459274e": 152, "tb146m2": 152, "459282e": 152, "tb147": 152, "469240e": 152, "904000e": 152, "tb147m": 152, "469241e": 152, "tb148": 152, "479243e": 152, "tb148m": 152, "tb149": 152, "489232e": 152, "482480e": 152, "tb149m": 152, "489233e": 152, "496000e": 152, "tb150": 152, "499237e": 152, "252800e": 152, "tb150m": 152, "499242e": 152, "tb151": 152, "509231e": 152, "339240e": 152, "tb151m": 152, "509232e": 152, "tb152": 152, "519241e": 152, "tb152m": 152, "519246e": 152, "tb153": 152, "529234e": 152, "021760e": 152, "tb153m": 152, "529236e": 152, "tb154": 152, "539247e": 152, "tb154m": 152, "539249e": 152, "tb154m2": 152, "539251e": 152, "tb155": 152, "549235e": 152, "596480e": 152, "tb156": 152, "559247e": 152, "622400e": 152, "tb156m": 152, "908000e": 152, "tb156m2": 152, "559249e": 152, "784000e": 152, "tb157": 152, "240542e": 152, "tb158": 152, "579254e": 152, "680247e": 152, "tb158m": 152, "579255e": 152, "tb158m2": 152, "579258e": 152, "tb159": 152, "tb160": 152, "599272e": 152, "246720e": 152, "tb161": 152, "609276e": 152, "952960e": 152, "tb162": 152, "619295e": 152, "tb162m": 152, "tb163": 152, "629306e": 152, "tb164": 152, "639334e": 152, "tb165": 152, "649349e": 152, "tb166": 152, "659380e": 152, "tb167": 152, "669401e": 152, "tb168": 152, "679436e": 152, "tb169": 152, "689462e": 152, "tb170": 152, "699502e": 152, "tb171": 152, "709533e": 152, "tb172": 152, "719570e": 152, "tb173": 152, "729602e": 152, "tb174": 152, "174": [152, 238], "739649e": 152, "624970e": 152, "dy138": 152, "379625e": 152, "dy139": 152, "389595e": 152, "dy140": 152, "399540e": 152, "dy141": 152, "409514e": 152, "dy142": 152, "419464e": 152, "dy143": 152, "429438e": 152, "dy143m": 152, "429442e": 152, "dy144": 152, "439393e": 152, "dy145": 152, "449374e": 152, "dy145m": 152, "449376e": 152, "dy146": 152, "459328e": 152, "dy146m": 152, "459360e": 152, "dy147": 152, "469311e": 152, "dy147m": 152, "469319e": 152, "dy148": 152, "479272e": 152, "dy149": 152, "489273e": 152, "dy149m": 152, "489302e": 152, "dy150": 152, "499256e": 152, "dy151": 152, "509262e": 152, "074000e": 152, "dy152": 152, "dy153": 152, "529258e": 152, "dy154": 152, "539244e": 152, "dy155": 152, "549258e": 152, "dy156": 152, "559243e": 152, "dy157": 152, "569255e": 152, "930400e": 152, "dy157m": 152, "569257e": 152, "dy158": 152, "579244e": 152, "dy159": 152, "589257e": 152, "247616e": 152, "dy159m": 152, "589261e": 152, "dy160": 152, "599252e": 152, "dy161": 152, "609269e": 152, "dy162": 152, "551000e": 152, "619268e": 152, "dy163": 152, "629287e": 152, "dy164": 152, "639292e": 152, "dy165": 152, "649317e": 152, "395200e": 152, "dy165m": 152, "649318e": 152, "dy166": 152, "659328e": 152, "dy167": 152, "669357e": 152, "dy168": 152, "679371e": 152, "dy169": 152, "689403e": 152, "dy170": 152, "699424e": 152, "dy171": 152, "709462e": 152, "dy172": 152, "719488e": 152, "dy173": 152, "729530e": 152, "dy174": 152, "739551e": 152, "dy175": 152, "175": [152, 238, 448], "749598e": 152, "dy176": 152, "176": [152, 238], "759628e": 152, "649303e": 152, "ho140": 152, "ho141": 152, "409631e": 152, "ho142": 152, "419598e": 152, "ho143": 152, "429546e": 152, "ho144": 152, "439515e": 152, "ho145": 152, "449472e": 152, "ho146": 152, "459446e": 152, "ho147": 152, "469401e": 152, "ho148": 152, "ho148m": 152, "479380e": 152, "ho148m2": 152, "479387e": 152, "ho149": 152, "489338e": 152, "ho149m": 152, "ho150": 152, "499335e": 152, "ho150m": 152, "ho151": 152, "509317e": 152, "ho151m": 152, "ho152": 152, "519317e": 152, "ho152m": 152, "519319e": 152, "ho153": 152, "529302e": 152, "ho153m": 152, "529303e": 152, "ho154": 152, "539306e": 152, "ho154m": 152, "539309e": 152, "ho155": 152, "549291e": 152, "ho155m": 152, "549293e": 152, "ho156": 152, "559298e": 152, "ho156m": 152, "559299e": 152, "ho156m2": 152, "559300e": 152, "ho157": 152, "569283e": 152, "ho158": 152, "579289e": 152, "ho158m": 152, "579290e": 152, "ho158m2": 152, "579291e": 152, "ho159": 152, "589277e": 152, "ho159m": 152, "589279e": 152, "ho160": 152, "599287e": 152, "536000e": 152, "ho160m": 152, "599288e": 152, "807000e": 152, "ho160m2": 152, "599289e": 152, "ho161": 152, "609279e": 152, "ho161m": 152, "609281e": 152, "ho162": 152, "619291e": 152, "ho162m": 152, "619292e": 152, "ho163": 152, "442152e": 152, "ho163m": 152, "629291e": 152, "ho164": 152, "639302e": 152, "ho164m": 152, "639304e": 152, "ho165": 152, "ho166": 152, "659323e": 152, "656640e": 152, "ho166m": 152, "787000e": 152, "ho166m2": 152, "659325e": 152, "ho167": 152, "669331e": 152, "116000e": 152, "ho168": 152, "679355e": 152, "794000e": 152, "ho168m": 152, "679356e": 152, "ho169": 152, "689369e": 152, "ho170": 152, "699396e": 152, "656000e": 152, "ho170m": 152, "699397e": 152, "ho171": 152, "709415e": 152, "ho172": 152, "719448e": 152, "ho173": 152, "729473e": 152, "ho174": 152, "739512e": 152, "ho175": 152, "749541e": 152, "ho176": 152, "759571e": 152, "ho177": 152, "769601e": 152, "ho178": 152, "178": [152, 210, 238], "779646e": 152, "672591e": 152, "er142": 152, "419690e": 152, "er143": 152, "429663e": 152, "er144": 152, "439604e": 152, "er145": 152, "449574e": 152, "er145m": 152, "449577e": 152, "er146": 152, "459520e": 152, "er147": 152, "469495e": 152, "er147m": 152, "469496e": 152, "er148": 152, "479446e": 152, "er148m": 152, "479477e": 152, "er149": 152, "489423e": 152, "er149m": 152, "489431e": 152, "er150": 152, "499379e": 152, "er151": 152, "509374e": 152, "er151m": 152, "509402e": 152, "er152": 152, "519351e": 152, "er153": 152, "529351e": 152, "er154": 152, "539328e": 152, "er155": 152, "549332e": 152, "er156": 152, "er157": 152, "569319e": 152, "er157m": 152, "569321e": 152, "er158": 152, "579299e": 152, "er159": 152, "589307e": 152, "er160": 152, "599291e": 152, "028880e": 152, "er161": 152, "609300e": 152, "155600e": 152, "er162": 152, "619288e": 152, "er163": 152, "629300e": 152, "er164": 152, "601000e": 152, "er165": 152, "649307e": 152, "729600e": 152, "er166": 152, "350300e": 152, "659303e": 152, "er167": 152, "286900e": 152, "669320e": 152, "er167m": 152, "669323e": 152, "269000e": 152, "er168": 152, "697800e": 152, "679324e": 152, "er169": 152, "689346e": 152, "114688e": 152, "er170": 152, "491000e": 152, "699355e": 152, "er171": 152, "709380e": 152, "705760e": 152, "er172": 152, "719394e": 152, "774800e": 152, "er173": 152, "729424e": 152, "er174": 152, "739442e": 152, "er175": 152, "749478e": 152, "er176": 152, "759501e": 152, "er177": 152, "769541e": 152, "er178": 152, "779557e": 152, "er179": 152, "179": 152, "789600e": 152, "er180": 152, "180": [152, 238, 464, 479], "799628e": 152, "689342e": 152, "tm144": 152, "439747e": 152, "tm145": 152, "449701e": 152, "tm146": 152, "459664e": 152, "tm147": 152, "469610e": 152, "tm147m": 152, "tm148": 152, "479578e": 152, "tm149": 152, "489527e": 152, "tm150": 152, "499500e": 152, "tm150m": 152, "499507e": 152, "tm151": 152, "509455e": 152, "tm151m": 152, "509456e": 152, "tm152": 152, "519444e": 152, "tm152m": 152, "519445e": 152, "tm153": 152, "529420e": 152, "tm153m": 152, "529421e": 152, "tm154": 152, "539416e": 152, "tm154m": 152, "tm155": 152, "549392e": 152, "tm155m": 152, "tm156": 152, "559390e": 152, "tm157": 152, "569370e": 152, "tm158": 152, "579370e": 152, "tm158m": 152, "579371e": 152, "tm159": 152, "589350e": 152, "tm160": 152, "599353e": 152, "tm160m": 152, "tm161": 152, "609335e": 152, "812000e": 152, "tm162": 152, "619340e": 152, "tm162m": 152, "619341e": 152, "tm163": 152, "629327e": 152, "tm164": 152, "639336e": 152, "tm164m": 152, "tm165": 152, "649324e": 152, "082160e": 152, "tm166": 152, "659336e": 152, "tm166m": 152, "659337e": 152, "tm167": 152, "669329e": 152, "992000e": 152, "tm168": 152, "679342e": 152, "tm169": 152, "tm170": 152, "699358e": 152, "111104e": 152, "tm171": 152, "709364e": 152, "058930e": 152, "tm172": 152, "719384e": 152, "tm172m": 152, "719389e": 152, "tm173": 152, "729396e": 152, "966400e": 152, "tm174": 152, "739422e": 152, "tm175": 152, "749438e": 152, "tm176": 152, "759470e": 152, "tm177": 152, "769490e": 152, "tm177m": 152, "769491e": 152, "tm178": 152, "779526e": 152, "tm179": 152, "789553e": 152, "tm180": 152, "799580e": 152, "tm181": 152, "809608e": 152, "tm182": 152, "182": 152, "819649e": 152, "tm183": 152, "183": [152, 238], "829574e": 152, "730377e": 152, "yb148": 152, "479674e": 152, "yb149": 152, "489640e": 152, "yb150": 152, "499584e": 152, "yb151": 152, "509554e": 152, "yb151m": 152, "509562e": 152, "yb152": 152, "519503e": 152, "yb152m": 152, "519532e": 152, "yb153": 152, "529495e": 152, "yb153m": 152, "529523e": 152, "yb154": 152, "539464e": 152, "yb155": 152, "549458e": 152, "793000e": 152, "yb156": 152, "559428e": 152, "yb157": 152, "569426e": 152, "yb158": 152, "579399e": 152, "yb159": 152, "589401e": 152, "yb160": 152, "599376e": 152, "yb161": 152, "609379e": 152, "yb162": 152, "619358e": 152, "132200e": 152, "yb163": 152, "629363e": 152, "yb164": 152, "639345e": 152, "yb165": 152, "649353e": 152, "yb166": 152, "659339e": 152, "041200e": 152, "yb167": 152, "669349e": 152, "yb168": 152, "679339e": 152, "yb169": 152, "689352e": 152, "766355e": 152, "yb169m": 152, "yb170": 152, "699348e": 152, "yb171": 152, "709363e": 152, "yb171m": 152, "yb172": 152, "719364e": 152, "yb173": 152, "729382e": 152, "yb174": 152, "739389e": 152, "yb174m": 152, "739405e": 152, "yb175": 152, "749413e": 152, "615840e": 152, "yb176": 152, "759426e": 152, "yb176m": 152, "759437e": 152, "yb177": 152, "769453e": 152, "879600e": 152, "yb177m": 152, "769456e": 152, "yb178": 152, "779466e": 152, "yb179": 152, "789502e": 152, "yb180": 152, "799523e": 152, "yb181": 152, "809562e": 152, "yb182": 152, "819570e": 152, "yb183": 152, "829611e": 152, "yb184": 152, "184": [152, 238, 473], "839635e": 152, "yb185": 152, "185": 152, "849679e": 152, "yb186": 152, "186": [152, 238], "859609e": 152, "yb187": 152, "869648e": 152, "749667e": 152, "lu150": 152, "499732e": 152, "lu150m": 152, "499733e": 152, "lu151": 152, "509676e": 152, "lu151m": 152, "509677e": 152, "lu152": 152, "519641e": 152, "lu153": 152, "529588e": 152, "lu153m": 152, "529616e": 152, "lu154": 152, "539575e": 152, "lu154m": 152, "539576e": 152, "lu154m2": 152, "539604e": 152, "lu155": 152, "549543e": 152, "lu155m": 152, "lu155m2": 152, "549562e": 152, "lu156": 152, "559530e": 152, "lu156m": 152, "lu157": 152, "569501e": 152, "lu157m": 152, "lu158": 152, "579493e": 152, "lu159": 152, "589466e": 152, "lu160": 152, "599460e": 152, "lu160m": 152, "599461e": 152, "lu161": 152, "609436e": 152, "lu161m": 152, "609438e": 152, "lu162": 152, "619433e": 152, "lu162m": 152, "619434e": 152, "lu162m2": 152, "619436e": 152, "lu163": 152, "629412e": 152, "lu164": 152, "639413e": 152, "lu165": 152, "lu166": 152, "659399e": 152, "lu166m": 152, "lu166m2": 152, "272000e": 152, "lu167": 152, "669383e": 152, "lu167m": 152, "669384e": 152, "lu168": 152, "679387e": 152, "lu168m": 152, "679390e": 152, "lu169": 152, "689377e": 152, "226160e": 152, "lu169m": 152, "lu170": 152, "699385e": 152, "738368e": 152, "lu170m": 152, "699386e": 152, "lu171": 152, "709379e": 152, "125408e": 152, "lu171m": 152, "lu172": 152, "719391e": 152, "788800e": 152, "lu172m": 152, "lu172m2": 152, "719392e": 152, "lu173": 152, "729389e": 152, "323299e": 152, "lu174": 152, "739403e": 152, "044534e": 152, "lu174m": 152, "227000e": 152, "lu175": 152, "741000e": 152, "749408e": 152, "lu176": 152, "759427e": 152, "186540e": 152, "lu176m": 152, "759428e": 152, "319000e": 152, "lu177": 152, "769438e": 152, "740675e": 152, "lu177m": 152, "769448e": 152, "386000e": 152, "lu178": 152, "779460e": 152, "704000e": 152, "lu178m": 152, "779461e": 152, "lu179": 152, "789473e": 152, "652400e": 152, "lu179m": 152, "789480e": 152, "lu180": 152, "799499e": 152, "lu181": 152, "809520e": 152, "lu182": 152, "819550e": 152, "lu183": 152, "829576e": 152, "lu184": 152, "839609e": 152, "lu185": 152, "849622e": 152, "lu186": 152, "859660e": 152, "lu187": 152, "869689e": 152, "lu188": 152, "188": [152, 210, 238], "879732e": 152, "lu189": 152, "189": [152, 210, 238], "889708e": 152, "lu190": 152, "190": [152, 238, 397], "899694e": 152, "784850e": 152, "hf153": 152, "529707e": 152, "hf154": 152, "539649e": 152, "hf155": 152, "549634e": 152, "hf156": 152, "559594e": 152, "hf156m": 152, "559615e": 152, "hf157": 152, "569584e": 152, "hf158": 152, "579548e": 152, "hf159": 152, "589540e": 152, "hf160": 152, "599507e": 152, "hf161": 152, "609503e": 152, "hf162": 152, "619472e": 152, "hf163": 152, "629471e": 152, "hf164": 152, "639444e": 152, "hf165": 152, "649446e": 152, "hf166": 152, "659422e": 152, "hf167": 152, "669426e": 152, "hf168": 152, "679406e": 152, "557000e": 152, "hf169": 152, "689413e": 152, "hf170": 152, "763600e": 152, "hf171": 152, "709405e": 152, "hf171m": 152, "hf172": 152, "901145e": 152, "hf173": 152, "729405e": 152, "hf174": 152, "739400e": 152, "hf175": 152, "749415e": 152, "hf176": 152, "759414e": 152, "hf177": 152, "769432e": 152, "hf177m": 152, "769446e": 152, "hf177m2": 152, "769462e": 152, "hf178": 152, "779437e": 152, "hf178m": 152, "779449e": 152, "hf178m2": 152, "779463e": 152, "hf179": 152, "362000e": 152, "789458e": 152, "hf179m": 152, "789462e": 152, "867000e": 152, "hf179m2": 152, "789470e": 152, "164000e": 152, "hf180": 152, "799466e": 152, "hf180m": 152, "799478e": 152, "hf181": 152, "809491e": 152, "662496e": 152, "hf181m": 152, "809510e": 152, "hf182": 152, "819506e": 152, "808566e": 152, "hf182m": 152, "819518e": 152, "hf182m2": 152, "819533e": 152, "hf183": 152, "829535e": 152, "hf184": 152, "839554e": 152, "483200e": 152, "hf184m": 152, "839568e": 152, "hf185": 152, "849588e": 152, "hf186": 152, "hf187": 152, "869646e": 152, "hf188": 152, "879669e": 152, "hf189": 152, "889696e": 152, "hf190": 152, "899721e": 152, "hf191": 152, "191": [152, 479], "909716e": 152, "hf192": 152, "192": [152, 238], "919751e": 152, "809479e": 152, "ta155": 152, "549746e": 152, "ta156": 152, "559723e": 152, "ta156m": 152, "559724e": 152, "ta157": 152, "569682e": 152, "ta157m": 152, "ta157m2": 152, "569699e": 152, "ta158": 152, "579667e": 152, "ta158m": 152, "579669e": 152, "ta159": 152, "589630e": 152, "ta159m": 152, "589631e": 152, "ta160": 152, "599616e": 152, "ta160m": 152, "599618e": 152, "ta161": 152, "609584e": 152, "ta161m": 152, "609586e": 152, "ta162": 152, "619573e": 152, "ta163": 152, "629543e": 152, "ta164": 152, "639535e": 152, "ta165": 152, "649508e": 152, "ta166": 152, "659505e": 152, "ta167": 152, "669481e": 152, "ta168": 152, "679480e": 152, "ta169": 152, "689460e": 152, "ta170": 152, "699462e": 152, "ta171": 152, "709445e": 152, "ta172": 152, "719449e": 152, "208000e": 152, "ta173": 152, "729437e": 152, "130400e": 152, "ta174": 152, "739445e": 152, "104000e": 152, "ta175": 152, "749437e": 152, "ta176": 152, "759449e": 152, "912400e": 152, "ta177": 152, "769445e": 152, "028960e": 152, "ta178": 152, "779458e": 152, "ta178m": 152, "779474e": 152, "ta178m2": 152, "779489e": 152, "ta179": 152, "789459e": 152, "743361e": 152, "ta179m": 152, "ta179m2": 152, "789488e": 152, "ta180": 152, "799475e": 152, "935440e": 152, "ta180m": 152, "ta181": 152, "998800e": 152, "809480e": 152, "ta181m": 152, "809487e": 152, "ta182": 152, "819502e": 152, "913536e": 152, "ta182m": 152, "ta182m2": 152, "819507e": 152, "504000e": 152, "ta183": 152, "829514e": 152, "406400e": 152, "ta184": 152, "839540e": 152, "132000e": 152, "ta185": 152, "849556e": 152, "ta186": 152, "859586e": 152, "ta187": 152, "869605e": 152, "ta188": 152, "879637e": 152, "ta189": 152, "889658e": 152, "ta190": 152, "899692e": 152, "ta191": 152, "909705e": 152, "ta192": 152, "ta193": 152, "193": [152, 238], "929774e": 152, "ta194": 152, "194": [152, 238], "939813e": 152, "838418e": 152, "w157": 152, "569784e": 152, "w158": 152, "579746e": 152, "w158m": 152, "579766e": 152, "w159": 152, "589729e": 152, "w160": 152, "599685e": 152, "w161": 152, "609674e": 152, "w162": 152, "619635e": 152, "w163": 152, "629625e": 152, "w164": 152, "639590e": 152, "w165": 152, "649583e": 152, "w166": 152, "659550e": 152, "w167": 152, "669548e": 152, "w168": 152, "679518e": 152, "w169": 152, "689518e": 152, "w170": 152, "699492e": 152, "w171": 152, "709495e": 152, "w172": 152, "719473e": 152, "w173": 152, "729477e": 152, "w174": 152, "739461e": 152, "w175": 152, "749467e": 152, "w176": 152, "759456e": 152, "w177": 152, "769466e": 152, "w178": 152, "779459e": 152, "866240e": 152, "w179": 152, "789471e": 152, "w179m": 152, "w180": 152, "799467e": 152, "w180m": 152, "799483e": 152, "w181": 152, "809482e": 152, "047168e": 152, "819482e": 152, "431000e": 152, "829502e": 152, "114314e": 152, "w183m": 152, "829506e": 152, "839509e": 152, "w185": 152, "849534e": 152, "488640e": 152, "w185m": 152, "849536e": 152, "843000e": 152, "859544e": 152, "w187": 152, "869572e": 152, "w188": 152, "879585e": 152, "028992e": 152, "w189": 152, "889619e": 152, "w190": 152, "899632e": 152, "w190m": 152, "899652e": 152, "w191": 152, "909666e": 152, "w192": 152, "919682e": 152, "w193": 152, "929719e": 152, "w194": 152, "939736e": 152, "w195": 152, "949774e": 152, "w196": 152, "196": 152, "959794e": 152, "w197": 152, "969832e": 152, "w198": 152, "198": [152, 238], "979816e": 152, "w199": 152, "989780e": 152, "862067e": 152, "re159": 152, "589831e": 152, "re159m": 152, "589834e": 152, "re160": 152, "599821e": 152, "re161": 152, "609776e": 152, "re161m": 152, "609777e": 152, "re162": 152, "619760e": 152, "re162m": 152, "619762e": 152, "re163": 152, "629721e": 152, "re163m": 152, "629722e": 152, "re164": 152, "639703e": 152, "re164m": 152, "639704e": 152, "re165": 152, "649671e": 152, "re165m": 152, "re166": 152, "659658e": 152, "re167": 152, "669626e": 152, "re167m": 152, "669627e": 152, "re168": 152, "679616e": 152, "re169": 152, "689588e": 152, "re169m": 152, "689590e": 152, "re170": 152, "699582e": 152, "re171": 152, "709557e": 152, "re172": 152, "719554e": 152, "re172m": 152, "re173": 152, "729532e": 152, "188000e": 152, "re174": 152, "739531e": 152, "re175": 152, "749514e": 152, "re176": 152, "759516e": 152, "re177": 152, "769503e": 152, "re178": 152, "779510e": 152, "re179": 152, "789500e": 152, "re179m": 152, "789558e": 152, "re180": 152, "799508e": 152, "476000e": 152, "re181": 152, "809501e": 152, "re182": 152, "819512e": 152, "311200e": 152, "re182m": 152, "819513e": 152, "re183": 152, "829508e": 152, "re183m": 152, "829529e": 152, "re184": 152, "839525e": 152, "058560e": 152, "re184m": 152, "839527e": 152, "re185": 152, "849530e": 152, "re186": 152, "859550e": 152, "212611e": 152, "re186m": 152, "859551e": 152, "311000e": 152, "re187": 152, "869558e": 152, "366415e": 152, "re188": 152, "879581e": 152, "121800e": 152, "re188m": 152, "879583e": 152, "115000e": 152, "re189": 152, "889592e": 152, "748000e": 152, "re189m": 152, "889611e": 152, "re190": 152, "899618e": 152, "re190m": 152, "899620e": 152, "re191": 152, "909631e": 152, "re192": 152, "919660e": 152, "re192m": 152, "919661e": 152, "re192m2": 152, "919662e": 152, "re193": 152, "929675e": 152, "re194": 152, "939704e": 152, "re194m": 152, "939706e": 152, "re194m2": 152, "939707e": 152, "re195": 152, "949727e": 152, "re196": 152, "959760e": 152, "re197": 152, "969778e": 152, "re198": 152, "979812e": 152, "re199": 152, "989834e": 152, "re200": 152, "999798e": 152, "re201": 152, "009836e": 152, "902371e": 152, "os161": 152, "609885e": 152, "os162": 152, "619844e": 152, "os163": 152, "629827e": 152, "os164": 152, "639780e": 152, "os165": 152, "649768e": 152, "os166": 152, "659727e": 152, "os167": 152, "669715e": 152, "os168": 152, "679678e": 152, "os169": 152, "689670e": 152, "os170": 152, "699636e": 152, "os171": 152, "709632e": 152, "os172": 152, "719600e": 152, "os173": 152, "729598e": 152, "os174": 152, "739571e": 152, "os175": 152, "749569e": 152, "os176": 152, "759548e": 152, "os177": 152, "769550e": 152, "os178": 152, "779533e": 152, "os179": 152, "789538e": 152, "os180": 152, "799524e": 152, "os181": 152, "809532e": 152, "os181m": 152, "809533e": 152, "os182": 152, "819521e": 152, "862400e": 152, "os182m": 152, "819541e": 152, "os183": 152, "829531e": 152, "os183m": 152, "829533e": 152, "os184": 152, "767188e": 152, "os185": 152, "849540e": 152, "087040e": 152, "os186": 152, "859538e": 152, "os187": 152, "os188": 152, "329000e": 152, "879558e": 152, "os189": 152, "621000e": 152, "889581e": 152, "os189m": 152, "889582e": 152, "os190": 152, "636000e": 152, "899584e": 152, "os190m": 152, "899603e": 152, "916000e": 152, "os191": 152, "909609e": 152, "330560e": 152, "os191m": 152, "909610e": 152, "os192": 152, "093000e": 152, "919615e": 152, "os192m": 152, "919636e": 152, "os193": 152, "929642e": 152, "073880e": 152, "os194": 152, "939652e": 152, "os195": 152, "949681e": 152, "os196": 152, "959696e": 152, "os197": 152, "969731e": 152, "os198": 152, "979743e": 152, "os199": 152, "989776e": 152, "os200": 152, "999793e": 152, "os201": 152, "009827e": 152, "os202": 152, "202": [152, 238], "019851e": 152, "os203": 152, "029907e": 152, "os204": 152, "204": [152, 238], "039896e": 152, "922161e": 152, "ir163": 152, "629934e": 152, "ir164": 152, "639922e": 152, "ir164m": 152, "639925e": 152, "ir165": 152, "649875e": 152, "ir165m": 152, "649877e": 152, "ir166": 152, "659858e": 152, "ir166m": 152, "659860e": 152, "ir167": 152, "669817e": 152, "ir167m": 152, "669819e": 152, "ir168": 152, "679799e": 152, "ir168m": 152, "ir169": 152, "689763e": 152, "ir169m": 152, "689765e": 152, "ir170": 152, "699750e": 152, "ir170m": 152, "ir171": 152, "709716e": 152, "ir171m": 152, "709718e": 152, "ir172": 152, "719705e": 152, "ir172m": 152, "719706e": 152, "ir173": 152, "729675e": 152, "ir173m": 152, "729677e": 152, "ir174": 152, "739669e": 152, "ir174m": 152, "739671e": 152, "ir175": 152, "749641e": 152, "ir176": 152, "759636e": 152, "ir177": 152, "769613e": 152, "ir178": 152, "779611e": 152, "ir179": 152, "789591e": 152, "ir180": 152, "799592e": 152, "ir181": 152, "809576e": 152, "ir182": 152, "819581e": 152, "ir183": 152, "829568e": 152, "ir184": 152, "839575e": 152, "112400e": 152, "ir184m": 152, "839577e": 152, "ir185": 152, "849567e": 152, "ir186": 152, "859579e": 152, "990400e": 152, "ir186m": 152, "ir187": 152, "869574e": 152, "ir187m": 152, "869576e": 152, "ir188": 152, "879589e": 152, "494000e": 152, "ir189": 152, "889587e": 152, "140480e": 152, "ir189m": 152, "889591e": 152, "ir189m2": 152, "889612e": 152, "ir190": 152, "899605e": 152, "017792e": 152, "ir190m": 152, "899606e": 152, "032000e": 152, "ir190m2": 152, "899610e": 152, "111000e": 152, "ir191": 152, "909606e": 152, "ir191m": 152, "909608e": 152, "ir191m2": 152, "909629e": 152, "ir192": 152, "919626e": 152, "378826e": 152, "ir192m": 152, "919627e": 152, "ir192m2": 152, "919628e": 152, "605000e": 152, "ir193": 152, "929629e": 152, "ir193m": 152, "929630e": 152, "ir193m2": 152, "929654e": 152, "ir194": 152, "939651e": 152, "904800e": 152, "ir194m": 152, "185000e": 152, "ir194m2": 152, "939655e": 152, "477000e": 152, "ir195": 152, "949660e": 152, "ir195m": 152, "949661e": 152, "321000e": 152, "ir196": 152, "959684e": 152, "ir196m": 152, "959688e": 152, "ir197": 152, "969697e": 152, "ir197m": 152, "969698e": 152, "ir198": 152, "979723e": 152, "ir199": 152, "989738e": 152, "ir200": 152, "999765e": 152, "ir201": 152, "009781e": 152, "ir202": 152, "019811e": 152, "ir203": 152, "029834e": 152, "ir204": 152, "039888e": 152, "ir205": 152, "205": [152, 238], "049926e": 152, "ir206": 152, "206": [152, 210], "059897e": 152, "ir207": 152, "207": [152, 238], "069884e": 152, "ir208": 152, "208": [152, 210], "079935e": 152, "950778e": 152, "pt165": 152, "649991e": 152, "pt166": 152, "659949e": 152, "pt167": 152, "669930e": 152, "pt168": 152, "679882e": 152, "pt169": 152, "689867e": 152, "pt170": 152, "699825e": 152, "pt171": 152, "709812e": 152, "pt172": 152, "719773e": 152, "pt173": 152, "729764e": 152, "pt174": 152, "739728e": 152, "pt175": 152, "749724e": 152, "pt176": 152, "759689e": 152, "pt177": 152, "769685e": 152, "pt178": 152, "779656e": 152, "pt179": 152, "789654e": 152, "pt180": 152, "799630e": 152, "pt181": 152, "809631e": 152, "pt182": 152, "819612e": 152, "602000e": 152, "pt183": 152, "829616e": 152, "pt183m": 152, "pt184": 152, "839599e": 152, "038000e": 152, "pt184m": 152, "839619e": 152, "pt185": 152, "849606e": 152, "pt185m": 152, "849607e": 152, "pt186": 152, "859594e": 152, "488000e": 152, "pt187": 152, "869606e": 152, "pt188": 152, "879594e": 152, "778240e": 152, "pt189": 152, "889608e": 152, "913200e": 152, "pt189m": 152, "889610e": 152, "pt190": 152, "899599e": 152, "pt191": 152, "909617e": 152, "pt191m": 152, "909618e": 152, "pt192": 152, "919610e": 152, "pt193": 152, "pt193m": 152, "929631e": 152, "pt194": 152, "296700e": 152, "939627e": 152, "pt195": 152, "383200e": 152, "949648e": 152, "pt195m": 152, "949651e": 152, "465000e": 152, "pt196": 152, "524200e": 152, "959650e": 152, "pt197": 152, "969673e": 152, "160940e": 152, "pt197m": 152, "969678e": 152, "pt198": 152, "979679e": 152, "pt199": 152, "989706e": 152, "pt199m": 152, "989710e": 152, "pt200": 152, "999714e": 152, "pt201": 152, "009745e": 152, "pt202": 152, "019757e": 152, "pt202m": 152, "019777e": 152, "pt203": 152, "029782e": 152, "pt204": 152, "039801e": 152, "pt205": 152, "049853e": 152, "pt206": 152, "059888e": 152, "pt207": 152, "069948e": 152, "pt208": 152, "079988e": 152, "pt209": 152, "209": [152, 238], "089974e": 152, "pt210": 152, "210": [152, 238], "100025e": 152, "pt211": 152, "211": 152, "109993e": 152, "pt212": 152, "212": [152, 238], "120030e": 152, "pt213": 152, "213": 152, "130082e": 152, "969666e": 152, "au168": 152, "680016e": 152, "au169": 152, "689981e": 152, "au170": 152, "699961e": 152, "au170m": 152, "699964e": 152, "au171": 152, "709919e": 152, "au171m": 152, "709922e": 152, "au172": 152, "719900e": 152, "au172m": 152, "719902e": 152, "au173": 152, "729862e": 152, "au173m": 152, "729865e": 152, "au174": 152, "739848e": 152, "au175": 152, "749813e": 152, "au175m": 152, "749815e": 152, "au176": 152, "759801e": 152, "au176m": 152, "759802e": 152, "au177": 152, "769769e": 152, "au177m": 152, "769771e": 152, "193000e": 152, "au178": 152, "779760e": 152, "au179": 152, "789732e": 152, "au180": 152, "799725e": 152, "au181": 152, "809701e": 152, "au182": 152, "819696e": 152, "au183": 152, "829676e": 152, "au184": 152, "839675e": 152, "au184m": 152, "au185": 152, "849658e": 152, "au185m": 152, "au186": 152, "au187": 152, "au187m": 152, "869647e": 152, "au188": 152, "879653e": 152, "au189": 152, "889639e": 152, "au189m": 152, "889642e": 152, "au190": 152, "899647e": 152, "au190m": 152, "899649e": 152, "au191": 152, "909637e": 152, "144800e": 152, "au191m": 152, "909640e": 152, "au192": 152, "919648e": 152, "778400e": 152, "au192m": 152, "919650e": 152, "au192m2": 152, "919653e": 152, "au193": 152, "354000e": 152, "au193m": 152, "929645e": 152, "au194": 152, "939654e": 152, "368720e": 152, "au194m": 152, "au194m2": 152, "939659e": 152, "au195": 152, "949650e": 152, "607126e": 152, "au195m": 152, "949654e": 152, "au196": 152, "959666e": 152, "328202e": 152, "au196m": 152, "959667e": 152, "au196m2": 152, "959672e": 152, "au197": 152, "au197m": 152, "969670e": 152, "au198": 152, "979682e": 152, "327702e": 152, "au198m": 152, "979691e": 152, "au199": 152, "989688e": 152, "712096e": 152, "au199m": 152, "989694e": 152, "au200": 152, "999707e": 152, "au200m": 152, "999718e": 152, "732000e": 152, "au201": 152, "009717e": 152, "au202": 152, "019738e": 152, "au203": 152, "029752e": 152, "au204": 152, "039777e": 152, "au205": 152, "049799e": 152, "au205m": 152, "049808e": 152, "au206": 152, "059843e": 152, "au207": 152, "069877e": 152, "au208": 152, "079931e": 152, "au209": 152, "089972e": 152, "au210": 152, "100029e": 152, "au211": 152, "au212": 152, "au213": 152, "au214": 152, "214": [152, 238], "140120e": 152, "au215": 152, "150174e": 152, "005992e": 152, "hg170": 152, "700052e": 152, "hg171": 152, "710038e": 152, "hg172": 152, "719988e": 152, "hg173": 152, "729972e": 152, "hg174": 152, "739929e": 152, "hg175": 152, "749914e": 152, "hg176": 152, "759874e": 152, "hg177": 152, "769863e": 152, "hg178": 152, "779825e": 152, "665000e": 152, "hg179": 152, "789818e": 152, "hg180": 152, "799783e": 152, "hg181": 152, "809778e": 152, "hg182": 152, "819747e": 152, "hg183": 152, "829744e": 152, "hg184": 152, "839717e": 152, "hg185": 152, "849719e": 152, "hg185m": 152, "849720e": 152, "hg186": 152, "859694e": 152, "hg187": 152, "869698e": 152, "hg187m": 152, "869699e": 152, "hg188": 152, "879676e": 152, "hg189": 152, "889682e": 152, "hg189m": 152, "889683e": 152, "hg190": 152, "899663e": 152, "hg191": 152, "909672e": 152, "hg191m": 152, "909673e": 152, "hg192": 152, "919656e": 152, "hg193": 152, "929667e": 152, "368000e": 152, "hg193m": 152, "929668e": 152, "hg194": 152, "410595e": 152, "hg195": 152, "949667e": 152, "790800e": 152, "hg195m": 152, "949669e": 152, "498000e": 152, "hg196": 152, "959658e": 152, "hg197": 152, "969672e": 152, "309040e": 152, "hg197m": 152, "969675e": 152, "hg198": 152, "979668e": 152, "hg199": 152, "687000e": 152, "989683e": 152, "hg199m": 152, "989689e": 152, "hg200": 152, "999683e": 152, "hg201": 152, "318000e": 152, "009703e": 152, "hg201m": 152, "009711e": 152, "hg202": 152, "986000e": 152, "019706e": 152, "hg203": 152, "029729e": 152, "027104e": 152, "hg203m": 152, "029739e": 152, "hg204": 152, "039735e": 152, "hg205": 152, "049761e": 152, "hg205m": 152, "049777e": 152, "hg206": 152, "059775e": 152, "hg207": 152, "069826e": 152, "hg208": 152, "079859e": 152, "hg209": 152, "089910e": 152, "hg210": 152, "099945e": 152, "hg211": 152, "109997e": 152, "hg212": 152, "120034e": 152, "hg213": 152, "130091e": 152, "hg214": 152, "140129e": 152, "hg215": 152, "150189e": 152, "hg216": 152, "216": [152, 238, 477], "160229e": 152, "hg217": 152, "217": [152, 336, 462, 477], "170197e": 152, "hg218": 152, "218": [152, 238, 477], "180248e": 152, "043833e": 152, "tl176": 152, "760006e": 152, "tl177": 152, "769964e": 152, "tl177m": 152, "769973e": 152, "tl178": 152, "779949e": 152, "tl179": 152, "789911e": 152, "tl179m": 152, "789920e": 152, "tl180": 152, "799899e": 152, "tl181": 152, "809863e": 152, "tl181m": 152, "809872e": 152, "tl182": 152, "819857e": 152, "tl183": 152, "829822e": 152, "tl183m": 152, "829829e": 152, "tl184": 152, "839819e": 152, "tl185": 152, "849788e": 152, "tl185m": 152, "849793e": 152, "tl186": 152, "859783e": 152, "tl186m": 152, "tl186m2": 152, "859787e": 152, "tl187": 152, "869759e": 152, "tl187m": 152, "869763e": 152, "tl188": 152, "879760e": 152, "tl188m": 152, "tl188m2": 152, "879763e": 152, "tl189": 152, "889736e": 152, "tl189m": 152, "889739e": 152, "tl190": 152, "899739e": 152, "tl190m": 152, "899740e": 152, "tl191": 152, "909718e": 152, "tl191m": 152, "909722e": 152, "tl192": 152, "919722e": 152, "tl192m": 152, "919724e": 152, "tl193": 152, "929707e": 152, "296000e": 152, "tl193m": 152, "929711e": 152, "tl194": 152, "939712e": 152, "tl194m": 152, "939715e": 152, "tl195": 152, "949698e": 152, "tl195m": 152, "949703e": 152, "tl196": 152, "959705e": 152, "624000e": 152, "tl196m": 152, "959709e": 152, "tl197": 152, "969696e": 152, "tl197m": 152, "969702e": 152, "tl198": 152, "979705e": 152, "tl198m": 152, "979711e": 152, "tl198m2": 152, "979713e": 152, "tl199": 152, "989699e": 152, "671200e": 152, "tl199m": 152, "989707e": 152, "tl200": 152, "999710e": 152, "396000e": 152, "tl200m": 152, "tl201": 152, "009708e": 152, "628374e": 152, "tl201m": 152, "009718e": 152, "tl202": 152, "019721e": 152, "063584e": 152, "tl202m": 152, "019731e": 152, "tl203": 152, "952400e": 152, "029723e": 152, "tl204": 152, "039739e": 152, "193799e": 152, "tl204m": 152, "039750e": 152, "tl205": 152, "047600e": 152, "049744e": 152, "tl206": 152, "059761e": 152, "521200e": 152, "tl206m": 152, "059789e": 152, "tl207": 152, "069774e": 152, "tl207m": 152, "069789e": 152, "tl208": 152, "079820e": 152, "831800e": 152, "tl209": 152, "089854e": 152, "297200e": 152, "tl210": 152, "099901e": 152, "tl211": 152, "109935e": 152, "tl212": 152, "119982e": 152, "tl213": 152, "130024e": 152, "tl214": 152, "140077e": 152, "tl215": 152, "150116e": 152, "tl216": 152, "160172e": 152, "tl217": 152, "170210e": 152, "tl218": 152, "180263e": 152, "tl219": 152, "219": [152, 210, 238, 477], "190218e": 152, "tl220": 152, "220": [152, 477], "200254e": 152, "tl221": 152, "210259e": 152, "072169e": 152, "pb178": 152, "780038e": 152, "pb179": 152, "790022e": 152, "pb180": 152, "799979e": 152, "pb181": 152, "809966e": 152, "pb182": 152, "819927e": 152, "pb183": 152, "829919e": 152, "pb183m": 152, "829920e": 152, "pb184": 152, "839881e": 152, "pb185": 152, "849876e": 152, "pb185m": 152, "849877e": 152, "pb186": 152, "859842e": 152, "pb187": 152, "869839e": 152, "pb187m": 152, "869840e": 152, "pb188": 152, "879809e": 152, "pb189": 152, "889808e": 152, "pb189m": 152, "889809e": 152, "pb189m2": 152, "889835e": 152, "pb190": 152, "899781e": 152, "pb191": 152, "909783e": 152, "pb191m": 152, "pb192": 152, "919758e": 152, "pb193": 152, "929762e": 152, "pb193m": 152, "929763e": 152, "pb194": 152, "939740e": 152, "pb195": 152, "949745e": 152, "pb195m": 152, "949748e": 152, "pb196": 152, "959728e": 152, "pb197": 152, "969734e": 152, "pb197m": 152, "969738e": 152, "pb198": 152, "979720e": 152, "pb199": 152, "989729e": 152, "pb199m": 152, "989734e": 152, "pb200": 152, "pb201": 152, "009729e": 152, "358800e": 152, "pb201m": 152, "009736e": 152, "pb202": 152, "019722e": 152, "656739e": 152, "pb202m": 152, "019745e": 152, "274000e": 152, "pb203": 152, "029734e": 152, "869120e": 152, "pb203m": 152, "029743e": 152, "pb203m2": 152, "029766e": 152, "pb204": 152, "039730e": 152, "417970e": 152, "pb204m": 152, "039754e": 152, "pb205": 152, "049745e": 152, "pb205m": 152, "049756e": 152, "pb206": 152, "059745e": 152, "pb206m": 152, "059768e": 152, "pb207": 152, "069759e": 152, "pb207m": 152, "069777e": 152, "pb208": 152, "079767e": 152, "pb209": 152, "089811e": 152, "164240e": 152, "pb210": 152, "099842e": 152, "005638e": 152, "pb211": 152, "109887e": 152, "166000e": 152, "pb212": 152, "119919e": 152, "823920e": 152, "pb213": 152, "129966e": 152, "pb214": 152, "139998e": 152, "623600e": 152, "pb215": 152, "150048e": 152, "pb216": 152, "160090e": 152, "pb217": 152, "170142e": 152, "pb218": 152, "180177e": 152, "pb219": 152, "190232e": 152, "pb220": 152, "200268e": 152, "pb221": 152, "pb222": 152, "222": [152, 452, 465, 477], "220308e": 152, "pb223": 152, "223": [152, 238, 477], "230345e": 152, "pb224": 152, "224": [152, 238, 477], "240395e": 152, "pb225": 152, "225": [152, 238, 477], "250371e": 152, "089804e": 152, "bi184": 152, "840011e": 152, "bi184m": 152, "840013e": 152, "bi185": 152, "849976e": 152, "bi186": 152, "859966e": 152, "bi186m": 152, "859968e": 152, "bi187": 152, "869932e": 152, "bi187m": 152, "869933e": 152, "bi188": 152, "879923e": 152, "bi188m": 152, "879924e": 152, "bi189": 152, "889892e": 152, "bi189m": 152, "889894e": 152, "bi190": 152, "899883e": 152, "bi190m": 152, "899885e": 152, "bi191": 152, "909858e": 152, "bi191m": 152, "909860e": 152, "bi192": 152, "919855e": 152, "bi192m": 152, "919856e": 152, "bi193": 152, "929830e": 152, "bi193m": 152, "929833e": 152, "bi193m2": 152, "929855e": 152, "bi194": 152, "939828e": 152, "bi194m": 152, "939830e": 152, "bi194m2": 152, "bi195": 152, "949807e": 152, "bi195m": 152, "949811e": 152, "bi196": 152, "959807e": 152, "bi196m": 152, "959810e": 152, "bi196m2": 152, "bi197": 152, "969789e": 152, "598000e": 152, "bi197m": 152, "969794e": 152, "024000e": 152, "bi198": 152, "979792e": 152, "bi198m": 152, "979795e": 152, "bi198m2": 152, "979798e": 152, "bi199": 152, "989777e": 152, "bi199m": 152, "989784e": 152, "482000e": 152, "bi200": 152, "999781e": 152, "bi200m": 152, "999782e": 152, "bi200m2": 152, "999786e": 152, "bi201": 152, "009770e": 152, "bi201m": 152, "009779e": 152, "bi202": 152, "bi203": 152, "029769e": 152, "233600e": 152, "bi203m": 152, "029781e": 152, "bi204": 152, "039778e": 152, "039200e": 152, "bi204m": 152, "039787e": 152, "bi204m2": 152, "039809e": 152, "bi205": 152, "049774e": 152, "288224e": 152, "bi206": 152, "059785e": 152, "393952e": 152, "bi206m": 152, "059796e": 152, "bi207": 152, "069785e": 152, "956210e": 152, "bi207m": 152, "069807e": 152, "bi208": 152, "079797e": 152, "161295e": 152, "bi208m": 152, "079814e": 152, "bi209": 152, "342942e": 152, "bi210": 152, "099841e": 152, "330368e": 152, "bi210m": 152, "099844e": 152, "593000e": 152, "bi211": 152, "109873e": 152, "bi212": 152, "119913e": 152, "633000e": 152, "bi212m": 152, "119915e": 152, "bi212m2": 152, "119929e": 152, "bi213": 152, "129944e": 152, "735400e": 152, "bi214": 152, "139987e": 152, "182600e": 152, "bi215": 152, "150018e": 152, "bi215m": 152, "150032e": 152, "bi216": 152, "160063e": 152, "bi216m": 152, "bi217": 152, "170095e": 152, "bi218": 152, "180143e": 152, "bi219": 152, "190184e": 152, "bi220": 152, "200234e": 152, "bi221": 152, "210269e": 152, "bi222": 152, "220321e": 152, "bi223": 152, "230356e": 152, "bi224": 152, "240405e": 152, "bi225": 152, "bi226": 152, "226": [152, 156, 477], "260403e": 152, "bi227": 152, "227": [152, 238, 477], "270454e": 152, "po186": 152, "860039e": 152, "po187": 152, "870024e": 152, "po188": 152, "879994e": 152, "po189": 152, "889985e": 152, "po190": 152, "899951e": 152, "po191": 152, "909946e": 152, "po191m": 152, "po192": 152, "919913e": 152, "po193": 152, "929910e": 152, "po193m": 152, "929911e": 152, "po194": 152, "939882e": 152, "po194m": 152, "939907e": 152, "po195": 152, "949881e": 152, "po195m": 152, "949884e": 152, "po196": 152, "959855e": 152, "po197": 152, "969857e": 152, "po197m": 152, "969859e": 152, "po198": 152, "979834e": 152, "po199": 152, "989837e": 152, "282000e": 152, "po199m": 152, "989840e": 152, "po200": 152, "999818e": 152, "906000e": 152, "po201": 152, "009823e": 152, "po201m": 152, "po202": 152, "019808e": 152, "676000e": 152, "po203": 152, "029814e": 152, "202000e": 152, "po203m": 152, "029821e": 152, "po204": 152, "039803e": 152, "266840e": 152, "po205": 152, "049812e": 152, "264000e": 152, "po205m": 152, "049821e": 152, "po205m2": 152, "049828e": 152, "po206": 152, "059805e": 152, "603200e": 152, "po207": 152, "069816e": 152, "088000e": 152, "po207m": 152, "069831e": 152, "po208": 152, "079812e": 152, "145197e": 152, "po209": 152, "089824e": 152, "913059e": 152, "po210": 152, "099829e": 152, "195569e": 152, "po211": 152, "109867e": 152, "po211m": 152, "109882e": 152, "po212": 152, "119889e": 152, "943000e": 152, "po212m": 152, "119920e": 152, "po213": 152, "129929e": 152, "po214": 152, "139952e": 152, "634600e": 152, "po215": 152, "149994e": 152, "po216": 152, "160019e": 152, "po217": 152, "170063e": 152, "po218": 152, "180090e": 152, "858200e": 152, "po219": 152, "190137e": 152, "po220": 152, "200166e": 152, "po221": 152, "210223e": 152, "po222": 152, "220253e": 152, "po223": 152, "230300e": 152, "po224": 152, "240332e": 152, "po225": 152, "250379e": 152, "po226": 152, "260413e": 152, "po227": 152, "270463e": 152, "po228": 152, "228": [152, 477], "280447e": 152, "po229": 152, "229": [152, 238, 477], "290481e": 152, "at191": 152, "910039e": 152, "at191m": 152, "at192": 152, "920024e": 152, "at192m": 152, "920025e": 152, "at193": 152, "929998e": 152, "at193m": 152, "at193m2": 152, "929999e": 152, "at194": 152, "939987e": 152, "at194m": 152, "at195": 152, "949963e": 152, "at195m": 152, "at196": 152, "959958e": 152, "at197": 152, "969932e": 152, "at197m": 152, "at198": 152, "979928e": 152, "at198m": 152, "979931e": 152, "at199": 152, "989905e": 152, "at200": 152, "999904e": 152, "at200m": 152, "999905e": 152, "at200m2": 152, "999907e": 152, "at201": 152, "009884e": 152, "at202": 152, "019886e": 152, "at202m": 152, "019888e": 152, "at202m2": 152, "019893e": 152, "at203": 152, "029869e": 152, "at204": 152, "039873e": 152, "at204m": 152, "039879e": 152, "at205": 152, "049861e": 152, "at206": 152, "059867e": 152, "at207": 152, "069858e": 152, "at208": 152, "079866e": 152, "868000e": 152, "at209": 152, "089862e": 152, "951200e": 152, "at210": 152, "099871e": 152, "at211": 152, "109875e": 152, "597040e": 152, "at212": 152, "119907e": 152, "at212m": 152, "119910e": 152, "at212m2": 152, "119959e": 152, "at213": 152, "at214": 152, "139964e": 152, "at215": 152, "149987e": 152, "at216": 152, "160024e": 152, "at216m": 152, "160029e": 152, "at217": 152, "170047e": 152, "at218": 152, "180087e": 152, "at219": 152, "190112e": 152, "at220": 152, "200154e": 152, "226000e": 152, "at221": 152, "210180e": 152, "at222": 152, "220223e": 152, "at223": 152, "230252e": 152, "at224": 152, "240302e": 152, "at225": 152, "250332e": 152, "at226": 152, "260375e": 152, "at227": 152, "270408e": 152, "at228": 152, "280454e": 152, "at229": 152, "290487e": 152, "at230": 152, "230": [152, 477], "300451e": 152, "at231": 152, "231": [152, 238, 477], "310499e": 152, "rn193": 152, "930093e": 152, "rn194": 152, "940062e": 152, "rn195": 152, "950054e": 152, "rn195m": 152, "950055e": 152, "rn196": 152, "960021e": 152, "rn197": 152, "970016e": 152, "rn197m": 152, "970018e": 152, "rn198": 152, "979987e": 152, "rn199": 152, "989984e": 152, "rn199m": 152, "989986e": 152, "rn200": 152, "999957e": 152, "rn201": 152, "009956e": 152, "rn201m": 152, "009960e": 152, "rn202": 152, "019933e": 152, "rn203": 152, "029934e": 152, "rn203m": 152, "029938e": 152, "rn204": 152, "039914e": 152, "rn205": 152, "049917e": 152, "rn206": 152, "059902e": 152, "402000e": 152, "rn207": 152, "069907e": 152, "rn207m": 152, "069917e": 152, "rn208": 152, "079896e": 152, "461000e": 152, "rn209": 152, "089904e": 152, "rn210": 152, "099897e": 152, "rn211": 152, "109906e": 152, "rn212": 152, "434000e": 152, "rn213": 152, "129939e": 152, "rn214": 152, "139954e": 152, "rn215": 152, "rn216": 152, "160003e": 152, "rn217": 152, "170039e": 152, "rn218": 152, "180056e": 152, "375000e": 152, "rn219": 152, "190095e": 152, "rn220": 152, "200114e": 152, "rn221": 152, "210155e": 152, "rn222": 152, "220176e": 152, "303504e": 152, "rn223": 152, "230218e": 152, "rn224": 152, "240241e": 152, "rn225": 152, "250284e": 152, "796000e": 152, "rn226": 152, "260309e": 152, "rn227": 152, "270354e": 152, "rn228": 152, "280380e": 152, "rn229": 152, "290431e": 152, "rn230": 152, "300460e": 152, "rn231": 152, "310506e": 152, "rn232": 152, "320494e": 152, "rn233": 152, "330526e": 152, "rn234": 152, "340503e": 152, "fr197": 152, "970109e": 152, "fr198": 152, "980097e": 152, "fr198m": 152, "fr199": 152, "990073e": 152, "fr200": 152, "000066e": 152, "fr201": 152, "010039e": 152, "fr201m": 152, "010040e": 152, "fr202": 152, "020034e": 152, "fr202m": 152, "020036e": 152, "fr203": 152, "030009e": 152, "fr203m": 152, "030013e": 152, "fr204": 152, "040007e": 152, "fr204m": 152, "fr204m2": 152, "040010e": 152, "fr205": 152, "049986e": 152, "fr205m": 152, "049992e": 152, "fr206": 152, "059987e": 152, "fr206m": 152, "059989e": 152, "fr206m2": 152, "059995e": 152, "fr207": 152, "069969e": 152, "fr208": 152, "079971e": 152, "fr209": 152, "089960e": 152, "fr210": 152, "099964e": 152, "fr211": 152, "109955e": 152, "fr212": 152, "119962e": 152, "fr213": 152, "129962e": 152, "fr214": 152, "139990e": 152, "fr214m": 152, "139991e": 152, "fr215": 152, "150003e": 152, "fr216": 152, "160032e": 152, "fr217": 152, "170046e": 152, "fr218": 152, "180076e": 152, "fr218m": 152, "180077e": 152, "fr219": 152, "190093e": 152, "fr220": 152, "200123e": 152, "fr221": 152, "210143e": 152, "fr222": 152, "fr223": 152, "230197e": 152, "fr224": 152, "240232e": 152, "998000e": 152, "fr225": 152, "250256e": 152, "fr226": 152, "260294e": 152, "fr227": 152, "270318e": 152, "fr228": 152, "280357e": 152, "fr229": 152, "290385e": 152, "fr230": 152, "300425e": 152, "fr231": 152, "310454e": 152, "fr232": 152, "320498e": 152, "fr233": 152, "330533e": 152, "fr234": 152, "fr235": 152, "350550e": 152, "ra201": 152, "010128e": 152, "ra202": 152, "020099e": 152, "ra203": 152, "030093e": 152, "ra203m": 152, "030095e": 152, "ra204": 152, "040065e": 152, "ra205": 152, "050063e": 152, "ra205m": 152, "050066e": 152, "ra206": 152, "060038e": 152, "ra207": 152, "070038e": 152, "ra207m": 152, "070044e": 152, "ra208": 152, "080018e": 152, "ra209": 152, "090020e": 152, "ra210": 152, "100005e": 152, "ra211": 152, "110009e": 152, "ra212": 152, "119998e": 152, "ra213": 152, "130004e": 152, "638000e": 152, "ra213m": 152, "130023e": 152, "ra214": 152, "140001e": 152, "ra214m": 152, "140021e": 152, "ra215": 152, "150027e": 152, "ra216": 152, "160035e": 152, "ra217": 152, "ra218": 152, "180071e": 152, "ra219": 152, "190101e": 152, "ra219m": 152, "ra220": 152, "200110e": 152, "ra221": 152, "210139e": 152, "ra222": 152, "220154e": 152, "ra223": 152, "230185e": 152, "ra224": 152, "240202e": 152, "137962e": 152, "ra225": 152, "250236e": 152, "287360e": 152, "ra226": 152, "260254e": 152, "ra227": 152, "270292e": 152, "ra228": 152, "280311e": 152, "814523e": 152, "ra229": 152, "290350e": 152, "ra230": 152, "300371e": 152, "ra231": 152, "310412e": 152, "ra232": 152, "320436e": 152, "ra233": 152, "330481e": 152, "ra234": 152, "340507e": 152, "ra235": 152, "350554e": 152, "ra236": 152, "236": [152, 477], "360550e": 152, "ra237": 152, "370583e": 152, "ra238": 152, "380565e": 152, "ac205": 152, "050151e": 152, "ac206": 152, "060145e": 152, "ac206m": 152, "060147e": 152, "ac207": 152, "070119e": 152, "ac208": 152, "080116e": 152, "ac208m": 152, "080121e": 152, "ac209": 152, "090095e": 152, "ac210": 152, "100094e": 152, "ac211": 152, "110077e": 152, "ac212": 152, "120078e": 152, "ac213": 152, "130066e": 152, "ac214": 152, "140069e": 152, "ac215": 152, "150065e": 152, "ac216": 152, "160087e": 152, "ac216m": 152, "160088e": 152, "ac217": 152, "170093e": 152, "ac218": 152, "180116e": 152, "ac219": 152, "190124e": 152, "ac220": 152, "200148e": 152, "ac221": 152, "210156e": 152, "ac222": 152, "220178e": 152, "ac222m": 152, "220179e": 152, "ac223": 152, "230191e": 152, "ac224": 152, "240217e": 152, "000800e": 152, "ac225": 152, "250232e": 152, "570880e": 152, "ac226": 152, "260261e": 152, "057320e": 152, "ac227": 152, "270278e": 152, "870574e": 152, "ac228": 152, "280310e": 152, "214000e": 152, "ac229": 152, "290330e": 152, "ac230": 152, "300363e": 152, "ac231": 152, "310386e": 152, "ac232": 152, "320420e": 152, "ac233": 152, "330445e": 152, "ac234": 152, "340484e": 152, "ac235": 152, "350512e": 152, "ac236": 152, "360553e": 152, "ac237": 152, "370585e": 152, "ac238": 152, "ac239": 152, "390608e": 152, "ac240": 152, "400610e": 152, "320381e": 152, "th208": 152, "080178e": 152, "th209": 152, "090177e": 152, "th210": 152, "100151e": 152, "th211": 152, "110149e": 152, "th212": 152, "120130e": 152, "th213": 152, "130130e": 152, "th214": 152, "140115e": 152, "th215": 152, "150117e": 152, "th216": 152, "160111e": 152, "th216m": 152, "160133e": 152, "th217": 152, "170131e": 152, "th217m": 152, "170156e": 152, "th218": 152, "180133e": 152, "th219": 152, "190155e": 152, "th220": 152, "200157e": 152, "th221": 152, "210182e": 152, "th222": 152, "220185e": 152, "th223": 152, "230208e": 152, "th224": 152, "240215e": 152, "th225": 152, "250240e": 152, "th226": 152, "260249e": 152, "834200e": 152, "th227": 152, "270277e": 152, "615421e": 152, "th228": 152, "280287e": 152, "032422e": 152, "th229": 152, "290318e": 152, "486686e": 152, "th230": 152, "300331e": 152, "379392e": 152, "th231": 152, "310363e": [152, 477], "187200e": 152, "th232": 152, "th233": 152, "330416e": 152, "309800e": 152, "th234": 152, "340436e": 152, "th235": 152, "350475e": 152, "th236": 152, "360499e": 152, "th237": 152, "370539e": 152, "th238": 152, "th239": 152, "390610e": 152, "th240": 152, "th241": 152, "410641e": 152, "th242": 152, "420629e": [152, 477], "310359e": 152, "pa211": 152, "110229e": 152, "pa212": 152, "120232e": 152, "pa213": 152, "130211e": 152, "pa214": 152, "140209e": 152, "pa215": 152, "150192e": 152, "pa216": 152, "160191e": 152, "pa217": 152, "170183e": 152, "pa217m": 152, "170203e": 152, "pa218": 152, "180200e": 152, "pa218m": 152, "180201e": 152, "pa219": 152, "190199e": 152, "pa220": 152, "200219e": 152, "pa221": 152, "210219e": 152, "pa222": 152, "220237e": 152, "pa223": 152, "230240e": 152, "pa224": 152, "240256e": 152, "pa225": 152, "250261e": 152, "pa226": 152, "260279e": 152, "pa227": 152, "270288e": 152, "298000e": 152, "pa228": 152, "pa229": 152, "290321e": 152, "pa230": 152, "300345e": 152, "503360e": 152, "pa231": 152, "033805e": 152, "pa232": 152, "320386e": 152, "pa233": 152, "330402e": 152, "330640e": 152, "pa234": 152, "340433e": 152, "412000e": 152, "pa234m": 152, "340434e": 152, "954000e": 152, "pa235": 152, "350454e": 152, "pa236": 152, "360487e": 152, "pa237": 152, "370511e": 152, "pa238": 152, "380545e": 152, "pa239": 152, "390573e": 152, "pa240": 152, "pa241": 152, "410644e": 152, "pa242": 152, "pa243": 152, "243": [152, 238, 477], "430670e": 152, "pa244": 152, "244": [152, 477], "440679e": [152, 477], "u215": [152, 477], "150262e": [152, 477], "u216": [152, 477], "160240e": [152, 477], "u217": [152, 477], "170244e": [152, 477], "u218": [152, 477], "180235e": [152, 477], "u219": [152, 477], "190249e": [152, 477], "u220": [152, 477], "200247e": [152, 477], "u221": [152, 477], "210264e": [152, 477], "u222": [152, 477], "220261e": [152, 477], "u223": [152, 477], "230277e": [152, 477], "u224": [152, 477], "240276e": [152, 477], "u225": [152, 477], "250294e": [152, 477], "u226": [152, 477], "260293e": [152, 477], "u227": [152, 477], "270312e": [152, 477], "u228": [152, 477], "280314e": [152, 477], "u229": [152, 477], "290335e": [152, 477], "u230": [152, 477], "300339e": [152, 477], "747872e": 152, "u231": [152, 477], "628800e": 152, "u232": [152, 477], "320372e": [152, 477], "174272e": 152, "330396e": [152, 477], "023547e": 152, "340410e": [152, 477], "747225e": 152, "221608e": 152, "u235m": [152, 477], "u236": [152, 298, 473, 477, 488], "360456e": [152, 477], "u237": [152, 477], "370487e": [152, 477], "833728e": 152, "927420e": [152, 477], "380508e": [152, 477], "409963e": 152, "390543e": [152, 477], "407000e": 152, "u240": [152, 477], "400566e": [152, 477], "u241": [152, 477], "410603e": [152, 477], "u242": [152, 477], "u243": [152, 477], "430674e": [152, 477], "u244": [152, 477], "u245": [152, 477], "245": [152, 238, 477], "450708e": [152, 477], "u246": [152, 477], "246": [152, 477], "460702e": [152, 477], "np219": 152, "190304e": 152, "np220": 152, "200319e": 152, "np221": 152, "210316e": 152, "np222": 152, "220338e": 152, "np223": 152, "230320e": 152, "np224": 152, "240334e": 152, "np225": 152, "250339e": 152, "np226": 152, "260351e": 152, "np227": 152, "270350e": 152, "np228": 152, "280362e": 152, "np229": 152, "290363e": 152, "np230": 152, "300378e": 152, "np231": 152, "310382e": 152, "np232": 152, "320401e": 152, "np233": 152, "330407e": 152, "np234": 152, "340429e": 152, "801600e": 152, "np235": 152, "350441e": 152, "422304e": 152, "np236": 152, "360466e": 152, "828210e": 152, "np236m": 152, "np237": [152, 160, 298, 473], "370482e": 152, "765805e": 152, "np238": [152, 298, 473], "380509e": 152, "813536e": 152, "np239": [152, 160], "390529e": 152, "035584e": 152, "np240": 152, "400562e": 152, "714000e": 152, "np240m": 152, "np241": 152, "410583e": 152, "np242": 152, "420616e": 152, "np242m": 152, "420617e": 152, "np243": 152, "430643e": 152, "np244": 152, "np245": 152, "450709e": 152, "np246": 152, "np247": 152, "470742e": 152, "np248": 152, "248": [152, 210], "480758e": 152, "pu221": 152, "210376e": 152, "pu222": 152, "220370e": 152, "pu223": 152, "230377e": 152, "pu224": 152, "240370e": 152, "pu225": 152, "250382e": 152, "pu226": 152, "260378e": 152, "pu227": 152, "270392e": 152, "pu228": 152, "280387e": 152, "pu229": 152, "290402e": 152, "pu230": 152, "300397e": 152, "pu231": 152, "310411e": 152, "pu232": 152, "320412e": 152, "pu232m": 152, "pu233": 152, "330430e": 152, "pu234": 152, "168000e": 152, "pu235": 152, "350453e": 152, "518000e": 152, "pu236": [152, 298, 473], "360461e": 152, "018969e": 152, "pu237": 152, "370484e": 152, "943296e": 152, "pu237m": 152, "370486e": 152, "380496e": 152, "767542e": 152, "390522e": 152, "608375e": 152, "400538e": 152, "070450e": 152, "410569e": 152, "521792e": 152, "pu241m": 152, "410592e": 152, "420587e": 152, "183385e": 152, "pu243": 152, "430620e": 152, "784160e": 152, "pu244": 152, "440642e": 152, "565578e": 152, "pu245": 152, "450677e": 152, "pu246": 152, "365760e": 152, "pu247": 152, "470741e": 152, "961280e": 152, "pu248": 152, "pu249": 152, "249": [152, 210, 238], "490785e": 152, "pu250": 152, "250": 152, "500784e": 152, "pu251": 152, "251": [152, 238], "510823e": 152, "am223": 152, "230452e": 152, "am224": 152, "240468e": 152, "am225": 152, "250448e": 152, "am226": 152, "260456e": 152, "am227": 152, "270448e": 152, "am228": 152, "280455e": 152, "am229": 152, "290447e": 152, "am230": 152, "300456e": 152, "am231": 152, "310456e": 152, "am232": 152, "320466e": 152, "am233": 152, "330463e": 152, "am234": 152, "340478e": 152, "392000e": 152, "am235": 152, "350479e": 152, "am236": 152, "360496e": 152, "am236m": 152, "am237": 152, "370500e": 152, "416000e": 152, "am238": 152, "380520e": 152, "am238m": 152, "380547e": 152, "am239": 152, "390530e": 152, "am240": 152, "400553e": 152, "828800e": 152, "am240m": 152, "400585e": 152, "410568e": 152, "365153e": 152, "am242g": [152, 156], "420595e": 152, "767200e": 152, "420596e": 152, "am242m2": 152, "420619e": 152, "am243": [152, 298, 473], "430614e": 152, "323852e": 152, "am244": 152, "440643e": 152, "am244m": 152, "440644e": 152, "am244m2": 152, "440664e": 152, "am245": 152, "450665e": 152, "am246": 152, "460698e": 152, "am246m": 152, "am246m2": 152, "460719e": 152, "am247": 152, "470721e": 152, "am248": 152, "am249": 152, "am250": 152, "am251": 152, "am252": 152, "252": [152, 475], "520849e": 152, "am253": 152, "530869e": 152, "cm231": 152, "310504e": 152, "cm232": 152, "320496e": 152, "cm233": 152, "330508e": 152, "cm234": 152, "340502e": 152, "cm235": 152, "350514e": 152, "cm236": 152, "360514e": 152, "cm237": 152, "370529e": 152, "cm238": 152, "380530e": 152, "cm239": 152, "390550e": 152, "cm240": 152, "400555e": 152, "332800e": 152, "cm241": 152, "410577e": 152, "833920e": 152, "cm242": [152, 298, 473], "420588e": 152, "406592e": 152, "cm243": [152, 298, 473], "183065e": 152, "cm244": [152, 298, 473], "440628e": 152, "714959e": 152, "cm244m": 152, "440639e": 152, "cm245": [152, 298, 473], "450655e": 152, "658040e": 152, "cm246": [152, 298, 473], "460672e": 152, "485069e": 152, "cm247": [152, 291, 298, 473], "470704e": 152, "922880e": 152, "cm248": 152, "480723e": 152, "098181e": 152, "cm249": 152, "490760e": 152, "849000e": 152, "cm250": 152, "619225e": 152, "cm251": 152, "cm252": 152, "cm253": 152, "cm254": 152, "254": 152, "540906e": 152, "cm255": 152, "550910e": 152, "bk233": 152, "330562e": 152, "bk234": 152, "340569e": 152, "bk235": 152, "350566e": 152, "bk236": 152, "360573e": 152, "bk237": 152, "370570e": 152, "bk238": 152, "380583e": 152, "bk239": 152, "390583e": 152, "bk240": 152, "400598e": 152, "bk241": 152, "410602e": 152, "bk242": 152, "420620e": 152, "bk243": 152, "430630e": 152, "bk244": 152, "440652e": 152, "807200e": 152, "bk245": 152, "450664e": 152, "276800e": 152, "bk246": 152, "460687e": 152, "555200e": 152, "bk247": 152, "470703e": 152, "354856e": 152, "bk248": 152, "480731e": 152, "bk248m": 152, "bk249": 152, "490750e": 152, "bk250": 152, "500783e": 152, "156320e": 152, "bk251": 152, "510808e": 152, "336000e": 152, "bk252": 152, "520843e": 152, "bk253": 152, "bk254": 152, "bk255": 152, "bk256": 152, "256": [152, 238, 325, 339], "560934e": 152, "bk257": 152, "257": [152, 238], "570895e": 152, "cf236": 152, "360524e": 152, "cf237": 152, "370621e": 152, "cf238": 152, "380614e": 152, "cf239": 152, "390624e": 152, "cf240": 152, "400623e": 152, "cf241": 152, "410637e": 152, "cf242": 152, "420637e": 152, "cf243": 152, "430654e": 152, "cf244": 152, "440660e": 152, "cf245": 152, "450680e": 152, "cf246": 152, "460688e": 152, "285200e": 152, "cf246m": 152, "cf247": 152, "470710e": 152, "119600e": 152, "cf248": 152, "480722e": 152, "881440e": 152, "cf249": 152, "490749e": 152, "107648e": 152, "cf250": 152, "500764e": 152, "127646e": 152, "cf251": 152, "510796e": 152, "833812e": 152, "cf252": 152, "520816e": 152, "353118e": 152, "cf253": 152, "530851e": 152, "538784e": 152, "cf254": 152, "540873e": 152, "227200e": 152, "cf255": 152, "cf256": 152, "cf257": 152, "cf258": 152, "258": [152, 232], "580932e": 152, "cf259": 152, "259": [152, 238], "590937e": 152, "es238": 152, "380599e": 152, "es239": 152, "390679e": 152, "es240": 152, "400689e": 152, "es241": 152, "410685e": 152, "es242": 152, "420697e": 152, "es243": 152, "430695e": 152, "es244": 152, "440709e": 152, "es245": 152, "450713e": 152, "es246": 152, "460729e": 152, "es247": 152, "470737e": 152, "es247m": 152, "es248": 152, "480755e": 152, "es249": 152, "490764e": 152, "es250": 152, "500786e": 152, "096000e": 152, "es250m": 152, "500788e": 152, "es251": 152, "510800e": 152, "es252": 152, "520830e": 152, "075488e": 152, "es253": 152, "530848e": 152, "768608e": 152, "es254": 152, "540880e": 152, "382048e": 152, "es254m": 152, "540881e": 152, "415000e": 152, "es255": 152, "550903e": 152, "438720e": 152, "es256": 152, "560937e": 152, "es256m": 152, "560938e": 152, "es257": 152, "570960e": 152, "652800e": 152, "es258": 152, "580995e": 152, "es259": 152, "es260": 152, "260": 152, "600960e": 152, "es261": 152, "261": [152, 238], "610921e": 152, "fm241": 152, "410739e": 152, "fm242": 152, "420734e": 152, "fm243": 152, "430744e": 152, "fm244": 152, "440741e": 152, "fm245": 152, "450754e": 152, "fm246": 152, "460753e": 152, "fm247": 152, "470768e": 152, "fm247m": 152, "470769e": 152, "fm248": 152, "480772e": 152, "fm249": 152, "490790e": 152, "fm250": 152, "500795e": 152, "fm250m": 152, "500808e": 152, "fm251": 152, "510816e": 152, "fm252": 152, "520825e": 152, "140400e": 152, "fm253": 152, "530852e": 152, "fm254": 152, "540869e": 152, "166400e": 152, "fm254m": 152, "fm255": 152, "550900e": 152, "225200e": 152, "fm256": 152, "560918e": 152, "fm257": 152, "570951e": 152, "683200e": 152, "fm258": 152, "580971e": 152, "fm259": 152, "591006e": 152, "fm260": 152, "601027e": 152, "fm261": 152, "fm262": 152, "262": 152, "620958e": 152, "fm263": 152, "263": 152, "630963e": 152, "md244": 152, "440810e": 152, "md245": 152, "450808e": 152, "md246": 152, "460819e": 152, "md246m": 152, "460820e": 152, "md247": 152, "470816e": 152, "md247m": 152, "470819e": 152, "md248": 152, "480828e": 152, "md249": 152, "490830e": 152, "md249m": 152, "490831e": 152, "md250": 152, "500844e": 152, "md251": 152, "510848e": 152, "md252": 152, "520866e": 152, "md253": 152, "530873e": 152, "md254": 152, "540897e": 152, "md254m": 152, "md255": 152, "550911e": 152, "md256": 152, "560941e": 152, "662000e": 152, "md257": 152, "570955e": 152, "987200e": 152, "md258": 152, "580984e": 152, "md258m": 152, "580985e": 152, "md259": 152, "591005e": 152, "md260": 152, "601037e": 152, "747520e": 152, "md261": 152, "611057e": 152, "md262": 152, "621089e": 152, "md263": 152, "md264": 152, "640986e": 152, "md265": 152, "265": 152, "650947e": 152, "no248": 152, "480866e": 152, "no249": 152, "490878e": 152, "no250": 152, "500875e": 152, "no250m": 152, "500886e": 152, "no251": 152, "510890e": 152, "no251m": 152, "510891e": 152, "no252": 152, "520890e": 152, "no252m": 152, "520903e": 152, "no253": 152, "530907e": 152, "no254": 152, "540910e": 152, "no254m": 152, "540923e": 152, "no254m2": 152, "540944e": 152, "no255": 152, "550932e": 152, "no256": 152, "560943e": 152, "no257": 152, "570969e": 152, "no258": 152, "580982e": 152, "no259": 152, "591010e": 152, "no260": 152, "601026e": 152, "no261": 152, "no262": 152, "621073e": 152, "no263": 152, "631106e": 152, "no264": 152, "641123e": 152, "no265": 152, "no266": 152, "266": [152, 238], "660984e": 152, "no267": 152, "267": 152, "670989e": 152, "lr249": 152, "490834e": 152, "lr250": 152, "500843e": 152, "lr251": 152, "510944e": 152, "lr252": 152, "520954e": 152, "lr253": 152, "530952e": 152, "lr253m": 152, "lr254": 152, "540965e": 152, "lr255": 152, "550967e": 152, "lr255m": 152, "lr255m2": 152, "550983e": 152, "lr256": 152, "560986e": 152, "lr257": 152, "570996e": 152, "lr258": 152, "581018e": 152, "lr259": 152, "591029e": 152, "lr260": 152, "601055e": 152, "lr261": 152, "611069e": 152, "lr262": 152, "621096e": 152, "lr263": 152, "631113e": 152, "lr264": 152, "641140e": 152, "lr265": 152, "651158e": 152, "lr266": 152, "661193e": 152, "lr267": 152, "lr268": 152, "268": [152, 238], "681013e": 152, "lr269": 152, "690973e": 152, "rf252": 152, "rf253": 152, "531007e": 152, "rf253m": 152, "531009e": 152, "rf254": 152, "541002e": 152, "rf254m": 152, "541023e": 152, "rf255": 152, "551013e": 152, "rf256": 152, "561012e": 152, "rf257": 152, "571030e": 152, "rf257m": 152, "571031e": 152, "rf258": 152, "581035e": 152, "rf259": 152, "591056e": 152, "rf260": 152, "601064e": 152, "rf261": 152, "611088e": 152, "rf261m": 152, "rf262": 152, "621099e": 152, "rf263": 152, "631125e": 152, "rf264": 152, "rf265": 152, "651167e": 152, "rf266": 152, "661180e": 152, "rf267": 152, "671215e": 152, "rf268": 152, "681236e": 152, "rf269": 152, "rf270": 152, "270": [152, 238], "701010e": 152, "rf271": 152, "271": [152, 473, 479], "711015e": 152, "db254": 152, "db255": 152, "551074e": 152, "db256": 152, "561081e": 152, "db257": 152, "571077e": 152, "db257m": 152, "571081e": 152, "db258": 152, "581093e": 152, "db258m": 152, "581096e": 152, "db259": 152, "591096e": 152, "db260": 152, "601113e": 152, "db261": 152, "611121e": 152, "db262": 152, "621141e": 152, "db263": 152, "631150e": 152, "db264": 152, "641174e": 152, "db265": 152, "651186e": 152, "db266": 152, "661210e": 152, "db267": 152, "671224e": 152, "db268": 152, "681254e": 152, "db269": 152, "691275e": 152, "db270": 152, "701307e": 152, "db271": 152, "db272": 152, "272": 152, "721039e": 152, "db273": 152, "730999e": 152, "sg258": 152, "581132e": 152, "sg259": 152, "591145e": 152, "sg260": 152, "601144e": 152, "sg261": 152, "611161e": 152, "sg262": 152, "621164e": 152, "sg263": 152, "631183e": 152, "sg264": 152, "641189e": 152, "sg265": 152, "651211e": 152, "sg265m": 152, "651213e": 152, "sg266": 152, "661221e": 152, "sg267": 152, "671244e": 152, "sg268": 152, "681256e": 152, "sg269": 152, "691288e": 152, "sg270": 152, "701303e": 152, "sg271": 152, "711335e": 152, "sg272": 152, "721352e": 152, "sg273": 152, "731382e": 152, "sg274": 152, "274": [152, 210], "741036e": 152, "sg275": 152, "275": [152, 238], "751041e": 152, "bh260": 152, "601220e": 152, "bh261": 152, "611217e": 152, "bh262": 152, "621229e": 152, "bh262m": 152, "621231e": 152, "bh263": 152, "631230e": 152, "bh264": 152, "641246e": 152, "bh265": 152, "651251e": 152, "bh266": 152, "661269e": 152, "bh267": 152, "671277e": 152, "bh268": 152, "681298e": 152, "bh269": 152, "691307e": 152, "bh270": 152, "701336e": 152, "bh271": 152, "711352e": 152, "bh272": 152, "721380e": 152, "bh273": 152, "731396e": 152, "bh274": 152, "741424e": 152, "bh275": 152, "751442e": 152, "bh276": 152, "276": [152, 238], "761467e": 152, "bh277": 152, "277": [152, 238], "771488e": 152, "bh278": 152, "278": 152, "781527e": 152, "hs263": 152, "631286e": 152, "hs264": 152, "641284e": 152, "hs265": 152, "651301e": 152, "hs265m": 152, "651304e": 152, "hs266": 152, "661301e": 152, "hs266m": 152, "661314e": 152, "hs267": 152, "671318e": 152, "hs268": 152, "681322e": 152, "hs269": 152, "691341e": 152, "hs270": 152, "701347e": 152, "hs271": 152, "711377e": 152, "hs272": 152, "721391e": 152, "hs273": 152, "731420e": 152, "hs274": 152, "741431e": 152, "hs275": 152, "751460e": 152, "hs276": 152, "761472e": 152, "hs277": 152, "771498e": 152, "hs277m": 152, "771499e": 152, "hs278": 152, "781515e": 152, "hs279": 152, "279": [152, 238], "791545e": 152, "hs280": 152, "280": 152, "801562e": 152, "mt265": 152, "651362e": 152, "mt266": 152, "661373e": 152, "mt267": 152, "671373e": 152, "mt268": 152, "681387e": 152, "mt269": 152, "691391e": 152, "mt270": 152, "701407e": 152, "mt271": 152, "711411e": 152, "mt272": 152, "721437e": 152, "mt273": 152, "731449e": 152, "mt274": 152, "741475e": 152, "mt275": 152, "751486e": 152, "mt276": 152, "761512e": 152, "mt276m": 152, "761514e": 152, "mt277": 152, "771524e": 152, "mt278": 152, "781548e": 152, "mt279": 152, "791562e": 152, "mt280": 152, "801584e": 152, "mt281": 152, "281": [152, 210], "811601e": 152, "mt282": 152, "282": [152, 238], "821630e": 152, "ds267": 152, "671443e": 152, "ds268": 152, "681438e": 152, "ds269": 152, "691451e": 152, "ds270": 152, "701447e": 152, "ds270m": 152, "701459e": 152, "ds271": 152, "711461e": 152, "ds271m": 152, "ds272": 152, "721463e": 152, "ds273": 152, "731489e": 152, "ds274": 152, "741495e": 152, "ds275": 152, "751522e": 152, "ds276": 152, "761530e": 152, "ds277": 152, "771556e": 152, "ds278": 152, "781565e": 152, "ds279": 152, "791589e": 152, "ds280": 152, "801598e": 152, "ds281": 152, "811621e": 152, "ds282": 152, "821624e": 152, "ds283": 152, "283": 152, "831653e": 152, "ds284": 152, "284": [152, 238], "841669e": 152, "rg272": 152, "721536e": 152, "rg273": 152, "731537e": 152, "rg274": 152, "741557e": 152, "rg275": 152, "751561e": 152, "rg276": 152, "761585e": 152, "rg277": 152, "771595e": 152, "rg278": 152, "781616e": 152, "rg279": 152, "791625e": 152, "rg280": 152, "801645e": 152, "rg281": 152, "811654e": 152, "rg282": 152, "821675e": 152, "rg283": 152, "831684e": 152, "rg284": 152, "841696e": 152, "rg285": 152, "285": [152, 462, 465], "851712e": 152, "rg286": 152, "286": 152, "861740e": 152, "cn276": 152, "761590e": 152, "cn277": 152, "771639e": 152, "cn278": 152, "781643e": 152, "cn279": 152, "791665e": 152, "cn280": 152, "801670e": 152, "cn281": 152, "811693e": 152, "cn282": 152, "821698e": 152, "cn283": 152, "831718e": 152, "cn284": 152, "841724e": 152, "cn285": 152, "851741e": 152, "cn286": 152, "861742e": 152, "cn287": 152, "287": [152, 238], "871769e": 152, "cn288": 152, "288": [152, 210, 238], "881785e": 152, "nh278": 152, "781687e": 152, "nh279": 152, "791694e": 152, "nh280": 152, "801704e": 152, "nh281": 152, "811707e": 152, "nh282": 152, "821723e": 152, "nh283": 152, "831765e": 152, "nh284": 152, "841781e": 152, "nh285": 152, "851787e": 152, "nh286": 152, "861805e": 152, "nh287": 152, "871810e": 152, "nh288": 152, "881816e": 152, "nh289": 152, "289": [152, 210, 238], "891828e": 152, "nh290": 152, "290": 152, "901856e": 152, "fl284": 152, "841774e": 152, "fl285": 152, "851837e": 152, "fl286": 152, "861839e": 152, "fl287": 152, "871856e": 152, "fl288": 152, "881857e": 152, "fl289": 152, "891873e": 152, "fl290": 152, "901859e": 152, "fl291": 152, "291": [152, 238], "911886e": 152, "mc287": 152, "871912e": 152, "mc288": 152, "881925e": 152, "mc289": 152, "891927e": 152, "mc290": 152, "901941e": 152, "mc291": 152, "911944e": 152, "mc292": 152, "292": 152, "921945e": 152, "lv289": 152, "891989e": 152, "lv290": 152, "901986e": 152, "lv291": 152, "912000e": 152, "lv292": 152, "921998e": 152, "lv293": 152, "931994e": 152, "ts291": 152, "912066e": 152, "ts292": 152, "922075e": 152, "ts293": 152, "932043e": 152, "ts294": 152, "942064e": 152, "og293": 152, "932147e": 152, "og294": 152, "942103e": 152, "og295": 152, "295": [152, 238], "952123e": 152, "dump1": [152, 298, 473], "dump2": [152, 298, 473], "lregn": 152, "lfp35": [152, 240, 242, 298, 473], "332730e": 152, "lfp38": [152, 160, 240, 298, 473], "357800e": 152, "lfp39": [152, 240, 242, 298, 473], "368980e": 152, "lfp40": [152, 240, 298, 473], "lfp41": [152, 240, 298, 473], "388120e": 152, "npu239": 152, "decaytyp": 152, "dectyp": 152, "sf": [152, 160], "identif": [152, 171, 180], "endf": [152, 159, 181, 240, 291], "vii": [152, 159, 181], "fissl": 152, "mcc2id": 152, "mcc3id": 152, "nucleon": 152, "excit": [152, 475, 480], "pad": [152, 247, 318, 397, 486, 492], "nusf": [152, 160, 477], "answer": [152, 203, 334, 406, 467, 468, 473, 477], "card": [152, 196, 251, 252, 389, 409, 445, 449, 466, 471, 481], "isomer": 152, "94239": [152, 446], "6000": [152, 446], "eg": [152, 197, 308], "129m": 152, "njoi": [152, 240], "lightest": 152, "9228": 152, "9237": 152, "92000": 152, "Not": [152, 196, 236, 308, 329, 385, 388, 484, 494], "nat": 152, "placehold": [152, 281, 356, 386, 479], "chain": [152, 156, 160, 216, 233, 240, 291, 308, 327, 333, 385, 397, 404, 464, 468, 488, 489, 492], "truncat": [152, 385], "lump": [152, 160, 235, 240, 242, 244, 245, 252, 305, 308, 464, 471, 492], "fissionproduct": [152, 240, 455, 462, 463, 473, 496], "expend": 152, "numberdensitydict": 152, "activenuclid": [152, 252, 344, 348], "march": [152, 433, 489], "smallest": [152, 285, 302, 311, 398], "orderedset": 152, "lambda": [152, 308, 392, 397, 402, 455, 475, 478, 486], "nn": [152, 494], "isomers90": 152, "isom": [152, 159], "mo2n": 152, "nb2n": 152, "zr2n": 152, "0107358968": 152, "am4c": 152, "newlabel": 152, "burnchainstream": [152, 464], "twice": [152, 221, 333, 479], "rebuild": 152, "orphan": 152, "mid": [152, 358], "burnchain": 152, "believ": [152, 468], "henc": [152, 305, 435], "ecosystem": [152, 279, 432, 434, 439, 440, 468, 476], "metast": [152, 464, 486], "ground": [152, 468, 471], "test_elements_elementbulkproperti": [153, 154], "test_element_elementbynamereturnsel": [153, 154], "test_element_elementbyzreturnsel": [153, 154], "test_element_elementbysymbolreturnsel": [153, 154], "test_element_addexistingelementfail": [153, 154], "test_element_addedelementappearsinelementlist": [153, 154], "test_element_getnatrualisotpicsonlyretrievesabundacegt0": [153, 154], "test_element_isnaturallyoccur": [153, 154], "test_abundancesaddtoon": [153, 154], "test_isheavymet": [153, 154], "test_nucdir_getnameforolddashednam": [153, 155], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclid": [153, 155], "test_nucdir_getnuclidesfromforbadnam": [153, 155], "test_getdisplacementenergi": [153, 155], "test_nucbases_fromnamebadnameraisesexcept": [153, 156], "test_nucbase_allabundancesaddtoon": [153, 156], "test_nucbases_alllabelsareuniqu": [153, 156], "test_nucbases_negativezraisesexcept": [153, 156], "test_nucbases_z295raisesexcept": [153, 156], "test_nucbases_mc2element": [153, 156], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail": [153, 156], "test_naturalnuclidebase_getnatrualisotp": [153, 156], "test_nucbases_singlefailswithmultiplematch": [153, 156], "test_nucbases_singlefailswithnomatch": [153, 156], "test_nucbases_singleisprettyspecif": [153, 156], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotop": [153, 156], "test_nucbases_labelandnamecollsionsareforsamenuclid": [153, 156], "test_nucbases_imposeburnchaindecaybulkstatist": [153, 156], "test_nucbases_imposeburnchaintransmutationbulkstatist": [153, 156], "test_nucbases_imposeburn_nusf": [153, 156], "test_nucbases_databasenamesstartwith_n": [153, 156], "test_nucbases_alldatabasenamesareuniqu": [153, 156], "test_nucbases_am242m": [153, 156], "test_nucbases_isheavymet": [153, 156], "test_getdecai": [153, 156], "test_getendfmatnum": [153, 156], "test_nonmc2nuclid": [153, 156], "test_kryptondecayconst": [153, 156], "test_curiedefinitionwithra226": [153, 156], "test_loadmcc2data": [153, 156], "test_loadmcc3data": [153, 156], "test_aaazzzsnamegener": [153, 156], "test_graphiteonreactor": [153, 157], "test_endf8compound": [153, 157], "test_endf8elementincompound": [153, 157], "test_endf8isotop": [153, 157], "test_acecompound": [153, 157], "test_aceelementincompound": [153, 157], "test_aceisotop": [153, 157], "test_failonmultipl": [153, 157], "test_transmutation_validreactiontyp": [153, 158], "test_transmutation_productparticl": [153, 158], "test_transmutation_invalidreactiontyp": [153, 158], "test_decaymode_validreactiontyp": [153, 158], "test_decaymode_invalidreactiontyp": [153, 158], "ripl": [154, 470, 471], "debat": 154, "yeah": [154, 209], "branch": [156, 160, 216, 254, 432, 464, 471, 490, 491, 492], "3e": [156, 454], "threshold": [156, 238, 267], "ternari": [156, 345], "sponan": 156, "ci": [156, 308, 446, 471], "988": 156, "mcc": [156, 170], "aaazz": 156, "tsl": [157, 159], "armiobj": [157, 252], "conceptu": [157, 252, 305, 355, 468, 488], "tslbynuclidebas": 157, "subject": [157, 159, 279, 439, 468], "tslinfo": 157, "nucbas": 157, "acelabel": [157, 159], "awar": [159, 201, 310, 468], "characterist": [159, 336], "significantli": [159, 162, 308, 433, 488], "molecul": [159, 308], "beta": [159, 160, 166, 232, 464, 484, 486, 491, 492], "solver": [159, 160, 166, 170, 172, 200, 240, 246, 247, 249, 252, 279, 285, 324, 447, 455, 464, 475, 479, 480, 488, 491, 492], "parson": 159, "ur": 159, "25096": 159, "lanl": [159, 170], "pdf_file": 159, "classif": 159, "beo": 159, "crystallin": 159, "porou": [159, 232], "para": 159, "ortho": 159, "ch4": 159, "sio2": 159, "benzen": 159, "iii": 159, "kernel": [159, 211, 235, 247, 252, 279, 288, 289, 398, 468, 471, 473, 474, 479, 488, 492, 495], "bynbandcompound": 159, "compoundnam": 159, "endf8label": 159, "whose": [159, 285, 310, 336, 385, 397], "methan": 159, "endf8": 159, "rebuilt": 159, "burnchainfilenam": [160, 492], "n2n": [160, 184, 193, 196, 247, 251, 252, 259, 308, 484], "ngamma": [160, 259, 402, 459, 464], "45000e": 160, "halflifeinsecond": 160, "4099935680e": 160, "gamma": [160, 162, 167, 168, 173, 187, 196, 197, 198, 233, 247, 251, 257, 259, 285, 305, 308, 323, 324, 336, 339, 402, 459, 464, 471, 484, 492], "low": [160, 235, 236, 280, 325, 385, 402, 455, 473, 480, 483, 484, 486, 488], "explicitli": [160, 216, 240, 252, 279, 281, 292, 325, 342, 436, 440, 457, 458, 470, 475, 479, 488, 492], "matrix": [160, 163, 164, 166, 169, 170, 179, 187, 193, 196, 198, 259, 385, 451, 464, 465, 466, 478, 481, 484, 494], "ill": 160, "exponenti": [160, 398, 464], "cram": 160, "adequ": [160, 439], "solut": [160, 168, 200, 235, 236, 240, 309, 311, 339, 398, 488, 492], "intrins": [160, 467, 484, 486], "pusa": 160, "maria": 160, "jaakko": 160, "leppanen": 160, "2010": 160, "moler": 160, "cleve": 160, "charl": 160, "van": 160, "loan": 160, "nineteen": 160, "dubiou": 160, "siam": 160, "1978": 160, "836": 160, "datadict": 160, "productnuclid": [160, 464], "fallback": [160, 216, 371], "productparticl": 160, "outgo": [160, 172, 186, 216, 489], "particl": [160, 484, 492], "scale": [160, 164, 285, 291, 308, 312, 329, 352, 389, 402, 404, 476, 484, 497], "doubl": [160, 163, 288, 494], "librarynucnam": 160, "daughter": [160, 486], "circuit": [160, 338, 339], "shorter": [160, 364, 434, 440, 480], "nalph": [160, 259, 402, 459, 464], "deuteron": 160, "triton": 160, "nt": [160, 259, 492], "bmd": [160, 464], "bpd": [160, 464], "electron": 160, "ec": [160, 456], "xsid": [161, 197, 235, 236, 265], "isotx": [161, 162, 164, 166, 184, 191, 196, 197, 198, 237, 251, 252, 257, 259, 285, 305, 308, 342, 402, 451, 454, 460, 465, 466, 470, 471, 481, 492], "compx": [161, 162, 171, 179, 191, 197], "gamiso": [161, 162, 170, 182, 197, 198, 470, 471], "cycle0": 161, "pmatrx": [161, 162, 187, 196, 197, 198, 470, 471], "implicit_int": [161, 162, 163], "iorecord": [161, 162, 163], "binaryrecordread": [161, 162, 163], "binaryrecordwrit": [161, 162, 163], "asciirecordread": [161, 162, 163], "asciirecordwrit": [161, 162, 163], "datacontain": [161, 162, 163, 165, 169, 171, 172, 174, 175, 176], "streamwithdatacontain": [161, 162, 163, 165, 169, 171, 172, 174, 175, 176], "getblockbandwidth": [161, 162, 163], "compxsregion": [161, 162, 164], "dif3d": [161, 162, 164, 166, 167, 168, 170, 171, 172, 175, 180, 183, 185, 188, 196, 200, 217, 281, 285, 312, 324, 327, 335, 402, 433, 467, 479, 484, 488], "dif3ddata": [161, 162, 165], "dif3dstream": [161, 162, 165], "dlayx": [161, 162, 181], "delayedneutrondata": [161, 162, 166], "readbinari": [161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 197, 402, 454, 459, 460], "readascii": [161, 162, 163, 166, 173, 385, 386], "writebinari": [161, 162, 163, 164, 166, 167, 169, 170, 173, 174, 175, 176], "writeascii": [161, 162, 163, 166, 172, 173, 176, 385, 386], "dlayxsio": [161, 162, 166], "fixsrc": [161, 162, 402, 492], "comparenuclidex": [161, 162, 168, 170, 173], "adddummynuclidestolibrari": [161, 162, 168, 170, 173], "geodst": [161, 162, 172, 174, 183, 285, 342, 471], "geodstdata": [161, 162, 169], "geodststream": [161, 162, 169], "compareset": [161, 162, 170], "isotxsio": [161, 162, 170], "labelsdata": [161, 162, 171], "labelsstream": [161, 162, 171], "nhflux": [161, 162, 175, 186, 471], "nhfluxstream": [161, 162, 172], "nafluxstream": [161, 162, 172], "nhfluxstreamvari": [161, 162, 172], "nafluxstreamvari": [161, 162, 172], "getnhfluxread": [161, 162, 172], "pmatrxio": [161, 162, 173], "pwdint": [161, 162, 188], "pwdintdata": [161, 162, 174], "pwdintstream": [161, 162, 174], "rtflux": [161, 162, 167, 189, 402], "rtfluxdata": [161, 162, 175, 402], "rtfluxstream": [161, 162, 175, 402], "atfluxstream": [161, 162, 175], "getfdfluxread": [161, 162, 175], "rzflux": [161, 162, 175, 190], "rzfluxdata": [161, 162, 176], "rzfluxstream": [161, 162, 176], "test_xscollect": [161, 192, 308], "testxscollect": [161, 192, 193], "mockblueprint": [161, 192, 193], "mockblock": [161, 192, 193, 308], "test_xslibrari": [161, 192], "tempfilemixin": [161, 192, 194], "testxslibrari": [161, 192, 194], "testgetisotxsfilesinworkingdirectori": [161, 192, 194], "pmatrx_merge_test": [161, 192, 194], "isotxs_merge_test": [161, 162, 177, 184, 192, 194], "gamiso_merge_test": [161, 192, 194], "combined_merge_test": [161, 192, 194], "test_xsnuclid": [161, 192], "nuclidetest": [161, 192, 195], "getdefaultx": [161, 196], "getabsorptionx": [161, 196], "gettotalscattermatrix": [161, 196], "collapsecrosssect": [161, 196], "createmacrosonblocklist": [161, 196], "createmacrosfrommicro": [161, 196], "gammaenergyupperbound": [161, 197], "neutrondoseconversionfactor": [161, 197], "gammadoseconversionfactor": [161, 197], "numgroup": [161, 164, 196, 197], "numgroupsgamma": [161, 197], "nuclidelabel": [161, 197], "resetscatterweight": [161, 197], "getscatterweight": [161, 197], "purgefissionproduct": [161, 197], "regionlabel": [161, 197], "updatebasenuclid": [161, 198], "getmicrox": [161, 195, 198], "getx": [161, 162, 164, 198], "buildnormalizedscattercolumn": [161, 198], "tran": [161, 198, 464], "late": 162, "1960": [162, 468], "recogn": [162, 279, 468], "establish": [162, 310, 390, 391, 439, 468], "committe": 162, "coordin": [162, 172, 195, 211, 216, 240, 247, 281, 285, 290, 308, 312, 313, 321, 324, 327, 329, 332, 333, 334, 342, 345, 346, 386, 396, 398, 427, 428, 448, 457, 475, 480], "1977": 162, "iv": [162, 166, 167, 169, 170, 174, 175, 176, 292], "partisn": [162, 492], "multigroup": [162, 164, 166, 167, 168, 170, 173, 175, 176, 196, 210, 238, 247, 254, 285, 305, 308, 324, 342, 402, 454, 484, 491, 492], "grupx": 162, "brkox": 162, "bondarenko": 162, "russian": 162, "delai": [162, 164, 166, 181, 233, 236, 269, 484, 486, 491, 492], "precursor": [162, 166, 233, 269, 486, 491, 492], "isogx": 162, "ndxsrf": 162, "znatdn": 162, "subzon": 162, "sncon": 162, "ordin": [162, 404], "surfac": [162, 172, 186, 484], "scalar": [162, 342, 404, 478, 484, 494], "atflux": [162, 167, 175, 402], "adjoint": [162, 172, 175, 189, 233, 247, 285, 305, 308, 324, 342, 402, 484, 486, 492], "rcurnt": 162, "acurnt": 162, "raflux": 162, "angular": [162, 307, 335], "aaflux": 162, "avearg": 162, "densitii": 162, "interv": [162, 174, 398, 415], "dougla": 162, "dell": 162, "procedur": [162, 324], "6941": 162, "lo": 162, "alamo": 162, "septemb": 162, "5369298": 162, "ascii": [162, 163, 166, 169, 172, 173, 174, 175, 176, 178, 179, 187, 189, 190, 216, 290, 350, 386, 406, 470, 479, 488, 492], "confus": [162, 163, 291, 305, 308, 325, 439, 471, 488, 489], "rw": [162, 163], "talk": [162, 163, 491], "hide": [162, 348, 431, 439, 470], "record": [162, 163, 164, 165, 169, 171, 174, 356, 358], "integ": [162, 163, 216, 217, 235, 281, 285, 308, 318, 325, 339, 382, 386, 394, 402, 433, 484, 486, 494, 499], "byte": [162, 163, 308, 394, 397], "fortran": [162, 163, 398, 468], "unformat": 162, "sequenti": [162, 163, 426, 433], "gcc": [162, 473], "gnu": [162, 369], "onlinedoc": 162, "gfortran": 162, "pyne": 162, "terrapow": [162, 236, 399, 430, 435, 440, 467, 468, 469, 471, 479, 500], "author": 162, "era": 162, "inspir": 162, "prof": 162, "jame": 162, "paul": 162, "hollowai": 162, "ccccutil": 162, "2001": [162, 238], "test_cccc": [162, 177], "cccciostreamtest": [162, 177, 178], "ccccbinaryrecordtest": [162, 177, 178], "ccccasciirecordtest": [162, 177, 178], "test_compx": [162, 177], "testcompx": [162, 177, 179], "test_dif3d": [162, 177], "testdif3dsimplehexz": [162, 177, 180], "testdif3demptyrecord": [162, 177, 180], "test_dlayx": [162, 177], "dlayxstest": [162, 177, 181], "test_gamiso": [162, 177], "testgamiso": [162, 177, 182], "test_geodst": [162, 177], "testgeodst": [162, 177, 183, 188], "test_isotx": [162, 177], "testisotx": [162, 177, 184], "test_label": [162, 177, 344, 350], "testlabel": [162, 177, 185], "test_nhflux": [162, 177], "testnhflux": [162, 177, 186], "testnhfluxvari": [162, 177, 186], "test_pmatrx": [162, 177], "testpmatrxnuclid": [162, 177, 187], "testpmatrx": [162, 177, 187], "testproductionmatrix_fromwritten": [162, 177, 187], "testproductionmatrix_fromwrittenascii": [162, 177, 187], "test_pwdint": [162, 177], "test_rtflux": [162, 177], "testrtflux": [162, 177, 189], "test_rzflux": [162, 177], "testrzflux": [162, 177, 190], "binaryfilesequ": [162, 177, 190], "maxsiz": [162, 163], "rwint": [162, 163], "rwbool": [162, 163], "rwfloat": [162, 163], "rwdoubl": [162, 163], "rwstring": [162, 163], "rwlist": [162, 163], "rwmatrix": [162, 163], "rwdoublematrix": [162, 163], "rwintmatrix": [162, 163], "rwimplicitlytypedmap": [162, 163], "rwlong": [162, 163], "readwrit": [162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176], "createrecord": [162, 163], "initmetadata": [162, 164], "allocatex": [162, 164], "makescatteringmatric": [162, 164], "generateaveragedelayedneutronconst": [162, 166], "fluxmoment": [162, 172], "partialcurrentshex": [162, 172], "partialcurrentshex_ext": [162, 172], "partialcurrentsz": [162, 172], "groupflux": [162, 175, 176], "getenergygroupindex": [162, 175], "no_iter": [162, 176], "diverg": [162, 176, 217, 371, 490], "ijklmn": 163, "implicit": [163, 430, 479], "hasrecordboundari": 163, "signific": [163, 223, 285, 305, 389, 468], "enforc": [163, 279, 326, 339, 364, 369, 433, 492], "tradeoff": [163, 488], "comprehend": 163, "885": [163, 471], "seemingli": 163, "odd": [163, 172, 329, 332, 342, 439], "precis": [163, 282, 324, 339, 342, 426, 470, 471, 479, 488], "containedtyp": [163, 357, 364], "strlength": 163, "fortran77": 163, "roughli": [163, 308, 455, 479], "front": [163, 325, 491], "newlin": [163, 200], "concert": [163, 468], "streamwithdatastructur": 163, "filemod": [163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176], "io": [163, 308, 385, 392, 426, 430, 468], "wb": [163, 167], "nintj": 163, "nblok": 163, "bandwidth": 163, "jl": 163, "ju": 163, "WITH": 163, "THE": [163, 164], "AND": [163, 171, 285, 342], "min0": 163, "jup": 163, "matric": [163, 164, 179, 193, 196, 198, 259, 460], "spars": [163, 164, 179, 198, 368], "jh": 163, "jmax": 163, "band": 163, "derstin": [164, 335], "solv": [164, 166, 200, 224, 247, 311, 324, 333, 339, 396, 398, 464, 475, 479, 492], "diffus": [164, 247, 259, 312, 324, 467, 468, 470, 471], "april": 164, "1984": [164, 238, 335], "illinoi": 164, "unt": 164, "ark": 164, "67531": 164, "metadc283553": 164, "octob": [164, 172], "north": 164, "texa": 164, "credit": 164, "govern": [164, 282, 468, 479], "depart": 164, "IF": [164, 171, 358], "FOR": [164, 171], "OF": [164, 468, 479], "decreas": [164, 313, 398, 480], "r0": 164, "macro": [164, 196, 259, 285, 480], "higherorderscatt": 164, "p1": [164, 398], "p5": 164, "compxs2": 164, "watt": [164, 174, 285, 486], "powerconvmult": 164, "integr": [164, 285, 302, 308, 324, 434, 439, 468, 484, 486, 497], "absorpt": [164, 196, 247, 324, 480, 484, 486], "similari": 164, "lib1": [164, 166, 168, 170, 173, 197], "lib2": [164, 166, 168, 170, 173, 197], "verbos": [164, 170, 196, 358, 382, 385, 478, 492, 496], "disregard": [164, 285], "regionnumb": 164, "filewidechi": 164, "reg00": 164, "reg01": 164, "reg02": 164, "regnn": 164, "r10": 164, "01147095": 164, "01006284": 164, "0065597": 164, "00660079": 164, "005587": 164, "08920149": 164, "13035864": 164, "16192732": 164, "sigma_": [164, 196, 285], "rem": 164, "cdot": [164, 247, 305], "reconstruct": [164, 186, 191, 198, 247, 484, 492, 494], "s_": 164, "rightarrow": 164, "segment": [164, 307, 467, 491], "xscatu_j": 164, "lbrace": [164, 497], "vert": 164, "nup": 164, "rbrace": [164, 497], "xscatj_j": 164, "xscatd_j": 164, "j_ndn": 164, "ndn": 164, "upscatt": 164, "downscatt": [164, 238], "scipi": [164, 179, 281, 398], "csc_matrix": [164, 179], "emiss": [166, 181], "spectra": 166, "lattic": [166, 170, 196, 215, 221, 233, 235, 236, 247, 253, 254, 255, 257, 258, 264, 285, 290, 291, 295, 299, 303, 308, 311, 334, 386, 396, 433, 447, 471, 479, 480, 490, 491, 492], "numenergygroup": 166, "numprecursorgroup": 166, "kinet": [166, 181, 209, 339, 484, 490], "precursordecayconst": 166, "character": [166, 254, 334, 335, 467], "delayemissionspectrum": [166, 181], "famili": [166, 285, 388, 491], "pxg": 166, "spectrum": [166, 181, 235, 236, 247, 285, 402, 464, 484], "aka": 166, "chi": [166, 196, 232, 259, 484], "delayneutronsperfiss": 166, "nubar": 166, "ordereddict": [166, 251, 287, 288, 289, 290, 291, 292], "contribut": [166, 196, 324, 432, 468, 469, 500], "nuclidefamili": 166, "numfamili": 166, "numnuclid": 166, "neutronenergyupperbound": 166, "nuclidecontributionfract": 166, "perturbationtheori": 166, "perturbationtheoryinterfac": 166, "calculatebeta": 166, "had": [166, 216, 336, 393, 394, 426, 471, 480, 491], "took": 166, "paper": [166, 479], "tuttl": 166, "1974": 166, "insensit": [166, 308, 334], "twr": [166, 342, 467, 468], "beta_eff_nuclid": 166, "triangular": [167, 402], "photon": [167, 196, 247, 471], "fixsrcarrai": 167, "intent": [167, 281, 468], "preexist": 167, "v3": [168, 436], "microscop": [168, 170, 193, 196, 198, 235, 247, 259, 285, 342, 460, 476], "gamsor": [168, 173], "smith": [168, 172], "lee": [168, 173], "hill": 168, "1343095": 168, "nuc1": [168, 170, 173], "nuc2": [168, 170, 173], "dummynuclid": [168, 170, 173], "coars": [169, 180, 217], "geo": 169, "xmesh": 169, "zmesh": 169, "geodst2": 169, "rememb": [169, 216, 308, 340, 426, 436, 439, 488], "analog": [169, 176, 200, 318, 433, 494], "istox": [169, 176, 198], "stand": [170, 296], "dragon": 170, "mylib": [170, 196], "fis5": 170, "micro": [170, 196, 251, 259, 459, 460], "scat": 170, "1st": 170, "elast": [170, 193, 196], "captureenergi": 170, "isotxsmetadata": 170, "ecapt": 170, "cacluat": 170, "closer": 170, "shown": [170, 249, 280, 402, 436, 468, 479, 488], "getnuclidefunc": [170, 173], "semi": 170, "t2": 170, "transx": 170, "hyper": 170, "isotsx": 170, "variant": [171, 172, 185, 201, 471], "transvers": 171, "nhts1": 171, "gt": [171, 473, 477, 478, 480], "OR": [171, 468, 479], "distanc": [171, 216, 285, 304, 311, 329, 332, 333, 334, 396, 475, 479, 492], "ngts2": 171, "nset": [171, 208, 425], "nalia": 171, "rod": [171, 252, 281, 285, 286, 311, 324, 468, 471, 479, 483, 486], "nbank": 171, "bank": 171, "channel": [171, 484, 488], "llchn": 171, "llrod": 171, "mmesh": 171, "nvari": 171, "maxbrn": 171, "maxord": 171, "labeldata": 171, "labelstream": 171, "moment": [172, 175, 186, 316, 472], "partial": [172, 186, 247, 279, 285, 290, 332, 342, 356, 397, 492], "nhfluxdata": 172, "nfluxstream": 172, "numdatasetstoread": 172, "reader": [172, 175, 178, 179, 308, 358, 388, 426, 438, 439, 471], "v11": [172, 436], "rebu": [172, 468, 479], "2014": [172, 427], "palmiotti": 172, "lewi": 172, "carrico": 172, "variat": [172, 257, 279, 285, 439], "anisotrop": 172, "multidimension": 172, "il": 172, "shemon": 172, "decad": [172, 468], "1127298": 172, "anlpub": 172, "78313": 172, "1d": [172, 235, 236, 264, 310, 311, 333, 339, 375, 471], "incomingpointerstoallassembli": 172, "geodstcoordmap": 172, "externalcurrentpoint": 172, "boundari": [172, 180, 247, 281, 290, 312, 324, 326, 327, 328, 331, 334, 342, 353, 426, 479, 486, 492], "outgoingpcsymsecpoint": 172, "outpgo": 172, "sector": 172, "ingoingpcsymsecpoint": 172, "ingo": 172, "fluxmomentsal": 172, "jth": 172, "planar": [172, 486, 492], "pariti": 172, "partialcurrentshexal": 172, "partialcurrentshex_extal": 172, "adjac": [172, 186, 479], "partialcurrentszal": 172, "upward": [172, 471], "downward": 172, "naflux": 172, "setter": [172, 324, 336, 339, 351, 364], "radial": [172, 247, 280, 281, 286, 307, 312, 313, 324, 325, 327, 335, 342, 473, 475, 478, 480, 483, 484, 486, 487, 488], "conflict": [172, 379, 468, 469, 475, 488, 500], "_readwrit": 172, "sassi": [172, 342, 484], "adjointflag": [172, 175], "variantflag": 172, "mc23": 173, "changho": 173, "jung": 173, "yeon": 173, "sang": 173, "yang": 173, "sik": 173, "2018": [173, 399], "1483949": 173, "xslib": [173, 439], "pwr": 174, "pwdint2": 174, "rtflux2": 175, "adjointflux": 175, "ng": [175, 249, 251, 252, 259, 308, 484], "fd": [175, 285], "rzflux2": 176, "itp": 176, "test_initwithfilemod": [177, 178], "test_writeandreadsimpleintegerrecord": [177, 178], "test_writeandreadsimplefloatrecord": [177, 178], "test_writeandreadsimplestringrecord": [177, 178], "test_notreadinganentirerecordraisesexcept": [177, 178], "test_readingbeyondrecordraisesexcept": [177, 178], "binarywritepath": [177, 179], "asciiwritepath": [177, 179], "test_librarydata": [177, 179], "test_regionprimaryx": [177, 179], "test_totalscattermatrix": [177, 179], "test_binaryrw": [177, 179], "test_asciirw": [177, 179], "test_mergecompxslibrari": [177, 179], "test_getcompxsfilenam": [177, 179], "test__rwfileid": [177, 180], "test__rwfile1drecord": [177, 180], "test__rw2drecord": [177, 180], "test__rw3drecord": [177, 180], "test__rw4drecord": [177, 180], "test__rw5drecord": [177, 180], "test_writebinari": [177, 180, 182, 184], "test_empty4and5record": [177, 180], "test_decayconst": [177, 181], "test_chi_delai": [177, 181], "test_chi_delaysumsto1": [177, 181], "test_nudelai": [177, 181], "test_endfvii1decayconst": [177, 181], "test_endfvii1neutronsperfiss": [177, 181], "test_compar": [177, 181, 182], "test_writebinary_mcc3": [177, 181], "test_nuclid": [177, 181, 293, 296], "test_avg": [177, 181], "test_adddummynuclidestolibrari": [177, 182], "test_readgeodst": [177, 183, 188], "test_writegeodst": [177, 183, 188], "test_isotxsgeneraldata": [177, 184], "test_isotxsdetaileddata": [177, 184], "test_getscatteringweight": [177, 184], "test_getnuclid": [177, 184, 344, 348], "test_n2nisreactionbas": [177, 184], "test_getscatterweight": [177, 184], "test_getisotxsfilenam": [177, 184], "test_getgamisofilenam": [177, 184], "test_mergemccv2filesremovesthefilewidechi": [177, 184], "test_readlabelsbinari": [177, 185], "test_writelabelsascii": [177, 185], "test_fc": [177, 186], "test_fluxmo": [177, 186], "test_xypartialcurr": [177, 186], "test_zpartialcurr": [177, 186], "test_writ": [177, 186, 369, 382], "test_pmatrxnuclidedataaa": [177, 187], "test_pmatrxnuclidedataab": [177, 187], "test_nuclidedataisdiffer": [177, 187], "test_getpmatrxfilenam": [177, 187], "test_pmatrxgammaenergi": [177, 187], "test_pmatrxneutronenergi": [177, 187], "test_pmatrxnuclidenam": [177, 187], "test_pmatrxdoesnthavedoseconversionfactor": [177, 187], "test_writtenisidenticaltoorigin": [177, 187], "test_readrtflux": [177, 189], "test_writertflux": [177, 189], "test_rwascii": [177, 189, 190], "test_adjoint": [177, 189], "test_readrzflux": [177, 190], "test_writerzflux": [177, 190], "vector": [179, 196, 198, 242, 252, 259, 308, 334, 342, 389, 470, 483, 484, 486, 494], "indptr": 179, "correspons": 179, "verifi": [179, 180, 181, 186, 203, 249, 257, 272, 279, 308, 318, 322, 346, 353, 369, 455, 462, 463, 473, 478], "optimum": 180, "overrelax": 180, "rebal": 180, "delayx": 181, "nu": [181, 484], "nndc": 181, "bnl": 181, "robert": 181, "keepin": 181, "comment": [181, 432, 434, 440, 479, 480, 488, 491, 492], "subtract": [186, 285, 302, 333, 346, 347, 485, 488], "xy": [186, 247, 402, 428, 483, 484, 492], "fn1": 190, "fn2": 190, "bytewis": 190, "assist": [191, 369, 468, 469, 470, 478, 500], "rewrit": 191, "scaffold": 191, "overal": [191, 201, 438, 439, 468, 473], "_metadata": 191, "nucld": 191, "test_generatetotalscatteringmatrix": [192, 193], "test_generatetotalscatteringmatrixwithmissingdata": [192, 193], "test_plotnucx": [192, 193], "test_createmacrosfrommicro": [192, 193], "test_collapsecrosssect": [192, 193], "getvolum": [192, 193, 280, 281, 285, 302, 305, 308, 452, 473, 475], "getnuclidenumberdens": [192, 193, 196, 280, 302, 305, 308], "paramcollectiontyp": [192, 193, 280, 281, 282, 285, 302, 303, 304, 305, 307, 308, 340, 342, 344, 348], "setnumberdens": [192, 193, 280, 302, 305, 308, 468, 473], "testfilenam": [192, 194], "test_canpickleandunpickleisotx": [192, 194], "test_canpickleandunpicklegamiso": [192, 194], "test_canpickleandunpicklepmatrx": [192, 194], "test_comparework": [192, 194], "test_comparedifferentcomponentsofanxslibrari": [192, 194], "test_mergefailswithnonisotxsfil": [192, 194], "test_isotxslibraryattribut": [192, 194], "test_gamisolibraryattribut": [192, 194], "test_pmatrxlibraryattribut": [192, 194], "test_mergexslibrarieswithdifferentdatawork": [192, 194], "test_canwriteisotxsfromcombinedxslibrari": [192, 194], "test_canwritegamisofromcombinedxslibrari": [192, 194], "test_canwritepmatrxfromcombinedxslibrari": [192, 194], "test_getisotxsfileswithoutlibrarysuffix": [192, 194], "test_getisotxsfileswithlibrarysuffix": [192, 194], "assert_contains_onli": [192, 194], "geterrortyp": [192, 194], "getreadfunc": [192, 194], "getwritefunc": [192, 194], "getlibaapath": [192, 194], "getlibabpath": [192, 194], "getlibaa_abpath": [192, 194], "getliblumpedpath": [192, 194], "test_canremoveisotop": [192, 194], "test_cannotmergexslibswithdifferentgammagroupstructur": [192, 194], "test_mergeallxslibfil": [192, 194], "test_nuclide_createfromlabelfailsonbadnam": [192, 195], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict": [192, 195], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclid": [192, 195], "test_nuclide_newlabelsdontcausewarn": [192, 195], "test_nuclide_oldlabelscausewarn": [192, 195], "test_nuclide_nuclidebasemethodsshouldnotfail": [192, 195], "test_nuclide_isoaadetail": [192, 195], "test_nuclide_2dxsarrangementiscorrect": [192, 195], "test_nuclide_scatterxsarrangementiscorrect": [192, 195], "test_getmicrox": [192, 195], "test_getx": [192, 195], "inelast": [193, 196, 460], "collaps": [193, 196, 240, 251], "barn": [193, 247, 251, 308, 459, 488], "blockparametercollect": [193, 285, 340], "shouldbether": 194, "shouldnotbether": 194, "nicer": 194, "testxslibrarymerg": 194, "microscopicxscollect": 196, "microlib": 196, "u235aa": [196, 197], "macrocollect": 196, "blockswithmacro": 196, "nuclidecollect": 196, "displai": [196, 308, 402, 426, 467], "crosssect": 196, "extrem": [196, 399, 439, 478], "efficaci": 196, "survei": 196, "bar": [196, 310, 394, 402, 404, 405, 412, 428, 438, 454], "sigma": [196, 247, 285, 335, 484, 486], "sum_g": 196, "sigma_g": [196, 247], "phi_g": [196, 285], "onegroupx": 196, "relativetoler": [196, 403], "overlap": [196, 232, 285, 308, 311, 324, 346, 464, 468, 490], "attributestoignor": 196, "buildscattermatrix": [196, 259], "buildonlycool": [196, 259], "minimumnuclidedens": [196, 259, 471, 492], "creation": [196, 236, 245, 264, 308, 324, 336, 340, 351, 352, 410, 412, 438, 468, 471], "microlibrari": 196, "blocklist": [196, 235, 247, 254, 280, 286, 288, 342, 462], "libtyp": [196, 259], "gammax": [196, 259], "isotxslib": 196, "4b": 196, "hmg4c": 196, "chi_g": 196, "sum_": [196, 247, 285, 308, 497], "chi_": 196, "n_n": 196, "nu_": 196, "sum_n": 196, "microsuffix": 196, "deposit": [196, 308, 484], "obtain": [196, 235, 251, 285, 308, 312, 340, 342, 385, 468, 479, 484, 497, 498], "bn": [196, 242, 247, 305, 308, 389, 473, 483, 484, 485], "getmicrosuffix": [196, 280, 285, 302, 305, 308], "energydepositionconst": 196, "e_": [196, 247], "generation_fiss": 196, "kappa_f": 196, "sigma_f": 196, "fissionenergyfactor": 196, "joul": [196, 308], "kappa_c": 196, "sigma_c": 196, "getnumberdens": [196, 239, 242, 280, 302, 305, 308, 446, 473], "captureenergyfactor": 196, "constantnam": 196, "multconst": 196, "multlib": 196, "macrogroupconst": 196, "attributenam": 197, "veloc": [197, 254, 475, 484], "nuclabel": 197, "xslibrarysuffix": [197, 254, 255], "xslibfilenam": 197, "doppler": [197, 200, 223, 235, 254, 342, 484, 486, 497], "isoaa": 197, "isoba": 197, "isoca": 197, "n1": 197, "isoab": 197, "n2": [197, 385], "isoda": 197, "mergegammalib": 197, "alternatedirectori": 197, "alphabet": [197, 235, 342, 355], "referencedummynuclid": 197, "_xslibrari": 197, "libisotx": 197, "dose": [197, 209, 247, 467, 468, 484, 486, 492], "scattermatrixkei": [197, 198], "elasticscatt": 197, "_buildscatterweight": 197, "purg": 197, "pu39aa": 198, "xscollectionkei": 198, "containerkei": 198, "homogregion": 198, "scatterweight": 198, "fromg": 198, "gx1": 198, "cannib": 198, "newli": [198, 233, 279, 358, 384, 387, 489], "scattermatrix": 198, "scattertypelabel": 198, "scattermatrix1": 198, "scattermatrix2": 198, "graphic": [198, 387, 467, 469, 475, 490, 491, 492, 500], "chosen": [199, 308, 433, 475, 480, 489, 491], "introduc": [199, 233, 336, 380, 435, 471, 480, 486], "test_inspector": [199, 205], "testinspector": [199, 205, 206], "test_operatorsnapshot": [199, 205], "testoperatorsnapshot": [199, 205, 207], "testoperatorsnapshotsset": [199, 205, 207], "test_oper": [199, 205], "interfacea": [199, 205, 208], "interfaceb": [199, 205, 208], "interfacec": [199, 205, 208], "operatortest": [199, 205, 208], "testcreateoper": [199, 205, 208], "cyclessettingstest": [199, 205, 208, 385, 405, 425], "testinterfaceandeventhead": [199, 205, 208], "maxburnstep": [199, 200], "steplength": [199, 200, 385, 499], "cyclelength": [199, 200, 336, 385, 425, 438, 478, 479, 480, 491, 492, 499], "powerfract": [199, 200, 385, 425, 491, 492], "availabilityfactor": [199, 200, 385, 425, 479, 480, 491, 492, 499], "cyclenam": [199, 200, 385], "ateol": [199, 200, 204], "initializeinterfac": [199, 200], "printinterfacesummari": [199, 200], "interactallinit": [199, 200], "interactallbol": [199, 200, 433], "interactallboc": [199, 200], "interactalleverynod": [199, 200], "interactalleoc": [199, 200], "interactalleol": [199, 200], "interactallerror": [199, 200], "removeallinterfac": [199, 200], "removeinterfac": [199, 200], "interfaceisact": [199, 200], "reattach": [199, 200], "snapshotrequest": [199, 200], "setstatetodefault": [199, 200, 204], "couplingisact": [199, 200, 208], "workerquit": [199, 201], "collapseallstderr": [199, 201], "iscorrect": [199, 203], "no_act": [199, 203, 475], "addqueri": [199, 203], "addquerybadlocationwilllikelyfail": [199, 203], "addquerycurrentsettingmaynotsupportfeatur": [199, 203], "plant": [200, 342, 467, 468, 478, 492, 499], "orchestr": 200, "piec": [200, 308, 433, 473, 476, 488], "flow": [200, 209, 212, 233, 254, 276, 285, 339, 433, 468, 475, 483, 484, 486, 488], "narr": [200, 441, 466, 481], "topic": [200, 426, 438, 490], "tier": 200, "intra": [200, 385], "durat": [200, 484, 492], "outag": [200, 212, 213, 216, 220, 404, 467, 489, 492, 499], "oserror": 200, "unabl": 200, "ncycl": [200, 208, 385, 425, 479, 480, 491, 492], "mainoper": [200, 433], "interactionnam": 200, "statepointindex": 200, "grep": [200, 478], "leverag": [200, 468], "banner": 200, "excludedinterfacenam": 200, "tn": [200, 235], "couplediter": [200, 486], "impli": [200, 281, 342, 356, 380, 396, 468, 479, 480, 492], "loos": [200, 487], "lie": [200, 329], "reverseateol": 200, "question": [200, 203, 233, 308, 329, 334, 365, 401, 402, 404, 426, 432, 468, 477, 488], "ephemer": [200, 247], "interfacenam": 200, "wasn": 200, "___": [200, 203, 469, 473, 478, 500], "opportun": [200, 342, 438], "weakref": 200, "network": [200, 211, 308, 467, 492], "updatemassfract": 200, "rerout": 200, "didn": 200, "evolv": [200, 468], "subchannel": [201, 285, 468, 479, 491], "pool": [201, 216, 221, 282, 327, 342, 433, 463, 470, 471, 473, 480, 483, 488, 492], "hundr": [201, 358, 468], "speed": [201, 251, 342, 471, 488], "manyfold": 201, "smart": [201, 318, 397, 426], "optim": [201, 217, 251, 254, 282, 285, 307, 316, 342, 468, 478, 489, 492], "_mainoper": 201, "rank": [201, 436, 489], "instruct": [201, 436, 440, 469, 500], "understand": [201, 332, 339, 431, 435, 436, 438, 440, 468], "devis": 201, "stderr": [201, 356, 496], "arrang": [201, 292, 327, 433, 467, 468, 488, 491], "suggest": [203, 336, 365, 430, 488], "rule": [203, 279, 326, 339, 340, 356, 365, 435, 439, 440, 488], "dialogu": 203, "imposs": [203, 398, 439], "propos": [203, 209], "affirm": 203, "interplai": 203, "correctionsmad": 203, "featur": [203, 278, 279, 286, 324, 336, 364, 394, 404, 409, 410, 430, 433, 435, 455, 464, 468, 470, 475, 477, 479, 480, 491, 492, 494], "initiallambda": 203, "revert": [203, 308, 323, 364, 488], "inspect": [203, 212, 226, 233, 276, 279, 478], "versionthi": 203, "versionrequir": 203, "rx": [204, 249, 364, 464], "behav": [204, 311, 332, 338, 340, 342, 398, 488], "chrolog": 204, "test_queri": [205, 206], "test_overwritesettingscorrectivequeri": [205, 206], "test_changeofc": [205, 206], "test_noncorrectivequeri": [205, 206], "test_callablecorrectioncheck": [205, 206], "test_assignc": [205, 206], "test_createqueryrevertbadpathtodefault": [205, 206], "test_correctcyclestozeroburnup": [205, 206], "test_checkforbothsimpleanddetailedcyclesinput": [205, 206], "test_ateol": [205, 207], "test_setstatetodefault": [205, 207, 208], "test_mainoper": [205, 207], "test_createinterfac": [205, 207], "test_createinterfacesdis": [205, 207], "test_getoperatorclassfromset": [205, 207], "test_operatordata": [205, 208], "test_orderedinterfac": [205, 208], "test_addinterfacesubclasscollis": [205, 208], "test_interfaceisact": [205, 208], "test_loadstateerror": [205, 208], "test_snapshotrequest": [205, 208], "test_createoper": [205, 208], "test_getsteplength": [205, 208, 405, 425], "test_couplingisact": [205, 208], "test_performtightcoupling_inact": [205, 208], "test_performtightcoupling_skip": [205, 208], "test_performtightcoupling_notconverg": [205, 208], "test_performtightcoupling_writedb": [205, 208], "test_performtightcoupling_nowritedb": [205, 208], "dbwriteforcoupl": [205, 208], "test_computetightcouplingconverg": [205, 208], "detailedcyclesset": [205, 208, 405, 425], "powerfractionssolut": [205, 208], "cyclenamessolut": [205, 208], "availabilityfactorssolut": [205, 208], "steplengthssolut": [205, 208], "cyclelengthssolut": [205, 208], "burnstepssolut": [205, 208], "maxburnstepssolut": [205, 208], "test_getpowerfract": [205, 208, 405, 425], "test_getcyclenam": [205, 208, 405, 425], "test_getavailabilityfactor": [205, 208, 405, 425], "test_getcyclelength": [205, 208, 405, 425], "test_getburnstep": [205, 208, 405, 425], "test_getmaxburnstep": [205, 208, 405, 425], "test_expandcycleandtimenodeargs_empti": [205, 208], "test_expandcycleandtimenodeargs_onearg": [205, 208], "test_expandcycleandtimenodeargs_twoarg": [205, 208], "interactal": 208, "loadtestreactor": [208, 280, 344, 352, 446, 447, 448, 455, 463], "fakedirlist": 208, "fakecopi": 208, "conf_tight_coupl": 208, "_performtightcoupl": 208, "conf_cycles_skip_tight_coupling_interact": 208, "address": [208, 223, 286, 336, 434], "accour": 208, "WILL": [208, 316], "writedb": 208, "greater": [208, 302], "prescrib": [208, 310, 428, 480, 497], "previterkeff": 208, "curriterkeff": 208, "nmetadata": [208, 425], "1000000000": [208, 425, 479, 480], "r4": [208, 425, 436], "cyclenodeinfo": 208, "vast": 209, "fairli": [209, 211, 480, 488], "ve": [209, 282, 468, 473, 475, 489], "reprocess": [209, 467], "accid": [209, 223, 468], "drop": [209, 308, 364, 385, 397, 438], "econom": [209, 433, 468, 499], "cost": [209, 439, 468, 499], "estim": [209, 217, 484, 485], "stretch": 209, "supersourceterm": 209, "magwoodsbrain": 209, "And": [209, 212, 281, 334, 356, 431, 432, 436, 440, 475, 479], "ticket": [209, 432, 439], "began": 209, "matur": [209, 476], "assemblyrotationalgorithm": [209, 212, 220, 492], "bureducingassemblyrot": [209, 212, 213], "simpleassemblyrot": [209, 212, 213, 492], "fuelhandlerfactori": [209, 212, 473], "fuelhandlerinterfac": [209, 212, 216, 221, 254, 279], "fuelhandl": [209, 212, 213, 214, 215, 220, 279, 342, 371, 404, 433, 455, 463, 471, 473, 479, 489, 492], "hexassemblyfuelmgmtutil": [209, 212], "getoptimalassemblyorient": [209, 212, 217], "buildringschedul": [209, 212, 217], "buildconvergentringschedul": [209, 212, 217], "buildeqringschedul": [209, 212, 217], "getfuelcycleset": [209, 212, 218], "getfuelcyclesettingvalid": [209, 212, 218], "fuelperformanceopt": [209, 223, 224], "fuelperformanceexecut": [209, 223, 224], "getfuelperformanceparameterdefinit": [209, 223, 225], "fuelperformanceplugin": [209, 223, 226, 230], "definevalid": [209, 223, 227, 273, 277, 475], "applyfueldisplac": [209, 223, 232], "gasconductivitycorrect": [209, 223, 232], "everynod": [209, 233, 254, 264, 433, 492], "firstcouplediter": [209, 233, 257, 264, 492], "fissionproductmodel": [209, 233, 285, 305, 308, 473], "isotopicdeplet": [209, 233, 240, 289], "latticephys": [209, 233, 236], "const": [209, 233, 273], "crosssectiongroupmanag": [209, 221, 233, 236, 240, 264, 473], "getxstypenumberfromlabel": [209, 233, 235], "getxstypelabelfromnumb": [209, 233, 235], "blockcollect": [209, 233, 235, 471], "medianblockcollect": [209, 233, 235], "averageblockcollect": [209, 233, 235], "getblocknuclidetemperatureavgterm": [209, 233, 235], "cylindricalcomponentsaverageblockcollect": [209, 233, 235, 471], "slabcomponentsaverageblockcollect": [209, 233, 235], "fluxweightedaverageblockcollect": [209, 233, 235], "blockcollectionfactori": [209, 233, 235], "crosssectionset": [209, 233], "xsgeometrytyp": [209, 233, 236], "xsset": [209, 233, 235, 236, 492], "xsmodelingopt": [209, 233, 236, 265], "serializexsset": [209, 233, 236], "xssettingdef": [209, 233, 236], "xssettingsvalid": [209, 233, 236], "diffisotx": [209, 233], "compareisotxslibrari": [209, 233, 237], "energygroup": [209, 233, 402, 459], "getfastfluxgroupcutoff": [209, 233, 238], "getgroupstructur": [209, 233, 238, 459], "getgroupstructuretyp": [209, 233, 238], "group_structur": [209, 233, 238], "macroxsgenerationinterfac": [209, 233, 268], "macroxsgener": [209, 233, 259], "getneutronicsparameterdefinit": [209, 233, 260], "insertneutronicsreport": [209, 233, 261], "insertneutronicsbolcont": [209, 233, 261], "neutronicsplot": [209, 233, 261, 438], "insertinitialcorefuelassem": [209, 233, 261], "generatelineplot": [209, 233, 261], "pd_plot": [209, 233, 261], "getneutronicssettingvalid": [209, 233, 262], "test_execut": [209, 223, 228, 271], "mockparam": [209, 271, 272], "mockcor": [209, 246, 248, 249, 271, 272], "testexecutionopt": [209, 271, 272], "testexecut": [209, 271, 272], "getparameterdefinit": [209, 273, 275], "thermalhydraulicsplugin": [209, 273, 276], "fromuserset": [209, 211, 223, 224, 246, 247], "fromreactor": [209, 211, 223, 224, 246, 247, 280, 343, 385, 386], "resolvederivedopt": [209, 211], "setrundirfromcasetitl": [209, 211], "dpa_ebrii_ht9": [210, 492], "2345": 210, "1920": 210, "1586": [210, 238], "1256": [210, 471], "824": 210, "006": [210, 473, 478], "520": [210, 475], "396": 210, "328": [210, 238], "749": 210, "452": 210, "0183": 210, "3281": 210, "1771": 210, "4552": 210, "3861": 210, "7099": 210, "2051": [210, 238], "58651": 210, "7408": 210, "452607": 210, "16265": 210, "124318": 210, "15621": 210, "189583": 210, "236694": 210, "297445": 210, "392136": 210, "50732": 210, "681782": 210, "07978": 210, "43258": 210, "35563": 210, "dpa_ebrii_inc600": [210, 492], "2572": 210, "2116": 210, "1640": 210, "1215": 210, "869": [210, 238], "816": 210, "359": [210, 238], "778": 210, "443": 210, "667": 210, "5721": 210, "026": 210, "051": [210, 473], "2252": 210, "3504": 210, "34915": 210, "67409": 210, "13557": 210, "595081": 210, "195832": 210, "193791": 210, "252465": 210, "311159": 210, "371897": 210, "495951": 210, "650177": 210, "839344": 210, "12626": 210, "785": 210, "02021": 210, "19616": 210, "dpa_ebrii_inc625": [210, 492], "2497": 210, "2058": 210, "1604": 210, "1202": 210, "868": 210, "639": 210, "416": 210, "975": 210, "350": [210, 238, 336], "379": 210, "5708": 210, "6142": 210, "8537": 210, "1218": [210, 471], "44318": 210, "16493": 210, "566731": 210, "220242": 210, "192435": 210, "331226": 210, "369475": 210, "524326": 210, "47812": 210, "622211": 210, "815999": 210, "07725": 210, "70732": 210, "8454": 210, "88285": 210, "dpa_ebrii_incx750": [210, 492], "2592": 210, "2133": 210, "1658": 210, "1237": [210, 471], "886": 210, "458": 210, "651": 210, "427": 210, "358": 210, "449": 210, "428": [210, 238], "9576": 210, "703": [210, 238], "5248": 210, "7532": 210, "43101": 210, "60558": 210, "06838": 210, "585632": 210, "190347": 210, "189737": 210, "25007": 210, "308765": 210, "369079": 210, "492257": 210, "645369": 210, "833181": 210, "11802": 210, "77196": 210, "98945": 210, "13947": 210, "dpa_ebrii_pe16": [210, 492], "2478": 210, "2035": [210, 238], "1619": 210, "1238": [210, 471], "858": 210, "439": [210, 238], "595": 210, "879": 210, "410": [210, 238], "632": 210, "919": 210, "511": 210, "1254": [210, 238], "4117": 210, "3353": 210, "4413": 210, "1127": 210, "13145": 210, "59314": 210, "12973": 210, "517916": 210, "15156": 210, "156357": 210, "237675": 210, "281173": 210, "365433": 210, "412907": 210, "540601": 210, "703084": 210, "937963": 210, "48726": 210, "34954": 210, "99536": 210, "dpa": [210, 247, 249, 281, 404, 438, 471, 483, 484, 486, 492], "executor": 211, "pathwai": [211, 464], "inputfil": 211, "stdin": 211, "outputfil": [211, 399], "extrainputfil": 211, "sourcenam": 211, "destnam": 211, "brought": [211, 216, 279, 285], "rundir": [211, 272], "transit": [211, 326, 435, 468, 472, 475], "extraoutputfil": 211, "executablepath": [211, 399], "workingdir": 211, "savephysicsfil": [211, 247, 471, 492], "dedic": [211, 286], "copyoutput": [211, 471], "applyresultstoreactor": 211, "deliber": [211, 247, 279, 336, 426], "paralleliz": 211, "maxim": [211, 290], "reusabl": [211, 290, 439], "dictat": [211, 342, 435], "transform": [211, 247, 312, 333, 334, 385, 397, 447, 464], "executeropt": [211, 249], "mine": 212, "dispos": 212, "ex": [212, 342, 378, 399, 433, 470, 490], "chemistri": 212, "handler": [212, 215, 216, 221, 279, 473, 479, 489], "hookspec": [212, 279, 435], "test_assemblyrotationalgorithm": [212, 219], "testfuelhandlermgmttool": [212, 219, 220], "test_fuelhandl": [212, 219], "fuelhandlertesthelp": [212, 219, 220, 221], "mocklatticephysicsinterfac": [212, 219, 221], "mockxsgm": [212, 219, 221], "testfuelhandl": [212, 219, 221], "testfuelplugin": [212, 219, 221], "addsomedetailassembli": [212, 219, 221], "test_hexassemblyfuelmgmtutil": [212, 219], "testhexassemmgmttool": [212, 219, 222], "managefuel": [212, 215, 221], "makeshufflereport": [212, 215, 216], "chooseswap": [212, 216, 369, 371, 479, 489], "prepcor": [212, 216], "prepsearch": [212, 216], "findassembli": [212, 216, 221, 473, 489], "swapassembli": [212, 216, 455, 473, 490], "dischargeswap": [212, 216, 479, 490], "swapcascad": [212, 216, 490], "repeatshufflepattern": [212, 216], "readmov": [212, 215, 216], "trackchain": [212, 216], "processmovelist": [212, 216], "dorepeatshuffl": [212, 216, 342], "prepshufflemap": [212, 216], "makeshufflearrow": [212, 216], "rotat": [213, 216, 217, 220, 247, 280, 281, 285, 304, 332, 345, 396, 398, 464, 483, 484, 486, 491, 492], "fh": [213, 221, 473], "highest": [213, 216, 217, 238, 247, 281, 342, 385, 455, 473, 484, 486, 489], "lowest": [213, 217, 238, 281, 342, 385, 455, 473, 489], "orient": [213, 217, 285, 310, 386, 439, 456, 467, 473, 483, 484, 486], "stationari": [213, 221, 325, 488], "obvious": [213, 279, 342], "isotrop": 213, "txt": [215, 216, 221, 342, 491], "movelist": [215, 216], "fuelhandlernam": [216, 479, 489, 492], "decis": [216, 240, 333, 438], "shufflefactor": 216, "aux": 216, "remain": [216, 235, 281, 285, 308, 312, 326, 334, 389, 430, 455, 468, 488, 491], "_prepsearch": 216, "deprecationwarn": 216, "targetr": [216, 342], "width": [216, 217, 221, 279, 329, 334, 385, 392, 394, 454, 464, 486], "compareto": [216, 473, 489], "forcesid": 216, "mandatoryloc": 216, "zonelist": 216, "excludedloc": 216, "minparam": 216, "minval": [216, 313, 398], "maxparam": 216, "maxval": [216, 308, 313], "findmani": [216, 221], "coord": [216, 280, 281, 285, 352, 473, 475], "exacttyp": [216, 342], "acceptfirstcandidat": 216, "blocklevelmax": [216, 473], "findfromsfp": 216, "maxnumassem": 216, "circularringflag": 216, "criterion": [216, 455], "bob": [216, 436], "ye": [216, 433, 439, 473], "fun": 216, "timetolimit": [216, 483, 484], "pick": [216, 342, 404, 431, 468, 473, 492], "assembi": [216, 292], "exactli": [216, 285, 308, 340, 342, 396, 403, 436, 470, 473, 488, 492], "ignit": [216, 280, 285, 325, 486, 489, 492], "earliest": 216, "maxbu": 216, "candid": [216, 235, 308, 365, 455], "maxburnup": 216, "spent": [216, 221, 282, 327, 342, 433, 463, 468, 470, 471, 473, 480, 483, 486, 488, 492], "toggl": [216, 336, 492], "gotten": 216, "valuabl": [216, 440, 486], "reconsid": [216, 224], "assemlist": 216, "feed": [216, 280, 285, 325, 342, 389, 468, 486, 488, 489, 492, 499], "r_armi_shuffle_stationari": 216, "fuelcyl": 216, "_transferstationaryblock": [216, 221], "discharg": [216, 217, 282, 342, 483, 489], "impl": [216, 285, 369, 440], "i_armi_shuffle_stationary1": 216, "goingout": 216, "inter1": 216, "inter2": 216, "goingin": 216, "art": 216, "explicitrepeatshuffl": [216, 492], "casenam": 216, "oldloc": [216, 342], "newloc": [216, 342], "enrichlist": [216, 342], "assemtyp": [216, 279, 281, 312, 342], "bottom": [216, 247, 281, 285, 318, 328, 329, 333, 334, 336, 339, 342, 345, 386, 473, 475, 479, 480, 483, 484, 486, 488, 492], "startingat": 216, "alreadydon": 216, "touch": [216, 296, 440], "mont": [216, 240, 468], "carlo": [216, 240, 468], "fromloc": 216, "toloc": 216, "assemnam": [216, 335, 342], "loadnam": 216, "charg": [216, 217, 471, 483], "movingassemnam": 216, "loadchain": 216, "loadqueu": [216, 281], "loopchain": 216, "loadchargetyp": 216, "round": [216, 286, 296, 298, 342], "movement": [216, 342], "maneuv": [216, 402], "arrow": [216, 402, 464, 492], "currentcoord": 216, "oldcoord": 216, "aprev": 217, "peak": [217, 247, 261, 281, 285, 324, 402, 438, 468, 471, 479, 484, 486, 492], "rot": [217, 285], "pi": [217, 281, 285, 304, 311, 428, 448, 455, 456, 458, 464, 479], "counterclockwis": [217, 285, 332, 342, 483, 484, 486], "rotateassembli": 217, "maxringincor": 217, "charger": 217, "jumpringfrom": 217, "jumpringto": 217, "coarsefactor": 217, "combo": [217, 291, 436], "jumpr": [217, 486, 489], "scheme": [217, 440, 491], "jump": [217, 439, 486, 489], "sublist": [217, 397], "subcas": 217, "baselist": [217, 254], "enter": [217, 302, 308, 479, 483, 488, 491, 492], "outermost": [217, 285], "hit": [217, 318, 468], "rj": 217, "rd": 217, "ringschedul": 217, "ringwidth": 217, "getnumr": [217, 280, 342], "innermost": [217, 285, 473], "conwidth": 217, "circularringord": [217, 492], "angl": [217, 281, 285, 303, 386, 428, 492], "distancesmart": [217, 492], "test_bureducingassemblyrot": [219, 220], "test_simpleassemblyrot": [219, 220], "test_findhighbu": [219, 221], "test_width": [219, 221], "test_findmani": [219, 221], "test_findinsfp": [219, 221], "test_findbycoord": [219, 221], "test_findwithminmax": [219, 221], "runshuffl": [219, 221], "test_repeatshuffl": [219, 221], "test_readmov": [219, 221], "test_processmovelist": [219, 221], "test_getfactorlist": [219, 221], "test_linpowbypin": [219, 221], "test_linpowbypinneutron": [219, 221], "test_linpowbypingamma": [219, 221], "test_transferstationaryblock": [219, 221], "test_transferdifferentnumberstationaryblock": [219, 221], "test_transferunalignedlocationstationaryblock": [219, 221], "test_transferincompatibleheightstationaryblock": [219, 221], "test_dischargeswap": [219, 221], "test_dischargeswapincompatiblestationaryblock": [219, 221], "test_settingsarediscov": [219, 221], "test_buildeqringschedulehelp": [219, 222], "test_buildeqringschedul": [219, 222], "test_buildconvergentringschedul": [219, 222], "test_buildringschedul": [219, 222], "latticephysicsinterfac": [221, 233, 236, 240, 253, 257, 491], "mock": [221, 249, 370, 379], "repeatshuffl": 221, "unalign": [221, 324], "unequ": 221, "hist": 221, "phenomena": [223, 498], "lwr": [223, 451, 465, 466, 467, 470, 471, 479, 480, 481, 488], "triso": [223, 289], "degrad": 223, "fcci": [223, 486], "eros": 223, "fcmi": 223, "stress": [223, 249, 467], "gase": 223, "feedback": [223, 342, 468, 471, 484, 497], "absorb": [223, 324, 479, 484, 486], "influenc": [223, 334], "bond": [223, 232, 280, 305, 319, 325, 348, 473, 479, 484, 488, 492], "squeez": 223, "impact": [223, 240, 281, 308], "testfuelperformanceopt": [223, 228, 229], "test_fuelperformanceplugin": [223, 228], "testfuelperformanceplugin": [223, 228, 230], "test_fuelperformanceutil": [223, 228], "testfuelperformanceutil": [223, 228, 231], "subpackag": [224, 303, 369, 429, 433, 464, 475], "prep": [224, 247], "hope": [224, 260, 326, 468, 476], "parameterdefinitioncollect": [225, 260, 275, 279, 280, 281, 285, 302, 303, 304, 305, 307, 308, 324, 336, 338, 339, 340, 342, 348, 351, 379, 392], "test_fuelperformanceopt": [228, 229], "test_applyfueldisplac": [228, 231], "test_gasconductivitycorrection_morph0": [228, 231], "test_gasconductivitycorrection_morph1": [228, 231], "test_gasconductivitycorrection_morph2": [228, 231], "test_gasconductivitycorrection_morph3": [228, 231], "test_gasconductivitycorrection_morph4": [228, 231], "displacementincm": 232, "radiu": [232, 285, 302, 307, 311, 335, 342, 346, 353, 456], "conserv": [232, 247, 281, 285, 305, 309, 310, 311, 312, 318, 322, 324, 346, 347, 448, 471, 475, 486, 488], "buffer": [232, 289], "prime": [232, 305, 324], "tempinc": [232, 452], "poros": [232, 476], "morphologi": 232, "pore": [232, 484], "irregular": [232, 331, 492], "conservat": 232, "bauer": 232, "spheric": [232, 307, 473], "660": [232, 238], "maxwel": 232, "eucken": 232, "source1": 232, "pile": 232, "holland": 232, "407": [232, 238, 454, 465], "source2": 232, "ondracek": 232, "schulz": 232, "1973": 232, "encompass": [233, 304], "temporarili": [233, 308, 404, 494], "untangl": 233, "dbload": [233, 279, 342, 384, 475], "intenum": 233, "frequenc": [233, 254, 257, 264, 468, 491, 492], "c0n0": 233, "n0": 233, "fissionproductmodelset": [233, 239], "getfissionproductmodelsettingvalid": [233, 239, 241], "lumpedfissionproductcollect": [233, 239, 242], "fissionproductdefinitionfil": [233, 239, 242], "lumpedfissionproductfactori": [233, 239, 242], "isga": [233, 239, 242], "globalfluxinterfaceusingexecut": [233, 246, 247, 249], "globalfluxopt": [233, 246, 247, 249, 324], "globalfluxexecut": [233, 246, 247, 249], "globalfluxresultmapp": [233, 246, 247], "doseresultsmapp": [233, 246, 247], "computedpar": [233, 246, 247], "calcreactionr": [233, 246, 247, 324], "crosssectiont": [233, 250, 252], "makereactionratet": [233, 250, 251], "isotopicdepletioninterfac": [233, 250, 251, 289], "isdeplet": [233, 250, 252, 289], "abstractisotopicdeplet": [233, 250, 252], "makexsect": [233, 250, 252], "abstractisotopicdepletionread": [233, 250, 252], "csrc": [233, 250, 252], "setblockneutronveloc": [233, 253, 254], "latticephysicswrit": [233, 253, 258], "test_crosssectionmanag": [233, 263], "testblockcollect": [233, 263, 264], "testblockcollectionmedian": [233, 263, 264], "testblockcollectionaverag": [233, 263, 264], "testcomponentaverag": [233, 263, 264], "testblockcollectioncomponentaverag": [233, 263, 264], "testblockcollectioncomponentaverage1dcylind": [233, 263, 264], "testblockcollectionfluxweightedaverag": [233, 263, 264], "testcrosssectiongroupmanag": [233, 263, 264], "testxsnumberconvert": [233, 263, 264], "makeblock": [233, 263, 264], "test_crosssectionset": [233, 263], "testcrosssectionset": [233, 263, 265], "testxsset": [233, 263, 265], "test_crosssectiont": [233, 263], "testcrosssectiont": [233, 263, 266], "test_energygroup": [233, 263], "testenergygroup": [233, 263, 267], "test_macroxsgenerationinterfac": [233, 263], "testmacroxsgenerationinterfac": [233, 263, 268], "test_neutronicsplugin": [233, 263], "testneutronicsplugin": [233, 263, 269], "neutronicsreactortest": [233, 263, 269], "createrepresentativeblock": [233, 235], "calcavgnuclidetemperatur": [233, 235], "getweight": [233, 235], "getcandidateblock": [233, 235], "clearrepresentativeblock": [233, 235], "xstypeispregener": [233, 235], "fluxsolutionispregener": [233, 235], "createrepresentativeblocksusingexistingblock": [233, 235], "getnextavailablexstyp": [233, 235], "makecrosssectiongroup": [233, 235], "disablebugroupupd": [233, 235], "enablebugroupupd": [233, 235], "getnuctemperatur": [233, 235], "updatenuclidetemperatur": [233, 235], "zero_dimension": [233, 236], "one_dimensional_slab": [233, 236], "one_dimensional_cylind": [233, 236], "two_dimensional_hex": [233, 236], "getstr": [233, 236], "setdefault": [233, 236, 265], "bugroup": [233, 235, 236, 285, 404, 438, 479, 480, 484, 491, 492], "xsispregener": [233, 236], "fluxispregener": [233, 236], "buildmacro": [233, 259], "circular": [234, 285, 302, 304, 342, 470, 471, 492], "sent": [235, 279, 436, 489], "csm": 235, "_setbugroupbound": 235, "_addxsgroupsfromblock": 235, "representativeblocklist": 235, "representativeblock": [235, 254, 255, 471], "blockthatrepresentsba": 235, "xsgm": [235, 264], "xstypelabel": 235, "xstypenumb": 235, "allnuclidesinproblem": [235, 240, 344, 348], "validblocktyp": [235, 236], "averagebycompon": [235, 236, 264], "best": [235, 247, 285, 309, 342, 398, 432, 435, 436, 437, 438, 440, 468, 476, 484, 486, 488, 489, 491], "n_i": [235, 259, 305, 308, 324], "v_i": 235, "t_i": 235, "reflector": [235, 280, 281, 312, 325, 433, 462, 473, 478, 480], "leakag": [235, 486], "median": [235, 484, 486, 491, 492], "accur": [235, 240, 254, 281, 308, 404, 427, 447, 470], "allnucnam": [235, 342], "denomin": 235, "cylindr": [235, 236, 311, 447, 471], "opinion": [235, 311], "geometr": [235, 285, 286, 305, 331, 467, 468, 470, 473, 479, 488, 493], "assumpt": [235, 254, 281, 285, 311, 316, 342, 471, 492, 498], "slab": [235, 285], "forese": 235, "xsgroup": [235, 455, 462, 463, 473, 496], "date": [235, 247, 279, 334, 342, 364, 430, 440, 470, 471, 473, 475, 489], "interactino": 235, "originalrepresentativeblock": 235, "unperturb": [235, 486], "blockcollectionbyxsgroup": 235, "modifiedreprblock": 235, "origxsidsfromnew": 235, "howmani": [235, 264], "excludedxstyp": 235, "unrepres": [235, 253, 255], "avgnuctemperatur": 235, "arug": 235, "carri": [236, 363, 384, 426, 468], "0d": [236, 491], "blockrepresent": [236, 265, 491], "past": [236, 312, 336, 355, 367, 426, 433, 439, 468, 475, 488], "block_collect": 236, "xsfileloc": [236, 265], "fluxfileloc": 236, "driverid": 236, "criticalbuckl": [236, 491], "nuclidereactiondriv": 236, "externaldriv": 236, "usehomogenizedblockcomposit": 236, "numinternalr": [236, 311], "numexternalr": [236, 311, 447], "mergeintoclad": [236, 311], "meshsubdivisionspercm": 236, "xsexecuteexclus": 236, "xsprioriti": 236, "xsmaxatomnumb": 236, "mindriverdens": 236, "subcrit": 236, "buckl": [236, 492], "spatial": [236, 281, 282, 285, 290, 308, 311, 327, 331, 334, 345, 402, 433, 468, 470, 471, 473, 479, 483, 484, 486, 488, 492], "gap": [236, 280, 285, 308, 325, 346, 447, 462, 473, 478, 479, 480, 484, 488], "subregion": 236, "prioriti": [236, 314, 315, 468], "dilut": [236, 492], "templat": 236, "char": [236, 398], "conf_xsid": 236, "mutual": [236, 290, 326, 355, 468], "tune": [236, 398], "xssettingsdict": 236, "coerc": [236, 363, 367], "egrpstruc": 238, "descend": 238, "propag": [238, 364], "neutronenergyboundsinev": 238, "15000000": 238, "14190675": 238, "13498587": 238, "61352667": 238, "12840253": 238, "727187442": 238, "12214027": 238, "163355658": 238, "11618342": 238, "029434891": 238, "11051708": 238, "80231181": 238, "10512710": 238, "603772538": 238, "9999999": 238, "657569105": 238, "9512293": 238, "919276796": 238, "9048373": 238, "870515307": 238, "8607079": 238, "469517574": 238, "8187307": 238, "250421112": 238, "7788007": 238, "564028598": 238, "7408181": 238, "953138132": 238, "7046880": 238, "655880161": 238, "6703200": 238, "230818099": 238, "6376281": 238, "297874154": 238, "6065306": 238, "389431497": 238, "5769497": 238, "906239427": 238, "5488116": 238, "173010204": 238, "5220457": 238, "5888455575": 238, "4965852": 238, "867867945": 238, "4723665": 238, "365657246": 238, "4493289": 238, "487308097": 238, "4274149": 238, "173127189": 238, "4065696": 238, "458183979": 238, "3867410": 238, "1021129377": 238, "3678794": 238, "2857411373": 238, "3499377": 238, "3712820574": 238, "3328710": 238, "722995453": 238, "3166367": 238, "5853643203": 238, "3011942": 238, "015983818": 238, "2865047": 238, "870493808": 238, "2725317": 238, "837016821": 238, "2592402": 238, "5176870413": 238, "2465969": 238, "5549736465": 238, "2345702": 238, "800613864": 238, "2231301": 238, "5250776387": 238, "2122479": 238, "6655871677": 238, "2018965": 238, "1108109495": 238, "1920499": 238, "0204437198": 238, "1826835": 238, "1779708646": 238, "1737739": 238, "374998885": 238, "1652988": 238, "8256124198": 238, "1572371": 238, "609293413": 238, "1495686": 238, "1410094348": 238, "1422740": 238, "6671460986": 238, "1353352": 238, "7860231453": 238, "1287348": 238, "9917952344": 238, "1224564": 238, "2405969552": 238, "1164841": 238, "5378471955": 238, "1108031": 238, "5456809145": 238, "1053992": 238, "209526693": 238, "1002588": 238, "4028963122": 238, "953691": 238, "589498149": 238, "907179": 238, "5018294954": 238, "862935": 238, "8354441153": 238, "820849": 238, "9581305487": 238, "780816": 238, "6332739571": 238, "742735": 238, "7567097712": 238, "706512": 238, "1064111381": 238, "672055": 238, "1043842541": 238, "639278": 238, "5901762013": 238, "608100": 238, "6054289357": 238, "578443": 238, "1889407024": 238, "550232": 238, "1817224221": 238, "523397": 238, "0415615919": 238, "497870": 238, "66663000936": 238, "473589": 238, "22769425064": 238, "450492": 238, "00850933965": 238, "428521": 238, "25399650994": 238, "407622": 238, "02582542447": 238, "387742": 238, "0650397337": 238, "368831": 238, "66138246434": 238, "350843": 238, "52899448376": 238, "333732": 238, "68817522237": 238, "317456": 238, "35290999303": 238, "301973": 238, "8238826682": 238, "287246": 238, "3867061905": 238, "273237": 238, "2151164391": 238, "259911": 238, "27888738815": 238, "247235": 238, "25623729482": 238, "235177": 238, "4505068885": 238, "223707": 238, "7109012127": 238, "212797": 238, "35709693265": 238, "202419": 238, "10752658817": 238, "192547": 238, "0111604646": 238, "183156": 238, "3826155013": 238, "174223": 238, "74042897587": 238, "165726": 238, "7483426165": 238, "157644": 238, "15945032178": 238, "149955": 238, "7630698284": 238, "142642": 238, "33420547828": 238, "135685": 238, "58547571563": 238, "129068": 238, "12138510743": 238, "122773": 238, "39482654404": 238, "116785": 238, "66570485242": 238, "111089": 238, "96157835954": 238, "105672": 238, "04021998937": 238, "100518": 238, "3540042768": 238, "95616": 238, "01603124726": 238, "90952": 238, "76790245438": 238, "86516": 238, "9490685987": 238, "82297": 238, "46767208072": 238, "78283": 238, "77281157946": 238, "74465": 238, "82815930338": 238, "70834": 238, "08686494321": 238, "67379": 238, "46768357352": 238, "64093": 238, "332267810096": 238, "60967": 238, "46356744204": 238, "57994": 238, "045282526145": 238, "55165": 238, "6423185657": 238, "52475": 238, "182194901485": 238, "49915": 238, "937359826254": 238, "47481": 238, "50836820122": 238, "45165": 238, "807879509885": 238, "42963": 238, "045436336004": 238, "40867": 238, "71298520392": 238, "38874": 238, "57110357589": 238, "36978": 238, "63589856658": 238, "35175": 238, "166544614935": 238, "33459": 238, "653428950834": 238, "31827": 238, "806875214246": 238, "30275": 238, "546417029916": 238, "28798": 238, "990594716022": 238, "27394": 238, "447249613197": 238, "26058": [238, 446], "404291764728": 238, "24787": 238, "520917862297": 238, "23578": 238, "619257497565": 238, "22428": 238, "67642683086": 238, "21334": 238, "816969807052": 238, "20294": 238, "30566801763": 238, "19304": 238, "540701229987": 238, "18363": 238, "047141481613": 238, "17467": 238, "470764471036": 238, "16615": 238, "57216277083": 238, "15805": 238, "221146142581": 238, "15034": 238, "391414951724": 238, "14301": 238, "155493363003": 238, "13603": 238, "679909646915": 238, "12940": 238, "220611545361": 238, "12309": 238, "118605232572": 238, "11708": 238, "795806966411": 238, "11137": 238, "751097057033": 238, "10594": 238, "556566285757": 238, "10077": 238, "853945388262": 238, "9586": 238, "351208673927": 238, "9118": 238, "819343288624": 238, "8674": 238, "089276042416": 238, "8251": 238, "048950117642": 238, "7848": 238, "640544347625": 238, "7465": 238, "857828112762": 238, "7101": 238, "743645239853": 238, "6755": 238, "387520613109": 238, "6425": 238, "923383512113": 238, "6112": 238, "527401983908": 238, "5814": 238, "415922833998": 238, "5530": 238, "843512085172": 238, "5261": 238, "101091004286": 238, "5004": 238, "514163036086": 238, "4760": 238, "441127210488": 238, "4528": 238, "271673805963": 238, "4307": 238, "425258257331": 238, "4097": 238, "34964949196": 238, "3897": 238, "5195490644396": 238, "3707": 238, "435277636849": 238, "3526": 238, "621525520145": 238, "3354": 238, "626164152358": 238, "3191": 238, "019115541685": 238, "3035": 238, "3912768474947": 238, "2887": 238, "35349741013": 238, "2746": 238, "535605671562": 238, "2612": 238, "5854835536798": 238, "2485": 238, "1681859796863": 238, "2363": 238, "9651033369405": 238, "2248": 238, "6731647869688": 238, "2139": 238, "0040804305077": 238, "2034": 238, "6836204325907": 238, "1935": 238, "4509293051226": 238, "1841": 238, "0578736322839": 238, "1751": 238, "2684216077457": 238, "1665": 238, "8580528322098": 238, "1584": 238, "613196895463": 238, "1507": 238, "330699339108": 238, "1433": 238, "8173136645985": 238, "1363": [238, 471], "8892181163358": 238, "1297": 238, "3715560315309": 238, "1234": 238, "097998607469": 238, "9103289928657": 238, "1116": 238, "6580466633275": 238, "1062": [238, 471], "1979910916484": 238, "1010": 238, "3939837719233": 238, "961": 238, "1164877023504": 238, "914": 238, "2422834752543": 238, "6541611643848": 238, "827": 238, "240627239049": 238, "786": 238, "8956257722102": 238, "748": 238, "5182732454288": 238, "712": 238, "0126062875174": 238, "677": 238, "2873417161287": 238, "644": 238, "2556482822515": 238, "612": 238, "8349295468605": 238, "582": 238, "9466173467957": 238, "554": 238, "5159753334304": 238, "527": 238, "4719120928712": 238, "501": 238, "7468033803931": 238, "477": 238, "2763230246042": 238, "453": 238, "99928207851116": 238, "431": 238, "8574758152795": 238, "79553818609935": 238, "390": 238, "7608033762244": 238, "7031741130026": 238, "353": 238, "57499639660017": 238, "33094034018": 238, "319": 238, "9278868215734": 238, "304": 238, "3248196630148": 238, "48272306933313": 238, "36448406814134": 238, "93479970807414": 238, "16008878302117": 238, "00840786162004": 238, "44937141203934": 238, "4540758223219": 238, "99502712629976": 238, "04607225435765": 238, "5823336371366": 238, "58014699865222": 238, "01700218327872": 238, "87148686863472": 238, "12323302362415": 238, "7528659777493": 238, "74195597434274": 238, "07297208657602": 238, "72923838101114": 238, "69489221908088": 238, "95484459222988": 238, "4947423915337": 238, "3009325174504": 238, "36042773996002": 238, "6608742237248": 238, "19052063706607": 238, "93818876751399": 238, "89324557045391": 238, "04557658097639": 238, "38556062244643": 238, "90404574855056": 238, "59232635866391": 238, "44212142931417": 238, "44555380730951": 238, "59513051275254": 238, "883724002687686": 238, "304554348531205": 238, "85117228271823": 238, "51744307217458": 238, "29753117828864": 238, "185885665025225": 238, "17722631869415": 238, "26653044466567": 238, "449020308017666": 238, "72015118670977": 238, "075600007411005": 238, "511254535564667": 238, "02320309265998": 238, "607724774998296": 238, "261280149495732": 238, "98050240325685": 238, "762188924788717": 238, "60329329580401": 238, "500917673588496": 238, "452305544884815": 238, "454834833173546": 238, "506011342116118": 238, "6034625187648": 238, "74493152094453": 238, "92827157397193": 238, "1514406026004": 238, "41249612476833": 238, "709590394382149": 238, "040965780988648": 238, "404950374783336": 238, "79995380596507": 238, "224463267983163": 238, "677039734733027": 238, "156314362241353": 238, "660985065843178": 238, "189813264291999": 238, "741620782661506": 238, "315286906294586": 238, "909745578432922": 238, "523982734519816": 238, "157033766510593": 238, "807981110850049": 238, "475951954085624": 238, "160116050379142": 238, "8596836454597625": 238, "573903501826936": 238, "302061020265351": 238, "043476452974678": 238, "797503203846006": 238, "563526211634768": 238, "340960411987264": 238, "129249274475027": 238, "9278634109788713": 238, "7362992519428433": 238, "554077787188039": 238, "3807433681376495": 238, "215862568458182": 238, "0590231002678645": 238, "909832783202191": 238, "767918563758731": 238, "6329255824690607": 238, "5045162865652517": 238, "3823695859221297": 238, "266180050164712": 238, "155657144933178": 238, "0505245053956394": 238, "9505192451921052": 238, "8553912990816532": 238, "7649027976490732": 238, "678827472507428": 238, "5969500905092289": 238, "519065915551457": 238, "4449801966286626": 238, "3745076808540113": 238, "3074721502305722": 238, "2437059810145383": 238, "1830497245685552": 238, "125351708657075": 238, "0704676581867647": 238, "0182603344436232": 238, "9685991919247122": 238, "9213600519064007": 238, "8764247919328735": 238, "8336810504484653": 238, "7930219458352443": 238, "7543458091532959": 238, "7175559299154151": 238, "682560314260515": 238, "6492714549210562": 238, "6176061124092975": 238, "5874851068752194": 238, "5588331201156554": 238, "5315785072395534": 238, "505653117518429": 238, "4809921239740471": 238, "4575338612772089": 238, "43521967155230895": 238, "41745812047947667": 238, "4gglasstonesesonsk": 238, "50000": 238, "anl1041": [238, 492], "13956123": 238, "772960082": 238, "13725449": 238, "33670749": 238, "13275475": 238, "584813552": 238, "13056051": 238, "273569971": 238, "72718744": 238, "12628023": 238, "000515474": 238, "12419300": 238, "139209777": 238, "163355656": 238, "12012147": 238, "051362114": 238, "11813603": 238, "724122154": 238, "02943489": 238, "11426307": 238, "726685133": 238, "11237447": 238, "471776208": 238, "802311808": 238, "10869040": 238, "123022761": 238, "10689390": 238, "691434687": 238, "603772536": 238, "10338950": 238, "78109811": 238, "10168062": 238, "955676707": 238, "657569103": 238, "9834714": 238, "201445162": 238, "9672160": 238, "673615381": 238, "919276794": 238, "9355069": 238, "529969681": 238, "9200443": 238, "831241598": 238, "8898817": 238, "405157225": 238, "8751732": 238, "89074309": 238, "8464816": 238, "959044645": 238, "8324905": 238, "84104552": 238, "250421113": 238, "8051982": 238, "964455922": 238, "7918895": 238, "392200363": 238, "7659283": 238, "12136896": 238, "7532686": 238, "306604107": 238, "7285735": 238, "475627828": 238, "7165312": 238, "860375434": 238, "6930405": 238, "963545895": 238, "6815856": 238, "428542489": 238, "6592406": 238, "076260078": 238, "6483443": 238, "188001963": 238, "6270890": 238, "637995884": 238, "6167241": 238, "932506182": 238, "5965055": 238, "692687741": 238, "5866461": 238, "994214527": 238, "5674136": 238, "493670067": 238, "5580351": 238, "266611996": 238, "5397405": 238, "591412277": 238, "5308194": 238, "323851159": 238, "588845557": 238, "5134171": 238, "014516035": 238, "5049310": 238, "631814894": 238, "867867944": 238, "4883774": 238, "539426335": 238, "4803052": 238, "846426618": 238, "365657245": 238, "4645590": 238, "044529753": 238, "4568805": 238, "194952909": 238, "487308096": 238, "4419021": 238, "9445242835": 238, "4345981": 238, "936250928": 238, "173127188": 238, "4203503": 238, "70114586": 238, "4134025": 238, "896110469": 238, "458183978": 238, "3998496": 238, "406527598": 238, "3932407": 238, "07402821": 238, "1021129363": 238, "3803487": 238, "4356494197": 238, "3740621": 238, "3179303906": 238, "285741136": 238, "3617989": 238, "164508494": 238, "3558189": 238, "063530028": 238, "371282056": 238, "3441537": 238, "7508052336": 238, "3384654": 238, "1351664024": 238, "722995451": 238, "3273691": 238, "974095944": 238, "3219582": 238, "605128299": 238, "585364319": 238, "3114032": 238, "1325118914": 238, "3062561": 238, "708608702": 238, "0159838167": 238, "2962158": 238, "993286018": 238, "2913198": 238, "811577779": 238, "8704938064": 238, "2817692": 238, "794463073": 238, "2771120": 238, "4289932945": 238, "8370168195": 238, "2680272": 238, "2952969177": 238, "2635971": 238, "2908934634": 238, "5176870404": 238, "2549553": 238, "872960495": 238, "2507413": 238, "4540369934": 238, "5549736456": 238, "2425210": 238, "6633097786": 238, "2385125": 238, "4568689573": 238, "800613863": 238, "2306931": 238, "7435531556": 238, "2268801": 238, "5156994606": 238, "5250776378": 238, "2194421": 238, "3547824966": 238, "2158150": 238, "7600851455": 238, "665587167": 238, "2087398": 238, "1624218314": 238, "2052896": 238, "5055015713": 238, "1108109485": 238, "1985594": 238, "5527443667": 238, "1952775": 238, "5614877867": 238, "0204437189": 238, "1888755": 238, "9636987764": 238, "1857537": 238, "5735330859": 238, "1779708636": 238, "1796640": 238, "2483714786": 238, "1766944": 238, "39706033": 238, "374998884": 238, "1709017": 238, "0694932214": 238, "1680769": 238, "5019404588": 238, "825612419": 238, "1625667": 238, "3234759339": 238, "1598797": 238, "4060491745": 238, "6092934127": 238, "1546382": 238, "592539629": 238, "1520823": 238, "1364493908": 238, "1410094346": 238, "1470964": 238, "6235593935": 238, "1446651": 238, "716852125": 238, "6671460983": 238, "1399224": 238, "8323293114": 238, "1376097": 238, "6800742168": 238, "786023145": 238, "1330983": 238, "832003719": 238, "1308984": 238, "6042737649": 238, "9917952341": 238, "1266070": 238, "9845366525": 238, "1245144": 238, "671803628": 238, "240596955": 238, "1204323": 238, "9739978523": 238, "1184418": 238, "2495798958": 238, "1145588": 238, "40069839": 238, "1126653": 238, "4899160273": 238, "5456809143": 238, "1089717": 238, "3951110227": 238, "1071705": 238, "9508245436": 238, "2095266927": 238, "1036571": 238, "2506198754": 238, "1019438": 238, "2348368211": 238, "402896312": 238, "986017": 238, "0741811295": 238, "969719": 238, "6454378531": 238, "5894981488": 238, "937928": 238, "4540211936": 238, "922425": 238, "8602568853": 238, "5018294952": 238, "892185": 238, "1435414243": 238, "877438": 238, "620196733": 238, "8354441151": 238, "848672": 238, "7606389959": 238, "834645": 238, "4337244389": 238, "9581305484": 238, "807282": 238, "5016920642": 238, "793939": 238, "2955838467": 238, "6332739566": 238, "767910": 238, "8694940389": 238, "755218": 238, "4192267248": 238, "7567097708": 238, "730459": 238, "4144566575": 238, "718385": 238, "9822933763": 238, "1064111376": 238, "694834": 238, "4884347349": 238, "683349": 238, "8845063086": 238, "1043842537": 238, "660947": 238, "0105570209": 238, "650022": 238, "5173715653": 238, "590176201": 238, "628712": 238, "2444776223": 238, "618320": 238, "5451118595": 238, "6054289355": 238, "598049": 238, "586491001": 238, "588164": 238, "6962837218": 238, "188940702": 238, "568882": 238, "3639807248": 238, "559479": 238, "565557602": 238, "1817224218": 238, "541137": 238, "6436979906": 238, "532193": 238, "4251652672": 238, "0415615915": 238, "514746": 238, "04939051194": 238, "506238": 238, "0455430209": 238, "66663000896": 238, "489641": 238, "58832575276": 238, "481548": 238, "524722254": 238, "2276942503": 238, "465761": 238, "4862747214": 238, "458063": 238, "1260407176": 238, "00850933936": 238, "443046": 238, "03054370044": 238, "435723": 238, "12376870983": 238, "25399650965": 238, "421438": 238, "42066140997": 238, "414472": 238, "65626416326": 238, "0258254242": 238, "400884": 238, "6263482428": 238, "394258": 238, "58628944226": 238, "0650397334": 238, "381333": 238, "2524124228": 238, "375030": 238, "3681405713": 238, "66138246405": 238, "362735": 238, "41023525444": 238, "356739": 238, "9212566465": 238, "52899448347": 238, "345044": 238, "5955241115": 238, "339341": 238, "5099933899": 238, "6881752221": 238, "328216": 238, "5720274822": 238, "322791": 238, "62926021556": 238, "35290999274": 238, "312209": 238, "26092129905": 238, "307048": 238, "8957348427": 238, "823882668": 238, "296982": 238, "63558996056": 238, "292073": 238, "94438343414": 238, "38670619024": 238, "282498": 238, "62153894344": 238, "277829": 238, "3300275076": 238, "21511643886": 238, "268721": 238, "0011887342": 238, "264279": 238, "433711485": 238, "27888738795": 238, "255615": 238, "3233120153": 238, "251390": 238, "37363675048": 238, "2562372946": 238, "243148": 238, "81688765227": 238, "239129": 238, "92043950563": 238, "45050688833": 238, "231290": 238, "30915607096": 238, "227467": 238, "41660057247": 238, "71090121253": 238, "220010": 238, "14767112158": 238, "216373": 238, "6997856267": 238, "35709693248": 238, "209280": 238, "12615351807": 238, "205821": 238, "02992417192": 238, "107526588": 238, "199073": 238, "4139604478": 238, "195783": 238, "0198449143": 238, "01116046443": 238, "189364": 238, "48899498917": 238, "186234": 238, "56929408968": 238, "38261550115": 238, "180129": 238, "07388757533": 238, "177151": 238, "80217175526": 238, "74042897573": 238, "171344": 238, "07528992486": 238, "168512": 238, "00682910308": 238, "74834261634": 238, "162987": 238, "52612964224": 238, "160293": 238, "57927750814": 238, "15945032163": 238, "155038": 238, "5306810947": 238, "152475": 238, "96916730367": 238, "76306982827": 238, "147477": 238, "21231521404": 238, "145039": 238, "6284012029": 238, "3342054782": 238, "140284": 238, "66379757068": 238, "137965": 238, "96225387367": 238, "58547571555": 238, "133442": 238, "9000104393": 238, "131237": 238, "28287543947": 238, "12138510733": 238, "126934": 238, "8129806365": 238, "124836": 238, "7650626417": 238, "39482654394": 238, "120744": 238, "12910067663": 238, "118748": 238, "40418706751": 238, "66570485233": 238, "114855": 238, "36843627653": 238, "112956": 238, "9761752424": 238, "96157835945": 238, "109253": 238, "8060184568": 238, "107447": 238, "9994405167": 238, "0402199893": 238, "103925": 238, "43502344932": 238, "102207": 238, "69867155574": 238, "35400427673": 238, "98856": 238, "93174834205": 238, "97222": 238, "97038688637": 238, "0160312472": 238, "94035": 238, "62229488177": 238, "92481": 238, "35016936788": 238, "76790245432": 238, "89449": 238, "4508781269": 238, "87970": 238, "98149865682": 238, "94906859864": 238, "85086": 238, "94968070554": 238, "83680": 238, "5861037303": 238, "46767208067": 238, "80937": 238, "21017729875": 238, "79599": 238, "43576133382": 238, "77281157943": 238, "76989": 238, "85585764523": 238, "75717": 238, "32546983514": 238, "82815930335": 238, "73235": 238, "0162798608": 238, "72024": 238, "54793140454": 238, "0868649432": 238, "69663": 238, "30238919242": 238, "68511": 238, "86927871403": 238, "4676835735": 238, "66265": 238, "78304049073": 238, "65170": 238, "5059854593": 238, "33226781008": 238, "63033": 238, "962665695166": 238, "61992": 238, "102902968785": 238, "46356744203": 238, "59959": 238, "76003048871": 238, "58968": 238, "71236798004": 238, "04528252613": 238, "57035": 238, "48802700269": 238, "56092": 238, "774329341795": 238, "64231856568": 238, "54253": 238, "834452043135": 238, "53357": 238, "09744394822": 238, "18219490147": 238, "51607": 238, "84372277401": 238, "50754": 238, "84109463539": 238, "93735982625": 238, "49090": 238, "89948413711": 238, "48279": 238, "49828507521": 238, "50836820121": 238, "46696": 238, "70806451814": 238, "45924": 238, "87936889531": 238, "80787950988": 238, "44419": 238, "28273828945": 238, "43685": 238, "096572339": 238, "045436336": 238, "42252": 238, "92875587757": 238, "41554": 238, "54927176414": 238, "712985203914": 238, "40192": 238, "22910392309": 238, "39527": 238, "90998916677": 238, "57110357588": 238, "38232": 238, "030959925614": 238, "37600": 238, "11107071114": 238, "36367": 238, "43280750353": 238, "35766": 238, "332014955486": 238, "34593": 238, "77218004997": 238, "34021": 238, "98741908757": 238, "32906": 238, "61400213774": 238, "32362": 238, "7155130292": 238, "806875214243": 238, "31301": 238, "739499520623": 238, "30784": 238, "367252739095": 238, "54641702991": 238, "29775": 238, "135650000266": 238, "29282": 238, "995945441635": 238, "990594716015": 238, "28322": 238, "985148780448": 238, "27854": 238, "84738083919": 238, "447249613193": 238, "26941": 238, "656863216696": 238, "26496": 238, "350443630883": 238, "404291764724": 238, "25627": 238, "69675309333": 238, "25204": 238, "108183864242": 238, "520917862294": 238, "24377": 238, "819233723785": 238, "23974": 238, "88932279092": 238, "61925749756": 238, "23188": 238, "898960277515": 238, "22805": 238, "62017298672": 238, "676426830858": 238, "22057": 238, "963012789984": 238, "21693": 238, "37695253203": 238, "816969807045": 238, "20982": 238, "18346231425": 238, "20635": 238, "378474034096": 238, "305668017623": 238, "19958": 238, "870299625585": 238, "19628": 238, "979190209877": 238, "540701229984": 238, "18985": 238, "46470879724": 238, "18671": 238, "662578639833": 238, "04714148161": 238, "18059": 238, "532668827815": 238, "17761": 238, "034849151085": 238, "47076447103": 238, "17178": 238, "758867320925": 238, "16894": 238, "81895809511": 238, "572162770823": 238, "16340": 238, "940910998219": 238, "16070": 238, "848914552565": 238, "221146142576": 238, "15543": 238, "983818569011": 238, "15287": 238, "064364227763": 238, "391414951719": 238, "14785": 238, "894782185811": 238, "14541": 238, "505437489748": 238, "155493362998": 238, "14064": 238, "778184386718": 238, "13832": 238, "307848677376": 238, "67990964691": 238, "13378": 238, "830858064375": 238, "13157": 238, "698234414089": 238, "220611545354": 238, "12726": 238, "337577608969": 238, "12515": 238, "989719275774": 238, "118605232565": 238, "12105": 238, "66676995079": 238, "11905": 238, "57769772355": 238, "795806966404": 238, "11515": 238, "266434777708": 238, "11324": 238, "935821754107": 238, "751097057026": 238, "10953": 238, "660263725988": 238, "10772": 238, "612184234678": 238, "55656628575": 238, "10419": 238, "44394884041": 238, "10247": 238, "225688378932": 238, "853945388253": 238, "9911": 238, "28167107291": 238, "9747": 238, "462594285626": 238, "35120867392": 238, "9427": 238, "90276003916": 238, "9272": 238, "073233904553": 238, "819343288618": 238, "8968": 238, "098516680744": 238, "8819": 238, "868886215503": 238, "08927604241": 238, "8530": 238, "71919088793": 238, "8389": 238, "718804806525": 238, "048950117636": 238, "8114": 238, "671106525522": 238, "7980": 238, "547390418928": 238, "640544347619": 238, "7718": 238, "913926672843": 238, "7591": 238, "331501388871": 238, "857828112756": 238, "7342": 238, "458052239555": 238, "7221": 238, "097895260277": 238, "743645239847": 238, "6984": 238, "362147452465": 238, "6868": 238, "920795171751": 238, "387520613102": 238, "6643": 238, "73078602578": 238, "6533": 238, "919574932211": 238, "923383512106": 238, "6319": 238, "712212128978": 238, "6215": 238, "2565569967155": 238, "527401983901": 238, "6011": 238, "4962105535815": 238, "5912": 238, "134917836275": 238, "41592283399": 238, "5718": 238, "312080753106": 238, "5623": 238, "796695463976": 238, "843512085165": 238, "5439": 238, "426709690258": 238, "5349": 238, "520894135215": 238, "101091004279": 238, "5174": 238, "142738672476": 238, "5088": 238, "621681482786": 238, "5141630360795": 238, "4921": 238, "796819591968": 238, "4840": 238, "446673578726": 238, "441127210483": 238, "4681": 238, "757956209913": 238, "4604": 238, "375303634687": 238, "271673805957": 238, "4453": 238, "425926337194": 238, "4379": 238, "817270261724": 238, "425258257325": 238, "4236": 238, "229780966288": 238, "4166": 238, "211061409347": 238, "349649491955": 238, "4029": 238, "6264166013475": 238, "3963": 238, "022550292922": 238, "519549064434": 238, "3833": 238, "0992172165743": 238, "3769": 238, "7436597984884": 238, "435277636844": 238, "3646": 238, "156762447059": 238, "3585": 238, "891092025331": 238, "62152552014": 238, "3468": 238, "331598781903": 238, "3411": 238, "0051197894927": 238, "626164152353": 238, "3299": 238, "1790706869506": 238, "3244": 238, "6484370663484": 238, "0191155416805": 238, "3138": 238, "2762087343485": 238, "3086": 238, "4050654977636": 238, "39127684749": 238, "2985": 238, "220671958657": 238, "2935": 238, "8793142295262": 238, "3534974101253": 238, "2839": 238, "6297417948676": 238, "2792": 238, "6947904781027": 238, "5356056715573": 238, "2701": 238, "139365082643": 238, "2656": 238, "493458352628": 238, "585483553675": 238, "2569": 238, "4032437437863": 238, "2526": 238, "9347435786813": 238, "1681859796818": 238, "2444": 238, "0919688566696": 238, "2403": 238, "6946818852084": 238, "9651033369364": 238, "2324": 238, "892196962347": 238, "2286": 238, "465108925094": 238, "673164786965": 238, "2211": 238, "505866542694": 238, "2174": 238, "9528897037794": 238, "004080430504": 238, "2103": 238, "64945271136": 238, "2068": 238, "8791855890913": 238, "6836204325875": 238, "053258253869": 238, "1967": 238, "978757069417": 238, "4509293051194": 238, "1903": 238, "4607392441064": 238, "1871": 238, "999300516772": 238, "057873632281": 238, "1810": 238, "627863550875": 238, "1780": 238, "7008172963083": 238, "2684216077428": 238, "1722": 238, "322500630456": 238, "1693": 238, "8550136447184": 238, "858052832207": 238, "1638": 238, "3238410793394": 238, "1611": 238, "2447298169145": 238, "6131968954603": 238, "1558": 238, "4218444956994": 238, "1532": 238, "6633970735522": 238, "3306993391054": 238, "1482": 238, "4167142689855": 238, "1457": 238, "9145211515845": 238, "8173136645962": 238, "1410": 238, "1183979843265": 238, "1386": 238, "811190926256": 238, "8892181163337": 238, "1341": [238, 471], "3461121925": 238, "1319": 238, "1756110359324": 238, "371556031529": 238, "1275": [238, 471], "927890357142": 238, "8386573010878": 238, "0979986074672": 238, "1213": [238, 471], "7001528488343": 238, "1193": 238, "6394538257623": 238, "910328992864": 238, "1154": 238, "5072979108252": 238, "4249707240265": 238, "6580466633259": 238, "1098": [238, 471], "2013125735887": 238, "1080": 238, "0496414655559": 238, "1979910916468": 238, "1044": 238, "6414025453034": 238, "1027": 238, "3749988834832": 238, "3939837719219": 238, "993": 238, "6936401527878": 238, "977": 238, "2693289343574": 238, "116487702349": 238, "945": 238, "230629452556": 238, "929": 238, "6073413444278": 238, "2422834752531": 238, "899": 238, "1311876746025": 238, "884": 238, "269856318699": 238, "6541611643837": 238, "855": [238, 471], "2800422023557": 238, "841": 238, "1435065293651": 238, "240627239048": 238, "813": 238, "5675423310933": 238, "1204536384406": 238, "8956257722093": 238, "8893850840661": 238, "761": 238, "0981186457441": 238, "5182732454278": 238, "736": 238, "1463544007277": 238, "723": 238, "9789253879673": 238, "0126062875165": 238, "2440730449028": 238, "688": 238, "6700565474415": 238, "2873417161278": 238, "666": 238, "0927666125389": 238, "083221560497": 238, "2556482822507": 238, "633": 238, "6070390489338": 238, "623": 238, "1344358450652": 238, "8349295468597": 238, "602": 238, "7056591141187": 238, "592": 238, "7438107954786": 238, "946617346795": 238, "3113572624467": 238, "563": 238, "8353540193432": 238, "5159753334299": 238, "545": 238, "3506324284805": 238, "536": 238, "3367793169763": 238, "4719120928706": 238, "518": [238, 468], "7535682360439": 238, "510": [238, 475, 492], "1793259282537": 238, "7468033803925": 238, "493": 238, "4536581708639": 238, "485": 238, "297586594895": 238, "2763230246037": 238, "469": 238, "38763927964294": 238, "6293440082474": 238, "99928207851065": 238, "446": 238, "49533397972345": 238, "1154152336073": 238, "857475815279": 238, "424": 238, "71949958378644": 238, "417": 238, "6995037220563": 238, "79553818609884": 238, "404": 238, "0056851633164": 238, "397": 238, "32805853976544": 238, "76080337622386": 238, "384": 238, "3020953929181": 238, "377": 238, "9501404627671": 238, "7031741130021": 238, "365": [238, 491, 492], "55946103502396": 238, "5172946023619": 238, "5749963965996": 238, "347": 238, "730915741137": 238, "341": 238, "98342924265836": 238, "3309403401795": 238, "330": 238, "77187886154803": 238, "325": 238, "30470058727457": 238, "9278868215729": 238, "314": 238, "6399439704902": 238, "309": 238, "4394031270103": 238, "32481966301435": 238, "299": 238, "29477282798626": 238, "3478653543504": 238, "4827230693327": 238, "6979945132373": 238, "99235056403234": 238, "3644840681409": 238, "81310947733414": 238, "33696249162665": 238, "9347997080737": 238, "60539827537343": 238, "3475555541783": 238, "16008878302074": 238, "04183474976068": 238, "9916494684637": 238, "00840786161962": 238, "09100344761393": 238, "23834803336453": 238, "44937141203894": 238, "72302106576774": 238, "05826187327173": 238, "45407582232153": 238, "90946172694996": 238, "42343494933826": 238, "9950271262994": 238, "62328590028196": 238, "3072746548203": 238, "0460722543573": 238, "8387727883674": 238, "68448531970904": 238, "5823336371363": 238, "53145601190127": 238, "53100495837955": 238, "58014699865194": 238, "67806243097752": 238, "8239451020935": 238, "01700218327844": 238, "2564539501171": 238, "54153356590524": 238, "87148686863443": 238, "24557216149793": 238, "6630600068588": 238, "1232330236239": 238, "62538568796646": 238, "168824137343": 238, "75286597774905": 238, "376840094161": 238, "04008646411086": 238, "74195597434252": 238, "48181024049825": 238, "2590214297857": 238, "0729720865758": 238, "92305496088336": 238, "80867283968264": 238, "72923838101093": 238, "6841739508143": 238, "67291146248994": 238, "69489221908069": 238, "74956675807786": 238, "8363946987892": 238, "95484459222969": 238, "10439377349338": 238, "28452821656539": 238, "49474239153352": 238, "73453912416011": 238, "00342945777481": 238, "30093251745022": 238, "62657537642234": 238, "97989292471904": 238, "36042773995985": 238, "76772996029123": 238, "20135715942207": 238, "66087422372465": 238, "1458532313669": 238, "65587333344256": 238, "19052063706592": 238, "74938809039895": 238, "33207536957875": 238, "93818876751384": 238, "56734108451857": 238, "21915152075523": 238, "89324557045377": 238, "58925491788006": 238, "30681733502358": 238, "04557658097625": 238, "80518230297425": 238, "5852899390756": 238, "3855606224463": 238, "20566108722848": 238, "04526357596436": 238, "90404574855043": 238, "78169059269652": 238, "67788633586468": 238, "59232635866378": 238, "524709109675456": 238, "47473802168787": 238, "44212142931405": 238, "426572487971846": 238, "42780909420303": 238, "445553807309395": 238, "47953377228414": 238, "52948064401705": 238, "595130512752434": 238, "6762238307792": 238, "772505340332586": 238, "88372400268758": 238, "009632928424324": 238, "14998930884614": 238, "304554348531106": 238, "473093198998455": 238, "65537489347139": 238, "85117228271813": 238, "06026197195349": 238, "28242425878327": 238, "51744307217448": 238, "765105912434144": 238, "02520379218029": 238, "29753117828854": 238, "58188593479824": 238, "87806926676231": 238, "185885665025125": 238, "50514285191318": 238, "835651727823354": 238, "17722631869406": 238, "529683724344586": 238, "892844067668285": 238, "266530444665584": 238, "65056887530283": 238, "0447882551834": 238, "44902030801758": 238, "86309953887809": 238, "286863188228196": 238, "720151186709685": 238, "16280611067811": 238, "61467313847302": 238, "07560000741092": 238, "545436971489103": 238, "02403675978859": 238, "51125453556459": 238, "006947856013127": 238, "510976632702697": 238, "0232030926599": 238, "543491740098297": 238, "071709318779803": 238, "60772477499822": 238, "15140922117459": 238, "702635900054243": 238, "26128014949566": 238, "827219367841284": 238, "400332979860703": 238, "980502403256782": 238, "567611015725358": 238, "161544122559402": 238, "762188924788653": 238, "369434487845833": 238, "98317171075079": 238, "60329329580395": 238, "22969371878073": 238, "862269199618563": 238, "50091767358844": 238, "145538762942934": 238, "796033749032855": 238, "452305544884766": 238, "11425866823175": 238, "78179921498995": 238, "454834833173496": 238, "133274697240584": 238, "817029482863564": 238, "506011342116068": 238, "200133879070233": 238, "899312125797277": 238, "603462518764754": 238, "312502875623924": 238, "026352372380792": 238, "744931520944483": 238, "468162147046698": 238, "195967368526144": 238, "928271573971884": 238, "665000401719672": 238, "406080719195467": 238, "151440602600356": 238, "901009316931257": 238, "65471729633185": 238, "412496124768287": 238, "174278517024296": 238, "939998300010405": 238, "70959039438211": 238, "482990796461856": 238, "260136560459829": 238, "04096578098861": 238, "825417575866835": 238, "61343206920708": 238, "4049503747833": 238, "199914579673152": 238, "998267728170703": 238, "799953805965037": 238, "604917724580364": 238, "413105306073309": 238, "224463267983134": 238, "038939208530717": 238, "85648159206216": 238, "677039734733": 238, "500563790429041": 238, "327004736919884": 238, "156314362241329": 238, "988445251302853": 238, "823350772716449": 238, "660985065843155": 238, "501303028053703": 238, "344260302199713": 238, "189813264291978": 238, "037919011382415": 238, "8885353496463": 238, "741620782661487": 238, "597134499881358": 238, "455036365298303": 238, "315286906294567": 238, "177847302677378": 238, "042679375895315": 238, "909745578432904": 238, "779008983380519": 238, "650433274176662": 238, "523982734519799": 238, "399622238446936": 238, "2773172405761795": 238, "157033766510577": 238, "038738403400564": 238, "922398290662404": 238, "807981110850034": 238, "695455080677793": 238, "584788942191524": 238, "475951954085609": 238, "368913883163518": 238, "263644995939509": 238, "160116050379128": 238, "058298287776241": 238, "958163424764315": 238, "859683645459748": 238, "762831593735054": 238, "667580365619763": 238, "573903501826923": 238, "481774980403128": 238, "391169209500033": 238, "302061020265338": 238, "214425659851281": 238, "128238784538686": 238, "043476452974666": 238, "960115119522089": 238, "878131627718975": 238, "797503203845994": 238, "718207450600287": 238, "640222340873852": 238, "563526211634756": 238, "488097757909492": 238, "41391602686479": 238, "340960411987252": 238, "26921064735919": 238, "198646802029072": 238, "129249274475016": 238, "060998787159803": 238, "9938763811758764": 238, "9278634109788597": 238, "8629415392081166": 238, "799092731592923": 238, "736299251942832": 238, "674543657220839": 238, "6138087926979816": 238, "5540777871880285": 238, "4953340483609274": 238, "437561258133721": 238, "3807433681376393": 238, "324864595260116": 238, "2699094172604903": 238, "2158625684581725": 238, "16270903549208": 238, "1104340531501613": 238, "059023100267855": 238, "008461895694339": 238, "958736394325451": 238, "909832783202182": 238, "8617374776736533": 238, "8144371176235166": 238, "7679185637587227": 238, "7221688939596342": 238, "677175399690466": 238, "6329255824690527": 238, "5894071503949685": 238, "5466080147350314": 238, "5045162865652446": 238, "46312027346824": 238, "42240847628531": 238, "3823695859221234": 238, "3429924802072355": 238, "304266220802527": 238, "2661800501647056": 238, "2287233885570292": 238, "1918858311104232": 238, "1556571449331723": 238, "120027266268384": 238, "0849862976984372": 238, "050524505395634": 238, "0166323164182973": 238, "983300316051559": 238, "9505192451921": 238, "9182799977761187": 238, "8865736182498085": 238, "8553912990816483": 238, "8247243783158082": 238, "7945643371659952": 238, "7649027976490685": 238, "7357315202577694": 238, "7070424016719148": 238, "6788274725074235": 238, "6510788951025472": 238, "623788961340692": 238, "5969500905092247": 238, "570554827193671": 238, "5445958392067187": 238, "519065915551453": 238, "493957964418254": 238, "4692650112148045": 238, "4449801966286588": 238, "4210967747218337": 238, "3976081110568934": 238, "3745076808540075": 238, "3517890671784707": 238, "3294459591581786": 238, "3074721502305686": 238, "2858615364185335": 238, "2646081146348338": 238, "2437059810145348": 238, "2231493292750055": 238, "202932449103026": 238, "1830497245685518": 238, "163495632564698": 238, "1442647412735059": 238, "125351708657072": 238, "1067512809736118": 238, "0884582913180554": 238, "0704676581867616": 238, "0527743840659567": 238, "0353735540435043": 238, "0182603344436203": 238, "0014299714841537": 238, "9848777899560616": 238, "9685991919247094": 238, "9525896554526379": 238, "9368447333434394": 238, "9213600519063979": 238, "9061313097415461": 238, "8911542765448047": 238, "8764247919328708": 238, "8619387642875291": 238, "8476921696190648": 238, "8336810504484629": 238, "819901514708083": 238, "8063497346605047": 238, "7930219458352421": 238, "7799144459830335": 238, "7670235940474153": 238, "7543458091532936": 238, "7418775696122341": 238, "7296154119441921": 238, "717555929915413": 238, "7056957735922338": 238, "6940316484105252": 238, "6825603142605129": 238, "6712785845867267": 238, "6601833255028258": 238, "6492714549210542": 238, "638539941696086": 238, "6279858047830206": 238, "6176061124092957": 238, "6073979812602874": 238, "5973585756783705": 238, "5874851068752177": 238, "5777748321571187": 238, "5682250541631025": 238, "5588331201156538": 238, "5495964210838126": 238, "540512391258455": 238, "5315785072395516": 238, "522792287335207": 238, "5141512908722848": 238, "5056531175184273": 238, "49729540661528093": 238, "4890758365227428": 238, "48099212397404556": 238, "47304202344150226": 238, "4652233265127339": 238, "45753386127720747": 238, "4499714917229135": 238, "44253411714301566": 238, "43521967155230756": 238, "4280261231133148": 238, "42095147357188234": 238, "anl116": [238, 471, 492], "6537697": 238, "6274275": 238, "6218850": 238, "351697544": 238, "5915553": 238, "441101317": 238, "906239426": 238, "2857411364": 238, "7229954517": 238, "554973645": 238, "4568689563": 238, "5156994597": 238, "525077637": 238, "1108109476": 238, "020443718": 238, "1779708627": 238, "8256124181": 238, "6092934117": 238, "1410094337": 238, "786023144": 238, "240596954": 238, "5378471944": 238, "2095266918": 238, "402896311": 238, "589498148": 238, "8354441144": 238, "6332739561": 238, "1064111372": 238, "5901762004": 238, "1889407014": 238, "041561591": 238, "6666300085": 238, "00850933883": 238, "02582542365": 238, "6613824635": 238, "6881752216": 238, "3529099923": 238, "8238826675": 238, "3867061898": 238, "21511643846": 238, "25623729423": 238, "71090121218": 238, "1075265877": 238, "3826155009": 238, "74834261613": 238, "1594503214": 238, "33420547794": 238, "12138510708": 238, "6657048521": 238, "96157835923": 238, "94906859845": 238, "46768357333": 238, "59462": 238, "17152855231": 238, "18219490133": 238, "7129852038": 238, "36065": 238, "630125158605": 238, "806875214144": 238, "28087": 238, "940983437173": 238, "52091786222": 238, "816969806983": 238, "540701229926": 238, "391414951673": 238, "79580696637": 238, "819343288591": 238, "743645239829": 238, "843512085152": 238, "271673805946": 238, "3496494919455": 238, "626164152345": 238, "2863": 238, "3921956869945": 238, "5854835536697": 238, "67316478696": 238, "0578736322766": 238, "6131968954567": 238, "8892181163303": 238, "910328992861": 238, "197991091644": 238, "1164877023464": 238, "9466173467932": 238, "5749963965986": 238, "45407582232093": 238, "07297208657542": 238, "89324557045354": 238, "85117228271798": 238, "023203092659816": 238, "6034625187647": 238, "67703973473297": 238, "4759519540855885": 238, "9278634109788495": 238, "3823695859221163": 238, "4449801966286546": 238, "8764247919328687": 238, "6825603142605112": 238, "5315785072395504": 238, "4174581204794743": 238, "anl2082": [238, 492], "14072910": 238, "740918182": 238, "13840305": 238, "98587266": 238, "13611545": 238, "84926222": 238, "13386566": 238, "785133518": 238, "13165306": 238, "297855437": 238, "12947702": 238, "924758783": 238, "12733696": 238, "21906293": 238, "000515476": 238, "12523226": 238, "733084654": 238, "139209779": 238, "12316236": 238, "00172451": 238, "12112666": 238, "52622615": 238, "051362116": 238, "11912461": 238, "758204073": 238, "724122155": 238, "11715566": 238, "08393538": 238, "11521924": 238, "808911161": 238, "11331484": 238, "142643223": 238, "47177621": 238, "11144191": 238, "183721935": 238, "10959993": 238, "905121064": 238, "10778841": 238, "13974548": 238, "10600682": 238, "566217747": 238, "10425468": 238, "694899643": 238, "10253150": 238, "854144713": 238, "10083681": 238, "17677806": 238, "9917012": 238, "586799596": 238, "9753098": 238, "786307078": 238, "9591894": 238, "242635274": 238, "9433354": 238, "175707716": 238, "9277434": 238, "545597494": 238, "831241596": 238, "9124092": 238, "040293664": 238, "870515306": 238, "8973284": 238, "063669859": 238, "8824968": 238, "723651748": 238, "8679104": 238, "82058009": 238, "8535651": 238, "835766109": 238, "8394569": 238, "920236053": 238, "841045519": 238, "8255819": 238, "88366177": 238, "8119363": 238, "1834742585": 238, "964455921": 238, "7985161": 238, "914157146": 238, "7853178": 238, "796717139": 238, "564028599": 238, "7723377": 238, "168328506": 238, "1213689605": 238, "7595720": 238, "972148723": 238, "306604108": 238, "7470174": 238, "747302454": 238, "953138133": 238, "7346703": 238, "619031079": 238, "475627829": 238, "7225273": 238, "289005034": 238, "860375435": 238, "7105850": 238, "025796281": 238, "6558801625": 238, "6988400": 238, "655508247": 238, "963545897": 238, "6872892": 238, "5525606405": 238, "428542491": 238, "6759293": 238, "630626581": 238, "230818101": 238, "6647572": 238, "333719523": 238, "07626008": 238, "627427502": 238, "188001966": 238, "6429638": 238, "990292265": 238, "297874156": 238, "6323366": 238, "405330891": 238, "637995887": 238, "351697546": 238, "932506185": 238, "6116061": 238, "796483063": 238, "3894315": 238, "6014972": 238, "186650052": 238, "692687742": 238, "44110132": 238, "99421453": 238, "5817777": 238, "942879387": 238, "906239429": 238, "5721618": 238, "531494929": 238, "493670069": 238, "5627048": 238, "495382027": 238, "266611998": 238, "5534041": 238, "564478107": 238, "173010206": 238, "5442571": 238, "902926542": 238, "591412279": 238, "5352614": 238, "101899854": 238, "323851162": 238, "5264143": 238, "172541541": 238, "588845559": 238, "5177134": 238, "539024571": 238, "014516038": 238, "5091564": 238, "031724604": 238, "631814896": 238, "5007407": 238, "880506052": 238, "867867946": 238, "4924642": 238, "708119111": 238, "539426337": 238, "4843245": 238, "5237059295": 238, "84642662": 238, "4763193": 238, "716414112": 238, "4684465": 238, "049115779": 238, "044529754": 238, "4607037": 238, "65223045": 238, "19495291": 238, "4530890": 238, "017650012": 238, "4456000": 238, "992764112": 238, "944524284": 238, "4382349": 238, "774584292": 238, "93625093": 238, "4309915": 238, "903965252": 238, "17312719": 238, "4238679": 238, "259921618": 238, "701145862": 238, "4168620": 238, "054038651": 238, "896110471": 238, "4099718": 238, "8249753416": 238, "45818398": 238, "4031956": 238, "4330583527": 238, "4065276": 238, "3965314": 238, "054965321": 238, "0740282116": 238, "3899773": 238, "1784960376": 238, "1021129386": 238, "3835315": 238, "5974300485": 238, "435649422": 238, "3771923": 238, "406469255": 238, "317930393": 238, "3709578": 238, "9962641066": 238, "2857411387": 238, "3648265": 238, "048521998": 238, "164508497": 238, "3587964": 238, "531196523": 238, "0635300307": 238, "3528660": 238, "6937562427": 238, "371282059": 238, "3470337": 238, "0625316496": 238, "750805237": 238, "3412977": 238, "4361390434": 238, "135166406": 238, "3356565": 238, "880980042": 238, "722995455": 238, "3301086": 238, "72681548": 238, "974095947": 238, "3246524": 238, "5624124645": 238, "6051283022": 238, "3192864": 238, "2312633772": 238, "585364322": 238, "3140090": 238, "8273756346": 238, "132511894": 238, "3088189": 238, "691131041": 238, "7086087046": 238, "3037146": 238, "4052135767": 238, "0159838195": 238, "2986946": 238, "790604496": 238, "9932860206": 238, "2937576": 238, "902643618": 238, "8115777816": 238, "2889023": 238, "0271557234": 238, "870493809": 238, "2841271": 238, "6766409697": 238, "794463076": 238, "2794309": 238, "5865282794": 238, "4289932977": 238, "2748123": 238, "7114906497": 238, "837016823": 238, "2702701": 238, "2218213687": 238, "295296921": 238, "2658029": 238, "4998701233": 238, "290893466": 238, "2614096": 238, "136538017": 238, "517687043": 238, "2570888": 238, "9278305173": 238, "872960498": 238, "2528395": 238, "8714673785": 238, "4540369967": 238, "2486605": 238, "1635485985": 238, "554973649": 238, "2445505": 238, "1952754813": 238, "663309782": 238, "2405084": 238, "549725896": 238, "45686896": 238, "2365331": 238, "9986828375": 238, "800613866": 238, "2326236": 238, "4995154026": 238, "743553159": 238, "2287787": 238, "1921113236": 238, "515699464": 238, "2249973": 238, "3958601994": 238, "525077641": 238, "2212784": 238, "606686592": 238, "3547825003": 238, "2176210": 238, "494132159": 238, "7600851487": 238, "2140240": 238, "8984860145": 238, "66558717": 238, "2104865": 238, "8279625257": 238, "1624218347": 238, "2070075": 238, "4559257478": 238, "5055015746": 238, "2035860": 238, "1181597428": 238, "1108109518": 238, "2002210": 238, "3101840124": 238, "55274437": 238, "1969116": 238, "6846133024": 238, "5614877897": 238, "1936570": 238, "048561048": 238, "0204437221": 238, "1904561": 238, "3610857343": 238, "9636987797": 238, "1873081": 238, "7306794657": 238, "5735330891": 238, "1842122": 238, "4127980457": 238, "177970867": 238, "1811674": 238, "8074318797": 238, "2483714817": 238, "1781730": 238, "4567170294": 238, "397060333": 238, "1752281": 238, "0425857515": 238, "374998887": 238, "1723318": 238, "3844558687": 238, "0694932244": 238, "1694834": 238, "4369583344": 238, "5019404618": 238, "1666821": 238, "2877023558": 238, "825612422": 238, "1639271": 238, "1550774565": 238, "323475937": 238, "1612176": 238, "3860918684": 238, "4060491775": 238, "1585529": 238, "4542466511": 238, "6092934154": 238, "1559322": 238, "9574449498": 238, "5925396318": 238, "1533549": 238, "615935809": 238, "1364493936": 238, "1508202": 238, "2702919734": 238, "1410094374": 238, "1483273": 238, "8794211112": 238, "6235593962": 238, "1458757": 238, "5186099107": 238, "7168521276": 238, "1434646": 238, "377600504": 238, "667146101": 238, "1410933": 238, "758698685": 238, "832329314": 238, "1387613": 238, "074913395": 238, "6800742194": 238, "1364677": 238, "8481269616": 238, "7860231474": 238, "1342121": 238, "7072955794": 238, "8320037213": 238, "1319938": 238, "3866795348": 238, "6042737672": 238, "1298121": 238, "7241026824": 238, "9917952365": 238, "1276665": 238, "6592406898": 238, "9845366548": 238, "1255564": 238, "231937575": 238, "6718036304": 238, "1234811": 238, "5805500692": 238, "2405969573": 238, "1214401": 238, "940319346": 238, "9739978546": 238, "1194329": 238, "6417696604": 238, "2495798978": 238, "1174589": 238, "1091334594": 238, "5378471974": 238, "1155174": 238, "8588025218": 238, "400698392": 238, "1136081": 238, "4978046978": 238, "4899160292": 238, "1117303": 238, "7223058268": 238, "5456809162": 238, "1098836": 238, "3161364163": 238, "3951110246": 238, "1080674": 238, "1493426717": 238, "9508245452": 238, "1062812": 238, "1767614773": 238, "2095266946": 238, "1045245": 238, "4366189281": 238, "2506198772": 238, "1027969": 238, "0491520285": 238, "2348368228": 238, "1010978": 238, "2152531712": 238, "4028963136": 238, "994268": 238, "2151370203": 238, "0741811311": 238, "977834": 238, "4070294301": 238, "6454378547": 238, "961672": 238, "225878033": 238, "5894981504": 238, "945777": 238, "18208414": 238, "4540211952": 238, "930144": 238, "8602556018": 238, "8602568869": 238, "914770": 238, "9179802819": 238, "5018294967": 238, "899651": 238, "0846198035": 238, "1435414259": 238, "884781": 238, "1601232332": 238, "6201967347": 238, "870157": 238, "0138603735": 238, "8354441167": 238, "855774": 238, "5834743389": 238, "7606389975": 238, "841629": 238, "8737530973": 238, "4337244405": 238, "827718": 238, "9555196629": 238, "95813055": 238, "814037": 238, "9645406336": 238, "5016920659": 238, "800583": 238, "1004527673": 238, "2955838485": 238, "787350": 238, "6257073012": 238, "6332739583": 238, "774336": 238, "8645317197": 238, "8694940406": 238, "761538": 238, "2019086833": 238, "4192267265": 238, "748951": 238, "0825718333": 238, "7567097726": 238, "736572": 238, "0100181953": 238, "4144566593": 238, "724397": 238, "5455369055": 238, "9822933782": 238, "712424": 238, "3072539918": 238, "1064111395": 238, "700648": 238, "9691929421": 238, "4884347367": 238, "689068": 238, "2603508006": 238, "8845063105": 238, "677678": 238, "9637895346": 238, "1043842555": 238, "666477": 238, "9157424208": 238, "0105570226": 238, "655462": 238, "0047352002": 238, "5173715671": 238, "644628": 238, "1707217593": 238, "5901762027": 238, "633973": 238, "4042340985": 238, "2444776241": 238, "623494": 238, "7455463487": 238, "5451118611": 238, "613189": 238, "283852607": 238, "605428937": 238, "603054": 238, "1564583599": 238, "5864910025": 238, "593086": 238, "5479852724": 238, "6962837233": 238, "583283": 238, "6895891203": 238, "1889407035": 238, "573642": 238, "8581906492": 238, "3639807262": 238, "564161": 238, "3757191458": 238, "5655576034": 238, "554836": 238, "608368512": 238, "1817224232": 238, "545665": 238, "965865636": 238, "643697992": 238, "536646": 238, "9007508542": 238, "4251652687": 238, "527776": 238, "9076703079": 238, "04156159307": 238, "519053": 238, "52267999534": 238, "0493905135": 238, "510474": 238, "32256132696": 238, "04554302245": 238, "502036": 238, "9241479935": 238, "66663001047": 238, "493738": 238, "98366396024": 238, "5883257542": 238, "485578": 238, "1960724028": 238, "5247222554": 238, "477552": 238, "2944354044": 238, "22769425163": 238, "469659": 238, "0492842363": 238, "4862747227": 238, "461896": 238, "26800004655": 238, "12604071887": 238, "454261": 238, "79420478526": 238, "0085093406": 238, "446753": 238, "50716219656": 238, "03054370167": 238, "439369": 238, "32118871185": 238, "123768711": 238, "432107": 238, "1850740796": 238, "25399651076": 238, "424965": 238, "0815115718": 238, "4206614111": 238, "417941": 238, "0265376077": 238, "6562641643": 238, "411033": 238, "06898064027": 238, "0258254252": 238, "404239": 238, "28991915146": 238, "62634824385": 238, "397557": 238, "8021486062": 238, "5862894433": 238, "390986": 238, "7496572168": 238, "0650397345": 238, "384524": 238, "30711037177": 238, "2524124238": 238, "378168": 238, "6793435874": 238, "3681405722": 238, "371918": 238, "100863839": 238, "661382465": 238, "365770": 238, "8353591347": 238, "4102352554": 238, "359725": 238, "1752161957": 238, "92125664745": 238, "353779": 238, "4410461081": 238, "5289944844": 238, "347931": 238, "98121781513": 238, "5955241124": 238, "342181": 238, "17139932036": 238, "50999339076": 238, "336525": 238, "4141064737": 238, "68817522295": 238, "330963": 238, "1382592155": 238, "572027483": 238, "325492": 238, "7987451556": 238, "6292602163": 238, "320112": 238, "87599036534": 238, "3529099935": 238, "314821": 238, "87553726375": 238, "2609212998": 238, "309618": 238, "3276294811": 238, "8957348434": 238, "304500": 238, "7868035836": 238, "8238826686": 238, "299467": 238, "83148754673": 238, "6355899612": 238, "294518": 238, "06360586477": 238, "9443834348": 238, "289650": 238, "10819118744": 238, "3867061909": 238, "284862": 238, "61300237593": 238, "6215389441": 238, "280154": 238, "24814887147": 238, "33002750826": 238, "275523": 238, "7057212728": 238, "2151164395": 238, "270969": 238, "6994280197": 238, "00118873484": 238, "266490": 238, "96423808124": 238, "43371148565": 238, "262086": 238, "25602955045": 238, "2788873886": 238, "257754": 238, "35124404664": 238, "3233120159": 238, "253494": 238, "0465468304": 238, "3736367511": 238, "249304": 238, "15849253605": 238, "25623729522": 238, "245183": 238, "5231964294": 238, "81688765285": 238, "241130": 238, "99601109867": 238, "9204395062": 238, "237145": 238, "4512084899": 238, "4505068889": 238, "233225": 238, "781667197": 238, "30915607154": 238, "229370": 238, "8985649214": 238, "41660057305": 238, "225579": 238, "731076014": 238, "7109012131": 238, "221851": 238, "226074017": 238, "14767112216": 238, "218184": 238, "34783912182": 238, "69978562725": 238, "214578": 238, "0777704626": 238, "35709693303": 238, "211031": 238, "41410316498": 238, "12615351862": 238, "207543": 238, "37163007146": 238, "02992417247": 238, "204112": 238, "98142806662": 238, "10752658854": 238, "200739": 238, "29058892548": 238, "41396044835": 238, "197421": 238, "36195461068": 238, "01984491482": 238, "194158": 238, "27385694472": 238, "01116046496": 238, "190949": 238, "11986158518": 238, "4889949897": 238, "187793": 238, "00851623146": 238, "56929409018": 238, "184689": 238, "06310299356": 238, "38261550164": 238, "181636": 238, "42139485353": 238, "07388757583": 238, "178634": 238, "23541615254": 238, "80217175576": 238, "175681": 238, "67120703662": 238, "74042897622": 238, "172777": 238, "9085917957": 238, "07528992536": 238, "169922": 238, "14095103185": 238, "00682910357": 238, "167113": 238, "5749975931": 238, "7483426168": 238, "164351": 238, "43055621078": 238, "52612964268": 238, "161634": 238, "9403467792": 238, "57927750854": 238, "158963": 238, "34977121736": 238, "159450322": 238, "156335": 238, "9167038534": 238, "53068109506": 238, "153751": 238, "911285274": 238, "969167304": 238, "151210": 238, "61571958076": 238, "76306982856": 238, "148711": 238, "324074998": 238, "2123152143": 238, "146253": 238, "342087776": 238, "62840120317": 238, "143835": 238, "9869693354": 238, "33420547846": 238, "141458": 238, "58721659955": 238, "66379757095": 238, "139120": 238, "48242546123": 238, "96225387393": 238, "136821": 238, "02310733314": 238, "58547571578": 238, "134559": 238, "57050873004": 238, "90001043957": 238, "132335": 238, "4964338332": 238, "28287543976": 238, "130148": 238, "18306998744": 238, "12138510762": 238, "127997": 238, "02281608258": 238, "8129806368": 238, "125881": 238, "41811377148": 238, "76506264199": 238, "123800": 238, "78128147773": 238, "39482654422": 238, "121754": 238, "53435114698": 238, "12910067689": 238, "119742": 238, "10890769659": 238, "40418706778": 238, "117762": 238, "94593111883": 238, "6657048526": 238, "115816": 238, "49564119396": 238, "3684362768": 238, "113902": 238, "21734477005": 238, "97617524266": 238, "112019": 238, "57928556686": 238, "96157835971": 238, "110168": 238, "05849646238": 238, "80601845705": 238, "108347": 238, "14065422086": 238, "99944051693": 238, "106556": 238, "31993662186": 238, "04021998953": 238, "104795": 238, "09888195091": 238, "43502344954": 238, "103062": 238, "98825081241": 238, "69867155596": 238, "101359": 238, "50689022677": 238, "35400427695": 238, "99684": 238, "18159997358": 238, "93174834226": 238, "98036": 238, "54700114416": 238, "97038688659": 238, "96416": 238, "14540686659": 238, "01603124742": 238, "94822": 238, "52669516756": 238, "62229488199": 238, "93255": 238, "24818393558": 238, "3501693681": 238, "91713": 238, "87450795088": 238, "76790245454": 238, "90197": 238, "97749794782": 238, "4508781271": 238, "88707": 238, "13606167628": 238, "98149865701": 238, "87240": 238, "9360669288": 238, "94906859883": 238, "85798": 238, "97022650126": 238, "94968070573": 238, "84380": 238, "83798505487": 238, "58610373047": 238, "82986": 238, "14540784826": 238, "46767208085": 238, "81614": 238, "50507130868": 238, "21017729891": 238, "80265": 238, "53595541172": 238, "43576133398": 238, "78938": 238, "86333784008": 238, "77281157959": 238, "77634": 238, "11868989158": 238, "8558576454": 238, "76350": 238, "93957410767": 238, "32546983528": 238, "75088": 238, "96954359414": 238, "82815930349": 238, "73847": 238, "85804300568": 238, "01627986094": 238, "72627": 238, "26031116722": 238, "54793140467": 238, "71426": 238, "83728530469": 238, "08686494333": 238, "70246": 238, "25550685872": 238, "30238919255": 238, "69085": 238, "18702885516": 238, "86927871416": 238, "67943": 238, "30932480653": 238, "46768357363": 238, "66820": 238, "30519911934": 238, "78304049085": 238, "65715": 238, "86269898208": 238, "505985459415": 238, "64629": 238, "6750277097": 238, "33226781019": 238, "63561": 238, "440459520345": 238, "962665695275": 238, "62510": 238, "862255720655": 238, "102902968894": 238, "61477": 238, "648582276466": 238, "46356744213": 238, "60461": 238, "51242874593": 238, "760030488804": 238, "17152855256": 238, "71236798014": 238, "58479": 238, "34828057598": 238, "045282526225": 238, "57512": 238, "76967203876": 238, "48802700278": 238, "56562": 238, "16720266779": 238, "77432934188": 238, "55627": 238, "276810109106": 238, "64231856577": 238, "54707": 238, "838796575554": 238, "83445204322": 238, "53803": 238, "59775670685": 238, "09744394831": 238, "52914": 238, "30250662201": 238, "18219490156": 238, "52039": 238, "7060141444": 238, "843722774094": 238, "51179": 238, "56533018017": 238, "84109463548": 238, "50333": 238, "64152123075": 238, "937359826334": 238, "49501": 238, "699603020934": 238, "8994841372": 238, "48683": 238, "508475223985": 238, "4982850753": 238, "47878": 238, "84085726557": 238, "50836820129": 238, "47087": 238, "47322518883": 238, "70806451822": 238, "46309": 238, "185749562945": 238, "87936889539": 238, "45543": 238, "762234418005": 238, "80787950996": 238, "44790": 238, "990057189156": 238, "28273828953": 238, "44050": 238, "660109653436": 238, "096572339084": 238, "43322": 238, "5667398428": 238, "04543633608": 238, "42606": 238, "50769491725": 238, "928755877656": 238, "41902": 238, "2840649822": 238, "54927176423": 238, "41209": 238, "700227834444": 238, "712985204": 238, "40528": 238, "56379462138": 238, "22910392317": 238, "39858": 238, "68555639846": 238, "909989166845": 238, "39199": 238, "8794315699": 238, "57110357595": 238, "38551": 238, "96241419817": 238, "03095992569": 238, "37914": 238, "75452316783": 238, "11107071121": 238, "37288": 238, "07875218962": 238, "63589856665": 238, "36671": 238, "76102063089": 238, "432807503596": 238, "63012515878": 238, "332014955544": 238, "35469": 238, "51769218263": 238, "16654461499": 238, "34883": 238, "25813108243": 238, "77218005003": 238, "34306": 238, "6885882104": 238, "98741908763": 238, "33739": 238, "64890165278": 238, "65342895089": 238, "33181": 238, "981556739396": 238, "6140021378": 238, "32633": 238, "53164228859": 238, "715513029256": 238, "32094": 238, "14680757532": 238, "806875214297": 238, "31563": 238, "677220010522": 238, "739499520678": 238, "31041": 238, "975523520017": 238, "36725273915": 238, "30528": 238, "896797611298": 238, "546417029964": 238, "30024": 238, "298517116906": 238, "135650000324": 238, "29528": 238, "0405126032": 238, "99594544169": 238, "29039": 238, "984931433486": 238, "99059471607": 238, "28559": 238, "996199474757": 238, "985148780503": 238, "94098343731": 238, "84738083924": 238, "27623": 238, "688153836883": 238, "447249613244": 238, "27167": 238, "108748568953": 238, "656863216747": 238, "26718": 238, "075937085094": 238, "350443630934": 238, "26276": 238, "464985161452": 238, "404291764775": 238, "25842": 238, "153220249562": 238, "69675309338": 238, "25415": 238, "019997399828": 238, "108183864293": 238, "24994": 238, "94666574829": 238, "520917862345": 238, "24581": 238, "816535557264": 238, "819233723832": 238, "24175": 238, "51484580078": 238, "88932279097": 238, "23775": 238, "92873228579": 238, "61925749761": 238, "23382": 238, "947196300272": 238, "898960277562": 238, "22996": 238, "461073779545": 238, "620172986768": 238, "22616": 238, "363004982202": 238, "6764268309": 238, "22242": 238, "54740466729": 238, "963012790027": 238, "21874": 238, "910432764384": 238, "37695253207": 238, "21513": 238, "349965528454": 238, "816969807085": 238, "21157": 238, "765567171515": 238, "183462314293": 238, "20808": 238, "05846196313": 238, "378474034136": 238, "20464": 238, "131506792088": 238, "305668017663": 238, "20125": 238, "889164181583": 238, "87029962562": 238, "19793": 238, "2374757504": 238, "979190209913": 238, "19466": 238, "084036112767": 238, "54070123002": 238, "19144": 238, "337967209605": 238, "464708797277": 238, "18827": 238, "90989306402": 238, "66257863987": 238, "18516": 238, "711914954085": 238, "047141481642": 238, "18210": 238, "65758699596": 238, "532668827847": 238, "17909": 238, "661892130585": 238, "034849151118": 238, "17613": 238, "641218507288": 238, "470764471065": 238, "17322": 238, "51333625773": 238, "758867320958": 238, "17036": 238, "197374653748": 238, "818958095148": 238, "16754": 238, "613799642746": 238, "57216277086": 238, "16477": 238, "684391754385": 238, "940910998253": 238, "16205": 238, "33222437246": 238, "8489145526": 238, "15937": 238, "48164236589": 238, "221146142609": 238, "15674": 238, "058241072922": 238, "983818569044": 238, "15414": 238, "988845632692": 238, "064364227796": 238, "15160": 238, "2014906584": 238, "39141495175": 238, "14909": 238, "62540024647": 238, "894782185844": 238, "14663": 238, "190968316112": 238, "505437489779": 238, "14420": 238, "829739273857": 238, "155493363029": 238, "14182": 238, "474388997678": 238, "77818438675": 238, "13948": 238, "058706135404": 238, "307848677407": 238, "13717": 238, "517573712254": 238, "679909646939": 238, "13490": 238, "786951042377": 238, "830858064406": 238, "13267": 238, "803855939354": 238, "69823441412": 238, "13048": 238, "506347220738": 238, "220611545385": 238, "12832": 238, "833507501784": 238, "337577609": 238, "12620": 238, "725426273546": 238, "989719275804": 238, "12412": 238, "123183260697": 238, "118605232594": 238, "12206": 238, "968832054401": 238, "66676995082": 238, "12005": 238, "205384015715": 238, "577697723578": 238, "11806": 238, "776792445045": 238, "795806966433": 238, "11611": 238, "627937013262": 238, "266434777735": 238, "11419": 238, "704608450142": 238, "935821754134": 238, "11230": 238, "953493485886": 238, "751097057053": 238, "11045": 238, "322160041538": 238, "660263726015": 238, "10862": 238, "75904266418": 238, "612184234706": 238, "10683": 238, "213428202862": 238, "556566285775": 238, "10506": 238, "635441721295": 238, "443948840435": 238, "10332": 238, "976032643373": 238, "225688378958": 238, "10162": 238, "186961127709": 238, "85394538828": 238, "220784667354": 238, "281671072937": 238, "9829": 238, "03084491103": 238, "462594285653": 238, "9666": 238, "571254702174": 238, "351208673947": 238, "9506": 238, "796885332204": 238, "902760039186": 238, "9349": 238, "663354004486": 238, "073233904577": 238, "9195": 238, "127011505492": 238, "819343288642": 238, "9043": 238, "144930079732": 238, "098516680768": 238, "8893": 238, "674891505103": 238, "868886215525": 238, "8746": 238, "67537536534": 238, "089276042432": 238, "8602": 238, "105547516292": 238, "719190887952": 238, "8459": 238, "925248742848": 238, "718804806545": 238, "8320": 238, "094983603336": 238, "048950117656": 238, "8182": 238, "57590945832": 238, "671106525542": 238, "8047": 238, "329825680718": 238, "547390418948": 238, "7914": 238, "31916304428": 238, "640544347639": 238, "7783": 238, "506973287444": 238, "913926672863": 238, "7654": 238, "8569188497": 238, "331501388891": 238, "7528": 238, "333262777583": 238, "857828112776": 238, "7403": 238, "90085879751": 238, "4580522395745": 238, "7281": 238, "525141552709": 238, "097895260295": 238, "7161": 238, "172117001502": 238, "743645239865": 238, "7042": 238, "808352974297": 238, "362147452483": 238, "6926": 238, "400969886663": 238, "920795171768": 238, "6811": 238, "917631605898": 238, "38752061312": 238, "6699": 238, "326536468562": 238, "730786025797": 238, "6588": 238, "596408446479": 238, "919574932228": 238, "6479": 238, "696488458745": 238, "923383512123": 238, "6372": 238, "596525827352": 238, "712212128995": 238, "6267": 238, "266769874014": 238, "256556996733": 238, "6163": 238, "67796165591": 238, "527401983918": 238, "6061": 238, "8013258380015": 238, "496210553598": 238, "5961": 238, "608562699707": 238, "134917836292": 238, "5863": 238, "071840273685": 238, "415922834007": 238, "5766": 238, "1637866145475": 238, "312080753122": 238, "5670": 238, "857482195372": 238, "796695463991": 238, "5577": 238, "1264524298795": 238, "84351208518": 238, "5484": 238, "944660318213": 238, "426709690272": 238, "5394": 238, "286499214271": 238, "52089413523": 238, "5305": 238, "126785712583": 238, "101091004294": 238, "5217": 238, "440752652759": 238, "142738672492": 238, "5131": 238, "204042239564": 238, "621681482801": 238, "5046": 238, "392699276705": 238, "514163036094": 238, "4962": 238, "983164512457": 238, "796819591983": 238, "4880": 238, "952268095278": 238, "44667357874": 238, "4800": 238, "277223137584": 238, "441127210496": 238, "4720": 238, "935619385917": 238, "757956209926": 238, "4642": 238, "905416995726": 238, "375303634701": 238, "4566": 238, "164940409049": 238, "271673805971": 238, "4490": 238, "692872333388": 238, "425926337207": 238, "4416": 238, "468247820092": 238, "817270261737": 238, "4343": 238, "4704484406375": 238, "425258257338": 238, "4271": 238, "6791965591465": 238, "2297809663005": 238, "4201": 238, "074549699582": 238, "21106140936": 238, "4131": 238, "636895006046": 238, "349649491967": 238, "4063": 238, "346943794629": 238, "62641660136": 238, "3996": 238, "18572619533": 238, "0225502929343": 238, "3930": 238, "134585882518": 238, "5195490644464": 238, "3865": 238, "1751748925003": 238, "099217216586": 238, "3801": 238, "289448526752": 238, "7436597985": 238, "3738": 238, "4596603393798": 238, "435277636856": 238, "3676": 238, "66835720744": 238, "156762447071": 238, "3615": 238, "898374482739": 238, "891092025343": 238, "3556": 238, "132831223763": 238, "6215255201514": 238, "3497": 238, "355125506419": 238, "331598781914": 238, "3439": 238, "5489298122834": 238, "005119789504": 238, "3382": 238, "6981864930754": 238, "6261641523643": 238, "3326": 238, "7871033100937": 238, "1790706869615": 238, "3271": 238, "8001490473853": 238, "648437066359": 238, "3217": 238, "7220491974167": 238, "019115541691": 238, "3164": 238, "537781718058": 238, "276208734359": 238, "3112": 238, "2325728596948": 238, "405065497774": 238, "3060": 238, "7918930613173": 238, "3912768475006": 238, "3010": 238, "2014529144344": 238, "220671958667": 238, "2960": 238, "447199193704": 238, "8793142295362": 238, "2911": 238, "515310953168": 238, "353497410136": 238, "3921956870113": 238, "6297417948786": 238, "2816": 238, "0644855537785": 238, "694790478113": 238, "2769": 238, "519033663": 238, "5356056715677": 238, "2723": 238, "742910423192": 238, "1393650826535": 238, "2678": 238, "72339995022": 238, "493458352638": 238, "2634": 238, "447996535029": 238, "585483553685": 238, "2590": 238, "9044011697524": 238, "4032437437963": 238, "2548": 238, "080518131244": 238, "9347435786913": 238, "2505": 238, "9644516210747": 238, "1681859796918": 238, "2464": 238, "544502461071": 238, "091968856679": 238, "2423": 238, "8091648434643": 238, "694681885218": 238, "2383": 238, "747123134762": 238, "9651033369455": 238, "2344": 238, "347248732443": 238, "892196962356": 238, "2305": 238, "598596973605": 238, "465108925103": 238, "2267": 238, "4904040947126": 238, "6731647869738": 238, "012084241594": 238, "5058665427027": 238, "2193": 238, "1532265288556": 238, "9528897037876": 238, "2156": 238, "903592147905": 238, "004080430512": 238, "2121": 238, "2531115227694": 238, "649452711368": 238, "2086": 238, "191881512928": 238, "8791855890995": 238, "710162662375": 238, "6836204325955": 238, "2017": [238, 468], "798376494153": 238, "0532582538767": 238, "447102849604": 238, "9787570694248": 238, "1951": 238, "647077271597": 238, "450929305127": 238, "1919": 238, "389188431008": 238, "4607392441137": 238, "1887": 238, "664475595738": 238, "9993005167792": 238, "1856": 238, "4641261415616": 238, "057873632288": 238, "1825": 238, "7794731041204": 238, "627863550882": 238, "1795": 238, "601992771376": 238, "700817296315": 238, "1765": 238, "9233023158586": 238, "2684216077496": 238, "1736": 238, "7351574660493": 238, "3225006304629": 238, "1708": 238, "0294502162512": 238, "855013644725": 238, "1679": 238, "7982065743147": 238, "8580528322134": 238, "1652": 238, "0335843465868": 238, "3238410793458": 238, "1624": 238, "7278709594757": 238, "2447298169209": 238, "1597": 238, "873481317017": 238, "6131968954664": 238, "1571": 238, "4629556938557": 238, "4218444957055": 238, "1545": 238, "4889576630526": 238, "6633970735584": 238, "1519": 238, "9442720581387": 238, "3306993391116": 238, "1494": 238, "8218029688578": 238, "4167142689914": 238, "1470": 238, "114571770034": 238, "9145211515904": 238, "1445": 238, "81571518302": 238, "817313664602": 238, "1421": 238, "9184833691863": 238, "1183979843322": 238, "1398": 238, "4162380549233": 238, "8111909262616": 238, "1375": 238, "3024506876327": 238, "8892181163394": 238, "1352": 238, "5707006221996": 238, "3461121925054": 238, "1330": 238, "2146733374384": 238, "175611035938": 238, "1308": 238, "2281586820186": 238, "3715560315343": 238, "1286": 238, "6050491493825": 238, "9278903571471": 238, "1265": [238, 471], "3393381811768": 238, "8386573010928": 238, "1244": 238, "4251184987252": 238, "0979986074722": 238, "8565804620798": 238, "700152848839": 238, "1203": 238, "628010456195": 238, "639453825767": 238, "1183": [238, 471], "7337893037752": 238, "9103289928687": 238, "1164": 238, "168390704356": 238, "5072979108297": 238, "1144": 238, "9263796991856": 238, "424970724031": 238, "1126": [238, 471], "0024111614794": 238, "6580466633302": 238, "1107": 238, "3912283116267": 238, "2013125735928": 238, "1089": 238, "0876612569423": 238, "04964146556": 238, "1071": 238, "0866255555504": 238, "1979910916511": 238, "1053": 238, "3831208040076": 238, "6414025453075": 238, "1035": [238, 471], "9722292482697": 238, "374998883487": 238, "1018": 238, "8491144176178": 238, "3939837719256": 238, "1002": 238, "0090197811621": 238, "6936401527915": 238, "985": 238, "4472674265535": 238, "2693289343612": 238, "969": 238, "1592567605328": 238, "1164877023526": 238, "953": 238, "1404632309594": 238, "2306294525595": 238, "937": 238, "3864370699616": 238, "6073413444313": 238, "921": 238, "8928020578613": 238, "2422834752565": 238, "906": 238, "6552543075295": 238, "1311876746058": 238, "6695610688344": 238, "2698563187022": 238, "876": 238, "9315595528501": 238, "6541611643869": 238, "4371557754998": 238, "2800422023588": 238, "848": 238, "1823234203116": 238, "1435065293682": 238, "834": 238, "1631027199712": 238, "2406272390509": 238, "820": 238, "3755993563614": 238, "5675423310962": 238, "806": 238, "8159833787815": 238, "1204536384436": 238, "793": 238, "4804881400484": 238, "8956257722123": 238, "780": 238, "3654092501802": 238, "8893850840691": 238, "767": 238, "4671035473762": 238, "098118645747": 238, "754": 238, "7819880860039": 238, "5182732454308": 238, "742": 238, "3065391413131": 238, "1463544007306": 238, "730": 238, "0372912306007": 238, "9789253879702": 238, "717": 238, "9708361505544": 238, "0126062875195": 238, "706": 238, "1038220305081": 238, "2440730449057": 238, "694": 238, "4329524013444": 238, "6700565474443": 238, "682": 238, "9549852797884": 238, "2873417161306": 238, "671": 238, "6667322678348": 238, "0927666125416": 238, "5650576670627": 238, "0832215604997": 238, "649": 238, "6468776075868": 238, "2556482822534": 238, "638": 238, "9091591914078": 238, "6070390489365": 238, "628": 238, "3489196499211": 238, "134435845068": 238, "9632255153506": 238, "8349295468624": 238, "607": 238, "749191805878": 238, "7056591141214": 238, "597": [238, 473, 478, 479], "70398122424": 238, "7438107954813": 238, "587": 238, "8248033695721": 238, "9466173467978": 238, "578": 238, "1089139622795": 238, "3113572624493": 238, "568": 238, "5536140817194": 238, "8353540193458": 238, "559": 238, "1562494164834": 238, "5159753334324": 238, "549": 238, "914209527072": 238, "350632428483": 238, "540": [238, 471], "8249271207551": 238, "3367793169787": 238, "531": 238, "8858773384193": 238, "471912092873": 238, "523": 238, "0945770532018": 238, "7535682360462": 238, "514": 238, "4485841807165": 238, "1793259282561": 238, "505": 238, "945497000682": 238, "74680338039485": 238, "497": 238, "5829534897615": 238, "45365817086616": 238, "489": 238, "35863066543": 238, "2975865948972": 238, "481": 238, "2702439406864": 238, "27632302460586": 238, "31554648943137": 238, "3876392796451": 238, "465": 238, "49232862233447": 238, "6293440082495": 238, "457": 238, "7984171730174": 238, "99928207851275": 238, "450": [238, 348, 452, 462, 473, 479, 480, 488], "23167489438276": 238, "49533397972556": 238, "442": 238, "7899998649205": 238, "1154152336094": 238, "435": 238, "4713249048272": 238, "8574758152811": 238, "27361700177636": 238, "7194995837885": 238, "1948767461796": 238, "69950372205835": 238, "414": 238, "23313777578227": 238, "7955381861009": 238, "38646622943895": 238, "0056851633184": 238, "6529602099176": 238, "3280585397674": 238, "394": 238, "03074925558235": 238, "76080337622585": 238, "387": 238, "51799382080884": 238, "3020953929201": 238, "381": 238, "1128847649875": 238, "95014046276907": 238, "374": 238, "81364284997284": 238, "703174113004": 238, "368": 238, "61851824583925": 238, "5594610350259": 238, "525790044806": 238, "51729460236385": 238, "356": 238, "5337657831958": 238, "57499639660153": 238, "64078097129567": 238, "7309157411389": 238, "344": 238, "8451986309875": 238, "98342924266024": 238, "339": 238, "1454088410217": 238, "3309403401813": 238, "333": 238, "5398282898065": 238, "77187886154985": 238, "02689983558867": 238, "3047005872764": 238, "60509207390453": 238, "9278868215747": 238, "317": 238, "27289891217964": 238, "63994397049197": 238, "312": 238, "0288391513604": 238, "439403127012": 238, "306": 238, "87145607446": 238, "32481966301606": 238, "301": 238, "79931704190585": 238, "29477282798797": 238, "296": 238, "8110130935744": 238, "34786535435205": 238, "9051585574047": 238, "4827230693343": 238, "0803906644806": 238, "69799451323894": 238, "3353691704747": 238, "992350564034": 238, "6687759833498": 238, "3644840681425": 238, "07931479721407": 238, "81310947733573": 238, "5657107322273": 238, "33696249162824": 238, "12670998045957": 238, "9347997080753": 238, "76107945760333": 238, "60539827537497": 238, "46760646044183": 238, "34755555417982": 238, "24509832997956": 238, "16008878302222": 238, "09238212014023": 238, "04183474976216": 238, "00830427194097": 238, "99164946846514": 238, "99173029305177": 238, "00840786162107": 238, "04154444265154": 238, "09100344761535": 238, "15664942149283": 238, "23834803336592": 238, "33596606708952": 238, "4493714120403": 238, "57843305394243": 238, "7230210657691": 238, "88300659871996": 238, "05826187327307": 238, "2486601703114": 238, "45407582232284": 238, "67438420467306": 238, "9094617269512": 238, "15918582438704": 238, "42343494933948": 238, "70208856285578": 238, "9950271263006": 238, "3021320930549": 238, "62328590028318": 238, "9583719607696": 238, "3072746548215": 238, "6698793222402": 238, "04607225435848": 238, "43574068614402": 238, "83877278836854": 238, "25505765984184": 238, "68448531971015": 238, "1269466998187": 238, "58233363713737": 238, "0505388662494": 238, "53145601190235": 238, "0249795816208": 238, "5310049583806": 238, "04942839334362": 238, "58014699865296": 238, "123058740288": 238, "67806243097854": 238, "24505772317795": 238, "8239451020945": 238, "41462587878064": 238, "01700218327946": 238, "6309769578282": 238, "25645395011813": 238, "89333770661014": 238, "54153356590624": 238, "20094765217559": 238, "87148686863543": 238, "55305889108595": 238, "2455721614989": 238, "94893588165922": 238, "66306000685975": 238, "387855239648": 238, "1232330236248": 238, "8691055372948": 238, "62538568796737": 238, "39198710570872": 238, "16882413734388": 238, "95581184050846": 238, "75286597774993": 238, "55990301067771": 238, "37684009416188": 238, "20359507058": 238, "04008646411174": 238, "8862334750807": 238, "74195597434337": 238, "6071744977246": 238, "4818102404991": 238, "36578505191898": 238, "25902142978654": 238, "1614425150721": 238, "07297208657664": 238, "9935345556385": 238, "9230549608842": 238, "86145896302284": 238, "80867283968347": 238, "76462348029554": 238, "72923838101174": 238, "70244563967297": 238, "6841739508151": 238, "67435260071717": 238, "67291146249072": 238, "6797809912098": 238, "69489221908145": 238, "71817675065626": 238, "74956675807861": 238, "78899497637643": 238, "83639469878995": 238, "89169977213928": 238, "95484459223042": 238, "02576409929938": 238, "10439377349411": 238, "19066963039391": 238, "2845282165661": 238, "38590660515945": 238, "49474239153423": 238, "6109736889286": 238, "7345391241608": 238, "86537783336719": 238, "0034294577755": 238, "14863413951323": 238, "30093251745089": 238, "46026572307959": 238, "62657537642299": 238, "79980358198308": 238, "97989292471968": 238, "16678646606316": 238, "36042773996047": 238, "5607607489538": 238, "76772996029185": 238, "98128030207336": 238, "20135715942268": 238, "42790637069703": 238, "66087422372524": 238, "90020745207775": 238, "1458532313675": 238, "39775917558154": 238, "65587333344315": 238, "92014418480403": 238, "19052063706651": 238, "46695202163545": 238, "74938809039955": 238, "03777901224187": 238, "33207536957934": 238, "63222815493094": 238, "93818876751442": 238, "24990900987115": 238, "56734108451914": 238, "89043759063372": 238, "21915152075579": 238, "55343625752737": 238, "89324557045431": 238, "23853361269582": 238, "5892549178806": 238, "94536439694944": 238, "3068173350241": 238, "673569388302": 238, "04557658097677": 238, "42279530218443": 238, "80518230297476": 238, "19269469330796": 238, "58528993907609": 238, "98292585914936": 238, "38556062244679": 238, "79315274503132": 238, "20566108722895": 238, "62304485077178": 238, "04526357596481": 238, "47227713887621": 238, "90404574855089": 238, "34052994424728": 238, "78169059269696": 238, "22748888538703": 238, "67788633586511": 238, "1328447770666": 238, "59232635866421": 238, "05629354443944": 238, "52470910967588": 238, "997536138574155": 238, "47473802168829": 238, "95627845338341": 238, "44212142931447": 238, "93223124392594": 238, "42657248797226": 238, "925110046058826": 238, "42780909420343": 238, "934635097417896": 238, "44555380730979": 238, "9605312597041": 238, "47953377228453": 238, "002527942254495": 238, "52948064401743": 238, "060359026876405": 238, "59513051275281": 238, "13376279392398": 238, "67622383077958": 238, "22248184959662": 238, "772505340332955": 238, "32626305443905": 238, "88372400268794": 238, "44485745302318": 238, "00963292842468": 238, "5780202047922": 238, "14998930884649": 238, "725510516047756": 238, "304554348531454": 238, "887091573061234": 238, "473093198998804": 238, "062530476290696": 238, "65537489347173": 238, "251598175685025": 238, "851172282718466": 238, "45406940705745": 238, "060261971953814": 238, "66972262951074": 238, "2824242587836": 238, "89833996389657": 238, "51744307217481": 238, "13970713229221": 238, "76510591243447": 238, "393613398477456": 238, "02520379218062": 238, "659851509395466": 238, "297531178288864": 238, "9382176375811": 238, "58188593479856": 238, "2285113245409": 238, "87806926676262": 238, "53053542506888": 238, "18588566502544": 238, "844096052482676": 238, "50514285191348": 238, "16900252476493": 238, "83565172782365": 238, "505067311594786": 238, "17722631869435": 238, "85210598225498": 238, "52968372434487": 238, "20993715439987": 238, "89284406766856": 238, "57838244367028": 238, "26653044466586": 238, "95726641414116": 238, "6505688753031": 238, "34641652958824": 238, "04478825518367": 238, "74566310556022": 238, "44902030801784": 238, "15483926224306": 238, "86309953887835": 238, "57378087810346": 238, "28686318822846": 238, "002326544298455": 238, "72015118670994": 238, "44031751983858": 238, "16280611067837": 238, "88759768749215": 238, "61467313847328": 238, "34401351041838": 238, "075600007411175": 238, "809413989517203": 238, "545436971489355": 238, "28365062148418": 238, "02403675978884": 238, "766577357558596": 238, "51125453556483": 238, "25805056295341": 238, "006947856013365": 238, "757928976955803": 238, "510976632702935": 238, "266073673687163": 238, "023203092660136": 238, "78234802351168": 238, "54349174009853": 238, "306617655082793": 238, "071709318780034": 238, "83875041801694": 238, "60772477499845": 238, "378616346184284": 238, "151409221174813": 238, "926087621606158": 238, "702635900054464": 238, "481038538949267": 238, "261280149495878": 238, "043345470606717": 238, "827219367841497": 238, "612886832356224": 238, "400332979860913": 238, "18954304958594": 238, "98050240325699": 238, "773196524078504": 238, "56761101572556": 238, "363731601344128": 238, "161544122559604": 238, "961034538493596": 238, "762188924788852": 238, "564993472642286": 238, "36943448784603": 238, "175498389836434": 238, "98317171075098": 238, "792441094492993": 238, "60329329580414": 238, "415715179344605": 238, "22969371878092": 238, "04521599588134": 238, "862269199618748": 238, "680840625280997": 238, "50091767358862": 238, "32248784981989": 238, "14553876294311": 238, "970058124756143": 238, "79603374903303": 238, "623453550677745": 238, "452305544884936": 238, "282577846307642": 238, "11425866823192": 238, "94733632175831": 238, "78179921499012": 238, "617635852228403": 238, "454834833173663": 238, "293384852134153": 238, "133274697240747": 238, "974493249668345": 238, "817029482863724": 238, "660872461779796": 238, "506011342116228": 238, "35243536956636": 238, "20013387907039": 238, "049096294074705": 238, "89931212579743": 238, "750770972500018": 238, "603462518764903": 238, "457376534779158": 238, "312502875624073": 238, "16883148057065": 238, "026352372380938": 238, "88505565661517": 238, "74493152094463": 238, "60597023447025": 238, "468162147046844": 238, "331497688612963": 238, "19596736852629": 238, "061561774904575": 238, "928271573972026": 238, "796087509411121": 238, "665000401719812": 238, "535001147574048": 238, "406080719195606": 238, "278230163725146": 238, "151440602600493": 238, "025703230940058": 238, "901009316931392": 238, "777350201224795": 238, "654717296331983": 238, "533102086029722": 238, "41249612476842": 238, "292891037085633": 238, "174278517024426": 238, "056650327556573": 238, "939998300010533": 238, "824314333504178": 238, "709590394382234": 238, "59581851565838": 238, "482990796461978": 238, "371099401489412": 238, "26013656045995": 238, "15009456757615": 238, "04096578098873": 238, "932742622265872": 238, "825417575866952": 238, "718983188620616": 238, "613432069207198": 238, "50875688764543": 238, "404950374783414": 238, "302005321793821": 238, "199914579673264": 238, "098671058745845": 238, "998267728170813": 238, "898697615454305": 238, "799953805965146": 238, "70202944245466": 238, "60491772458047": 238, "508611908434256": 238, "413105306073414": 238, "318391285056618": 238, "224463267983237": 238, "131314732036559": 238, "038939208530818": 238, "947330282461984": 238, "856481592062261": 238, "766386828358307": 238, "677039734733102": 238, "588434106491459": 238, "50056379042914": 238, "413422684405553": 238, "327004736919982": 238, "24130394669134": 238, "156314362241424": 238, "072030081481602": 238, "988445251302947": 238, "905554067169774": 238, "823350772716541": 238, "741829659348095": 238, "660985065843247": 238, "580811377961625": 238, "501303028053794": 238, "422454494674614": 238, "344260302199801": 238, "266715020445677": 238, "189813264292065": 238, "113549693308329": 238, "0379190113825": 238, "962915966353497": 238, "888535349646384": 238, "814771995910663": 238, "741620782661569": 238, "66907662992434": 238, "59713449988144": 238, "5257893965227": 238, "455036365298385": 238, "384870492775113": 238, "315286906294649": 238, "246280773635522": 238, "177847302677458": 238, "10998174106858": 238, "042679375895393": 238, "975935533355489": 238, "9097455784329815": 238, "844104914576621": 238, "779008983380595": 238, "714453264267965": 238, "650433274176737": 238, "586944567248538": 238, "523982734519873": 238, "461543403615942": 238, "399622238447008": 238, "338214938907271": 238, "2773172405762505": 238, "216924914422646": 238, "157033766510647": 238, "097639637708692": 238, "038738403400633": 238, "980325973199306": 238, "922398290662471": 238, "864951333011118": 238, "8079811108501005": 238, "751483667891096": 238, "695455080677859": 238, "6398914583137625": 238, "584788942191589": 238, "530143705725576": 238, "475951954085673": 238, "422209923934017": 238, "368913883163581": 238, "3160601306390065": 238, "26364499593957": 238, "211664839104299": 238, "160116050379188": 238, "108995049966528": 238, "0582982877763": 238, "008022243179646": 238, "958163424764374": 238, "908718370092502": 238, "859683645459806": 238, "81105584565737": 238, "762831593735111": 238, "715007540767264": 238, "667580365619819": 238, "620546774719887": 238, "573903501826978": 238, "527647307806172": 238, "481774980403183": 238, "436283334021286": 238, "391169209500087": 238, "346429473896143": 238, "302061020265391": 238, "258060767447386": 238, "214425659851333": 238, "1711526672438906": 238, "128238784538738": 238, "085681031587884": 238, "043476452974717": 238, "00162211780876": 238, "96011511952214": 238, "918952575667738": 238, "878131627719024": 238, "83764944087154": 238, "797503203846042": 238, "757690128693269": 238, "718207450600334": 238, "6790524276987275": 238, "6402223408738985": 238, "601714493576436": 238, "563526211634802": 238, "525654843069625": 238, "488097757909537": 238, "450852348008529": 238, "413916026864834": 238, "3772862294413075": 238, "340960411987296": 238, "304936051861989": 238, "269210647359234": 238, "233781717533804": 238, "198646802029114": 238, "1638034609063554": 238, "129249274475058": 238, "094981843125056": 238, "0609987871598445": 238, "027297746631326": 238, "993876381175918": 238, "960732369852034": 238, "9278634109789006": 238, "89526722197672": 238, "862941539208157": 238, "8308841178211384": 238, "799092731592963": 238, "7675651727757": 238, "7362992519428717": 238, "7052927978374113": 238, "674543657220878": 238, "6440496947239276": 238, "6138087926980202": 238, "5838188510683624": 238, "554077787188066": 238, "5245835356935213": 238, "4953340483609647": 238, "466327293964244": 238, "437561258133758": 238, "4090339432165684": 238, "3807433681376753": 238, "3526875682624397": 238, "324864595260151": 238, "297272516968725": 238, "269909417260525": 238, "242773395909296": 238, "2158625684582063": 238, "189175066088979": 238, "162709035492113": 238, "136462638738181": 238, "1104340531501937": 238, "0846214711770252": 238, "059023100267887": 238, "0336371627478456": 238, "0084618956943707": 238, "9834955508149106": 238, "958736394325482": 238, "9341827068302675": 238, "909832783202212": 238, "885684932464612": 238, "8617374776736835": 238, "837988755802108": 238, "814437117623546": 238, "791080927598103": 238, "7679185637587516": 238, "744948417598695": 238, "722168893959663": 238, "6995784109211374": 238, "6771753996904946": 238, "654958304494063": 238, "6329255824690807": 238, "6110757035565526": 238, "5894071503949956": 238, "5679184182150654": 238, "546608014735058": 238, "525474460057279": 238, "504516286565271": 238, "4837320388218966": 238, "463120273468266": 238, "442679559123501": 238, "4224084762853355": 238, "402305617231537": 238, "3823695859221483": 238, "362598997902538": 238, "34299248020726": 238, "3235486712647058": 238, "3042662208025515": 238, "2851437897539877": 238, "2661800501647296": 238, "2473736851007953": 238, "2287233885570528": 238, "210227865366525": 238, "1918858311104463": 238, "1736960120290667": 238, "155657144933195": 238, "137767977116478": 238, "1200272662684063": 238, "102433780388041": 238, "084986297698459": 238, "067683606561906": 238, "0505245053956553": 238, "0335078025885633": 238, "0166323164183186": 238, "9998968749693773": 238, "9833003160515799": 238, "966841487119443": 238, "9505192451921207": 238, "9343324567740308": 238, "918279997776139": 238, "902360753437897": 238, "8865736182498285": 238, "8709174958767563": 238, "855391299081668": 238, "8399939496502136": 238, "8247243783158276": 238, "8095815246854756": 238, "7945643371660143": 238, "779671772891164": 238, "7649027976490874": 238, "7502563858105686": 238, "735731520257788": 238, "7213271923136897": 238, "707042401671933": 238, "6928761563274273": 238, "6788274725074415": 238, "6648953746032866": 238, "651078895102565": 238, "637377074521981": 238, "6237889613407095": 238, "6103136119343193": 238, "5969500905092417": 238, "583697469037785": 238, "5705548271936876": 238, "5575212522882065": 238, "5445958392067352": 238, "5317776903459486": 238, "519065915551469": 238, "5064596320560493": 238, "4939579644182694": 238, "4815600444617416": 238, "4692650112148198": 238, "4570720108508093": 238, "444980196628674": 238, "4329887288342331": 238, "4210967747218486": 238, "4093035084565948": 238, "397608111056908": 238, "3860097703377134": 238, "374507680854022": 238, "363101043844997": 238, "3517890671784847": 238, "3405709652960036": 238, "3294459591581924": 238, "3184132761907097": 238, "3074721502305822": 238, "296621821472999": 238, "285861536418547": 238, "2751905478208843": 238, "2646081146348473": 238, "25411350196499": 238, "243705981014548": 238, "2333848290348286": 238, "2231493292750186": 238, "2129987709324102": 238, "2029324491030389": 238, "1929496647327325": 238, "1830497245685645": 238, "1732319411107115": 238, "1634956325647101": 238, "1538401227941097": 238, "144264741273518": 238, "1347688230420367": 238, "1253517086570837": 238, "1160127441485976": 238, "1067512809736235": 238, "0975666759712743": 238, "0884582913180672": 238, "0794254944836295": 238, "0704676581867731": 238, "0615841603519334": 238, "052774384065968": 238, "044037717535317": 238, "0353735540435156": 238, "0267812919090615": 238, "0182603344436314": 238, "0098100899106435": 238, "0014299714841648": 238, "9931193972081589": 238, "9848777899560724": 238, "9767045773907564": 238, "9685991919247202": 238, "9605610706807157": 238, "9525896554526485": 238, "944684392666813": 238, "93684473334345": 238, "9290701330586224": 238, "9213600519064084": 238, "913713954461407": 238, "9061313097415564": 238, "8986115911712592": 238, "8911542765448149": 238, "8837588479901554": 238, "8764247919328809": 238, "8691515990605959": 238, "861938764287539": 238, "8547857867195079": 238, "8476921696190746": 238, "8406574203710896": 238, "8336810504484725": 238, "8267625753782861": 238, "8199015147080925": 238, "8130973919725877": 238, "806349734660514": 238, "7996580741818463": 238, "7930219458352512": 238, "7864408887758153": 238, "7799144459830425": 238, "773442164229116": 238, "7670235940474242": 238, "760658289701347": 238, "7543458091533024": 238, "7480857140340488": 238, "7418775696122427": 238, "7357209447642488": 238, "7296154119442005": 238, "7235605471543096": 238, "7175559299154212": 238, "7116011432378139": 238, "7056957735922419": 238, "6998394108812178": 238, "6940316484105331": 238, "6882720828610156": 238, "6825603142605207": 238, "6768959459561558": 238, "6712785845867344": 238, "6657078400554596": 238, "6601833255028333": 238, "6547046572797917": 238, "6492714549210616": 238, "6438833411187405": 238, "6385399416960932": 238, "6332408855815681": 238, "6279858047830277": 238, "6227743343621933": 238, "6176061124093026": 238, "6124807800179763": 238, "6073979812602942": 238, "6023573631620776": 238, "5973585756783771": 238, "5924012716691645": 238, "5874851068752244": 238, "5826097398942482": 238, "5777748321571253": 238, "5729800479044308": 238, "5682250541631091": 238, "5635095207233506": 238, "5588331201156602": 238, "5541955275881165": 238, "549596421083819": 238, "5450354812185233": 238, "5405123912584614": 238, "5360268370983461": 238, "531578507239558": 238, "5271670927685138": 238, "5227922873352134": 238, "5184537871319659": 238, "5141512908722912": 238, "5098844997699978": 238, "5056531175184336": 238, "501456850269908": 238, "4972954066152871": 238, "49316849756375564": 238, "48907583652274883": 238, "4850171392780496": 238, "48099212397405156": 238, "4770005110941854": 238, "47304202344150814": 238, "4691163861194531": 238, "4652233265127397": 238, "4613625742684418": 238, "4575338612772131": 238, "4537369216546684": 238, "44997149172291906": 238, "44623730999226213": 238, "44253411714302116": 238, "43886165600753785": 238, "435219671552313": 238, "4316079108602958": 238, "4280261231133201": 238, "4244740595746862": 238, "42095147357188756": 238, "4174581204794805": 238, "anl21g": 238, "20000000": 238, "10000000": [238, 478], "8000000": 238, "7000000": 238, "6000000": 238, "5000000": 238, "4000000": 238, "3000000": 238, "2500000": 238, "2000000": 238, "1500000": 238, "1000000": [238, 397, 491], "700000": 238, "450000": 238, "300000": 238, "150000": 238, "100000": 238, "75000": 238, "45000": 238, "30000": 238, "20000": 238, "anl230": [238, 492], "613526668": 238, "297855435": 238, "727187438": 238, "73308465": 238, "163355654": 238, "758204067": 238, "029434886": 238, "142643217": 238, "802311802": 238, "139745474": 238, "60377253": 238, "854144705": 238, "657569095": 238, "78630707": 238, "919276787": 238, "545597486": 238, "870515298": 238, "723651739": 238, "469517564": 238, "920236044": 238, "250421103": 238, "914157135": 238, "564028588": 238, "972148711": 238, "9531381205": 238, "289005022": 238, "655880149": 238, "552560627": 238, "230818088": 238, "33371951": 238, "0762600675": 238, "6274274895": 238, "297874143": 238, "351697533": 238, "389431487": 238, "441101307": 238, "906239416": 238, "173010195": 238, "588845548": 238, "867867936": 238, "52370592": 238, "365657236": 238, "652230441": 238, "487308087": 238, "17312718": 238, "4581839703": 238, "1021129293": 238, "2857411294": 238, "37128205": 238, "7229954456": 238, "5624124557": 238, "5853643133": 238, "6911310325": 238, "015983811": 238, "870493801": 238, "8370168144": 238, "5176870353": 238, "5549736405": 238, "6633097734": 238, "456868952": 238, "9986828296": 238, "8006138583": 238, "743553151": 238, "515699456": 238, "525077633": 238, "6655871626": 238, "1108109446": 238, "6846132951": 238, "020443715": 238, "7306794585": 238, "1779708597": 238, "3749988803": 238, "8256124153": 238, "3860918616": 238, "6092934087": 238, "6159358022": 238, "1410094306": 238, "6671460946": 238, "7860231416": 238, "991795231": 238, "240596952": 238, "641769655": 238, "5378471923": 238, "5456809113": 238, "20952669": 238, "4028963093": 238, "4070294258": 238, "2258780287": 238, "5894981461": 238, "5018294927": 238, "8354441128": 238, "9581305463": 238, "6332739547": 238, "756709769": 238, "1064111359": 238, "104384252": 238, "5901761993": 238, "6054289339": 238, "1889407005": 238, "1817224203": 238, "9007508513": 238, "0415615901": 238, "322561324": 238, "6666300076": 238, "227694249": 238, "0085093381": 238, "2539965084": 238, "025825423": 238, "0650397323": 238, "661382463": 238, "52899448253": 238, "6881752212": 238, "3529099919": 238, "3276294795": 238, "8238826671": 238, "06360586325": 238, "38670618937": 238, "24814886996": 238, "21511643805": 238, "27888738716": 238, "25623729388": 238, "45050688763": 238, "7109012119": 238, "3570969319": 238, "10752658747": 238, "01116046394": 238, "38261550068": 238, "7404289753": 238, "14095103095": 238, "74834261593": 238, "94034677837": 238, "1594503212": 238, "76306982784": 238, "33420547776": 238, "5854757151": 238, "12138510692": 238, "39482654356": 238, "66570485197": 238, "96157835911": 238, "54700114364": 238, "94906859838": 238, "93957410727": 238, "46768357327": 238, "86225572033": 238, "17152855225": 238, "1672026675": 238, "182194901274": 238, "18574956269": 238, "71298520376": 238, "63012515857": 238, "16654461479": 238, "6885882102": 238, "806875214108": 238, "940983437144": 238, "40429176462": 238, "520917862195": 238, "514845800633": 238, "619257497467": 238, "910432764253": 238, "816969806958": 238, "5407012299": 238, "197374653642": 238, "391414951657": 238, "80385593927": 238, "795806966358": 238, "97603264331": 238, "819343288582": 238, "329825680668": 238, "743645239822": 238, "266769873977": 238, "843512085147": 238, "514163036063": 238, "271673805943": 238, "425258257312": 238, "349649491942": 238, "4352776368323": 238, "626164152342": 238, "39127684748": 238, "3921956869917": 238, "5356056715486": 238, "585483553667": 238, "1681859796745": 238, "673164786958": 238, "6836204325807": 238, "0578736322745": 238, "858052832201": 238, "6131968954546": 238, "3306993391": 238, "8892181163285": 238, "0979986074624": 238, "9103289928594": 238, "6580466633216": 238, "1979910916427": 238, "3939837719179": 238, "1164877023452": 238, "5182732454248": 238, "9466173467927": 238, "9992820785087": 238, "57499639659824": 238, "36448406813986": 238, "4540758223207": 238, "0170021832778": 238, "0729720865753": 238, "30093251744984": 238, "89324557045347": 238, "44212142931381": 238, "85117228271794": 238, "266530444665435": 238, "02320309265979": 238, "603293295803866": 238, "603462518764687": 238, "709590394382063": 238, "677039734732961": 238, "315286906294535": 238, "475951954085583": 238, "043476452974647": 238, "927863410978847": 238, "0590231002678454": 238, "3823695859221146": 238, "8553912990816415": 238, "4449801966286535": 238, "125351708657068": 238, "8764247919328679": 238, "83368105044846": 238, "6825603142605106": 238, "6279858047830184": 238, "5315785072395498": 238, "41745812047947384": 238, "anl33": [238, 459, 492], "389431496": 238, "5250776373": 238, "7860231444": 238, "9581305481": 238, "6666300089": 238, "8238826679": 238, "38261550112": 238, "96157835939": 238, "46768357343": 238, "712985203856": 238, "52091786225": 238, "391414951691": 238, "819343288602": 238, "843512085158": 238, "6261641523492": 238, "6836204325853": 238, "0979986074653": 238, "5182732454265": 238, "99928207850974": 238, "3644840681405": 238, "01700218327818": 238, "30093251745005": 238, "442121429313936": 238, "26653044466551": 238, "603293295803912": 238, "70959039438209": 238, "315286906294551": 238, "9278634109788544": 238, "5315785072395509": 238, "4174581204794747": 238, "anl70": [238, 492], "285741137": 238, "870493807": 238, "3749988843": 238, "7860231448": 238, "9581305486": 238, "5901762012": 238, "6666300092": 238, "06503973354": 238, "8238826681": 238, "45050688842": 238, "38261550126": 238, "33420547823": 238, "96157835948": 238, "46768357347": 238, "18219490144": 238, "712985203885": 238, "806875214206": 238, "520917862268": 238, "540701229962": 238, "391414951702": 238, "795806966393": 238, "81934328861": 238, "743645239842": 238, "843512085163": 238, "425258257324": 238, "626164152352": 238, "5854835536747": 238, "6836204325868": 238, "6131968954599": 238, "0979986074665": 238, "1164877023484": 238, "5182732454273": 238, "9466173467946": 238, "99928207851025": 238, "57499639659943": 238, "36448406814077": 238, "4540758223214": 238, "01700218327835": 238, "07297208657573": 238, "30093251745016": 238, "89324557045373": 238, "44212142931401": 238, "851172282718096": 238, "266530444665555": 238, "023203092659884": 238, "603293295803937": 238, "603462518764744": 238, "709590394382108": 238, "677039734732997": 238, "315286906294563": 238, "475951954085605": 238, "043476452974664": 238, "382369585922122": 238, "8553912990816472": 238, "444980196628658": 238, "1253517086570715": 238, "8764247919328707": 238, "6825603142605128": 238, "4174581204794752": 238, "anl703": [238, 492], "495382015": 238, "173010194": 238, "101899842": 238, "588845547": 238, "031724592": 238, "8678679345": 238, "523705918": 238, "365657235": 238, "652230439": 238, "487308085": 238, "77458428": 238, "173127178": 238, "0540386387": 238, "458183968": 238, "0549653093": 238, "1021129265": 238, "406469243": 238, "285741126": 238, "5311965104": 238, "371282046": 238, "4361390304": 238, "722995442": 238, "562412452": 238, "5853643096": 238, "691131029": 238, "0159838074": 238, "902643606": 238, "870493797": 238, "586528267": 238, "83701681": 238, "499870111": 238, "5176870306": 238, "871467366": 238, "554973636": 238, "663309769": 238, "4568689475": 238, "998682825": 238, "8006138536": 238, "7435531463": 238, "515699452": 238, "5250776294": 238, "494132147": 238, "665587159": 238, "4559257368": 238, "1108109409": 238, "6846132916": 238, "0204437114": 238, "7306794552": 238, "1779708564": 238, "4567170194": 238, "374998877": 238, "4369583244": 238, "825612412": 238, "3860918584": 238, "6092934057": 238, "6159357992": 238, "1410094276": 238, "5186099012": 238, "6671460916": 238, "0749133858": 238, "7860231383": 238, "386679526": 238, "9917952276": 238, "231937566": 238, "2405969487": 238, "641769652": 238, "5378471892": 238, "49780469": 238, "5456809085": 238, "1493426643": 238, "2095266872": 238, "0491520212": 238, "4028963065": 238, "4070294232": 238, "2258780261": 238, "5894981436": 238, "8602555952": 238, "5018294903": 238, "1601232268": 238, "8354441104": 238, "8737530911": 238, "9581305439": 238, "1004527613": 238, "6332739524": 238, "2019086774": 238, "7567097667": 238, "5455368996": 238, "1064111337": 238, "2603507948": 238, "1043842499": 238, "0047351946": 238, "5901761972": 238, "7455463434": 238, "6054289318": 238, "5479852672": 238, "1889406985": 238, "3757191409": 238, "1817224184": 238, "9007508494": 238, "0415615883": 238, "32256132225": 238, "6666300059": 238, "19607239834": 238, "22769424727": 238, "2680000423": 238, "0085093364": 238, "3211887077": 238, "25399650674": 238, "02653760376": 238, "0258254213": 238, "8021486024": 238, "06503973063": 238, "6793435837": 238, "6613824614": 238, "17521619215": 238, "5289944809": 238, "1713993169": 238, "6881752196": 238, "79874515237": 238, "35290999035": 238, "327629478": 238, "82388266566": 238, "06360586185": 238, "386706188": 238, "2481488686": 238, "2151164367": 238, "9642380785": 238, "27888738588": 238, "04654682774": 238, "2562372926": 238, "9960110961": 238, "45050688638": 238, "8985649189": 238, "71090121067": 238, "34783911944": 238, "3570969307": 238, "37163006916": 238, "1075265863": 238, "3619546085": 238, "01116046283": 238, "0085162294": 238, "3826154996": 238, "23541615054": 238, "74042897424": 238, "14095102993": 238, "74834261494": 238, "9403467774": 238, "15945032027": 238, "9112852723": 238, "76306982693": 238, "3420877744": 238, "3342054769": 238, "4824254597": 238, "5854757143": 238, "49643383172": 238, "12138510615": 238, "41811377004": 238, "3948265428": 238, "1089076952": 238, "66570485123": 238, "21734476871": 238, "96157835839": 238, "14065421956": 238, "04021998827": 238, "98825081118": 238, "35400427572": 238, "54700114296": 238, "01603124624": 238, "24818393441": 238, "7679024534": 238, "13606167518": 238, "94906859775": 238, "8379850538": 238, "46767207982": 238, "53595541071": 238, "77281157859": 238, "93957410668": 238, "82815930253": 238, "26031116629": 238, "08686494241": 238, "18702885426": 238, "46768357274": 238, "86269898122": 238, "332267809354": 238, "86225571983": 238, "46356744133": 238, "17152855178": 238, "04528252546": 238, "16720266705": 238, "64231856504": 238, "597756706135": 238, "18219490085": 238, "565330179474": 238, "93735982564": 238, "50847522331": 238, "50836820063": 238, "1857495623": 238, "80787950932": 238, "6601096528": 238, "04543633546": 238, "28406498159": 238, "7129852034": 238, "685556397875": 238, "571103575385": 238, "75452316727": 238, "6358985661": 238, "63012515824": 238, "16654461447": 238, "68858820989": 238, "65342895039": 238, "531642288104": 238, "80687521382": 238, "97552351955": 238, "54641702951": 238, "04051260275": 238, "99059471563": 238, "940983436878": 238, "44724961282": 238, "075937084675": 238, "404291764364": 238, "019997399428": 238, "52091786195": 238, "514845800393": 238, "61925749723": 238, "461073779174": 238, "67642683054": 238, "910432764034": 238, "816969806747": 238, "058461962795": 238, "305668017336": 238, "23747575008": 238, "540701229707": 238, "909893063712": 238, "047141481344": 238, "661892130294": 238, "470764470778": 238, "197374653468": 238, "572162770586": 238, "332224372192": 238, "221146142347": 238, "988845632435": 238, "391414951499": 238, "190968315865": 238, "155493362787": 238, "058706135165": 238, "679909646708": 238, "803855939126": 238, "22061154516": 238, "725426273328": 238, "11860523238": 238, "205384015504": 238, "795806966225": 238, "70460844994": 238, "751097056855": 238, "759042663985": 238, "556566285586": 238, "976032643188": 238, "853945388097": 238, "030844910849": 238, "351208673768": 238, "663354004313": 238, "819343288473": 238, "674891504937": 238, "08927604227": 238, "92524874269": 238, "048950117502": 238, "3298256805665": 238, "6405443474905": 238, "856918849556": 238, "857828112634": 238, "525141552571": 238, "74364523973": 238, "400969886531": 238, "387520612991": 238, "596408446352": 238, "923383512": 238, "266769873894": 238, "5274019838": 238, "608562699592": 238, "415922833893": 238, "857482195261": 238, "843512085072": 238, "286499214166": 238, "1010910041905": 238, "204042239462": 238, "514163035995": 238, "95226809518": 238, "441127210401": 238, "905416995633": 238, "271673805879": 238, "468247820002": 238, "425258257251": 238, "074549699497": 238, "349649491884": 238, "1857261952487": 238, "5195490643664": 238, "289448526674": 238, "435277636779": 238, "898374482664": 238, "621525520078": 238, "5489298122116": 238, "6261641522938": 238, "8001490473166": 238, "0191155416237": 238, "232572859629": 238, "391276847436": 238, "447199193641": 238, "353497410074": 238, "39219568695": 238, "694790478053": 238, "5356056715086": 238, "7233999501623": 238, "585483553629": 238, "0805181311885": 238, "1681859796377": 238, "8091648434115": 238, "965103336894": 238, "5985969735543": 238, "673164786924": 238, "1532265288074": 238, "004080430465": 238, "191881512881": 238, "6836204325498": 238, "4471028495595": 238, "4509293050835": 238, "6644755956956": 238, "0578736322466": 238, "6019927713355": 238, "26842160771": 238, "0294502162126": 238, "8580528321756": 238, "7278709594386": 238, "6131968954303": 238, "4889576630171": 238, "3306993390768": 238, "11457177": 238, "8173136645687": 238, "4162380548908": 238, "8892181163073": 238, "214673337407": 238, "3715560315036": 238, "3393381811468": 238, "0979986074428": 238, "6280104561665": 238, "9103289928407": 238, "9263796991586": 238, "6580466633036": 238, "0876612569164": 238, "1979910916257": 238, "9722292482452": 238, "3939837719016": 238, "44726742653": 238, "1164877023297": 238, "3864370699391": 238, "2422834752344": 238, "6695610688129": 238, "6541611643659": 238, "182323420291": 238, "2406272390308": 238, "8159833787619": 238, "895625772193": 238, "4671035473573": 238, "5182732454123": 238, "0372912305825": 238, "0126062875016": 238, "432952401327": 238, "2873417161136": 238, "565057667046": 238, "2556482822371": 238, "348919649905": 238, "8349295468468": 238, "7039812242245": 238, "9466173467827": 238, "5536140817047": 238, "515975333418": 238, "824927120741": 238, "4719120928593": 238, "4485841807029": 238, "74680338038166": 238, "35863066541714": 238, "2763230245933": 238, "49232862232213": 238, "9992820785007": 238, "7899998649087": 238, "8574758152695": 238, "19487674616823": 238, "79553818608974": 238, "6529602099067": 238, "76080337621516": 238, "11288476497697": 238, "70317411299374": 238, "52579004479594": 238, "5749963965917": 238, "84519863097785": 238, "3309403401719": 238, "0268998355794": 238, "9278868215656": 238, "0288391513515": 238, "3248196630074": 238, "811013093566": 238, "4827230693261": 238, "3353691704666": 238, "3644840681346": 238, "56571073221954": 238, "93479970806766": 238, "46760646043438": 238, "16008878301494": 238, "00830427193384": 238, "00840786161407": 238, "156649421486": 238, "44937141203366": 238, "88300659871342": 238, "45407582231647": 238, "15918582438084": 238, "99502712629456": 238, "95837196076369": 238, "0460722543527": 238, "2550576598362": 238, "58233363713188": 238, "02497958161544": 238, "58014699864773": 238, "24505772317283": 238, "01700218327443": 238, "89333770660522": 238, "87148686863063": 238, "94893588165453": 238, "12323302362023": 238, "39198710570426": 238, "75286597774556": 238, "20359507057572": 238, "74195597433916": 238, "36578505191486": 238, "0729720865726": 238, "86145896301889": 238, "72923838100789": 238, "6743526007134": 238, "69489221907779": 238, "78899497637285": 238, "95484459222692": 238, "19066963039049": 238, "49474239153088": 238, "86537783336392": 238, "30093251744769": 238, "79980358197997": 238, "36042773995743": 238, "98128030207039": 238, "66087422372235": 238, "3977591755787": 238, "19052063706373": 238, "03777901223914": 238, "93818876751175": 238, "89043759063112": 238, "89324557045177": 238, "94536439694696": 238, "04557658097433": 238, "19269469330557": 238, "38556062244446": 238, "6230448507695": 238, "90404574854865": 238, "22748888538486": 238, "59232635866208": 238, "99753613857206": 238, "44212142931242": 238, "92511004605683": 238, "44555380730784": 238, "00252794225259": 238, "59513051275095": 238, "2224818495948": 238, "883724002686165": 238, "57802020479046": 238, "30455434852975": 238, "06253047628903": 238, "85117228271684": 238, "669722629509145": 238, "51744307217325": 238, "39361339847593": 238, "297531178287365": 238, "22851132453944": 238, "18588566502401": 238, "169002524763535": 238, "177226318692995": 238, "20993715439854": 238, "266530444664554": 238, "34641652958697": 238, "4490203080166": 238, "57378087810225": 238, "720151186708755": 238, "88759768749099": 238, "07560000741003": 238, "283650621483062": 238, "511254535563737": 238, "757928976954734": 238, "02320309265909": 238, "30661765508177": 238, "607724774997447": 238, "926087621605177": 238, "261280149494922": 238, "61288683235529": 238, "980502403256075": 238, "363731601343233": 238, "762188924787974": 238, "175498389835578": 238, "6032932958033": 238, "04521599588052": 238, "500917673587818": 238, "970058124755358": 238, "45230554488417": 238, "947336321757557": 238, "454834833172928": 238, "974493249667628": 238, "506011342115524": 238, "04909629407402": 238, "603462518764236": 238, "168831480569995": 238, "74493152094399": 238, "331497688612338": 238, "928271573971417": 238, "535001147573453": 238, "15144060259991": 238, "777350201224225": 238, "412496124767863": 238, "05665032755603": 238, "709590394381705": 238, "371099401488895": 238, "040965780988225": 238, "718983188620122": 238, "404950374782933": 238, "098671058745374": 238, "799953805964686": 238, "508611908433807": 238, "224463267982797": 238, "947330282461552": 238, "677039734732677": 238, "41342268440514": 238, "15631436224102": 238, "90555406716938": 238, "66098506584286": 238, "422454494674236": 238, "189813264291697": 238, "962915966353139": 238, "741620782661217": 238, "525789396522356": 238, "31528690629431": 238, "10998174106825": 238, "909745578432658": 238, "714453264267648": 238, "523982734519564": 238, "338214938906969": 238, "157033766510352": 238, "980325973199018": 238, "80798111084982": 238, "639891458313488": 238, "475951954085406": 238, "316060130638745": 238, "160116050378933": 238, "008022243179397": 238, "8596836454595636": 238, "715007540767027": 238, "573903501826746": 238, "436283334021058": 238, "302061020265169": 238, "171152667243674": 238, "043476452974505": 238, "918952575667531": 238, "7975032038458405": 238, "67905242769853": 238, "56352621163461": 238, "4508523480083415": 238, "340960411987113": 238, "233781717533626": 238, "129249274474883": 238, "027297746631155": 238, "927863410978734": 238, "8308841178209754": 238, "7362992519427123": 238, "6440496947237717": 238, "554077787187914": 238, "4663272939640954": 238, "38074336813753": 238, "2972725169685835": 238, "215862568458068": 238, "1364626387380463": 238, "059023100267756": 238, "9834955508147827": 238, "9098327832020874": 238, "837988755801986": 238, "767918563758632": 238, "69957841092102": 238, "632925582468966": 238, "567918418214954": 238, "5045162865651616": 238, "442679559123394": 238, "3823695859220435": 238, "3235486712646036": 238, "2661800501646296": 238, "210227865366427": 238, "1556571449330995": 238, "102433780387948": 238, "0505245053955643": 238, "999896874969288": 238, "9505192451920337": 238, "9023607534378122": 238, "855391299081585": 238, "8095815246853946": 238, "7649027976490081": 238, "7213271923136122": 238, "678827472507366": 238, "6373770745219072": 238, "5969500905091698": 238, "5575212522881363": 238, "5190659155514006": 238, "481560044461675": 238, "4449801966286089": 238, "4093035084565313": 238, "37450768085396": 238, "3405709652959432": 238, "3074721502305233": 238, "2751905478208265": 238, "2437059810144917": 238, "212998770932355": 238, "1830497245685108": 238, "1538401227940573": 238, "1253517086570326": 238, "0975666759712244": 238, "0704676581867243": 238, "0440377175352693": 238, "0182603344435848": 238, "9931193972081133": 238, "9685991919246757": 238, "9446843926667695": 238, "9213600519063658": 238, "8986115911712176": 238, "8764247919328402": 238, "854785786719468": 238, "8336810504484334": 238, "8130973919725495": 238, "7930219458352139": 238, "7734421642290796": 238, "7543458091532669": 238, "7357209447642141": 238, "7175559299153874": 238, "699839410881185": 238, "6825603142604886": 238, "6657078400554282": 238, "649271454921031": 238, "6332408855815382": 238, "627985804782998": 238, "6124807800179475": 238, "5973585756783489": 238, "5826097398942206": 238, "568225054163082": 238, "55419552758809": 238, "5405123912584354": 238, "5315785072395324": 238, "5184537871319407": 238, "5056531175184089": 238, "49316849756373154": 238, "48099212397402796": 238, "4691163861194301": 238, "45753386127719065": 238, "44623730999224015": 238, "4352196715522915": 238, "4244740595746653": 238, "4174581204794599": 238, "anl9": [238, 492], "525077638": 238, "38261550124": 238, "6836204325873": 238, "anl94g": 238, "14000000": 238, "12000000": 238, "11000000": 238, "10600000": 238, "9500000": 238, "9000000": 238, "8500000": 238, "7750000": 238, "7500000": 238, "7250000": 238, "6750000": 238, "6500000": 238, "6250000": 238, "5750000": 238, "5500000": 238, "5400000": 238, "5200000": 238, "4700000": 238, "4500000": 238, "4400000": 238, "4200000": 238, "3900000": 238, "3800000": 238, "3650000": 238, "3500000": 238, "3333000": 238, "3166000": 238, "2833000": 238, "2666000": 238, "2333000": 238, "2166000": 238, "1875000": 238, "1750000": 238, "1660000": 238, "1600000": 238, "1420000": 238, "1330000": 238, "1250000": 238, "1200000": 238, "1125000": 238, "900000": 238, "865000": 238, "825000": 238, "800000": 238, "750000": 238, "675000": 238, "650000": 238, "625000": 238, "600000": 238, "575000": 238, "550000": 238, "525000": 238, "500000": 238, "425000": 238, "400000": 238, "375000": 238, "350000": 238, "325000": 238, "260000": 238, "220000": 238, "190000": 238, "160000": 238, "140000": 238, "120000": 238, "90000": 238, "80000": 238, "65000": 238, "60000": 238, "55000": 238, "40000": 238, "35000": 238, "15000": 238, "10000": 238, "armi33": [238, 492], "armi45": [238, 492], "casmo12": 238, "2230000": 238, "821000": 238, "058": [238, 473], "casmo4": 238, "cinder63": [238, 492], "25000000": 238, "16905000": 238, "14918000": 238, "6065000": 238, "4965800": 238, "3678800": 238, "2865100": 238, "2231300": 238, "1737700": 238, "1353400": 238, "1108000": 238, "820850": 238, "639280": 238, "497900": 238, "388700": 238, "302000": 238, "183200": 238, "111100": 238, "67380": 238, "40870": 238, "25540": 238, "19890": 238, "15030": 238, "9119": 238, "5531": 238, "3355": 238, "2840": 238, "2404": 238, "454": 238, "315": 238, "043": 238, "059": [238, 473], "683": 238, "067": 238, "042": [238, 473], "035": [238, 473], "015": 238, "005": [238, 285, 342, 470, 473, 492], "shem33_361": 238, "19640300": 238, "9999990": 238, "6065300": 238, "1336940": 238, "860006": 238, "494002": 238, "320646": 238, "195008": 238, "115624": 238, "24999": 238, "14899": 238, "3481": 238, "2084": 238, "1134": 238, "517": 238, "999": 238, "519": 238, "098": 238, "3083": 238, "3038": 238, "5356": 238, "546": [238, 471], "30032": 238, "88217": 238, "520011": 238, "431579": 238, "shem361": 238, "14918200": 238, "13840300": 238, "11618300": 238, "9048360": 238, "8187300": 238, "7408170": 238, "6703190": 238, "4965850": 238, "4065690": 238, "2725310": 238, "1901390": 238, "1636540": 238, "1405770": 238, "1286960": 238, "1162050": 238, "1051150": 238, "951119": 238, "706511": 238, "456021": 238, "412501": 238, "383884": 238, "267826": 238, "230014": 238, "164999": 238, "94664": 238, "29281": 238, "26100": 238, "22699": 238, "18584": 238, "16200": 238, "2996": 238, "2397": 238, "1811": 238, "1343": 238, "1064": 238, "494": 238, "909": 238, "681": 238, "832": 238, "646": 238, "837": 238, "099": 238, "577": 238, "539": 238, "746": 238, "419": 238, "094": 238, "575": 238, "335": 238, "323": 238, "928": 238, "922": [238, 471, 473, 479], "327": 238, "888": 238, "796": 238, "958": 238, "996": 238, "078": 238, "877": 238, "952": [238, 471], "056": [238, 473], "657": 238, "701": 238, "524": 238, "854": 238, "038": 238, "605": 238, "594": 238, "3287": 238, "3256": 238, "7741": 238, "9393": 238, "3679": 238, "3322": 238, "5595": 238, "8869": 238, "0682": 238, "8261": 238, "4929": 238, "1612": 238, "8312": 238, "5029": 238, "046": [238, 473], "5923": 238, "6306": 238, "925": 238, "0595": 238, "9895": 238, "7847": 238, "2591": 238, "5173": 238, "2053": 238, "2904": 238, "1721": 238, "1246": 238, "1441": 238, "7295": 238, "7874": 238, "7919": 238, "8588": 238, "4191": 238, "0568": 238, "698": 238, "5392": 238, "0855": 238, "693": 238, "8852": 238, "6578": 238, "3788": 238, "1557": 238, "0011": 238, "7018": 238, "4859": 238, "2296": 238, "1448": 238, "0604": 238, "9763": 238, "7676": 238, "6847": 238, "6021": 238, "5199": 238, "4175": 238, "2751": 238, "0734": 238, "5974": 238, "3927": 238, "0848": 238, "9591": 238, "759": 238, "5648": 238, "4457": 238, "8305": 238, "5501": 238, "0498": 238, "7792": 238, "8662": 238, "7301": 238, "5952": 238, "4702": 238, "0496": 238, "3297": 238, "4721": 238, "1302": 238, "9795": 238, "8153": 238, "7094": 238, "5894": 238, "2694": 238, "0529": 238, "8038": 238, "5793": 238, "50002": 238, "14031": 238, "97995": 238, "80038": 238, "67369": 238, "52407": 238, "13027": 238, "97008": 238, "83965": 238, "73994": 238, "60035": 238, "38015": 238, "13987": 238, "99429": 238, "91778": 238, "87021": 238, "83526": 238, "8107": 238, "79165": 238, "77605": 238, "75981": 238, "74225": 238, "71668": 238, "63126": 238, "60611": 238, "58829": 238, "57184": 238, "55609": 238, "53907": 238, "51492": 238, "48178": 238, "43206": 238, "35978": 238, "28016": 238, "16011": 238, "05991": 238, "96014": 238, "80021": 238, "72015": 238, "61979": 238, "53004": 238, "48817": 238, "41025": 238, "38003": 238, "32011": 238, "21008": 238, "10997": 238, "93323": 238, "76785": 238, "4198": 238, "30981": 238, "21983": 238, "71209": 238, "54307": 238, "14211": 238, "88405": 238, "77512": 238, "74092": 238, "7199": 238, "70012": 238, "64004": 238, "62005": 238, "59009": 238, "46994": 238, "33006": 238, "27299": 238, "21709": 238, "15695": 238, "0701": 238, "98992": 238, "90008": 238, "77997": 238, "66895": 238, "58803": 238, "51998": 238, "44397": 238, "41001": 238, "38098": 238, "33095": 238, "29304": 238, "25094": 238, "21397": 238, "16999": 238, "14797": 238, "12997": 238, "11605": 238, "10395": 238, "09198": 238, "07799": 238, "03499": 238, "02101": 238, "00904": 238, "996501": 238, "981959": 238, "96396": 238, "944022": 238, "919978": 238, "880024": 238, "800371": 238, "719999": 238, "624999": 238, "594993": 238, "55499": 238, "475017": 238, "390001": 238, "352994": 238, "325008": 238, "305012": 238, "279989": 238, "254997": 238, "231192": 238, "20961": 238, "190005": 238, "161895": 238, "137999": 238, "119995": 238, "104298": 238, "0897968": 238, "0764969": 238, "0651999": 238, "0554982": 238, "0473019": 238, "0402999": 238, "0343998": 238, "0292989": 238, "0249394": 238, "0200104": 238, "01483": 238, "0104505": 238, "00714526": 238, "00455602": 238, "0024999": 238, "test_fissionproductmodel": [239, 243], "testfissionproductmodellumpedfissionproduct": [239, 243, 244], "testfissionproductmodelexplicitmc2librari": [239, 243, 244], "test_lumpedfissionproduct": [239, 243], "getdummylfpfil": [239, 243, 245], "testfissionproductdefinitionfil": [239, 243, 245], "testlumpedfissionproduct": [239, 243, 245], "testlumpedfissionproductcollect": [239, 243, 245], "testlumpedfissionproductsfromreferencefil": [239, 243, 245], "testlumpedfissionproductsexplicit": [239, 243, 245], "testmo99lfp": [239, 243, 245], "setallcomponentfissionproduct": [239, 240], "setallblocklfp": [239, 240], "getgloballumpedfissionproduct": [239, 240], "setgloballumpedfissionproduct": [239, 240], "getallfissionproductnam": [239, 240, 242], "removefissiongasesfromblock": [239, 240], "getgaseousyieldfract": [239, 242], "gettotalyield": [239, 242], "getmassfracdenom": [239, 242], "printdens": [239, 242, 280, 308], "getlumpedfissionproductnam": [239, 242], "getallfissionproductnuclidebas": [239, 242], "createlfpsfromfil": [239, 242], "createsinglelfpfromfil": [239, 242], "inventori": [240, 282, 389], "fidel": [240, 285, 296, 468, 483, 484], "substanti": [240, 285], "fpmodel": [240, 492], "lfp": [240, 242, 285, 291, 305, 308, 342], "casmo": 240, "referencefissionproduct": [240, 245], "dat": [240, 245, 491, 492], "nuclideflag": [240, 280, 286, 291, 462, 492], "quick": [240, 247, 347, 432, 441, 466, 469, 475, 481, 490, 491, 492, 500], "aim": [240, 386, 468], "fpmodellibrari": [240, 492], "autoupdatenuclideflag": [240, 280, 286, 291], "vision": 240, "multi": [240, 249, 254, 285, 324, 333, 339, 440, 451, 465, 466, 467, 470, 473, 478, 481, 492, 496], "origen": [240, 492], "caveat": [240, 393, 439, 491], "box": [240, 279, 456], "getallnuclidebasesbylibrari": [240, 280, 286, 291], "setlumpedfissionproduct": [240, 280, 302, 305, 308], "depletioninterfac": 240, "buildfissionproduct": 240, "getlumpedfissionproductcollect": [240, 242, 280, 285, 302, 305, 308], "fp": [242, 244, 245], "yld": 242, "fpd": 242, "9773e": 242, "lfpden": 242, "objectwithparentdens": 242, "densfunc": 242, "fpdensiti": 242, "oldmassfrac": 242, "9000e": 242, "4000e": 242, "6000e": 242, "lfpcompositionfilepath": [242, 492], "test_loadgloballfpsfromfil": [243, 244], "test_getallfissionproductnam": [243, 244, 245], "test_fpappl": [243, 244], "test_nuclideflag": [243, 244, 293, 296], "test_nuclidesinmodelfuel": [243, 244], "test_nuclidesinmodelalldepletableblock": [243, 244], "test_createlfp": [243, 245], "test_createreferencelfp": [243, 245], "test_getyield": [243, 245], "test_gaseousyieldfract": [243, 245], "test_printdens": [243, 245, 344, 348], "test_isga": [243, 245], "test_getallfissionproductnuclidebas": [243, 245], "test_getnumberdens": [243, 245, 344, 346, 347, 348], "test_getmassfrac": [243, 245], "test_fissionproductyield": [243, 245], "test_explicitfissionproduct": [243, 245], "lumpedfissionproduc": 245, "explicitfissionproduct": [245, 471, 492], "test_globalfluxinterfac": [246, 248], "mockcoreparam": [246, 248, 249], "mockglobalfluxinterfac": [246, 248, 249], "mockglobalfluxwithexecut": [246, 248, 249], "mockglobalfluxwithexecutersnonuniform": [246, 248, 249], "mockglobalfluxexecut": [246, 248, 249], "testglobalfluxopt": [246, 248, 249], "testglobalfluxinterfac": [246, 248, 249], "testglobalfluxinterfacewithexecut": [246, 248, 249], "testglobalfluxinterfacewithexecutersnonuniform": [246, 248, 249], "testglobalfluxresultmapp": [246, 248, 249], "testglobalfluxutil": [246, 248, 249], "applydummyflux": [246, 248, 249], "checkenergybal": [246, 247], "getiofilenam": [246, 247], "calculatekeff": [246, 247], "getoptionscl": [246, 247], "getexecutercl": [246, 247, 248, 249], "getexecuteropt": [246, 247, 248, 249], "getexecut": [246, 247], "getlabel": [246, 247, 327, 331, 332], "edgeassembliesareneed": [246, 247], "getkeff": [246, 247], "clearflux": [246, 247], "getdpax": [246, 247], "getburnuppeakingfactor": [246, 247], "updatedpar": [246, 247], "updatemaxdpaparam": [246, 247], "updatefluenceanddpa": [246, 247], "updatecycledoseparam": [246, 247], "updateloadpaddos": [246, 247], "versu": 247, "tightli": [247, 486], "coupledit": 247, "additionallabel": 247, "stdname": 247, "eigenvalu": [247, 324, 486, 492], "interoper": [247, 364], "myriad": 247, "blank": [247, 364, 386, 440, 479, 484], "calc": [247, 249, 324, 347, 399], "calcreactionratesonmeshconvers": 247, "recalcul": [247, 285, 324], "remap": [247, 324], "eigenvalueproblem": 247, "includefixedsourc": 247, "eig": 247, "fredholm": 247, "satisfi": [247, 249, 279, 308, 326, 327, 467], "uniform": [247, 249, 281, 285, 286, 290, 304, 310, 312, 313, 318, 323, 324, 334, 339, 342, 452, 470, 471, 484, 486, 488, 492], "aclpdoselimit": [247, 492], "detailedaxialexpans": [247, 310, 318, 323, 324, 336, 339, 342, 471, 492], "dpaperflu": [247, 484, 492], "dirti": [247, 492], "dpapeak": [247, 492], "fastfluencepeak": [247, 484, 492], "energydepocalcmethodstep": 247, "epseigenvalu": 247, "epsfissionsourceavg": 247, "epsfissionsourcepoint": 247, "rz": [247, 280, 281, 312, 321, 326, 353, 445, 449, 466, 468, 470, 481], "rzt": [247, 280, 312, 326, 327, 334, 342, 353], "hasnonuniformassem": 247, "isrestart": 247, "guess": [247, 398, 426, 480, 492], "kernelnam": 247, "loadpadelev": [247, 492], "elev": [247, 281, 402, 480, 483, 492], "aclp": [247, 280, 318, 325, 486, 492], "plate": [247, 281, 327, 342, 467, 475, 479, 486, 488, 492], "loadpadlength": [247, 492], "maxout": 247, "savephysicsfileslist": 247, "timestamp": 247, "symmetri": [247, 280, 281, 285, 290, 308, 326, 327, 328, 329, 331, 332, 333, 334, 335, 342, 386, 454, 462, 468, 470, 471, 479, 480, 483, 488], "xskernel": [247, 492], "pn": 247, "edg": [247, 285, 308, 312, 320, 324, 336, 339, 342, 382, 386, 402, 468, 484, 492], "unifi": [247, 318, 334], "pipe": [247, 356, 475], "delta": [247, 352, 475, 476, 483, 484, 498], "burnuppeakingfactor": [247, 492], "avg": [247, 342, 398, 475, 486], "depletionsecond": 247, "fluenc": [247, 479, 484], "shift": [247, 342, 470, 489], "stateless": [247, 279, 435], "mapper": [247, 471], "getblock": [247, 280, 281, 285, 342, 436, 446, 447, 455, 463, 473, 475], "steptimeinsecond": 247, "detaileddpa": [247, 484, 486], "detaileddpapeak": [247, 484], "dpapeakfromflu": [247, 484], "inaccur": 247, "ran": [247, 478], "mgflux": [247, 251, 252, 260, 285, 308, 324, 454, 473, 475, 484], "accru": [247, 484], "maxdetaileddpathiscycl": [247, 486], "dpafullwidthhalfmax": [247, 486], "elevationofaclp3cycl": [247, 486], "elevationofaclp7cycl": [247, 486], "accumul": [247, 339, 342, 479, 484, 485], "loadpaddpapeak": [247, 486], "loadpaddpaavg": [247, 486], "_calcloadpaddos": 247, "dpax": 247, "incur": 247, "exposur": 247, "convolut": 247, "dpapersecond": 247, "n_": 247, "dr": 247, "nht9": 247, "nusigf": 247, "nufiss": 247, "uncommonli": 247, "int_": [247, 324], "e_g": 247, "test_readfromset": [248, 249], "test_readfromreactor": [248, 249], "test_savephysicsfil": [248, 249], "test_computedpar": [248, 249], "test_interact": [248, 249], "test_getiofilenam": [248, 249], "test_gethistoryparam": [248, 249], "test_checkenergybal": [248, 249], "test_executerinteract": [248, 249], "test_calculatekeff": [248, 249], "test_getexecutercl": [248, 249], "test_settightcouplingdefault": [248, 249], "test_gettightcouplingvalu": [248, 249], "test_executerinteractionnonuniformassem": [248, 249], "test_mapp": [248, 249], "test_getdpax": [248, 249], "test_getburnuppeakingfactor": [248, 249], "test_getburnuppeakingfactorzero": [248, 249], "test_calcreactionr": [248, 249], "fake": [249, 318, 473], "gf": 249, "pcm": [249, 486, 491], "reli": [249, 302, 331, 334, 454, 480], "swing": [249, 486], "observ": 249, "mockgeometrytransform": 249, "mockexecut": 249, "t_armi_flux_geom_transform_check_call_ord": 249, "r_armi_flux_geom_transform": 249, "acceptance_criteria": 249, "mockconverterfactori": 249, "broad": [249, 254, 471, 475, 491, 492, 494], "nonuniform": 249, "t_armi_flux_geom_transform_check_converter_cal": 249, "ratetyp": [250, 251], "setnam": [250, 251, 280, 302, 305, 308], "addmultigroupx": [250, 251], "hasvalu": [250, 251], "getxsect": [250, 251], "addtodeplet": [250, 252], "settodeplet": [250, 252], "gettodeplet": [250, 252], "setchemicalvector": [250, 252], "getchemicalvector": [250, 252], "alongsid": [251, 480], "prove": [251, 296, 300, 355, 367, 384, 438, 440, 468], "unpleas": 251, "therein": 251, "xstabl": 251, "nf": [251, 252, 308], "n3n": [251, 252, 308], "3n": 251, "micromultigroupx": 251, "totalflux": 251, "headerformat": [251, 252], "xsec": [251, 252], "tableformat": [251, 252], "mcnpid": [251, 252], "deck": [251, 252], "absent": 251, "silent": 252, "componentblueprint": [252, 280, 286, 288, 296, 297, 462], "insertdepletablenuclidekei": [252, 280, 286, 289, 296], "loss": [252, 310, 483, 484, 488], "_depletebynam": 252, "oject": 252, "waitforjob": 252, "comm": [252, 436], "comm_self": 252, "cpi": 252, "maxproc": 252, "compositenam": 252, "getmgflux": [252, 280, 285, 308], "makecrosssectiont": 252, "todeplet": 252, "chemicalvector": 252, "test_latticeinterfac": [253, 256], "latticeinterfacetest": [253, 256, 257], "latticeinterfacetesterlibfals": [253, 256, 257], "testlatticephysicsinterfacebas": [253, 256, 257], "testlatticephysicsinterfac": [253, 256, 257], "testlatticephysicslibrarycr": [253, 256, 257], "test_latticewrit": [253, 256], "fakelatticephysicswrit": [253, 256, 258], "testlatticephysicswrit": [253, 256, 258], "updatexslibrari": [253, 254], "readexistingxslibrari": [253, 254, 256, 257], "makecyclexsfilesasbasefil": [253, 254], "clearx": [253, 254, 492], "computecrosssect": [253, 254], "generatelatticephysicsinput": [253, 254], "getwrit": [253, 254], "getread": [253, 254], "getrepresentativeblock": [253, 254], "unused_categori": [253, 255], "fuel_categori": [253, 255], "structure_categori": [253, 255], "coolant_categori": [253, 255], "fission_product_categori": [253, 255], "undeplet": [253, 255], "neutronveloc": 254, "mgneutronveloc": [254, 484], "genx": [254, 479, 480, 492], "runlatticephysicsbeforeshuffl": 254, "weather": 254, "reson": 254, "lifetim": [254, 486, 497], "basi": [254, 312, 333, 468, 479], "forceseri": 254, "book": [254, 440], "xswriter": 254, "bc": 254, "returnedfromwrit": 254, "agent": 254, "cyclic": [254, 391, 486], "seek": [255, 385, 426], "generateexclusivegammax": 255, "test_includegammax": [256, 257], "test_latticephysicsinterfac": [256, 257], "test_interacteverynodefirstcoupl": [256, 257], "test_interacteverynodeal": [256, 257], "test_interactfirstcouplediter": [256, 257, 263, 264], "test_interactal": [256, 257], "test_libcreation_nogenx": [256, 257], "test_libcreation_genx": [256, 257], "test_libcreation_nogenxs_2": [256, 257], "test_libcreation_genxs_2": [256, 257], "test_libcreation_genxs_3": [256, 257], "test_latticephysicswrit": [256, 258], "test_writetitl": [256, 258], "test_issourcedriven": [256, 258], "test_isgammaxsgenerationen": [256, 258], "test_getallnuclidesbytemperatureincnon": [256, 258], "test_getallnuclidesbytemperatureinc": [256, 258], "test_getallnuclidesbytemperatureincexplicitfissionproduct": [256, 258], "test_getavgnuclidetemperatureinc": [256, 258], "test_getfueltemperatur": [256, 258], "test_getdetailedfissionproduct": [256, 258], "test_getdetailedfissionproductspass": [256, 258], "test_getdetailedfpdens": [256, 258], "test_iscriticalbucklingsearchact": [256, 258], "test_getdriverblock": [256, 258], "_newlibraryshouldbecr": 257, "flip": 257, "testverif": 257, "gen": [257, 264], "sigma_i": 259, "interactxyz": 259, "macroxsgen": 259, "blistsom": 259, "gxg": 259, "fluxrecon": [259, 285, 492], "computepinmgfluxandpow": 259, "huge": [259, 426], "denot": [261, 438], "addtion": 261, "subsectionhead": 261, "areal": [261, 486, 494], "test_add": [263, 264, 344, 345, 346], "test_getblocksingroup": [263, 264], "test_is_pickl": [263, 264], "test_createrepresentativeblock": [263, 264], "test_performaveragebycompon": [263, 264], "test_checkblocksimilar": [263, 264], "test_createrepresentativeblockdissimilar": [263, 264], "test_getaveragecomponentnumberdens": [263, 264], "test_getaveragecomponenttemperatur": [263, 264], "test_getaveragecomponenttemperaturevariedweight": [263, 264], "test_getaveragecomponenttemperaturenomass": [263, 264], "test_componentaveragerepblock": [263, 264], "test_componentaverage1dcylind": [263, 264], "test_checkcomponentconsist": [263, 264], "test_invalidweight": [263, 264], "test_updateburnupgroup": [263, 264], "test_setbugroupbound": [263, 264], "test_addxsgroupsfromblock": [263, 264], "test_calcweightedburnup": [263, 264], "test_getnextavailablexstyp": [263, 264], "test_getrepresentativeblock": [263, 264], "test_createrepresentativeblocksusingexistingblock": [263, 264], "test_interactallcoupl": [263, 264], "test_xsgmisrunbeforex": [263, 264], "test_copypregeneratedfil": [263, 264], "test_convers": [263, 264], "test_conversion_2digit": [263, 264], "test_crosssect": [263, 265], "test_pregeneratedcrosssect": [263, 265], "test_pregeneratedfluxinput": [263, 265], "test_priorit": [263, 265], "test_homogeneousxsdefaultsettingassign": [263, 265], "test_setdefaultsettingsbylowestbugrouphomogen": [263, 265], "test_setdefaultsettingsbylowestbugrouponedimension": [263, 265], "test_optionalkei": [263, 265], "test_badcrosssect": [263, 265], "test_yamlio": [263, 265, 344, 350], "test_caseset": [263, 265], "test_csblockrepresent": [263, 265], "test_csblockrepresentationfileloc": [263, 265], "test_xssettingssetdefault": [263, 265], "test_maket": [263, 266], "test_isotopicdepletioninterfac": [263, 266], "test_invalidgroupstructuretyp": [263, 267], "test_consistenciesbetweengroupstructureandgroupstructuretyp": [263, 267], "test_getfastfluxgroupcutoff": [263, 267], "test_macroxsgenerationinterfacebas": [263, 268], "test_customsettingobjectio": [263, 269], "test_customsettingroundtrip": [263, 269], "test_neutronicssettingsload": [263, 269], "test_kineticsparameterassign": [263, 269], "test_neutronicssettingsvalid": [263, 269], "dissimilar": [264, 312], "zppr": [264, 285, 468], "cylind": 264, "whip": [265, 333, 470], "forth": 269, "test_runningdirectorypath": [271, 272], "test_collectinputsandoutput": [271, 272], "test_updaterundir": [271, 272], "test_runexternalexecut": [271, 272], "hydraul": [273, 275, 276, 277, 285, 339, 342, 468, 471, 476, 479, 488, 491, 492], "concern": [276, 488], "stock": 278, "mutat": [278, 367], "cheapli": 278, "altitud": 279, "subtl": 279, "exercis": 279, "forget": [279, 473, 494], "ergonom": [279, 326], "lest": 279, "endeavor": 279, "redesign": 279, "parametercollect": [279, 280, 308, 336, 339, 340, 379], "yamliz": [279, 286, 287, 288, 289, 290, 291, 292, 426], "metaclass": [279, 305, 308, 336, 340], "pluginmagag": 279, "notic": [279, 329, 333, 435, 436, 439, 440, 479], "staticmethod": [279, 324, 334, 435, 475], "preclud": 279, "componenttyp": [279, 280, 302, 305], "registr": [279, 305, 475], "surpris": [279, 308, 325, 491], "ersatz": 279, "favor": [279, 343], "predat": 279, "unstabl": [279, 308, 470], "peramet": 279, "pluginblockparam": 279, "createbuild": [279, 336, 339], "defparam": [279, 336, 339], "plugblkp1": 279, "pluginassemparam": 279, "plugasmp1": 279, "constraint": [279, 402, 433, 484], "alter": [279, 394, 491], "novel": 279, "bitfield": [279, 325], "blocktyp": [279, 281, 342], "largest": [279, 285, 308, 311, 386], "rtype": 279, "suspect": 279, "ceas": 279, "beyond": [279, 302, 435, 468, 473, 479], "elsewher": [279, 308, 342, 439], "elimin": [279, 336, 468, 470], "altogeth": [279, 489], "resolutionmethod": 279, "unbound": 279, "enhanc": [279, 434, 468], "t1671": 279, "particip": [279, 308, 470, 488], "neutronicskernel": [279, 473, 492], "among": [279, 285, 302, 308, 436, 468, 488, 494], "tell": [279, 282, 390, 440, 455, 475, 479, 490], "misbehav": 279, "declar": [279, 308, 310, 488], "member": [279, 308, 385, 398, 440], "widget": [279, 364], "tab": [279, 433, 473, 490, 492], "widgetdata": 279, "submitt": [279, 358], "abstracttab": 279, "addsectionsfromplugin": 279, "mcnpaddtal": 279, "usesrctp": 279, "frustrat": 279, "intact": 279, "collid": [279, 336, 372], "superoldparam": 279, "oldparam": 279, "currentparam": 279, "newer": [279, 342, 401], "arguabl": 279, "suboptim": 279, "mod": [279, 430, 480], "adapt": [279, 292, 435], "stapl": 279, "programm": [279, 489], "improperli": [279, 336], "collis": [279, 412], "hous": [280, 473], "constructassem": [280, 286], "adddefaultsfp": [280, 286], "assemblyblueprint": [280, 286, 462], "bycomponentmodif": [280, 286, 287], "assemblykeyedlist": [280, 286, 287, 462], "blockblueprint": [280, 286, 289, 462], "blockkeyedlist": [280, 286, 288, 462], "componentdimens": [280, 286, 289], "expandelement": [280, 286, 289], "componentkeyedlist": [280, 286, 289], "groupedcompon": [280, 286, 289], "componentgroup": [280, 286, 289], "gridblueprint": [280, 286, 292, 343, 462], "triplet": [280, 286, 290, 462], "savetostream": [280, 286, 290], "getdefaultnuclideflag": [280, 286, 291], "eleexpandinfobasedoncodeendf": [280, 286, 291], "gendefaultnucflag": [280, 286, 291, 462], "reactorblueprint": [280, 286, 343, 462], "systemblueprint": [280, 286, 292, 462], "summarizematerialdata": [280, 286, 292], "getboundingcircleouterdiamet": [280, 302, 303, 304, 305, 307, 308, 344, 348], "getdimens": [280, 285, 302, 305, 493], "dimension_nam": [280, 302, 303, 304, 305, 307], "init_signatur": [280, 302, 303, 304, 305, 307], "pdef": [280, 281, 285, 302, 303, 304, 305, 307, 308, 336, 338, 340, 342, 344, 348, 369, 379], "getcomponentarea": [280, 302, 303, 304, 305, 307], "fromcompon": [280, 302], "is3d": [280, 302, 303, 304, 305, 307], "getcomponentvolum": [280, 302, 305, 307], "setvolum": [280, 302, 305], "computevolum": [280, 302, 305, 347], "basicshap": [280, 285, 302, 305, 308], "circl": [280, 285, 298, 302, 303, 304, 305, 306, 307, 308, 311, 347, 348, 402, 452, 454, 462, 467, 473, 479, 480, 488], "rectangl": [280, 285, 302, 303, 304, 305, 306, 308, 329, 334, 347, 464, 470, 488], "solidrectangl": [280, 302, 303, 305, 308, 347, 488], "squar": [280, 302, 303, 304, 305, 308, 327, 342, 346, 347, 453, 457, 464, 470, 480, 488], "complexshap": [280, 302, 305, 308, 471], "holedhexagon": [280, 302, 304, 305, 306, 308, 347, 488], "hexholedcircl": [280, 302, 304, 305, 306, 308, 347, 488], "holedrectangl": [280, 302, 304, 305, 306, 308, 347, 488], "holedsquar": [280, 302, 304, 305, 308, 347, 488], "helix": [280, 302, 304, 305, 306, 308, 347, 462, 467, 471, 473, 479, 488], "componenttypeisvalid": [280, 302, 305], "shapedcompon": [280, 302, 303, 304, 305, 307, 308, 488], "componentparamet": [280, 302], "getcomponentparameterdefinit": [280, 302, 306], "getcircleparameterdefinit": [280, 302, 306], "gethexagonparameterdefinit": [280, 302, 306], "getholedhexagonparameterdefinit": [280, 302, 306], "gethexholedcircleparameterdefinit": [280, 302, 306], "getholedrectangleparameterdefinit": [280, 302, 306], "gethelixparameterdefinit": [280, 302, 306], "getrectangleparameterdefinit": [280, 302, 306], "getcubeparameterdefinit": [280, 302, 306], "gettriangleparameterdefinit": [280, 302, 306], "getunshapedparameterdefinit": [280, 302, 306], "getradialsegmentparameterdefinit": [280, 302, 306], "volumetricshap": [280, 302, 305, 308], "sphere": [280, 296, 302, 305, 307, 308, 347, 353, 488], "cube": [280, 302, 305, 306, 307, 308, 347, 488], "radialseg": [280, 302, 305, 306, 307, 308, 347, 488], "differentialradialseg": [280, 285, 302, 305, 307, 308, 347, 488], "parametersweep": [280, 309], "axialexpansionchang": [280, 285, 305, 309, 318], "getdefaultreferenceassem": [280, 309, 310], "makeassemsabletosnaptouniformmesh": [280, 309, 310], "expandcolddimstohot": [280, 309, 310], "getsolidcompon": [280, 309, 310, 318], "assemblyaxiallinkag": [280, 309, 310], "expansiondata": [280, 285, 309, 310, 318], "blockconvert": [280, 309, 447], "componentmerg": [280, 309, 311], "multiplecomponentmerg": [280, 309, 311], "blockavgtocylconvert": [280, 309, 311], "hexcomponentstocylconvert": [280, 309, 311, 447], "getouterdiamfromidandarea": [280, 309, 311], "radiifromhexpitch": [280, 309, 311], "radiifromhexsid": [280, 309, 311], "radiifromringofrod": [280, 309, 311], "geometryconvert": [280, 285, 309, 315, 324, 342, 448], "geometrychang": [280, 309, 312], "fuelassemnummodifi": [280, 309, 312], "hextorzthetaconvert": [280, 309, 312], "hextorzconvert": [280, 309, 312, 320, 448], "thirdcorehextofullcorechang": [280, 309, 312], "edgeassemblychang": [280, 285, 309, 312, 473], "meshconvert": [280, 309, 312], "rzthetareactormeshconvert": [280, 309, 313], "rzthetareactormeshconverterbyringcompositionaxialbin": [280, 309, 313], "rzthetareactormeshconverterbyringcompositionaxialcoordin": [280, 309, 313], "rzthetareactormeshconverterbyringcompositionaxialflag": [280, 309, 313], "checklastvalueinlist": [280, 309, 313], "checklistbound": [280, 309, 313], "generatebin": [280, 309, 313], "pintypeblockconvert": [280, 309], "adjustsmeardens": [280, 309, 316], "adjustcladthicknessbyod": [280, 309, 316], "adjustcladthicknessbyid": [280, 309, 316], "uniformmesh": [280, 285, 309, 310, 471], "converterfactori": [280, 309, 324], "uniformmeshgener": [280, 309, 324], "uniformmeshgeometryconvert": [280, 285, 292, 309, 324, 471], "neutronicsuniformmeshconvert": [280, 309, 324], "gammauniformmeshconvert": [280, 309, 324], "parammapp": [280, 309, 324], "setnumberdensitiesfromoverlap": [280, 309, 324], "axialgrid": [280, 327, 328], "axialunitgrid": [280, 327, 328, 454], "cartesiangrid": [280, 311, 327, 329, 457, 470], "hexgrid": [280, 311, 327, 332, 345, 454, 456], "locationbas": [280, 282, 308, 327, 328, 331, 333], "multiindexloc": [280, 285, 290, 327, 333], "coordinateloc": [280, 327, 333], "addingisvalid": [280, 327, 333], "structuredgrid": [280, 327, 328, 329, 332, 335], "gridparamet": [280, 327, 334], "thetarz": [280, 281, 285, 327, 334, 346], "thetarzgrid": [280, 313, 327, 335, 458], "parameterdefinitionerror": [280, 336, 337], "parametererror": [280, 336, 337], "unknownparametererror": [280, 336, 337], "global_serial_num": [280, 336, 338], "collectpluginparamet": [280, 336, 338], "applyallparamet": [280, 336, 338], "parameterdefinit": [280, 281, 285, 302, 303, 304, 305, 307, 308, 336, 338, 342, 348, 379], "paramloc": [280, 285, 336, 339], "nodefault": [280, 336, 339], "isnumpyarrai": [280, 336, 339], "parameterbuild": [280, 336, 339, 379], "resolvecollect": [280, 336], "resolveparametersmeta": [280, 308, 336, 338, 340], "test_assembli": [280, 344], "buildtestassembli": [280, 344, 345], "materialinassembly_testcas": [280, 344, 345], "maketestassembli": [280, 344, 345], "assembly_testcas": [280, 344, 345], "assemblyinreactor_testcas": [280, 344, 345], "annularfueltestcas": [280, 344, 345], "test_block": [280, 308, 344, 354, 452], "buildsimplefuelblock": [280, 344, 346, 452], "loadtestblock": [280, 344, 346], "applydummydata": [280, 344, 346], "getcomponentdata": [280, 344, 346], "testdetailedndensupd": [280, 344, 346], "block_testcas": [280, 308, 344, 346], "testnegativevolum": [280, 344, 346], "hexblock_testcas": [280, 344, 346], "thrzblock_testcas": [280, 344, 346], "cartesianblock_testcas": [280, 344, 346], "massconservationtest": [280, 309, 317, 322, 344, 346], "test_compon": [280, 293, 296, 344], "testcomponentfactori": [280, 344, 347], "testgeneralcompon": [280, 344, 347], "testcompon": [280, 344, 347], "testnullcompon": [280, 344, 347], "testunshapedcompon": [280, 344, 347], "testshapedcompon": [280, 344, 347], "testderivedshap": [280, 344, 347], "testcircl": [280, 344, 347], "testcomponentexpans": [280, 344, 347], "testtriangl": [280, 344, 347, 385, 405, 423], "testrectangl": [280, 344, 347], "testsolidrectangl": [280, 344, 347], "testsquar": [280, 344, 347], "testcub": [280, 344, 347], "testhexagon": [280, 344, 347, 385, 405, 413], "testholedhexagon": [280, 344, 347], "testhexholedcircl": [280, 344, 347], "testholedrectangl": [280, 344, 347], "testholedsquar": [280, 344, 347], "testhelix": [280, 344, 347], "testspher": [280, 344, 347], "testradialseg": [280, 344, 347], "testdifferentialradialseg": [280, 344, 347], "testmaterialadjust": [280, 344, 347], "test_composit": [280, 344], "mockbp": [280, 344, 348], "getdummyparamdef": [280, 344, 348], "dummycomposit": [280, 344, 348], "dummyleaf": [280, 344, 348], "testcompositepattern": [280, 344, 348], "testcompositetre": [280, 344, 348], "testflagseri": [280, 344, 348], "testmiscmethod": [280, 344, 348], "testgetreactionratedict": [280, 344, 348], "test_flag": [280, 344, 385, 405], "testflag": [280, 344, 349, 385, 405, 412], "test_geometri": [280, 344], "testgeomtyp": [280, 344, 350], "testsymmetrytyp": [280, 344, 350], "testsystemlayoutinput": [280, 344, 350], "testsystemlayoutinputtrz": [280, 344, 350], "test_paramet": [280, 344], "mockcomposit": [280, 344, 351], "mockcompositegrandpar": [280, 344, 351], "mockcompositepar": [280, 344, 351], "mockcompositechild": [280, 344, 351], "parametertest": [280, 344, 351], "test_reactor": [280, 344, 446, 447, 448, 455, 463], "buildoperatorofemptyhexblock": [280, 344, 352], "buildoperatorofemptycartesianblock": [280, 344, 352], "reducetestreactor": [280, 344, 352], "reactortest": [280, 344, 352], "hexreactortest": [280, 344, 352], "test_rz_reactor": [280, 344], "testrztreactor": [280, 344, 353], "testrztreactormodern": [280, 344, 353], "test_zon": [280, 344], "testzon": [280, 344, 354], "load_queu": [280, 281], "spent_fuel_pool": [280, 281], "not_in_cor": [280, 281], "renameblocksaccordingtoassemblynum": [280, 281], "makenamefromassemnum": [280, 281], "renumb": [280, 281, 282, 342], "makeuniqu": [280, 281], "moveto": [280, 281, 308], "getnum": [280, 281], "getloc": [280, 281, 285, 286, 290], "getarea": [280, 281, 285, 302, 305, 308, 485], "getpinplenumvolumeincubicmet": [280, 281], "getaverageplenumtemperatur": [280, 281], "rotatepin": [280, 281, 285, 471], "doubleresolut": [280, 281], "adjustresolut": [280, 281], "getaxialmesh": [280, 281, 342, 471], "calculatezcoord": [280, 281, 285], "gettotalheight": [280, 281], "getheight": [280, 281, 285, 473], "getreactiveheight": [280, 281], "getelevationboundariesbyblocktyp": [280, 281], "getelevationsmatchingparamvalu": [280, 281], "getag": [280, 281], "makeaxialsnaplist": [280, 281, 484], "setblockmesh": [280, 281, 484], "setblockheight": [280, 281], "getblocksandz": [280, 281], "hascontinuouscoolantchannel": [280, 281], "getfirstblock": [280, 281, 342, 454, 473, 480, 493], "getfirstblockbytyp": [280, 281], "getblockatelev": [280, 281], "getbindexfromzindex": [280, 281], "getblocksbetweenelev": [280, 281], "getparamvaluesatz": [280, 281], "getparamofzfunct": [280, 281], "reestablishblockord": [280, 281], "countblockswithflag": [280, 281, 342], "getdim": [280, 281, 285], "getsymmetryfactor": [280, 281, 285, 308, 312, 352, 475], "radialout": [280, 281, 285], "radialinn": [280, 281, 285], "thetaout": [280, 281, 285], "thetainn": [280, 281, 285], "getnextloc": [280, 282], "assemblyad": [280, 282], "normalizenam": [280, 282, 342], "uniqid": [280, 285], "pitch_dimens": [280, 285], "pitch_component_typ": [280, 285], "createhomogenizedcopi": [280, 285], "makenam": [280, 285], "getsmeardens": [280, 285], "autocreatespatialgrid": [280, 285], "setpinmgflux": [280, 285], "setheight": [280, 285], "getwettedperimet": [280, 285, 471], "getflowareaperpin": [280, 285], "gethydraulicdiamet": [280, 285], "adjustuenrich": [280, 285], "setbulimitinfo": [280, 285], "getmaxarea": [280, 285, 308], "getmaxvolum": [280, 285, 308], "isonwhichsymmetrylin": [280, 285, 308], "adjustdens": [280, 285, 342], "completeinitialload": [280, 285, 316], "setb10volparam": [280, 285], "replaceblockwithblock": [280, 285, 346], "plotflux": [280, 285], "removeal": [280, 285, 308], "getcomponentsthatarelinkedto": [280, 285], "getcomponentsinlinkedord": [280, 285], "getsortedcomponentsinsideofcompon": [280, 285], "getnumpin": [280, 285, 471], "mergewithblock": [280, 285], "getcomponentareafrac": [280, 285], "verifyblockdim": [280, 285], "getpincenterflattoflat": [280, 285], "getwirewrapcladgap": [280, 285], "getplenumpin": [280, 285], "isplenumpin": [280, 285], "getpitch": [280, 285], "haspinpitch": [280, 285], "getpinpitch": [280, 285], "getlargestcompon": [280, 285], "setpitch": [280, 285], "getmfp": [280, 285], "setareafractionsreport": [280, 285], "updatecomponentdim": [280, 285, 307], "breakfuelcomponentsintoindividu": [280, 285], "getintegratedmgflux": [280, 285, 302, 305, 308], "setaxialexptargetcomp": [280, 285], "getpincoordin": [280, 285], "getductip": [280, 285], "getductop": [280, 285], "initializepinloc": [280, 285], "setpinpow": [280, 285], "getpintoductgap": [280, 285], "getrotationnum": [280, 285], "setrotationnum": [280, 285], "getflowarea": [280, 285], "axialinn": [280, 285], "axialout": [280, 285], "copyparamsfrom": [280, 308], "updateparamsfrom": [280, 308], "getcompon": [280, 308, 311, 325, 452, 475, 480, 493], "itercompon": [280, 302, 305, 308, 344, 348], "dochildrenhaveflag": [280, 308], "containsatleastonechildwithflag": [280, 308], "containsonlychildrenwithflag": [280, 308], "copyparamstochildren": [280, 308], "getparametercollect": [280, 308], "getparamnam": [280, 308], "hasflag": [280, 281, 308, 311, 325], "gettyp": [280, 308, 473, 479], "settyp": [280, 308, 454], "getvolumefract": [280, 305, 308, 346, 452], "getmass": [280, 302, 305, 308, 348, 473], "getneutronenergydepositionconst": [280, 308], "getgammaenergydepositionconst": [280, 308], "gettotalenergygenerationconst": [280, 308], "getfissionenergygenerationconst": [280, 308], "getcaptureenergygenerationconst": [280, 308], "getchildrenwithnuclid": [280, 308], "getancestor": [280, 308], "getancestoranddist": [280, 308], "getancestorwithflag": [280, 308], "gettotalnden": [280, 308], "updatenumberdens": [280, 302, 305, 308], "changendensbyfactor": [280, 308], "clearnumberdens": [280, 308], "getnumberofatom": [280, 308], "setchildrenlumpedfissionproduct": [280, 308], "getfissilemassenrich": [280, 308], "getboronmassenrich": [280, 308], "geturaniummassenrich": [280, 308], "geturaniumnumenrich": [280, 308], "getpun": [280, 308], "getpumol": [280, 308], "calctotalparam": [280, 308, 475], "calcavgparam": [280, 308], "getmaxparam": [280, 308, 348, 455, 468, 479], "getminparam": [280, 308, 348], "getchildparamvalu": [280, 308, 473], "isfuel": [280, 308, 473, 475], "containsheavymet": [280, 308], "getfissilemass": [280, 308, 473], "gethmmass": [280, 308, 448], "gethmmol": [280, 308], "gethmden": [280, 308], "getpumass": [280, 308], "getpufrac": [280, 308], "getzrfrac": [280, 308], "getmaxuraniummassenrich": [280, 308], "getfuelmass": [280, 302, 305, 308, 348], "constituentreport": [280, 308], "removemass": [280, 308], "addmass": [280, 308], "setmass": [280, 308, 389], "getboundingindic": [280, 308], "getcomponentnam": [280, 308], "getcomponentsofshap": [280, 308], "getcomponentsofmateri": [280, 308], "hascompon": [280, 308], "getcomponentbynam": [280, 308], "getnumcompon": [280, 308], "setcomponentdimensionsreport": [280, 308], "expandallelementalstoisotop": [280, 308], "expandelementaltoisotop": [280, 308, 454], "getaveragetempinc": [280, 308], "resolvelinkeddim": [280, 302, 305, 308, 347], "setchildren": [280, 308], "getchildrenoftyp": [280, 308], "syncmpist": [280, 308, 338, 349, 436], "retainst": [280, 308, 334, 338, 346], "getlumpedfissionproductsifnecessari": [280, 308], "requireslumpedfissionproduct": [280, 308], "getreactionr": [280, 308, 454, 471], "printcont": [280, 302, 305, 308, 473], "tertiari": [280, 325], "annular": [280, 304, 305, 325, 346], "shield_block": [280, 325], "slug": [280, 325, 479], "starter": [280, 325, 475], "blanket": [280, 287, 325], "booster": [280, 325, 342], "grid_plat": [280, 318, 325, 488], "handling_socket": [280, 318, 325], "inlet_nozzl": [280, 318, 325], "liner": [280, 308, 311, 318, 319, 325, 329, 467, 468], "wire": [280, 281, 285, 304, 305, 318, 319, 325, 342, 346, 402, 462, 471, 473, 478, 479, 488], "intercool": [280, 308, 311, 325, 346, 452, 462, 473, 479, 488], "load_pad": [280, 325], "skid": [280, 325, 488], "interductcool": [280, 325], "dspacerinsid": [280, 325], "guide_tub": [280, 318, 325, 480], "fission_chamb": [280, 325, 480], "core_barrel": [280, 325], "batchmassaddit": [280, 325], "poison": [280, 281, 325, 488], "moveabl": [280, 325, 483], "fromstringignoreerror": [280, 325], "fromstr": [280, 325, 326], "tostr": [280, 325], "fromani": [280, 326], "null": [280, 326, 346, 347, 356], "full_cor": [280, 326], "third_cor": [280, 326, 454], "quarter_cor": [280, 326], "eighth_cor": [280, 326], "sixteenth_cor": [280, 326], "symmetryfactor": [280, 285, 326], "no_symmetri": [280, 326], "hassymmetri": [280, 326], "valid_symmetri": [280, 326], "createvalidsymmetrystr": [280, 326], "checkvalidsymmetri": [280, 326], "incrementassemnum": [280, 342], "setoptionsfromc": [280, 342, 454], "powermultipli": [280, 342, 483], "isfullcor": [280, 342], "refassem": [280, 281, 342, 471], "sortassemsbyr": [280, 342, 471, 473], "summarizereactorstat": [280, 342], "setpowerfromdens": [280, 342], "setpowerifnecessari": [280, 342], "setblockmassparam": [280, 342], "getscalarevolut": [280, 342], "locateallassembli": [280, 342], "removeassembli": [280, 342], "removeassembliesinr": [280, 342], "removeallassembli": [280, 342], "normalizeinternalbookeep": [280, 342], "genassembliesaddedthiscycl": [280, 342], "getnumhexr": [280, 342], "getnumassemblieswithallringsfilledout": [280, 342], "getnumenergygroup": [280, 342], "countfuelaxialblock": [280, 342], "getfirstfuelblockaxialnod": [280, 342], "getassembliesinr": [280, 342], "getmaxassembliesinhexr": [280, 342], "getassembliesinsquareorhexr": [280, 342], "getassembliesincircular": [280, 342], "buildcircularringdictionari": [280, 342], "getassemblybynam": [280, 342], "getnozzletyp": [280, 342], "getblockbynam": [280, 342], "getblocksbyindic": [280, 342], "genblocksbylocnam": [280, 342], "getfirstassembli": [280, 342], "regenassemblylist": [280, 281, 342], "getallxssuffix": [280, 342], "getnuclidecategori": [280, 342, 352], "summarizenuclidecategori": [280, 342], "getlocationcont": [280, 342], "makelocationlookup": [280, 342], "getfluxvector": [280, 342], "getassembliesoftyp": [280, 342], "getassemblywithassemnum": [280, 342], "getassemblywithstringloc": [280, 342], "getassemblypitch": [280, 342], "findneighbor": [280, 342], "setmovelist": [280, 342], "createfreshfe": [280, 342], "createassemblyoftyp": [280, 342, 479], "saveallflux": [280, 342], "getassembliesonsymmetrylin": [280, 342], "getcoreradiu": [280, 342], "findallmeshpoint": [280, 342, 353], "findallaxialmeshpoint": [280, 281, 342], "updateaxialmesh": [280, 285, 310, 342], "findaxialmeshindexof": [280, 342], "addmorenod": [280, 342], "findallazimeshpoint": [280, 342], "findallradmeshpoint": [280, 342], "getmaxblockparam": [280, 342], "gettotalblockparam": [280, 342], "getmaxnumpin": [280, 342], "getminimumpercentfluxinfuel": [280, 342], "getavgtemp": [280, 342], "getallnuclidesin": [280, 342], "growtofullcor": [280, 320, 342, 343, 463, 471], "setpitchuniform": [280, 342], "calcblockmax": [280, 342], "getfuelbottomheight": [280, 342], "processload": [280, 310, 342, 471], "buildmanualzon": [280, 342], "root_tag": [280, 343], "readgeomfromfil": [280, 343], "readgeomfromstream": [280, 343], "togridblueprint": [280, 343], "modifyeqpath": [280, 343], "writegeom": [280, 343], "valid_typ": [280, 355], "addloc": [280, 355], "removeloc": [280, 355], "additem": [280, 355], "removeitem": [280, 355], "addzon": [280, 355], "removezon": [280, 355], "checkdupl": [280, 355], "getzoneloc": [280, 355], "getallloc": [280, 355], "findzoneitisin": [280, 355], "sortzon": [280, 355], "typ": [281, 308, 477], "assemnum": [281, 285, 342, 345, 470, 483, 484, 491], "pinnum": [281, 485], "pinpeakingfactor": 281, "compli": [281, 432], "newnum": 281, "somewher": [281, 285, 333, 393, 402, 433], "friend": 281, "spatialloc": [281, 285, 290, 308, 327, 332, 333, 334, 342, 454, 455, 463, 473, 475, 480, 494], "plane": [281, 329, 332, 334, 428, 473, 488], "outlet": [281, 345, 475, 483, 484, 486, 492], "refa": 281, "zeroatfuel": 281, "zeroesatfuel": 281, "enrichthresh": 281, "zbottom": [281, 285, 484], "resid": [281, 333, 355, 484, 489], "refmesh": 281, "stick": 281, "topindex": [281, 484], "snap": [281, 342], "rebusoutput": 281, "blockmesh": 281, "conservemassflag": 281, "adjustlist": [281, 285], "depict": [281, 468], "slide": 281, "blockheight": 281, "returnbottomz": 281, "returntopz": 281, "zcoord": [281, 457], "blocksandcoord": 281, "bottomz": 281, "typenam": [281, 308], "mergeblock": 281, "targetblock": 281, "zindex": [281, 342], "bindex": 281, "zlower": 281, "zupper": 281, "blockinfo": 281, "blockobj": 281, "overlapheightincm": 281, "block3": 281, "block2": 281, "block1": 281, "interptyp": 281, "fillvalu": 281, "thoutlettemperatur": 281, "paramdefinedat": 281, "extrapol": [281, 398, 492], "spline": 281, "interp1d": 281, "nearest": [281, 342], "slinear": 281, "quadrat": 281, "cubic": 281, "rough": 281, "valatz": 281, "extrapolol": 281, "nonphys": 281, "ztop": [281, 285, 484], "reorder": 281, "blocktypespec": [281, 342], "blockcount": 281, "dimnam": [281, 285], "compnam": [281, 285], "rad": [281, 285, 311, 458], "radian": [281, 285, 313, 335, 398, 428], "clockwis": [281, 285, 329, 332, 484], "assemblyparametercollect": [281, 333], "subdivid": 281, "axialmesh": [281, 448, 471, 486], "azimuth": [281, 286, 307, 335, 342, 483], "promot": 282, "notifi": 282, "alist": [282, 342], "nmajor": 282, "rectangular": [282, 303, 307, 334, 346, 488], "_a": 282, "far": [282, 308, 386, 469, 475, 478, 486, 499, 500], "looser": 282, "spatialgrid": [282, 285, 290, 308, 329, 334, 342, 345, 346, 433, 454, 470, 473, 478], "armiobjectparametercollect": [282, 308, 340], "stat": [282, 437], "startindex": [282, 342], "classvar": 285, "pinspatialloc": 285, "faster": [285, 286, 308, 336, 342, 352], "gloss": 285, "axialindex": [285, 288, 470], "inher": [285, 386, 438, 478, 497], "b0120": 285, "negativearea": 285, "multiplicti": 285, "ringnumb": 285, "fastest": [285, 305, 308], "transpos": 285, "clock": [285, 484], "pinmgflux": [285, 484], "5th": 285, "6th": [285, 483, 484, 486], "modifiedheight": 285, "conservemass": 285, "bottleneck": 285, "fly": [285, 310, 332, 333, 470], "numpin": 285, "newenrich": [285, 308], "rotationdegreesccw": 285, "central": [285, 329, 331, 342, 358, 433, 440, 468], "bisect": 285, "trisect": 285, "overhang": 285, "scaleparamsrelatedtosymmetri": [285, 309, 312], "returnmass": 285, "bolblock": [285, 316], "hm": [285, 308, 470, 484], "initialload": 285, "ecpt": [285, 316], "hmden": [285, 308], "importgeom": [285, 307, 342], "_updateblockparametersafterdeplet": 285, "heighthot": 285, "initialb10componentvol": [285, 352, 484], "breplac": 285, "replacementblock": 285, "blist": [285, 402], "blist2": [285, 402], "recomputeareafract": 285, "stai": [285, 308, 310, 346, 356, 430], "linkedcomp": 285, "componentlist": [285, 310], "otherblock": 285, "dimval": 285, "betwen": 285, "returncomp": 285, "i_armi_block_dims1": 285, "r_armi_block_dim": 285, "largestcompon": 285, "updatebolparam": 285, "settingpitch": 285, "setdimens": [285, 302, 305], "034": [285, 473], "phi_e": 285, "mfp": 285, "mfpab": 285, "diffusionlength": 285, "thrz": [285, 307], "updatedim": [285, 302, 305, 307], "optimizationinterfac": [285, 307, 342], "modifycas": [285, 307], "fuel001": 285, "fuel169": 285, "tracklength": [285, 305, 308], "integratedflux": [285, 305, 308], "lfpname": [285, 305, 308], "targetcompon": 285, "changer": [285, 312, 320, 391, 410, 470, 471], "_settargetcompon": 285, "centroid": [285, 333, 336, 339, 342, 427], "localcoordin": 285, "umc": 285, "frequent": [285, 308, 386, 432, 473, 479], "determinist": [285, 488], "makeassemwithuniformmesh": [285, 309, 324], "powerkeysuffix": 285, "linpowbypin": [285, 484], "pinloc": [285, 471, 484], "elig": 285, "rotnum": 285, "justcomput": 285, "rotateindexlookup": 285, "consecut": 285, "i_after_rot": 285, "i_before_rot": 285, "assembl": [285, 436, 489], "pintoductgap": 285, "diameter": 285, "face": [285, 290, 292, 332, 402, 468, 471], "contact": [285, 398, 468, 488], "spacer": [285, 479], "pinpitch": 285, "wet": 285, "perimet": [285, 303, 347], "4a": 285, "minu": [285, 479, 483], "widthout": [285, 303, 304, 307, 347, 480, 488], "pertain": 286, "loader": [286, 289, 291], "rigidli": 286, "adher": 286, "mymaterialmodification1": 286, "mymaterialmodification2": 286, "hotchannelfactor": [286, 483, 488], "twrpclad": [286, 488], "yamlstr": [286, 293, 298], "griddesign": [286, 462], "trip": 286, "roundtrip": 286, "blueprintsobject": 286, "closur": 286, "irrelev": [286, 369], "inp": [286, 312, 369, 399], "textio": [286, 426], "attribute_collect": [286, 287, 288, 289, 290, 291, 292], "attributecollect": [286, 287, 289, 290, 291, 292], "cloader": 286, "10x": [286, 426], "roundtripload": 286, "submesh": [286, 323, 342, 471], "sophist": [286, 290, 426], "stabil": [286, 468, 488], "portion": [286, 379, 491, 492], "test_assemblyblueprint": [286, 293], "testmaterialmodif": [286, 293, 294, 300], "test_blockblueprint": [286, 293], "testgriddedblock": [286, 293, 295], "test_blueprint": [286, 293], "testblueprint": [286, 293, 296], "testblueprintsschema": [286, 293, 296], "test_componentblueprint": [286, 293], "testcomponentblueprint": [286, 293, 297], "test_customisotop": [286, 293, 296], "testcustomisotop": [286, 293, 298], "testcustomisotopics_errorcondit": [286, 293, 298], "testnuclideflagsexpans": [286, 293, 298], "test_gridblueprint": [286, 293], "testgridbproundtrip": [286, 293, 299], "testgridblueprintssect": [286, 293, 299], "testrztgridblueprint": [286, 293, 299], "test_materialmodif": [286, 293], "test_reactorblueprint": [286, 292, 293], "testreactorblueprint": [286, 293, 301], "key_typ": [286, 287, 291], "value_typ": [286, 287, 291], "getassemclass": [286, 287], "item_typ": [286, 287, 288, 289, 290, 291, 292], "byspecifi": [286, 287], "from_yaml": [286, 289, 291], "to_yaml": [286, 289], "readfromlatticemap": [286, 290], "expandtoful": [286, 290], "getmultiloc": [286, 290], "fileasactiveorinert": [286, 291], "from_yaml_key_v": [286, 291], "decoupl": [287, 471], "yamlizablestr": [287, 291], "mapattributecollect": [287, 291], "underneath": 287, "keyedlist": [287, 288, 289, 290, 291, 292], "_loadassembliesintocor": 287, "keyedlistattributecollect": [287, 288, 289, 290, 291, 292], "axialmeshpoint": [288, 462], "materialinput": 288, "byblock": 288, "_rtd": 289, "matmod": 289, "_resolvenuclid": 289, "pointer": [289, 475], "subassembli": [290, 470], "sh": [290, 479, 488], "rr": [290, 462, 479], "oc": [290, 479], "pc": [290, 464, 479], "latticemap": [290, 462], "latticedimens": 290, "gridbound": 290, "gridcont": 290, "__new__": [290, 292, 333], "setattr": [290, 292], "lazili": [290, 394], "unfold": 290, "rudimentari": 290, "domain": [290, 326, 331, 342, 386, 483], "latticeid": [290, 480, 488], "bluep": 290, "trymap": 290, "cobbl": 290, "regardless": [290, 308, 312, 334, 365, 475, 491, 492], "prettier": 290, "creator": 291, "reachabl": 291, "expandto": [291, 298, 470, 480, 488], "activeset": 291, "inertset": 291, "inert": 291, "yamlizablefloat": 291, "rtd": 291, "key_nod": 291, "val_nod": 291, "key_attr": 291, "customisotopicsnam": [291, 485], "customisotopicnam": 291, "customisoptop": 291, "infrequ": 291, "intellig": 291, "elementalstokeep": 291, "oxygen16": 291, "examin": [291, 312, 342, 491], "conf_fission_product_library_nam": 291, "proven": 292, "loadassem": 292, "evst": 292, "initnewreactor": [292, 309, 320, 324], "twoblockinput_correct": [293, 294], "twoblockinput_wrongmeshpoint": [293, 294], "twoblockinput_wrongheight": [293, 294], "twoblockinput_wrongxstyp": [293, 294], "twoblockinput_wrongmatmod": [293, 294], "loadcustomassembli": [293, 294], "test_checkparamconsist": [293, 294], "test_constructspatialgrid": [293, 295], "test_getlocatorsatlatticeposit": [293, 295], "test_blocklattic": [293, 295], "test_nonlatticecomponenthasrightmult": [293, 295], "test_explicitflag": [293, 295], "test_densityconsistentwithcomponentconstructor": [293, 295], "test_roundtripcompletebp": [293, 296], "test_getassemblytypebyspecifi": [293, 296], "test_specialisotopicvector": [293, 296], "test_componentdimens": [293, 296], "test_tracenuclid": [293, 296], "test_noduplicatekeysinyamlblueprint": [293, 296], "test_assemblyparamet": [293, 296], "test_nuclidesmc2v2": [293, 296], "test_nuclidesmc2v3": [293, 296], "test_merg": [293, 296], "test_cladding_invalid": [293, 296], "test_withoutblock": [293, 296], "test_toplevelcomponentinput": [293, 296], "test_componentgroupinput": [293, 296], "componentstr": [293, 297], "test_componentinitializationincompleteburnchain": [293, 297], "test_componentinitializationcontrolcustomisotop": [293, 297], "test_autodeplet": [293, 297], "test_componentinitializationamericiumcustomisotop": [293, 297], "test_componentinitializationthoriumburncustomisotop": [293, 297], "test_componentinitializationthoriumnoburncustomisotop": [293, 297], "test_unmodifi": [293, 298], "test_massfractionsareappli": [293, 298], "test_numberfract": [293, 298], "test_numberdens": [293, 298], "test_numberdensitiesanchor": [293, 298], "test_expandednatur": [293, 298], "test_unrepresentedareonlynatur": [293, 298], "test_densitymustbeposit": [293, 298], "test_nonconformantelementnam": [293, 298], "test_numberdensitiescannotspecifydens": [293, 298], "test_cont": [293, 299], "test_roundtrip": [293, 299], "test_tinymap": [293, 299], "test_simpleread": [293, 299], "test_simplereadlatticemap": [293, 299], "test_simplereadnolatticemap": [293, 299], "test_construct": [293, 299, 301], "test_geomfil": [293, 299], "uzrinput": [293, 300], "boroninput": [293, 300], "loaduzrassembli": [293, 300], "test_nomaterialmodif": [293, 300], "test_u235_wt_frac_modif": [293, 300], "test_u235_wt_frac_bycomponent_modification1": [293, 300], "test_u235_wt_frac_bycomponent_modification2": [293, 300], "test_invalid_component_modif": [293, 300], "test_zr_wt_frac_modif": [293, 300], "test_both_u235_zr_wt_frac_modif": [293, 300], "test_checkbycomponentmaterialinput": [293, 300], "test_filtermaterialinput": [293, 300], "test_invalidmatmodnam": [293, 300], "test_matmodsupthemro": [293, 300], "test_simple_read": [293, 301], "test_materialdatasummari": [293, 301], "assemblyinput": 294, "intermedi": [295, 492, 495], "faithfulli": [296, 324, 494], "hopefulli": [296, 473], "hardcod": 296, "saniti": [296, 320, 381], "mess": 296, "incident": 296, "granular": [296, 388], "todo": [296, 333, 439], "wider": 296, "tip": [296, 324, 386, 435, 471, 483, 490], "mc2v3": [296, 492], "86602": [297, 298, 488], "992742": 298, "007204": [298, 477], "000054": 298, "w_i": [298, 308], "0221e23": 298, "n_norm": 298, "50000000e": 298, "29500000e": 298, "92650000e": 298, "992650": 298, "007295": 298, "000055": 298, "65398007e": 298, "52549755e": 298, "79692055e": 298, "zip": [298, 453, 454, 457, 458, 469, 477, 480, 500], "decim": [298, 385, 426], "u_isotop": 298, "6539102e": 298, "5254048e": 298, "7967943e": 298, "block_0": 298, "basic_fuel": 298, "block_1": 298, "block_2": 298, "block_3": 298, "block_4": 298, "block_5": 298, "block_6": 298, "unmodifi": 298, "mro": 300, "bcomp": 302, "lowercas": 302, "mergewith": [302, 303, 304, 305, 307, 485], "componentparametercollect": [302, 305], "modarea": [302, 303, 304, 307, 485, 488], "othercompon": [302, 305], "freez": 302, "unshapedcomponentparametercollect": 302, "makemgfluxblock": 302, "makemassadditioncompon": 302, "dh": 302, "pai": [302, 488], "attent": [302, 488], "companion": [302, 475], "thermal_expansion_dim": [302, 303, 304, 305, 307], "getcircleinnerdiamet": [302, 303, 304, 305, 471], "isencapsulatedbi": [302, 303], "getperimet": [302, 303], "getpitchdata": [302, 303, 305], "islatticecompon": [302, 303], "non_dimension_nam": [302, 305], "temperatureink": [302, 305], "setlink": [302, 305], "setproperti": [302, 305], "applymaterialmassfracstonumberdens": [302, 305, 310], "adjustdensityforheightexpans": [302, 305], "getheightfactor": [302, 305], "containsvoidmateri": [302, 305], "containssolidmateri": [302, 305], "setarea": [302, 305], "settemperatur": [302, 305, 452], "getmassenrich": [302, 305], "dimensionislink": [302, 305], "getdimensionnameslinkedto": [302, 305], "clearlinkedcach": [302, 305], "getlinkedcompon": [302, 305], "getthermalexpansionfactor": [302, 305], "setdimensionreport": [302, 305], "mergenuclidesinto": [302, 305], "circleparametercollect": 303, "www3": 303, "wolframalpha": 303, "hexagonparametercollect": 303, "lengthout": [303, 304, 307, 347, 488], "lengthinn": [303, 307, 347, 488], "widthinn": [303, 307, 347, 480, 488], "rectangleparametercollect": 303, "hollow": [303, 304, 479], "lenth": 303, "triangleparametercollect": 303, "holeod": [304, 347, 488], "nhole": [304, 347, 488], "hole": [304, 347, 406, 470, 479, 488], "holedhexagonparametercollect": 304, "holeop": [304, 347, 488], "hexholedcircleparametercollect": 304, "holedrectangleparametercollect": 304, "holedsquareparametercollect": 304, "axialpitch": [304, 347, 462, 479, 488], "helixdiamet": [304, 347, 462, 479, 488], "spiral": 304, "mathworld": 304, "wolfram": 304, "climb": 304, "exterior": 304, "interior": [304, 471], "helixparametercollect": 304, "specfi": 305, "componettyp": 305, "addition": [305, 311, 436, 468, 488, 491], "inputtemperatureinc": [305, 310, 494], "othercomp": 305, "othercompkei": 305, "newhot": 305, "accommod": [305, 402, 433], "lfpcollect": [305, 308], "proport": [305, 447], "rho": [305, 308, 389], "f_n": 305, "dn": 305, "sim": 305, "heterogen": [305, 311, 488], "nden": [305, 308, 446, 473, 484], "unlist": [305, 308], "ambigu": 305, "blend": [305, 488], "sum_i": [305, 308, 324], "a_i": [305, 308, 497], "n_a": [305, 308], "avogadro": 305, "retainlink": 305, "indirectli": [305, 389], "intersect": 305, "percentag": [305, 310, 342, 439, 484, 485], "includenuclid": [305, 308, 473], "comptomergewith": 305, "pervious": 305, "whichev": [305, 342, 433, 435, 468], "weigh": [305, 342], "sphereparametercollect": 307, "heightout": [307, 347, 488], "heightinn": [307, 347, 488], "cuboid": 307, "centric": 307, "cubeparametercollect": 307, "inner_radiu": [307, 347, 488], "outer_radiu": [307, 347, 488], "inner_theta": [307, 488], "outer_theta": [307, 488], "283185307179586": 307, "xxxx": 307, "xxxxxxx": 307, "refvolum": 307, "refheight": 307, "radialsegmentparametercollect": 307, "radius_differenti": [307, 347, 488], "inner_axi": [307, 347, 488], "azimuthal_differenti": [307, 488], "thrzactiveheight": 307, "thrzactiveradiu": 307, "outer_axi": 307, "principl": 308, "everywher": 308, "analogi": 308, "unsaf": 308, "unexpect": [308, 392, 439], "uint64": 308, "uint8": 308, "unsign": 308, "hood": [308, 479], "gang": 308, "rapidli": [308, 468], "weak": 308, "complabel": 308, "unpickl": [308, 333, 385], "dig": 308, "__reduce__": [308, 331], "testfuel": [308, 342], "typeid": 308, "bitwis": [308, 339, 394, 412], "qualifi": [308, 435, 470], "robust": 308, "disallow": 308, "volfrac": [308, 452], "test_consistentareawithoverlappingcompon": [308, 344, 346], "insur": 308, "ai": 308, "m_i": 308, "sum_j": 308, "m_j": 308, "m_": 308, "nuclidetoadjust": 308, "elementtoadjust": 308, "nuclidetoholdconst": 308, "elementtoholdconst": 308, "5zr": 308, "oi": 308, "f1": 308, "f2": 308, "energydepconst": 308, "totalenergygenconst": 308, "fissionenergygenconst": 308, "fn": 308, "caller": 308, "_distanc": 308, "ntot": 308, "unnatur": 308, "anticip": 308, "dealt": 308, "therebi": 308, "nearli": [308, 470, 475, 494, 495], "volumeintegr": [308, 342], "addsymmetricposit": 308, "calcbasedonfullobj": 308, "postion": 308, "weightingparam": 308, "volumeaverag": 308, "grandchildren": 308, "x_i": 308, "unset": 308, "returnobj": 308, "sought": 308, "magnitud": [308, 310, 334], "pertin": [308, 438], "constitu": 308, "formula": [308, 324, 427, 471, 476], "mini": [308, 398], "maxi": 308, "minj": 308, "maxj": 308, "mink": 308, "maxk": 308, "shapeclass": 308, "materialnam": [308, 461], "selector": 308, "componentswiththismat": 308, "npin": [308, 484], "elementalnuclid": 308, "naturalnuclid": 308, "domin": 308, "tripl": [308, 333, 483, 484, 486], "pump": [308, 468, 480, 483, 486, 488], "apart": 308, "spatialoc": 308, "seq": [308, 397], "unari": 308, "getattr": 308, "child1": 308, "child2": 308, "child3": 308, "grandchild1": 308, "grandchild2": 308, "grandchild3": 308, "isinst": [308, 326], "synchron": [308, 338, 436], "parmeterdefinit": [308, 338], "ndensiti": 308, "rxnrate": 308, "compris": [308, 488], "rabc": 308, "implic": [308, 333], "unclear": 308, "__exit__": 308, "xssuffix": 308, "_label_": 308, "narrai": 308, "rxn": 308, "tediou": [309, 468], "autom": [309, 435, 447, 467, 478, 491], "generalparametersweepconvert": [309, 314], "parametersweepconvert": [309, 314, 315], "custommodifi": [309, 314, 315], "test_axialexpansionchang": [309, 317, 471], "axialexpansiontestbas": [309, 317, 318], "testaxialexpansionheight": [309, 317, 318], "testconserv": [309, 317, 318], "testmanagecoremesh": [309, 317, 318], "testexcept": [309, 317, 318], "testdeterminetargetcompon": [309, 317, 318], "testgetsolidcompon": [309, 317, 318], "testinputheightsconsideredhot": [309, 317, 318], "checkcoldblockheight": [309, 317, 318], "testlinkag": [309, 317, 318], "buildtestassemblywithfakemateri": [309, 317, 318], "fakemat": [309, 317, 318], "fakematexcept": [309, 317, 318], "test_blockconvert": [309, 317], "testblockconvert": [309, 317, 319], "testtocircl": [309, 317, 319], "buildcontrolblockwithlinkednegativeareacompon": [309, 317, 319], "test_geometryconvert": [309, 317], "testgeometryconvert": [309, 317, 320], "testhextorzconvert": [309, 317, 320], "testedgeassemblychang": [309, 317, 320], "testthirdcorehextofullcorechang": [309, 317, 320], "test_meshconvert": [309, 317], "testrzreactormeshconvert": [309, 317, 321], "test_pintypeblockconvert": [309, 317], "testpintypeconvert": [309, 317, 322], "test_uniformmesh": [309, 317], "dummyfluxopt": [309, 317, 323], "testconverterfactori": [309, 317, 323], "testassemblyuniformmesh": [309, 317, 323], "testuniformmeshgener": [309, 317, 323], "testuniformmeshcompon": [309, 317, 323], "applynonuniformheightdistribut": [309, 317, 323], "testuniformmesh": [309, 317, 323], "testgammauniformmesh": [309, 317, 323], "testparamconvers": [309, 317, 323], "testuniformmeshnonuniformassemflag": [309, 317, 323], "performprescribedaxialexpans": [309, 310], "performthermalaxialexpans": [309, 310], "setassembli": [309, 310], "applycoldheightmassincreas": [309, 310], "axiallyexpandassembli": [309, 310], "managecoremesh": [309, 310], "setexpansionfactor": [309, 310], "updatecomponenttempsby1dtempfield": [309, 310], "updatecomponenttemp": [309, 310], "computethermalexpansionfactor": [309, 310], "getexpansionfactor": [309, 310], "determinetargetcompon": [309, 310, 318], "istargetcompon": [309, 310], "dissolvecomponentintocompon": [309, 311], "restablishlink": [309, 311], "plotconvertedblock": [309, 311, 447], "addr": [309, 312, 320], "createhomogenizedrztblock": [309, 312], "plotconvertedreactor": [309, 312, 324, 448], "expected_input_symmetri": [309, 312], "restorepreviousgeometri": [309, 312], "addedgeassembli": [309, 312], "removeedgeassembli": [309, 312], "generatemesh": [309, 313], "writemeshdata": [309, 313], "setringstoconvert": [309, 313], "setaxialmesh": [309, 313], "setthetamesh": [309, 313], "generatecommonmesh": [309, 323, 324], "reactorparammappingcategori": [309, 324], "blockparammappingcategori": [309, 324], "applystatetoorigin": [309, 323, 324], "setassemblystatefromoverlap": [309, 324], "clearstateonassembli": [309, 324], "updatereactionr": [309, 324], "paramsett": [309, 324], "paramgett": [309, 324], "wise": [310, 346, 486, 491], "nonuniformassemflag": [310, 492], "referenceassembli": 310, "isdetailedaxialexpans": 310, "disjoint": 310, "finest": 310, "linkag": [310, 318], "componentlst": 310, "setfuel": 310, "tempgrid": [310, 318], "tempfield": 310, "expandfromtinputtothot": 310, "perfectli": [310, 377, 438], "presev": 310, "gradient": 310, "tall": [310, 328, 479], "cheap": [310, 468], "oldmesh": 310, "stdassem": 310, "linkedblock": 310, "_getlinkedblock": 310, "linkedcompon": 310, "_getlinkedcompon": 310, "_isfuellock": [310, 318], "expfrac": 310, "l1": [310, 318], "retriv": 310, "flagofinterest": 310, "_componentdeterminesblockheight": [310, 318], "sourceblock": [311, 447], "solutenam": 311, "solventnam": 311, "minid": 311, "_sourceblock": 311, "solvent": 311, "dissolv": [311, 319], "solutelink": 311, "specifiedminid": 311, "_verifyexpans": 311, "farthest": 311, "driverfuelblock": [311, 447], "concentr": 311, "surround": [311, 467, 488], "mcc3": 311, "pincomponentsring1": 311, "pincomponentsring2": 311, "nonpin": 311, "annulu": [311, 479, 488], "radii": 311, "sidelength": 311, "disttorodcent": 311, "numrod": 311, "rodradii": 311, "radiilist": 311, "radtorodcent": 311, "thicknessoneachsid": 311, "r1": [311, 425, 436], "r2": [311, 425, 436, 491], "geomconv": 312, "reactorconvert": 312, "usemostcommonxsid": 312, "expandreactor": 312, "newr": 312, "convreactor": [312, 324, 448], "dif3dinterfac": 312, "dif3drz": 312, "rzgeom_actu": 312, "overwritelist": 312, "ringstoadd": 312, "furthest": [312, 483], "converterset": [312, 313, 448], "stricthomogen": 312, "rztheta": [312, 321, 334, 468], "uniformthetamesh": [312, 313, 448], "thetabin": [312, 313, 448], "radialconversiontyp": [312, 448], "axialconversiontyp": [312, 448], "_rzthetareactormeshconverterbyaxialcoordin": [312, 313], "_rzthetareactormeshconverterbyaxialbin": [312, 313], "homogenizeaxiallybyflag": 312, "byringcomposit": 312, "radialmesh": 312, "homblock": 312, "loweraxialz": 312, "upperaxialz": 312, "radialthetazoneassem": 312, "fnamebas": 312, "coremap": [312, 473, 479], "explan": 312, "myreactor": 312, "sourcereactor": [312, 324], "undo": 312, "edgechang": 312, "difnt": 312, "paramstoscalesubset": 312, "_rzthetareactormeshconverterbyringcomposit": 313, "_rzthetareactormeshconverterbyaxialflag": 313, "inputlist": 313, "listnam": 313, "expectedvalu": 313, "adjustlastvalu": 313, "totalnumdatapoint": 313, "numperbin": 313, "minnum": 313, "settingtomodifi": 315, "applycustomperturb": 315, "sd": 316, "fuel_r": 316, "clad_ir": 316, "fuel_od": 316, "clad_id": 316, "steel_component_lst": [317, 318], "test_assemblyaxialexpansionheight": [317, 318], "expandassemformassconservationtest": [317, 318], "test_thermalexpansioncontractionconservation_simpl": [317, 318], "test_thermalexpansioncontractionconservation_complex": [317, 318], "complexconservationtest": [317, 318], "test_prescribedexpansioncontractionconserv": [317, 318], "test_targetcomponentmassconserv": [317, 318], "test_nomovementaclp": [317, 318], "test_reset": [317, 318], "test_computethermalexpansionfactor": [317, 318], "test_managecoremesh": [317, 318], "test_istopdummyblockpres": [317, 318], "test_setexpansionfactor": [317, 318], "test_updatecomponenttempsby1dtempfieldvalueerror": [317, 318], "test_updatecomponenttempsby1dtempfieldruntimeerror": [317, 318], "test_assemblyaxialexpansionexcept": [317, 318], "test_isfuellock": [317, 318], "test_determinelink": [317, 318], "test_getlinkedcompon": [317, 318], "test_determinetargetcompon": [317, 318], "test_determinetargetcomponentblockwithmultipleflag": [317, 318], "test_specifytargetcomponent_notfound": [317, 318], "test_specifytargetcomponent_singlesolid": [317, 318], "test_specifytargetcomponet_multiplefound": [317, 318], "test_manuallysettargetcompon": [317, 318], "test_getsolidcompon": [317, 318], "test_coldassemblyexpans": [317, 318], "checkcoldheightblockmass": [317, 318], "test_overlappingsolidpin": [317, 318], "test_differentmultnotoverlap": [317, 318], "test_solidpinnotoverlappingannulu": [317, 318], "test_solidpinoverlappingwithannulu": [317, 318], "test_annularpinnotoverlappingwithannulu": [317, 318], "test_annularpinoverlappingwithannul": [317, 318], "test_thinannularpinoverlappingwiththickannulu": [317, 318], "test_annularhexoverlappingthickannularhex": [317, 318], "test_liquid": [317, 318], "test_unshapedcomponentandcircl": [317, 318], "test_dissolvewireintocool": [317, 319], "test_dissolvelinerintoclad": [317, 319], "test_build_nthr": [317, 319], "test_convert": [317, 319, 320], "test_converthexwithfueldriv": [317, 319], "test_converthexwithfueldriveronnegativecomponentareablock": [317, 319], "test_convertcartesianlatticewithfueldriv": [317, 319], "test_fromhex": [317, 319], "test_fromringofrod": [317, 319], "test_addr": [317, 320], "test_setnumberoffuelassem": [317, 320], "test_getassembliesinsector": [317, 320], "test_createhomogenizedrztblock": [317, 320], "test_edgeassembli": [317, 320], "test_growtofullcorefromthirdcor": [317, 320], "test_initnewfullreactor": [317, 320], "test_skipgrowtofullcorewhenalreadyfullcor": [317, 320], "test_meshbyringcompositionaxialbinssmallcor": [317, 321], "test_meshbyringcompositionaxialcoordinatessmallcor": [317, 321], "test_meshbyringcompositionaxialflagssmallcor": [317, 321], "test_meshbyringcompositionaxialbinslargecor": [317, 321], "test_meshbyringcompositionaxialcoordinateslargecor": [317, 321], "test_meshbyringcompositionaxialflagslargecor": [317, 321], "test_adjustcladthicknessbyod": [317, 322], "test_adjustcladthicknessbyid": [317, 322], "test_converterfactori": [317, 323], "test_makeassemwithuniformmesh": [317, 323], "test_makeassemwithuniformmeshsubmesh": [317, 323], "test_makeassemuniformmeshparammappingsamemesh": [317, 323], "test_clearassemblyst": [317, 323], "test_computeaverageaxialmesh": [317, 323], "test_filtermesh": [317, 323], "test_filteredtopandbottom": [317, 323], "test_generatecommonmesh": [317, 323], "test_blueprintcopi": [317, 323], "test_convertnumberdens": [317, 323], "test_applystatetoorigin": [317, 323], "test_setstatefromoverlap": [317, 323], "test_reactorconvers": [317, 323], "549755813888": [318, 325], "1099511627776": [318, 325], "2199023255552": [318, 325], "4398046511104": [318, 325], "70368744177664": [318, 325], "562949953421312": [318, 325], "9007199254740992": [318, 325], "288230376151711744": [318, 325], "coldtemp": 318, "hotinlettemp": 318, "360": [318, 475, 492], "numtempgridpt": 318, "tempstep": 318, "inlet": [318, 475, 483, 484, 488, 492], "nomin": [318, 468, 483, 484], "metric": [318, 468], "isotherm": 318, "caught": 318, "target_flags_in_preferred_ord": 318, "specifytargetcompon": 318, "refsmallreactorbas": 318, "deltat": [318, 475], "bstd": 318, "bexp": 318, "flagtyp": 318, "underpredict": 318, "asserttyp": 318, "strforassert": 318, "componentstotest": 318, "assertionbool": 318, "commonarg": 318, "truth": [318, 342], "typea": 318, "typeb": 318, "annuli": 318, "setnumberoffuelassem": 320, "sourceassem": [323, 324], "newassem": [323, 479], "_decuspaxialmesh": 323, "dest": [323, 385], "pden": [323, 402, 463, 468, 473, 475, 484], "align": [324, 392, 396, 402, 468, 488, 498], "lost": [324, 436], "finer": [324, 479], "uniformreactor": 324, "minimummeshs": 324, "decusp": [324, 471], "uniformmeshminimums": [324, 492], "_computeaverageaxialmesh": 324, "cusp": 324, "reactorparamstomap": 324, "blockparamstomap": 324, "_setparamstoupd": 324, "reactorparamnam": 324, "blockparamnam": 324, "newmesh": 324, "mapnumberdens": 324, "includepincoordin": 324, "sourceassembli": 324, "destinationassembli": 324, "z_1": 324, "z_2": 324, "dz": 324, "piecewis": [324, 398], "smarter": 324, "param1": 324, "val1": [324, 403], "param2": 324, "val2": [324, 403], "b2": 324, "pinquant": [324, 336, 339, 471], "powergener": [324, 484], "powerneutron": [324, 484], "powergamma": [324, 484], "paramdef": [324, 336, 338, 339], "overlappingblockinfo": 324, "h_i": 324, "bind": [325, 338, 433, 488], "categor": [325, 342, 352, 364, 473], "noun": 325, "adject": 325, "disambigu": 325, "widen": 325, "led": [325, 488], "clearli": [325, 355, 491], "stori": 325, "substr": 325, "decid": [325, 340, 440], "canon": [325, 382], "mention": [325, 438], "plenti": 325, "lta": 325, "distinguish": [325, 480], "circul": 325, "bundl": [325, 479, 483, 484, 486], "512": 325, "1024": 325, "2048": 325, "4096": 325, "8192": 325, "16384": 325, "32768": 325, "65536": 325, "131072": 325, "262144": 325, "524288": 325, "1048576": 325, "2097152": 325, "4194304": 325, "8388608": 325, "16777216": 325, "33554432": 325, "67108864": 325, "134217728": 325, "268435456": 325, "536870912": 325, "1073741824": 325, "2147483648": 325, "4294967296": 325, "8589934592": 325, "17179869184": 325, "34359738368": 325, "68719476736": 325, "137438953472": 325, "274877906944": 325, "8796093022208": 325, "17592186044416": 325, "35184372088832": 325, "140737488355328": 325, "281474976710656": 325, "1125899906842624": 325, "2251799813685248": 325, "4503599627370496": 325, "18014398509481984": 325, "36028797018963968": 325, "72057594037927936": 325, "144115188075855872": 325, "576460752303423488": 325, "1152921504606846976": 325, "2305843009213693952": 325, "4611686018427387904": 325, "9223372036854775808": 325, "18446744073709551616": 325, "36893488147419103232": 325, "73786976294838206464": 325, "147573952589676412928": 325, "straightforward": [326, 339, 479, 480], "quarter": [326, 334, 480, 488], "harder": [326, 439], "proceed": [326, 469, 489, 500], "reliev": 326, "elif": [326, 438], "instrument": 326, "forbid": 326, "shapestr": 326, "symmetrystr": 326, "throughcenterassembli": 326, "symmetryinput": 326, "outcom": 326, "fromrectangl": [327, 329], "getglobalcoordin": [327, 333, 455, 456, 457, 458, 463, 473, 475, 480], "test_grid": 327, "testspatialloc": 327, "test_recurs": 327, "getringpo": [327, 329, 332, 333, 334, 335], "indicestoringpo": [327, 332], "fromncel": [327, 328], "getsymmetricequival": [327, 328, 329, 331, 332, 333, 335, 342], "locatorindomain": [327, 328, 329, 331, 332, 335], "getindicesfromringandpo": [327, 328, 329, 332, 334, 335], "getminimumr": [327, 328, 329, 332, 334, 335], "getpositionsinr": [327, 328, 329, 332, 334, 335], "overlapswhichsymmetrylin": [327, 328, 329, 331, 332, 335], "changepitch": [327, 329, 332], "isaxialonli": [327, 331, 334], "getcoordin": [327, 331, 334, 335], "getcellbas": [327, 331, 334], "getcelltop": [327, 331, 334], "frompitch": [327, 332, 454, 456], "getneighboringcellindic": [327, 332, 334], "trianglecoord": [327, 332], "isinfirstthird": [327, 332], "generatesortedhexlocationlist": [327, 332, 456], "allpositionsinthird": [327, 332], "detachedcopi": [327, 333], "parentloc": [327, 333], "getcompleteindic": [327, 333], "getlocalcoordin": [327, 333], "getglobalcellbas": [327, 333], "getglobalcelltop": [327, 333], "distanceto": [327, 333], "unitsteplimit": [327, 328, 329, 332, 334, 335], "unitstep": [327, 328, 329, 332, 334, 335, 457], "getaboveandbelowcellindic": [327, 334], "getindexbound": [327, 334], "getbound": [327, 334], "getlocatorfromringandpo": [327, 334], "getallindic": [327, 334], "fromgeom": [327, 335], "indicesofbound": [327, 335], "numcel": [328, 396], "symmetryoverlap": [328, 329, 331, 332], "noreturn": [328, 329, 335], "1cm": 328, "tricker": 329, "lai": 329, "illustr": 329, "draw": [329, 392, 464], "ax": [329, 333, 334, 398, 402, 452, 454, 456, 457, 458, 461, 464], "numr": [329, 332, 396], "isoffset": 329, "manhattan": 329, "quadrant": [329, 334], "diagon": 329, "childrenbyloc": [329, 433], "_isthroughcent": 329, "xw": 329, "yw": 329, "dx": 331, "boundary_cent": [331, 332], "nativecoord": [331, 333, 334, 335], "hashabl": 331, "happi": [331, 435, 488], "__getstate__": [331, 338, 367, 379], "__setstate__": 331, "neighbor": [332, 334, 342, 352], "pointedendup": 332, "Being": [332, 468], "quival": 332, "newpitchcm": 332, "includetopedg": 332, "nloc": 332, "a3001": 332, "a3003": 332, "includeedgeassem": 332, "immut": [333, 339, 358, 403, 470, 471], "unbeliev": 333, "inexplic": [333, 402, 404], "strip": 333, "annoi": 333, "tagalong": 333, "rack": 333, "awkward": 333, "ok": [333, 474], "__getitem__": [333, 339], "mygrid": 333, "parentgrid": 333, "vice": 334, "versa": 334, "dxi": 334, "dxj": 334, "jxk": 334, "dyi": 334, "dyj": 334, "dyk": 334, "dzi": 334, "dzj": 334, "dzk": 334, "dmn": 334, "repetit": [334, 342, 426, 484, 492], "endpoint": [334, 342], "constrain": [334, 342, 447, 448, 470, 479], "0th": 334, "settl": [334, 392, 483], "struggl": [334, 497], "orthogon": 334, "wast": 334, "compact": 334, "intuit": [334, 340, 488, 489], "phantom": 334, "2x": 334, "backrefer": 334, "cleaner": [334, 339, 410], "disadvantag": 334, "pollut": 334, "recreat": 334, "exsist": 334, "dens": [334, 494], "unphys": [334, 475], "zeta": 335, "2pi": [335, 428], "geominfo": 335, "readgeomxml": 335, "rad0": 335, "rad1": 335, "theta0": 335, "theta1": 335, "0001": [335, 478], "hidden": [336, 338], "_p_": 336, "_p_cyclelength": 336, "circumv": 336, "rational": 336, "behind": [336, 438, 470, 476, 479], "5e13": 336, "fueltemp": 336, "experi": [336, 467, 468, 489], "thefreedictionari": 336, "atmospher": 336, "meriam": 336, "webster": 336, "descriptor": [336, 338], "protocol": [336, 338, 385, 467], "all_definit": 336, "secret": 336, "pep": 336, "412": 336, "protect": [336, 439, 471], "__slots__": 336, "lite": 336, "roundabout": 336, "consumpt": 336, "pylint": [336, 471], "overwhelm": 336, "unsustain": 336, "__dict__": 336, "slot": 336, "becam": [336, 394], "oner": [336, 340], "tradit": [336, 339, 468], "__something__": 336, "applyparamet": [336, 338], "definint": 336, "getsyncdata": [336, 338], "cumulativeovercycl": [336, 339], "assigninblueprint": [336, 339], "retainonreplac": [336, 339], "fluxquant": [336, 339], "multigroupquant": [336, 339], "reactivitycoeffici": [336, 339], "volume_integr": [336, 339], "collectiontyp": [336, 339], "fieldnam": [336, 339], "savetodb": [336, 339, 492], "atloc": [336, 339], "incategori": [336, 339], "unchanged_sinc": [336, 339], "fortyp": [336, 339], "resetassignmentflag": [336, 339], "setassignmentflag": [336, 339], "bynameandtyp": [336, 339], "bynameandcollectiontyp": [336, 339], "lock": [336, 338, 339, 340, 403, 430, 471, 484], "towritetodb": [336, 339, 351], "associateparameterdefinitioncollect": [336, 339], "parameterfactori": 337, "setparam": 337, "27977": 338, "thread": [338, 385, 475], "gil": 338, "_state": [338, 379], "illeg": [338, 403], "redefin": 338, "_backup": 338, "_hist": 338, "transmit": [338, 436], "_allfield": [338, 379], "accessor": 338, "proactiv": 338, "similarli": [338, 342, 480, 488, 489], "somedict": 338, "paramt": 338, "applydefinit": 338, "since_last_distribute_st": 338, "parmatercollect": 338, "proxi": 338, "mark": [339, 435, 439, 488], "deseri": [339, 364], "datatyp": 339, "nativ": [339, 394, 436, 498], "wrote": 339, "dilig": 339, "paramstr": 339, "reassign": 339, "myparametercollect": 339, "diet": 339, "_p_speed": 339, "_representedtyp": 339, "categorynam": 339, "mask": 339, "complementari": 339, "compositetyp": 339, "vipan": 339, "htdoc": 339, "bitwisehelp": 339, "assignedmask": 339, "bitmask": 339, "syntax": [339, 489], "brief": [339, 473], "mutabl": [339, 394, 436], "engag": [339, 340, 432], "mimic": [340, 394], "blindli": 340, "parametercollectionclass": 340, "bparametercollect": 340, "needn": 340, "ourselv": 340, "sausag": 340, "profici": 340, "calss": 340, "refin": [342, 471, 492], "owner": 342, "reactorparametercollect": 342, "powerdens": [342, 471, 486, 492], "kghm": [342, 467, 471, 484], "kgfi": [342, 448, 471, 484], "trackassem": [342, 471, 492], "spend": [342, 440, 468], "fact": [342, 436, 479], "ringnum": 342, "overridecircularringmod": [342, 352], "regener": [342, 480, 492], "unoccupi": 342, "chargecycl": [342, 483], "indexbas": 342, "maxr": 342, "nring": 342, "nassmwithblank": 342, "read1d": 342, "assemtypespec": 342, "maxblock": 342, "circularringmod": [342, 492], "fullcor": 342, "numedgeassem": 342, "_modifygeometryafterload": 342, "ringpitch": 342, "a0001": [342, 473], "sortkei": 342, "includebolassem": 342, "includesfp": 342, "includeal": 342, "_children": 342, "nozzletyp": [342, 483, 488], "nozzleid": 342, "a0001a": 342, "blocksbynam": 342, "blocksbylocnam": 342, "btype": 342, "slipperi": 342, "detachallassembli": 342, "regrow": 342, "suffic": 342, "broaden": [342, 497], "coolantnuclid": 342, "fuelnuclid": 342, "structurenuclid": 342, "assemblylevel": 342, "loccont": 342, "speedup": [342, 426, 432], "energyord": 342, "extsrc": [342, 484], "nxg": 342, "locationstr": 342, "assemblynam": 342, "foundassembli": 342, "showblank": 342, "duplicateassembliesonreflectiveboundari": 342, "border": [342, 454], "asymmetr": 342, "assemblytyp": 342, "allflux": 342, "symmetrylineid": 342, "applysubmesh": 342, "meshval": 342, "imbalanc": 342, "trz": [342, 350], "xyz": [342, 457, 458], "float_dimension_decim": [342, 471], "divis": [342, 468, 473], "9th": 342, "10th": 342, "heightcm": 342, "meshlist": 342, "extraassem": 342, "mcpnxt": 342, "breed": [342, 467, 484, 486], "flux2weight": 342, "avgtemp": 342, "preval": 342, "pitchincm": 342, "lowestfuelheightincm": 342, "coreparametercollect": 342, "zonedefinit": [342, 355, 492], "002": [342, 355, 470, 473, 488], "defunct": [343, 471], "tri": [343, 400, 489], "modifiedpath": 343, "eqpathindex": 343, "eqpathcycl": 343, "outputfilenam": [343, 399], "geoemtri": 343, "test_sortnoloc": [344, 345], "test_uthzrmateri": [344, 345], "test_notesparamet": [344, 345], "test_it": [344, 345], "test_len": [344, 345], "test_append": [344, 345], "test_extend": [344, 345, 405, 412], "test_moveto": [344, 345], "test_getnam": [344, 345, 348], "test_getnum": [344, 345], "test_getloc": [344, 345], "test_getarea": [344, 345, 346, 347], "test_getvolum": [344, 345, 347], "test_doubleresolut": [344, 345], "test_adjustresolut": [344, 345], "test_getaxialmesh": [344, 345], "test_calculatezcoord": [344, 345], "test_gettotalheight": [344, 345], "test_getheight": [344, 345], "test_getreactiveheight": [344, 345], "test_getfissilemass": [344, 345, 348], "test_getpufrac": [344, 345], "test_getmass": [344, 345, 346, 352], "test_getzrfrac": [344, 345], "test_getmaxuraniummassenrich": [344, 345], "test_getag": [344, 345], "test_makeaxialsnaplist": [344, 345], "test_snapaxialmeshtorefer": [344, 345], "test_updatefromassembli": [344, 345], "test_hasflag": [344, 345, 346, 348], "test_renameblocksaccordingtoassemblynum": [344, 345], "test_getblock": [344, 345], "test_getfirstblock": [344, 345], "test_getfirstblockbytyp": [344, 345], "test_getblockdata": [344, 345], "test_getmaxparam": [344, 345, 348], "test_getelevationsmatchingparamvalu": [344, 345], "test_calcavgparam": [344, 345], "test_calctotalparam": [344, 345], "test_reattach": [344, 345], "test_reestablishblockord": [344, 345], "test_countblocksoftyp": [344, 345, 352], "test_getdim": [344, 345], "test_getdominantmateri": [344, 345, 352], "test_iter": [344, 345, 354, 385, 405, 412], "test_getblocksandz": [344, 345], "test_getblocksbetweenelev": [344, 345], "test_getparamvaluesatz": [344, 345], "test_hascontinuouscoolantchannel": [344, 345], "test_carestiancoordin": [344, 345], "test_pinplenumvolum": [344, 345], "test_averageplenumtemperatur": [344, 345], "test_rot": [344, 345], "test_assem_block_typ": [344, 345], "test_assem_hex_typ": [344, 345], "test_snapaxialmeshtoreferenceconservingmassbasedonblockignit": [344, 345], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield": [344, 345], "test_areacheck": [344, 345], "test_updatedetailednden": [344, 346], "test_getsmeardens": [344, 346], "test_getsmeardensitymultiplelin": [344, 346], "test_timenodeparam": [344, 346], "test_gettyp": [344, 346], "test_settyp": [344, 346], "test_homogenizedmixtur": [344, 346], "test_getxstyp": [344, 346], "test_27b_setbugroup": [344, 346], "test_setzeroheight": [344, 346], "test_getvolumefractionswithzeroheight": [344, 346], "test_getvolumefractionwithoutpar": [344, 346], "test_cleardens": [344, 346], "test_removemass": [344, 346], "test_setnumberdens": [344, 346, 347], "test_setmass": [344, 346, 348], "test_gettotalmass": [344, 346], "test_replaceblockwithblock": [344, 346], "test_getwettedperimet": [344, 346], "test_getflowareaperpin": [344, 346], "test_getflowarea": [344, 346], "test_gethydraulicdiamet": [344, 346], "test_adjustuenrich": [344, 346], "test_setloc": [344, 346], "test_setbulimitinfo": [344, 346], "test_gettotalnden": [344, 346], "test_gethmden": [344, 346], "test_getfissilemassenrich": [344, 346], "test_getmicrosuffix": [344, 346], "test_geturaniummassenrich": [344, 346], "test_geturaniumnumenrich": [344, 346], "test_getnumberofatom": [344, 346], "test_getpu": [344, 346], "test_adjustdens": [344, 346], "test_completeinitialload": [344, 346], "test_hascompon": [344, 346], "test_getcomponentnam": [344, 346], "test_getcompon": [344, 346], "test_getcomponentsofshap": [344, 346], "test_getcomponentsofmateri": [344, 346], "test_getcomponentbynam": [344, 346], "test_getsortedcomponentsinsideofcomponentclad": [344, 346], "test_getsortedcomponentsinsideofcomponentduct": [344, 346], "test_getnumcompon": [344, 346], "test_getnumpin": [344, 346], "test_setlinpowbypin": [344, 346], "test_getcomponentareafrac": [344, 346], "test_100_getpinpitch": [344, 346], "test_101_getpitch": [344, 346], "test_102_setpitch": [344, 346], "test_106_getareafract": [344, 346], "test_rotatepin": [344, 346], "test_expandelementaltoisotop": [344, 346], "test_expandallelementalstoisotop": [344, 346], "test_setpitch": [344, 346], "test_setimportantparam": [344, 346], "test_getmfp": [344, 346], "test_consistentmassdensityvolumebetweencoldblockandcoldcompon": [344, 346], "test_consistentmassdensityvolumebetweenhotblockandhotcompon": [344, 346], "test_breakfuelcomponentsintoindividu": [344, 346], "test_pinmgflux": [344, 346], "test_getcomponentsinlinkedord": [344, 346], "test_mergewithblock": [344, 346], "test_getdimens": [344, 346, 347], "test_getplenumpin": [344, 346], "test_haspinpitch": [344, 346], "test_getreactionr": [344, 346, 348], "test_negativevolum": [344, 346, 347], "test_component_typ": [344, 346], "test_coord": [344, 346], "test_block_dim": [344, 346], "test_symmetryfactor": [344, 346, 350], "test_retainst": [344, 346], "test_getpincoord": [344, 346], "test_getpitchhomogeneousblock": [344, 346], "test_getductpitch": [344, 346], "test_getpincenterflattoflat": [344, 346], "test_gridcr": [344, 346], "test_gridnumpinsandloc": [344, 346], "test_gridnotcreatedmultiplemultipl": [344, 346], "test_radii": [344, 346], "test_theta": [344, 346], "test_axi": [344, 346], "test_verifyblockdim": [344, 346], "test_getthetarzgrid": [344, 346], "test_getpitchsquar": [344, 346], "test_getcartesiangrid": [344, 346], "test_heightexpansiondiffer": [344, 346], "test_massfuelheatup": [344, 346], "test_masscladheatup": [344, 346], "test_massductheatup": [344, 346], "test_masscoolheatup": [344, 346], "test_dimensionductheatup": [344, 346], "test_coldmass": [344, 346], "test_massconsist": [344, 346], "getcirclevoiddict": [344, 347], "getcirclefueldict": [344, 347], "test_factori": [344, 347], "test_componentinitializationanddupl": [344, 347], "test_factorybadshapenam": [344, 347], "test_invalidcoolantcomponentassign": [344, 347], "componentcl": [344, 347], "componentmateri": [344, 347], "componentdim": [344, 347], "test_initializecomponentmateri": [344, 347], "test_solid_materi": [344, 347], "test_cmp": [344, 347], "test_nonzero": [344, 347], "test_getcomponentarea": [344, 347], "test_getboundingcircleouterdiamet": [344, 347], "test_component_less_than": [344, 347], "test_fromcompon": [344, 347], "test_preservemassduringthermalexpans": [344, 347], "test_volumeafterclearcach": [344, 347], "test_densityconsist": [344, 347], "test_computevolum": [344, 347], "test_getthermalexpansionfactorconservedmassbylinearexpansionperc": [344, 347], "test_thermallyexpand": [344, 347], "test_getcircleinnerdiamet": [344, 347], "test_dimensionthermallyexpand": [344, 347], "test_componentinteractionslinkingbydimens": [344, 347], "test_badcomponentnam": [344, 347], "test_componentinteractionslinkingbysubtract": [344, 347], "test_changenumberdens": [344, 347], "test_fuelmass": [344, 347], "tcold": [344, 347, 473], "twarm": [344, 347], "coldouterdiamet": [344, 347], "test_ht9expans": [344, 347], "test_uzrexpans": [344, 347], "test_b4cexpans": [344, 347], "runexpansiontest": [344, 347], "componentmassindependentofinputtemp": [344, 347], "expansionconservationhotheightdefin": [344, 347], "expansionconservationcoldheightdefin": [344, 347], "test_negativearea": [344, 347], "test_getperimet": [344, 347], "dimstotestexpans": [344, 347], "setclassdim": [344, 347], "test_validparamet": [344, 347], "test_updatedim": [344, 347], "test_setmassfrac": [344, 347], "test_setmassfraconcomponentmateri": [344, 347], "test_adjustmassfrac_invalid": [344, 347], "test_adjustmassfrac_u235": [344, 347], "test_adjustmassfrac_u": [344, 347], "test_adjustmassfrac_clear_zr": [344, 347], "test_adjustmassfrac_set_zr": [344, 347], "test_adjustmassfrac_leave_sam": [344, 347], "test_getenrich": [344, 347], "inactivenuclid": [344, 348], "elementstoexpand": [344, 348], "test_itercompon": [344, 348], "test_sort": [344, 348], "test_arechildernoftyp": [344, 348], "test_containsatleastonechildoftyp": [344, 348], "test_containsonlychildrenoftyp": [344, 348], "test_namecontain": [344, 348, 369, 375], "test_nucspec": [344, 348], "test_hasflagssubstr": [344, 348], "test_hasflagsnotypespecifi": [344, 348], "test_getboundingcirlceouterdiamet": [344, 348], "test_getparamnam": [344, 348], "test_updatevolum": [344, 348], "test_expandlfp": [344, 348], "test_getintegratedmgflux": [344, 348], "test_syncparamet": [344, 348], "blueprintyaml": [344, 348], "test_ord": [344, 348], "test_sum": [344, 348], "test_constituentreport": [344, 348], "test_getfuelmass": [344, 348], "test_getneutronenergydepositionconst": [344, 348], "test_getgammaenergydepositionconst": [344, 348], "test_getchildrenincludemateri": [344, 348], "test_gethmmass": [344, 348], "test_getfpmass": [344, 348], "test_getminparam": [344, 348], "testflagsa": [344, 348], "testflagsb": [344, 348], "bprime": [344, 348], "test_flagseri": [344, 348], "test_flagconvers": [344, 348], "test_getnumberdensitieswithexpandedfissionproduct": [344, 348], "test_dimensionreport": [344, 348], "test_getatomicweight": [344, 348], "test_containsheavymet": [344, 348], "test_copyparamstochildren": [344, 348], "test_copyparamsfrom": [344, 348], "test_getreactionratedict": [344, 348], "test_fromstr": [344, 349, 350], "test_flagstoandfromstr": [344, 349], "test_fromstringstrict": [344, 349], "test_lookup": [344, 349], "test_convertsstringswithnonflag": [344, 349], "test_defaultisfals": [344, 349], "test_str": [344, 350], "test_fromani": [344, 350], "test_baseconstructor": [344, 350], "test_domaintypenul": [344, 350], "test_checkvalidgeomsymmetrycombo": [344, 350], "test_readhexgeomxml": [344, 350], "test_readreactor": [344, 350], "test_asciimap": [344, 350, 385, 405], "test_readasciimap": [344, 350], "test_readtrzgeomxml": [344, 350], "test_trzyamlio": [344, 350], "test_mutabledefaultsnotsupport": [344, 351], "test_writesomeparamstodb": [344, 351], "test_serializer_pack_unpack": [344, 351], "test_parampropertydoesnotconflict": [344, 351], "test_parampropertydoesnotconflictwithnonedefault": [344, 351], "test_getwithoutdefaultraisesparametererror": [344, 351], "test_attemptingtosetparamwithoutsetterfail": [344, 351], "test_sett": [344, 351], "test_settergetterbas": [344, 351], "test_cannotdefineparameterwithsamenam": [344, 351], "test_paramdefinitionscompos": [344, 351], "test_cannotdefineparameterwithsamenameforcollectionsubclass": [344, 351], "test_cannotcreateattrbuteonparametercollectionsubclass": [344, 351], "test_cannotcreateinstanceof_nodefault": [344, 351], "test_cannotcreateinstanceof_undefin": [344, 351], "test_defaultloc": [344, 351], "test_categori": [344, 351], "test_parametercollectionshave__slots__": [344, 351], "test_coresfp": [344, 352], "test_factorysortset": [344, 352], "test_getsetparamet": [344, 352], "test_sortchildren": [344, 352], "test_sortassembyr": [344, 352], "test_gettotalparam": [344, 352], "test_geomtyp": [344, 352], "test_getblocksbyindic": [344, 352], "test_getallxssuffix": [344, 352], "test_normalizenam": [344, 352], "test_setb10voloncr": [344, 352], "test_countfuelaxialblock": [344, 352], "test_getfirstfuelblockaxialnod": [344, 352], "test_getmaxassembliesinhexr": [344, 352], "test_getmaxnumpin": [344, 352], "test_addmorenod": [344, 352], "test_findaxialmeshindexof": [344, 352], "test_findallaxialmeshpoint": [344, 352], "test_findallaxialmeshpoints_wsubmesh": [344, 352], "test_findallazimeshpoint": [344, 352], "test_findallradmeshpoint": [344, 352], "test_findneighbor": [344, 352], "test_getassembliesincircular": [344, 352], "test_getassembliesinhexr": [344, 352], "test_genassembliesaddedthiscycl": [344, 352], "test_getassemblypitch": [344, 352], "test_getnumassemblieswithallringsfilledout": [344, 352], "test_getnumassemblieswithallringsfilledoutbipass": [344, 352], "test_getnumenergygroup": [344, 352], "test_getminimumpercentfluxinfuel": [344, 352], "test_getassemblywithloc": [344, 352], "test_getassemblywithnam": [344, 352], "test_restorereactor": [344, 352], "test_differentnuclidemodel": [344, 352], "test_getsymmetryfactor": [344, 352], "test_getassembliesonsymmetrylin": [344, 352], "test_saveallflux": [344, 352], "test_getfluxvector": [344, 352], "test_getfuelbottomheight": [344, 352], "test_getgridbound": [344, 352], "test_loc": [344, 352], "test_removeassembli": [344, 352], "test_removeassemblynosfp": [344, 352], "test_removeassembliesinr": [344, 352], "test_removeassembliesinringbycount": [344, 352], "test_removeassembliesinringhex": [344, 352], "test_getnozzletyp": [344, 352], "test_createassemblyoftyp": [344, 352], "test_createfreshfe": [344, 352], "test_createassemblyoftypeexpandedcor": [344, 352], "test_getavgtemp": [344, 352], "test_getscalarevolut": [344, 352], "test_ifmissingspatialgrid": [344, 352], "test_removeallassembli": [344, 352], "test_pincoordsallblock": [344, 352], "test_nonuniformassem": [344, 352], "test_applythermalexpansion_coreconstruct": [344, 352], "test_updateblockbolheights_dbload": [344, 352], "test_buildmanualzon": [344, 352], "test_buildmanualzonesempti": [344, 352], "test_getnuclidecategori": [344, 352], "test_setpowerifnecessari": [344, 352], "test_getassembliesinsquar": [344, 352], "test_getnuclidecategorieslog": [344, 352], "test_loadrzt": [344, 353], "test_findallmeshpoint": [344, 353], "test_loadrzt_reactor": [344, 353], "test_additem": [344, 354], "test_removeitem": [344, 354], "test_addloc": [344, 354], "test_removeloc": [344, 354], "test_repr": [344, 354], "test_dictionaryinterfac": [344, 354], "test_findzoneitisin": [344, 354], "test_getzoneloc": [344, 354], "test_getallloc": [344, 354], "test_summari": [344, 354], "test_sortzon": [344, 354], "uth": 345, "numblock": 345, "139726298249248": 345, "8660254": 345, "2500": 345, "doubli": 345, "carestiangrid": 345, "simlutan": 346, "evacu": 346, "__name__": [346, 356, 440, 462, 464, 475, 494, 496], "unshap": [346, 490], "neutronical": 346, "grown": [346, 468], "excess": [346, 402, 404], "141592653589793": 347, "demonst": 347, "tutori": [347, 430, 435, 441, 453, 466, 468, 470, 471, 473, 475, 479, 480, 481, 490], "dummycompositeparametercollect": 348, "dummyleafparametercollect": 348, "queryabl": 348, "block_metal_fuel": 348, "component_metal_fuel_fuel": 348, "component_metal_fuel_clad": 348, "component_metal_fuel_bond": 348, "component_metal_fuel_cool": 348, "component_metal_fuel_duct": 348, "block_oxide_fuel": 348, "compost": 348, "pickleabl": 349, "_writeparam": 351, "signifi": 351, "lifecycl": 351, "accident": [351, 382, 401, 468], "customset": 352, "inputfilepath": 352, "home": [352, 468, 473], "runner": [352, 473], "inputfilenam": [352, 455], "test_root": 352, "maxnumr": 352, "neeed": 352, "getgridbound": 352, "simplest": [352, 478, 489], "godiva": 353, "heu": 353, "zonetyp": 355, "heavier": 355, "chicken": 355, "egg": 355, "zonenam": [355, 492], "zoneloc": 355, "defint": 355, "consol": 356, "logger": [356, 358, 370, 382, 440, 492, 496], "getlogg": [356, 440, 496], "someexcept": 356, "mpirank": [356, 401], "logdir": 356, "indent": [356, 426, 488], "levelnam": 356, "msgtype": [356, 370], "mangl": 356, "dedupl": 356, "stub": 356, "intlevel": 356, "isstderr": 356, "handleinvalid": [357, 358, 365], "csfile": 357, "databaseset": [357, 359], "globalset": [357, 359, 475], "reportset": [357, 359], "tightcouplingset": [357, 359, 492, 497], "serializetightcouplingset": [357, 359, 363], "tightcouplingsettingdef": [357, 359, 363], "tightcouplingsettingsvalid": [357, 359, 363], "test_set": [357, 364, 366], "dummysettingplugin1": [357, 366, 367], "dummysettingplugin2": [357, 366, 367], "pluginaddsopt": [357, 366, 367], "testcaseset": [357, 366, 367], "testaddingopt": [357, 366, 367], "testsettings2": [357, 366, 367], "testsettingsutil": [357, 366, 367], "testflaglistset": [357, 366, 367], "testsettingsvalidationutil": [357, 366, 367], "test_settingsio": [357, 366], "settingsfailuretest": [357, 366, 368], "settingsreadertest": [357, 366, 368], "settingsrenametest": [357, 366, 368], "settingswritertest": [357, 366, 368], "mockentrypoint": [357, 366, 368], "settingargstest": [357, 366, 368], "defaultcasetitl": [357, 358], "environmentset": [357, 358], "reverttodefault": [357, 358, 364], "failonload": [357, 358], "loadfrominputfil": [357, 358], "loadfromstr": [357, 358], "initlogverbos": [357, 358], "writetoyamlfil": [357, 358], "getsettingssetbyus": [357, 358], "writetoyamlstream": [357, 358], "updateenvironmentsettingsfrom": [357, 358], "setmoduleverbos": [357, 358], "underlyingtyp": [357, 364], "setvalu": [357, 364], "changedefault": [357, 364], "isdefault": [357, 364], "offdefault": [357, 364], "getcustomattribut": [357, 364], "getdefaultattribut": [357, 364], "renameset": [357, 365], "settingsinputformat": [357, 365], "fromext": [357, 365], "readfromfil": [357, 365], "readfromstream": [357, 365], "writeyaml": [357, 365], "begun": [358, 491], "setpath": 358, "went": 358, "hoc": [358, 474], "fromfil": 358, "fpath": 358, "usersettingsnam": 358, "settingssetbyus": [358, 365], "writabl": 358, "otherc": 358, "couplingset": 363, "tightcouplingsettingsdict": 363, "subclas": 364, "coeff": 364, "enforcedopt": 364, "sublabel": 364, "isenviron": 364, "oldnam": [364, 365], "settingadapt": 364, "unseri": 364, "legal": 364, "expir": [364, 365], "subtyp": 364, "serializ": 364, "newdefault": 364, "compund": 364, "gone": [364, 484, 488], "residu": 364, "settings_inst": 365, "test_updateenvironmentsettingsfrom": [366, 367], "test_metadata": [366, 367], "test_addingopt": [366, 367], "test_schemacheckstyp": [366, 367], "test_listsmut": [366, 367], "test_listcoercion": [366, 367], "test_typedetect": [366, 367], "test_cswork": [366, 367], "test_pluginvalidatorsarediscov": [366, 367], "test_pluginset": [366, 367], "test_default": [366, 367], "test_getsettingssetbyus": [366, 367], "test_setmoduleverbos": [366, 367], "test_getfailur": [366, 367], "test_settingisokaytograb": [366, 367], "test_modifi": [366, 367], "test_copyset": [366, 367], "test_copysettingnotdefault": [366, 367], "test_empti": [366, 367], "test_recursivescan": [366, 367], "test_prompt": [366, 367], "test_flaglistset": [366, 367], "test_invalidflaglisttypeerror": [366, 367], "test_validatevers": [366, 367], "test_settingsobjset": [366, 368], "test_loadfromyamlfailsonbadnam": [366, 368], "test_invalidfil": [366, 368], "test_basicsettingsread": [366, 368], "test_readfromfil": [366, 368], "testset": [366, 368], "test_renam": [366, 368], "test_collidingrenam": [366, 368], "test_writeshort": [366, 368], "test_writemedium": [366, 368], "test_writeful": [366, 368], "test_writeyaml": [366, 368], "test_errorsettingswrit": [366, 368], "test_commandlineset": [366, 368], "test_cannotloadsettingsafterparsingcommandlineset": [366, 368], "sound": 367, "particuar": 367, "_customschema": 367, "testsetting1": 368, "testsetting2": 368, "testsetting3": 368, "refdirectori": 369, "abspath": 369, "fixturefunct": 369, "expectedfilepath": 369, "actualfilepath": 369, "falseneglist": 369, "mainten": 369, "rebaselin": 369, "accomod": 369, "rstrip": 369, "whitespac": [369, 439], "parsabl": 369, "presenc": 369, "approv": 369, "clearsinglewarn": [369, 370], "getstdout": [369, 370], "emptystdout": [369, 370], "getstderrvalu": [369, 370], "test_getparamrenam": [369, 372], "test_registerpluginflag": [369, 372], "test_getparamrenamesinvalid": [369, 372], "test_vers": [369, 372], "test_getset": [369, 372], "test_splashtext": [369, 372], "test_splashtextdifferentapp": [369, 372], "test_isstablereleasevers": [369, 372], "test_disablefutureconfigur": [369, 372], "test_getdefaultpluginmanag": [369, 372], "test_overconfigur": [369, 372], "test_main": [369, 372], "test_comparefilessucess": [369, 373], "test_comparefilesfail": [369, 373], "test_comparefilessucceedfalseneg": [369, 373], "test_custom": [369, 374], "test_isrequesteddetailpoint": [369, 375], "test_en": [369, 375], "test_predistributest": [369, 375], "test_fsearch": [369, 375], "test_fsearch_text": [369, 375], "test_coupleract": [369, 375], "test_storepreviousiterationvalu": [369, 375], "test_storepreviousiterationvalueexcept": [369, 375], "test_isconvergedvalueerror": [369, 375], "test_isconverg": [369, 375], "test_isconvergedruntimeerror": [369, 375], "test_getlistdimens": [369, 375], "test_loadc5g7": [369, 376], "test_runandloadc5g7": [369, 376], "test_parallel": [369, 377], "test_serialgath": [369, 377], "test_mpiit": [369, 377], "test_perfectbalanc": [369, 377], "test_excessprocess": [369, 377], "test_typicalbalanc": [369, 377], "test_runactionsdistributionact": [369, 377], "test_runactionsdistributestateact": [369, 377], "test_diagnosepickleerrortestreactor": [369, 377], "test_disableforexclusivetask": [369, 377], "test_makequeu": [369, 377], "test_basicoperatormpi": [369, 378], "test_primaryexcept": [369, 378], "test_primarycrit": [369, 378], "test_distributeset": [369, 378], "test_distributereactor": [369, 378], "test_distributeinterfac": [369, 378], "test_distributest": [369, 378], "test_compileresult": [369, 378], "test_cleanpathmpi": [369, 378], "test_noconflict": [369, 379], "test_withconflict": [369, 379], "test_withconflictsbutsamevalu": [369, 379], "test_conflictsmaintainwithstateretain": [369, 379], "test_runparamsweep": [369, 380], "test_rundatamodel": [369, 380], "test_defineflag": [369, 381], "test_defineparamet": [369, 381], "test_exposeinterfac": [369, 381], "test_pluginsexposeinterfac": [369, 381], "test_defineblueprintssect": [369, 381], "test_setverbosityfrominteg": [369, 382], "test_setverbosityfromstr": [369, 382], "test_verbosityoutofrang": [369, 382], "test_invalidsetverbositybystr": [369, 382], "test_parentrunlog": [369, 382], "test_getwhitespac": [369, 382], "test_warningreport": [369, 382], "test_warningreportinvalid": [369, 382], "test_closelog": [369, 382], "test_setverbos": [369, 382], "test_setverbositybeforestartlog": [369, 382], "test_callingstartlogmultipletim": [369, 382], "test_concatenatelog": [369, 382], "test_createlogdir": [369, 382], "test_getduplicatesfilt": [369, 382], "test_allowstopdupl": [369, 382], "test_comparefilelin": [369, 383], "test_userpluginsflag": [369, 384], "test_validateuserpluginlimit": [369, 384], "test_registeruserplugin": [369, 384], "test_registeruserpluginsabspath": [369, 384], "test_registeruserpluginsfromset": [369, 384], "test_userpluginonprocesscoreload": [369, 384], "test_userpluginwithinterfac": [369, 384], "test_registerrepeateduserplugin": [369, 384], "_runlog": 370, "shuffler": 371, "factorlist": 371, "coexist": 372, "plugin1": 372, "dummyact": 375, "notif": 375, "fsearch": [375, 385, 426], "coupler": 375, "rag": 375, "c5g7": [376, 470, 471, 479, 480], "numproc": 377, "numobject": 377, "numobj": 377, "imbal": 377, "_diagnosepickleerror": 377, "featurest": 378, "commandlin": [378, 439], "mpi4pi": [378, 436, 468, 469, 470, 500], "failer": 378, "mockopmpi": 378, "unittest": [379, 414, 439], "ipynb": [380, 430, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464], "inadvert": 380, "carefulli": 382, "startlog": 382, "concat": 382, "flex": [384, 475], "meaningless": 384, "filepath": [385, 426], "sha": [385, 473], "timestepnum": 385, "timenodenum": 385, "picklechain": 385, "a101": 385, "fix_import": 385, "buffer_callback": 385, "pickler": 385, "testpickl": 385, "sob": 385, "classcount": 385, "heirarchi": 385, "trend": 385, "originallist": 385, "listtoprepend": 385, "beginn": 385, "prepend": [385, 386], "cap": 385, "prestr": 385, "4d": 385, "4e": [385, 454, 473], "datalist": 385, "maxnumberofvaluesbeforedelimit": 385, "delimit": 385, "hello": 385, "n4": 385, "minv": 385, "maxv": 385, "xlabel": [385, 404, 453, 454, 459, 464, 476, 477], "ylabel": [385, 404, 453, 454, 459, 464, 476, 477], "xtick": 385, "ytick": 385, "cmap": [385, 461], "figsiz": [385, 453, 461, 464, 477], "friendli": [385, 387], "hyphen": 385, "otherdictionari": 385, "dst": 385, "shutil": [385, 401], "testasciimap": [385, 405, 406], "test_codetim": [385, 405, 425], "codetimingtest": [385, 405, 407], "test_custom_except": [385, 405], "customexceptiontest": [385, 405, 408], "test_densitytool": [385, 405], "testdensitytool": [385, 405, 409], "test_directorychang": [385, 405], "expectedexcept": [385, 405, 410], "testdirectorychang": [385, 405, 410], "test_dochelp": [385, 405], "testdochelp": [385, 405, 411], "exampleflag": [385, 405, 412], "test_hexagon": [385, 405], "testiter": [385, 405, 414], "test_mathemat": [385, 405], "testmath": [385, 405, 415], "test_outputcach": [385, 405], "testoutputcach": [385, 405, 416], "test_pars": [385, 405], "literalevaltest": [385, 405, 417], "test_pathtool": [385, 405], "pathtoolstest": [385, 405, 418], "test_plot": [385, 405], "testplot": [385, 405, 419], "test_properti": [385, 405], "immutableclass": [385, 405, 420], "immutablepropertytest": [385, 405, 420], "test_reportplot": [385, 405], "testradar": [385, 405, 421], "test_textprocessor": [385, 405], "yamlincludetest": [385, 405, 422], "sequentialreadertest": [385, 405, 422], "test_triangl": [385, 405], "test_unit": [385, 405], "testunit": [385, 405, 424], "test_util": [385, 405], "testgeneralutil": [385, 405, 425], "asciilin": [385, 386], "asciioffset": [385, 386], "asciilabelbyindic": [385, 386], "gridcontentstoascii": [385, 386], "gettim": [385, 387], "starttim": [385, 387], "endtim": [385, 387], "startal": [385, 387], "stopal": [385, 387], "getactivetim": [385, 387], "timelin": [385, 387, 492], "movefil": [385, 390], "retrievefil": [385, 390], "getrandomdirectori": [385, 390], "has_cont": [385, 392], "required_argu": [385, 392], "optional_argu": [385, 392], "option_spec": [385, 392], "sortedfield": [385, 394], "to_byt": [385, 394], "from_byt": [385, 394], "set_val": [385, 402], "updatepagedepthcolor": [385, 402], "issuewarningonfindingtext": [385, 426], "raiseerroronfindingtext": [385, 426], "raiseerroronfindingpattern": [385, 426], "searchfortext": [385, 426], "searchforpattern": [385, 426], "searchforpatternonnextlin": [385, 426], "consumelin": [385, 426], "scipat": [385, 426], "errorcheck": [385, 426], "checkerror": [385, 426], "reimplement": 386, "simplic": [386, 479], "vocabulari": 386, "nestabl": 386, "latticeblueprint": 386, "programat": [386, 478, 488], "linenum": 386, "colnum": 386, "ij": 386, "col": 386, "decrement": [386, 398], "jaggedli": 386, "ridicul": 386, "horizont": [386, 402], "_ijmax": 386, "ijmax": 386, "toward": [386, 464, 468], "timer": [387, 492], "mymethod": 387, "mymethod2": 387, "event_nam": 387, "unfriendli": 387, "unstart": 387, "master": [387, 473], "kill": 387, "inclusion_cutoff": 387, "total_tim": 387, "_timer": 387, "__str__": 387, "base_file_nam": 387, "func": [388, 397, 398, 436], "inport": 388, "abort": 388, "uninteract": 388, "custommsgend": 388, "assort": 389, "matnum": [389, 446], "minden": 389, "sigfig": 389, "mcnp6compat": 389, "mcnplibrari": 389, "mcard": 389, "nuclidevector": 389, "elementexpansionpair": 389, "nuclidbas": 389, "isotopicsubset": 389, "nuclideinventori": 389, "enrichedmassfrac": 389, "fertilemassfrac": 389, "remix": 389, "filestomov": [390, 391], "filestoretriev": [390, 391], "dumponexcept": 390, "outputpath": [390, 391], "cwd": 390, "stall": [390, 436], "chdir": 390, "race": 391, "sphinx": [392, 430, 440, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 475, 481], "alt": 392, "exec": 392, "rst_tabl": 392, "lineno": 392, "content_offset": 392, "block_text": 392, "state_machin": 392, "restructuredtext": 392, "docutil": 392, "sourceforg": 392, "howto": 392, "rst": 392, "doctre": 392, "uml": [392, 471], "burnmatrix": [392, 436, 484], "gitignor": 392, "pyrev_": 392, "length_or_percentage_or_unitless": 392, "fwparam": 392, "restructur": 392, "withing": 392, "hyperlink": [392, 430], "pluginnam": 392, "importentirepackag": 393, "aenum": 394, "provis": [394, 488], "arithmet": 394, "emul": 394, "unlimit": 394, "myflag": 394, "foo": [394, 405, 412], "baz": [394, 405, 412], "byteord": 394, "snake_cas": [394, 439], "pythagorean": 396, "theorem": 396, "lst": 397, "lenght": 397, "padwith": [397, 436], "padwithnon": 397, "binaryrow": 397, "valuedict": 397, "hexrow": 397, "0x": 397, "although": [397, 432, 491], "forev": 397, "remedi": 397, "dropwhil": 397, "takewhil": 397, "itertool": [397, 402, 457, 458], "pred": 397, "newseq": 397, "expon": 398, "repeatedlist": 398, "9r": [398, 492], "listtosearch": 398, "indx": 398, "minindex": 398, "searchlist": 398, "searchvalu": 398, "strtofloat": 398, "03231714805651": 398, "03231714805651e": 398, "notat": [398, 480, 491], "scientif": [398, 475], "prevvalu": 398, "inputit": 398, "x0": 398, "y0": 398, "x1": [398, 427], "y1": [398, 427], "targetx": 398, "targeti": 398, "interpi": 398, "interpx": 398, "maxiter": 398, "positiveguess": 398, "tol": 398, "newton": 398, "p2": 398, "p3": 398, "parabola": 398, "x2": [398, 427], "x3": [398, 427], "y2": [398, 427], "y3": [398, 427], "bx": 398, "ap": 398, "cp": [398, 475], "targetk": [398, 489, 492], "bt": 398, "2at": 398, "2a": 398, "slope": [398, 486], "realroot": 398, "newtim": 398, "v1": [398, 436, 440], "v2": [398, 436], "xin": 398, "yin": 398, "xout": 398, "resampl": 398, "realloc": 398, "resmampl": 398, "summat": [398, 491, 494], "degreescounterclockwis": 398, "radianscounterclockwis": 398, "array_lik": 398, "ccw": 398, "xr": 398, "yr": [398, 483, 486, 499], "crc": 399, "instantli": 399, "blah": 399, "inpfil": 399, "mccaa": 399, "rmzflx": 399, "outputfound": 399, "outfil": 399, "subprocess": 399, "exepath": 399, "inputpath": 399, "cachedir": 399, "loctoretrieveto": 399, "greedi": 399, "cachedfold": 399, "safeword": 399, "destruct": [399, 484], "teardown": 399, "requestedtyp": 400, "allownon": 400, "matchingnonetyp": 400, "datetim": 400, "pathpart": 401, "unc": 401, "filedescript": 401, "sourcepath": 401, "destinationpath": 401, "path1": 401, "path2": 401, "ioerror": 401, "pathattr": 401, "myclass": 401, "userspecifiedmodul": 401, "copiou": 401, "everyon": [401, 439, 440], "misplac": 401, "net": [401, 484], "rmtree": 401, "matplotlib": [402, 404, 439, 448, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 473, 476, 477, 480], "bewar": [402, 404], "gobbl": [402, 404], "judici": [402, 404], "advis": [402, 404, 491], "skippedcolor": 402, "color": [402, 447, 453, 454, 464, 477, 480], "css": 402, "indefinit": 402, "bare": [402, 440], "cmapnam": 402, "jet": 402, "labelfmt": [402, 448, 463], "3f": 402, "legendmap": 402, "fontsiz": [402, 456, 461, 464], "minscal": 402, "maxscal": 402, "axisequ": 402, "makecolorbar": 402, "cbarlabel": 402, "shufflearrow": 402, "titles": 402, "depthindex": [402, 473], "viewabl": 402, "referencestokeep": 402, "colormap": 402, "pylab_exampl": 402, "show_colormap": 402, "labl": 402, "decript": 402, "legend": [402, 404, 452, 454, 459], "autoscal": 402, "ellips": 402, "patch": [402, 426, 456, 464], "facemap": [402, 451, 465, 466, 471, 481], "typenumassem": 402, "rdylbu": 402, "fig": [402, 448, 452, 454, 456, 457, 458, 461, 462, 464, 480], "galleri": [402, 434, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468], "sliderlabel": 402, "updatefunc": 402, "selecteddepthcolor": 402, "valinit": 402, "slider": 402, "valmin": 402, "valmax": 402, "_event": 402, "newval": 402, "maxassem": 402, "yaxislabel": 402, "plt": [402, 448, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 473, 476, 477, 480], "cleand": 402, "histogram": 402, "materiallist": 402, "fileformat": 402, "svg": [402, 492], "pictur": [402, 433], "jpg": [402, 492], "axialz": 402, "hexpitch": 402, "7320508075688772": 402, "hexsidesubdivis": 402, "imgfileext": 402, "triangleflux": 402, "xsname": 402, "noshow": 402, "ipython": [402, 480], "u238na": 402, "dependencyact": 403, "properrti": 403, "attributeerror": [403, 439], "esenti": 403, "someclass": 403, "mynum": [403, 405, 420], "__doc__": 403, "unlock": [403, 435], "unassign": 403, "dbi": [404, 473], "extent": 404, "abscissa": 404, "maxdpa": [404, 486], "chart": [404, 433, 451, 465, 466, 474, 481], "reactornam": 404, "radar": [404, 421], "spider": 404, "xmajortick": 404, "ymajortick": 404, "legendlabel": 404, "tick": 404, "legendslabel": 404, "zval": [404, 461], "datav": 404, "nplot": 404, "ylog": 404, "test_hexthird": [405, 406], "test_hexwithhol": [405, 406], "test_hexwithemptyrow": [405, 406], "test_troublesomehexthird": [405, 406], "test_hexful": [405, 406], "test_hexfullflat": [405, 406], "test_hexsmallflat": [405, 406], "test_flathexbas": [405, 406], "test_method_definit": [405, 407], "test_alternate_usag": [405, 407], "test_property_access": [405, 407], "test_mast": [405, 407], "test_messy_starts_and_stop": [405, 407], "exampleinfomessag": [405, 408], "test_info_decor": [405, 408], "exampleimportantmessag": [405, 408], "test_important_decor": [405, 408], "examplewarnmessag": [405, 408], "test_warn_decor": [405, 408], "examplewarnwhenrootmessag": [405, 408], "test_warn_when_root_decor": [405, 408], "test_expandelementalmassfracstonuclid": [405, 409], "test_expandelementalzeromassfrac": [405, 409], "test_getchem": [405, 409], "test_expandel": [405, 409], "test_applyisotopicsmix": [405, 409], "test_getndensfrommass": [405, 409], "test_getmassfract": [405, 409], "test_calculatenumberdens": [405, 409], "test_getmassingram": [405, 409], "test_normalizenuclidelist": [405, 409], "test_formatmaterialcard": [405, 409], "test_mpiactionfailsonnonexistentpath": [405, 410], "test_except": [405, 410], "test_exception_dis": [405, 410], "test_change_to_nonexisting_fail": [405, 410], "test_change_to_nonexisting_works_forc": [405, 410], "test_temporary_clean": [405, 410], "test_file_retriev": [405, 410], "test_file_retrieval_missing_fil": [405, 410], "test_paramt": [405, 411], "test_settingst": [405, 411], "test_createfigur": [405, 411], "test_createt": [405, 411], "test_auto": [405, 412], "test_collision_extens": [405, 412], "test_collision_cr": [405, 412], "test_bool": [405, 412], "test_inclus": [405, 412], "test_bitwis": [405, 412], "test_hash": [405, 412], "test_getitem": [405, 412], "test_hexagon_area": [405, 413], "test_numpositionsinr": [405, 413], "test_flatten": [405, 414], "test_chunk": [405, 414], "test_split": [405, 414], "test_packingandunpackingbinarystr": [405, 414], "test_packingandunpackinghexstr": [405, 414], "test_sequenceinit": [405, 414], "test_sequ": [405, 414], "test_copysequ": [405, 414], "test_extendsequ": [405, 414], "test_appendsequ": [405, 414], "test_addingsequ": [405, 414], "test_average1dwithintoler": [405, 415], "test_average1dwithintoleranceinvalid": [405, 415], "test_converttoslic": [405, 415], "test_efmt": [405, 415], "test_expandrepeatedfloat": [405, 415], "test_findclosest": [405, 415], "test_findnearestvalu": [405, 415], "test_fixthreedigitexp": [405, 415], "test_getfloat": [405, 415], "test_getstepsfromvalu": [405, 415], "test_ismonoton": [405, 415], "test_linearinterpol": [405, 415], "test_minimizescalarfunc": [405, 415], "test_newtonsmethod": [405, 415], "test_parabola": [405, 415], "test_parabolicinterpol": [405, 415], "test_relerr": [405, 415], "test_resamplestepwiseavg0": [405, 415], "test_resamplestepwiseavg1": [405, 415], "test_resamplestepwiseavg2": [405, 415], "test_resamplestepwiseavg3": [405, 415], "test_resamplestepwiseavg4": [405, 415], "test_resamplestepwiseavg5": [405, 415], "test_resamplestepwiseavg6": [405, 415], "test_resamplestepwiseavg7": [405, 415], "test_resamplestepwisesum0": [405, 415], "test_resamplestepwisesum1": [405, 415], "test_resamplestepwisesum2": [405, 415], "test_resamplestepwisesum3": [405, 415], "test_resamplestepwisesum4": [405, 415], "test_resamplestepwisesum5": [405, 415], "test_resamplestepwisesum6": [405, 415], "test_resamplestepwisesum7": [405, 415], "test_resamplestepwiseavgallnon": [405, 415], "test_resamplestepwiseavgonenon": [405, 415], "test_resamplestepwisesumallnon": [405, 415], "test_resamplestepwisesumonenon": [405, 415], "test_resamplestepwiseavgcomplicatednon": [405, 415], "test_resamplestepwiseavgnparrai": [405, 415], "test_resamplestepwiseavgnparrayaverag": [405, 415], "test_rotatexi": [405, 415], "test_hashfil": [405, 416], "test_deletecach": [405, 416], "test_getcachedfold": [405, 416], "test_makeoutputmanifest": [405, 416], "test_retrieveoutput": [405, 416], "test_tryliteralev": [405, 417], "test_parsevalu": [405, 417], "test_separatemoduleandattribut": [405, 418], "test_importcustommodul": [405, 418], "test_moduleandattributeexist": [405, 418], "test_cleanpathnompi": [405, 418], "test_isfilepathnew": [405, 418], "test_isaccess": [405, 418], "test_plotdepthmap": [405, 419], "test_plotassemblytyp": [405, 419], "test_plotblockflux": [405, 419], "test_plothexblock": [405, 419], "test_plotcartesianblock": [405, 419], "test_retreivingunassignedvalueraiseserror": [405, 420], "test_cannotassignvaluetoimmutableproperti": [405, 420], "test_unlockdoesnotpermitsreassignmentofanimmutableproperti": [405, 420], "test_radar": [405, 421], "test_createplotmetadata": [405, 421], "test_plotaxialprofil": [405, 421], "test_keffvstim": [405, 421], "test_valuevstim": [405, 421], "test_buvstim": [405, 421], "test_movesvscycl": [405, 421], "test_xshistoryvstim": [405, 421], "test_resolveinclud": [405, 422], "test_resolveincludes_stringio": [405, 422], "test_findinclud": [405, 422], "textstream": [405, 422], "test_readfil": [405, 422], "test_readfilewithpattern": [405, 422], "test_gettrianglearea": [405, 423], "test_checkifpointisintriangl": [405, 423], "test_checkifpointisintriangle2": [405, 423], "test_gettc": [405, 424], "test_gettk": [405, 424], "test_gettf": [405, 424], "test_pressure_convert": [405, 424], "test_gettmev": [405, 424], "test_gettemperatur": [405, 424], "test_convertxtopasc": [405, 424], "test_sanitizeangl": [405, 424], "test_getxylineparamet": [405, 424], "test_mergeabledictionari": [405, 425], "test_createformattedstrwithdelimit": [405, 425], "test_capstrlen": [405, 425], "test_list2str": [405, 425], "test_slantsplit": [405, 425], "test_prependtolist": [405, 425], "test_plotmatrix": [405, 425], "test_classesinhierarchi": [405, 425], "simplecyclesset": [405, 425], "powerfractionsdetailedsolut": [405, 425], "powerfractionssimplesolut": [405, 425], "cyclenamesdetailedsolut": [405, 425], "cyclenamessimplesolut": [405, 425], "availabilityfactorsdetailedsolut": [405, 425], "availabilityfactorssimplesolut": [405, 425], "steplengthsdetailedsolut": [405, 425], "steplengthssimplesolut": [405, 425], "cyclelengthsdetailedsolut": [405, 425], "cyclelengthssimplesolut": [405, 425], "burnstepsdetailedsolut": [405, 425], "burnstepssimplesolut": [405, 425], "nodespercycledetailedsolut": [405, 425], "nodespercyclesimplesolut": [405, 425], "maxburnstepsdetailedsolut": [405, 425], "maxburnstepssimplesolut": [405, 425], "test_hasburnup": [405, 425], "test_getnodespercycl": [405, 425], "test_getcyclenodefromcumulativestep": [405, 425], "test_getcyclenodefromcumulativenod": [405, 425], "test_getprevioustimenod": [405, 425], "test_getcumulativenodenum": [405, 425], "chop": 406, "isotopc": 409, "succe": 410, "cohort": 412, "doesnt": 412, "uneven": 415, "propereti": 420, "smoke": 421, "stringio": [422, 426, 471], "nthi": 422, "ncan": 422, "nfile": 422, "nx": 422, "checkifpointisintrinagl": 423, "barycentriccheckifpointisintriangl": 423, "pascal": [424, 428], "dog": 425, "ferret": 425, "03333333333333333": 425, "06666666666666667": 425, "10000000000000002": 425, "eedd": 426, "23e10": 426, "23ee10": 426, "23d10": 426, "23e": 426, "213423": 426, "2342": 426, "023": [426, 473], "relativeto": 426, "textiobas": 426, "ruamel": 426, "prohibit": 426, "drawback": 426, "underpin": 426, "alias": 426, "monkei": [426, 435], "stackoverflow": 426, "44910886": 426, "pyyaml": [426, 471], "chunck": 426, "somefil": 426, "occurr": 426, "_searchfor": 426, "inidc": 426, "occurec": 426, "highmem": 426, "rewind": 426, "checkforerror": 426, "killon": 426, "textflag": 426, "vertici": 427, "heron": 427, "coordind": 427, "27s_formula": 427, "barycentr": 427, "totolog": 427, "blogspot": 427, "fahrenheit": 428, "tempunit": 428, "mmhg": 428, "pbar": 428, "patm": 428, "atomspher": 428, "restructedtext": 430, "repositori": [430, 440], "virtual": [430, 468, 487], "pip": [430, 432, 468, 469, 500], "graphviz": 430, "pandoc": 430, "latex": [430, 464], "miktex": 430, "imagemagick": 430, "_build": 430, "host": 430, "github": [430, 432, 439, 440, 468, 469, 471, 475, 500], "rsync": 430, "ahv": 430, "intersphinx": 430, "intersphinx_map": 430, "sphinxcontrib": 430, "workflow": [430, 434, 438, 440, 475], "apidoc_extra_arg": 430, "highlight": 430, "neat": 430, "nbsphinx": 430, "nbconvert": 430, "clearoutputpreprocessor": 430, "inplac": 430, "mynotebook": 430, "verb": 431, "joi": 431, "armi": [431, 432, 433, 434, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 469, 472, 474, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 497, 498, 499, 500], "invoc": 431, "sampleentrypoint": 431, "conf_cycle_length": 431, "conf_burn_step": 431, "store_tru": 431, "inputcas": 431, "post_process": 431, "settingsfil": 431, "pythonpath": [431, 469, 475, 500], "simpler": 431, "encourag": 432, "codebas": [432, 491], "publicli": 432, "regul": 432, "annot": [432, 464], "tox": [432, 468], "intal": 432, "fork": 432, "guidanc": [432, 435, 440], "bot": 432, "agreement": 432, "publish": 432, "synopsi": 432, "pyproject": [432, 468, 471, 475], "toml": [432, 468, 471, 475], "superce": [432, 440, 468], "apach": [432, 440, 468, 479], "gpl": [432, 440, 468], "mit": [432, 440, 468], "bsd": [432, 440, 468], "restraint": 433, "explor": [433, 444, 451, 466, 474, 476, 478, 481], "spectral": 433, "heavili": 433, "seen": [433, 468, 475, 486, 488, 491, 493], "guid": [433, 434, 468, 479, 480, 500], "environment": [433, 439, 469, 500], "former": 433, "quasistat": 433, "promin": [433, 475], "softwaretest": 433, "orificedoptim": 433, "orific": [433, 483], "alchemylit": 433, "alchemi": 433, "subchan": 433, "launch": 433, "fire": [433, 436, 468], "teach": 434, "audienc": 434, "scientist": 434, "contributor": [434, 468], "licens": [434, 475, 479], "black": [434, 464, 471], "nake": 434, "ruff": [434, 435, 452, 462, 471], "envelop": 435, "ship": 435, "perus": 435, "deeper": 435, "overli": [435, 479], "familiar": [435, 439, 469, 500], "chose": 435, "complain": [435, 471], "hookimpl": [435, 475], "guidelin": [435, 439], "iceberg": 435, "accompani": 435, "cohes": 435, "plug": [435, 468], "Such": [435, 440, 489, 491], "_pm": [435, 475], "plugina": 435, "pluginb": 435, "fear": 436, "sam": 436, "farm": 436, "worklist": 436, "_i": 436, "unchunk": 436, "reassembl": 436, "worklistloadbalanc": 436, "ncpu": 436, "v4": 436, "v5": 436, "v6": 436, "v7": 436, "v8": 436, "myvalstoadd": 436, "v9": 436, "v10": 436, "v12": 436, "recal": [436, 477, 480], "vn": 436, "randomnum": 436, "num1": 436, "num2": 436, "r3": 436, "allresultsloadbalanc": 436, "r5": [436, 491], "r6": 436, "r7": 436, "r8": 436, "allresult": 436, "5f": [436, 438], "twr_shuffl": 436, "hint": [436, 471], "transmiss": 436, "surviv": [436, 492], "someinterfac": 436, "interactevernod": 436, "bcastact": 436, "aresult": 436, "someparam": 436, "somefunct": 436, "opt": 436, "someset": 436, "distrib": 436, "extractblockresult": 436, "whatact": 436, "approachi": 436, "generatemyobject": 436, "depletionmatrix": [436, 484], "computation": 436, "reasonbli": 437, "gprof2dot": 437, "invalu": 437, "graphvi": 437, "pstat": 437, "mystatsfil": 437, "tpng": 437, "mydesiredimagenam": 437, "cornerston": 438, "creategeneralreportcont": 438, "blueprintcont": 438, "getendoflifecont": 438, "imagin": 438, "dicionari": 438, "scene": [438, 476, 479], "__get__": 438, "childcont": 438, "prose": 438, "enclos": 438, "bdesign": 438, "combat": 438, "currentt": 438, "overview": [438, 468, 490], "comprehensive_report": 438, "tablelist": 438, "outputfileextens": [438, 492], "mwt": [438, 479], "0e6": [438, 473], "similarili": 438, "conf_boundari": 438, "conf_neutronics_kernel": 438, "conf_fp_model": 438, "assembly_area": 438, "sup": 438, "beg": 438, "mayb": [438, 475], "overdo": 438, "sole": 438, "neutronicssect": 438, "reportconst": 438, "neutronics_sect": 438, "keff_plot": 438, "plain": 438, "paragraph": [438, 440], "thier": 438, "reportsoutputfil": [438, 482], "subpart": 439, "402": 439, "nqa": 439, "shall": 439, "clariti": [439, 454, 473], "theme": 439, "concis": [439, 441, 466, 481], "deviat": [439, 488], "justifi": 439, "justif": 439, "consult": 439, "formatt": 439, "trail": 439, "setabl": 439, "password": 439, "fragil": 439, "nigh": 439, "debugg": 439, "annoy": 439, "userbas": 439, "camelcas": [439, 468], "hassl": 439, "correlationmatrix": 439, "prefac": 439, "underscor": 439, "_": [439, 469, 473, 478, 497, 500], "pronounc": 439, "acronym": 439, "understood": 439, "expert": 439, "pascalcas": 439, "diskio": 439, "iooper": 439, "renderhtml": 439, "test_": 439, "packagenam": 439, "modulenam": 439, "speed_of_light_in_meters_per_second": 439, "_one_over_pi": 439, "dosomeact": 439, "_dosomeact": 439, "_assembli": 439, "linearheatgenerationr": 439, "_unuseddescript": 439, "repetiti": 439, "harderd": 439, "runnabl": 439, "modern": [439, 468], "laptop": [439, 468], "pyplot": [439, 448, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 473, 476, 477, 480], "sin": 439, "articl": 439, "explain": [439, 440, 494], "zerodivisionerror": 439, "floatingpointerror": 439, "paradigm": 439, "json": 439, "strict": [439, 471], "checker": 439, "relic": 439, "fixm": 439, "xxx": 439, "stranger": 440, "voic": 440, "tens": 440, "oh": 440, "sentenc": 440, "chapter": 440, "discourtesi": 440, "busi": 440, "polish": [440, 468], "draft": [440, 471], "thumb": 440, "lint": [440, 471], "somebodi": 440, "bread": 440, "crumb": 440, "breadcrumb": 440, "req": 440, "conf": 440, "install_requir": 440, "abstractli": 440, "extras_requir": 440, "strictli": 440, "minor": [440, 470], "bump": [440, 464], "revv": 440, "nrc": 440, "sanction": 440, "documen": 440, "deserv": 440, "admin": [440, 491], "privileg": 440, "ui": 440, "archiv": [440, 469, 500], "explanatori": [441, 466, 481], "download": [446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 469, 475, 479, 480, 500], "pervas": 446, "m1": 446, "40090": 446, "35498695e": 446, "40091": 446, "31641456e": 446, "40092": 446, "11832896e": 446, "40094": 446, "13332690e": 446, "40096": 446, "82584320e": 446, "92234": 446, "00000000e": 446, "36147243e": 446, "92236": 446, "92238": 446, "48425449e": 446, "93237": 446, "93238": 446, "94236": 446, "94238": 446, "94240": 446, "94241": 446, "94242": 446, "95241": 446, "95242": 446, "95243": 446, "96242": 446, "96243": 446, "96244": 446, "96245": 446, "96246": 446, "96247": 446, "m2": 446, "11023": 446, "21665718e": 446, "m3": 446, "67941747e": 446, "14028": 446, "78629407e": 446, "14029": 446, "92249968e": 446, "14030": 446, "26729800e": 446, "23000": 446, "71601526e": 446, "24050": 446, "52833976e": 446, "24052": 446, "73245259e": 446, "24053": 446, "90190013e": 446, "24054": 446, "46479253e": 446, "25055": 446, "19738893e": 446, "26054": 446, "09816265e": 446, "26056": 446, "43323879e": 446, "26057": 446, "48571542e": 446, "97721449e": 446, "28058": 446, "94209415e": 446, "28060": 446, "13328336e": 446, "28061": 446, "92675527e": 446, "28062": 446, "57051128e": 446, "28064": 446, "00190823e": 446, "42092": 446, "13437638e": 446, "42094": 446, "44696641e": 446, "42095": 446, "65358976e": 446, "42096": 446, "01896213e": 446, "42097": 446, "59119235e": 446, "42098": 446, "16005724e": 446, "42100": 446, "62965260e": 446, "74182": 446, "66064130e": 446, "74183": 446, "97674630e": 446, "74184": 446, "23253002e": 446, "74186": 446, "92724649e": 446, "m4": 446, "68566498e": 446, "78937437e": 446, "92406371e": 446, "26832899e": 446, "71822485e": 446, "53202374e": 446, "73955678e": 446, "90995571e": 446, "46679773e": 446, "20080367e": 446, "10149666e": 446, "43847248e": 446, "48692411e": 446, "97882303e": 446, "94448766e": 446, "13420533e": 446, "93076337e": 446, "57178896e": 446, "00516393e": 446, "14018048e": 446, "45058419e": 446, "65981625e": 446, "02548587e": 446, "59492746e": 446, "16100100e": 446, "63341900e": 446, "66361937e": 446, "97835446e": 446, "23597335e": 446, "93044146e": 446, "m5": 446, "m6": 446, "m7": 446, "sphinx_gallery_thumbnail_path": 446, "logo": 446, "_o": [446, 447], "bfuel": [446, 447], "ndensbybas": 446, "den": 446, "join": [446, 464], "minut": [446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464], "432": [446, 449], "run_blockmcnpmaterialcard": [446, 449], "bcontrol": 447, "476": [447, 449], "run_hexblocktorzconvers": [447, 449], "sphinx_gallery_thumbnail_numb": [448, 455], "thetamesh": 448, "490": [448, 449, 471], "run_hexreactortorz": [448, 449], "399": 449, "gallery_analysi": 449, "assess": 452, "23641": 452, "0189566": 452, "0764606": 452, "553986": 452, "114187": 452, "233214": 452, "0189313": 452, "557207": 452, "234575": 452, "0189824": 452, "0766673": 452, "555588": 452, "0190348": 452, "0768788": 452, "55349": 452, "238847": 452, "0190871": 452, "07709": 452, "550789": 452, "242019": 452, "0191381": 452, "0772959": 452, "54736": 452, "246067": 452, "0191865": 452, "0774913": 452, "543069": 452, "264995": 452, "0193035": 452, "0779642": 452, "52355": 452, "noqa": [452, 462], "e402": [452, 462], "tabul": 452, "writeinitialvolumefract": 452, "tabular_data": 452, "plotvolfracswithcomponenttemp": 452, "uniformtemp": 452, "componentstomodifi": 452, "initialvol": 452, "relativevol": 452, "uniformtempsinc": 452, "subplot": [452, 454, 456, 461, 464], "set_titl": [452, 456, 461, 464], "set_ylabel": [452, 464], "set_xlabel": [452, 461, 464], "run_blockvolumefract": [452, 465], "xyc": [453, 477], "marker": [453, 477], "run_chartofnuclid": [453, 465], "isoaa_path": [454, 459, 460], "_addflux": 454, "createdummyreactor": 454, "allrat": 454, "ratedata": 454, "ratelabel": 454, "nucrat": 454, "arang": [454, 461, 473, 475], "set_xtick": [454, 461], "set_xticklabel": [454, 461], "axvlin": 454, "set_xlim": [454, 456, 464], "yscale": [454, 459], "run_computereactionr": [454, 465], "demo": [455, 464, 468, 478], "139726300829104": 455, "reftestcartesian": 455, "cosin": 455, "candidateassem": 455, "695": [455, 465], "run_fuelmanag": [455, 465], "mpatch": [456, 464], "patchcollect": [456, 464], "poli": 456, "set_aspect": [456, 464], "set_axis_off": 456, "hex_i": 456, "va": [456, 464], "regularpolygon": 456, "numvertic": 456, "fc": [456, 480], "white": 456, "add_collect": [456, 464], "margin": [456, 468], "bbox": 456, "get_datalim": 456, "transdata": 456, "xmin": 456, "xmax": 456, "set_ylim": [456, 464], "ymax": 456, "run_grids1_hex": [456, 465], "cartesian_grid": 457, "add_subplot": [457, 458], "run_grids2_cartesian": [457, 465], "linspac": [458, 476, 478], "rz_grid": 458, "run_grids3_rzt": [458, 465], "xscale": 459, "434": [459, 465], "run_isotx": [459, 465], "inelasticscatt": 460, "n2nscatter": 460, "run_isotxs2_matrix": [460, 465], "max_z": 461, "nummat": 461, "idx": 461, "indexerror": 461, "im": 461, "imshow": 461, "ylgn": 461, "set_ytick": 461, "set_yticklabel": 461, "run_materi": [461, 465], "traceabl": 462, "139726220480368": 462, "buildcas": 462, "buildcompon": 462, "blockdesign": [462, 478], "buildblock": 462, "assemdesign": 462, "buildassembli": 462, "buildgrid": 462, "systemdesign": 462, "buildsystem": 462, "isothermal_temperature_in_c": 462, "508": 462, "5842": 462, "14224": 462, "72644": 462, "0109": 462, "6205": 462, "01420": 462, "cname": 462, "fuelbock": 462, "reflectorblock": 462, "fuelassem": 462, "reflectorassem": 462, "coregrid": 462, "run_programmaticreactordefinit": [462, 465], "139726149421712": 463, "933": [463, 465], "run_reactorfacemap": [463, 465], "shortcut": 464, "bateman": 464, "plotnuc": 464, "ry": 464, "get_xi": 464, "cx": 464, "get_width": 464, "cy": 464, "get_height": 464, "plotal": 464, "xlim": 464, "ylim": 464, "xp": 464, "yp": 464, "deeppink": 464, "orang": 464, "arrowprop": 464, "shrink": 464, "rxntype": 464, "atan": 464, "grei": 464, "facecolor": 464, "mistyros": 464, "edgecolor": 464, "zoom": 464, "030": [464, 465, 473], "run_transmutationmatrix": [464, 465], "gallery_framework": 465, "megawatt": 467, "kilogram": 467, "mwd": [467, 484, 485], "radionuclid": [467, 484, 486], "fima": [467, 483, 484, 485, 486, 492], "thin": 467, "imped": 467, "wastag": [467, 468, 484, 486, 492], "predomin": 467, "todai": [467, 468], "gass": [467, 479], "travel": [467, 468], "wave": [467, 468], "advantag": [467, 468], "streamlin": 468, "fingertip": [468, 479], "profession": 468, "llc": [468, 479], "compani": 468, "hub": 468, "spoke": 468, "specialist": 468, "acquir": 468, "first_time_contributor": 468, "prerequisit": [468, 487], "launcher": 468, "easiest": 468, "tour": 468, "nuclei": 468, "energet": 468, "induc": [468, 497], "withdraw": 468, "postul": 468, "earthquak": 468, "eniac": 468, "1940": 468, "toss": 468, "experiment": [468, 480], "surprisingli": 468, "port": 468, "specialti": 468, "born": 468, "eclect": 468, "uncoupl": 468, "dispatch": 468, "multiobject": 468, "Its": [468, 475, 488], "labor": 468, "focu": 468, "seamless": 468, "green": [468, 480], "skelet": 468, "schemat": [468, 488], "cfd": [468, 491], "curat": 468, "wall": 468, "orif": [468, 484, 488, 492], "electr": [468, 499], "creativ": [468, 479], "graduat": 468, "undergradu": 468, "greatli": [468, 470, 471], "uncommon": 468, "tedium": 468, "fftf": 468, "perfect": 468, "wing": 468, "seattl": 468, "mission": 468, "intertwin": 468, "secreci": 468, "risk": 468, "entiti": 468, "hypothes": 468, "worldwid": 468, "shakedown": 468, "fund": 468, "predominantli": 468, "flavor": 468, "realiz": 468, "mail": 468, "broadli": 468, "phenix": 468, "bf": 468, "acceler": 468, "stuck": 468, "trademark": 468, "holder": 468, "copyright": [468, 479], "2023": [468, 471, 473], "complianc": [468, 479], "warranti": [468, 479], "touran": 468, "nichola": 468, "526": 468, "eng": 468, "016": 468, "glossari": 468, "python3": [469, 500], "pip3": [469, 500], "vv": [469, 500], "navig": [469, 500], "venv": [469, 482, 500], "deactiv": [469, 492, 500], "bat": [469, 500], "sudo": [469, 500], "apt": [469, 500], "libopenmpi": [469, 500], "ssh": [469, 500], "click": [469, 473, 491, 500], "bashrc": [469, 500], "____": [469, 473, 478, 500], "__": [469, 473, 478, 500], "congrat": [469, 500], "wxpython": [469, 500], "websit": [469, 500], "2021": [470, 471], "vestigi": 470, "detailassemsbybolloc": 470, "materialclassnam": 470, "armitestbas": 470, "dumplocationsnapshot": 470, "obviat": 470, "redund": [470, 471], "isannular": 470, "syncdbafterwrit": [470, 492], "doth": [470, 492], "armiabsdirfromnam": 470, "delat": 470, "addcompon": 470, "constist": 470, "latticefil": 470, "diment": 470, "pympler": 470, "demot": 470, "tbd": 471, "linter": 471, "mandatori": 471, "_copyinputshelp": 471, "1416": 471, "mandat": 471, "1419": 471, "1438": 471, "downgrad": 471, "polici": 471, "1444": 471, "1412": 471, "functool": 471, "1466": 471, "1383": 471, "getmasterc": 471, "setmasterc": 471, "1399": 471, "1336": 471, "1349": 471, "1345": 471, "1355": 471, "1335": 471, "1395": 471, "sha1": 471, "1334": 471, "1409": 471, "gh": 471, "avgfueltemp": [471, 484], "1362": 471, "1347": 471, "1396": 471, "_getnuctemphelp": 471, "_processinclud": 471, "1333": 471, "1342": 471, "1280": 471, "1296": 471, "1288": 471, "1294": 471, "1320": 471, "1299": 471, "1277": 471, "drastic": 471, "1282": 471, "density3": 471, "1163": 471, "1274": 471, "hcfcoretyp": 471, "1179": 471, "1248": 471, "1239": 471, "assemflagstoskipaxialexpans": 471, "1235": 471, "1204": 471, "1219": 471, "1227": 471, "dctype": 471, "1228": 471, "1226": 471, "1229": 471, "createrepresentativeblocksfromexistingblock": 471, "1217": 471, "priorit": 471, "1230": 471, "1257": 471, "1258": 471, "1270": 471, "1216": 471, "1206": 471, "1225": 471, "froze": 471, "955": 471, "962": 471, "4614": [471, 477], "998": 471, "overhaul": 471, "loosecoupl": 471, "1033": 471, "c2n1": 471, "959": 471, "fuelcladlock": [471, 484], "1038": 471, "1022": 471, "1047": 471, "1042": 471, "1086": 471, "uniformmeshconvert": 471, "1108": 471, "1165": 471, "cyclesskiptightcouplinginteract": 471, "referenceblockaxialmesh": [471, 486], "980": 471, "deadelin": 471, "barrier": 471, "1046": 471, "1067": 471, "1118": 471, "992": 471, "1168": 471, "1129": 471, "magnessium": 471, "1128": 471, "1131": 471, "1150": 471, "1149": 471, "1199": 471, "1178": 471, "1185": 471, "2022": 471, "coveragerc": 471, "924": 471, "932": 471, "943": 471, "942": 471, "fastflux": [471, 479, 484], "_swapfluxparam": 471, "665": 471, "settingsrul": 471, "872": 471, "__repr__": 471, "stationaryblock": 471, "stationaryblockflag": [471, 492], "isoxx": 471, "getreac": 471, "_applythermalexpans": 471, "completeinitiaload": 471, "secur": 471, "alert": 471, "530": 471, "558": 471, "weren": 471, "550": 471, "557": 471, "507": 471, "534": 471, "solidifi": 471, "stake": 471, "clarif": 471, "multii": 471, "bugfix": 471, "cadenc": 472, "v0": 472, "lt": [473, 477, 478], "afci": [473, 475, 478, 479, 482], "haleu": [473, 479], "tru": [473, 479, 488], "aug": 473, "tue": 473, "dec": 473, "f7dbd06fb4": 473, "04761fb2b3": 473, "5904530cb2": 473, "fuelmanag": [473, 479], "622957b035": 473, "mw": [473, 478, 483, 484, 486], "411": [473, 479, 480], "9995": 473, "140185834143168": 473, "000": [473, 478], "excor": [473, 478], "gp": [473, 478], "999999999998449e": [473, 478], "helic": [473, 479], "dodecagon": 473, "a0005": 473, "011": 473, "a0004": 473, "045": [473, 488, 492], "a0010": 473, "010": 473, "a0016": 473, "057": 473, "a0003": 473, "007": 473, "a0009": 473, "008": 473, "040": 473, "a0015": 473, "a0021": 473, "052": 473, "a0027": 473, "a0002": 473, "a0008": 473, "029": 473, "a0014": 473, "a0020": 473, "041": 473, "a0026": 473, "047": 473, "a0033": 473, "053": 473, "a0039": 473, "a0007": 473, "018": 473, "a0013": 473, "024": 473, "a0019": 473, "a0025": 473, "036": 473, "a0032": 473, "a0038": 473, "048": 473, "a0045": 473, "054": 473, "a0000": 473, "fifth": 473, "fifthassem": 473, "drill": 473, "a0006": 473, "b0006": 473, "913110": 473, "7780886302": 473, "1615298013245032": 473, "e6": 473, "630279585150355": 473, "press": 473, "5940e": 473, "b0000": 473, "impt": [473, 478, 496], "6029": [473, 479], "6086118601525807": 473, "447": [473, 479], "6962": [473, 479], "6996347645979837": 473, "0466500": 473, "0455115": 473, "808": [473, 479], "8119863398379357": 473, "0559000": 473, "0561758": 473, "148007667250084": 473, "8888": [473, 479], "8931849738217292": 473, "0808": [473, 479], "08119863398379355": 473, "995619013690193": 473, "787506681749962": 473, "3940000": 473, "3959438": 473, "2160000": 473, "1772467": 473, "midplan": 473, "peakpow": [473, 475], "1e6": [473, 475, 478], "mgfluxbas": [473, 475], "setfakepow": [473, 475], "linalg": [473, 475], "fuelflag": [473, 475], "603": 473, "6363986253243": 473, "3949368453772478": 473, "sodiumbefor": 473, "2f": [473, 476], "sodiumaft": 473, "20231212235650776405": 473, "c00n01": 473, "databaseloc": 473, "dbo": 473, "fro": 473, "909142": 473, "5216630063": 473, "lucki": 473, "brand": 473, "readi": 475, "shell": [475, 478], "proce": [475, 489], "my_armi_project": 475, "fluxsolv": 475, "thermalsolv": 475, "readm": 475, "quickstart": 475, "exampleapp": 475, "shortli": 475, "mixabl": 475, "__version__": 475, "armi_vers": 475, "myapp_vers": 475, "dummyphysicsplugin": 475, "cobra": 475, "cacophoni": 475, "subphys": 475, "conf_vers": 475, "setversioninset": 475, "fluxinterfac": 475, "thermalinterfac": 475, "facet": 475, "boiler": 475, "myappvers": 475, "nasti": 475, "conf_inlet_temperatur": 475, "inletinc": 475, "conf_outlet_temperatur": 475, "outletinc": 475, "weav": 475, "administr": 475, "gut": 475, "cloud": 475, "tini": 475, "dummyflux": 475, "fuelblock": 475, "topfuelz": 475, "bottomfuelz": 475, "coremidplan": 475, "told": 475, "q": 475, "c_p": 475, "dummyth": 475, "runthermalhydraul": 475, "massflow": 475, "computeidealizedflow": 475, "computeaxialcoolanttemperatur": 475, "tempavg": 475, "coolantprop": 475, "massflowr": 475, "qdot": 475, "mdot": 475, "thcoolantinlett": [475, 483, 484], "thcoolantoutlett": [475, 483, 484], "thcoolantaveraget": [475, 484], "phenomen": 475, "lovingli": 475, "whack": 475, "slash": 475, "materialnamespaceord": [475, 492], "vizual": 475, "lighter": 475, "finicki": 475, "sublass": 475, "userpluginexampl": 475, "userplugin0": 475, "pluginz": [475, 492], "userplugin1": 475, "userplugin2": 475, "maco": 475, "thermomechan": 476, "density500": 476, "500c": [476, 493], "006270676074462742": 476, "8752281279010555": 476, "11850119602448178": 476, "l_0": [476, 498], "4f": 476, "0471": 476, "inlin": 476, "uo_2": 476, "creep": 476, "amu": 477, "nucsbytyp": 477, "4706": 477, "043929425": 477, "00000000000e": 477, "50000000000e": 477, "60000000000e": 477, "11110000000e": 477, "70000000000e": 477, "80000000000e": 477, "40000000000e": 477, "90000000000e": 477, "68000000000e": 477, "46000000000e": 477, "48000000000e": 477, "74787200000e": 477, "62880000000e": 477, "17427219965e": 477, "02354704590e": 477, "74722532676e": 477, "u23f": 477, "56000000000e": 477, "39063206325e": 477, "83372800000e": 477, "40996345254e": 477, "40700000000e": 477, "07600000000e": 477, "00800000000e": 477, "li07": 477, "01600439548": 477, "92410004": 477, "li03": 477, "li04": 477, "li05": 477, "70924971603e": 477, "li06": 477, "li08": 477, "39900000000e": 477, "li09": 477, "78300000000e": 477, "75000000000e": 477, "lielement": 477, "standardweight": 477, "940037501798687": 477, "fullfactori": 478, "powermodif": 478, "tracer": 478, "0002": 478, "0003": 478, "40000000": 478, "70000000": 478, "100000000": 478, "queu": 478, "cladthicknessmodifi": 478, "componentdesign": 478, "cladmodif": 478, "0004": 478, "inde": [478, 489], "a6": 478, "8250000000000001": 478, "8500000000000001": 478, "875": 478, "cyclelengthmod": 478, "conclus": 478, "loadsuit": 478, "slower": [478, 488], "parametr": 478, "regress": 478, "lieu": 479, "crazi": 479, "hotter": 479, "710": 479, "interstiti": [479, 488], "punch": 479, "derivedcompon": 479, "unclad": 479, "breviti": 479, "block_shield": [479, 488], "block_reflector": 479, "777": 479, "block_control": 479, "block_plenum": [479, 488], "88888": 479, "overlai": [479, 488], "fuel_block": 479, "ic_x": 479, "weirdest": 479, "plena": 479, "trade": 479, "columnar": 479, "307": 479, "370": 479, "efpd": 479, "momentarili": 479, "sampleshuffl": 479, "frontend": 479, "0e23": 479, "violat": [479, 484], "shuffleparamet": 479, "cyclesecond": 479, "seconds_per_dai": 479, "peakfluenc": 479, "fastfluenc": [479, 484], "peakflux": 479, "philosophi": 479, "mistak": [479, 489], "nsc": 480, "00e": 480, "21e": 480, "50e": 480, "80e": 480, "40e": 480, "30e": 480, "63e": 480, "90e": 480, "16e": 480, "05e": 480, "225e": 480, "622e": 480, "70e": 480, "35e": 480, "87e": 480, "role": 480, "sig": 480, "apear": 480, "block_uo2": 480, "8190": 480, "fuel_gap_1": 480, "clad_zr": 480, "8360": 480, "9500": 480, "fuel_gap_2": 480, "aluminum": 480, "clad_al": 480, "9700": 480, "0800": 480, "guide_tube_moder": 480, "6800": 480, "fission_chamber_guide_tub": 480, "fission_chamber_mod": 480, "332": 480, "block_mox": 480, "ml": 480, "mm": 480, "mh": 480, "block_mod": 480, "said": 480, "fakebad": 480, "123456": 480, "genreport": [480, 492], "fiddl": 480, "yellow": 480, "red": 480, "xi": [480, 497], "yi": 480, "zi": 480, "reftestbas": 482, "powerdecai": [483, 484, 486], "decayheatcalctimesinsecond": 483, "arealpd": [483, 484, 494], "pct": 483, "bulimit": [483, 484], "chargebu": 483, "chargefi": 483, "chargetim": 483, "dust": 483, "dayssincelastmov": 483, "kinf": [483, 484, 486], "maxdpapeak": 483, "nummov": [483, 486], "detailednden": [483, 484, 486], "fi": [483, 484], "interf": [483, 484], "detailednuckei": [483, 484, 486], "unwis": 483, "crcriticalfract": 483, "crcurrentelev": 483, "crinsertedelev": 483, "crrodlength": 483, "crwithdrawnelev": 483, "withdrawn": 483, "thdeltapnograv": 483, "graviti": 483, "thdeltappump": 483, "rise": [483, 484, 486], "thdeltaptot": [483, 484], "thmassflowr": [483, 484], "thlocaldtout": [483, 484], "thlocaldtoutfuel": [483, 484], "thorificezon": [483, 484], "dischargetim": 483, "hcf": [483, 486, 488], "azimesh": 483, "radmesh": 483, "burnupmwdperkg": [484, 485], "fissilefract": 484, "moleshmbol": 484, "masshmbol": [484, 485], "moleshmbolbypin": 484, "moleshmnow": 484, "newdpa": 484, "percentbubypin": 484, "percentbumax": 484, "percentbumaxpinloc": 484, "percentbumin": 484, "cycleaverageburnmatrix": 484, "bugroupnum": 484, "burat": [484, 485], "buratepeak": 484, "detaileddpar": 484, "displacementx": 484, "displacementi": 484, "heliuminb4c": 484, "powerrx": 484, "nhmatbol": 484, "axialexptargetcompon": 484, "withregard": 484, "eqregion": 484, "eqcascad": 484, "cascad": [484, 489], "xstypenum": 484, "rxfueldensitycoeffpermass": 484, "\u03b4k": [484, 486], "rxfueldopplerconst": [484, 486], "rxfuelvoideddopplerconst": [484, 486], "rxfueltemperaturecoeffpermass": 484, "rxfuelvoidedtemperaturecoeffpermass": 484, "rxcladdensitycoeffpermass": 484, "rxcladdopplerconst": [484, 486], "rxcladtemperaturecoeffpermass": 484, "rxstructuredensitycoeffpermass": 484, "rxstructuredopplerconst": [484, 486], "rxstructuretemperaturecoeffpermass": 484, "rxcoolantdensitycoeffpermass": 484, "rxcoolanttemperaturecoeffpermass": 484, "rxfueldensitycoeffpertemp": [484, 486], "rxfueldopplercoeffpertemp": [484, 486], "rxfuelvoideddopplercoeffpertemp": [484, 486], "rxfueltemperaturecoeffpertemp": [484, 486], "rxfuelvoidedtemperaturecoeffpertemp": [484, 486], "rxcladdensitycoeffpertemp": [484, 486], "rxcladdopplercoeffpertemp": [484, 486], "rxcladtemperaturecoeffpertemp": [484, 486], "rxstructuredensitycoeffpertemp": [484, 486], "rxstructuredopplercoeffpertemp": [484, 486], "rxstructuretemperaturecoeffpertemp": [484, 486], "rxcoolantdensitycoeffpertemp": [484, 486], "rxcoolanttemperaturecoeffpertemp": [484, 486], "reliabl": 484, "axextennodeheight": 484, "blockbeta": 484, "blockf": 484, "breedratio": 484, "fissiledestroi": 484, "fissilebefor": 484, "substep": [484, 492], "fissileaft": 484, "cladacci": 484, "\u00b5m": [484, 486], "convratio": 484, "crwastag": 484, "acci": 484, "cyclicnerr": 484, "heightbol": 484, "intrinsicsourc": 484, "intrinsicsourcedecai": 484, "mchan": 484, "mreg": 484, "newdpapeak": 484, "percentbupeak": 484, "powershapedelta": 484, "pressurelosscoeff": 484, "hardwar": 484, "thhotchannelcladmidwallt": 484, "midwal": 484, "thhotchannelheattransfercoeff": 484, "film": 484, "thhotchannelcladodt": 484, "thhotchannelcladidt": 484, "thhotchannelfuelodt": 484, "thhotchannelfuelcenterlinet": 484, "centerlin": 484, "th0sigmacladodt": 484, "th2sigmacladodt": 484, "th3sigmacladodt": 484, "th0sigmacladidt": 484, "th2sigmacladidt": 484, "th3sigmacladidt": 484, "thdilationpressur": 484, "dilat": 484, "thtfuelcl": 484, "thtfuelod": 484, "thaveragecladodt": 484, "thaveragecladidt": 484, "thaveragecladtemp": 484, "thaveragegaptemp": 484, "thaverageducttemp": 484, "thcoolantstatict": 484, "thhotchanneloutlett": 484, "thcorntemp": 484, "degc": 484, "thedgetemp": 484, "thhotchannel": 484, "gasreleasefract": 484, "bondremov": [484, 492], "cladwastag": 484, "totalcladstrain": 484, "diametr": 484, "axialgrowthpct": 484, "growth": [484, 486, 492], "fppeakfueltemp": 484, "fpavefueltemp": 484, "axmesh": 484, "adjmgflux": 484, "lastmgflux": 484, "mgfluxgamma": 484, "mggammasrc": 484, "gammasrc": 484, "mgfluxsk": 484, "pinmgfluxesadj": 484, "naxialseg": 484, "pinmgfluxesgamma": 484, "axialpowerprofil": 484, "axialpowerprofileneutron": 484, "axialpowerprofilegamma": 484, "betad": 484, "chid": 484, "linpow": 484, "unavail": 484, "linpowbypinneutron": 484, "linpowbypingamma": 484, "reactionr": 484, "reactionstodb": 484, "pointsedgefastfluxfr": 484, "100kev": 484, "pointsedgedpa": 484, "pointsedgedpar": 484, "cornerfastflux": 484, "pointscornerfastfluxfr": 484, "pointscornerdpa": 484, "pointscornerdpar": 484, "ratebal": 484, "rateextsrc": 484, "ratefisab": 484, "ratefissrc": 484, "rateleak": 484, "leak": 484, "rateparasab": 484, "parasit": 484, "fertil": [484, 486], "rateprodnet": 484, "ratescatin": 484, "ratescatout": 484, "capturepowerfrac": 484, "fluxadj": 484, "fluxadjpeak": 484, "pdensdecai": 484, "fertilebonu": 484, "fisden": 484, "fisdenshom": 484, "fluxgamma": 484, "fluxpeak": 484, "medabs": 484, "medfis": 484, "medflx": 484, "pdensgamma": 484, "pdensneutron": 484, "ppden": 484, "ppdensgamma": 484, "rateab": 484, "fisson": 484, "ratecap": 484, "rateprodn2n": 484, "ratefi": 484, "rateprodfi": 484, "detaileddpathiscycl": 484, "detaileddpapeakr": 484, "enrichmentbol": 484, "fastfluxfr": 484, "pdensgener": 484, "zzzaaa": 486, "zzz": 486, "maxassemnum": [486, 499], "crmostvaluableprimaryrodloc": 486, "crmostvaluablesecondaryrodloc": 486, "crworthrequiredprimari": 486, "crworthrequiredsecondari": 486, "crtransientoverpowerworth": 486, "critsearchslop": 486, "doublingtim": 486, "fissilemass": 486, "heavymetalmass": 486, "lastkeff": 486, "maxcladfcci": 486, "maxgriddpa": 486, "minutessincestart": 486, "outsidefuelr": 486, "outsidefuelringfluxfr": 486, "peakgriddpaat60year": 486, "totalintrinsicsourc": 486, "totalintrinsicsourcedecai": 486, "thmaxdeltappump": 486, "thmaxdilationpressur": 486, "thoutlettempid": 486, "pergram": 486, "medabscor": 486, "medfluxcor": 486, "medsrccor": 486, "pkflux": 486, "maxdetaileddpapeak": 486, "maxflux": 486, "adjweightedfissrc": 486, "maxbuf": 486, "maxbui": 486, "peakkeff": 486, "fastfluxfravg": 486, "leakagefractot": 486, "leakagefracplanar": 486, "leakagefracaxi": 486, "maxpden": 486, "maxpd": 486, "bred": 486, "betacompon": 486, "betadecayconst": 486, "promptneutrongenerationtim": 486, "promptneutronlifetim": 486, "rxfuelaxialexpansioncoeffpertemp": 486, "rxfuelaxialexpansioncoeffperperc": 486, "dk": [486, 491], "kk": [486, 491], "rxgridplateradialexpansioncoeffpertemp": 486, "rxaclpradialexpansioncoeffpertemp": 486, "rxcontrolroddrivelineexpansioncoeffpertemp": 486, "drivelin": 486, "rxcorewidecoolantvoidworth": 486, "rxspatiallydependentcoolantvoidworth": 486, "boeckeff": 486, "boec": 486, "maxcyclicnerr": 486, "breedingratio": 486, "convratiocor": 486, "absperfiscor": 486, "axialexpansionperc": 486, "fisfrac": 486, "fisratecor": 486, "infin": [486, 497], "refkeff": 486, "makeup": 488, "core_grid": 488, "wit": 488, "elementari": 488, "asssembli": 488, "neglect": 488, "resus": 488, "block_nam": 488, "flexibli": 488, "757": 488, "regex": 488, "extrud": 488, "componentnam": 488, "dimensionnam": 488, "label1": 488, "ousid": 488, "905": 488, "burnabl": 488, "fuelgrid": 488, "possess": 488, "buri": 488, "unambigu": 488, "standard_height": 488, "standard_axial_mesh_point": 488, "inner_core_block": 488, "dragger": 488, "defaul": 488, "superset": 488, "79213903298633": 488, "000664847887388523": 488, "182466356404319": 488, "00323253628006144": 488, "705266053783901": 488, "0171714161260001": 488, "00233843050046998": 488, "0831976890804466": 488, "00566266993741259": 488, "rect": 488, "cicl": 488, "downsid": 488, "pitchdefiningcompon": 488, "carbon_flag": 488, "getfactor": 489, "newincom": 489, "oldoutgo": 489, "daisi": 489, "overton": 489, "a3": 489, "a4": 489, "a5": 489, "thusli": 489, "essenc": 489, "peripheri": 489, "bluepint": 489, "watch": 489, "typenum": 489, "numdischarg": 489, "chargeenrich": 489, "defaultfactor": 489, "factorsearchflag": 489, "walkthrough": 490, "clicker": 490, "excerpt": [491, 496], "003454": 491, "branchverbos": [491, 492, 496], "clusterexclus": 491, "crosssectioncontrol": [491, 492], "da": 491, "palett": 491, "warrant": 491, "brush": 491, "multiphys": 491, "detailassemlocationsbol": [491, 492], "detailassemnum": [491, 492], "detailallassem": [491, 492], "dollar": 491, "cent": 491, "decayconst": [491, 492], "six": 491, "2425": 491, "uptim": [491, 499], "shorthand": 491, "overcom": 491, "emploi": [491, 492], "ramp": 491, "prolong": 491, "slight": 491, "reduct": 491, "downtim": 491, "unevenli": 491, "buildup": 491, "rerun": 491, "000000": 491, "001002": 491, "loadstyl": [491, 492], "fromdb": [491, 492], "remaind": [491, 498], "frominput": [491, 492], "skipcycl": [491, 492], "tout": 492, "acceptableblockareaerror": 492, "assemflagstoskipaxialexpa": 492, "nsion": 492, "assempowsummari": 492, "bureducingassemblyr": 492, "otat": 492, "assemblyrotationstationar": 492, "autogenerateblockgrid": 492, "automaticvariablemesh": 492, "axialexpans": 492, "axialmeshrefinementfactor": 492, "bccoeffici": 492, "extrapolat": 492, "zerosurfaceflux": 492, "zeroinwardcurr": 492, "circularringpitch": 492, "claddingstrain": 492, "claddingwastag": 492, "copyfilesfrom": 492, "copyfilesto": 492, "coverageconfigfil": 492, "dict_k": 492, "ei": 492, "customfuelmanagementindex": 492, "242199": 492, "cyclesskiptightcouplingin": 492, "teract": 492, "dbstorageaftercycl": 492, "debugdb": 492, "debugmems": 492, "deferredinterfacenam": 492, "deferredinterfacescycl": 492, "disableblocktypeexclus": 492, "inxsgener": 492, "doorificedth": 492, "thkernel": 492, "01568627": 492, "451e": 492, "dpaxsset": 492, "dpa_ebrii_": 492, "eigenprob": 492, "epseig": 492, "epsfsavg": 492, "epsfspoint": 492, "eqdirect": 492, "shuf": 492, "existingfixedsourc": 492, "varsrc": 492, "fgremov": 492, "fissiongasyieldfract": 492, "forcedbparam": 492, "honor": 492, "nofissionproduct": 492, "infinitelydilut": 492, "explicitfissionp": 492, "roduct": 492, "freshfeedtyp": 492, "fuelperformanceengin": 492, "globalfluxact": 492, "gridplatedpaxsset": 492, "groupstructur": 492, "growtofullcoreafterload": 492, "independentvarnam": 492, "infinitedilutecutoff": 492, "initializeburnchain": 492, "jumpringnum": 492, "levelspercascad": 492, "referencef": 492, "issionprod": 492, "uct": 492, "loadfromdbeverynod": 492, "lowpowerregionfract": 492, "makeallblocklfpsindepend": 492, "explicitf": 492, "issionproduct": 492, "minmeshsizeratio": 492, "dp1": 492, "dp2": 492, "minimumfissilefract": 492, "moduleverbos": [492, 496], "mpitaskspernod": 492, "neutronicstyp": 492, "numbermeshperedg": 492, "operatorloc": 492, "outputcacheloc": 492, "plotshufflearrow": 492, "namepl": 492, "reallysmallrun": 492, "removepercycl": 492, "restartneutron": 492, "runlatticephysicsbeforesh": 492, "uffl": 492, "smallrun": 492, "sortreactor": 492, "2024": 492, "calul": 492, "grid_pla": 492, "summarizeassemdesign": 492, "tightcouplingmaxnumit": 492, "tightcoup": 492, "lingsettin": 492, "dict_kei": 492, "timelineinclusioncutoff": 492, "tolerateburnupchang": 492, "test_what": 492, "myplugin": 492, "xsblockrepresent": 492, "fluxweightedaverag": 492, "componentaverage1dslab": 492, "xsbucklingconverg": 492, "xseigenvalueconverg": 492, "mc2v2": 492, "xsscatteringord": 492, "zerooutnuclidesnotindb": 492, "loc1": 492, "loc2": 492, "loc3": 492, "odhot": 493, "id600": 493, "numclad": 493, "cladmat": 493, "mydatabas": 494, "ahist": 494, "filesystem": 494, "endian": 494, "portabl": 494, "supplement": 494, "successfulli": 494, "standpoint": 494, "stroke": 494, "glean": 494, "locationtyp": 494, "comp_typ": 494, "mold": 494, "tricki": 494, "interspers": 494, "savephysicsio": 495, "cxny": 495, "00x00y": 495, "xtra": 496, "traceback": 496, "tail": 496, "monitor": 496, "myrun": 496, "thaveragecladtemperatur": 497, "k_": 497, "l2": 497, "_2": 497, "a_": 497, "b_": 497, "mathbf": 497, "quad": 497, "foral": 497, "epsilon_i": 497, "textbf": 497, "t_0": 498, "rearrang": 498, "l_1": 498, "t_1": 498, "l_h": 498, "t_h": 498, "t_c": 498, "l_c": 498, "rditernum": 499, "capacityfactor": 499, "lcoe": 499, "levelis": 499, "usd": 499, "kwh": 499, "efeedmt": 499, "efissil": 499, "eswu": 499, "swu": 499}, "objects": {"": [[0, 0, 0, "-", "armi"]], "armi": [[0, 1, 1, "", "applyAsyncioWindowsWorkaround"], [1, 0, 0, "-", "apps"], [2, 0, 0, "-", "bookkeeping"], [43, 0, 0, "-", "cases"], [57, 0, 0, "-", "cli"], [0, 1, 1, "", "configure"], [73, 0, 0, "-", "conftest"], [74, 0, 0, "-", "context"], [0, 1, 1, "", "disableFutureConfigures"], [0, 1, 1, "", "getApp"], [0, 1, 1, "", "getDefaultPluginManager"], [0, 1, 1, "", "getDefaultPlugins"], [0, 1, 1, "", "getPluginManager"], [0, 1, 1, "", "getPluginManagerOrFail"], [0, 1, 1, "", "init"], [75, 0, 0, "-", "interfaces"], [0, 1, 1, "", "isConfigured"], [0, 1, 1, "", "isStableReleaseVersion"], [76, 0, 0, "-", "materials"], [140, 0, 0, "-", "meta"], [141, 0, 0, "-", "migration"], [148, 0, 0, "-", "mpiActions"], [149, 0, 0, "-", "nucDirectory"], [161, 0, 0, "-", "nuclearDataIO"], [199, 0, 0, "-", "operators"], [209, 0, 0, "-", "physics"], [278, 0, 0, "-", "pluginManager"], [279, 0, 0, "-", "plugins"], [280, 0, 0, "-", "reactor"], [356, 0, 0, "-", "runLog"], [357, 0, 0, "-", "settings"], [369, 0, 0, "-", "tests"], [385, 0, 0, "-", "utils"]], "armi.apps": [[1, 2, 1, "", "App"]], "armi.apps.App": [[1, 3, 1, "", "getParamRenames"], [1, 3, 1, "", "getSettings"], [1, 4, 1, "", "name"], [1, 5, 1, "", "pluginManager"], [1, 3, 1, "", "registerPluginFlags"], [1, 3, 1, "", "registerUserPlugins"], [1, 5, 1, "", "splashText"], [1, 5, 1, "", "version"]], "armi.bookkeeping": [[2, 2, 1, "", "BookkeepingPlugin"], [3, 0, 0, "-", "db"], [16, 0, 0, "-", "historyTracker"], [17, 0, 0, "-", "mainInterface"], [18, 0, 0, "-", "memoryProfiler"], [19, 0, 0, "-", "report"], [29, 0, 0, "-", "snapshotInterface"], [30, 0, 0, "-", "tests"], [34, 0, 0, "-", "visualization"]], "armi.bookkeeping.BookkeepingPlugin": [[2, 3, 1, "", "defineCaseDependencies"], [2, 3, 1, "", "defineEntryPoints"], [2, 3, 1, "", "exposeInterfaces"], [2, 3, 1, "", "getReportContents"], [2, 3, 1, "", "mpiActionRequiresReset"]], "armi.bookkeeping.db": [[3, 2, 1, "", "Database3"], [3, 2, 1, "", "DatabaseInterface"], [3, 2, 1, "", "Permissions"], [4, 0, 0, "-", "compareDB3"], [3, 1, 1, "", "compareDatabases"], [3, 1, 1, "", "convertDatabase"], [5, 0, 0, "-", "database3"], [3, 1, 1, "", "databaseFactory"], [6, 0, 0, "-", "databaseInterface"], [7, 0, 0, "-", "factory"], [8, 0, 0, "-", "layout"], [3, 1, 1, "", "loadOperator"], [9, 0, 0, "-", "permissions"], [10, 0, 0, "-", "tests"], [15, 0, 0, "-", "typedefs"]], "armi.bookkeeping.db.Database3": [[3, 3, 1, "", "close"], [3, 5, 1, "", "fileName"], [3, 3, 1, "", "genAuxiliaryData"], [3, 3, 1, "", "genTimeStepGroups"], [3, 3, 1, "", "genTimeSteps"], [3, 3, 1, "", "getAuxiliaryDataPath"], [3, 3, 1, "", "getH5Group"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistoriesByLocation"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "getHistoryByLocation"], [3, 3, 1, "", "getLayout"], [3, 3, 1, "", "grabLocalCommitHash"], [3, 3, 1, "", "hasTimeStep"], [3, 3, 1, "", "keys"], [3, 3, 1, "", "load"], [3, 3, 1, "", "loadBlueprints"], [3, 3, 1, "", "loadCS"], [3, 3, 1, "", "loadGeometry"], [3, 3, 1, "", "mergeHistory"], [3, 3, 1, "", "open"], [3, 3, 1, "", "readInputsFromDB"], [3, 3, 1, "", "splitDatabase"], [3, 3, 1, "", "syncToSharedFolder"], [3, 4, 1, "", "timeNodeGroupPattern"], [3, 5, 1, "", "version"], [3, 5, 1, "", "versionMajor"], [3, 5, 1, "", "versionMinor"], [3, 3, 1, "", "writeInputsToDB"], [3, 3, 1, "", "writeSystemAttributes"], [3, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.DatabaseInterface": [[3, 5, 1, "", "database"], [3, 3, 1, "", "distributable"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "initDB"], [3, 3, 1, "", "interactBOL"], [3, 3, 1, "", "interactDistributeState"], [3, 3, 1, "", "interactEOC"], [3, 3, 1, "", "interactEOL"], [3, 3, 1, "", "interactError"], [3, 3, 1, "", "interactEveryNode"], [3, 3, 1, "", "loadState"], [3, 4, 1, "", "name"], [3, 3, 1, "", "prepRestartRun"], [3, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.Permissions": [[3, 4, 1, "", "CREATE_FILE_FIE"], [3, 4, 1, "", "CREATE_FILE_FIE2"], [3, 4, 1, "", "CREATE_FILE_TIE"], [3, 4, 1, "", "DEFAULT"], [3, 4, 1, "", "READ_ONLY_FME"], [3, 4, 1, "", "READ_WRITE_CREATE"], [3, 4, 1, "", "READ_WRITE_FME"], [3, 4, 1, "", "all"], [3, 4, 1, "", "create"], [3, 4, 1, "", "read"], [3, 4, 1, "", "write"]], "armi.bookkeeping.db.compareDB3": [[4, 2, 1, "", "DiffResults"], [4, 2, 1, "", "OutputWriter"], [4, 1, 1, "", "compareDatabases"]], "armi.bookkeeping.db.compareDB3.DiffResults": [[4, 3, 1, "", "addDiff"], [4, 3, 1, "", "addStructureDiffs"], [4, 3, 1, "", "addTimeStep"], [4, 3, 1, "", "nDiffs"], [4, 3, 1, "", "reportDiffs"]], "armi.bookkeeping.db.compareDB3.OutputWriter": [[4, 3, 1, "", "writeln"]], "armi.bookkeeping.db.database3": [[5, 2, 1, "", "Database3"], [5, 1, 1, "", "collectBlockNumberDensities"], [5, 1, 1, "", "getH5GroupName"], [5, 1, 1, "", "packSpecialData"], [5, 1, 1, "", "unpackSpecialData"]], "armi.bookkeeping.db.database3.Database3": [[5, 3, 1, "", "close"], [5, 5, 1, "", "fileName"], [5, 3, 1, "", "genAuxiliaryData"], [5, 3, 1, "", "genTimeStepGroups"], [5, 3, 1, "", "genTimeSteps"], [5, 3, 1, "", "getAuxiliaryDataPath"], [5, 3, 1, "", "getH5Group"], [5, 3, 1, "", "getHistories"], [5, 3, 1, "", "getHistoriesByLocation"], [5, 3, 1, "", "getHistory"], [5, 3, 1, "", "getHistoryByLocation"], [5, 3, 1, "", "getLayout"], [5, 3, 1, "", "grabLocalCommitHash"], [5, 4, 1, "", "h5db"], [5, 3, 1, "", "hasTimeStep"], [5, 3, 1, "", "keys"], [5, 3, 1, "", "load"], [5, 3, 1, "", "loadBlueprints"], [5, 3, 1, "", "loadCS"], [5, 3, 1, "", "loadGeometry"], [5, 3, 1, "", "mergeHistory"], [5, 3, 1, "", "open"], [5, 3, 1, "", "readInputsFromDB"], [5, 3, 1, "", "splitDatabase"], [5, 3, 1, "", "syncToSharedFolder"], [5, 4, 1, "", "timeNodeGroupPattern"], [5, 5, 1, "", "version"], [5, 5, 1, "", "versionMajor"], [5, 5, 1, "", "versionMinor"], [5, 3, 1, "", "writeInputsToDB"], [5, 3, 1, "", "writeSystemAttributes"], [5, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.databaseInterface": [[6, 2, 1, "", "DatabaseInterface"], [6, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.db.databaseInterface.DatabaseInterface": [[6, 5, 1, "", "database"], [6, 3, 1, "", "distributable"], [6, 3, 1, "", "getHistories"], [6, 3, 1, "", "getHistory"], [6, 3, 1, "", "initDB"], [6, 3, 1, "", "interactBOL"], [6, 3, 1, "", "interactDistributeState"], [6, 3, 1, "", "interactEOC"], [6, 3, 1, "", "interactEOL"], [6, 3, 1, "", "interactError"], [6, 3, 1, "", "interactEveryNode"], [6, 3, 1, "", "loadState"], [6, 4, 1, "", "name"], [6, 3, 1, "", "prepRestartRun"], [6, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[7, 1, 1, "", "databaseFactory"]], "armi.bookkeeping.db.layout": [[8, 2, 1, "", "Layout"], [8, 1, 1, "", "replaceNonesWithNonsense"], [8, 1, 1, "", "replaceNonsenseWithNones"]], "armi.bookkeeping.db.layout.Layout": [[8, 3, 1, "", "allSubclasses"], [8, 3, 1, "", "computeAncestors"], [8, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.permissions": [[9, 2, 1, "", "Permissions"]], "armi.bookkeeping.db.permissions.Permissions": [[9, 4, 1, "", "CREATE_FILE_FIE"], [9, 4, 1, "", "CREATE_FILE_FIE2"], [9, 4, 1, "", "CREATE_FILE_TIE"], [9, 4, 1, "", "DEFAULT"], [9, 4, 1, "", "READ_ONLY_FME"], [9, 4, 1, "", "READ_WRITE_CREATE"], [9, 4, 1, "", "READ_WRITE_FME"], [9, 4, 1, "", "all"], [9, 4, 1, "", "create"], [9, 4, 1, "", "read"], [9, 4, 1, "", "write"]], "armi.bookkeeping.db.tests": [[11, 0, 0, "-", "test_comparedb3"], [12, 0, 0, "-", "test_database3"], [13, 0, 0, "-", "test_databaseInterface"], [14, 0, 0, "-", "test_layout"]], "armi.bookkeeping.db.tests.test_comparedb3": [[11, 2, 1, "", "TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3": [[11, 3, 1, "", "test_compareAuxData"], [11, 3, 1, "", "test_compareDatabaseDuplicate"], [11, 3, 1, "", "test_compareDatabaseSim"], [11, 3, 1, "", "test_compareSets"], [11, 3, 1, "", "test_diffResultsBasic"], [11, 3, 1, "", "test_diffSimpleData"], [11, 3, 1, "", "test_diffSpecialData"], [11, 3, 1, "", "test_outputWriter"]], "armi.bookkeeping.db.tests.test_database3": [[12, 2, 1, "", "TestDatabase3"]], "armi.bookkeeping.db.tests.test_database3.TestDatabase3": [[12, 3, 1, "", "makeHistory"], [12, 3, 1, "", "makeShuffleHistory"], [12, 3, 1, "", "test_auxData"], [12, 3, 1, "", "test_computeParents"], [12, 3, 1, "", "test_deleting"], [12, 3, 1, "", "test_fileName"], [12, 3, 1, "", "test_getH5File"], [12, 3, 1, "", "test_grabLocalCommitHash"], [12, 3, 1, "", "test_history"], [12, 3, 1, "", "test_load"], [12, 3, 1, "", "test_loadBlueprints"], [12, 3, 1, "", "test_loadCS"], [12, 3, 1, "", "test_loadSortSetting"], [12, 3, 1, "", "test_mergeHistory"], [12, 3, 1, "", "test_open"], [12, 3, 1, "", "test_prepRestartRun"], [12, 3, 1, "", "test_readInputsFromDB"], [12, 3, 1, "", "test_replaceNones"], [12, 3, 1, "", "test_splitDatabase"], [12, 3, 1, "", "test_writeToDB"]], "armi.bookkeeping.db.tests.test_databaseInterface": [[13, 2, 1, "", "MockInterface"], [13, 2, 1, "", "TestBadName"], [13, 2, 1, "", "TestDatabaseInterface"], [13, 2, 1, "", "TestDatabaseReading"], [13, 2, 1, "", "TestDatabaseWriter"], [13, 2, 1, "", "TestStandardFollowOn"], [13, 1, 1, "", "getSimpleDBOperator"]], "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface": [[13, 3, 1, "", "interactEveryNode"], [13, 4, 1, "", "name"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName": [[13, 3, 1, "", "test_badDBName"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface": [[13, 3, 1, "", "test_distributable"], [13, 3, 1, "", "test_interactBOL"], [13, 3, 1, "", "test_interactEveryNodeReturn"], [13, 3, 1, "", "test_timeNodeLoop_tightCoupling"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading": [[13, 3, 1, "", "test_growToFullCore"], [13, 3, 1, "", "test_growToFullCoreFromFactory"], [13, 3, 1, "", "test_growToFullCoreFromFactoryWithCS"], [13, 3, 1, "", "test_growToFullCoreWithCS"], [13, 3, 1, "", "test_readWithoutInputs"], [13, 3, 1, "", "test_readWritten"], [13, 3, 1, "", "test_variousTypesWork"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter": [[13, 3, 1, "", "test_getHistory"], [13, 3, 1, "", "test_getHistoryByLocation"], [13, 3, 1, "", "test_metaDataEndFail"], [13, 3, 1, "", "test_metaData_endSuccessfully"], [13, 3, 1, "", "test_writeSystemAttributes"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn": [[13, 3, 1, "", "test_standardRestart"]], "armi.bookkeeping.db.tests.test_layout": [[14, 2, 1, "", "TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout.TestLocationPacking": [[14, 3, 1, "", "test_close"], [14, 3, 1, "", "test_locationPacking"], [14, 3, 1, "", "test_locationPackingOldVersion"], [14, 3, 1, "", "test_locationPackingOlderVersions"]], "armi.bookkeeping.historyTracker": [[16, 2, 1, "", "HistoryTrackerInterface"], [16, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.historyTracker.HistoryTrackerInterface": [[16, 3, 1, "", "addAllFuelAssems"], [16, 3, 1, "", "addDetailAssembliesBOL"], [16, 3, 1, "", "addDetailAssembly"], [16, 3, 1, "", "addDetailAssemsByAssemNums"], [16, 3, 1, "", "filterTimeIndices"], [16, 3, 1, "", "getBlockHistoryVal"], [16, 3, 1, "", "getDetailAssemblies"], [16, 3, 1, "", "getDetailBlocks"], [16, 3, 1, "", "getTimeSteps"], [16, 3, 1, "", "getTrackedParams"], [16, 3, 1, "", "interactBOC"], [16, 3, 1, "", "interactBOL"], [16, 3, 1, "", "interactEOL"], [16, 4, 1, "", "name"], [16, 3, 1, "", "preloadBlockHistoryVals"], [16, 3, 1, "", "unloadBlockHistoryVals"], [16, 3, 1, "", "writeAssemHistory"]], "armi.bookkeeping.mainInterface": [[17, 2, 1, "", "MainInterface"], [17, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.mainInterface.MainInterface": [[17, 3, 1, "", "cleanARMIFiles"], [17, 3, 1, "", "cleanLastCycleFiles"], [17, 3, 1, "", "interactBOC"], [17, 3, 1, "", "interactBOL"], [17, 3, 1, "", "interactEOL"], [17, 3, 1, "", "interactEveryNode"], [17, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler": [[18, 2, 1, "", "InstanceCounter"], [18, 2, 1, "", "KlassCounter"], [18, 2, 1, "", "MemoryProfiler"], [18, 2, 1, "", "PrintSystemMemoryUsageAction"], [18, 2, 1, "", "ProfileMemoryUsageAction"], [18, 2, 1, "", "SystemAndProcessMemoryUsage"], [18, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.memoryProfiler.InstanceCounter": [[18, 3, 1, "", "add"]], "armi.bookkeeping.memoryProfiler.KlassCounter": [[18, 3, 1, "", "countObjects"]], "armi.bookkeeping.memoryProfiler.MemoryProfiler": [[18, 3, 1, "", "checkForDuplicateObjectsOnArmiModel"], [18, 3, 1, "", "displayMemoryUsage"], [18, 3, 1, "", "getReferrers"], [18, 3, 1, "", "interactBOL"], [18, 3, 1, "", "interactEOL"], [18, 3, 1, "", "interactEveryNode"], [18, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction": [[18, 3, 1, "", "invokeHook"], [18, 5, 1, "", "maxProcessMemoryInMB"], [18, 5, 1, "", "minProcessMemoryInMB"], [18, 3, 1, "", "printUsage"]], "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction": [[18, 3, 1, "", "invokeHook"]], "armi.bookkeeping.report": [[20, 0, 0, "-", "data"], [21, 0, 0, "-", "html"], [22, 0, 0, "-", "newReportUtils"], [23, 0, 0, "-", "newReports"], [24, 0, 0, "-", "reportInterface"], [25, 0, 0, "-", "reportingUtils"], [19, 1, 1, "", "setData"], [26, 0, 0, "-", "tests"]], "armi.bookkeeping.report.data": [[20, 2, 1, "", "Group"], [20, 2, 1, "", "Image"], [20, 2, 1, "", "Report"], [20, 2, 1, "", "Table"]], "armi.bookkeeping.report.data.Group": [[20, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Image": [[20, 4, 1, "", "count"], [20, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Report": [[20, 3, 1, "", "addToReport"], [20, 4, 1, "", "componentWellGroups"], [20, 4, 1, "", "groupsOrderFirst"], [20, 3, 1, "", "writeGroupsHTML"], [20, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Table": [[20, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.html": [[21, 2, 1, "", "A"], [21, 2, 1, "", "B"], [21, 2, 1, "", "Body"], [21, 2, 1, "", "Caption"], [21, 2, 1, "", "Div"], [21, 2, 1, "", "Footer"], [21, 2, 1, "", "H1"], [21, 2, 1, "", "H2"], [21, 2, 1, "", "H3"], [21, 2, 1, "", "H4"], [21, 2, 1, "", "HTMLFile"], [21, 2, 1, "", "Head"], [21, 2, 1, "", "Html"], [21, 2, 1, "", "Img"], [21, 2, 1, "", "LI"], [21, 2, 1, "", "Link"], [21, 2, 1, "", "P"], [21, 2, 1, "", "Script"], [21, 2, 1, "", "Span"], [21, 2, 1, "", "Style"], [21, 2, 1, "", "TBody"], [21, 2, 1, "", "TD"], [21, 2, 1, "", "TH"], [21, 2, 1, "", "THead"], [21, 2, 1, "", "TR"], [21, 2, 1, "", "Table"], [21, 2, 1, "", "Tag"], [21, 2, 1, "", "Title"], [21, 2, 1, "", "UL"], [21, 1, 1, "", "encode64"], [21, 1, 1, "", "writeStandardReportTemplate"]], "armi.bookkeeping.report.html.A": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.B": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Body": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Caption": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Div": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Footer": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H1": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H2": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H3": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H4": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.HTMLFile": [[21, 3, 1, "", "write"], [21, 3, 1, "", "writeEscaped"]], "armi.bookkeeping.report.html.Head": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Html": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Img": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.LI": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Link": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.P": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Script": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Span": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Style": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TBody": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TD": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TH": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.THead": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TR": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Table": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Tag": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Title": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.UL": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.newReportUtils": [[22, 6, 1, "", "DESIGN"], [22, 1, 1, "", "comprehensiveBOLContent"], [22, 1, 1, "", "createDimensionReport"], [22, 1, 1, "", "getPinDesignTable"], [22, 1, 1, "", "insertAreaFractionsReport"], [22, 1, 1, "", "insertBlockDesignReport"], [22, 1, 1, "", "insertBlockDiagrams"], [22, 1, 1, "", "insertBlueprintContent"], [22, 1, 1, "", "insertCoreAndAssemblyMaps"], [22, 1, 1, "", "insertCoreDesignReport"], [22, 1, 1, "", "insertDesignContent"], [22, 1, 1, "", "insertEndOfLifeContent"], [22, 1, 1, "", "insertGeneralReportContent"], [22, 1, 1, "", "insertMetaTable"], [22, 1, 1, "", "insertSettingsData"]], "armi.bookkeeping.report.newReports": [[23, 2, 1, "", "Image"], [23, 2, 1, "", "ReportContent"], [23, 2, 1, "", "ReportNode"], [23, 2, 1, "", "ReportStage"], [23, 2, 1, "", "Section"], [23, 2, 1, "", "Table"], [23, 2, 1, "", "TimeSeries"], [23, 1, 1, "", "encode64"]], "armi.bookkeeping.report.newReports.Image": [[23, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportContent": [[23, 3, 1, "", "get"], [23, 3, 1, "", "tableOfContents"], [23, 3, 1, "", "writeReports"]], "armi.bookkeeping.report.newReports.ReportNode": [[23, 4, 1, "", "levelDict"], [23, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportStage": [[23, 4, 1, "", "Begin"], [23, 4, 1, "", "End"], [23, 4, 1, "", "Standard"]], "armi.bookkeeping.report.newReports.Section": [[23, 3, 1, "", "addChildElement"], [23, 3, 1, "", "get"], [23, 3, 1, "", "items"], [23, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.Table": [[23, 3, 1, "", "addRow"], [23, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.TimeSeries": [[23, 3, 1, "", "add"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "render"]], "armi.bookkeeping.report.reportInterface": [[24, 2, 1, "", "ReportInterface"], [24, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.report.reportInterface.ReportInterface": [[24, 3, 1, "", "distributable"], [24, 3, 1, "", "generateDesignReport"], [24, 3, 1, "", "interactBOC"], [24, 3, 1, "", "interactBOL"], [24, 3, 1, "", "interactEOC"], [24, 3, 1, "", "interactEOL"], [24, 3, 1, "", "interactEveryNode"], [24, 4, 1, "", "name"], [24, 3, 1, "", "printReports"], [24, 4, 1, "", "reports"], [24, 3, 1, "", "writeReports"], [24, 3, 1, "", "writeRunSummary"]], "armi.bookkeeping.report.reportingUtils": [[25, 1, 1, "", "getInterfaceStackSummary"], [25, 1, 1, "", "makeBlockDesignReport"], [25, 1, 1, "", "makeCoreAndAssemblyMaps"], [25, 1, 1, "", "makeCoreDesignReport"], [25, 1, 1, "", "setNeutronBalancesReport"], [25, 1, 1, "", "summarizePinDesign"], [25, 1, 1, "", "summarizePower"], [25, 1, 1, "", "summarizePowerPeaking"], [25, 1, 1, "", "writeAssemblyMassSummary"], [25, 1, 1, "", "writeCycleSummary"], [25, 1, 1, "", "writeTightCouplingConvergenceSummary"], [25, 1, 1, "", "writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[27, 0, 0, "-", "test_newReport"], [28, 0, 0, "-", "test_report"]], "armi.bookkeeping.report.tests.test_newReport": [[27, 2, 1, "", "TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation": [[27, 3, 1, "", "test_neutronicsPlotFunctions"], [27, 3, 1, "", "test_reportBasics"], [27, 3, 1, "", "test_reportContents"], [27, 3, 1, "", "test_reportContentsEnd"], [27, 3, 1, "", "test_reportLogs"], [27, 3, 1, "", "test_tableCreation"], [27, 3, 1, "", "test_timeSeries"], [27, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report": [[28, 2, 1, "", "TestReport"], [28, 2, 1, "", "TestReportInterface"]], "armi.bookkeeping.report.tests.test_report.TestReport": [[28, 3, 1, "", "test_getData"], [28, 3, 1, "", "test_reactorSpecificReporting"], [28, 3, 1, "", "test_setData"], [28, 3, 1, "", "test_writeWelcomeHeaders"]], "armi.bookkeeping.report.tests.test_report.TestReportInterface": [[28, 3, 1, "", "test_distributableReportInt"], [28, 3, 1, "", "test_interactBOC"], [28, 3, 1, "", "test_interactBOLReportInt"], [28, 3, 1, "", "test_interactEOC"], [28, 3, 1, "", "test_interactEOL"], [28, 3, 1, "", "test_interactEveryNode"], [28, 3, 1, "", "test_printReports"], [28, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.snapshotInterface": [[29, 2, 1, "", "SnapshotInterface"], [29, 1, 1, "", "describeInterfaces"], [29, 1, 1, "", "extractCycleNodeFromStamp"], [29, 1, 1, "", "getCycleNodeStamp"]], "armi.bookkeeping.snapshotInterface.SnapshotInterface": [[29, 3, 1, "", "activateDefaultSnapshots"], [29, 3, 1, "", "interactBOL"], [29, 3, 1, "", "interactCoupled"], [29, 3, 1, "", "interactEveryNode"], [29, 4, 1, "", "name"]], "armi.bookkeeping.tests": [[31, 0, 0, "-", "test_historyTracker"], [32, 0, 0, "-", "test_memoryProfiler"], [33, 0, 0, "-", "test_snapshot"]], "armi.bookkeeping.tests.test_historyTracker": [[31, 2, 1, "", "TestHistoryTracker"], [31, 2, 1, "", "TestHistoryTrackerNoModel"], [31, 1, 1, "", "runTutorialNotebook"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker": [[31, 3, 1, "", "test_calcMGFluence"], [31, 3, 1, "", "test_getBlockInAssembly"], [31, 3, 1, "", "test_historyParameters"], [31, 3, 1, "", "test_historyReport"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel": [[31, 3, 1, "", "test_blockName"], [31, 3, 1, "", "test_timestepFiltering"], [31, 3, 1, "", "test_timestepFilteringWithGap"]], "armi.bookkeeping.tests.test_memoryProfiler": [[32, 2, 1, "", "KlassCounterTests"], [32, 2, 1, "", "TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests": [[32, 3, 1, "", "get_containers"], [32, 3, 1, "", "test_countHandlesRecursion"], [32, 3, 1, "", "test_expandContainer"]], "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler": [[32, 3, 1, "", "test_checkForDuplicateObjectsOnArmiModel"], [32, 3, 1, "", "test_displayMemoryUsage"], [32, 3, 1, "", "test_fullBreakdown"], [32, 3, 1, "", "test_getReferrers"], [32, 3, 1, "", "test_printFullMemoryBreakdown"], [32, 3, 1, "", "test_profileMemoryUsageAction"]], "armi.bookkeeping.tests.test_snapshot": [[33, 2, 1, "", "MockReactor"], [33, 2, 1, "", "MockReactorParams"], [33, 2, 1, "", "TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface": [[33, 3, 1, "", "test_activeateDefaultSnapshots_17cycles5BurnSteps"], [33, 3, 1, "", "test_activeateDefaultSnapshots_30cycles2BurnSteps"], [33, 3, 1, "", "test_interactCoupled"], [33, 3, 1, "", "test_interactEveryNode"]], "armi.bookkeeping.visualization": [[35, 0, 0, "-", "dumper"], [36, 0, 0, "-", "entryPoint"], [37, 0, 0, "-", "tests"], [40, 0, 0, "-", "utils"], [41, 0, 0, "-", "vtk"], [42, 0, 0, "-", "xdmf"]], "armi.bookkeeping.visualization.dumper": [[35, 2, 1, "", "VisFileDumper"]], "armi.bookkeeping.visualization.dumper.VisFileDumper": [[35, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.entryPoint": [[36, 2, 1, "", "VisFileEntryPoint"]], "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint": [[36, 3, 1, "", "addOptions"], [36, 4, 1, "", "description"], [36, 3, 1, "", "invoke"], [36, 4, 1, "", "name"], [36, 3, 1, "", "parse"], [36, 4, 1, "", "settingsArgument"]], "armi.bookkeeping.visualization.tests": [[38, 0, 0, "-", "test_vis"], [39, 0, 0, "-", "test_xdmf"]], "armi.bookkeeping.visualization.tests.test_vis": [[38, 2, 1, "", "TestVisDump"], [38, 2, 1, "", "TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVisDump": [[38, 3, 1, "", "test_cartesianMesh"], [38, 3, 1, "", "test_dumpReactorVtk"], [38, 3, 1, "", "test_dumpReactorXdmf"], [38, 3, 1, "", "test_hexMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh": [[38, 3, 1, "", "test_testVtkMesh"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[39, 2, 1, "", "TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf": [[39, 3, 1, "", "test_dedupTimes"]], "armi.bookkeeping.visualization.utils": [[40, 2, 1, "", "VtkMesh"], [40, 1, 1, "", "createAssemMesh"], [40, 1, 1, "", "createBlockMesh"], [40, 1, 1, "", "createReactorAssemMesh"], [40, 1, 1, "", "createReactorBlockMesh"]], "armi.bookkeeping.visualization.utils.VtkMesh": [[40, 3, 1, "", "append"], [40, 3, 1, "", "empty"], [40, 3, 1, "", "write"], [40, 5, 1, "", "x"], [40, 5, 1, "", "y"], [40, 5, 1, "", "z"]], "armi.bookkeeping.visualization.vtk": [[41, 2, 1, "", "VtkDumper"]], "armi.bookkeeping.visualization.vtk.VtkDumper": [[41, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.xdmf": [[42, 2, 1, "", "XdmfDumper"]], "armi.bookkeeping.visualization.xdmf.XdmfDumper": [[42, 3, 1, "", "dumpState"]], "armi.cases": [[44, 0, 0, "-", "case"], [45, 0, 0, "-", "inputModifiers"], [52, 0, 0, "-", "suite"], [53, 0, 0, "-", "suiteBuilder"], [54, 0, 0, "-", "tests"]], "armi.cases.case": [[44, 2, 1, "", "Case"], [44, 1, 1, "", "copyInterfaceInputs"]], "armi.cases.case.Case": [[44, 3, 1, "", "addExplicitDependency"], [44, 5, 1, "", "bp"], [44, 3, 1, "", "buildCommand"], [44, 3, 1, "", "checkInputs"], [44, 3, 1, "", "clone"], [44, 3, 1, "", "compare"], [44, 5, 1, "", "dbName"], [44, 5, 1, "", "dependencies"], [44, 5, 1, "", "directory"], [44, 5, 1, "", "geom"], [44, 3, 1, "", "getPotentialParentFromSettingValue"], [44, 5, 1, "", "independentVariables"], [44, 3, 1, "", "initializeOperator"], [44, 3, 1, "", "run"], [44, 3, 1, "", "setUpTaskDependence"], [44, 3, 1, "", "summarizeDesign"], [44, 5, 1, "", "title"], [44, 3, 1, "", "writeInputs"]], "armi.cases.inputModifiers": [[46, 0, 0, "-", "inputModifiers"], [47, 0, 0, "-", "neutronicsModifiers"], [48, 0, 0, "-", "pinTypeInputModifiers"], [49, 0, 0, "-", "tests"]], "armi.cases.inputModifiers.inputModifiers": [[46, 2, 1, "", "BluePrintBlockModifier"], [46, 2, 1, "", "FullCoreModifier"], [46, 2, 1, "", "InputModifier"], [46, 2, 1, "", "MultiSettingModifier"], [46, 2, 1, "", "SamplingInputModifier"], [46, 2, 1, "", "SettingsModifier"]], "armi.cases.inputModifiers.inputModifiers.InputModifier": [[46, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.neutronicsModifiers": [[47, 2, 1, "", "NeutronicConvergenceModifier"], [47, 2, 1, "", "NeutronicMeshsSizeModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers": [[48, 2, 1, "", "CladThicknessByIDModifier"], [48, 2, 1, "", "CladThicknessByODModifier"], [48, 2, 1, "", "SmearDensityModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier": [[48, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier": [[48, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.tests": [[50, 0, 0, "-", "test_inputModifiers"], [51, 0, 0, "-", "test_pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests.test_inputModifiers": [[50, 2, 1, "", "MockGeom"], [50, 2, 1, "", "NeutronicsKernelOpts"], [50, 2, 1, "", "TestFullCoreModifier"], [50, 2, 1, "", "TestSettingsModifiers"], [50, 2, 1, "", "TestsuiteBuilderIntegrations"]], "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom": [[50, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier": [[50, 3, 1, "", "test_fullCoreConversion"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers": [[50, 3, 1, "", "test_NeutronicConvergenceModifier"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations": [[50, 3, 1, "", "test_bluePrintBlockModifier"], [50, 3, 1, "", "test_settingsModifier"], [50, 3, 1, "", "test_smearDensityFail"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers": [[51, 2, 1, "", "MockGeom"], [51, 2, 1, "", "TestBlueprintModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom": [[51, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers": [[51, 3, 1, "", "test_AdjustSmearDensity"], [51, 3, 1, "", "test_CladThickenessByIDModifier"], [51, 3, 1, "", "test_CladThickenessByODModifier"]], "armi.cases.suite": [[52, 2, 1, "", "CaseSuite"]], "armi.cases.suite.CaseSuite": [[52, 3, 1, "", "add"], [52, 3, 1, "", "clone"], [52, 3, 1, "", "compare"], [52, 3, 1, "", "discover"], [52, 3, 1, "", "echoConfiguration"], [52, 3, 1, "", "remove"], [52, 3, 1, "", "run"], [52, 3, 1, "", "writeInputs"], [52, 3, 1, "", "writeTable"]], "armi.cases.suiteBuilder": [[53, 2, 1, "", "FullFactorialSuiteBuilder"], [53, 2, 1, "", "FullFactorialSuiteBuilderNoisy"], [53, 2, 1, "", "LatinHyperCubeSuiteBuilder"], [53, 2, 1, "", "SeparateEffectsSuiteBuilder"], [53, 2, 1, "", "SuiteBuilder"], [53, 1, 1, "", "getInputModifiers"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilder": [[53, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy": [[53, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder": [[53, 3, 1, "", "addDegreeOfFreedom"], [53, 3, 1, "", "buildSuite"]], "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder": [[53, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.SuiteBuilder": [[53, 3, 1, "", "addDegreeOfFreedom"], [53, 3, 1, "", "addModifierSet"], [53, 3, 1, "", "buildSuite"]], "armi.cases.tests": [[55, 0, 0, "-", "test_cases"], [56, 0, 0, "-", "test_suiteBuilder"]], "armi.cases.tests.test_cases": [[55, 2, 1, "", "MultiFilesInterfaces"], [55, 2, 1, "", "TestArmiCase"], [55, 2, 1, "", "TestCaseSuiteDependencies"], [55, 2, 1, "", "TestCopyInterfaceInputs"], [55, 2, 1, "", "TestExtraInputWriting"], [55, 2, 1, "", "TestPluginForCopyInterfacesMultipleFiles"], [55, 2, 1, "", "TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases.MultiFilesInterfaces": [[55, 4, 1, "", "name"], [55, 3, 1, "", "specifyInputs"]], "armi.cases.tests.test_cases.TestArmiCase": [[55, 3, 1, "", "test_clone"], [55, 3, 1, "", "test_endCoverage"], [55, 3, 1, "", "test_endProfiling"], [55, 3, 1, "", "test_getCoverageRcFile"], [55, 3, 1, "", "test_independentVariables"], [55, 3, 1, "", "test_run"], [55, 3, 1, "", "test_setUpTaskDependence"], [55, 3, 1, "", "test_startCoverage"], [55, 3, 1, "", "test_startProfiling"], [55, 3, 1, "", "test_summarizeDesign"]], "armi.cases.tests.test_cases.TestCaseSuiteDependencies": [[55, 3, 1, "", "test_buildCommand"], [55, 3, 1, "", "test_checkInputs"], [55, 3, 1, "", "test_clone"], [55, 3, 1, "", "test_dependenciesWithObscurePaths"], [55, 3, 1, "", "test_dependencyFromDBName"], [55, 3, 1, "", "test_dependencyFromExplictRepeatShuffles"], [55, 3, 1, "", "test_explicitDependency"], [55, 3, 1, "", "test_titleSetterGetter"]], "armi.cases.tests.test_cases.TestCopyInterfaceInputs": [[55, 3, 1, "", "test_copyInputsHelper"], [55, 3, 1, "", "test_copyInterfaceInputs_absPath"], [55, 3, 1, "", "test_copyInterfaceInputs_multipleFiles"], [55, 3, 1, "", "test_copyInterfaceInputs_nonFilePath"], [55, 3, 1, "", "test_copyInterfaceInputs_relPath"], [55, 3, 1, "", "test_copyInterfaceInputs_singleFile"], [55, 3, 1, "", "test_copyInterfaceInputs_wildcardFile"], [55, 3, 1, "", "test_failOnDuplicateSetting"]], "armi.cases.tests.test_cases.TestExtraInputWriting": [[55, 3, 1, "", "test_writeInput"]], "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles": [[55, 3, 1, "", "defineSettings"], [55, 3, 1, "", "exposeInterfaces"]], "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting": [[55, 3, 1, "", "defineSettings"]], "armi.cases.tests.test_suiteBuilder": [[56, 2, 1, "", "LatinHyperCubeModifier"], [56, 2, 1, "", "SettingModifier"], [56, 2, 1, "", "TestFullFactorialSuiteBuilder"], [56, 2, 1, "", "TestLatinHyperCubeSuiteBuilder"], [56, 2, 1, "", "TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder": [[56, 3, 1, "", "test_buildSuite"]], "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder": [[56, 3, 1, "", "test_addDegreeOfFreedom"], [56, 3, 1, "", "test_buildSuite"], [56, 3, 1, "", "test_initialize"]], "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder": [[56, 3, 1, "", "test_buildSuite"]], "armi.cli": [[57, 2, 1, "", "ArmiCLI"], [57, 2, 1, "", "ArmiParser"], [57, 2, 1, "", "EntryPointsPlugin"], [58, 0, 0, "-", "checkInputs"], [59, 0, 0, "-", "cleanTemps"], [60, 0, 0, "-", "clone"], [61, 0, 0, "-", "compareCases"], [62, 0, 0, "-", "database"], [63, 0, 0, "-", "entryPoint"], [64, 0, 0, "-", "gridGui"], [65, 0, 0, "-", "migrateInputs"], [66, 0, 0, "-", "modify"], [67, 0, 0, "-", "reportsEntryPoint"], [68, 0, 0, "-", "run"], [69, 0, 0, "-", "runSuite"], [57, 1, 1, "", "splash"], [70, 0, 0, "-", "tests"]], "armi.cli.ArmiCLI": [[57, 3, 1, "", "executeCommand"], [57, 3, 1, "", "listCommands"], [57, 3, 1, "", "run"], [57, 3, 1, "", "showVersion"]], "armi.cli.ArmiParser": [[57, 3, 1, "", "print_help"]], "armi.cli.EntryPointsPlugin": [[57, 3, 1, "", "defineEntryPoints"]], "armi.cli.checkInputs": [[58, 2, 1, "", "CheckInputEntryPoint"], [58, 2, 1, "", "ExpandBlueprints"]], "armi.cli.checkInputs.CheckInputEntryPoint": [[58, 3, 1, "", "addOptions"], [58, 3, 1, "", "invoke"], [58, 4, 1, "", "name"], [58, 4, 1, "", "settingsArgument"]], "armi.cli.checkInputs.ExpandBlueprints": [[58, 3, 1, "", "addOptions"], [58, 3, 1, "", "invoke"], [58, 4, 1, "", "name"], [58, 4, 1, "", "settingsArgument"], [58, 4, 1, "", "splash"]], "armi.cli.cleanTemps": [[59, 2, 1, "", "CleanTemps"]], "armi.cli.cleanTemps.CleanTemps": [[59, 3, 1, "", "invoke"], [59, 4, 1, "", "name"], [59, 4, 1, "", "settingsArgument"]], "armi.cli.clone": [[60, 2, 1, "", "CloneArmiRunCommandBatch"], [60, 2, 1, "", "CloneArmiRunCommandInteractive"], [60, 2, 1, "", "CloneSuiteCommand"]], "armi.cli.clone.CloneArmiRunCommandBatch": [[60, 3, 1, "", "addOptions"], [60, 3, 1, "", "invoke"], [60, 4, 1, "", "name"], [60, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneArmiRunCommandInteractive": [[60, 4, 1, "", "name"], [60, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneSuiteCommand": [[60, 3, 1, "", "addOptions"], [60, 3, 1, "", "invoke"], [60, 4, 1, "", "name"], [60, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases": [[61, 2, 1, "", "CompareCases"], [61, 2, 1, "", "CompareSuites"]], "armi.cli.compareCases.CompareCases": [[61, 3, 1, "", "addOptions"], [61, 3, 1, "", "invoke"], [61, 4, 1, "", "name"], [61, 3, 1, "", "parse"], [61, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases.CompareSuites": [[61, 3, 1, "", "addOptions"], [61, 3, 1, "", "invoke"], [61, 4, 1, "", "name"], [61, 4, 1, "", "settingsArgument"]], "armi.cli.database": [[62, 2, 1, "", "ConvertDB"], [62, 2, 1, "", "ExtractInputs"], [62, 2, 1, "", "InjectInputs"]], "armi.cli.database.ConvertDB": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "mode"], [62, 4, 1, "", "name"], [62, 3, 1, "", "parse_args"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.database.ExtractInputs": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "mode"], [62, 4, 1, "", "name"], [62, 3, 1, "", "parse_args"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.database.InjectInputs": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "mode"], [62, 4, 1, "", "name"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.entryPoint": [[63, 2, 1, "", "EntryPoint"], [63, 1, 1, "", "loadSettings"], [63, 1, 1, "", "setCaseTitle"], [63, 1, 1, "", "setSetting"], [63, 1, 1, "", "storeBool"]], "armi.cli.entryPoint.EntryPoint": [[63, 3, 1, "", "addOptions"], [63, 3, 1, "", "createOptionFromSetting"], [63, 4, 1, "", "description"], [63, 3, 1, "", "invoke"], [63, 4, 1, "", "mode"], [63, 4, 1, "", "name"], [63, 3, 1, "", "parse"], [63, 3, 1, "", "parse_args"], [63, 4, 1, "", "settingsArgument"], [63, 4, 1, "", "splash"]], "armi.cli.gridGui": [[64, 2, 1, "", "GridGuiEntryPoint"]], "armi.cli.gridGui.GridGuiEntryPoint": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "name"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.migrateInputs": [[65, 2, 1, "", "MigrateInputs"]], "armi.cli.migrateInputs.MigrateInputs": [[65, 3, 1, "", "addOptions"], [65, 3, 1, "", "invoke"], [65, 4, 1, "", "name"], [65, 4, 1, "", "settingsArgument"]], "armi.cli.modify": [[66, 2, 1, "", "ModifyCaseSettingsCommand"]], "armi.cli.modify.ModifyCaseSettingsCommand": [[66, 3, 1, "", "addOptions"], [66, 3, 1, "", "invoke"], [66, 4, 1, "", "name"], [66, 4, 1, "", "settingsArgument"]], "armi.cli.reportsEntryPoint": [[67, 2, 1, "", "ReportsEntryPoint"], [67, 1, 1, "", "createReportFromSettings"]], "armi.cli.reportsEntryPoint.ReportsEntryPoint": [[67, 3, 1, "", "addOptions"], [67, 4, 1, "", "description"], [67, 3, 1, "", "invoke"], [67, 4, 1, "", "name"], [67, 4, 1, "", "settingsArgument"]], "armi.cli.run": [[68, 2, 1, "", "RunEntryPoint"]], "armi.cli.run.RunEntryPoint": [[68, 3, 1, "", "addOptions"], [68, 3, 1, "", "invoke"], [68, 4, 1, "", "name"], [68, 4, 1, "", "settingsArgument"]], "armi.cli.runSuite": [[69, 2, 1, "", "RunSuiteCommand"]], "armi.cli.runSuite.RunSuiteCommand": [[69, 3, 1, "", "addOptions"], [69, 3, 1, "", "invoke"], [69, 4, 1, "", "name"], [69, 4, 1, "", "settingsArgument"]], "armi.cli.tests": [[71, 0, 0, "-", "test_runEntryPoint"], [72, 0, 0, "-", "test_runSuite"]], "armi.cli.tests.test_runEntryPoint": [[71, 2, 1, "", "TestCheckInputEntryPoint"], [71, 2, 1, "", "TestCloneArmiRunCommandBatch"], [71, 2, 1, "", "TestCloneSuiteCommand"], [71, 2, 1, "", "TestCompareCases"], [71, 2, 1, "", "TestCompareIsotxsLibsEntryPoint"], [71, 2, 1, "", "TestCompareSuites"], [71, 2, 1, "", "TestConvertDB"], [71, 2, 1, "", "TestExpandBlueprints"], [71, 2, 1, "", "TestExtractInputs"], [71, 2, 1, "", "TestInitializationEntryPoints"], [71, 2, 1, "", "TestInjectInputs"], [71, 2, 1, "", "TestMigrateInputs"], [71, 2, 1, "", "TestModifyCaseSettingsCommand"], [71, 2, 1, "", "TestReportsEntryPoint"], [71, 2, 1, "", "TestRunEntryPoint"], [71, 2, 1, "", "TestRunSuiteCommand"], [71, 2, 1, "", "TestVisFileEntryPointCommand"]], "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint": [[71, 3, 1, "", "test_checkInputEntryPointBasics"], [71, 3, 1, "", "test_checkInputEntryPointInvoke"]], "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch": [[71, 3, 1, "", "test_cloneArmiRunCommandBatchBasics"], [71, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeMedium"], [71, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeShort"]], "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand": [[71, 3, 1, "", "test_cloneSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareCases": [[71, 3, 1, "", "test_compareCasesBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint": [[71, 3, 1, "", "test_compareIsotxsLibsBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareSuites": [[71, 3, 1, "", "test_compareSuitesBasics"]], "armi.cli.tests.test_runEntryPoint.TestConvertDB": [[71, 3, 1, "", "test_convertDbBasics"], [71, 3, 1, "", "test_convertDbOutputNodes"], [71, 3, 1, "", "test_convertDbOutputVersion"]], "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints": [[71, 3, 1, "", "test_expandBlueprintsBasics"]], "armi.cli.tests.test_runEntryPoint.TestExtractInputs": [[71, 3, 1, "", "test_extractInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints": [[71, 3, 1, "", "test_entryPointInitialization"]], "armi.cli.tests.test_runEntryPoint.TestInjectInputs": [[71, 3, 1, "", "test_injectInputsBasics"], [71, 3, 1, "", "test_injectInputsInvokeIgnore"], [71, 3, 1, "", "test_injectInputsInvokeNoData"]], "armi.cli.tests.test_runEntryPoint.TestMigrateInputs": [[71, 3, 1, "", "test_migrateInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand": [[71, 3, 1, "", "test_modifyCaseSettingsCommandBasics"], [71, 3, 1, "", "test_modifyCaseSettingsCommandInvoke"]], "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint": [[71, 3, 1, "", "test_reportsEntryPointBasics"]], "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint": [[71, 3, 1, "", "test_executeCommand"], [71, 3, 1, "", "test_runCommandHelp"], [71, 3, 1, "", "test_runEntryPointBasics"]], "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand": [[71, 3, 1, "", "test_runSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand": [[71, 3, 1, "", "test_visFileEntryPointBasics"]], "armi.cli.tests.test_runSuite": [[72, 2, 1, "", "TestRunSuiteSuite"]], "armi.cli.tests.test_runSuite.TestRunSuiteSuite": [[72, 3, 1, "", "test_listCommand"], [72, 3, 1, "", "test_run"], [72, 3, 1, "", "test_showVersion"]], "armi.conftest": [[73, 1, 1, "", "bootstrapArmiTestEnv"], [73, 1, 1, "", "pytest_sessionstart"]], "armi.context": [[74, 2, 1, "", "Mode"], [74, 1, 1, "", "activateLocalFastPath"], [74, 1, 1, "", "cleanAllArmiTempDirs"], [74, 1, 1, "", "cleanTempDirs"], [74, 1, 1, "", "disconnectAllHdfDBs"], [74, 1, 1, "", "getFastPath"]], "armi.context.Mode": [[74, 4, 1, "", "BATCH"], [74, 4, 1, "", "GUI"], [74, 4, 1, "", "INTERACTIVE"], [74, 3, 1, "", "setMode"]], "armi.interfaces": [[75, 2, 1, "", "InputWriter"], [75, 2, 1, "", "Interface"], [75, 2, 1, "", "InterfaceInfo"], [75, 2, 1, "", "OutputReader"], [75, 2, 1, "", "STACK_ORDER"], [75, 2, 1, "", "TightCoupler"], [75, 1, 1, "", "getActiveInterfaceInfo"], [75, 1, 1, "", "isInterfaceActive"]], "armi.interfaces.InputWriter": [[75, 3, 1, "", "getInterface"], [75, 3, 1, "", "write"]], "armi.interfaces.Interface": [[75, 2, 1, "", "Distribute"], [75, 3, 1, "", "attachReactor"], [75, 3, 1, "", "bolForce"], [75, 3, 1, "", "detachReactor"], [75, 3, 1, "", "distributable"], [75, 3, 1, "", "duplicate"], [75, 3, 1, "", "enabled"], [75, 4, 1, "", "function"], [75, 3, 1, "", "getDependencies"], [75, 3, 1, "", "getHistoryParams"], [75, 3, 1, "", "getInputFiles"], [75, 3, 1, "", "getInterface"], [75, 3, 1, "", "getTightCouplingValue"], [75, 3, 1, "", "interactBOC"], [75, 3, 1, "", "interactBOL"], [75, 3, 1, "", "interactCoupled"], [75, 3, 1, "", "interactDistributeState"], [75, 3, 1, "", "interactEOC"], [75, 3, 1, "", "interactEOL"], [75, 3, 1, "", "interactError"], [75, 3, 1, "", "interactEveryNode"], [75, 3, 1, "", "interactInit"], [75, 3, 1, "", "isRequestedDetailPoint"], [75, 4, 1, "", "name"], [75, 3, 1, "", "nameContains"], [75, 3, 1, "", "postDistributeState"], [75, 3, 1, "", "preDistributeState"], [75, 3, 1, "", "readOutput"], [75, 3, 1, "", "specifyInputs"], [75, 3, 1, "", "updatePhysicsCouplingControl"], [75, 3, 1, "", "workerOperate"], [75, 3, 1, "", "writeInput"]], "armi.interfaces.Interface.Distribute": [[75, 4, 1, "", "DUPLICATE"], [75, 4, 1, "", "NEW"], [75, 4, 1, "", "SKIP"]], "armi.interfaces.InterfaceInfo": [[75, 4, 1, "", "interfaceCls"], [75, 4, 1, "", "kwargs"], [75, 4, 1, "", "order"]], "armi.interfaces.OutputReader": [[75, 3, 1, "", "apply"], [75, 3, 1, "", "getInterface"], [75, 3, 1, "", "read"]], "armi.interfaces.STACK_ORDER": [[75, 4, 1, "", "AFTER"], [75, 4, 1, "", "BEFORE"], [75, 4, 1, "", "BOOKKEEPING"], [75, 4, 1, "", "CRITICAL_CONTROL"], [75, 4, 1, "", "CROSS_SECTIONS"], [75, 4, 1, "", "DEPLETION"], [75, 4, 1, "", "FLUX"], [75, 4, 1, "", "FUEL_MANAGEMENT"], [75, 4, 1, "", "FUEL_PERFORMANCE"], [75, 4, 1, "", "POSTPROCESSING"], [75, 4, 1, "", "PREPROCESSING"], [75, 4, 1, "", "REACTIVITY_COEFFS"], [75, 4, 1, "", "THERMAL_HYDRAULICS"], [75, 4, 1, "", "TRANSIENT"]], "armi.interfaces.TightCoupler": [[75, 3, 1, "", "getListDimension"], [75, 3, 1, "", "isConverged"], [75, 3, 1, "", "storePreviousIterationValue"]], "armi.materials": [[77, 0, 0, "-", "air"], [78, 0, 0, "-", "alloy200"], [79, 0, 0, "-", "b4c"], [80, 0, 0, "-", "be9"], [81, 0, 0, "-", "caH2"], [82, 0, 0, "-", "californium"], [83, 0, 0, "-", "concrete"], [84, 0, 0, "-", "copper"], [85, 0, 0, "-", "cs"], [86, 0, 0, "-", "custom"], [87, 0, 0, "-", "graphite"], [88, 0, 0, "-", "hafnium"], [89, 0, 0, "-", "hastelloyN"], [90, 0, 0, "-", "ht9"], [76, 1, 1, "", "importMaterialsIntoModuleNamespace"], [91, 0, 0, "-", "inconel"], [92, 0, 0, "-", "inconel600"], [93, 0, 0, "-", "inconel625"], [94, 0, 0, "-", "inconel800"], [95, 0, 0, "-", "inconelPE16"], [96, 0, 0, "-", "inconelX750"], [76, 1, 1, "", "iterAllMaterialClassesInNamespace"], [97, 0, 0, "-", "lead"], [98, 0, 0, "-", "leadBismuth"], [99, 0, 0, "-", "lithium"], [100, 0, 0, "-", "magnesium"], [101, 0, 0, "-", "material"], [102, 0, 0, "-", "mgO"], [103, 0, 0, "-", "mixture"], [104, 0, 0, "-", "molybdenum"], [105, 0, 0, "-", "mox"], [106, 0, 0, "-", "nZ"], [107, 0, 0, "-", "potassium"], [76, 1, 1, "", "resolveMaterialClassByName"], [108, 0, 0, "-", "scandiumOxide"], [76, 1, 1, "", "setMaterialNamespaceOrder"], [109, 0, 0, "-", "siC"], [110, 0, 0, "-", "sodium"], [111, 0, 0, "-", "sodiumChloride"], [112, 0, 0, "-", "sulfur"], [113, 0, 0, "-", "tZM"], [114, 0, 0, "-", "tantalum"], [115, 0, 0, "-", "tests"], [128, 0, 0, "-", "thU"], [129, 0, 0, "-", "thorium"], [130, 0, 0, "-", "thoriumOxide"], [131, 0, 0, "-", "uThZr"], [132, 0, 0, "-", "uZr"], [133, 0, 0, "-", "uranium"], [134, 0, 0, "-", "uraniumOxide"], [135, 0, 0, "-", "void"], [136, 0, 0, "-", "water"], [137, 0, 0, "-", "yttriumOxide"], [138, 0, 0, "-", "zincOxide"], [139, 0, 0, "-", "zr"]], "armi.materials.air": [[77, 2, 1, "", "Air"]], "armi.materials.air.Air": [[77, 3, 1, "", "heatCapacity"], [77, 4, 1, "", "propertyValidTemperature"], [77, 3, 1, "", "pseudoDensity"], [77, 3, 1, "", "setDefaultMassFracs"], [77, 3, 1, "", "specificVolumeLiquid"], [77, 3, 1, "", "thermalConductivity"]], "armi.materials.alloy200": [[78, 2, 1, "", "Alloy200"]], "armi.materials.alloy200.Alloy200": [[78, 3, 1, "", "linearExpansion"], [78, 4, 1, "", "linearExpansionTable"], [78, 4, 1, "", "linearExpansionTableK"], [78, 4, 1, "", "modelConst"], [78, 4, 1, "", "propertyValidTemperature"], [78, 4, 1, "", "referenceMaxPercentImpurites"], [78, 4, 1, "", "references"], [78, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.b4c": [[79, 2, 1, "", "B4C"]], "armi.materials.b4c.B4C": [[79, 3, 1, "", "applyInputParams"], [79, 3, 1, "", "density"], [79, 4, 1, "", "enrichedNuclide"], [79, 3, 1, "", "getMassEnrichmentFromNumEnrich"], [79, 3, 1, "", "linearExpansionPercent"], [79, 4, 1, "", "propertyValidTemperature"], [79, 3, 1, "", "pseudoDensity"], [79, 3, 1, "", "setDefaultMassFracs"], [79, 3, 1, "", "setNewMassFracsFromMassEnrich"], [79, 3, 1, "", "updateTD"]], "armi.materials.be9": [[80, 2, 1, "", "Be9"]], "armi.materials.be9.Be9": [[80, 3, 1, "", "linearExpansionPercent"], [80, 4, 1, "", "propertyValidTemperature"], [80, 3, 1, "", "setDefaultMassFracs"], [80, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.caH2": [[81, 2, 1, "", "CaH2"]], "armi.materials.caH2.CaH2": [[81, 3, 1, "", "density"], [81, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.californium": [[82, 2, 1, "", "Californium"]], "armi.materials.californium.Californium": [[82, 3, 1, "", "density"], [82, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.concrete": [[83, 2, 1, "", "Concrete"]], "armi.materials.concrete.Concrete": [[83, 3, 1, "", "density"], [83, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.copper": [[84, 2, 1, "", "Cu"]], "armi.materials.copper.Cu": [[84, 3, 1, "", "density"], [84, 3, 1, "", "linearExpansionPercent"], [84, 4, 1, "", "propertyValidTemperature"], [84, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.cs": [[85, 2, 1, "", "Cs"]], "armi.materials.cs.Cs": [[85, 3, 1, "", "meltingPoint"], [85, 3, 1, "", "pseudoDensity"], [85, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.custom": [[86, 2, 1, "", "Custom"]], "armi.materials.custom.Custom": [[86, 4, 1, "", "enrichedNuclide"], [86, 3, 1, "", "pseudoDensity"], [86, 3, 1, "", "setMassFrac"]], "armi.materials.graphite": [[87, 2, 1, "", "Graphite"]], "armi.materials.graphite.Graphite": [[87, 3, 1, "", "linearExpansionPercent"], [87, 3, 1, "", "setDefaultMassFracs"], [87, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.hafnium": [[88, 2, 1, "", "Hafnium"]], "armi.materials.hafnium.Hafnium": [[88, 3, 1, "", "density"], [88, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.hastelloyN": [[89, 2, 1, "", "HastelloyN"]], "armi.materials.hastelloyN.HastelloyN": [[89, 3, 1, "", "heatCapacity"], [89, 3, 1, "", "linearExpansionPercent"], [89, 4, 1, "", "materialIntro"], [89, 3, 1, "", "meanCoefficientThermalExpansion"], [89, 4, 1, "", "propertyValidTemperature"], [89, 4, 1, "", "refTempK"], [89, 3, 1, "", "setDefaultMassFracs"], [89, 3, 1, "", "thermalConductivity"]], "armi.materials.ht9": [[90, 2, 1, "", "HT9"]], "armi.materials.ht9.HT9": [[90, 3, 1, "", "linearExpansionPercent"], [90, 4, 1, "", "propertyValidTemperature"], [90, 3, 1, "", "setDefaultMassFracs"], [90, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel": [[91, 2, 1, "", "Inconel"], [91, 2, 1, "", "Inconel617"]], "armi.materials.inconel.Inconel": [[91, 3, 1, "", "density"], [91, 4, 1, "", "references"], [91, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconel600": [[92, 2, 1, "", "Inconel600"]], "armi.materials.inconel600.Inconel600": [[92, 3, 1, "", "heatCapacity"], [92, 3, 1, "", "linearExpansion"], [92, 3, 1, "", "linearExpansionPercent"], [92, 3, 1, "", "polyfitHeatCapacity"], [92, 3, 1, "", "polyfitLinearExpansionPercent"], [92, 3, 1, "", "polyfitThermalConductivity"], [92, 4, 1, "", "propertyValidTemperature"], [92, 4, 1, "", "refTempK"], [92, 4, 1, "", "references"], [92, 3, 1, "", "setDefaultMassFracs"], [92, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel625": [[93, 2, 1, "", "Inconel625"]], "armi.materials.inconel625.Inconel625": [[93, 3, 1, "", "heatCapacity"], [93, 3, 1, "", "linearExpansion"], [93, 3, 1, "", "linearExpansionPercent"], [93, 3, 1, "", "polyfitHeatCapacity"], [93, 3, 1, "", "polyfitLinearExpansionPercent"], [93, 3, 1, "", "polyfitThermalConductivity"], [93, 4, 1, "", "propertyValidTemperature"], [93, 4, 1, "", "refTempK"], [93, 4, 1, "", "references"], [93, 3, 1, "", "setDefaultMassFracs"], [93, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel800": [[94, 2, 1, "", "Inconel800"]], "armi.materials.inconel800.Inconel800": [[94, 3, 1, "", "linearExpansionPercent"], [94, 3, 1, "", "meanCoefficientThermalExpansion"], [94, 4, 1, "", "propertyValidTemperature"], [94, 4, 1, "", "refTempK"], [94, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelPE16": [[95, 2, 1, "", "InconelPE16"]], "armi.materials.inconelPE16.InconelPE16": [[95, 3, 1, "", "density"], [95, 4, 1, "", "references"], [95, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelX750": [[96, 2, 1, "", "InconelX750"]], "armi.materials.inconelX750.InconelX750": [[96, 3, 1, "", "heatCapacity"], [96, 3, 1, "", "linearExpansion"], [96, 3, 1, "", "linearExpansionPercent"], [96, 3, 1, "", "polyfitHeatCapacity"], [96, 3, 1, "", "polyfitLinearExpansionPercent"], [96, 3, 1, "", "polyfitThermalConductivity"], [96, 4, 1, "", "propertyValidTemperature"], [96, 4, 1, "", "refTempK"], [96, 4, 1, "", "references"], [96, 3, 1, "", "setDefaultMassFracs"], [96, 3, 1, "", "thermalConductivity"]], "armi.materials.lead": [[97, 2, 1, "", "Lead"]], "armi.materials.lead.Lead": [[97, 3, 1, "", "heatCapacity"], [97, 4, 1, "", "propertyValidTemperature"], [97, 3, 1, "", "pseudoDensity"], [97, 3, 1, "", "setDefaultMassFracs"], [97, 3, 1, "", "volumetricExpansion"]], "armi.materials.leadBismuth": [[98, 2, 1, "", "LeadBismuth"]], "armi.materials.leadBismuth.LeadBismuth": [[98, 3, 1, "", "dynamicVisc"], [98, 3, 1, "", "heatCapacity"], [98, 4, 1, "", "propertyValidTemperature"], [98, 3, 1, "", "pseudoDensity"], [98, 3, 1, "", "setDefaultMassFracs"], [98, 3, 1, "", "thermalConductivity"], [98, 3, 1, "", "volumetricExpansion"]], "armi.materials.lithium": [[99, 2, 1, "", "Lithium"]], "armi.materials.lithium.Lithium": [[99, 3, 1, "", "applyInputParams"], [99, 3, 1, "", "boilingPoint"], [99, 4, 1, "", "enrichedNuclide"], [99, 3, 1, "", "heatCapacity"], [99, 3, 1, "", "meltingPoint"], [99, 3, 1, "", "pseudoDensity"], [99, 4, 1, "", "references"], [99, 3, 1, "", "setDefaultMassFracs"], [99, 3, 1, "", "thermalConductivity"]], "armi.materials.magnesium": [[100, 2, 1, "", "Magnesium"]], "armi.materials.magnesium.Magnesium": [[100, 4, 1, "", "propertyValidTemperature"], [100, 3, 1, "", "pseudoDensity"], [100, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.material": [[101, 2, 1, "", "Fluid"], [101, 2, 1, "", "FuelMaterial"], [101, 2, 1, "", "Material"], [101, 2, 1, "", "SimpleSolid"]], "armi.materials.material.Fluid": [[101, 3, 1, "", "density"], [101, 3, 1, "", "getTempChangeForDensityChange"], [101, 3, 1, "", "getThermalExpansionDensityReduction"], [101, 3, 1, "", "linearExpansion"]], "armi.materials.material.FuelMaterial": [[101, 3, 1, "", "applyInputParams"], [101, 4, 1, "", "class1_custom_isotopics"], [101, 4, 1, "", "class1_wt_frac"], [101, 4, 1, "", "class2_custom_isotopics"], [101, 3, 1, "", "duplicate"], [101, 4, 1, "", "puFrac"], [101, 4, 1, "", "uFrac"], [101, 4, 1, "", "zrFrac"]], "armi.materials.material.Material": [[101, 4, 1, "", "DATA_SOURCE"], [101, 3, 1, "", "adjustMassEnrichment"], [101, 3, 1, "", "adjustMassFrac"], [101, 3, 1, "", "adjustTD"], [101, 3, 1, "", "applyInputParams"], [101, 3, 1, "", "backUp"], [101, 3, 1, "", "checkPropertyTempRange"], [101, 3, 1, "", "checkTempRange"], [101, 3, 1, "", "clearCache"], [101, 3, 1, "", "clearMassFrac"], [101, 3, 1, "", "density"], [101, 3, 1, "", "densityKgM3"], [101, 3, 1, "", "densityTimesHeatCapacity"], [101, 3, 1, "", "duplicate"], [101, 4, 1, "", "enrichedNuclide"], [101, 5, 1, "", "gasPorosity"], [101, 3, 1, "", "getChildren"], [101, 3, 1, "", "getChildrenWithFlags"], [101, 3, 1, "", "getCorrosionRate"], [101, 3, 1, "", "getMassFrac"], [101, 3, 1, "", "getName"], [101, 3, 1, "", "getNuclides"], [101, 3, 1, "", "getProperty"], [101, 3, 1, "", "getTD"], [101, 3, 1, "", "getTempChangeForDensityChange"], [101, 3, 1, "", "getTemperatureAtDensity"], [101, 3, 1, "", "getThermalExpansionDensityReduction"], [101, 3, 1, "", "heatCapacity"], [101, 3, 1, "", "linearExpansion"], [101, 3, 1, "", "linearExpansionFactor"], [101, 3, 1, "", "linearExpansionPercent"], [101, 5, 1, "", "liquidPorosity"], [101, 4, 1, "", "modelConst"], [101, 5, 1, "", "name"], [101, 4, 1, "", "propertyValidTemperature"], [101, 3, 1, "", "pseudoDensity"], [101, 3, 1, "", "pseudoDensityKgM3"], [101, 4, 1, "", "references"], [101, 3, 1, "", "removeNucMassFrac"], [101, 3, 1, "", "restoreBackup"], [101, 3, 1, "", "setDefaultMassFracs"], [101, 3, 1, "", "setMassFrac"], [101, 3, 1, "", "thermalConductivity"], [101, 4, 1, "", "thermalScatteringLaws"], [101, 3, 1, "", "volumetricExpansion"], [101, 3, 1, "", "yieldStrength"]], "armi.materials.material.SimpleSolid": [[101, 3, 1, "", "density"], [101, 3, 1, "", "linearExpansionPercent"], [101, 3, 1, "", "pseudoDensity"], [101, 4, 1, "", "refTempK"]], "armi.materials.mgO": [[102, 2, 1, "", "MgO"]], "armi.materials.mgO.MgO": [[102, 3, 1, "", "linearExpansionPercent"], [102, 4, 1, "", "propertyValidTemperature"], [102, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.molybdenum": [[104, 2, 1, "", "Molybdenum"]], "armi.materials.molybdenum.Molybdenum": [[104, 3, 1, "", "density"], [104, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.mox": [[105, 2, 1, "", "MOX"]], "armi.materials.mox.MOX": [[105, 3, 1, "", "applyInputParams"], [105, 4, 1, "", "enrichedNuclide"], [105, 3, 1, "", "getMassFracPuO2"], [105, 3, 1, "", "getMolFracPuO2"], [105, 3, 1, "", "meltingPoint"], [105, 3, 1, "", "setDefaultMassFracs"], [105, 3, 1, "", "setMassFracPuO2"]], "armi.materials.nZ": [[106, 2, 1, "", "NZ"]], "armi.materials.nZ.NZ": [[106, 3, 1, "", "density"], [106, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.potassium": [[107, 2, 1, "", "Potassium"]], "armi.materials.potassium.Potassium": [[107, 4, 1, "", "propertyValidTemperature"], [107, 3, 1, "", "pseudoDensity"]], "armi.materials.scandiumOxide": [[108, 2, 1, "", "Sc2O3"]], "armi.materials.scandiumOxide.Sc2O3": [[108, 3, 1, "", "linearExpansionPercent"], [108, 4, 1, "", "propertyValidTemperature"], [108, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.siC": [[109, 2, 1, "", "SiC"]], "armi.materials.siC.SiC": [[109, 3, 1, "", "cumulativeLinearExpansion"], [109, 3, 1, "", "heatCapacity"], [109, 3, 1, "", "meltingPoint"], [109, 4, 1, "", "propertyEquation"], [109, 4, 1, "", "propertyNotes"], [109, 4, 1, "", "propertyUnits"], [109, 4, 1, "", "propertyValidTemperature"], [109, 3, 1, "", "pseudoDensity"], [109, 4, 1, "", "refTempK"], [109, 4, 1, "", "references"], [109, 3, 1, "", "setDefaultMassFracs"], [109, 3, 1, "", "thermalConductivity"], [109, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.sodium": [[110, 2, 1, "", "Sodium"]], "armi.materials.sodium.Sodium": [[110, 3, 1, "", "enthalpy"], [110, 4, 1, "", "propertyValidTemperature"], [110, 3, 1, "", "pseudoDensity"], [110, 3, 1, "", "setDefaultMassFracs"], [110, 3, 1, "", "specificVolumeLiquid"], [110, 3, 1, "", "thermalConductivity"]], "armi.materials.sodiumChloride": [[111, 2, 1, "", "NaCl"]], "armi.materials.sodiumChloride.NaCl": [[111, 3, 1, "", "density"], [111, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.sulfur": [[112, 2, 1, "", "Sulfur"]], "armi.materials.sulfur.Sulfur": [[112, 3, 1, "", "applyInputParams"], [112, 4, 1, "", "propertyValidTemperature"], [112, 3, 1, "", "pseudoDensity"], [112, 3, 1, "", "setDefaultMassFracs"], [112, 3, 1, "", "updateTD"], [112, 3, 1, "", "volumetricExpansion"]], "armi.materials.tZM": [[113, 2, 1, "", "TZM"]], "armi.materials.tZM.TZM": [[113, 3, 1, "", "linearExpansionPercent"], [113, 4, 1, "", "percentThermalExpansion"], [113, 4, 1, "", "propertyValidTemperature"], [113, 4, 1, "", "references"], [113, 3, 1, "", "setDefaultMassFracs"], [113, 4, 1, "", "temperatureC"]], "armi.materials.tantalum": [[114, 2, 1, "", "Tantalum"]], "armi.materials.tantalum.Tantalum": [[114, 3, 1, "", "density"], [114, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.tests": [[116, 0, 0, "-", "test__init__"], [117, 0, 0, "-", "test_air"], [118, 0, 0, "-", "test_b4c"], [119, 0, 0, "-", "test_be9"], [120, 0, 0, "-", "test_graphite"], [121, 0, 0, "-", "test_lithium"], [122, 0, 0, "-", "test_materials"], [123, 0, 0, "-", "test_sic"], [124, 0, 0, "-", "test_sulfur"], [125, 0, 0, "-", "test_thoriumOxide"], [126, 0, 0, "-", "test_uZr"], [127, 0, 0, "-", "test_water"]], "armi.materials.tests.test__init__": [[116, 2, 1, "", "Materials__init__Tests"], [116, 1, 1, "", "betterSubClassCheck"]], "armi.materials.tests.test__init__.Materials__init__Tests": [[116, 3, 1, "", "test_canAccessClassesFromPackage"], [116, 3, 1, "", "test_packageClassesEqualModuleClasses"]], "armi.materials.tests.test_air": [[117, 2, 1, "", "Test_Air"]], "armi.materials.tests.test_air.Test_Air": [[117, 3, 1, "", "test_heatCapacity"], [117, 3, 1, "", "test_massFrac"], [117, 3, 1, "", "test_pseudoDensity"], [117, 3, 1, "", "test_thermalConductivity"], [117, 3, 1, "", "test_validRanges"]], "armi.materials.tests.test_b4c": [[118, 2, 1, "", "B4C_TestCase"]], "armi.materials.tests.test_b4c.B4C_TestCase": [[118, 4, 1, "", "MAT_CLASS"], [118, 3, 1, "", "test_propertyValidTemperature"], [118, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_be9": [[119, 2, 1, "", "Test_Be9"]], "armi.materials.tests.test_be9.Test_Be9": [[119, 4, 1, "", "MAT_CLASS"], [119, 3, 1, "", "test_propertyValidTemperature"], [119, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_graphite": [[120, 2, 1, "", "Graphite_TestCase"]], "armi.materials.tests.test_graphite.Graphite_TestCase": [[120, 4, 1, "", "MAT_CLASS"], [120, 3, 1, "", "test_density"], [120, 3, 1, "", "test_linearExpansionPercent"], [120, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_lithium": [[121, 2, 1, "", "Lithium_TestCase"]], "armi.materials.tests.test_lithium.Lithium_TestCase": [[121, 4, 1, "", "MAT_CLASS"], [121, 4, 1, "", "defaultMassFrac"], [121, 3, 1, "", "test_Lithium_material_modifications"], [121, 3, 1, "", "test_boilingPoint"], [121, 3, 1, "", "test_heatCapacity"], [121, 3, 1, "", "test_meltingPoint"], [121, 3, 1, "", "test_propertyValidTemperature"], [121, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials": [[122, 2, 1, "", "Alloy200_TestCase"], [122, 2, 1, "", "CaH2_TestCase"], [122, 2, 1, "", "Californium_TestCase"], [122, 2, 1, "", "Cesium_TestCase"], [122, 2, 1, "", "Copper_TestCase"], [122, 2, 1, "", "FuelMaterial_TestCase"], [122, 2, 1, "", "Hafnium_TestCase"], [122, 2, 1, "", "HastelloyN_TestCase"], [122, 2, 1, "", "Inconel600_TestCase"], [122, 2, 1, "", "Inconel625_TestCase"], [122, 2, 1, "", "InconelX750_TestCase"], [122, 2, 1, "", "Inconel_TestCase"], [122, 2, 1, "", "LeadBismuth_TestCase"], [122, 2, 1, "", "Lead_TestCase"], [122, 2, 1, "", "MOX_TestCase"], [122, 2, 1, "", "MagnesiumOxide_TestCase"], [122, 2, 1, "", "Magnesium_TestCase"], [122, 2, 1, "", "MaterialConstructionTests"], [122, 2, 1, "", "MaterialFindingTests"], [122, 2, 1, "", "Mixture_TestCase"], [122, 2, 1, "", "Molybdenum_TestCase"], [122, 2, 1, "", "NaCl_TestCase"], [122, 2, 1, "", "NiobiumZirconium_TestCase"], [122, 2, 1, "", "Potassium_TestCase"], [122, 2, 1, "", "ScandiumOxide_TestCase"], [122, 2, 1, "", "Sodium_TestCase"], [122, 2, 1, "", "Sulfur_TestCase"], [122, 2, 1, "", "TZM_TestCase"], [122, 2, 1, "", "Tantalum_TestCase"], [122, 2, 1, "", "ThoriumOxide_TestCase"], [122, 2, 1, "", "ThoriumUraniumMetal_TestCase"], [122, 2, 1, "", "Thorium_TestCase"], [122, 2, 1, "", "UraniumOxide_TestCase"], [122, 2, 1, "", "Uranium_TestCase"], [122, 2, 1, "", "Void_TestCase"], [122, 2, 1, "", "YttriumOxide_TestCase"], [122, 2, 1, "", "ZincOxide_TestCase"], [122, 2, 1, "", "Zr_TestCase"]], "armi.materials.tests.test_materials.Alloy200_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_linearExpansionHotter"], [122, 3, 1, "", "test_nickleContent"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.CaH2_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Californium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_getCorrosionRate"], [122, 3, 1, "", "test_porosities"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Cesium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Copper_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_densityNeverChanges"], [122, 3, 1, "", "test_getChildren"], [122, 3, 1, "", "test_getChildrenWithFlags"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.FuelMaterial_TestCase": [[122, 4, 1, "", "baseInput"], [122, 3, 1, "", "loadAssembly"], [122, 3, 1, "", "test_class1Class2_class1_wt_frac"], [122, 3, 1, "", "test_class1Class2_classX_custom_isotopics"]], "armi.materials.tests.test_materials.Hafnium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.HastelloyN_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_meanCoefficientThermalExpansion"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Inconel600_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_00_setDefaultMassFracs"], [122, 3, 1, "", "test_01_linearExpansionPercent"], [122, 3, 1, "", "test_02_linearExpansion"], [122, 3, 1, "", "test_03_pseudoDensity"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_polyfitHeatCapacity"], [122, 3, 1, "", "test_polyfitLinearExpansionPercent"], [122, 3, 1, "", "test_polyfitThermalConductivity"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel625_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_00_setDefaultMassFracs"], [122, 3, 1, "", "test_01_linearExpansionPercent"], [122, 3, 1, "", "test_02_linearExpansion"], [122, 3, 1, "", "test_03_pseudoDensity"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_polyfitHeatCapacity"], [122, 3, 1, "", "test_polyfitLinearExpansionPercent"], [122, 3, 1, "", "test_polyfitThermalConductivity"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.InconelX750_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_00_setDefaultMassFracs"], [122, 3, 1, "", "test_01_linearExpansionPercent"], [122, 3, 1, "", "test_02_linearExpansion"], [122, 3, 1, "", "test_03_pseudoDensity"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_polyfitHeatCapacity"], [122, 3, 1, "", "test_polyfitLinearExpansionPercent"], [122, 3, 1, "", "test_polyfitThermalConductivity"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel_TestCase": [[122, 3, 1, "", "test_Iconel800_linearExpansion"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.LeadBismuth_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_dynamicVisc"], [122, 3, 1, "", "test_getTempChangeForDensityChange"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_setDefaultMassFracs"], [122, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.Lead_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_setDefaultMassFracs"], [122, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.MOX_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_applyInputParams"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_getMassFracPuO2"], [122, 3, 1, "", "test_getMeltingPoint"], [122, 3, 1, "", "test_getMolFracPuO2"]], "armi.materials.tests.test_materials.MagnesiumOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Magnesium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.MaterialConstructionTests": [[122, 3, 1, "", "test_material_initialization"]], "armi.materials.tests.test_materials.MaterialFindingTests": [[122, 3, 1, "", "test_findMaterial"], [122, 3, 1, "", "test_namespacing"]], "armi.materials.tests.test_materials.Mixture_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.Molybdenum_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.NaCl_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.NiobiumZirconium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Potassium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ScandiumOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Sodium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_enthalpy"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_specificVolumeLiquid"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Sulfur_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_setDefaultMassFracs"], [122, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.TZM_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_00_applyInputParams"], [122, 3, 1, "", "test_01_pseudoDensity"], [122, 3, 1, "", "test_02_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Tantalum_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ThoriumOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_meltingPoint"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_meltingPoint"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Thorium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_meltingPoint"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_setDefaultMassFracs"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.UraniumOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_adjustMassEnrichment"], [122, 3, 1, "", "test_applyInputParams"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_densityTimesHeatCapactiy"], [122, 3, 1, "", "test_duplicate"], [122, 3, 1, "", "test_getDensityExpansion3D"], [122, 3, 1, "", "test_getTempChangeForDensityChange"], [122, 3, 1, "", "test_getTemperatureAtDensity"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_meltingPoint"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_removeNucMassFrac"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Uranium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_applyInputParams"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Void_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.YttriumOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ZincOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Zr_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_sic": [[123, 2, 1, "", "Test_SiC"]], "armi.materials.tests.test_sic.Test_SiC": [[123, 4, 1, "", "MAT_CLASS"], [123, 3, 1, "", "test_heatCapacity"], [123, 3, 1, "", "test_meltingPoint"], [123, 3, 1, "", "test_propertyValidTemperature"], [123, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_sulfur": [[124, 2, 1, "", "Sulfur_TestCase"]], "armi.materials.tests.test_sulfur.Sulfur_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_sulfur_density_frac"]], "armi.materials.tests.test_thoriumOxide": [[125, 2, 1, "", "ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_uZr": [[126, 2, 1, "", "UZR_TestCase"]], "armi.materials.tests.test_uZr.UZR_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_TD"], [126, 3, 1, "", "test_cache"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_densityKgM3"], [126, 3, 1, "", "test_duplicate"], [126, 3, 1, "", "test_isPicklable"], [126, 3, 1, "", "test_propertyValidTemperature"], [126, 3, 1, "", "test_pseudoDensityKgM3"]], "armi.materials.tests.test_water": [[127, 2, 1, "", "Test_Water"]], "armi.materials.tests.test_water.Test_Water": [[127, 3, 1, "", "test_massFrac"], [127, 3, 1, "", "test_propertyValidTemperature"], [127, 3, 1, "", "test_validateNames"], [127, 3, 1, "", "test_water_at_boiling"], [127, 3, 1, "", "test_water_at_critcalPoint"], [127, 3, 1, "", "test_water_at_freezing"]], "armi.materials.thU": [[128, 2, 1, "", "ThU"]], "armi.materials.thU.ThU": [[128, 3, 1, "", "applyInputParams"], [128, 4, 1, "", "enrichedNuclide"], [128, 3, 1, "", "getEnrichment"], [128, 3, 1, "", "linearExpansion"], [128, 3, 1, "", "meltingPoint"], [128, 4, 1, "", "propertyValidTemperature"], [128, 3, 1, "", "setDefaultMassFracs"], [128, 3, 1, "", "thermalConductivity"]], "armi.materials.thorium": [[129, 2, 1, "", "Thorium"]], "armi.materials.thorium.Thorium": [[129, 3, 1, "", "linearExpansion"], [129, 3, 1, "", "meltingPoint"], [129, 4, 1, "", "propertyValidTemperature"], [129, 3, 1, "", "setDefaultMassFracs"], [129, 3, 1, "", "thermalConductivity"]], "armi.materials.thoriumOxide": [[130, 2, 1, "", "ThO2"], [130, 2, 1, "", "ThoriumOxide"]], "armi.materials.thoriumOxide.ThoriumOxide": [[130, 3, 1, "", "applyInputParams"], [130, 3, 1, "", "density"], [130, 3, 1, "", "linearExpansion"], [130, 3, 1, "", "linearExpansionPercent"], [130, 3, 1, "", "meltingPoint"], [130, 4, 1, "", "propertyValidTemperature"], [130, 3, 1, "", "setDefaultMassFracs"], [130, 3, 1, "", "thermalConductivity"]], "armi.materials.uThZr": [[131, 2, 1, "", "UThZr"]], "armi.materials.uThZr.UThZr": [[131, 3, 1, "", "applyInputParams"], [131, 4, 1, "", "enrichedNuclide"], [131, 3, 1, "", "pseudoDensity"], [131, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.uZr": [[132, 2, 1, "", "UZr"]], "armi.materials.uZr.UZr": [[132, 3, 1, "", "applyInputParams"], [132, 4, 1, "", "enrichedNuclide"], [132, 3, 1, "", "linearExpansionPercent"], [132, 3, 1, "", "setDefaultMassFracs"], [132, 4, 1, "", "uFracDefault"], [132, 4, 1, "", "zrFracDefault"]], "armi.materials.uranium": [[133, 2, 1, "", "Uranium"]], "armi.materials.uranium.Uranium": [[133, 3, 1, "", "applyInputParams"], [133, 3, 1, "", "density"], [133, 4, 1, "", "enrichedNuclide"], [133, 3, 1, "", "heatCapacity"], [133, 3, 1, "", "linearExpansion"], [133, 3, 1, "", "linearExpansionPercent"], [133, 4, 1, "", "materialIntro"], [133, 3, 1, "", "meltingPoint"], [133, 4, 1, "", "propertyEquation"], [133, 4, 1, "", "propertyNotes"], [133, 4, 1, "", "propertyRawData"], [133, 4, 1, "", "propertyUnits"], [133, 4, 1, "", "propertyValidTemperature"], [133, 3, 1, "", "pseudoDensity"], [133, 4, 1, "", "refDens"], [133, 4, 1, "", "references"], [133, 3, 1, "", "setDefaultMassFracs"], [133, 3, 1, "", "thermalConductivity"]], "armi.materials.uraniumOxide": [[134, 2, 1, "", "HeatCapacityConstants"], [134, 2, 1, "", "UO2"], [134, 2, 1, "", "UraniumOxide"]], "armi.materials.uraniumOxide.HeatCapacityConstants": [[134, 4, 1, "", "Ea"], [134, 4, 1, "", "c1"], [134, 4, 1, "", "c2"], [134, 4, 1, "", "c3"], [134, 4, 1, "", "theta"]], "armi.materials.uraniumOxide.UraniumOxide": [[134, 4, 1, "", "REFERENCE_TEMPERATURE"], [134, 3, 1, "", "applyInputParams"], [134, 3, 1, "", "density"], [134, 4, 1, "", "enrichedNuclide"], [134, 3, 1, "", "heatCapacity"], [134, 4, 1, "", "heatCapacityConstants"], [134, 3, 1, "", "linearExpansion"], [134, 3, 1, "", "linearExpansionPercent"], [134, 3, 1, "", "meltingPoint"], [134, 4, 1, "", "propertyUnits"], [134, 4, 1, "", "propertyValidTemperature"], [134, 4, 1, "", "references"], [134, 3, 1, "", "setDefaultMassFracs"], [134, 3, 1, "", "thermalConductivity"], [134, 4, 1, "", "thermalConductivityTable"], [134, 4, 1, "", "thermalConductivityTableK"], [134, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.void": [[135, 2, 1, "", "Void"]], "armi.materials.void.Void": [[135, 3, 1, "", "density"], [135, 3, 1, "", "pseudoDensity"]], "armi.materials.water": [[136, 2, 1, "", "SaturatedSteam"], [136, 2, 1, "", "SaturatedWater"], [136, 2, 1, "", "Water"]], "armi.materials.water.SaturatedSteam": [[136, 3, 1, "", "pseudoDensity"]], "armi.materials.water.SaturatedWater": [[136, 3, 1, "", "pseudoDensity"]], "armi.materials.water.Water": [[136, 4, 1, "", "ALPHA_0"], [136, 4, 1, "", "DENSITY_CRITICAL_GPERCUBICCENTIMETER"], [136, 4, 1, "", "DENSITY_CRITICAL_KGPERCUBICMETER"], [136, 4, 1, "", "PHI_0"], [136, 4, 1, "", "TEMPERATURE_CRITICAL_K"], [136, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_MPA"], [136, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_PA"], [136, 3, 1, "", "auxiliaryQuantitySpecificEnthalpy"], [136, 3, 1, "", "auxiliaryQuantitySpecificEntropy"], [136, 4, 1, "", "d"], [136, 3, 1, "", "enthalpy"], [136, 3, 1, "", "entropy"], [136, 3, 1, "", "pseudoDensity"], [136, 4, 1, "", "references"], [136, 3, 1, "", "setDefaultMassFracs"], [136, 3, 1, "", "tau"], [136, 4, 1, "", "thermalScatteringLaws"], [136, 3, 1, "", "theta"], [136, 3, 1, "", "vaporPressure"], [136, 3, 1, "", "vaporPressurePrime"]], "armi.materials.yttriumOxide": [[137, 2, 1, "", "Y2O3"]], "armi.materials.yttriumOxide.Y2O3": [[137, 3, 1, "", "linearExpansionPercent"], [137, 4, 1, "", "propertyValidTemperature"], [137, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zincOxide": [[138, 2, 1, "", "ZnO"]], "armi.materials.zincOxide.ZnO": [[138, 3, 1, "", "density"], [138, 3, 1, "", "linearExpansionPercent"], [138, 4, 1, "", "propertyValidTemperature"], [138, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zr": [[139, 2, 1, "", "Zr"]], "armi.materials.zr.Zr": [[139, 3, 1, "", "linearExpansion"], [139, 3, 1, "", "linearExpansionPercent"], [139, 4, 1, "", "linearExpansionTable"], [139, 4, 1, "", "linearExpansionTableK"], [139, 4, 1, "", "propertyValidTemperature"], [139, 4, 1, "", "refTempK"], [139, 4, 1, "", "references"], [139, 3, 1, "", "setDefaultMassFracs"], [139, 3, 1, "", "thermalConductivity"]], "armi.migration": [[142, 0, 0, "-", "base"], [143, 0, 0, "-", "m0_1_3"], [144, 0, 0, "-", "m0_1_6"], [145, 0, 0, "-", "tests"]], "armi.migration.base": [[142, 2, 1, "", "BlueprintsMigration"], [142, 2, 1, "", "DatabaseMigration"], [142, 2, 1, "", "Migration"], [142, 2, 1, "", "SettingsMigration"]], "armi.migration.base.Migration": [[142, 3, 1, "", "apply"], [142, 4, 1, "", "fromVersion"], [142, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3": [[143, 2, 1, "", "RemoveCentersFromBlueprints"], [143, 2, 1, "", "UpdateElementalNuclides"]], "armi.migration.m0_1_3.RemoveCentersFromBlueprints": [[143, 4, 1, "", "fromVersion"], [143, 4, 1, "", "toVersion"]], "armi.migration.m0_1_3.UpdateElementalNuclides": [[143, 4, 1, "", "deletions"], [143, 4, 1, "", "fromVersion"], [143, 4, 1, "", "swaps"], [143, 4, 1, "", "toVersion"]], "armi.migration.m0_1_6": [[144, 2, 1, "", "ConvertAlphanumLocationSettingsToNum"], [144, 1, 1, "", "getIndicesFromDIF3DStyleLocatorLabel"]], "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum": [[144, 4, 1, "", "fromVersion"], [144, 4, 1, "", "toVersion"]], "armi.migration.tests": [[146, 0, 0, "-", "test_m0_1_6"], [147, 0, 0, "-", "test_migration_base"]], "armi.migration.tests.test_m0_1_6": [[146, 2, 1, "", "TestMigration"]], "armi.migration.tests.test_m0_1_6.TestMigration": [[146, 3, 1, "", "test_locationLabelMigration"]], "armi.migration.tests.test_migration_base": [[147, 2, 1, "", "TestMigrationBases"], [147, 2, 1, "", "TestSettingsMigration"]], "armi.migration.tests.test_migration_base.TestMigrationBases": [[147, 3, 1, "", "test_basic_validation"]], "armi.migration.tests.test_migration_base.TestSettingsMigration": [[147, 3, 1, "", "test_loadStreamFromPath"]], "armi.mpiActions": [[148, 2, 1, "", "DistributeStateAction"], [148, 2, 1, "", "DistributionAction"], [148, 2, 1, "", "MpiAction"], [148, 7, 1, "", "MpiActionError"], [148, 1, 1, "", "runActions"], [148, 1, 1, "", "runActionsInSerial"]], "armi.mpiActions.DistributeStateAction": [[148, 3, 1, "", "invokeHook"]], "armi.mpiActions.DistributionAction": [[148, 3, 1, "", "invokeHook"]], "armi.mpiActions.MpiAction": [[148, 3, 1, "", "broadcast"], [148, 3, 1, "", "gather"], [148, 3, 1, "", "invoke"], [148, 3, 1, "", "invokeAsMaster"], [148, 3, 1, "", "invokeHook"], [148, 3, 1, "", "mpiFlatten"], [148, 3, 1, "", "mpiIter"], [148, 5, 1, "", "parallel"]], "armi.nucDirectory": [[150, 0, 0, "-", "elements"], [151, 0, 0, "-", "nucDir"], [152, 0, 0, "-", "nuclideBases"], [153, 0, 0, "-", "tests"], [159, 0, 0, "-", "thermalScattering"], [160, 0, 0, "-", "transmutations"]], "armi.nucDirectory.elements": [[150, 2, 1, "", "ChemicalGroup"], [150, 2, 1, "", "ChemicalPhase"], [150, 2, 1, "", "Element"], [150, 1, 1, "", "addGlobalElement"], [150, 1, 1, "", "destroyGlobalElements"], [150, 1, 1, "", "factory"], [150, 1, 1, "", "getElementZ"], [150, 1, 1, "", "getElementsByChemicalGroup"], [150, 1, 1, "", "getElementsByChemicalPhase"], [150, 1, 1, "", "getName"], [150, 1, 1, "", "getSymbol"]], "armi.nucDirectory.elements.ChemicalGroup": [[150, 4, 1, "", "ACTINIDE"], [150, 4, 1, "", "ALKALINE_EARTH_METAL"], [150, 4, 1, "", "ALKALI_METAL"], [150, 4, 1, "", "HALOGEN"], [150, 4, 1, "", "LANTHANIDE"], [150, 4, 1, "", "METALLOID"], [150, 4, 1, "", "NOBLE_GAS"], [150, 4, 1, "", "NONMETAL"], [150, 4, 1, "", "POST_TRANSITION_METAL"], [150, 4, 1, "", "TRANSITION_METAL"], [150, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.ChemicalPhase": [[150, 4, 1, "", "GAS"], [150, 4, 1, "", "LIQUID"], [150, 4, 1, "", "SOLID"], [150, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.Element": [[150, 3, 1, "", "append"], [150, 3, 1, "", "getNaturalIsotopics"], [150, 3, 1, "", "isHeavyMetal"], [150, 3, 1, "", "isNaturallyOccurring"]], "armi.nucDirectory.nucDir": [[151, 1, 1, "", "getAtomicWeight"], [151, 1, 1, "", "getElementName"], [151, 1, 1, "", "getElementSymbol"], [151, 1, 1, "", "getMc2Label"], [151, 1, 1, "", "getNaturalIsotopics"], [151, 1, 1, "", "getNaturalMassIsotopics"], [151, 1, 1, "", "getNuclide"], [151, 1, 1, "", "getNuclideFromName"], [151, 1, 1, "", "getNuclideNames"], [151, 1, 1, "", "getNuclides"], [151, 1, 1, "", "getThresholdDisplacementEnergy"], [151, 1, 1, "", "isFissile"], [151, 1, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases": [[152, 2, 1, "", "DummyNuclideBase"], [152, 2, 1, "", "IMcnpNuclide"], [152, 2, 1, "", "INuclide"], [152, 2, 1, "", "LumpNuclideBase"], [152, 2, 1, "", "NaturalNuclideBase"], [152, 2, 1, "", "NuclideBase"], [152, 2, 1, "", "NuclideInterface"], [152, 2, 1, "", "NuclideWrapper"], [152, 1, 1, "", "addGlobalNuclide"], [152, 1, 1, "", "addNuclideBases"], [152, 1, 1, "", "changeLabel"], [152, 1, 1, "", "destroyGlobalNuclides"], [152, 1, 1, "", "factory"], [152, 1, 1, "", "fromName"], [152, 1, 1, "", "getDepletableNuclides"], [152, 1, 1, "", "getIsotopics"], [152, 1, 1, "", "imposeBurnChain"], [152, 1, 1, "", "initReachableActiveNuclidesThroughBurnChain"], [152, 1, 1, "", "isMonoIsotopicElement"], [152, 1, 1, "", "isotopes"], [152, 1, 1, "", "readMCCNuclideData"], [152, 1, 1, "", "single"], [152, 1, 1, "", "updateNuclideBasesForSpecialCases"], [152, 1, 1, "", "where"]], "armi.nucDirectory.nuclideBases.DummyNuclideBase": [[152, 3, 1, "", "getMcc2Id"], [152, 3, 1, "", "getMcc3Id"], [152, 3, 1, "", "getNaturalIsotopics"], [152, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.IMcnpNuclide": [[152, 3, 1, "", "getAAAZZZSId"], [152, 3, 1, "", "getMcnpId"]], "armi.nucDirectory.nuclideBases.INuclide": [[152, 4, 1, "", "DECAY"], [152, 4, 1, "", "SPONTANEOUS_FISSION"], [152, 4, 1, "", "TRANSMUTATION"], [152, 4, 1, "", "fissile"], [152, 3, 1, "", "getDatabaseName"], [152, 3, 1, "", "getDecay"], [152, 3, 1, "", "getNaturalIsotopics"], [152, 3, 1, "", "isFissile"], [152, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.LumpNuclideBase": [[152, 3, 1, "", "getMcc2Id"], [152, 3, 1, "", "getMcc3Id"], [152, 3, 1, "", "getNaturalIsotopics"], [152, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NaturalNuclideBase": [[152, 3, 1, "", "getAAAZZZSId"], [152, 3, 1, "", "getEndfMatNum"], [152, 3, 1, "", "getMcc2Id"], [152, 3, 1, "", "getMcc3Id"], [152, 3, 1, "", "getMcnpId"], [152, 3, 1, "", "getNaturalIsotopics"], [152, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideBase": [[152, 3, 1, "", "getAAAZZZSId"], [152, 3, 1, "", "getEndfMatNum"], [152, 3, 1, "", "getMcc2Id"], [152, 3, 1, "", "getMcc3Id"], [152, 3, 1, "", "getMcnpId"], [152, 3, 1, "", "getNaturalIsotopics"], [152, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideInterface": [[152, 3, 1, "", "getDatabaseName"], [152, 3, 1, "", "getDecay"], [152, 3, 1, "", "getMcc2Id"], [152, 3, 1, "", "getMcc3Id"], [152, 3, 1, "", "getNaturalIsotopics"], [152, 3, 1, "", "getSerpentId"], [152, 3, 1, "", "isFissile"], [152, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NuclideWrapper": [[152, 3, 1, "", "getDatabaseName"], [152, 3, 1, "", "getDecay"], [152, 3, 1, "", "getMcc2Id"], [152, 3, 1, "", "getMcc3Id"], [152, 3, 1, "", "getNaturalIsotopics"], [152, 3, 1, "", "isFissile"], [152, 3, 1, "", "isHeavyMetal"], [152, 5, 1, "", "name"], [152, 5, 1, "", "weight"]], "armi.nucDirectory.tests": [[154, 0, 0, "-", "test_elements"], [155, 0, 0, "-", "test_nucDirectory"], [156, 0, 0, "-", "test_nuclideBases"], [157, 0, 0, "-", "test_thermalScattering"], [158, 0, 0, "-", "test_transmutations"]], "armi.nucDirectory.tests.test_elements": [[154, 2, 1, "", "TestElement"]], "armi.nucDirectory.tests.test_elements.TestElement": [[154, 3, 1, "", "test_abundancesAddToOne"], [154, 3, 1, "", "test_element_addExistingElementFails"], [154, 3, 1, "", "test_element_addedElementAppearsInElementList"], [154, 3, 1, "", "test_element_elementByNameReturnsElement"], [154, 3, 1, "", "test_element_elementBySymbolReturnsElement"], [154, 3, 1, "", "test_element_elementByZReturnsElement"], [154, 3, 1, "", "test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"], [154, 3, 1, "", "test_element_isNaturallyOccurring"], [154, 3, 1, "", "test_elements_elementBulkProperties"], [154, 3, 1, "", "test_isHeavyMetal"]], "armi.nucDirectory.tests.test_nucDirectory": [[155, 2, 1, "", "TestNucDirectory"]], "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory": [[155, 3, 1, "", "test_getDisplacementEnergy"], [155, 3, 1, "", "test_nucDir_getNameForOldDashedNames"], [155, 3, 1, "", "test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"], [155, 3, 1, "", "test_nucDir_getNuclidesFromForBadName"]], "armi.nucDirectory.tests.test_nuclideBases": [[156, 2, 1, "", "TestAAAZZZSId"], [156, 2, 1, "", "TestNuclide"]], "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId": [[156, 3, 1, "", "test_AAAZZZSNameGenerator"]], "armi.nucDirectory.tests.test_nuclideBases.TestNuclide": [[156, 3, 1, "", "test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"], [156, 3, 1, "", "test_NaturalNuclideBase_getNatrualIsotpics"], [156, 3, 1, "", "test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"], [156, 3, 1, "", "test_NonMc2Nuclide"], [156, 3, 1, "", "test_curieDefinitionWithRa226"], [156, 3, 1, "", "test_getDecay"], [156, 3, 1, "", "test_getEndfMatNum"], [156, 3, 1, "", "test_kryptonDecayConstants"], [156, 3, 1, "", "test_loadMcc2Data"], [156, 3, 1, "", "test_loadMcc3Data"], [156, 3, 1, "", "test_nucBase_AllAbundancesAddToOne"], [156, 3, 1, "", "test_nucBases_AllDatabaseNamesAreUnique"], [156, 3, 1, "", "test_nucBases_AllLabelsAreUnique"], [156, 3, 1, "", "test_nucBases_Am242m"], [156, 3, 1, "", "test_nucBases_Mc2Elementals"], [156, 3, 1, "", "test_nucBases_NegativeZRaisesException"], [156, 3, 1, "", "test_nucBases_Z295RaisesException"], [156, 3, 1, "", "test_nucBases_databaseNamesStartWith_n"], [156, 3, 1, "", "test_nucBases_fromNameBadNameRaisesException"], [156, 3, 1, "", "test_nucBases_imposeBurnChainDecayBulkStatistics"], [156, 3, 1, "", "test_nucBases_imposeBurnChainTransmutationBulkStatistics"], [156, 3, 1, "", "test_nucBases_imposeBurn_nuSF"], [156, 3, 1, "", "test_nucBases_isHeavyMetal"], [156, 3, 1, "", "test_nucBases_labelAndNameCollsionsAreForSameNuclide"], [156, 3, 1, "", "test_nucBases_singleFailsWithMultipleMatches"], [156, 3, 1, "", "test_nucBases_singleFailsWithNoMatches"], [156, 3, 1, "", "test_nucBases_singleIsPrettySpecific"]], "armi.nucDirectory.tests.test_thermalScattering": [[157, 2, 1, "", "TestThermalScattering"], [157, 1, 1, "", "buildBlockWithTSL"], [157, 1, 1, "", "getNuclideThermalScatteringData"]], "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering": [[157, 3, 1, "", "test_ACECompound"], [157, 3, 1, "", "test_ACEElementInCompound"], [157, 3, 1, "", "test_ACEIsotope"], [157, 3, 1, "", "test_endf8Compound"], [157, 3, 1, "", "test_endf8ElementInCompound"], [157, 3, 1, "", "test_endf8Isotope"], [157, 3, 1, "", "test_failOnMultiple"], [157, 3, 1, "", "test_graphiteOnReactor"]], "armi.nucDirectory.tests.test_transmutations": [[158, 2, 1, "", "DecayModeTests"], [158, 2, 1, "", "TransmutationTests"], [158, 1, 1, "", "randomString"]], "armi.nucDirectory.tests.test_transmutations.DecayModeTests": [[158, 3, 1, "", "test_DecayMode_invalidReactionTypes"], [158, 3, 1, "", "test_DecayMode_validReactionTypes"]], "armi.nucDirectory.tests.test_transmutations.TransmutationTests": [[158, 3, 1, "", "test_Transmutation_invalidReactionTypes"], [158, 3, 1, "", "test_Transmutation_productParticle"], [158, 3, 1, "", "test_Transmutation_validReactionTypes"]], "armi.nucDirectory.thermalScattering": [[159, 2, 1, "", "ThermalScattering"], [159, 1, 1, "", "factory"]], "armi.nucDirectory.thermalScattering.ThermalScattering": [[159, 3, 1, "", "getSubjectNuclideBases"]], "armi.nucDirectory.transmutations": [[160, 2, 1, "", "DecayMode"], [160, 2, 1, "", "Transmutable"], [160, 2, 1, "", "Transmutation"]], "armi.nucDirectory.transmutations.Transmutable": [[160, 3, 1, "", "getPreferredProduct"]], "armi.nuclearDataIO": [[162, 0, 0, "-", "cccc"], [161, 1, 1, "", "getExpectedCOMPXSFileName"], [161, 1, 1, "", "getExpectedGAMISOFileName"], [161, 1, 1, "", "getExpectedISOTXSFileName"], [161, 1, 1, "", "getExpectedPMATRXFileName"], [191, 0, 0, "-", "nuclearFileMetadata"], [192, 0, 0, "-", "tests"], [196, 0, 0, "-", "xsCollections"], [197, 0, 0, "-", "xsLibraries"], [198, 0, 0, "-", "xsNuclides"]], "armi.nuclearDataIO.cccc": [[163, 0, 0, "-", "cccc"], [164, 0, 0, "-", "compxs"], [165, 0, 0, "-", "dif3d"], [166, 0, 0, "-", "dlayxs"], [167, 0, 0, "-", "fixsrc"], [168, 0, 0, "-", "gamiso"], [169, 0, 0, "-", "geodst"], [170, 0, 0, "-", "isotxs"], [171, 0, 0, "-", "labels"], [172, 0, 0, "-", "nhflux"], [173, 0, 0, "-", "pmatrx"], [174, 0, 0, "-", "pwdint"], [175, 0, 0, "-", "rtflux"], [176, 0, 0, "-", "rzflux"], [177, 0, 0, "-", "tests"]], "armi.nuclearDataIO.cccc.cccc": [[163, 2, 1, "", "AsciiRecordReader"], [163, 2, 1, "", "AsciiRecordWriter"], [163, 2, 1, "", "BinaryRecordReader"], [163, 2, 1, "", "BinaryRecordWriter"], [163, 2, 1, "", "DataContainer"], [163, 6, 1, "", "IMPLICIT_INT"], [163, 2, 1, "", "IORecord"], [163, 2, 1, "", "Stream"], [163, 2, 1, "", "StreamWithDataContainer"], [163, 1, 1, "", "getBlockBandwidth"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader": [[163, 3, 1, "", "close"], [163, 3, 1, "", "rwDouble"], [163, 3, 1, "", "rwFloat"], [163, 3, 1, "", "rwInt"], [163, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter": [[163, 3, 1, "", "close"], [163, 3, 1, "", "open"], [163, 3, 1, "", "rwDouble"], [163, 3, 1, "", "rwFloat"], [163, 3, 1, "", "rwInt"], [163, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader": [[163, 3, 1, "", "close"], [163, 3, 1, "", "open"], [163, 3, 1, "", "rwBool"], [163, 3, 1, "", "rwDouble"], [163, 3, 1, "", "rwFloat"], [163, 3, 1, "", "rwInt"], [163, 3, 1, "", "rwLong"], [163, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter": [[163, 3, 1, "", "close"], [163, 3, 1, "", "open"], [163, 3, 1, "", "rwBool"], [163, 3, 1, "", "rwDouble"], [163, 3, 1, "", "rwFloat"], [163, 3, 1, "", "rwInt"], [163, 3, 1, "", "rwLong"], [163, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.IORecord": [[163, 3, 1, "", "close"], [163, 4, 1, "", "count"], [163, 4, 1, "", "maxsize"], [163, 3, 1, "", "open"], [163, 3, 1, "", "rwBool"], [163, 3, 1, "", "rwDouble"], [163, 3, 1, "", "rwDoubleMatrix"], [163, 3, 1, "", "rwFloat"], [163, 3, 1, "", "rwImplicitlyTypedMap"], [163, 3, 1, "", "rwInt"], [163, 3, 1, "", "rwIntMatrix"], [163, 3, 1, "", "rwList"], [163, 3, 1, "", "rwMatrix"], [163, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.Stream": [[163, 3, 1, "", "createRecord"], [163, 3, 1, "", "readAscii"], [163, 3, 1, "", "readBinary"], [163, 3, 1, "", "readWrite"], [163, 3, 1, "", "writeAscii"], [163, 3, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.compxs": [[164, 2, 1, "", "CompxsRegion"], [164, 1, 1, "", "compare"]], "armi.nuclearDataIO.cccc.compxs.CompxsRegion": [[164, 3, 1, "", "allocateXS"], [164, 3, 1, "", "getXS"], [164, 3, 1, "", "initMetadata"], [164, 5, 1, "", "isFissile"], [164, 3, 1, "", "makeScatteringMatrices"], [164, 3, 1, "", "merge"]], "armi.nuclearDataIO.cccc.dif3d": [[165, 2, 1, "", "Dif3dData"], [165, 2, 1, "", "Dif3dStream"]], "armi.nuclearDataIO.cccc.dif3d.Dif3dStream": [[165, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.dlayxs": [[166, 2, 1, "", "DelayedNeutronData"], [166, 2, 1, "", "Dlayxs"], [166, 2, 1, "", "DlayxsIO"], [166, 1, 1, "", "compare"], [166, 1, 1, "", "readAscii"], [166, 1, 1, "", "readBinary"], [166, 1, 1, "", "writeAscii"], [166, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.dlayxs.Dlayxs": [[166, 5, 1, "", "G"], [166, 3, 1, "", "generateAverageDelayedNeutronConstants"]], "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO": [[166, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.fixsrc": [[167, 2, 1, "", "FIXSRC"], [167, 1, 1, "", "readBinary"], [167, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.fixsrc.FIXSRC": [[167, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.gamiso": [[168, 1, 1, "", "addDummyNuclidesToLibrary"], [168, 1, 1, "", "compare"], [168, 1, 1, "", "compareNuclideXS"]], "armi.nuclearDataIO.cccc.geodst": [[169, 2, 1, "", "GeodstData"], [169, 2, 1, "", "GeodstStream"]], "armi.nuclearDataIO.cccc.geodst.GeodstStream": [[169, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.isotxs": [[170, 2, 1, "", "IsotxsIO"], [170, 1, 1, "", "addDummyNuclidesToLibrary"], [170, 1, 1, "", "compare"], [170, 1, 1, "", "compareNuclideXS"], [170, 1, 1, "", "compareSet"]], "armi.nuclearDataIO.cccc.isotxs.IsotxsIO": [[170, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.labels": [[171, 2, 1, "", "LabelsData"], [171, 2, 1, "", "LabelsStream"]], "armi.nuclearDataIO.cccc.labels.LabelsStream": [[171, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.nhflux": [[172, 2, 1, "", "NHFLUX"], [172, 2, 1, "", "NafluxStream"], [172, 2, 1, "", "NafluxStreamVariant"], [172, 2, 1, "", "NhfluxStream"], [172, 2, 1, "", "NhfluxStreamVariant"], [172, 1, 1, "", "getNhfluxReader"]], "armi.nuclearDataIO.cccc.nhflux.NHFLUX": [[172, 5, 1, "", "fluxMoments"], [172, 5, 1, "", "partialCurrentsHex"], [172, 5, 1, "", "partialCurrentsHex_ext"], [172, 5, 1, "", "partialCurrentsZ"]], "armi.nuclearDataIO.cccc.nhflux.NhfluxStream": [[172, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pmatrx": [[173, 2, 1, "", "PmatrxIO"], [173, 1, 1, "", "addDummyNuclidesToLibrary"], [173, 1, 1, "", "compare"], [173, 1, 1, "", "compareNuclideXS"], [173, 1, 1, "", "readAscii"], [173, 1, 1, "", "readBinary"], [173, 1, 1, "", "writeAscii"], [173, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO": [[173, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pwdint": [[174, 2, 1, "", "PwdintData"], [174, 2, 1, "", "PwdintStream"]], "armi.nuclearDataIO.cccc.pwdint.PwdintStream": [[174, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rtflux": [[175, 2, 1, "", "AtfluxStream"], [175, 2, 1, "", "RtfluxData"], [175, 2, 1, "", "RtfluxStream"], [175, 1, 1, "", "getFDFluxReader"]], "armi.nuclearDataIO.cccc.rtflux.AtfluxStream": [[175, 3, 1, "", "getEnergyGroupIndex"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxData": [[175, 4, 1, "", "groupFluxes"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxStream": [[175, 3, 1, "", "getEnergyGroupIndex"], [175, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rzflux": [[176, 2, 1, "", "Convergence"], [176, 2, 1, "", "RzfluxData"], [176, 2, 1, "", "RzfluxStream"]], "armi.nuclearDataIO.cccc.rzflux.Convergence": [[176, 4, 1, "", "CONVERGED"], [176, 4, 1, "", "CONVERGING"], [176, 4, 1, "", "DIVERGING"], [176, 4, 1, "", "NO_ITERATIONS"]], "armi.nuclearDataIO.cccc.rzflux.RzfluxStream": [[176, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.tests": [[178, 0, 0, "-", "test_cccc"], [179, 0, 0, "-", "test_compxs"], [180, 0, 0, "-", "test_dif3d"], [181, 0, 0, "-", "test_dlayxs"], [182, 0, 0, "-", "test_gamiso"], [183, 0, 0, "-", "test_geodst"], [184, 0, 0, "-", "test_isotxs"], [185, 0, 0, "-", "test_labels"], [186, 0, 0, "-", "test_nhflux"], [187, 0, 0, "-", "test_pmatrx"], [188, 0, 0, "-", "test_pwdint"], [189, 0, 0, "-", "test_rtflux"], [190, 0, 0, "-", "test_rzflux"]], "armi.nuclearDataIO.cccc.tests.test_cccc": [[178, 2, 1, "", "CcccAsciiRecordTests"], [178, 2, 1, "", "CcccBinaryRecordTests"], [178, 2, 1, "", "CcccIOStreamTests"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests": [[178, 3, 1, "", "test_notReadingAnEntireRecordRaisesException"], [178, 3, 1, "", "test_readingBeyondRecordRaisesException"], [178, 3, 1, "", "test_writeAndReadSimpleFloatRecord"], [178, 3, 1, "", "test_writeAndReadSimpleIntegerRecord"], [178, 3, 1, "", "test_writeAndReadSimpleStringRecord"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests": [[178, 3, 1, "", "test_initWithFileMode"]], "armi.nuclearDataIO.cccc.tests.test_compxs": [[179, 2, 1, "", "TestCompxs"]], "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs": [[179, 5, 1, "", "asciiWritePath"], [179, 5, 1, "", "binaryWritePath"], [179, 3, 1, "", "test_asciiRW"], [179, 3, 1, "", "test_binaryRW"], [179, 3, 1, "", "test_getCOMPXSFileName"], [179, 3, 1, "", "test_libraryData"], [179, 3, 1, "", "test_mergeCompxsLibraries"], [179, 3, 1, "", "test_regionPrimaryXS"], [179, 3, 1, "", "test_totalScatterMatrix"]], "armi.nuclearDataIO.cccc.tests.test_dif3d": [[180, 2, 1, "", "TestDif3dEmptyRecords"], [180, 2, 1, "", "TestDif3dSimpleHexz"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords": [[180, 3, 1, "", "test_empty4and5Records"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz": [[180, 3, 1, "", "test__rw2DRecord"], [180, 3, 1, "", "test__rw3DRecord"], [180, 3, 1, "", "test__rw4DRecord"], [180, 3, 1, "", "test__rw5DRecord"], [180, 3, 1, "", "test__rwFile1DRecord"], [180, 3, 1, "", "test__rwFileID"], [180, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs": [[181, 2, 1, "", "DlayxsTests"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests": [[181, 3, 1, "", "test_ENDFVII1DecayConstants"], [181, 3, 1, "", "test_ENDFVII1NeutronsPerFission"], [181, 3, 1, "", "test_NuDelay"], [181, 3, 1, "", "test_avg"], [181, 3, 1, "", "test_chi_delay"], [181, 3, 1, "", "test_chi_delaySumsTo1"], [181, 3, 1, "", "test_compare"], [181, 3, 1, "", "test_decayConstants"], [181, 3, 1, "", "test_nuclides"], [181, 3, 1, "", "test_writeBinary_mcc3"]], "armi.nuclearDataIO.cccc.tests.test_gamiso": [[182, 2, 1, "", "TestGamiso"]], "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso": [[182, 3, 1, "", "test_addDummyNuclidesToLibrary"], [182, 3, 1, "", "test_compare"], [182, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_geodst": [[183, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst": [[183, 3, 1, "", "test_readGeodst"], [183, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs": [[184, 2, 1, "", "Isotxs_merge_Tests"], [184, 2, 1, "", "TestIsotxs"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests": [[184, 3, 1, "", "test_mergeMccV2FilesRemovesTheFileWideChi"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs": [[184, 3, 1, "", "test_getGAMISOFileName"], [184, 3, 1, "", "test_getISOTXSFileName"], [184, 3, 1, "", "test_getNuclide"], [184, 3, 1, "", "test_getScatterWeights"], [184, 3, 1, "", "test_getScatteringWeights"], [184, 3, 1, "", "test_isotxsDetailedData"], [184, 3, 1, "", "test_isotxsGeneralData"], [184, 3, 1, "", "test_n2nIsReactionBased"], [184, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_labels": [[185, 2, 1, "", "TestLabels"]], "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels": [[185, 3, 1, "", "test_readLabelsBinary"], [185, 3, 1, "", "test_writeLabelsAscii"]], "armi.nuclearDataIO.cccc.tests.test_nhflux": [[186, 2, 1, "", "TestNhflux"], [186, 2, 1, "", "TestNhfluxVariant"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux": [[186, 3, 1, "", "test_fc"], [186, 3, 1, "", "test_fluxMoments"], [186, 3, 1, "", "test_write"], [186, 3, 1, "", "test_xyPartialCurrents"], [186, 3, 1, "", "test_zPartialCurrents"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant": [[186, 3, 1, "", "test_fc"], [186, 3, 1, "", "test_fluxMoments"], [186, 3, 1, "", "test_write"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx": [[187, 2, 1, "", "TestPmatrx"], [187, 2, 1, "", "TestPmatrxNuclides"], [187, 2, 1, "", "TestProductionMatrix_FromWritten"], [187, 2, 1, "", "TestProductionMatrix_FromWrittenAscii"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx": [[187, 3, 1, "", "test_pmatrxDoesntHaveDoseConversionFactors"], [187, 3, 1, "", "test_pmatrxGammaEnergies"], [187, 3, 1, "", "test_pmatrxNeutronEnergies"], [187, 3, 1, "", "test_pmatrxNuclideNames"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides": [[187, 3, 1, "", "test_getPMATRXFileName"], [187, 3, 1, "", "test_nuclideDataIsDifferent"], [187, 3, 1, "", "test_pmatrxNuclideDataAA"], [187, 3, 1, "", "test_pmatrxNuclideDataAB"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten": [[187, 3, 1, "", "test_writtenIsIdenticalToOriginal"]], "armi.nuclearDataIO.cccc.tests.test_pwdint": [[188, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst": [[188, 3, 1, "", "test_readGeodst"], [188, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_rtflux": [[189, 2, 1, "", "Testrtflux"]], "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux": [[189, 3, 1, "", "test_adjoint"], [189, 3, 1, "", "test_readrtflux"], [189, 3, 1, "", "test_rwAscii"], [189, 3, 1, "", "test_writertflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux": [[190, 2, 1, "", "TestRzflux"], [190, 1, 1, "", "binaryFilesEqual"]], "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux": [[190, 3, 1, "", "test_readRzflux"], [190, 3, 1, "", "test_rwAscii"], [190, 3, 1, "", "test_writeRzflux"]], "armi.nuclearDataIO.nuclearFileMetadata": [[191, 2, 1, "", "FileMetadata"], [191, 2, 1, "", "NuclideMetadata"], [191, 2, 1, "", "NuclideXSMetadata"], [191, 2, 1, "", "RegionXSMetadata"]], "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata": [[191, 3, 1, "", "update"]], "armi.nuclearDataIO.tests": [[193, 0, 0, "-", "test_xsCollections"], [194, 0, 0, "-", "test_xsLibraries"], [195, 0, 0, "-", "test_xsNuclides"]], "armi.nuclearDataIO.tests.test_xsCollections": [[193, 2, 1, "", "MockBlock"], [193, 2, 1, "", "MockBlueprints"], [193, 2, 1, "", "MockReactor"], [193, 2, 1, "", "TestXsCollections"]], "armi.nuclearDataIO.tests.test_xsCollections.MockBlock": [[193, 3, 1, "", "getNuclideNumberDensities"], [193, 3, 1, "", "getNuclides"], [193, 3, 1, "", "getVolume"], [193, 4, 1, "", "paramCollectionType"], [193, 5, 1, "", "r"], [193, 3, 1, "", "setNumberDensity"]], "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections": [[193, 3, 1, "", "test_collapseCrossSection"], [193, 3, 1, "", "test_createMacrosFromMicros"], [193, 3, 1, "", "test_generateTotalScatteringMatrix"], [193, 3, 1, "", "test_generateTotalScatteringMatrixWithMissingData"], [193, 3, 1, "", "test_plotNucXs"]], "armi.nuclearDataIO.tests.test_xsLibraries": [[194, 2, 1, "", "Combined_merge_Tests"], [194, 2, 1, "", "Gamiso_merge_Tests"], [194, 2, 1, "", "Isotxs_merge_Tests"], [194, 2, 1, "", "Pmatrx_merge_Tests"], [194, 2, 1, "", "TempFileMixin"], [194, 2, 1, "", "TestGetISOTXSFilesInWorkingDirectory"], [194, 2, 1, "", "TestXSLibrary"]], "armi.nuclearDataIO.tests.test_xsLibraries.Combined_merge_Tests": [[194, 3, 1, "", "test_mergeAllXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests": [[194, 3, 1, "", "getErrorType"], [194, 3, 1, "", "getLibAAPath"], [194, 3, 1, "", "getLibAA_ABPath"], [194, 3, 1, "", "getLibABPath"], [194, 3, 1, "", "getLibLumpedPath"], [194, 3, 1, "", "getReadFunc"], [194, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests": [[194, 3, 1, "", "getErrorType"], [194, 3, 1, "", "getLibAAPath"], [194, 3, 1, "", "getLibAA_ABPath"], [194, 3, 1, "", "getLibABPath"], [194, 3, 1, "", "getLibLumpedPath"], [194, 3, 1, "", "getReadFunc"], [194, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests": [[194, 3, 1, "", "getErrorType"], [194, 3, 1, "", "getLibAAPath"], [194, 3, 1, "", "getLibAA_ABPath"], [194, 3, 1, "", "getLibABPath"], [194, 3, 1, "", "getLibLumpedPath"], [194, 3, 1, "", "getReadFunc"], [194, 3, 1, "", "getWriteFunc"], [194, 3, 1, "", "test_canRemoveIsotopes"], [194, 3, 1, "", "test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin": [[194, 5, 1, "", "testFileName"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory": [[194, 3, 1, "", "assert_contains_only"], [194, 3, 1, "", "test_getISOTXSFilesWithLibrarySuffix"], [194, 3, 1, "", "test_getISOTXSFilesWithoutLibrarySuffix"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary": [[194, 3, 1, "", "test_canPickleAndUnpickleGAMISO"], [194, 3, 1, "", "test_canPickleAndUnpickleISOTXS"], [194, 3, 1, "", "test_canPickleAndUnpicklePMATRX"], [194, 3, 1, "", "test_canWriteGamisoFromCombinedXSLibrary"], [194, 3, 1, "", "test_canWriteIsotxsFromCombinedXSLibrary"], [194, 3, 1, "", "test_canWritePmatrxFromCombinedXSLibrary"], [194, 3, 1, "", "test_compareDifferentComponentsOfAnXSLibrary"], [194, 3, 1, "", "test_compareWorks"], [194, 3, 1, "", "test_gamisoLibraryAttributes"], [194, 3, 1, "", "test_isotxsLibraryAttributes"], [194, 3, 1, "", "test_mergeFailsWithNonIsotxsFiles"], [194, 3, 1, "", "test_mergeXSLibrariesWithDifferentDataWorks"], [194, 3, 1, "", "test_pmatrxLibraryAttributes"]], "armi.nuclearDataIO.tests.test_xsNuclides": [[195, 2, 1, "", "NuclideTests"]], "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests": [[195, 3, 1, "", "test_getMicroXS"], [195, 3, 1, "", "test_getXS"], [195, 3, 1, "", "test_nuclide_2dXsArrangementIsCorrect"], [195, 3, 1, "", "test_nuclide_createFromLabelFailsOnBadName"], [195, 3, 1, "", "test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"], [195, 3, 1, "", "test_nuclide_isoaaDetails"], [195, 3, 1, "", "test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"], [195, 3, 1, "", "test_nuclide_newLabelsDontCauseWarnings"], [195, 3, 1, "", "test_nuclide_nuclideBaseMethodsShouldNotFail"], [195, 3, 1, "", "test_nuclide_oldLabelsCauseWarnings"], [195, 3, 1, "", "test_nuclide_scatterXsArrangementIsCorrect"]], "armi.nuclearDataIO.xsCollections": [[196, 2, 1, "", "MacroscopicCrossSectionCreator"], [196, 2, 1, "", "XSCollection"], [196, 1, 1, "", "computeBlockAverageChi"], [196, 1, 1, "", "computeCaptureEnergyGenerationConstants"], [196, 1, 1, "", "computeFissionEnergyGenerationConstants"], [196, 1, 1, "", "computeGammaEnergyDepositionConstants"], [196, 1, 1, "", "computeMacroscopicGroupConstants"], [196, 1, 1, "", "computeNeutronEnergyDepositionConstants"]], "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator": [[196, 3, 1, "", "createMacrosFromMicros"], [196, 3, 1, "", "createMacrosOnBlocklist"]], "armi.nuclearDataIO.xsCollections.XSCollection": [[196, 3, 1, "", "clear"], [196, 3, 1, "", "collapseCrossSection"], [196, 3, 1, "", "compare"], [196, 3, 1, "", "get"], [196, 3, 1, "", "getAbsorptionXS"], [196, 3, 1, "", "getDefaultXs"], [196, 3, 1, "", "getTotalScatterMatrix"], [196, 3, 1, "", "merge"]], "armi.nuclearDataIO.xsLibraries": [[197, 2, 1, "", "CompxsLibrary"], [197, 2, 1, "", "IsotxsLibrary"], [197, 1, 1, "", "compare"], [197, 1, 1, "", "compareLibraryNeutronEnergies"], [197, 1, 1, "", "compareXSLibraryAttribute"], [197, 1, 1, "", "getISOTXSLibrariesToMerge"], [197, 1, 1, "", "getSuffixFromNuclideLabel"], [197, 1, 1, "", "mergeXSLibrariesInWorkingDirectory"]], "armi.nuclearDataIO.xsLibraries.CompxsLibrary": [[197, 3, 1, "", "merge"], [197, 5, 1, "", "regionLabels"], [197, 5, 1, "", "regions"]], "armi.nuclearDataIO.xsLibraries.IsotxsLibrary": [[197, 5, 1, "", "gammaDoseConversionFactors"], [197, 5, 1, "", "gammaEnergyUpperBounds"], [197, 3, 1, "", "get"], [197, 3, 1, "", "getNuclide"], [197, 3, 1, "", "getNuclides"], [197, 3, 1, "", "getScatterWeights"], [197, 3, 1, "", "merge"], [197, 5, 1, "", "neutronDoseConversionFactors"], [197, 5, 1, "", "nuclideLabels"], [197, 5, 1, "", "nuclides"], [197, 5, 1, "", "numGroups"], [197, 5, 1, "", "numGroupsGamma"], [197, 3, 1, "", "purgeFissionProducts"], [197, 3, 1, "", "resetScatterWeights"], [197, 5, 1, "", "xsIDs"]], "armi.nuclearDataIO.xsNuclides": [[198, 2, 1, "", "XSNuclide"], [198, 1, 1, "", "plotCompareScatterMatrix"], [198, 1, 1, "", "plotScatterMatrix"]], "armi.nuclearDataIO.xsNuclides.XSNuclide": [[198, 3, 1, "", "buildNormalizedScatterColumns"], [198, 5, 1, "", "decays"], [198, 3, 1, "", "getMicroXS"], [198, 3, 1, "", "getXS"], [198, 3, 1, "", "merge"], [198, 5, 1, "", "trans"], [198, 3, 1, "", "updateBaseNuclide"]], "armi.operators": [[199, 1, 1, "", "factory"], [199, 1, 1, "", "getOperatorClassFromSettings"], [200, 0, 0, "-", "operator"], [201, 0, 0, "-", "operatorMPI"], [202, 0, 0, "-", "runTypes"], [203, 0, 0, "-", "settingsValidation"], [204, 0, 0, "-", "snapshots"], [205, 0, 0, "-", "tests"]], "armi.operators.operator": [[200, 2, 1, "", "Operator"]], "armi.operators.operator.Operator": [[200, 3, 1, "", "addInterface"], [200, 5, 1, "", "atEOL"], [200, 5, 1, "", "availabilityFactors"], [200, 5, 1, "", "burnSteps"], [200, 3, 1, "", "couplingIsActive"], [200, 3, 1, "", "createInterfaces"], [200, 5, 1, "", "cycleLengths"], [200, 5, 1, "", "cycleNames"], [200, 3, 1, "", "detach"], [200, 3, 1, "", "getInterface"], [200, 3, 1, "", "getInterfaces"], [200, 3, 1, "", "initializeInterfaces"], [200, 4, 1, "", "inspector"], [200, 3, 1, "", "interactAllBOC"], [200, 3, 1, "", "interactAllBOL"], [200, 3, 1, "", "interactAllCoupled"], [200, 3, 1, "", "interactAllEOC"], [200, 3, 1, "", "interactAllEOL"], [200, 3, 1, "", "interactAllError"], [200, 3, 1, "", "interactAllEveryNode"], [200, 3, 1, "", "interactAllInit"], [200, 3, 1, "", "interfaceIsActive"], [200, 3, 1, "", "loadState"], [200, 5, 1, "", "maxBurnSteps"], [200, 3, 1, "", "operate"], [200, 5, 1, "", "powerFractions"], [200, 3, 1, "", "printInterfaceSummary"], [200, 3, 1, "", "reattach"], [200, 3, 1, "", "removeAllInterfaces"], [200, 3, 1, "", "removeInterface"], [200, 3, 1, "", "setStateToDefault"], [200, 3, 1, "", "snapshotRequest"], [200, 5, 1, "", "stepLengths"]], "armi.operators.operatorMPI": [[201, 2, 1, "", "OperatorMPI"]], "armi.operators.operatorMPI.OperatorMPI": [[201, 3, 1, "", "collapseAllStderrs"], [201, 3, 1, "", "operate"], [201, 3, 1, "", "workerOperate"], [201, 3, 1, "", "workerQuit"]], "armi.operators.runTypes": [[202, 2, 1, "", "RunTypes"]], "armi.operators.runTypes.RunTypes": [[202, 4, 1, "", "EQUILIBRIUM"], [202, 4, 1, "", "SNAPSHOTS"], [202, 4, 1, "", "STANDARD"]], "armi.operators.settingsValidation": [[203, 2, 1, "", "Inspector"], [203, 2, 1, "", "Query"], [203, 1, 1, "", "createQueryRevertBadPathToDefault"], [203, 1, 1, "", "validateVersion"]], "armi.operators.settingsValidation.Inspector": [[203, 3, 1, "", "NO_ACTION"], [203, 3, 1, "", "addQuery"], [203, 3, 1, "", "addQueryBadLocationWillLikelyFail"], [203, 3, 1, "", "addQueryCurrentSettingMayNotSupportFeatures"], [203, 3, 1, "", "run"]], "armi.operators.settingsValidation.Query": [[203, 3, 1, "", "isCorrective"], [203, 3, 1, "", "resolve"]], "armi.operators.snapshots": [[204, 2, 1, "", "OperatorSnapshots"]], "armi.operators.snapshots.OperatorSnapshots": [[204, 5, 1, "", "atEOL"], [204, 3, 1, "", "createInterfaces"], [204, 3, 1, "", "setStateToDefault"]], "armi.operators.tests": [[206, 0, 0, "-", "test_inspectors"], [207, 0, 0, "-", "test_operatorSnapshots"], [208, 0, 0, "-", "test_operators"]], "armi.operators.tests.test_inspectors": [[206, 2, 1, "", "TestInspector"]], "armi.operators.tests.test_inspectors.TestInspector": [[206, 3, 1, "", "test_assignCS"], [206, 3, 1, "", "test_callableCorrectionCheck"], [206, 3, 1, "", "test_changeOfCS"], [206, 3, 1, "", "test_checkForBothSimpleAndDetailedCyclesInputs"], [206, 3, 1, "", "test_correctCyclesToZeroBurnup"], [206, 3, 1, "", "test_createQueryRevertBadPathToDefault"], [206, 3, 1, "", "test_nonCorrectiveQuery"], [206, 3, 1, "", "test_overwriteSettingsCorrectiveQuery"], [206, 3, 1, "", "test_query"]], "armi.operators.tests.test_operatorSnapshots": [[207, 2, 1, "", "TestOperatorSnapshots"], [207, 2, 1, "", "TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots": [[207, 3, 1, "", "test_atEOL"], [207, 3, 1, "", "test_createInterfaces"], [207, 3, 1, "", "test_createInterfacesDisabled"], [207, 3, 1, "", "test_mainOperate"], [207, 3, 1, "", "test_setStateToDefault"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings": [[207, 3, 1, "", "test_getOperatorClassFromSettings"]], "armi.operators.tests.test_operators": [[208, 2, 1, "", "CyclesSettingsTests"], [208, 2, 1, "", "InterfaceA"], [208, 2, 1, "", "InterfaceB"], [208, 2, 1, "", "InterfaceC"], [208, 2, 1, "", "OperatorTests"], [208, 2, 1, "", "TestCreateOperator"], [208, 2, 1, "", "TestInterfaceAndEventHeaders"], [208, 2, 1, "", "TestTightCoupling"]], "armi.operators.tests.test_operators.CyclesSettingsTests": [[208, 4, 1, "", "availabilityFactorsSolution"], [208, 4, 1, "", "burnStepsSolution"], [208, 4, 1, "", "cycleLengthsSolution"], [208, 4, 1, "", "cycleNamesSolution"], [208, 4, 1, "", "detailedCyclesSettings"], [208, 4, 1, "", "maxBurnStepsSolution"], [208, 4, 1, "", "powerFractionsSolution"], [208, 4, 1, "", "stepLengthsSolution"], [208, 3, 1, "", "test_getAvailabilityFactors"], [208, 3, 1, "", "test_getBurnSteps"], [208, 3, 1, "", "test_getCycleLengths"], [208, 3, 1, "", "test_getCycleNames"], [208, 3, 1, "", "test_getMaxBurnSteps"], [208, 3, 1, "", "test_getPowerFractions"], [208, 3, 1, "", "test_getStepLengths"]], "armi.operators.tests.test_operators.InterfaceA": [[208, 4, 1, "", "function"], [208, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceB": [[208, 4, 1, "", "function"], [208, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceC": [[208, 4, 1, "", "function"], [208, 4, 1, "", "name"]], "armi.operators.tests.test_operators.OperatorTests": [[208, 3, 1, "", "test_addInterfaceSubclassCollision"], [208, 3, 1, "", "test_interfaceIsActive"], [208, 3, 1, "", "test_loadStateError"], [208, 3, 1, "", "test_operatorData"], [208, 3, 1, "", "test_orderedInterfaces"], [208, 3, 1, "", "test_setStateToDefault"], [208, 3, 1, "", "test_snapshotRequest"]], "armi.operators.tests.test_operators.TestCreateOperator": [[208, 3, 1, "", "test_createOperator"]], "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders": [[208, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Empty"], [208, 3, 1, "", "test_expandCycleAndTimeNodeArgs_OneArg"], [208, 3, 1, "", "test_expandCycleAndTimeNodeArgs_TwoArg"]], "armi.operators.tests.test_operators.TestTightCoupling": [[208, 3, 1, "", "dbWriteForCoupling"], [208, 3, 1, "", "test_computeTightCouplingConvergence"], [208, 3, 1, "", "test_couplingIsActive"], [208, 3, 1, "", "test_getStepLengths"], [208, 3, 1, "", "test_performTightCoupling_Inactive"], [208, 3, 1, "", "test_performTightCoupling_NoWriteDB"], [208, 3, 1, "", "test_performTightCoupling_WriteDB"], [208, 3, 1, "", "test_performTightCoupling_notConverged"], [208, 3, 1, "", "test_performTightCoupling_skip"]], "armi.physics": [[210, 0, 0, "-", "constants"], [211, 0, 0, "-", "executers"], [212, 0, 0, "-", "fuelCycle"], [223, 0, 0, "-", "fuelPerformance"], [233, 0, 0, "-", "neutronics"], [270, 0, 0, "-", "safety"], [271, 0, 0, "-", "tests"], [273, 0, 0, "-", "thermalHydraulics"]], "armi.physics.constants": [[210, 6, 1, "", "DPA_CROSS_SECTIONS"]], "armi.physics.executers": [[211, 2, 1, "", "DefaultExecuter"], [211, 2, 1, "", "Executer"], [211, 2, 1, "", "ExecutionOptions"]], "armi.physics.executers.DefaultExecuter": [[211, 3, 1, "", "run"], [211, 3, 1, "", "writeInput"]], "armi.physics.executers.Executer": [[211, 3, 1, "", "run"]], "armi.physics.executers.ExecutionOptions": [[211, 3, 1, "", "describe"], [211, 3, 1, "", "fromReactor"], [211, 3, 1, "", "fromUserSettings"], [211, 3, 1, "", "resolveDerivedOptions"], [211, 3, 1, "", "setRunDirFromCaseTitle"]], "armi.physics.fuelCycle": [[212, 2, 1, "", "FuelHandlerPlugin"], [213, 0, 0, "-", "assemblyRotationAlgorithms"], [214, 0, 0, "-", "fuelHandlerFactory"], [215, 0, 0, "-", "fuelHandlerInterface"], [216, 0, 0, "-", "fuelHandlers"], [217, 0, 0, "-", "hexAssemblyFuelMgmtUtils"], [218, 0, 0, "-", "settings"], [219, 0, 0, "-", "tests"]], "armi.physics.fuelCycle.FuelHandlerPlugin": [[212, 3, 1, "", "defineSettings"], [212, 3, 1, "", "defineSettingsValidators"], [212, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms": [[213, 1, 1, "", "buReducingAssemblyRotation"], [213, 1, 1, "", "simpleAssemblyRotation"]], "armi.physics.fuelCycle.fuelHandlerFactory": [[214, 1, 1, "", "fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface": [[215, 2, 1, "", "FuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface": [[215, 3, 1, "", "interactBOC"], [215, 3, 1, "", "interactEOC"], [215, 3, 1, "", "interactEOL"], [215, 3, 1, "", "makeShuffleReport"], [215, 3, 1, "", "manageFuel"], [215, 4, 1, "", "name"], [215, 3, 1, "", "specifyInputs"], [215, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.fuelHandlers": [[216, 2, 1, "", "FuelHandler"]], "armi.physics.fuelCycle.fuelHandlers.FuelHandler": [[216, 3, 1, "", "chooseSwaps"], [216, 5, 1, "", "cs"], [216, 5, 1, "", "cycle"], [216, 3, 1, "", "dischargeSwap"], [216, 3, 1, "", "doRepeatShuffle"], [216, 3, 1, "", "findAssembly"], [216, 3, 1, "", "getFactorList"], [216, 3, 1, "", "makeShuffleArrows"], [216, 3, 1, "", "outage"], [216, 3, 1, "", "prepCore"], [216, 3, 1, "", "prepSearch"], [216, 3, 1, "", "prepShuffleMap"], [216, 3, 1, "", "processMoveList"], [216, 5, 1, "", "r"], [216, 3, 1, "", "readMoves"], [216, 3, 1, "", "repeatShufflePattern"], [216, 3, 1, "", "swapAssemblies"], [216, 3, 1, "", "swapCascade"], [216, 3, 1, "", "trackChain"], [216, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils": [[217, 1, 1, "", "buildConvergentRingSchedule"], [217, 1, 1, "", "buildEqRingSchedule"], [217, 1, 1, "", "buildRingSchedule"], [217, 1, 1, "", "getOptimalAssemblyOrientation"]], "armi.physics.fuelCycle.settings": [[218, 1, 1, "", "getFuelCycleSettingValidators"], [218, 1, 1, "", "getFuelCycleSettings"]], "armi.physics.fuelCycle.tests": [[220, 0, 0, "-", "test_assemblyRotationAlgorithms"], [221, 0, 0, "-", "test_fuelHandlers"], [222, 0, 0, "-", "test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms": [[220, 2, 1, "", "TestFuelHandlerMgmtTools"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools": [[220, 3, 1, "", "test_buReducingAssemblyRotation"], [220, 3, 1, "", "test_simpleAssemblyRotation"]], "armi.physics.fuelCycle.tests.test_fuelHandlers": [[221, 2, 1, "", "FuelHandlerTestHelper"], [221, 2, 1, "", "MockLatticePhysicsInterface"], [221, 2, 1, "", "MockXSGM"], [221, 2, 1, "", "TestFuelHandler"], [221, 2, 1, "", "TestFuelPlugin"], [221, 1, 1, "", "addSomeDetailAssemblies"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface": [[221, 3, 1, "", "interactBOC"], [221, 4, 1, "", "name"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM": [[221, 3, 1, "", "interactBOC"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler": [[221, 3, 1, "", "runShuffling"], [221, 3, 1, "", "test_dischargeSwap"], [221, 3, 1, "", "test_dischargeSwapIncompatibleStationaryBlocks"], [221, 3, 1, "", "test_findByCoords"], [221, 3, 1, "", "test_findHighBu"], [221, 3, 1, "", "test_findInSFP"], [221, 3, 1, "", "test_findMany"], [221, 3, 1, "", "test_findWithMinMax"], [221, 3, 1, "", "test_getFactorList"], [221, 3, 1, "", "test_interactBOC"], [221, 3, 1, "", "test_linPowByPin"], [221, 3, 1, "", "test_linPowByPinGamma"], [221, 3, 1, "", "test_linPowByPinNeutron"], [221, 3, 1, "", "test_processMoveList"], [221, 3, 1, "", "test_readMoves"], [221, 3, 1, "", "test_repeatShuffles"], [221, 3, 1, "", "test_transferDifferentNumberStationaryBlocks"], [221, 3, 1, "", "test_transferIncompatibleHeightStationaryBlocks"], [221, 3, 1, "", "test_transferStationaryBlocks"], [221, 3, 1, "", "test_transferUnalignedLocationStationaryBlocks"], [221, 3, 1, "", "test_width"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin": [[221, 3, 1, "", "test_settingsAreDiscovered"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils": [[222, 2, 1, "", "TestHexAssemMgmtTools"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools": [[222, 3, 1, "", "test_buildConvergentRingSchedule"], [222, 3, 1, "", "test_buildEqRingSchedule"], [222, 3, 1, "", "test_buildEqRingScheduleHelper"], [222, 3, 1, "", "test_buildRingSchedule"]], "armi.physics.fuelPerformance": [[224, 0, 0, "-", "executers"], [225, 0, 0, "-", "parameters"], [226, 0, 0, "-", "plugin"], [227, 0, 0, "-", "settings"], [228, 0, 0, "-", "tests"], [232, 0, 0, "-", "utils"]], "armi.physics.fuelPerformance.executers": [[224, 2, 1, "", "FuelPerformanceExecuter"], [224, 2, 1, "", "FuelPerformanceOptions"]], "armi.physics.fuelPerformance.executers.FuelPerformanceOptions": [[224, 3, 1, "", "fromReactor"], [224, 3, 1, "", "fromUserSettings"]], "armi.physics.fuelPerformance.parameters": [[225, 1, 1, "", "getFuelPerformanceParameterDefinitions"]], "armi.physics.fuelPerformance.plugin": [[226, 2, 1, "", "FuelPerformancePlugin"]], "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin": [[226, 3, 1, "", "defineParameters"], [226, 3, 1, "", "defineSettings"], [226, 3, 1, "", "defineSettingsValidators"], [226, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelPerformance.settings": [[227, 1, 1, "", "defineSettings"], [227, 1, 1, "", "defineValidators"]], "armi.physics.fuelPerformance.tests": [[229, 0, 0, "-", "test_executers"], [230, 0, 0, "-", "test_fuelPerformancePlugin"], [231, 0, 0, "-", "test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_executers": [[229, 2, 1, "", "TestFuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions": [[229, 3, 1, "", "test_fuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin": [[230, 2, 1, "", "TestFuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin": [[230, 4, 1, "", "plugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils": [[231, 2, 1, "", "TestFuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils": [[231, 3, 1, "", "test_applyFuelDisplacement"], [231, 3, 1, "", "test_gasConductivityCorrection_morph0"], [231, 3, 1, "", "test_gasConductivityCorrection_morph1"], [231, 3, 1, "", "test_gasConductivityCorrection_morph2"], [231, 3, 1, "", "test_gasConductivityCorrection_morph3"], [231, 3, 1, "", "test_gasConductivityCorrection_morph4"]], "armi.physics.fuelPerformance.utils": [[232, 1, 1, "", "applyFuelDisplacement"], [232, 1, 1, "", "gasConductivityCorrection"]], "armi.physics.neutronics": [[233, 2, 1, "", "LatticePhysicsFrequency"], [233, 2, 1, "", "NeutronicsPlugin"], [233, 1, 1, "", "adjointCalculationRequested"], [233, 1, 1, "", "applyEffectiveDelayedNeutronFractionToCore"], [234, 0, 0, "-", "const"], [235, 0, 0, "-", "crossSectionGroupManager"], [236, 0, 0, "-", "crossSectionSettings"], [237, 0, 0, "-", "diffIsotxs"], [238, 0, 0, "-", "energyGroups"], [239, 0, 0, "-", "fissionProductModel"], [233, 1, 1, "", "gammaTransportIsRequested"], [233, 1, 1, "", "gammaXsAreRequested"], [246, 0, 0, "-", "globalFlux"], [250, 0, 0, "-", "isotopicDepletion"], [253, 0, 0, "-", "latticePhysics"], [259, 0, 0, "-", "macroXSGenerationInterface"], [260, 0, 0, "-", "parameters"], [233, 1, 1, "", "realCalculationRequested"], [261, 0, 0, "-", "reports"], [262, 0, 0, "-", "settings"], [263, 0, 0, "-", "tests"]], "armi.physics.neutronics.LatticePhysicsFrequency": [[233, 4, 1, "", "BOC"], [233, 4, 1, "", "BOL"], [233, 4, 1, "", "all"], [233, 4, 1, "", "everyNode"], [233, 4, 1, "", "firstCoupledIteration"], [233, 4, 1, "", "never"]], "armi.physics.neutronics.NeutronicsPlugin": [[233, 3, 1, "", "defineEntryPoints"], [233, 3, 1, "", "defineParameters"], [233, 3, 1, "", "defineSettings"], [233, 3, 1, "", "defineSettingsValidators"], [233, 3, 1, "", "exposeInterfaces"], [233, 3, 1, "", "getReportContents"], [233, 3, 1, "", "onProcessCoreLoading"]], "armi.physics.neutronics.crossSectionGroupManager": [[235, 2, 1, "", "AverageBlockCollection"], [235, 2, 1, "", "BlockCollection"], [235, 2, 1, "", "CrossSectionGroupManager"], [235, 2, 1, "", "CylindricalComponentsAverageBlockCollection"], [235, 2, 1, "", "FluxWeightedAverageBlockCollection"], [235, 2, 1, "", "MedianBlockCollection"], [235, 2, 1, "", "SlabComponentsAverageBlockCollection"], [235, 1, 1, "", "blockCollectionFactory"], [235, 1, 1, "", "describeInterfaces"], [235, 1, 1, "", "getBlockNuclideTemperatureAvgTerms"], [235, 1, 1, "", "getXSTypeLabelFromNumber"], [235, 1, 1, "", "getXSTypeNumberFromLabel"]], "armi.physics.neutronics.crossSectionGroupManager.BlockCollection": [[235, 3, 1, "", "calcAvgNuclideTemperatures"], [235, 3, 1, "", "createRepresentativeBlock"], [235, 3, 1, "", "getCandidateBlocks"], [235, 3, 1, "", "getWeight"]], "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager": [[235, 3, 1, "", "clearRepresentativeBlocks"], [235, 3, 1, "", "createRepresentativeBlocks"], [235, 3, 1, "", "createRepresentativeBlocksUsingExistingBlocks"], [235, 3, 1, "", "disableBuGroupUpdates"], [235, 3, 1, "", "enableBuGroupUpdates"], [235, 3, 1, "", "fluxSolutionIsPregenerated"], [235, 3, 1, "", "getNextAvailableXsTypes"], [235, 3, 1, "", "getNucTemperature"], [235, 3, 1, "", "interactBOC"], [235, 3, 1, "", "interactBOL"], [235, 3, 1, "", "interactCoupled"], [235, 3, 1, "", "interactEOC"], [235, 3, 1, "", "interactEveryNode"], [235, 3, 1, "", "makeCrossSectionGroups"], [235, 4, 1, "", "name"], [235, 3, 1, "", "updateNuclideTemperatures"], [235, 3, 1, "", "xsTypeIsPregenerated"]], "armi.physics.neutronics.crossSectionSettings": [[236, 2, 1, "", "XSGeometryTypes"], [236, 2, 1, "", "XSModelingOptions"], [236, 2, 1, "", "XSSettingDef"], [236, 2, 1, "", "XSSettings"], [236, 1, 1, "", "serializeXSSettings"], [236, 1, 1, "", "xsSettingsValidator"]], "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes": [[236, 4, 1, "", "ONE_DIMENSIONAL_CYLINDER"], [236, 4, 1, "", "ONE_DIMENSIONAL_SLAB"], [236, 4, 1, "", "TWO_DIMENSIONAL_HEX"], [236, 4, 1, "", "ZERO_DIMENSIONAL"], [236, 3, 1, "", "getStr"]], "armi.physics.neutronics.crossSectionSettings.XSModelingOptions": [[236, 5, 1, "", "buGroup"], [236, 5, 1, "", "fluxIsPregenerated"], [236, 3, 1, "", "serialize"], [236, 3, 1, "", "setDefaults"], [236, 3, 1, "", "validate"], [236, 5, 1, "", "xsIsPregenerated"], [236, 5, 1, "", "xsType"]], "armi.physics.neutronics.crossSectionSettings.XSSettingDef": [[236, 3, 1, "", "dump"]], "armi.physics.neutronics.crossSectionSettings.XSSettings": [[236, 3, 1, "", "setDefaults"]], "armi.physics.neutronics.diffIsotxs": [[237, 2, 1, "", "CompareIsotxsLibraries"]], "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries": [[237, 3, 1, "", "addOptions"], [237, 3, 1, "", "invoke"], [237, 4, 1, "", "name"], [237, 4, 1, "", "settingsArgument"]], "armi.physics.neutronics.energyGroups": [[238, 6, 1, "", "GROUP_STRUCTURE"], [238, 1, 1, "", "getFastFluxGroupCutoff"], [238, 1, 1, "", "getGroupStructure"], [238, 1, 1, "", "getGroupStructureType"]], "armi.physics.neutronics.fissionProductModel": [[240, 0, 0, "-", "fissionProductModel"], [241, 0, 0, "-", "fissionProductModelSettings"], [242, 0, 0, "-", "lumpedFissionProduct"], [243, 0, 0, "-", "tests"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel": [[240, 2, 1, "", "FissionProductModel"], [240, 1, 1, "", "describeInterfaces"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel": [[240, 3, 1, "", "getAllFissionProductNames"], [240, 3, 1, "", "getGlobalLumpedFissionProducts"], [240, 3, 1, "", "interactBOC"], [240, 3, 1, "", "interactBOL"], [240, 3, 1, "", "interactDistributeState"], [240, 4, 1, "", "name"], [240, 3, 1, "", "removeFissionGasesFromBlocks"], [240, 3, 1, "", "setAllBlockLFPs"], [240, 3, 1, "", "setAllComponentFissionProducts"], [240, 3, 1, "", "setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings": [[241, 1, 1, "", "defineSettings"], [241, 1, 1, "", "getFissionProductModelSettingValidators"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct": [[242, 2, 1, "", "FissionProductDefinitionFile"], [242, 2, 1, "", "LumpedFissionProduct"], [242, 2, 1, "", "LumpedFissionProductCollection"], [242, 1, 1, "", "isGas"], [242, 1, 1, "", "lumpedFissionProductFactory"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile": [[242, 3, 1, "", "createLFPsFromFile"], [242, 3, 1, "", "createSingleLFPFromFile"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct": [[242, 3, 1, "", "duplicate"], [242, 3, 1, "", "getGaseousYieldFraction"], [242, 3, 1, "", "getMassFrac"], [242, 3, 1, "", "getMassFracDenom"], [242, 3, 1, "", "getMassFracs"], [242, 3, 1, "", "getTotalYield"], [242, 3, 1, "", "items"], [242, 3, 1, "", "keys"], [242, 3, 1, "", "printDensities"], [242, 3, 1, "", "values"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection": [[242, 3, 1, "", "duplicate"], [242, 3, 1, "", "getAllFissionProductNames"], [242, 3, 1, "", "getAllFissionProductNuclideBases"], [242, 3, 1, "", "getLumpedFissionProductNames"], [242, 3, 1, "", "getMassFrac"], [242, 3, 1, "", "getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests": [[244, 0, 0, "-", "test_fissionProductModel"], [245, 0, 0, "-", "test_lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel": [[244, 2, 1, "", "TestFissionProductModelExplicitMC2Library"], [244, 2, 1, "", "TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library": [[244, 3, 1, "", "test_nuclideFlags"], [244, 3, 1, "", "test_nuclidesInModelAllDepletableBlocks"], [244, 3, 1, "", "test_nuclidesInModelFuel"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts": [[244, 3, 1, "", "test_fpApplication"], [244, 3, 1, "", "test_getAllFissionProductNames"], [244, 3, 1, "", "test_loadGlobalLFPsFromFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct": [[245, 2, 1, "", "TestFissionProductDefinitionFile"], [245, 2, 1, "", "TestLumpedFissionProduct"], [245, 2, 1, "", "TestLumpedFissionProductCollection"], [245, 2, 1, "", "TestLumpedFissionProductsExplicit"], [245, 2, 1, "", "TestLumpedFissionProductsFromReferenceFile"], [245, 2, 1, "", "TestMo99LFP"], [245, 1, 1, "", "getDummyLFPFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile": [[245, 3, 1, "", "test_createLFPs"], [245, 3, 1, "", "test_createReferenceLFPs"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct": [[245, 3, 1, "", "test_gaseousYieldFraction"], [245, 3, 1, "", "test_getYield"], [245, 3, 1, "", "test_isGas"], [245, 3, 1, "", "test_printDensities"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection": [[245, 3, 1, "", "test_duplicate"], [245, 3, 1, "", "test_getAllFissionProductNames"], [245, 3, 1, "", "test_getAllFissionProductNuclideBases"], [245, 3, 1, "", "test_getMassFrac"], [245, 3, 1, "", "test_getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit": [[245, 3, 1, "", "test_explicitFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile": [[245, 3, 1, "", "test_fissionProductYields"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP": [[245, 3, 1, "", "test_getAllFissionProductNames"]], "armi.physics.neutronics.globalFlux": [[247, 0, 0, "-", "globalFluxInterface"], [248, 0, 0, "-", "tests"]], "armi.physics.neutronics.globalFlux.globalFluxInterface": [[247, 2, 1, "", "DoseResultsMapper"], [247, 2, 1, "", "GlobalFluxExecuter"], [247, 2, 1, "", "GlobalFluxInterface"], [247, 2, 1, "", "GlobalFluxInterfaceUsingExecuters"], [247, 2, 1, "", "GlobalFluxOptions"], [247, 2, 1, "", "GlobalFluxResultMapper"], [247, 1, 1, "", "calcReactionRates"], [247, 1, 1, "", "computeDpaRate"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper": [[247, 3, 1, "", "apply"], [247, 3, 1, "", "updateCycleDoseParams"], [247, 3, 1, "", "updateFluenceAndDpa"], [247, 3, 1, "", "updateLoadpadDose"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter": [[247, 3, 1, "", "edgeAssembliesAreNeeded"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface": [[247, 3, 1, "", "calculateKeff"], [247, 3, 1, "", "checkEnergyBalance"], [247, 4, 1, "", "function"], [247, 3, 1, "", "getHistoryParams"], [247, 3, 1, "", "getIOFileNames"], [247, 3, 1, "", "interactBOC"], [247, 3, 1, "", "interactCoupled"], [247, 3, 1, "", "interactEOC"], [247, 3, 1, "", "interactEveryNode"], [247, 4, 1, "", "name"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters": [[247, 3, 1, "", "calculateKeff"], [247, 3, 1, "", "getExecuter"], [247, 3, 1, "", "getExecuterCls"], [247, 3, 1, "", "getExecuterOptions"], [247, 3, 1, "", "getLabel"], [247, 3, 1, "", "getOptionsCls"], [247, 3, 1, "", "getTightCouplingValue"], [247, 3, 1, "", "interactCoupled"], [247, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions": [[247, 3, 1, "", "fromReactor"], [247, 3, 1, "", "fromUserSettings"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper": [[247, 3, 1, "", "clearFlux"], [247, 3, 1, "", "getBurnupPeakingFactor"], [247, 3, 1, "", "getDpaXs"], [247, 3, 1, "", "getKeff"], [247, 3, 1, "", "updateDpaRate"], [247, 3, 1, "", "updateMaxDpaParams"]], "armi.physics.neutronics.globalFlux.tests": [[249, 0, 0, "-", "test_globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface": [[249, 2, 1, "", "MockCore"], [249, 2, 1, "", "MockCoreParams"], [249, 2, 1, "", "MockGlobalFluxExecuter"], [249, 2, 1, "", "MockGlobalFluxInterface"], [249, 2, 1, "", "MockGlobalFluxWithExecuters"], [249, 2, 1, "", "MockGlobalFluxWithExecutersNonUniform"], [249, 2, 1, "", "MockReactor"], [249, 2, 1, "", "MockReactorParams"], [249, 2, 1, "", "TestGlobalFluxInterface"], [249, 2, 1, "", "TestGlobalFluxInterfaceWithExecuters"], [249, 2, 1, "", "TestGlobalFluxInterfaceWithExecutersNonUniform"], [249, 2, 1, "", "TestGlobalFluxOptions"], [249, 2, 1, "", "TestGlobalFluxResultMapper"], [249, 2, 1, "", "TestGlobalFluxUtils"], [249, 1, 1, "", "applyDummyFlux"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface": [[249, 3, 1, "", "interactBOC"], [249, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters": [[249, 3, 1, "", "getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform": [[249, 3, 1, "", "getExecuterOptions"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface": [[249, 3, 1, "", "test_checkEnergyBalance"], [249, 3, 1, "", "test_computeDpaRate"], [249, 3, 1, "", "test_getHistoryParams"], [249, 3, 1, "", "test_getIOFileNames"], [249, 3, 1, "", "test_interaction"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters": [[249, 3, 1, "", "test_calculateKeff"], [249, 3, 1, "", "test_executerInteraction"], [249, 3, 1, "", "test_getExecuterCls"], [249, 3, 1, "", "test_getTightCouplingValue"], [249, 3, 1, "", "test_setTightCouplingDefaults"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform": [[249, 3, 1, "", "test_calculateKeff"], [249, 3, 1, "", "test_executerInteractionNonUniformAssems"], [249, 3, 1, "", "test_getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions": [[249, 3, 1, "", "test_readFromReactors"], [249, 3, 1, "", "test_readFromSettings"], [249, 3, 1, "", "test_savePhysicsFiles"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper": [[249, 3, 1, "", "test_getBurnupPeakingFactor"], [249, 3, 1, "", "test_getBurnupPeakingFactorZero"], [249, 3, 1, "", "test_getDpaXs"], [249, 3, 1, "", "test_mapper"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils": [[249, 3, 1, "", "test_calcReactionRates"]], "armi.physics.neutronics.isotopicDepletion": [[251, 0, 0, "-", "crossSectionTable"], [252, 0, 0, "-", "isotopicDepletionInterface"]], "armi.physics.neutronics.isotopicDepletion.crossSectionTable": [[251, 2, 1, "", "CrossSectionTable"], [251, 1, 1, "", "makeReactionRateTable"]], "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable": [[251, 3, 1, "", "add"], [251, 3, 1, "", "addMultiGroupXS"], [251, 3, 1, "", "getName"], [251, 3, 1, "", "getXsecTable"], [251, 3, 1, "", "hasValues"], [251, 4, 1, "", "rateTypes"], [251, 3, 1, "", "setName"]], "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface": [[252, 2, 1, "", "AbstractIsotopicDepleter"], [252, 2, 1, "", "AbstractIsotopicDepletionReader"], [252, 2, 1, "", "Csrc"], [252, 1, 1, "", "isDepletable"], [252, 1, 1, "", "makeXsecTable"]], "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter": [[252, 3, 1, "", "addToDeplete"], [252, 4, 1, "", "function"], [252, 3, 1, "", "getToDeplete"], [252, 4, 1, "", "name"], [252, 3, 1, "", "run"], [252, 3, 1, "", "setToDeplete"]], "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepletionReader": [[252, 3, 1, "", "read"]], "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.Csrc": [[252, 3, 1, "", "getChemicalVector"], [252, 3, 1, "", "setChemicalVector"], [252, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics": [[254, 0, 0, "-", "latticePhysicsInterface"], [255, 0, 0, "-", "latticePhysicsWriter"], [256, 0, 0, "-", "tests"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface": [[254, 2, 1, "", "LatticePhysicsInterface"], [254, 1, 1, "", "setBlockNeutronVelocities"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface": [[254, 3, 1, "", "clearXS"], [254, 3, 1, "", "computeCrossSections"], [254, 4, 1, "", "function"], [254, 3, 1, "", "generateLatticePhysicsInputs"], [254, 3, 1, "", "getReader"], [254, 3, 1, "", "getRepresentativeBlocks"], [254, 3, 1, "", "getWriters"], [254, 3, 1, "", "interactBOC"], [254, 3, 1, "", "interactBOL"], [254, 3, 1, "", "interactCoupled"], [254, 3, 1, "", "interactEOC"], [254, 3, 1, "", "interactEveryNode"], [254, 3, 1, "", "makeCycleXSFilesAsBaseFiles"], [254, 3, 1, "", "readExistingXSLibraries"], [254, 3, 1, "", "updatePhysicsCouplingControl"], [254, 3, 1, "", "updateXSLibrary"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter": [[255, 2, 1, "", "LatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter": [[255, 4, 1, "", "COOLANT_CATEGORY"], [255, 4, 1, "", "DEPLETABLE"], [255, 4, 1, "", "FISSION_PRODUCT_CATEGORY"], [255, 4, 1, "", "FUEL_CATEGORY"], [255, 4, 1, "", "REPRESENTED"], [255, 4, 1, "", "STRUCTURE_CATEGORY"], [255, 4, 1, "", "UNDEPLETABLE"], [255, 4, 1, "", "UNREPRESENTED"], [255, 4, 1, "", "UNUSED_CATEGORY"], [255, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests": [[257, 0, 0, "-", "test_latticeInterface"], [258, 0, 0, "-", "test_latticeWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface": [[257, 2, 1, "", "LatticeInterfaceTester"], [257, 2, 1, "", "LatticeInterfaceTesterLibFalse"], [257, 2, 1, "", "TestLatticePhysicsInterface"], [257, 2, 1, "", "TestLatticePhysicsInterfaceBase"], [257, 2, 1, "", "TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester": [[257, 3, 1, "", "readExistingXSLibraries"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface": [[257, 3, 1, "", "test_includeGammaXS"], [257, 3, 1, "", "test_interactAll"], [257, 3, 1, "", "test_interactBOC"], [257, 3, 1, "", "test_interactBOL"], [257, 3, 1, "", "test_interactEveryNode"], [257, 3, 1, "", "test_interactEveryNodeAll"], [257, 3, 1, "", "test_interactEveryNodeFirstCoupled"], [257, 3, 1, "", "test_interactFirstCoupledIteration"], [257, 3, 1, "", "test_latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation": [[257, 3, 1, "", "test_libCreation_GenXS"], [257, 3, 1, "", "test_libCreation_GenXS_2"], [257, 3, 1, "", "test_libCreation_GenXS_3"], [257, 3, 1, "", "test_libCreation_NoGenXS"], [257, 3, 1, "", "test_libCreation_NoGenXS_2"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter": [[258, 2, 1, "", "FakeLatticePhysicsWriter"], [258, 2, 1, "", "TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter": [[258, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter": [[258, 3, 1, "", "test_getAllNuclidesByTemperatureInC"], [258, 3, 1, "", "test_getAllNuclidesByTemperatureInCExplicitFissionProducts"], [258, 3, 1, "", "test_getAllNuclidesByTemperatureInCNone"], [258, 3, 1, "", "test_getAvgNuclideTemperatureInC"], [258, 3, 1, "", "test_getDetailedFPDensities"], [258, 3, 1, "", "test_getDetailedFissionProducts"], [258, 3, 1, "", "test_getDetailedFissionProductsPass"], [258, 3, 1, "", "test_getDriverBlock"], [258, 3, 1, "", "test_getFuelTemperature"], [258, 3, 1, "", "test_isCriticalBucklingSearchActive"], [258, 3, 1, "", "test_isGammaXSGenerationEnabled"], [258, 3, 1, "", "test_isSourceDriven"], [258, 3, 1, "", "test_latticePhysicsWriter"], [258, 3, 1, "", "test_writeTitle"]], "armi.physics.neutronics.macroXSGenerationInterface": [[259, 2, 1, "", "MacroXSGenerationInterface"], [259, 2, 1, "", "MacroXSGenerator"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface": [[259, 3, 1, "", "buildMacros"], [259, 4, 1, "", "name"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator": [[259, 3, 1, "", "invokeHook"]], "armi.physics.neutronics.parameters": [[260, 1, 1, "", "getNeutronicsParameterDefinitions"]], "armi.physics.neutronics.reports": [[261, 6, 1, "", "PD_PLOT"], [261, 1, 1, "", "generateLinePlot"], [261, 1, 1, "", "insertInitialCoreFuelAssem"], [261, 1, 1, "", "insertNeutronicsBOLContent"], [261, 1, 1, "", "insertNeutronicsReport"], [261, 1, 1, "", "neutronicsPlotting"]], "armi.physics.neutronics.settings": [[262, 1, 1, "", "defineSettings"], [262, 1, 1, "", "getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[264, 0, 0, "-", "test_crossSectionManager"], [265, 0, 0, "-", "test_crossSectionSettings"], [266, 0, 0, "-", "test_crossSectionTable"], [267, 0, 0, "-", "test_energyGroups"], [268, 0, 0, "-", "test_macroXSGenerationInterface"], [269, 0, 0, "-", "test_neutronicsPlugin"]], "armi.physics.neutronics.tests.test_crossSectionManager": [[264, 2, 1, "", "TestBlockCollection"], [264, 2, 1, "", "TestBlockCollectionAverage"], [264, 2, 1, "", "TestBlockCollectionComponentAverage"], [264, 2, 1, "", "TestBlockCollectionComponentAverage1DCylinder"], [264, 2, 1, "", "TestBlockCollectionFluxWeightedAverage"], [264, 2, 1, "", "TestBlockCollectionMedian"], [264, 2, 1, "", "TestComponentAveraging"], [264, 2, 1, "", "TestCrossSectionGroupManager"], [264, 2, 1, "", "TestXSNumberConverters"], [264, 1, 1, "", "makeBlocks"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection": [[264, 3, 1, "", "test_add"], [264, 3, 1, "", "test_getBlocksInGroup"], [264, 3, 1, "", "test_is_pickleable"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage": [[264, 3, 1, "", "test_checkBlockSimilarity"], [264, 3, 1, "", "test_createRepresentativeBlock"], [264, 3, 1, "", "test_createRepresentativeBlockDissimilar"], [264, 3, 1, "", "test_performAverageByComponent"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage": [[264, 3, 1, "", "test_ComponentAverageRepBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder": [[264, 3, 1, "", "test_ComponentAverage1DCylinder"], [264, 3, 1, "", "test_checkComponentConsistency"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage": [[264, 3, 1, "", "test_createRepresentativeBlock"], [264, 3, 1, "", "test_invalidWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian": [[264, 3, 1, "", "test_createRepresentativeBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging": [[264, 3, 1, "", "test_getAverageComponentNumberDensities"], [264, 3, 1, "", "test_getAverageComponentTemperature"], [264, 3, 1, "", "test_getAverageComponentTemperatureNoMass"], [264, 3, 1, "", "test_getAverageComponentTemperatureVariedWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager": [[264, 3, 1, "", "test_addXsGroupsFromBlocks"], [264, 3, 1, "", "test_calcWeightedBurnup"], [264, 3, 1, "", "test_copyPregeneratedFiles"], [264, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocks"], [264, 3, 1, "", "test_getNextAvailableXsType"], [264, 3, 1, "", "test_getRepresentativeBlocks"], [264, 3, 1, "", "test_interactAllCoupled"], [264, 3, 1, "", "test_interactBOC"], [264, 3, 1, "", "test_interactBOL"], [264, 3, 1, "", "test_interactEveryNode"], [264, 3, 1, "", "test_interactFirstCoupledIteration"], [264, 3, 1, "", "test_setBuGroupBounds"], [264, 3, 1, "", "test_updateBurnupGroups"], [264, 3, 1, "", "test_xsgmIsRunBeforeXS"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters": [[264, 3, 1, "", "test_conversion"], [264, 3, 1, "", "test_conversion_2digit"]], "armi.physics.neutronics.tests.test_crossSectionSettings": [[265, 2, 1, "", "TestCrossSectionSettings"], [265, 2, 1, "", "TestXSSettings"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings": [[265, 3, 1, "", "test_badCrossSections"], [265, 3, 1, "", "test_crossSections"], [265, 3, 1, "", "test_homogeneousXsDefaultSettingAssignment"], [265, 3, 1, "", "test_optionalKey"], [265, 3, 1, "", "test_pregeneratedCrossSections"], [265, 3, 1, "", "test_pregeneratedFluxInputs"], [265, 3, 1, "", "test_prioritization"], [265, 3, 1, "", "test_setDefaultSettingsByLowestBuGroupHomogeneous"], [265, 3, 1, "", "test_setDefaultSettingsByLowestBuGroupOneDimensional"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings": [[265, 3, 1, "", "test_caseSettings"], [265, 3, 1, "", "test_csBlockRepresentation"], [265, 3, 1, "", "test_csBlockRepresentationFileLocation"], [265, 3, 1, "", "test_xsSettingsSetDefault"], [265, 3, 1, "", "test_yamlIO"]], "armi.physics.neutronics.tests.test_crossSectionTable": [[266, 2, 1, "", "TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable": [[266, 3, 1, "", "test_isotopicDepletionInterface"], [266, 3, 1, "", "test_makeTable"]], "armi.physics.neutronics.tests.test_energyGroups": [[267, 2, 1, "", "TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups": [[267, 3, 1, "", "test_consistenciesBetweenGroupStructureAndGroupStructureType"], [267, 3, 1, "", "test_getFastFluxGroupCutoff"], [267, 3, 1, "", "test_invalidGroupStructureType"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface": [[268, 2, 1, "", "TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface": [[268, 3, 1, "", "test_macroXSGenerationInterfaceBasics"]], "armi.physics.neutronics.tests.test_neutronicsPlugin": [[269, 2, 1, "", "NeutronicsReactorTests"], [269, 2, 1, "", "TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests": [[269, 3, 1, "", "test_kineticsParameterAssignment"], [269, 3, 1, "", "test_neutronicsSettingsValidators"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin": [[269, 4, 1, "", "plugin"], [269, 3, 1, "", "test_customSettingObjectIO"], [269, 3, 1, "", "test_customSettingRoundTrip"], [269, 3, 1, "", "test_neutronicsSettingsLoaded"]], "armi.physics.safety": [[270, 2, 1, "", "SafetyPlugin"]], "armi.physics.safety.SafetyPlugin": [[270, 3, 1, "", "defineSettings"]], "armi.physics.tests": [[272, 0, 0, "-", "test_executers"]], "armi.physics.tests.test_executers": [[272, 2, 1, "", "MockCore"], [272, 2, 1, "", "MockParams"], [272, 2, 1, "", "MockReactor"], [272, 2, 1, "", "TestExecuters"], [272, 2, 1, "", "TestExecutionOptions"]], "armi.physics.tests.test_executers.TestExecuters": [[272, 3, 1, "", "test_collectInputsAndOutputs"], [272, 3, 1, "", "test_runExternalExecutable"], [272, 3, 1, "", "test_updateRunDir"]], "armi.physics.tests.test_executers.TestExecutionOptions": [[272, 3, 1, "", "test_runningDirectoryPath"]], "armi.physics.thermalHydraulics": [[274, 0, 0, "-", "const"], [275, 0, 0, "-", "parameters"], [276, 0, 0, "-", "plugin"], [277, 0, 0, "-", "settings"]], "armi.physics.thermalHydraulics.parameters": [[275, 1, 1, "", "getParameterDefinitions"]], "armi.physics.thermalHydraulics.plugin": [[276, 2, 1, "", "ThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin": [[276, 3, 1, "", "afterConstructionOfAssemblies"], [276, 3, 1, "", "defineParameters"], [276, 3, 1, "", "defineSettings"], [276, 3, 1, "", "defineSettingsValidators"], [276, 3, 1, "", "exposeInterfaces"]], "armi.physics.thermalHydraulics.settings": [[277, 1, 1, "", "defineSettings"], [277, 1, 1, "", "defineValidators"]], "armi.pluginManager": [[278, 2, 1, "", "ArmiPluginManager"]], "armi.pluginManager.ArmiPluginManager": [[278, 5, 1, "", "counter"], [278, 3, 1, "", "register"], [278, 3, 1, "", "unregister"]], "armi.plugins": [[279, 2, 1, "", "ArmiPlugin"], [279, 7, 1, "", "PluginError"], [279, 2, 1, "", "UserPlugin"], [279, 1, 1, "", "collectInterfaceDescriptions"], [279, 1, 1, "", "getNewPluginManager"]], "armi.plugins.ArmiPlugin": [[279, 3, 1, "", "afterConstructionOfAssemblies"], [279, 3, 1, "", "defineAssemblyTypes"], [279, 3, 1, "", "defineBlockTypes"], [279, 3, 1, "", "defineBlueprintsSections"], [279, 3, 1, "", "defineCaseDependencies"], [279, 3, 1, "", "defineEntryPoints"], [279, 3, 1, "", "defineFlags"], [279, 3, 1, "", "defineGuiWidgets"], [279, 3, 1, "", "defineParameterRenames"], [279, 3, 1, "", "defineParameters"], [279, 3, 1, "", "defineSettings"], [279, 3, 1, "", "defineSettingsValidators"], [279, 3, 1, "", "defineSystemBuilders"], [279, 3, 1, "", "exposeInterfaces"], [279, 3, 1, "", "getOperatorClassFromRunType"], [279, 3, 1, "", "getReportContents"], [279, 3, 1, "", "mpiActionRequiresReset"], [279, 3, 1, "", "onProcessCoreLoading"]], "armi.plugins.UserPlugin": [[279, 3, 1, "", "defineParameterRenames"], [279, 3, 1, "", "defineParameters"], [279, 3, 1, "", "defineSettings"], [279, 3, 1, "", "defineSettingsValidators"]], "armi.reactor": [[280, 2, 1, "", "ReactorPlugin"], [281, 0, 0, "-", "assemblies"], [282, 0, 0, "-", "assemblyLists"], [283, 0, 0, "-", "assemblyParameters"], [284, 0, 0, "-", "blockParameters"], [285, 0, 0, "-", "blocks"], [286, 0, 0, "-", "blueprints"], [302, 0, 0, "-", "components"], [308, 0, 0, "-", "composites"], [309, 0, 0, "-", "converters"], [325, 0, 0, "-", "flags"], [326, 0, 0, "-", "geometry"], [327, 0, 0, "-", "grids"], [336, 0, 0, "-", "parameters"], [341, 0, 0, "-", "reactorParameters"], [342, 0, 0, "-", "reactors"], [343, 0, 0, "-", "systemLayoutInput"], [344, 0, 0, "-", "tests"], [355, 0, 0, "-", "zones"]], "armi.reactor.ReactorPlugin": [[280, 3, 1, "", "defineAssemblyTypes"], [280, 3, 1, "", "defineBlockTypes"], [280, 3, 1, "", "defineSystemBuilders"]], "armi.reactor.assemblies": [[281, 2, 1, "", "Assembly"], [281, 2, 1, "", "CartesianAssembly"], [281, 2, 1, "", "HexAssembly"], [281, 2, 1, "", "RZAssembly"], [281, 2, 1, "", "ThRZAssembly"]], "armi.reactor.assemblies.Assembly": [[281, 4, 1, "", "DATABASE"], [281, 4, 1, "", "LOAD_QUEUE"], [281, 4, 1, "", "NOT_IN_CORE"], [281, 4, 1, "", "SPENT_FUEL_POOL"], [281, 3, 1, "", "add"], [281, 3, 1, "", "adjustResolution"], [281, 3, 1, "", "calculateZCoords"], [281, 3, 1, "", "coords"], [281, 3, 1, "", "countBlocksWithFlags"], [281, 3, 1, "", "doubleResolution"], [281, 3, 1, "", "dump"], [281, 3, 1, "", "getAge"], [281, 3, 1, "", "getArea"], [281, 3, 1, "", "getAveragePlenumTemperature"], [281, 3, 1, "", "getAxialMesh"], [281, 3, 1, "", "getBIndexFromZIndex"], [281, 3, 1, "", "getBlockAtElevation"], [281, 3, 1, "", "getBlocks"], [281, 3, 1, "", "getBlocksAndZ"], [281, 3, 1, "", "getBlocksBetweenElevations"], [281, 3, 1, "", "getDim"], [281, 3, 1, "", "getElevationBoundariesByBlockType"], [281, 3, 1, "", "getElevationsMatchingParamValue"], [281, 3, 1, "", "getFirstBlock"], [281, 3, 1, "", "getFirstBlockByType"], [281, 3, 1, "", "getHeight"], [281, 3, 1, "", "getLocation"], [281, 3, 1, "", "getNum"], [281, 3, 1, "", "getParamOfZFunction"], [281, 3, 1, "", "getParamValuesAtZ"], [281, 3, 1, "", "getPinPlenumVolumeInCubicMeters"], [281, 3, 1, "", "getReactiveHeight"], [281, 3, 1, "", "getSymmetryFactor"], [281, 3, 1, "", "getTotalHeight"], [281, 3, 1, "", "getVolume"], [281, 3, 1, "", "hasContinuousCoolantChannel"], [281, 3, 1, "", "insert"], [281, 3, 1, "", "makeAxialSnapList"], [281, 3, 1, "", "makeNameFromAssemNum"], [281, 3, 1, "", "makeUnique"], [281, 3, 1, "", "moveTo"], [281, 4, 1, "", "pDefs"], [281, 4, 1, "", "paramCollectionType"], [281, 3, 1, "", "reestablishBlockOrder"], [281, 3, 1, "", "renameBlocksAccordingToAssemblyNum"], [281, 3, 1, "", "renumber"], [281, 3, 1, "", "rotate"], [281, 3, 1, "", "rotatePins"], [281, 3, 1, "", "setBlockHeights"], [281, 3, 1, "", "setBlockMesh"]], "armi.reactor.assemblies.CartesianAssembly": [[281, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblies.HexAssembly": [[281, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblies.RZAssembly": [[281, 4, 1, "", "paramCollectionType"], [281, 3, 1, "", "radialInner"], [281, 3, 1, "", "radialOuter"], [281, 3, 1, "", "thetaInner"], [281, 3, 1, "", "thetaOuter"]], "armi.reactor.assemblies.ThRZAssembly": [[281, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblyLists": [[282, 2, 1, "", "AssemblyList"], [282, 2, 1, "", "AutoFiller"], [282, 2, 1, "", "RowMajorAutoFiller"], [282, 2, 1, "", "SpentFuelPool"]], "armi.reactor.assemblyLists.AssemblyList": [[282, 3, 1, "", "add"], [282, 3, 1, "", "count"], [282, 3, 1, "", "getAssembly"], [282, 4, 1, "", "paramCollectionType"], [282, 5, 1, "", "r"]], "armi.reactor.assemblyLists.AutoFiller": [[282, 3, 1, "", "assemblyAdded"], [282, 3, 1, "", "getNextLocation"]], "armi.reactor.assemblyLists.RowMajorAutoFiller": [[282, 3, 1, "", "assemblyAdded"], [282, 3, 1, "", "getNextLocation"]], "armi.reactor.assemblyLists.SpentFuelPool": [[282, 3, 1, "", "add"], [282, 3, 1, "", "normalizeNames"], [282, 4, 1, "", "paramCollectionType"], [282, 3, 1, "", "report"]], "armi.reactor.assemblyParameters": [[283, 1, 1, "", "getAssemblyParameterDefinitions"]], "armi.reactor.blockParameters": [[284, 1, 1, "", "getBlockParameterDefinitions"]], "armi.reactor.blocks": [[285, 2, 1, "", "Block"], [285, 2, 1, "", "CartesianBlock"], [285, 2, 1, "", "HexBlock"], [285, 2, 1, "", "ThRZBlock"]], "armi.reactor.blocks.Block": [[285, 4, 1, "", "PITCH_COMPONENT_TYPE"], [285, 4, 1, "", "PITCH_DIMENSION"], [285, 3, 1, "", "add"], [285, 3, 1, "", "adjustDensity"], [285, 3, 1, "", "adjustUEnrich"], [285, 3, 1, "", "autoCreateSpatialGrids"], [285, 3, 1, "", "breakFuelComponentsIntoIndividuals"], [285, 3, 1, "", "completeInitialLoading"], [285, 3, 1, "", "coords"], [285, 5, 1, "", "core"], [285, 3, 1, "", "createHomogenizedCopy"], [285, 3, 1, "", "getArea"], [285, 3, 1, "", "getBlocks"], [285, 3, 1, "", "getComponentAreaFrac"], [285, 3, 1, "", "getComponentsInLinkedOrder"], [285, 3, 1, "", "getComponentsThatAreLinkedTo"], [285, 3, 1, "", "getDim"], [285, 3, 1, "", "getDimensions"], [285, 3, 1, "", "getFlowAreaPerPin"], [285, 3, 1, "", "getHeight"], [285, 3, 1, "", "getHydraulicDiameter"], [285, 3, 1, "", "getIntegratedMgFlux"], [285, 3, 1, "", "getLargestComponent"], [285, 3, 1, "", "getLocation"], [285, 3, 1, "", "getLumpedFissionProductCollection"], [285, 3, 1, "", "getMaxArea"], [285, 3, 1, "", "getMaxVolume"], [285, 3, 1, "", "getMfp"], [285, 3, 1, "", "getMgFlux"], [285, 3, 1, "", "getMicroSuffix"], [285, 3, 1, "", "getNumPins"], [285, 3, 1, "", "getPinCenterFlatToFlat"], [285, 3, 1, "", "getPinCoordinates"], [285, 3, 1, "", "getPinPitch"], [285, 3, 1, "", "getPitch"], [285, 3, 1, "", "getPlenumPin"], [285, 3, 1, "", "getSmearDensity"], [285, 3, 1, "", "getSortedComponentsInsideOfComponent"], [285, 3, 1, "", "getSymmetryFactor"], [285, 3, 1, "", "getVolume"], [285, 3, 1, "", "getWettedPerimeter"], [285, 3, 1, "", "getWireWrapCladGap"], [285, 3, 1, "", "hasPinPitch"], [285, 3, 1, "", "isOnWhichSymmetryLine"], [285, 3, 1, "", "isPlenumPin"], [285, 3, 1, "", "makeName"], [285, 3, 1, "", "mergeWithBlock"], [285, 4, 1, "", "pDefs"], [285, 4, 1, "", "paramCollectionType"], [285, 3, 1, "", "plotFlux"], [285, 5, 1, "", "r"], [285, 3, 1, "", "remove"], [285, 3, 1, "", "removeAll"], [285, 3, 1, "", "replaceBlockWithBlock"], [285, 3, 1, "", "rotate"], [285, 3, 1, "", "setAreaFractionsReport"], [285, 3, 1, "", "setAxialExpTargetComp"], [285, 3, 1, "", "setB10VolParam"], [285, 3, 1, "", "setBuLimitInfo"], [285, 3, 1, "", "setHeight"], [285, 3, 1, "", "setPinMgFluxes"], [285, 3, 1, "", "setPitch"], [285, 4, 1, "", "uniqID"], [285, 3, 1, "", "updateComponentDims"], [285, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.CartesianBlock": [[285, 4, 1, "", "PITCH_COMPONENT_TYPE"], [285, 4, 1, "", "PITCH_DIMENSION"], [285, 3, 1, "", "getMaxArea"], [285, 3, 1, "", "getPinCenterFlatToFlat"], [285, 3, 1, "", "getSymmetryFactor"], [285, 4, 1, "", "paramCollectionType"], [285, 3, 1, "", "setPitch"]], "armi.reactor.blocks.HexBlock": [[285, 4, 1, "", "PITCH_COMPONENT_TYPE"], [285, 3, 1, "", "autoCreateSpatialGrids"], [285, 3, 1, "", "coords"], [285, 3, 1, "", "createHomogenizedCopy"], [285, 3, 1, "", "getDuctIP"], [285, 3, 1, "", "getDuctOP"], [285, 3, 1, "", "getFlowArea"], [285, 3, 1, "", "getHydraulicDiameter"], [285, 3, 1, "", "getMaxArea"], [285, 3, 1, "", "getPinCenterFlatToFlat"], [285, 3, 1, "", "getPinPitch"], [285, 3, 1, "", "getPinToDuctGap"], [285, 3, 1, "", "getRotationNum"], [285, 3, 1, "", "getSymmetryFactor"], [285, 3, 1, "", "getWettedPerimeter"], [285, 3, 1, "", "hasPinPitch"], [285, 3, 1, "", "initializePinLocations"], [285, 4, 1, "", "paramCollectionType"], [285, 3, 1, "", "rotate"], [285, 3, 1, "", "rotatePins"], [285, 3, 1, "", "setPinPowers"], [285, 3, 1, "", "setRotationNum"], [285, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.ThRZBlock": [[285, 3, 1, "", "axialInner"], [285, 3, 1, "", "axialOuter"], [285, 3, 1, "", "getMaxArea"], [285, 4, 1, "", "paramCollectionType"], [285, 3, 1, "", "radialInner"], [285, 3, 1, "", "radialOuter"], [285, 3, 1, "", "thetaInner"], [285, 3, 1, "", "thetaOuter"], [285, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blueprints": [[286, 2, 1, "", "Blueprints"], [287, 0, 0, "-", "assemblyBlueprint"], [288, 0, 0, "-", "blockBlueprint"], [289, 0, 0, "-", "componentBlueprint"], [290, 0, 0, "-", "gridBlueprint"], [291, 0, 0, "-", "isotopicOptions"], [286, 1, 1, "", "loadFromCs"], [286, 1, 1, "", "migrate"], [292, 0, 0, "-", "reactorBlueprint"], [293, 0, 0, "-", "tests"]], "armi.reactor.blueprints.Blueprints": [[286, 3, 1, "", "addDefaultSFP"], [286, 4, 1, "", "attributes"], [286, 3, 1, "", "constructAssem"], [286, 3, 1, "", "load"], [286, 3, 1, "", "migrate"]], "armi.reactor.blueprints.assemblyBlueprint": [[287, 2, 1, "", "AssemblyBlueprint"], [287, 2, 1, "", "AssemblyKeyedList"], [287, 2, 1, "", "ByComponentModifications"], [287, 2, 1, "", "MaterialModifications"], [287, 2, 1, "", "Modifications"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint": [[287, 4, 1, "", "attributes"], [287, 3, 1, "", "construct"], [287, 3, 1, "", "getAssemClass"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList": [[287, 4, 1, "", "attributes"], [287, 5, 1, "", "bySpecifier"], [287, 4, 1, "", "item_type"]], "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications": [[287, 4, 1, "", "attributes"], [287, 4, 1, "", "key_type"], [287, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications": [[287, 4, 1, "", "attributes"], [287, 4, 1, "", "key_type"], [287, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.Modifications": [[287, 4, 1, "", "attributes"], [287, 4, 1, "", "key_type"], [287, 4, 1, "", "value_type"]], "armi.reactor.blueprints.blockBlueprint": [[288, 2, 1, "", "BlockBlueprint"], [288, 2, 1, "", "BlockKeyedList"], [288, 2, 1, "", "BlockList"]], "armi.reactor.blueprints.blockBlueprint.BlockBlueprint": [[288, 4, 1, "", "attributes"], [288, 3, 1, "", "construct"], [288, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockKeyedList": [[288, 4, 1, "", "attributes"], [288, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockList": [[288, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint": [[289, 2, 1, "", "ComponentBlueprint"], [289, 2, 1, "", "ComponentDimension"], [289, 2, 1, "", "ComponentGroup"], [289, 2, 1, "", "ComponentGroups"], [289, 2, 1, "", "ComponentKeyedList"], [289, 2, 1, "", "GroupedComponent"], [289, 1, 1, "", "expandElementals"], [289, 1, 1, "", "insertDepletableNuclideKeys"]], "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint": [[289, 4, 1, "", "attributes"], [289, 3, 1, "", "construct"]], "armi.reactor.blueprints.componentBlueprint.ComponentDimension": [[289, 4, 1, "", "attributes"], [289, 3, 1, "", "from_yaml"], [289, 3, 1, "", "to_yaml"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroup": [[289, 4, 1, "", "attributes"], [289, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroups": [[289, 4, 1, "", "attributes"], [289, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList": [[289, 4, 1, "", "attributes"], [289, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.GroupedComponent": [[289, 4, 1, "", "attributes"]], "armi.reactor.blueprints.gridBlueprint": [[290, 2, 1, "", "GridBlueprint"], [290, 2, 1, "", "Grids"], [290, 2, 1, "", "Triplet"], [290, 1, 1, "", "saveToStream"]], "armi.reactor.blueprints.gridBlueprint.GridBlueprint": [[290, 4, 1, "", "attributes"], [290, 3, 1, "", "construct"], [290, 3, 1, "", "expandToFull"], [290, 3, 1, "", "getLocators"], [290, 3, 1, "", "getMultiLocator"], [290, 5, 1, "", "readFromLatticeMap"]], "armi.reactor.blueprints.gridBlueprint.Grids": [[290, 4, 1, "", "attributes"], [290, 4, 1, "", "item_type"]], "armi.reactor.blueprints.gridBlueprint.Triplet": [[290, 4, 1, "", "attributes"]], "armi.reactor.blueprints.isotopicOptions": [[291, 2, 1, "", "CustomIsotopic"], [291, 2, 1, "", "CustomIsotopics"], [291, 2, 1, "", "NuclideFlag"], [291, 2, 1, "", "NuclideFlags"], [291, 1, 1, "", "autoUpdateNuclideFlags"], [291, 1, 1, "", "eleExpandInfoBasedOnCodeENDF"], [291, 1, 1, "", "genDefaultNucFlags"], [291, 1, 1, "", "getAllNuclideBasesByLibrary"], [291, 1, 1, "", "getDefaultNuclideFlags"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopic": [[291, 3, 1, "", "apply"], [291, 4, 1, "", "attributes"], [291, 5, 1, "", "density"], [291, 3, 1, "", "from_yaml"], [291, 3, 1, "", "from_yaml_key_val"], [291, 4, 1, "", "key_type"], [291, 4, 1, "", "value_type"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopics": [[291, 3, 1, "", "apply"], [291, 4, 1, "", "attributes"], [291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlag": [[291, 4, 1, "", "attributes"], [291, 3, 1, "", "fileAsActiveOrInert"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlags": [[291, 4, 1, "", "attributes"], [291, 4, 1, "", "item_type"]], "armi.reactor.blueprints.reactorBlueprint": [[292, 2, 1, "", "SystemBlueprint"], [292, 2, 1, "", "Systems"], [292, 1, 1, "", "summarizeMaterialData"]], "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint": [[292, 4, 1, "", "attributes"], [292, 3, 1, "", "construct"]], "armi.reactor.blueprints.reactorBlueprint.Systems": [[292, 4, 1, "", "attributes"], [292, 4, 1, "", "item_type"]], "armi.reactor.blueprints.tests": [[294, 0, 0, "-", "test_assemblyBlueprints"], [295, 0, 0, "-", "test_blockBlueprints"], [296, 0, 0, "-", "test_blueprints"], [297, 0, 0, "-", "test_componentBlueprint"], [298, 0, 0, "-", "test_customIsotopics"], [299, 0, 0, "-", "test_gridBlueprints"], [300, 0, 0, "-", "test_materialModifications"], [301, 0, 0, "-", "test_reactorBlueprints"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints": [[294, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications": [[294, 3, 1, "", "loadCustomAssembly"], [294, 3, 1, "", "test_checkParamConsistency"], [294, 4, 1, "", "twoBlockInput_correct"], [294, 4, 1, "", "twoBlockInput_wrongHeights"], [294, 4, 1, "", "twoBlockInput_wrongMatMods"], [294, 4, 1, "", "twoBlockInput_wrongMeshPoints"], [294, 4, 1, "", "twoBlockInput_wrongXSTypes"]], "armi.reactor.blueprints.tests.test_blockBlueprints": [[295, 2, 1, "", "TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock": [[295, 3, 1, "", "test_blockLattice"], [295, 3, 1, "", "test_constructSpatialGrid"], [295, 3, 1, "", "test_densityConsistentWithComponentConstructor"], [295, 3, 1, "", "test_explicitFlags"], [295, 3, 1, "", "test_getLocatorsAtLatticePositions"], [295, 3, 1, "", "test_nonLatticeComponentHasRightMult"]], "armi.reactor.blueprints.tests.test_blueprints": [[296, 2, 1, "", "TestBlueprints"], [296, 2, 1, "", "TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints": [[296, 3, 1, "", "test_componentDimensions"], [296, 3, 1, "", "test_getAssemblyTypeBySpecifier"], [296, 3, 1, "", "test_nuclides"], [296, 3, 1, "", "test_roundTripCompleteBP"], [296, 3, 1, "", "test_specialIsotopicVectors"], [296, 3, 1, "", "test_traceNuclides"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema": [[296, 3, 1, "", "test_assemblyParameters"], [296, 3, 1, "", "test_cladding_invalid"], [296, 3, 1, "", "test_componentGroupInput"], [296, 3, 1, "", "test_components"], [296, 3, 1, "", "test_customIsotopics"], [296, 3, 1, "", "test_merge"], [296, 3, 1, "", "test_noDuplicateKeysInYamlBlueprints"], [296, 3, 1, "", "test_nuclideFlags"], [296, 3, 1, "", "test_nuclidesMc2v2"], [296, 3, 1, "", "test_nuclidesMc2v3"], [296, 3, 1, "", "test_topLevelComponentInput"], [296, 3, 1, "", "test_withoutBlocks"]], "armi.reactor.blueprints.tests.test_componentBlueprint": [[297, 2, 1, "", "TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint": [[297, 4, 1, "", "componentString"], [297, 3, 1, "", "test_autoDepletable"], [297, 3, 1, "", "test_componentInitializationAmericiumCustomIsotopics"], [297, 3, 1, "", "test_componentInitializationControlCustomIsotopics"], [297, 3, 1, "", "test_componentInitializationIncompleteBurnChain"], [297, 3, 1, "", "test_componentInitializationThoriumBurnCustomIsotopics"], [297, 3, 1, "", "test_componentInitializationThoriumNoBurnCustomIsotopics"]], "armi.reactor.blueprints.tests.test_customIsotopics": [[298, 2, 1, "", "TestCustomIsotopics"], [298, 2, 1, "", "TestCustomIsotopics_ErrorConditions"], [298, 2, 1, "", "TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics": [[298, 3, 1, "", "test_expandedNatural"], [298, 3, 1, "", "test_massFractionsAreApplied"], [298, 3, 1, "", "test_numberDensities"], [298, 3, 1, "", "test_numberDensitiesAnchor"], [298, 3, 1, "", "test_numberFractions"], [298, 3, 1, "", "test_unmodified"], [298, 3, 1, "", "test_unrepresentedAreOnlyNatural"], [298, 4, 1, "", "yamlString"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions": [[298, 3, 1, "", "test_densityMustBePositive"], [298, 3, 1, "", "test_nonConformantElementName"], [298, 3, 1, "", "test_numberDensitiesCannotSpecifyDensity"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion": [[298, 3, 1, "", "test_expandedNatural"], [298, 4, 1, "", "yamlString"]], "armi.reactor.blueprints.tests.test_gridBlueprints": [[299, 2, 1, "", "TestGridBPRoundTrip"], [299, 2, 1, "", "TestGridBlueprintsSection"], [299, 2, 1, "", "TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip": [[299, 3, 1, "", "test_contents"], [299, 3, 1, "", "test_roundTrip"], [299, 3, 1, "", "test_tinyMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection": [[299, 3, 1, "", "test_simpleRead"], [299, 3, 1, "", "test_simpleReadLatticeMap"], [299, 3, 1, "", "test_simpleReadNoLatticeMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint": [[299, 3, 1, "", "test_construct"], [299, 3, 1, "", "test_geomFile"]], "armi.reactor.blueprints.tests.test_materialModifications": [[300, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications": [[300, 4, 1, "", "boronInput"], [300, 3, 1, "", "loadUZrAssembly"], [300, 3, 1, "", "test_both_u235_zr_wt_frac_modification"], [300, 3, 1, "", "test_checkByComponentMaterialInput"], [300, 3, 1, "", "test_filterMaterialInput"], [300, 3, 1, "", "test_invalidMatModName"], [300, 3, 1, "", "test_invalid_component_modification"], [300, 3, 1, "", "test_matModsUpTheMRO"], [300, 3, 1, "", "test_noMaterialModifications"], [300, 3, 1, "", "test_u235_wt_frac_byComponent_modification1"], [300, 3, 1, "", "test_u235_wt_frac_byComponent_modification2"], [300, 3, 1, "", "test_u235_wt_frac_modification"], [300, 3, 1, "", "test_zr_wt_frac_modification"], [300, 4, 1, "", "uZrInput"]], "armi.reactor.blueprints.tests.test_reactorBlueprints": [[301, 2, 1, "", "TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints": [[301, 3, 1, "", "test_construct"], [301, 3, 1, "", "test_materialDataSummary"], [301, 3, 1, "", "test_simple_read"]], "armi.reactor.components": [[302, 2, 1, "", "DerivedShape"], [302, 2, 1, "", "NullComponent"], [302, 2, 1, "", "PositiveOrNegativeVolumeComponent"], [302, 2, 1, "", "UnshapedComponent"], [302, 2, 1, "", "UnshapedVolumetricComponent"], [302, 2, 1, "", "ZeroMassComponent"], [303, 0, 0, "-", "basicShapes"], [304, 0, 0, "-", "complexShapes"], [305, 0, 0, "-", "component"], [306, 0, 0, "-", "componentParameters"], [302, 1, 1, "", "factory"], [307, 0, 0, "-", "volumetricShapes"]], "armi.reactor.components.DerivedShape": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 3, 1, "", "computeVolume"], [302, 3, 1, "", "getBoundingCircleOuterDiameter"], [302, 3, 1, "", "getComponentArea"], [302, 3, 1, "", "getVolume"], [302, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.NullComponent": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 3, 1, "", "getBoundingCircleOuterDiameter"], [302, 3, 1, "", "getDimension"], [302, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.PositiveOrNegativeVolumeComponent": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedComponent": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 3, 1, "", "fromComponent"], [302, 3, 1, "", "getBoundingCircleOuterDiameter"], [302, 3, 1, "", "getComponentArea"], [302, 4, 1, "", "pDefs"], [302, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedVolumetricComponent": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 3, 1, "", "getComponentArea"], [302, 3, 1, "", "getComponentVolume"], [302, 4, 1, "", "is3D"], [302, 4, 1, "", "paramCollectionType"], [302, 3, 1, "", "setVolume"]], "armi.reactor.components.ZeroMassComponent": [[302, 4, 1, "", "DIMENSION_NAMES"], [302, 4, 1, "", "INIT_SIGNATURE"], [302, 3, 1, "", "getNumberDensity"], [302, 4, 1, "", "paramCollectionType"], [302, 3, 1, "", "setNumberDensity"]], "armi.reactor.components.basicShapes": [[303, 2, 1, "", "Circle"], [303, 2, 1, "", "Hexagon"], [303, 2, 1, "", "Rectangle"], [303, 2, 1, "", "SolidRectangle"], [303, 2, 1, "", "Square"], [303, 2, 1, "", "Triangle"]], "armi.reactor.components.basicShapes.Circle": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [303, 3, 1, "", "getBoundingCircleOuterDiameter"], [303, 3, 1, "", "getCircleInnerDiameter"], [303, 3, 1, "", "getComponentArea"], [303, 4, 1, "", "is3D"], [303, 3, 1, "", "isEncapsulatedBy"], [303, 4, 1, "", "pDefs"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Hexagon": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [303, 3, 1, "", "getBoundingCircleOuterDiameter"], [303, 3, 1, "", "getCircleInnerDiameter"], [303, 3, 1, "", "getComponentArea"], [303, 3, 1, "", "getPerimeter"], [303, 3, 1, "", "getPitchData"], [303, 4, 1, "", "is3D"], [303, 4, 1, "", "pDefs"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Rectangle": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [303, 3, 1, "", "getBoundingCircleOuterDiameter"], [303, 3, 1, "", "getCircleInnerDiameter"], [303, 3, 1, "", "getComponentArea"], [303, 3, 1, "", "getPitchData"], [303, 4, 1, "", "is3D"], [303, 3, 1, "", "isLatticeComponent"], [303, 4, 1, "", "pDefs"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.SolidRectangle": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [303, 3, 1, "", "getComponentArea"], [303, 4, 1, "", "is3D"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Square": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 3, 1, "", "getBoundingCircleOuterDiameter"], [303, 3, 1, "", "getCircleInnerDiameter"], [303, 3, 1, "", "getComponentArea"], [303, 3, 1, "", "getPitchData"], [303, 4, 1, "", "is3D"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Triangle": [[303, 4, 1, "", "DIMENSION_NAMES"], [303, 4, 1, "", "INIT_SIGNATURE"], [303, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [303, 3, 1, "", "getComponentArea"], [303, 4, 1, "", "is3D"], [303, 4, 1, "", "pDefs"], [303, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes": [[304, 2, 1, "", "Helix"], [304, 2, 1, "", "HexHoledCircle"], [304, 2, 1, "", "HoledHexagon"], [304, 2, 1, "", "HoledRectangle"], [304, 2, 1, "", "HoledSquare"]], "armi.reactor.components.complexShapes.Helix": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getBoundingCircleOuterDiameter"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "is3D"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HexHoledCircle": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledHexagon": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledRectangle": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledSquare": [[304, 4, 1, "", "DIMENSION_NAMES"], [304, 4, 1, "", "INIT_SIGNATURE"], [304, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [304, 3, 1, "", "getCircleInnerDiameter"], [304, 3, 1, "", "getComponentArea"], [304, 4, 1, "", "pDefs"], [304, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.component": [[305, 2, 1, "", "Component"], [305, 2, 1, "", "ComponentType"], [305, 2, 1, "", "ShapedComponent"], [305, 1, 1, "", "componentTypeIsValid"]], "armi.reactor.components.component.Component": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [305, 3, 1, "", "adjustDensityForHeightExpansion"], [305, 3, 1, "", "adjustMassEnrichment"], [305, 3, 1, "", "applyMaterialMassFracsToNumberDensities"], [305, 3, 1, "", "backUp"], [305, 3, 1, "", "clearCache"], [305, 3, 1, "", "clearLinkedCache"], [305, 3, 1, "", "computeVolume"], [305, 3, 1, "", "containsSolidMaterial"], [305, 3, 1, "", "containsVoidMaterial"], [305, 3, 1, "", "density"], [305, 3, 1, "", "dimensionIsLinked"], [305, 5, 1, "", "gasPorosity"], [305, 3, 1, "", "getArea"], [305, 3, 1, "", "getBoundingCircleOuterDiameter"], [305, 3, 1, "", "getCircleInnerDiameter"], [305, 3, 1, "", "getComponentArea"], [305, 3, 1, "", "getComponentVolume"], [305, 3, 1, "", "getDimension"], [305, 3, 1, "", "getDimensionNamesLinkedTo"], [305, 3, 1, "", "getEnrichment"], [305, 3, 1, "", "getFuelMass"], [305, 3, 1, "", "getHeightFactor"], [305, 3, 1, "", "getIntegratedMgFlux"], [305, 3, 1, "", "getLinkedComponents"], [305, 3, 1, "", "getLumpedFissionProductCollection"], [305, 3, 1, "", "getMass"], [305, 3, 1, "", "getMassEnrichment"], [305, 3, 1, "", "getMicroSuffix"], [305, 3, 1, "", "getNuclideNumberDensities"], [305, 3, 1, "", "getNuclides"], [305, 3, 1, "", "getNumberDensity"], [305, 3, 1, "", "getPitchData"], [305, 3, 1, "", "getProperties"], [305, 3, 1, "", "getThermalExpansionFactor"], [305, 3, 1, "", "getVolume"], [305, 4, 1, "", "is3D"], [305, 3, 1, "", "iterComponents"], [305, 5, 1, "", "liquidPorosity"], [305, 3, 1, "", "mergeNuclidesInto"], [305, 4, 1, "", "pDefs"], [305, 4, 1, "", "paramCollectionType"], [305, 3, 1, "", "printContents"], [305, 3, 1, "", "resolveLinkedDims"], [305, 3, 1, "", "restoreBackup"], [305, 3, 1, "", "setArea"], [305, 3, 1, "", "setDimension"], [305, 3, 1, "", "setDimensionReport"], [305, 3, 1, "", "setLink"], [305, 3, 1, "", "setLumpedFissionProducts"], [305, 3, 1, "", "setName"], [305, 3, 1, "", "setNumberDensities"], [305, 3, 1, "", "setNumberDensity"], [305, 3, 1, "", "setProperties"], [305, 3, 1, "", "setTemperature"], [305, 3, 1, "", "setVolume"], [305, 5, 1, "", "temperatureInC"], [305, 5, 1, "", "temperatureInK"], [305, 3, 1, "", "updateDims"], [305, 3, 1, "", "updateNumberDensities"]], "armi.reactor.components.component.ComponentType": [[305, 4, 1, "", "NON_DIMENSION_NAMES"], [305, 4, 1, "", "TYPES"]], "armi.reactor.components.component.ShapedComponent": [[305, 4, 1, "", "DIMENSION_NAMES"], [305, 4, 1, "", "INIT_SIGNATURE"], [305, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.componentParameters": [[306, 1, 1, "", "getCircleParameterDefinitions"], [306, 1, 1, "", "getComponentParameterDefinitions"], [306, 1, 1, "", "getCubeParameterDefinitions"], [306, 1, 1, "", "getHelixParameterDefinitions"], [306, 1, 1, "", "getHexHoledCircleParameterDefinitions"], [306, 1, 1, "", "getHexagonParameterDefinitions"], [306, 1, 1, "", "getHoledHexagonParameterDefinitions"], [306, 1, 1, "", "getHoledRectangleParameterDefinitions"], [306, 1, 1, "", "getRadialSegmentParameterDefinitions"], [306, 1, 1, "", "getRectangleParameterDefinitions"], [306, 1, 1, "", "getTriangleParameterDefinitions"], [306, 1, 1, "", "getUnshapedParameterDefinitions"]], "armi.reactor.components.volumetricShapes": [[307, 2, 1, "", "Cube"], [307, 2, 1, "", "DifferentialRadialSegment"], [307, 2, 1, "", "RadialSegment"], [307, 2, 1, "", "Sphere"]], "armi.reactor.components.volumetricShapes.Cube": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getComponentVolume"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.DifferentialRadialSegment": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getComponentVolume"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "paramCollectionType"], [307, 3, 1, "", "updateDims"]], "armi.reactor.components.volumetricShapes.RadialSegment": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getBoundingCircleOuterDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getComponentVolume"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.Sphere": [[307, 4, 1, "", "DIMENSION_NAMES"], [307, 4, 1, "", "INIT_SIGNATURE"], [307, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [307, 3, 1, "", "getBoundingCircleOuterDiameter"], [307, 3, 1, "", "getComponentArea"], [307, 3, 1, "", "getComponentVolume"], [307, 4, 1, "", "is3D"], [307, 4, 1, "", "pDefs"], [307, 4, 1, "", "paramCollectionType"]], "armi.reactor.composites": [[308, 2, 1, "", "ArmiObject"], [308, 2, 1, "", "Composite"], [308, 2, 1, "", "CompositeModelType"], [308, 2, 1, "", "FlagSerializer"], [308, 2, 1, "", "StateRetainer"], [308, 1, 1, "", "gatherMaterialsByVolume"], [308, 1, 1, "", "getDominantMaterial"], [308, 1, 1, "", "getReactionRateDict"]], "armi.reactor.composites.ArmiObject": [[308, 3, 1, "", "addMass"], [308, 3, 1, "", "addMasses"], [308, 3, 1, "", "adjustMassEnrichment"], [308, 3, 1, "", "adjustMassFrac"], [308, 3, 1, "", "calcAvgParam"], [308, 3, 1, "", "calcTotalParam"], [308, 3, 1, "", "changeNDensByFactor"], [308, 3, 1, "", "clearCache"], [308, 3, 1, "", "clearNumberDensities"], [308, 3, 1, "", "constituentReport"], [308, 3, 1, "", "containsAtLeastOneChildWithFlags"], [308, 3, 1, "", "containsHeavyMetal"], [308, 3, 1, "", "containsOnlyChildrenWithFlags"], [308, 3, 1, "", "copyParamsFrom"], [308, 3, 1, "", "copyParamsToChildren"], [308, 3, 1, "", "density"], [308, 3, 1, "", "doChildrenHaveFlags"], [308, 3, 1, "", "duplicate"], [308, 3, 1, "", "expandAllElementalsToIsotopics"], [308, 3, 1, "", "expandElementalToIsotopics"], [308, 3, 1, "", "getAncestor"], [308, 3, 1, "", "getAncestorAndDistance"], [308, 3, 1, "", "getAncestorWithFlags"], [308, 3, 1, "", "getArea"], [308, 3, 1, "", "getAtomicWeight"], [308, 3, 1, "", "getAverageTempInC"], [308, 3, 1, "", "getBoronMassEnrich"], [308, 3, 1, "", "getBoundingIndices"], [308, 3, 1, "", "getCaptureEnergyGenerationConstants"], [308, 3, 1, "", "getChildParamValues"], [308, 3, 1, "", "getChildren"], [308, 3, 1, "", "getChildrenWithFlags"], [308, 3, 1, "", "getChildrenWithNuclides"], [308, 3, 1, "", "getComponent"], [308, 3, 1, "", "getComponentByName"], [308, 3, 1, "", "getComponentNames"], [308, 3, 1, "", "getComponents"], [308, 3, 1, "", "getComponentsOfMaterial"], [308, 3, 1, "", "getComponentsOfShape"], [308, 3, 1, "", "getDominantMaterial"], [308, 3, 1, "", "getFPMass"], [308, 3, 1, "", "getFissileMass"], [308, 3, 1, "", "getFissileMassEnrich"], [308, 3, 1, "", "getFissionEnergyGenerationConstants"], [308, 3, 1, "", "getFuelMass"], [308, 3, 1, "", "getGammaEnergyDepositionConstants"], [308, 3, 1, "", "getHMDens"], [308, 3, 1, "", "getHMMass"], [308, 3, 1, "", "getHMMoles"], [308, 3, 1, "", "getIntegratedMgFlux"], [308, 3, 1, "", "getLumpedFissionProductCollection"], [308, 3, 1, "", "getMass"], [308, 3, 1, "", "getMassFrac"], [308, 3, 1, "", "getMassFracs"], [308, 3, 1, "", "getMasses"], [308, 3, 1, "", "getMaxArea"], [308, 3, 1, "", "getMaxParam"], [308, 3, 1, "", "getMaxUraniumMassEnrich"], [308, 3, 1, "", "getMaxVolume"], [308, 3, 1, "", "getMgFlux"], [308, 3, 1, "", "getMicroSuffix"], [308, 3, 1, "", "getMinParam"], [308, 3, 1, "", "getName"], [308, 3, 1, "", "getNeutronEnergyDepositionConstants"], [308, 3, 1, "", "getNuclideNumberDensities"], [308, 3, 1, "", "getNuclides"], [308, 3, 1, "", "getNumComponents"], [308, 3, 1, "", "getNumberDensities"], [308, 3, 1, "", "getNumberDensity"], [308, 3, 1, "", "getNumberOfAtoms"], [308, 3, 1, "", "getParamNames"], [308, 3, 1, "", "getParameterCollection"], [308, 3, 1, "", "getPuFrac"], [308, 3, 1, "", "getPuMass"], [308, 3, 1, "", "getPuMoles"], [308, 3, 1, "", "getPuN"], [308, 3, 1, "", "getSymmetryFactor"], [308, 3, 1, "", "getTotalEnergyGenerationConstants"], [308, 3, 1, "", "getTotalNDens"], [308, 3, 1, "", "getType"], [308, 3, 1, "", "getUraniumMassEnrich"], [308, 3, 1, "", "getUraniumNumEnrich"], [308, 3, 1, "", "getVolume"], [308, 3, 1, "", "getVolumeFraction"], [308, 3, 1, "", "getVolumeFractions"], [308, 3, 1, "", "getZrFrac"], [308, 3, 1, "", "hasComponents"], [308, 3, 1, "", "hasFlags"], [308, 3, 1, "", "isFuel"], [308, 3, 1, "", "iterComponents"], [308, 3, 1, "", "nameContains"], [308, 4, 1, "", "pDefs"], [308, 4, 1, "", "paramCollectionType"], [308, 3, 1, "", "printDensities"], [308, 3, 1, "", "removeMass"], [308, 3, 1, "", "resolveLinkedDims"], [308, 3, 1, "", "setChildrenLumpedFissionProducts"], [308, 3, 1, "", "setComponentDimensionsReport"], [308, 3, 1, "", "setLumpedFissionProducts"], [308, 3, 1, "", "setMass"], [308, 3, 1, "", "setMassFrac"], [308, 3, 1, "", "setMassFracs"], [308, 3, 1, "", "setMasses"], [308, 3, 1, "", "setName"], [308, 3, 1, "", "setNumberDensities"], [308, 3, 1, "", "setNumberDensity"], [308, 3, 1, "", "setType"], [308, 3, 1, "", "updateNumberDensities"], [308, 3, 1, "", "updateParamsFrom"]], "armi.reactor.composites.Composite": [[308, 3, 1, "", "add"], [308, 3, 1, "", "append"], [308, 3, 1, "", "backUp"], [308, 3, 1, "", "extend"], [308, 3, 1, "", "getBoundingCircleOuterDiameter"], [308, 3, 1, "", "getChildren"], [308, 3, 1, "", "getChildrenOfType"], [308, 3, 1, "", "getChildrenWithFlags"], [308, 3, 1, "", "getComponents"], [308, 3, 1, "", "getIntegratedMgFlux"], [308, 3, 1, "", "getLumpedFissionProductCollection"], [308, 3, 1, "", "getLumpedFissionProductsIfNecessary"], [308, 3, 1, "", "getReactionRates"], [308, 3, 1, "", "index"], [308, 3, 1, "", "insert"], [308, 3, 1, "", "isOnWhichSymmetryLine"], [308, 3, 1, "", "iterComponents"], [308, 3, 1, "", "moveTo"], [308, 4, 1, "", "paramCollectionType"], [308, 3, 1, "", "printContents"], [308, 3, 1, "", "remove"], [308, 3, 1, "", "removeAll"], [308, 3, 1, "", "requiresLumpedFissionProducts"], [308, 3, 1, "", "restoreBackup"], [308, 3, 1, "", "retainState"], [308, 3, 1, "", "setChildren"], [308, 3, 1, "", "sort"], [308, 3, 1, "", "syncMpiState"]], "armi.reactor.composites.CompositeModelType": [[308, 4, 1, "", "TYPES"]], "armi.reactor.composites.FlagSerializer": [[308, 3, 1, "", "pack"], [308, 3, 1, "", "unpack"], [308, 4, 1, "", "version"]], "armi.reactor.converters": [[310, 0, 0, "-", "axialExpansionChanger"], [311, 0, 0, "-", "blockConverters"], [312, 0, 0, "-", "geometryConverters"], [313, 0, 0, "-", "meshConverters"], [314, 0, 0, "-", "parameterSweeps"], [316, 0, 0, "-", "pinTypeBlockConverters"], [317, 0, 0, "-", "tests"], [324, 0, 0, "-", "uniformMesh"]], "armi.reactor.converters.axialExpansionChanger": [[310, 2, 1, "", "AssemblyAxialLinkage"], [310, 2, 1, "", "AxialExpansionChanger"], [310, 2, 1, "", "ExpansionData"], [310, 1, 1, "", "expandColdDimsToHot"], [310, 1, 1, "", "getDefaultReferenceAssem"], [310, 1, 1, "", "getSolidComponents"], [310, 1, 1, "", "makeAssemsAbleToSnapToUniformMesh"]], "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger": [[310, 3, 1, "", "applyColdHeightMassIncrease"], [310, 3, 1, "", "axiallyExpandAssembly"], [310, 3, 1, "", "manageCoreMesh"], [310, 3, 1, "", "performPrescribedAxialExpansion"], [310, 3, 1, "", "performThermalAxialExpansion"], [310, 3, 1, "", "reset"], [310, 3, 1, "", "setAssembly"]], "armi.reactor.converters.axialExpansionChanger.ExpansionData": [[310, 3, 1, "", "computeThermalExpansionFactors"], [310, 3, 1, "", "determineTargetComponent"], [310, 3, 1, "", "getExpansionFactor"], [310, 3, 1, "", "isTargetComponent"], [310, 3, 1, "", "setExpansionFactors"], [310, 3, 1, "", "updateComponentTemp"], [310, 3, 1, "", "updateComponentTempsBy1DTempField"]], "armi.reactor.converters.blockConverters": [[311, 2, 1, "", "BlockAvgToCylConverter"], [311, 2, 1, "", "BlockConverter"], [311, 2, 1, "", "ComponentMerger"], [311, 2, 1, "", "HexComponentsToCylConverter"], [311, 2, 1, "", "MultipleComponentMerger"], [311, 1, 1, "", "getOuterDiamFromIDAndArea"], [311, 1, 1, "", "radiiFromHexPitches"], [311, 1, 1, "", "radiiFromHexSides"], [311, 1, 1, "", "radiiFromRingOfRods"]], "armi.reactor.converters.blockConverters.BlockAvgToCylConverter": [[311, 3, 1, "", "convert"], [311, 3, 1, "", "plotConvertedBlock"]], "armi.reactor.converters.blockConverters.BlockConverter": [[311, 3, 1, "", "convert"], [311, 3, 1, "", "dissolveComponentIntoComponent"], [311, 3, 1, "", "restablishLinks"]], "armi.reactor.converters.blockConverters.ComponentMerger": [[311, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.HexComponentsToCylConverter": [[311, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.MultipleComponentMerger": [[311, 3, 1, "", "convert"]], "armi.reactor.converters.geometryConverters": [[312, 2, 1, "", "EdgeAssemblyChanger"], [312, 2, 1, "", "FuelAssemNumModifier"], [312, 2, 1, "", "GeometryChanger"], [312, 2, 1, "", "GeometryConverter"], [312, 2, 1, "", "HexToRZConverter"], [312, 2, 1, "", "HexToRZThetaConverter"], [312, 2, 1, "", "ThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger": [[312, 3, 1, "", "addEdgeAssemblies"], [312, 3, 1, "", "removeEdgeAssemblies"], [312, 3, 1, "", "scaleParamsRelatedToSymmetry"]], "armi.reactor.converters.geometryConverters.FuelAssemNumModifier": [[312, 3, 1, "", "addRing"], [312, 3, 1, "", "convert"], [312, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.GeometryChanger": [[312, 3, 1, "", "convert"], [312, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.HexToRZThetaConverter": [[312, 3, 1, "", "convert"], [312, 3, 1, "", "createHomogenizedRZTBlock"], [312, 3, 1, "", "plotConvertedReactor"], [312, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger": [[312, 4, 1, "", "EXPECTED_INPUT_SYMMETRY"], [312, 3, 1, "", "convert"], [312, 3, 1, "", "restorePreviousGeometry"]], "armi.reactor.converters.meshConverters": [[313, 2, 1, "", "MeshConverter"], [313, 2, 1, "", "RZThetaReactorMeshConverter"], [313, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialBins"], [313, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"], [313, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialFlags"], [313, 1, 1, "", "checkLastValueInList"], [313, 1, 1, "", "checkListBounds"], [313, 1, 1, "", "generateBins"]], "armi.reactor.converters.meshConverters.MeshConverter": [[313, 3, 1, "", "generateMesh"], [313, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter": [[313, 3, 1, "", "generateMesh"], [313, 3, 1, "", "setAxialMesh"], [313, 3, 1, "", "setRingsToConvert"], [313, 3, 1, "", "setThetaMesh"], [313, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.parameterSweeps": [[315, 0, 0, "-", "generalParameterSweepConverters"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters": [[315, 2, 1, "", "CustomModifier"], [315, 2, 1, "", "NeutronicConvergenceModifier"], [315, 2, 1, "", "ParameterSweepConverter"], [315, 2, 1, "", "SettingsModifier"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier": [[315, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier": [[315, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter": [[315, 4, 1, "", "PRIORITY"], [315, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier": [[315, 3, 1, "", "convert"]], "armi.reactor.converters.pinTypeBlockConverters": [[316, 1, 1, "", "adjustCladThicknessByID"], [316, 1, 1, "", "adjustCladThicknessByOD"], [316, 1, 1, "", "adjustSmearDensity"]], "armi.reactor.converters.tests": [[318, 0, 0, "-", "test_axialExpansionChanger"], [319, 0, 0, "-", "test_blockConverter"], [320, 0, 0, "-", "test_geometryConverters"], [321, 0, 0, "-", "test_meshConverters"], [322, 0, 0, "-", "test_pinTypeBlockConverters"], [323, 0, 0, "-", "test_uniformMesh"]], "armi.reactor.converters.tests.test_axialExpansionChanger": [[318, 2, 1, "", "AxialExpansionTestBase"], [318, 2, 1, "", "FakeMat"], [318, 2, 1, "", "FakeMatException"], [318, 2, 1, "", "Temperature"], [318, 2, 1, "", "TestAxialExpansionHeight"], [318, 2, 1, "", "TestConservation"], [318, 2, 1, "", "TestDetermineTargetComponent"], [318, 2, 1, "", "TestExceptions"], [318, 2, 1, "", "TestGetSolidComponents"], [318, 2, 1, "", "TestInputHeightsConsideredHot"], [318, 2, 1, "", "TestLinkage"], [318, 2, 1, "", "TestManageCoreMesh"], [318, 1, 1, "", "buildTestAssemblyWithFakeMaterial"], [318, 1, 1, "", "checkColdBlockHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase": [[318, 4, 1, "", "Steel_Component_Lst"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat": [[318, 3, 1, "", "linearExpansionPercent"], [318, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException": [[318, 3, 1, "", "linearExpansionPercent"], [318, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight": [[318, 3, 1, "", "test_AssemblyAxialExpansionHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation": [[318, 3, 1, "", "complexConservationTest"], [318, 3, 1, "", "expandAssemForMassConservationTest"], [318, 3, 1, "", "test_computeThermalExpansionFactors"], [318, 3, 1, "", "test_noMovementACLP"], [318, 3, 1, "", "test_prescribedExpansionContractionConservation"], [318, 3, 1, "", "test_reset"], [318, 3, 1, "", "test_targetComponentMassConservation"], [318, 3, 1, "", "test_thermalExpansionContractionConservation_complex"], [318, 3, 1, "", "test_thermalExpansionContractionConservation_simple"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent": [[318, 3, 1, "", "test_determineTargetComponent"], [318, 3, 1, "", "test_determineTargetComponentBlockWithMultipleFlags"], [318, 3, 1, "", "test_manuallySetTargetComponent"], [318, 3, 1, "", "test_specifyTargetComponent_NotFound"], [318, 3, 1, "", "test_specifyTargetComponent_singleSolid"], [318, 3, 1, "", "test_specifyTargetComponet_MultipleFound"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions": [[318, 3, 1, "", "test_AssemblyAxialExpansionException"], [318, 3, 1, "", "test_determineLinked"], [318, 3, 1, "", "test_getLinkedComponents"], [318, 3, 1, "", "test_isFuelLocked"], [318, 3, 1, "", "test_isTopDummyBlockPresent"], [318, 3, 1, "", "test_setExpansionFactors"], [318, 3, 1, "", "test_updateComponentTempsBy1DTempFieldRuntimeError"], [318, 3, 1, "", "test_updateComponentTempsBy1DTempFieldValueError"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents": [[318, 3, 1, "", "test_getSolidComponents"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot": [[318, 3, 1, "", "checkColdHeightBlockMass"], [318, 3, 1, "", "test_coldAssemblyExpansion"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage": [[318, 3, 1, "", "runTest"], [318, 3, 1, "", "test_AnnularHexOverlappingThickAnnularHex"], [318, 3, 1, "", "test_annularPinNotOverlappingWithAnnulus"], [318, 3, 1, "", "test_annularPinOverlappingWithAnnuls"], [318, 3, 1, "", "test_differentMultNotOverlapping"], [318, 3, 1, "", "test_liquids"], [318, 3, 1, "", "test_overlappingSolidPins"], [318, 3, 1, "", "test_solidPinNotOverlappingAnnulus"], [318, 3, 1, "", "test_solidPinOverlappingWithAnnulus"], [318, 3, 1, "", "test_thinAnnularPinOverlappingWithThickAnnulus"], [318, 3, 1, "", "test_unshapedComponentAndCircle"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh": [[318, 3, 1, "", "test_manageCoreMesh"]], "armi.reactor.converters.tests.test_blockConverter": [[319, 2, 1, "", "TestBlockConverter"], [319, 2, 1, "", "TestToCircles"], [319, 1, 1, "", "buildControlBlockWithLinkedNegativeAreaComponent"]], "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter": [[319, 3, 1, "", "test_build_NthRing"], [319, 3, 1, "", "test_convert"], [319, 3, 1, "", "test_convertCartesianLatticeWithFuelDriver"], [319, 3, 1, "", "test_convertHexWithFuelDriver"], [319, 3, 1, "", "test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"], [319, 3, 1, "", "test_dissolveLinerIntoClad"], [319, 3, 1, "", "test_dissolveWireIntoCoolant"]], "armi.reactor.converters.tests.test_blockConverter.TestToCircles": [[319, 3, 1, "", "test_fromHex"], [319, 3, 1, "", "test_fromRingOfRods"]], "armi.reactor.converters.tests.test_geometryConverters": [[320, 2, 1, "", "TestEdgeAssemblyChanger"], [320, 2, 1, "", "TestGeometryConverters"], [320, 2, 1, "", "TestHexToRZConverter"], [320, 2, 1, "", "TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger": [[320, 3, 1, "", "test_edgeAssemblies"]], "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters": [[320, 3, 1, "", "test_addRing"], [320, 3, 1, "", "test_getAssembliesInSector"], [320, 3, 1, "", "test_setNumberOfFuelAssems"]], "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter": [[320, 3, 1, "", "test_convert"], [320, 3, 1, "", "test_createHomogenizedRZTBlock"]], "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger": [[320, 3, 1, "", "test_growToFullCoreFromThirdCore"], [320, 3, 1, "", "test_initNewFullReactor"], [320, 3, 1, "", "test_skipGrowToFullCoreWhenAlreadyFullCore"]], "armi.reactor.converters.tests.test_meshConverters": [[321, 2, 1, "", "TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter": [[321, 3, 1, "", "test_meshByRingCompositionAxialBinsLargeCore"], [321, 3, 1, "", "test_meshByRingCompositionAxialBinsSmallCore"], [321, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesLargeCore"], [321, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesSmallCore"], [321, 3, 1, "", "test_meshByRingCompositionAxialFlagsLargeCore"], [321, 3, 1, "", "test_meshByRingCompositionAxialFlagsSmallCore"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters": [[322, 2, 1, "", "MassConservationTests"], [322, 2, 1, "", "TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests": [[322, 3, 1, "", "test_adjustSmearDensity"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters": [[322, 3, 1, "", "test_adjustCladThicknessByID"], [322, 3, 1, "", "test_adjustCladThicknessByOD"]], "armi.reactor.converters.tests.test_uniformMesh": [[323, 2, 1, "", "DummyFluxOptions"], [323, 2, 1, "", "TestAssemblyUniformMesh"], [323, 2, 1, "", "TestConverterFactory"], [323, 2, 1, "", "TestGammaUniformMesh"], [323, 2, 1, "", "TestParamConversion"], [323, 2, 1, "", "TestUniformMesh"], [323, 2, 1, "", "TestUniformMeshComponents"], [323, 2, 1, "", "TestUniformMeshGenerator"], [323, 2, 1, "", "TestUniformMeshNonUniformAssemFlags"], [323, 1, 1, "", "applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh": [[323, 3, 1, "", "test_clearAssemblyState"], [323, 3, 1, "", "test_makeAssemUniformMeshParamMappingSameMesh"], [323, 3, 1, "", "test_makeAssemWithUniformMesh"], [323, 3, 1, "", "test_makeAssemWithUniformMeshSubmesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory": [[323, 3, 1, "", "test_converterFactory"]], "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh": [[323, 3, 1, "", "test_applyStateToOriginal"], [323, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion": [[323, 3, 1, "", "test_setStateFromOverlaps"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh": [[323, 3, 1, "", "test_applyStateToOriginal"], [323, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents": [[323, 3, 1, "", "test_blueprintCopy"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator": [[323, 3, 1, "", "test_computeAverageAxialMesh"], [323, 3, 1, "", "test_filterMesh"], [323, 3, 1, "", "test_filteredTopAndBottom"], [323, 3, 1, "", "test_generateCommonMesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags": [[323, 3, 1, "", "test_reactorConversion"]], "armi.reactor.converters.uniformMesh": [[324, 2, 1, "", "GammaUniformMeshConverter"], [324, 2, 1, "", "NeutronicsUniformMeshConverter"], [324, 2, 1, "", "ParamMapper"], [324, 2, 1, "", "UniformMeshGenerator"], [324, 2, 1, "", "UniformMeshGeometryConverter"], [324, 1, 1, "", "converterFactory"], [324, 1, 1, "", "setNumberDensitiesFromOverlaps"]], "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter": [[324, 4, 1, "", "blockParamMappingCategories"], [324, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter": [[324, 4, 1, "", "blockParamMappingCategories"], [324, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.ParamMapper": [[324, 3, 1, "", "paramGetter"], [324, 3, 1, "", "paramSetter"]], "armi.reactor.converters.uniformMesh.UniformMeshGenerator": [[324, 3, 1, "", "generateCommonMesh"]], "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter": [[324, 3, 1, "", "applyStateToOriginal"], [324, 4, 1, "", "blockParamMappingCategories"], [324, 3, 1, "", "clearStateOnAssemblies"], [324, 3, 1, "", "convert"], [324, 3, 1, "", "initNewReactor"], [324, 3, 1, "", "makeAssemWithUniformMesh"], [324, 3, 1, "", "plotConvertedReactor"], [324, 4, 1, "", "reactorParamMappingCategories"], [324, 3, 1, "", "reset"], [324, 3, 1, "", "setAssemblyStateFromOverlaps"], [324, 3, 1, "", "updateReactionRates"]], "armi.reactor.flags": [[325, 2, 1, "", "Flags"], [325, 7, 1, "", "InvalidFlagsError"]], "armi.reactor.flags.Flags": [[325, 4, 1, "", "A"], [325, 4, 1, "", "ACLP"], [325, 4, 1, "", "ANNULAR"], [325, 4, 1, "", "AXIAL"], [325, 4, 1, "", "B"], [325, 4, 1, "", "BATCHMASSADDITION"], [325, 4, 1, "", "BLANKET"], [325, 4, 1, "", "BOND"], [325, 4, 1, "", "BOOSTER"], [325, 4, 1, "", "C"], [325, 4, 1, "", "CLAD"], [325, 4, 1, "", "CONTROL"], [325, 4, 1, "", "COOLANT"], [325, 4, 1, "", "CORE"], [325, 4, 1, "", "CORE_BARREL"], [325, 4, 1, "", "D"], [325, 4, 1, "", "DEPLETABLE"], [325, 4, 1, "", "DRIVER"], [325, 4, 1, "", "DSPACERINSIDE"], [325, 4, 1, "", "DUCT"], [325, 4, 1, "", "DUMMY"], [325, 4, 1, "", "E"], [325, 4, 1, "", "FEED"], [325, 4, 1, "", "FISSION_CHAMBER"], [325, 4, 1, "", "FUEL"], [325, 4, 1, "", "GAP"], [325, 4, 1, "", "GRID_PLATE"], [325, 4, 1, "", "GUIDE_TUBE"], [325, 4, 1, "", "HANDLING_SOCKET"], [325, 4, 1, "", "HIGH"], [325, 4, 1, "", "IGNITER"], [325, 4, 1, "", "INLET_NOZZLE"], [325, 4, 1, "", "INNER"], [325, 4, 1, "", "INTERCOOLANT"], [325, 4, 1, "", "INTERDUCTCOOLANT"], [325, 4, 1, "", "LINER"], [325, 4, 1, "", "LOAD_PAD"], [325, 4, 1, "", "LOW"], [325, 4, 1, "", "LOWER"], [325, 4, 1, "", "MATERIAL"], [325, 4, 1, "", "MEDIUM"], [325, 4, 1, "", "MIDDLE"], [325, 4, 1, "", "MODERATOR"], [325, 4, 1, "", "MOVEABLE"], [325, 4, 1, "", "MOX"], [325, 4, 1, "", "OUTER"], [325, 4, 1, "", "PIN"], [325, 4, 1, "", "PLENUM"], [325, 4, 1, "", "POISON"], [325, 4, 1, "", "PRIMARY"], [325, 4, 1, "", "RADIAL"], [325, 4, 1, "", "REACTOR"], [325, 4, 1, "", "REFLECTOR"], [325, 4, 1, "", "SECONDARY"], [325, 4, 1, "", "SHIELD"], [325, 4, 1, "", "SHIELD_BLOCK"], [325, 4, 1, "", "SHUTDOWN"], [325, 4, 1, "", "SKID"], [325, 4, 1, "", "SLUG"], [325, 4, 1, "", "STARTER"], [325, 4, 1, "", "STRUCTURE"], [325, 4, 1, "", "TARGET"], [325, 4, 1, "", "TERTIARY"], [325, 4, 1, "", "TEST"], [325, 4, 1, "", "ULTIMATE"], [325, 4, 1, "", "UPPER"], [325, 4, 1, "", "VOID"], [325, 4, 1, "", "WIRE"], [325, 3, 1, "", "fromString"], [325, 3, 1, "", "fromStringIgnoreErrors"], [325, 3, 1, "", "toString"]], "armi.reactor.geometry": [[326, 2, 1, "", "BoundaryType"], [326, 2, 1, "", "DomainType"], [326, 2, 1, "", "GeomType"], [326, 2, 1, "", "SymmetryType"], [326, 1, 1, "", "checkValidGeomSymmetryCombo"]], "armi.reactor.geometry.BoundaryType": [[326, 4, 1, "", "NO_SYMMETRY"], [326, 4, 1, "", "PERIODIC"], [326, 4, 1, "", "REFLECTIVE"], [326, 3, 1, "", "fromAny"], [326, 3, 1, "", "fromStr"], [326, 3, 1, "", "hasSymmetry"], [326, 5, 1, "", "label"]], "armi.reactor.geometry.DomainType": [[326, 4, 1, "", "EIGHTH_CORE"], [326, 4, 1, "", "FULL_CORE"], [326, 4, 1, "", "NULL"], [326, 4, 1, "", "QUARTER_CORE"], [326, 4, 1, "", "SIXTEENTH_CORE"], [326, 4, 1, "", "THIRD_CORE"], [326, 3, 1, "", "fromAny"], [326, 3, 1, "", "fromStr"], [326, 5, 1, "", "label"], [326, 3, 1, "", "symmetryFactor"]], "armi.reactor.geometry.GeomType": [[326, 4, 1, "", "CARTESIAN"], [326, 4, 1, "", "HEX"], [326, 4, 1, "", "RZ"], [326, 4, 1, "", "RZT"], [326, 3, 1, "", "fromAny"], [326, 3, 1, "", "fromStr"], [326, 5, 1, "", "label"]], "armi.reactor.geometry.SymmetryType": [[326, 4, 1, "", "VALID_SYMMETRY"], [326, 3, 1, "", "checkValidSymmetry"], [326, 3, 1, "", "createValidSymmetryStrings"], [326, 3, 1, "", "fromAny"], [326, 3, 1, "", "fromStr"], [326, 3, 1, "", "symmetryFactor"]], "armi.reactor.grids": [[328, 0, 0, "-", "axial"], [329, 0, 0, "-", "cartesian"], [330, 0, 0, "-", "constants"], [331, 0, 0, "-", "grid"], [332, 0, 0, "-", "hexagonal"], [333, 0, 0, "-", "locations"], [327, 1, 1, "", "locatorLabelToIndices"], [334, 0, 0, "-", "structuredgrid"], [335, 0, 0, "-", "thetarz"]], "armi.reactor.grids.axial": [[328, 2, 1, "", "AxialGrid"], [328, 1, 1, "", "axialUnitGrid"]], "armi.reactor.grids.axial.AxialGrid": [[328, 4, 1, "", "armiObject"], [328, 3, 1, "", "fromNCells"], [328, 3, 1, "", "getIndicesFromRingAndPos"], [328, 3, 1, "", "getMinimumRings"], [328, 3, 1, "", "getPositionsInRing"], [328, 3, 1, "", "getSymmetricEquivalents"], [328, 3, 1, "", "locatorInDomain"], [328, 3, 1, "", "overlapsWhichSymmetryLine"], [328, 5, 1, "", "pitch"]], "armi.reactor.grids.cartesian": [[329, 2, 1, "", "CartesianGrid"]], "armi.reactor.grids.cartesian.CartesianGrid": [[329, 4, 1, "", "armiObject"], [329, 3, 1, "", "changePitch"], [329, 3, 1, "", "fromRectangle"], [329, 3, 1, "", "getIndicesFromRingAndPos"], [329, 3, 1, "", "getMinimumRings"], [329, 3, 1, "", "getPositionsInRing"], [329, 3, 1, "", "getRingPos"], [329, 3, 1, "", "getSymmetricEquivalents"], [329, 3, 1, "", "locatorInDomain"], [329, 3, 1, "", "overlapsWhichSymmetryLine"], [329, 5, 1, "", "pitch"]], "armi.reactor.grids.grid": [[331, 2, 1, "", "Grid"]], "armi.reactor.grids.grid.Grid": [[331, 4, 1, "", "armiObject"], [331, 3, 1, "", "backUp"], [331, 5, 1, "", "geomType"], [331, 3, 1, "", "getCellBase"], [331, 3, 1, "", "getCellTop"], [331, 3, 1, "", "getCoordinates"], [331, 3, 1, "", "getLabel"], [331, 3, 1, "", "getSymmetricEquivalents"], [331, 5, 1, "", "isAxialOnly"], [331, 3, 1, "", "items"], [331, 3, 1, "", "locatorInDomain"], [331, 3, 1, "", "overlapsWhichSymmetryLine"], [331, 3, 1, "", "reduce"], [331, 3, 1, "", "restoreBackup"], [331, 5, 1, "", "symmetry"]], "armi.reactor.grids.hexagonal": [[332, 2, 1, "", "HexGrid"]], "armi.reactor.grids.hexagonal.HexGrid": [[332, 3, 1, "", "allPositionsInThird"], [332, 4, 1, "", "armiObject"], [332, 3, 1, "", "changePitch"], [332, 3, 1, "", "fromPitch"], [332, 3, 1, "", "generateSortedHexLocationList"], [332, 3, 1, "", "getIndicesFromRingAndPos"], [332, 3, 1, "", "getLabel"], [332, 3, 1, "", "getMinimumRings"], [332, 3, 1, "", "getNeighboringCellIndices"], [332, 3, 1, "", "getPositionsInRing"], [332, 3, 1, "", "getRingPos"], [332, 3, 1, "", "getSymmetricEquivalents"], [332, 3, 1, "", "indicesToRingPos"], [332, 3, 1, "", "isInFirstThird"], [332, 3, 1, "", "locatorInDomain"], [332, 3, 1, "", "overlapsWhichSymmetryLine"], [332, 5, 1, "", "pitch"], [332, 3, 1, "", "triangleCoords"]], "armi.reactor.grids.locations": [[333, 2, 1, "", "CoordinateLocation"], [333, 2, 1, "", "IndexLocation"], [333, 2, 1, "", "LocationBase"], [333, 2, 1, "", "MultiIndexLocation"], [333, 1, 1, "", "addingIsValid"]], "armi.reactor.grids.locations.CoordinateLocation": [[333, 3, 1, "", "getCompleteIndices"], [333, 3, 1, "", "getGlobalCellBase"], [333, 3, 1, "", "getGlobalCellTop"], [333, 3, 1, "", "getLocalCoordinates"]], "armi.reactor.grids.locations.IndexLocation": [[333, 3, 1, "", "detachedCopy"], [333, 3, 1, "", "distanceTo"], [333, 3, 1, "", "getCompleteIndices"], [333, 3, 1, "", "getGlobalCellBase"], [333, 3, 1, "", "getGlobalCellTop"], [333, 3, 1, "", "getGlobalCoordinates"], [333, 3, 1, "", "getLocalCoordinates"], [333, 3, 1, "", "getRingPos"], [333, 3, 1, "", "getSymmetricEquivalents"], [333, 5, 1, "", "indices"], [333, 5, 1, "", "parentLocation"]], "armi.reactor.grids.locations.LocationBase": [[333, 3, 1, "", "associate"], [333, 5, 1, "", "grid"], [333, 5, 1, "", "i"], [333, 5, 1, "", "indices"], [333, 5, 1, "", "j"], [333, 5, 1, "", "k"]], "armi.reactor.grids.locations.MultiIndexLocation": [[333, 3, 1, "", "append"], [333, 3, 1, "", "associate"], [333, 3, 1, "", "detachedCopy"], [333, 3, 1, "", "extend"], [333, 3, 1, "", "getCompleteIndices"], [333, 5, 1, "", "indices"], [333, 3, 1, "", "pop"]], "armi.reactor.grids.structuredgrid": [[334, 2, 1, "", "GridParameters"], [334, 2, 1, "", "StructuredGrid"]], "armi.reactor.grids.structuredgrid.GridParameters": [[334, 4, 1, "", "bounds"], [334, 4, 1, "", "geomType"], [334, 4, 1, "", "offset"], [334, 4, 1, "", "symmetry"], [334, 4, 1, "", "unitStepLimits"], [334, 4, 1, "", "unitSteps"]], "armi.reactor.grids.structuredgrid.StructuredGrid": [[334, 4, 1, "", "armiObject"], [334, 3, 1, "", "backUp"], [334, 3, 1, "", "getAboveAndBelowCellIndices"], [334, 3, 1, "", "getAllIndices"], [334, 3, 1, "", "getBounds"], [334, 3, 1, "", "getCellBase"], [334, 3, 1, "", "getCellTop"], [334, 3, 1, "", "getCoordinates"], [334, 3, 1, "", "getIndexBounds"], [334, 3, 1, "", "getIndicesFromRingAndPos"], [334, 3, 1, "", "getLocatorFromRingAndPos"], [334, 3, 1, "", "getMinimumRings"], [334, 3, 1, "", "getNeighboringCellIndices"], [334, 3, 1, "", "getPositionsInRing"], [334, 3, 1, "", "getRingPos"], [334, 5, 1, "", "isAxialOnly"], [334, 3, 1, "", "items"], [334, 5, 1, "", "offset"], [334, 5, 1, "", "pitch"], [334, 3, 1, "", "reduce"], [334, 3, 1, "", "restoreBackup"]], "armi.reactor.grids.thetarz": [[335, 2, 1, "", "ThetaRZGrid"]], "armi.reactor.grids.thetarz.ThetaRZGrid": [[335, 4, 1, "", "armiObject"], [335, 3, 1, "", "fromGeom"], [335, 3, 1, "", "getCoordinates"], [335, 3, 1, "", "getIndicesFromRingAndPos"], [335, 3, 1, "", "getMinimumRings"], [335, 3, 1, "", "getPositionsInRing"], [335, 3, 1, "", "getRingPos"], [335, 3, 1, "", "getSymmetricEquivalents"], [335, 3, 1, "", "indicesOfBounds"], [335, 3, 1, "", "locatorInDomain"], [335, 3, 1, "", "overlapsWhichSymmetryLine"], [335, 3, 1, "", "pitch"]], "armi.reactor.parameters": [[337, 0, 0, "-", "exceptions"], [338, 0, 0, "-", "parameterCollections"], [339, 0, 0, "-", "parameterDefinitions"], [336, 1, 1, "", "reset"], [340, 0, 0, "-", "resolveCollections"]], "armi.reactor.parameters.exceptions": [[337, 7, 1, "", "ParameterDefinitionError"], [337, 7, 1, "", "ParameterError"], [337, 7, 1, "", "UnknownParameterError"]], "armi.reactor.parameters.parameterCollections": [[338, 6, 1, "", "GLOBAL_SERIAL_NUM"], [338, 2, 1, "", "ParameterCollection"], [338, 1, 1, "", "applyAllParameters"], [338, 1, 1, "", "collectPluginParameters"]], "armi.reactor.parameters.parameterCollections.ParameterCollection": [[338, 3, 1, "", "applyParameters"], [338, 3, 1, "", "backUp"], [338, 3, 1, "", "get"], [338, 3, 1, "", "getSyncData"], [338, 3, 1, "", "items"], [338, 3, 1, "", "keys"], [338, 4, 1, "", "pDefs"], [338, 5, 1, "", "paramDefs"], [338, 3, 1, "", "restoreBackup"], [338, 4, 1, "", "serialNum"], [338, 3, 1, "", "update"], [338, 3, 1, "", "values"]], "armi.reactor.parameters.parameterDefinitions": [[339, 2, 1, "", "Category"], [339, 2, 1, "", "NoDefault"], [339, 2, 1, "", "ParamLocation"], [339, 2, 1, "", "Parameter"], [339, 2, 1, "", "ParameterBuilder"], [339, 2, 1, "", "ParameterDefinitionCollection"], [339, 2, 1, "", "Serializer"], [339, 1, 1, "", "isNumpyArray"]], "armi.reactor.parameters.parameterDefinitions.Category": [[339, 4, 1, "", "assignInBlueprints"], [339, 4, 1, "", "cumulative"], [339, 4, 1, "", "cumulativeOverCycle"], [339, 4, 1, "", "depletion"], [339, 4, 1, "", "detailedAxialExpansion"], [339, 4, 1, "", "fluxQuantities"], [339, 4, 1, "", "gamma"], [339, 4, 1, "", "multiGroupQuantities"], [339, 4, 1, "", "neutronics"], [339, 4, 1, "", "pinQuantities"], [339, 4, 1, "", "reactivityCoefficients"], [339, 4, 1, "", "retainOnReplacement"], [339, 4, 1, "", "thermalHydraulics"]], "armi.reactor.parameters.parameterDefinitions.ParamLocation": [[339, 4, 1, "", "AVERAGE"], [339, 4, 1, "", "BOTTOM"], [339, 4, 1, "", "CENTROID"], [339, 4, 1, "", "CHILDREN"], [339, 4, 1, "", "CORNERS"], [339, 4, 1, "", "EDGES"], [339, 4, 1, "", "MAX"], [339, 4, 1, "", "TOP"], [339, 4, 1, "", "VOLUME_INTEGRATED"]], "armi.reactor.parameters.parameterDefinitions.Parameter": [[339, 4, 1, "", "assigned"], [339, 3, 1, "", "atLocation"], [339, 3, 1, "", "backUp"], [339, 4, 1, "", "categories"], [339, 4, 1, "", "collectionType"], [339, 4, 1, "", "default"], [339, 4, 1, "", "description"], [339, 4, 1, "", "fieldName"], [339, 4, 1, "", "location"], [339, 4, 1, "", "name"], [339, 3, 1, "", "restoreBackup"], [339, 4, 1, "", "saveToDB"], [339, 4, 1, "", "serializer"], [339, 3, 1, "", "setter"], [339, 4, 1, "", "units"]], "armi.reactor.parameters.parameterDefinitions.ParameterBuilder": [[339, 3, 1, "", "associateParameterDefinitionCollection"], [339, 3, 1, "", "defParam"]], "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection": [[339, 3, 1, "", "add"], [339, 3, 1, "", "atLocation"], [339, 3, 1, "", "byNameAndCollectionType"], [339, 3, 1, "", "byNameAndType"], [339, 5, 1, "", "categories"], [339, 3, 1, "", "createBuilder"], [339, 3, 1, "", "extend"], [339, 3, 1, "", "forType"], [339, 3, 1, "", "inCategory"], [339, 3, 1, "", "items"], [339, 3, 1, "", "lock"], [339, 5, 1, "", "locked"], [339, 5, 1, "", "names"], [339, 3, 1, "", "resetAssignmentFlag"], [339, 3, 1, "", "setAssignmentFlag"], [339, 3, 1, "", "since"], [339, 3, 1, "", "toWriteToDB"], [339, 3, 1, "", "unchanged_since"]], "armi.reactor.parameters.parameterDefinitions.Serializer": [[339, 3, 1, "", "pack"], [339, 3, 1, "", "unpack"], [339, 4, 1, "", "version"]], "armi.reactor.parameters.resolveCollections": [[340, 2, 1, "", "ResolveParametersMeta"]], "armi.reactor.reactorParameters": [[341, 1, 1, "", "defineCoreParameters"], [341, 1, 1, "", "defineReactorParameters"]], "armi.reactor.reactors": [[342, 2, 1, "", "Core"], [342, 2, 1, "", "Reactor"], [342, 1, 1, "", "factory"], [342, 1, 1, "", "loadFromCs"]], "armi.reactor.reactors.Core": [[342, 3, 1, "", "add"], [342, 3, 1, "", "addMoreNodes"], [342, 3, 1, "", "buildCircularRingDictionary"], [342, 3, 1, "", "buildManualZones"], [342, 3, 1, "", "calcBlockMaxes"], [342, 3, 1, "", "countBlocksWithFlags"], [342, 3, 1, "", "countFuelAxialBlocks"], [342, 3, 1, "", "createAssemblyOfType"], [342, 3, 1, "", "createFreshFeed"], [342, 3, 1, "", "findAllAxialMeshPoints"], [342, 3, 1, "", "findAllAziMeshPoints"], [342, 3, 1, "", "findAllMeshPoints"], [342, 3, 1, "", "findAllRadMeshPoints"], [342, 3, 1, "", "findAxialMeshIndexOf"], [342, 3, 1, "", "findNeighbors"], [342, 3, 1, "", "genAssembliesAddedThisCycle"], [342, 3, 1, "", "genBlocksByLocName"], [342, 5, 1, "", "geomType"], [342, 3, 1, "", "getAllNuclidesIn"], [342, 3, 1, "", "getAllXsSuffixes"], [342, 3, 1, "", "getAssemblies"], [342, 3, 1, "", "getAssembliesInCircularRing"], [342, 3, 1, "", "getAssembliesInRing"], [342, 3, 1, "", "getAssembliesInSquareOrHexRing"], [342, 3, 1, "", "getAssembliesOfType"], [342, 3, 1, "", "getAssembliesOnSymmetryLine"], [342, 3, 1, "", "getAssembly"], [342, 3, 1, "", "getAssemblyByName"], [342, 3, 1, "", "getAssemblyPitch"], [342, 3, 1, "", "getAssemblyWithAssemNum"], [342, 3, 1, "", "getAssemblyWithStringLocation"], [342, 3, 1, "", "getAvgTemp"], [342, 3, 1, "", "getBlockByName"], [342, 3, 1, "", "getBlocks"], [342, 3, 1, "", "getBlocksByIndices"], [342, 3, 1, "", "getCoreRadius"], [342, 3, 1, "", "getFirstAssembly"], [342, 3, 1, "", "getFirstBlock"], [342, 3, 1, "", "getFirstFuelBlockAxialNode"], [342, 3, 1, "", "getFluxVector"], [342, 3, 1, "", "getFuelBottomHeight"], [342, 3, 1, "", "getLocationContents"], [342, 3, 1, "", "getMaxAssembliesInHexRing"], [342, 3, 1, "", "getMaxBlockParam"], [342, 3, 1, "", "getMaxNumPins"], [342, 3, 1, "", "getMinimumPercentFluxInFuel"], [342, 3, 1, "", "getNozzleTypes"], [342, 3, 1, "", "getNuclideCategories"], [342, 3, 1, "", "getNumAssembliesWithAllRingsFilledOut"], [342, 3, 1, "", "getNumEnergyGroups"], [342, 3, 1, "", "getNumHexRings"], [342, 3, 1, "", "getNumRings"], [342, 3, 1, "", "getScalarEvolution"], [342, 3, 1, "", "getTotalBlockParam"], [342, 3, 1, "", "growToFullCore"], [342, 5, 1, "", "isFullCore"], [342, 5, 1, "", "lib"], [342, 3, 1, "", "locateAllAssemblies"], [342, 3, 1, "", "makeLocationLookup"], [342, 3, 1, "", "normalizeInternalBookeeping"], [342, 3, 1, "", "normalizeNames"], [342, 4, 1, "", "pDefs"], [342, 4, 1, "", "paramCollectionType"], [342, 5, 1, "", "powerMultiplier"], [342, 3, 1, "", "processLoading"], [342, 5, 1, "", "r"], [342, 5, 1, "", "refAssem"], [342, 3, 1, "", "regenAssemblyLists"], [342, 3, 1, "", "removeAllAssemblies"], [342, 3, 1, "", "removeAssembliesInRing"], [342, 3, 1, "", "removeAssembly"], [342, 3, 1, "", "saveAllFlux"], [342, 3, 1, "", "setBlockMassParams"], [342, 3, 1, "", "setMoveList"], [342, 3, 1, "", "setOptionsFromCs"], [342, 3, 1, "", "setPitchUniform"], [342, 3, 1, "", "setPowerFromDensity"], [342, 3, 1, "", "setPowerIfNecessary"], [342, 3, 1, "", "sortAssemsByRing"], [342, 3, 1, "", "summarizeNuclideCategories"], [342, 3, 1, "", "summarizeReactorStats"], [342, 5, 1, "", "symmetry"], [342, 3, 1, "", "updateAxialMesh"]], "armi.reactor.reactors.Reactor": [[342, 3, 1, "", "add"], [342, 3, 1, "", "incrementAssemNum"], [342, 3, 1, "", "normalizeNames"], [342, 4, 1, "", "pDefs"], [342, 4, 1, "", "paramCollectionType"]], "armi.reactor.systemLayoutInput": [[343, 2, 1, "", "SystemLayoutInput"]], "armi.reactor.systemLayoutInput.SystemLayoutInput": [[343, 4, 1, "", "ROOT_TAG"], [343, 3, 1, "", "fromReactor"], [343, 3, 1, "", "growToFullCore"], [343, 3, 1, "", "loadFromCs"], [343, 3, 1, "", "modifyEqPaths"], [343, 3, 1, "", "readGeomFromFile"], [343, 3, 1, "", "readGeomFromStream"], [343, 3, 1, "", "toGridBlueprints"], [343, 3, 1, "", "writeGeom"]], "armi.reactor.tests": [[345, 0, 0, "-", "test_assemblies"], [346, 0, 0, "-", "test_blocks"], [347, 0, 0, "-", "test_components"], [348, 0, 0, "-", "test_composites"], [349, 0, 0, "-", "test_flags"], [350, 0, 0, "-", "test_geometry"], [351, 0, 0, "-", "test_parameters"], [352, 0, 0, "-", "test_reactors"], [353, 0, 0, "-", "test_rz_reactors"], [354, 0, 0, "-", "test_zones"]], "armi.reactor.tests.test_assemblies": [[345, 2, 1, "", "AnnularFuelTestCase"], [345, 2, 1, "", "AssemblyInReactor_TestCase"], [345, 2, 1, "", "Assembly_TestCase"], [345, 2, 1, "", "MaterialInAssembly_TestCase"], [345, 1, 1, "", "buildTestAssemblies"], [345, 1, 1, "", "makeTestAssembly"]], "armi.reactor.tests.test_assemblies.AnnularFuelTestCase": [[345, 3, 1, "", "test_areaCheck"]], "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase": [[345, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"], [345, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "armi.reactor.tests.test_assemblies.Assembly_TestCase": [[345, 3, 1, "", "test_add"], [345, 3, 1, "", "test_adjustResolution"], [345, 3, 1, "", "test_append"], [345, 3, 1, "", "test_assem_block_types"], [345, 3, 1, "", "test_assem_hex_type"], [345, 3, 1, "", "test_averagePlenumTemperature"], [345, 3, 1, "", "test_calcAvgParam"], [345, 3, 1, "", "test_calcTotalParam"], [345, 3, 1, "", "test_calculateZCoords"], [345, 3, 1, "", "test_carestianCoordinates"], [345, 3, 1, "", "test_countBlocksOfType"], [345, 3, 1, "", "test_doubleResolution"], [345, 3, 1, "", "test_duplicate"], [345, 3, 1, "", "test_extend"], [345, 3, 1, "", "test_getAge"], [345, 3, 1, "", "test_getArea"], [345, 3, 1, "", "test_getAxialMesh"], [345, 3, 1, "", "test_getBlockData"], [345, 3, 1, "", "test_getBlocks"], [345, 3, 1, "", "test_getBlocksAndZ"], [345, 3, 1, "", "test_getBlocksBetweenElevations"], [345, 3, 1, "", "test_getDim"], [345, 3, 1, "", "test_getDominantMaterial"], [345, 3, 1, "", "test_getElevationsMatchingParamValue"], [345, 3, 1, "", "test_getFirstBlock"], [345, 3, 1, "", "test_getFirstBlockByType"], [345, 3, 1, "", "test_getFissileMass"], [345, 3, 1, "", "test_getHeight"], [345, 3, 1, "", "test_getLocation"], [345, 3, 1, "", "test_getMass"], [345, 3, 1, "", "test_getMaxParam"], [345, 3, 1, "", "test_getMaxUraniumMassEnrich"], [345, 3, 1, "", "test_getName"], [345, 3, 1, "", "test_getNum"], [345, 3, 1, "", "test_getParamValuesAtZ"], [345, 3, 1, "", "test_getPuFrac"], [345, 3, 1, "", "test_getReactiveHeight"], [345, 3, 1, "", "test_getTotalHeight"], [345, 3, 1, "", "test_getVolume"], [345, 3, 1, "", "test_getZrFrac"], [345, 3, 1, "", "test_hasContinuousCoolantChannel"], [345, 3, 1, "", "test_hasFlags"], [345, 3, 1, "", "test_iter"], [345, 3, 1, "", "test_iteration"], [345, 3, 1, "", "test_len"], [345, 3, 1, "", "test_makeAxialSnapList"], [345, 3, 1, "", "test_moveTo"], [345, 3, 1, "", "test_notesParameter"], [345, 3, 1, "", "test_pinPlenumVolume"], [345, 3, 1, "", "test_reattach"], [345, 3, 1, "", "test_reestablishBlockOrder"], [345, 3, 1, "", "test_renameBlocksAccordingToAssemblyNum"], [345, 3, 1, "", "test_rotate"], [345, 3, 1, "", "test_snapAxialMeshToReference"], [345, 3, 1, "", "test_updateFromAssembly"]], "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase": [[345, 3, 1, "", "test_UThZrMaterial"], [345, 3, 1, "", "test_sortNoLocator"]], "armi.reactor.tests.test_blocks": [[346, 2, 1, "", "Block_TestCase"], [346, 2, 1, "", "CartesianBlock_TestCase"], [346, 2, 1, "", "HexBlock_TestCase"], [346, 2, 1, "", "MassConservationTests"], [346, 2, 1, "", "TestDetailedNDensUpdate"], [346, 2, 1, "", "TestNegativeVolume"], [346, 2, 1, "", "ThRZBlock_TestCase"], [346, 1, 1, "", "applyDummyData"], [346, 1, 1, "", "buildSimpleFuelBlock"], [346, 1, 1, "", "getComponentData"], [346, 1, 1, "", "loadTestBlock"]], "armi.reactor.tests.test_blocks.Block_TestCase": [[346, 3, 1, "", "test_100_getPinPitch"], [346, 3, 1, "", "test_101_getPitch"], [346, 3, 1, "", "test_102_setPitch"], [346, 3, 1, "", "test_106_getAreaFractions"], [346, 3, 1, "", "test_27b_setBuGroup"], [346, 3, 1, "", "test_add"], [346, 3, 1, "", "test_adjustDensity"], [346, 3, 1, "", "test_adjustUEnrich"], [346, 3, 1, "", "test_breakFuelComponentsIntoIndividuals"], [346, 3, 1, "", "test_clearDensity"], [346, 3, 1, "", "test_completeInitialLoading"], [346, 3, 1, "", "test_consistentAreaWithOverlappingComponents"], [346, 3, 1, "", "test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"], [346, 3, 1, "", "test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"], [346, 3, 1, "", "test_duplicate"], [346, 3, 1, "", "test_expandAllElementalsToIsotopics"], [346, 3, 1, "", "test_expandElementalToIsotopics"], [346, 3, 1, "", "test_getComponent"], [346, 3, 1, "", "test_getComponentAreaFrac"], [346, 3, 1, "", "test_getComponentByName"], [346, 3, 1, "", "test_getComponentNames"], [346, 3, 1, "", "test_getComponents"], [346, 3, 1, "", "test_getComponentsInLinkedOrder"], [346, 3, 1, "", "test_getComponentsOfMaterial"], [346, 3, 1, "", "test_getComponentsOfShape"], [346, 3, 1, "", "test_getDimensions"], [346, 3, 1, "", "test_getFissileMassEnrich"], [346, 3, 1, "", "test_getFlowArea"], [346, 3, 1, "", "test_getFlowAreaPerPin"], [346, 3, 1, "", "test_getHMDens"], [346, 3, 1, "", "test_getHydraulicDiameter"], [346, 3, 1, "", "test_getMass"], [346, 3, 1, "", "test_getMasses"], [346, 3, 1, "", "test_getMfp"], [346, 3, 1, "", "test_getMicroSuffix"], [346, 3, 1, "", "test_getNumComponents"], [346, 3, 1, "", "test_getNumPins"], [346, 3, 1, "", "test_getNumberDensity"], [346, 3, 1, "", "test_getNumberOfAtoms"], [346, 3, 1, "", "test_getPlenumPin"], [346, 3, 1, "", "test_getPu"], [346, 3, 1, "", "test_getReactionRates"], [346, 3, 1, "", "test_getSmearDensity"], [346, 3, 1, "", "test_getSmearDensityMultipleLiner"], [346, 3, 1, "", "test_getSortedComponentsInsideOfComponentClad"], [346, 3, 1, "", "test_getSortedComponentsInsideOfComponentDuct"], [346, 3, 1, "", "test_getTotalMass"], [346, 3, 1, "", "test_getTotalNDens"], [346, 3, 1, "", "test_getType"], [346, 3, 1, "", "test_getUraniumMassEnrich"], [346, 3, 1, "", "test_getUraniumNumEnrich"], [346, 3, 1, "", "test_getVolumeFractionWithoutParent"], [346, 3, 1, "", "test_getVolumeFractionsWithZeroHeight"], [346, 3, 1, "", "test_getWettedPerimeter"], [346, 3, 1, "", "test_getXsType"], [346, 3, 1, "", "test_hasComponents"], [346, 3, 1, "", "test_hasFlags"], [346, 3, 1, "", "test_hasPinPitch"], [346, 3, 1, "", "test_homogenizedMixture"], [346, 3, 1, "", "test_mergeWithBlock"], [346, 3, 1, "", "test_pinMgFluxes"], [346, 3, 1, "", "test_removeMass"], [346, 3, 1, "", "test_replaceBlockWithBlock"], [346, 3, 1, "", "test_rotatePins"], [346, 3, 1, "", "test_setBuLimitInfo"], [346, 3, 1, "", "test_setImportantParams"], [346, 3, 1, "", "test_setLinPowByPin"], [346, 3, 1, "", "test_setLocation"], [346, 3, 1, "", "test_setMass"], [346, 3, 1, "", "test_setNumberDensities"], [346, 3, 1, "", "test_setNumberDensity"], [346, 3, 1, "", "test_setPitch"], [346, 3, 1, "", "test_setType"], [346, 3, 1, "", "test_setZeroHeight"], [346, 3, 1, "", "test_timeNodeParams"]], "armi.reactor.tests.test_blocks.CartesianBlock_TestCase": [[346, 4, 1, "", "PITCH"], [346, 3, 1, "", "test_getCartesianGrid"], [346, 3, 1, "", "test_getHydraulicDiameter"], [346, 3, 1, "", "test_getPitchHomogeneousBlock"], [346, 3, 1, "", "test_getPitchSquare"], [346, 3, 1, "", "test_getWettedPerimeter"]], "armi.reactor.tests.test_blocks.HexBlock_TestCase": [[346, 3, 1, "", "test_block_dims"], [346, 3, 1, "", "test_component_type"], [346, 3, 1, "", "test_coords"], [346, 3, 1, "", "test_getArea"], [346, 3, 1, "", "test_getDuctPitch"], [346, 3, 1, "", "test_getNumPins"], [346, 3, 1, "", "test_getPinCenterFlatToFlat"], [346, 3, 1, "", "test_getPinCoords"], [346, 3, 1, "", "test_getPitchHomogeneousBlock"], [346, 3, 1, "", "test_gridCreation"], [346, 3, 1, "", "test_gridNotCreatedMultipleMultiplicities"], [346, 3, 1, "", "test_gridNumPinsAndLocations"], [346, 3, 1, "", "test_retainState"], [346, 3, 1, "", "test_symmetryFactor"]], "armi.reactor.tests.test_blocks.MassConservationTests": [[346, 3, 1, "", "test_coldMass"], [346, 3, 1, "", "test_dimensionDuctHeatup"], [346, 3, 1, "", "test_heightExpansionDifferences"], [346, 3, 1, "", "test_massCladHeatup"], [346, 3, 1, "", "test_massConsistency"], [346, 3, 1, "", "test_massCoolHeatup"], [346, 3, 1, "", "test_massDuctHeatup"], [346, 3, 1, "", "test_massFuelHeatup"]], "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate": [[346, 3, 1, "", "test_updateDetailedNdens"]], "armi.reactor.tests.test_blocks.TestNegativeVolume": [[346, 3, 1, "", "test_negativeVolume"]], "armi.reactor.tests.test_blocks.ThRZBlock_TestCase": [[346, 3, 1, "", "test_axial"], [346, 3, 1, "", "test_getHydraulicDiameter"], [346, 3, 1, "", "test_getThetaRZGrid"], [346, 3, 1, "", "test_getWettedPerimeter"], [346, 3, 1, "", "test_radii"], [346, 3, 1, "", "test_theta"], [346, 3, 1, "", "test_verifyBlockDims"]], "armi.reactor.tests.test_components": [[347, 2, 1, "", "TestCircle"], [347, 2, 1, "", "TestComponent"], [347, 2, 1, "", "TestComponentExpansion"], [347, 2, 1, "", "TestComponentFactory"], [347, 2, 1, "", "TestCube"], [347, 2, 1, "", "TestDerivedShape"], [347, 2, 1, "", "TestDifferentialRadialSegment"], [347, 2, 1, "", "TestGeneralComponents"], [347, 2, 1, "", "TestHelix"], [347, 2, 1, "", "TestHexHoledCircle"], [347, 2, 1, "", "TestHexagon"], [347, 2, 1, "", "TestHoledHexagon"], [347, 2, 1, "", "TestHoledRectangle"], [347, 2, 1, "", "TestHoledSquare"], [347, 2, 1, "", "TestMaterialAdjustments"], [347, 2, 1, "", "TestNullComponent"], [347, 2, 1, "", "TestRadialSegment"], [347, 2, 1, "", "TestRectangle"], [347, 2, 1, "", "TestShapedComponent"], [347, 2, 1, "", "TestSolidRectangle"], [347, 2, 1, "", "TestSphere"], [347, 2, 1, "", "TestSquare"], [347, 2, 1, "", "TestTriangle"], [347, 2, 1, "", "TestUnshapedComponent"]], "armi.reactor.tests.test_components.TestCircle": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_badComponentName"], [347, 3, 1, "", "test_changeNumberDensities"], [347, 3, 1, "", "test_componentInteractionsLinkingByDimensions"], [347, 3, 1, "", "test_componentInteractionsLinkingBySubtraction"], [347, 3, 1, "", "test_dimensionThermallyExpands"], [347, 3, 1, "", "test_fuelMass"], [347, 3, 1, "", "test_getArea"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [347, 3, 1, "", "test_getCircleInnerDiameter"], [347, 3, 1, "", "test_getDimension"], [347, 3, 1, "", "test_getNumberDensities"], [347, 3, 1, "", "test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestComponent": [[347, 4, 1, "", "componentCls"], [347, 3, 1, "", "test_initializeComponentMaterial"], [347, 3, 1, "", "test_setNumberDensities"], [347, 3, 1, "", "test_setNumberDensity"], [347, 3, 1, "", "test_solid_material"]], "armi.reactor.tests.test_components.TestComponentExpansion": [[347, 4, 1, "", "coldOuterDiameter"], [347, 3, 1, "", "componentMassIndependentOfInputTemp"], [347, 3, 1, "", "expansionConservationColdHeightDefined"], [347, 3, 1, "", "expansionConservationHotHeightDefined"], [347, 3, 1, "", "runExpansionTests"], [347, 4, 1, "", "tCold"], [347, 4, 1, "", "tHot"], [347, 4, 1, "", "tWarm"], [347, 3, 1, "", "test_B4CExpansion"], [347, 3, 1, "", "test_HT9Expansion"], [347, 3, 1, "", "test_UZrExpansion"]], "armi.reactor.tests.test_components.TestComponentFactory": [[347, 3, 1, "", "getCircleFuelDict"], [347, 3, 1, "", "getCircleVoidDict"], [347, 3, 1, "", "test_componentInitializationAndDuplication"], [347, 3, 1, "", "test_factory"], [347, 3, 1, "", "test_factoryBadShapeName"], [347, 3, 1, "", "test_invalidCoolantComponentAssignment"]], "armi.reactor.tests.test_components.TestCube": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_getVolume"], [347, 3, 1, "", "test_negativeVolume"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestDerivedShape": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 4, 1, "", "componentMaterial"], [347, 3, 1, "", "test_computeVolume"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"]], "armi.reactor.tests.test_components.TestDifferentialRadialSegment": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [347, 3, 1, "", "test_getVolume"], [347, 3, 1, "", "test_thermallyExpands"], [347, 3, 1, "", "test_updateDims"]], "armi.reactor.tests.test_components.TestGeneralComponents": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 4, 1, "", "componentMaterial"]], "armi.reactor.tests.test_components.TestHelix": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_dimensionThermallyExpands"], [347, 3, 1, "", "test_getArea"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [347, 3, 1, "", "test_getCircleInnerDiameter"], [347, 3, 1, "", "test_thermallyExpands"], [347, 3, 1, "", "test_validParameters"]], "armi.reactor.tests.test_components.TestHexHoledCircle": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_dimensionThermallyExpands"], [347, 3, 1, "", "test_getArea"], [347, 3, 1, "", "test_getCircleInnerDiameter"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHexagon": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_dimensionThermallyExpands"], [347, 3, 1, "", "test_getArea"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [347, 3, 1, "", "test_getCircleInnerDiameter"], [347, 3, 1, "", "test_getPerimeter"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledHexagon": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_dimensionThermallyExpands"], [347, 3, 1, "", "test_getArea"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [347, 3, 1, "", "test_getCircleInnerDiameter"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledRectangle": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 4, 1, "", "dimsToTestExpansion"], [347, 3, 1, "", "setClassDims"], [347, 3, 1, "", "test_dimensionThermallyExpands"], [347, 3, 1, "", "test_getArea"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [347, 3, 1, "", "test_getCircleInnerDiameter"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledSquare": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 4, 1, "", "dimsToTestExpansion"], [347, 3, 1, "", "setClassDims"], [347, 3, 1, "", "test_getCircleInnerDiameter"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestMaterialAdjustments": [[347, 3, 1, "", "test_adjustMassEnrichment"], [347, 3, 1, "", "test_adjustMassFrac_U"], [347, 3, 1, "", "test_adjustMassFrac_U235"], [347, 3, 1, "", "test_adjustMassFrac_clear_ZR"], [347, 3, 1, "", "test_adjustMassFrac_invalid"], [347, 3, 1, "", "test_adjustMassFrac_leave_same"], [347, 3, 1, "", "test_adjustMassFrac_set_ZR"], [347, 3, 1, "", "test_getEnrichment"], [347, 3, 1, "", "test_setMassFrac"], [347, 3, 1, "", "test_setMassFracOnComponentMaterial"]], "armi.reactor.tests.test_components.TestNullComponent": [[347, 4, 1, "", "componentCls"], [347, 3, 1, "", "test_cmp"], [347, 3, 1, "", "test_getDimension"], [347, 3, 1, "", "test_nonzero"]], "armi.reactor.tests.test_components.TestRadialSegment": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [347, 3, 1, "", "test_getVolume"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestRectangle": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_dimensionThermallyExpands"], [347, 3, 1, "", "test_getArea"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [347, 3, 1, "", "test_getCircleInnerDiameter"], [347, 3, 1, "", "test_negativeArea"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestShapedComponent": [[347, 3, 1, "", "test_density"], [347, 3, 1, "", "test_densityConsistent"], [347, 3, 1, "", "test_preserveMassDuringThermalExpansion"], [347, 3, 1, "", "test_volumeAfterClearCache"]], "armi.reactor.tests.test_components.TestSolidRectangle": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_dimensionThermallyExpands"], [347, 3, 1, "", "test_getArea"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSphere": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_getVolume"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSquare": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_dimensionThermallyExpands"], [347, 3, 1, "", "test_getArea"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [347, 3, 1, "", "test_getCircleInnerDiameter"], [347, 3, 1, "", "test_negativeArea"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestTriangle": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 3, 1, "", "test_dimensionThermallyExpands"], [347, 3, 1, "", "test_getArea"], [347, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestUnshapedComponent": [[347, 4, 1, "", "componentCls"], [347, 4, 1, "", "componentDims"], [347, 4, 1, "", "componentMaterial"], [347, 3, 1, "", "test_component_less_than"], [347, 3, 1, "", "test_fromComponent"], [347, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [347, 3, 1, "", "test_getComponentArea"]], "armi.reactor.tests.test_composites": [[348, 2, 1, "", "DummyComposite"], [348, 2, 1, "", "DummyLeaf"], [348, 2, 1, "", "MockBP"], [348, 2, 1, "", "TestCompositePattern"], [348, 2, 1, "", "TestCompositeTree"], [348, 2, 1, "", "TestFlagSerializer"], [348, 2, 1, "", "TestGetReactionRateDict"], [348, 2, 1, "", "TestMiscMethods"], [348, 1, 1, "", "getDummyParamDefs"]], "armi.reactor.tests.test_composites.DummyComposite": [[348, 4, 1, "", "pDefs"], [348, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.DummyLeaf": [[348, 3, 1, "", "getBoundingCircleOuterDiameter"], [348, 3, 1, "", "getChildren"], [348, 3, 1, "", "getChildrenWithFlags"], [348, 3, 1, "", "iterComponents"], [348, 4, 1, "", "pDefs"], [348, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.MockBP": [[348, 4, 1, "", "activeNuclides"], [348, 4, 1, "", "allNuclidesInProblem"], [348, 4, 1, "", "customIsotopics"], [348, 4, 1, "", "elementsToExpand"], [348, 4, 1, "", "inactiveNuclides"]], "armi.reactor.tests.test_composites.TestCompositePattern": [[348, 3, 1, "", "test_areChildernOfType"], [348, 3, 1, "", "test_composite"], [348, 3, 1, "", "test_containsAtLeastOneChildOfType"], [348, 3, 1, "", "test_containsOnlyChildrenOfType"], [348, 3, 1, "", "test_expandLFPs"], [348, 3, 1, "", "test_getBoundingCirlceOuterDiameter"], [348, 3, 1, "", "test_getChildren"], [348, 3, 1, "", "test_getIntegratedMgFlux"], [348, 3, 1, "", "test_getName"], [348, 3, 1, "", "test_getParamNames"], [348, 3, 1, "", "test_getReactionRates"], [348, 3, 1, "", "test_hasFlags"], [348, 3, 1, "", "test_hasFlagsNoTypeSpecified"], [348, 3, 1, "", "test_hasFlagsSubstring"], [348, 3, 1, "", "test_iterComponents"], [348, 3, 1, "", "test_nameContains"], [348, 3, 1, "", "test_nucSpec"], [348, 3, 1, "", "test_sort"], [348, 3, 1, "", "test_syncParameters"], [348, 3, 1, "", "test_updateVolume"]], "armi.reactor.tests.test_composites.TestCompositeTree": [[348, 4, 1, "", "blueprintYaml"], [348, 3, 1, "", "test_constituentReport"], [348, 3, 1, "", "test_getChildrenIncludeMaterials"], [348, 3, 1, "", "test_getFPMass"], [348, 3, 1, "", "test_getFissileMass"], [348, 3, 1, "", "test_getFuelMass"], [348, 3, 1, "", "test_getGammaEnergyDepositionConstants"], [348, 3, 1, "", "test_getHMMass"], [348, 3, 1, "", "test_getMaxParam"], [348, 3, 1, "", "test_getMinParam"], [348, 3, 1, "", "test_getNeutronEnergyDepositionConstants"], [348, 3, 1, "", "test_getNuclides"], [348, 3, 1, "", "test_ordering"], [348, 3, 1, "", "test_summing"]], "armi.reactor.tests.test_composites.TestFlagSerializer": [[348, 2, 1, "", "TestFlagsA"], [348, 2, 1, "", "TestFlagsB"], [348, 3, 1, "", "test_flagConversion"], [348, 3, 1, "", "test_flagSerialization"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA": [[348, 4, 1, "", "A"], [348, 4, 1, "", "B"], [348, 4, 1, "", "C"], [348, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB": [[348, 4, 1, "", "A"], [348, 4, 1, "", "B"], [348, 4, 1, "", "BPRIME"], [348, 4, 1, "", "C"], [348, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestGetReactionRateDict": [[348, 3, 1, "", "test_getReactionRateDict"]], "armi.reactor.tests.test_composites.TestMiscMethods": [[348, 3, 1, "", "test_containsHeavyMetal"], [348, 3, 1, "", "test_copyParamsFrom"], [348, 3, 1, "", "test_copyParamsToChildren"], [348, 3, 1, "", "test_dimensionReport"], [348, 3, 1, "", "test_getAtomicWeight"], [348, 3, 1, "", "test_getNumberDensities"], [348, 3, 1, "", "test_getNumberDensitiesWithExpandedFissionProducts"], [348, 3, 1, "", "test_printDensities"], [348, 3, 1, "", "test_setMass"]], "armi.reactor.tests.test_flags": [[349, 2, 1, "", "TestFlags"]], "armi.reactor.tests.test_flags.TestFlags": [[349, 3, 1, "", "test_convertsStringsWithNonFlags"], [349, 3, 1, "", "test_defaultIsFalse"], [349, 3, 1, "", "test_flagsToAndFromString"], [349, 3, 1, "", "test_fromString"], [349, 3, 1, "", "test_fromStringStrict"], [349, 3, 1, "", "test_isPickleable"], [349, 3, 1, "", "test_lookup"]], "armi.reactor.tests.test_geometry": [[350, 2, 1, "", "TestGeomType"], [350, 2, 1, "", "TestSymmetryType"], [350, 2, 1, "", "TestSystemLayoutInput"], [350, 2, 1, "", "TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry.TestGeomType": [[350, 3, 1, "", "test_fromStr"], [350, 3, 1, "", "test_label"], [350, 3, 1, "", "test_str"]], "armi.reactor.tests.test_geometry.TestSymmetryType": [[350, 3, 1, "", "test_SymmetryFactor"], [350, 3, 1, "", "test_baseConstructor"], [350, 3, 1, "", "test_checkValidGeomSymmetryCombo"], [350, 3, 1, "", "test_domainTypeNulls"], [350, 3, 1, "", "test_fromAny"], [350, 3, 1, "", "test_fromStr"], [350, 3, 1, "", "test_label"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInput": [[350, 3, 1, "", "test_asciimap"], [350, 3, 1, "", "test_growToFullCore"], [350, 3, 1, "", "test_readAsciimap"], [350, 3, 1, "", "test_readHexGeomXML"], [350, 3, 1, "", "test_readReactor"], [350, 3, 1, "", "test_yamlIO"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ": [[350, 3, 1, "", "test_TRZyamlIO"], [350, 3, 1, "", "test_readTRZGeomXML"]], "armi.reactor.tests.test_parameters": [[351, 2, 1, "", "MockComposite"], [351, 2, 1, "", "MockCompositeChild"], [351, 2, 1, "", "MockCompositeGrandParent"], [351, 2, 1, "", "MockCompositeParent"], [351, 2, 1, "", "ParameterTests"]], "armi.reactor.tests.test_parameters.ParameterTests": [[351, 3, 1, "", "test_attemptingToSetParamWithoutSetterFails"], [351, 3, 1, "", "test_cannotCreateAttrbuteOnParameterCollectionSubclass"], [351, 3, 1, "", "test_cannotCreateInstanceOf_NoDefault"], [351, 3, 1, "", "test_cannotCreateInstanceOf_Undefined"], [351, 3, 1, "", "test_cannotDefineParameterWithSameName"], [351, 3, 1, "", "test_cannotDefineParameterWithSameNameForCollectionSubclass"], [351, 3, 1, "", "test_categories"], [351, 3, 1, "", "test_defaultLocation"], [351, 3, 1, "", "test_getWithoutDefaultRaisesParameterError"], [351, 3, 1, "", "test_mutableDefaultsNotSupported"], [351, 3, 1, "", "test_paramDefinitionsCompose"], [351, 3, 1, "", "test_paramPropertyDoesNotConflict"], [351, 3, 1, "", "test_paramPropertyDoesNotConflictWithNoneDefault"], [351, 3, 1, "", "test_parameterCollectionsHave__slots__"], [351, 3, 1, "", "test_serializer_pack_unpack"], [351, 3, 1, "", "test_setter"], [351, 3, 1, "", "test_setterGetterBasics"], [351, 3, 1, "", "test_writeSomeParamsToDB"]], "armi.reactor.tests.test_reactors": [[352, 2, 1, "", "CartesianReactorTests"], [352, 2, 1, "", "HexReactorTests"], [352, 2, 1, "", "ReactorTests"], [352, 1, 1, "", "buildOperatorOfEmptyCartesianBlocks"], [352, 1, 1, "", "buildOperatorOfEmptyHexBlocks"], [352, 1, 1, "", "loadTestReactor"], [352, 1, 1, "", "reduceTestReactorRings"]], "armi.reactor.tests.test_reactors.CartesianReactorTests": [[352, 3, 1, "", "test_getAssembliesInSquareRing"], [352, 3, 1, "", "test_getAssemblyPitch"], [352, 3, 1, "", "test_getNuclideCategoriesLogging"]], "armi.reactor.tests.test_reactors.HexReactorTests": [[352, 3, 1, "", "test_addMoreNodes"], [352, 3, 1, "", "test_applyThermalExpansion_CoreConstruct"], [352, 3, 1, "", "test_buildManualZones"], [352, 3, 1, "", "test_buildManualZonesEmpty"], [352, 3, 1, "", "test_coreSfp"], [352, 3, 1, "", "test_countBlocksOfType"], [352, 3, 1, "", "test_countFuelAxialBlocks"], [352, 3, 1, "", "test_createAssemblyOfType"], [352, 3, 1, "", "test_createAssemblyOfTypeExpandedCore"], [352, 3, 1, "", "test_createFreshFeed"], [352, 3, 1, "", "test_differentNuclideModels"], [352, 3, 1, "", "test_factorySortSetting"], [352, 3, 1, "", "test_findAllAxialMeshPoints"], [352, 3, 1, "", "test_findAllAxialMeshPoints_wSubmesh"], [352, 3, 1, "", "test_findAllAziMeshPoints"], [352, 3, 1, "", "test_findAllRadMeshPoints"], [352, 3, 1, "", "test_findAxialMeshIndexOf"], [352, 3, 1, "", "test_findNeighbors"], [352, 3, 1, "", "test_genAssembliesAddedThisCycle"], [352, 3, 1, "", "test_geomType"], [352, 3, 1, "", "test_getAllXsSuffixes"], [352, 3, 1, "", "test_getAssembliesInCircularRing"], [352, 3, 1, "", "test_getAssembliesInHexRing"], [352, 3, 1, "", "test_getAssembliesOnSymmetryLine"], [352, 3, 1, "", "test_getAssemblyPitch"], [352, 3, 1, "", "test_getAssemblyWithLoc"], [352, 3, 1, "", "test_getAssemblyWithName"], [352, 3, 1, "", "test_getAvgTemp"], [352, 3, 1, "", "test_getBlocksByIndices"], [352, 3, 1, "", "test_getDominantMaterial"], [352, 3, 1, "", "test_getFirstFuelBlockAxialNode"], [352, 3, 1, "", "test_getFluxVector"], [352, 3, 1, "", "test_getFuelBottomHeight"], [352, 3, 1, "", "test_getGridBounds"], [352, 3, 1, "", "test_getMass"], [352, 3, 1, "", "test_getMaxAssembliesInHexRing"], [352, 3, 1, "", "test_getMaxNumPins"], [352, 3, 1, "", "test_getMinimumPercentFluxInFuel"], [352, 3, 1, "", "test_getNozzleTypes"], [352, 3, 1, "", "test_getNuclideCategories"], [352, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOut"], [352, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOutBipass"], [352, 3, 1, "", "test_getNumEnergyGroups"], [352, 3, 1, "", "test_getScalarEvolution"], [352, 3, 1, "", "test_getSetParameters"], [352, 3, 1, "", "test_getSymmetryFactor"], [352, 3, 1, "", "test_getTotalParam"], [352, 3, 1, "", "test_growToFullCore"], [352, 3, 1, "", "test_ifMissingSpatialGrid"], [352, 3, 1, "", "test_isPickleable"], [352, 3, 1, "", "test_locations"], [352, 3, 1, "", "test_nonUniformAssems"], [352, 3, 1, "", "test_normalizeNames"], [352, 3, 1, "", "test_pinCoordsAllBlocks"], [352, 3, 1, "", "test_removeAllAssemblies"], [352, 3, 1, "", "test_removeAssembliesInRing"], [352, 3, 1, "", "test_removeAssembliesInRingByCount"], [352, 3, 1, "", "test_removeAssembliesInRingHex"], [352, 3, 1, "", "test_removeAssembly"], [352, 3, 1, "", "test_removeAssemblyNoSfp"], [352, 3, 1, "", "test_restoreReactor"], [352, 3, 1, "", "test_saveAllFlux"], [352, 3, 1, "", "test_setB10VolOnCreation"], [352, 3, 1, "", "test_setPowerIfNecessary"], [352, 3, 1, "", "test_sortAssemByRing"], [352, 3, 1, "", "test_sortChildren"], [352, 3, 1, "", "test_updateBlockBOLHeights_DBLoad"]], "armi.reactor.tests.test_rz_reactors": [[353, 2, 1, "", "TestRZTReactor"], [353, 2, 1, "", "TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactor": [[353, 3, 1, "", "test_findAllMeshPoints"], [353, 3, 1, "", "test_loadRZT"]], "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern": [[353, 3, 1, "", "test_loadRZT_reactor"]], "armi.reactor.tests.test_zones": [[354, 2, 1, "", "TestZone"], [354, 2, 1, "", "TestZones"]], "armi.reactor.tests.test_zones.TestZone": [[354, 3, 1, "", "test_addItem"], [354, 3, 1, "", "test_addItems"], [354, 3, 1, "", "test_addLoc"], [354, 3, 1, "", "test_addLocs"], [354, 3, 1, "", "test_blocks"], [354, 3, 1, "", "test_iteration"], [354, 3, 1, "", "test_removeItem"], [354, 3, 1, "", "test_removeItems"], [354, 3, 1, "", "test_removeLoc"], [354, 3, 1, "", "test_removeLocs"], [354, 3, 1, "", "test_repr"]], "armi.reactor.tests.test_zones.TestZones": [[354, 3, 1, "", "test_dictionaryInterface"], [354, 3, 1, "", "test_findZoneItIsIn"], [354, 3, 1, "", "test_getAllLocations"], [354, 3, 1, "", "test_getZoneLocations"], [354, 3, 1, "", "test_sortZones"], [354, 3, 1, "", "test_summary"]], "armi.reactor.zones": [[355, 2, 1, "", "Zone"], [355, 2, 1, "", "Zones"]], "armi.reactor.zones.Zone": [[355, 4, 1, "", "VALID_TYPES"], [355, 3, 1, "", "addItem"], [355, 3, 1, "", "addItems"], [355, 3, 1, "", "addLoc"], [355, 3, 1, "", "addLocs"], [355, 3, 1, "", "removeItem"], [355, 3, 1, "", "removeItems"], [355, 3, 1, "", "removeLoc"], [355, 3, 1, "", "removeLocs"]], "armi.reactor.zones.Zones": [[355, 3, 1, "", "addZone"], [355, 3, 1, "", "addZones"], [355, 3, 1, "", "checkDuplicates"], [355, 3, 1, "", "findZoneItIsIn"], [355, 3, 1, "", "getAllLocations"], [355, 3, 1, "", "getZoneLocations"], [355, 5, 1, "", "names"], [355, 3, 1, "", "removeZone"], [355, 3, 1, "", "removeZones"], [355, 3, 1, "", "sortZones"], [355, 3, 1, "", "summary"]], "armi.runLog": [[356, 2, 1, "", "DeduplicationFilter"], [356, 2, 1, "", "NullLogger"], [356, 2, 1, "", "RunLogger"], [356, 1, 1, "", "close"], [356, 1, 1, "", "concatenateLogs"], [356, 1, 1, "", "createLogDir"], [356, 1, 1, "", "debug"], [356, 1, 1, "", "error"], [356, 1, 1, "", "extra"], [356, 1, 1, "", "getVerbosity"], [356, 1, 1, "", "header"], [356, 1, 1, "", "important"], [356, 1, 1, "", "info"], [356, 1, 1, "", "logFactory"], [356, 1, 1, "", "raw"], [356, 1, 1, "", "setVerbosity"], [356, 1, 1, "", "warning"], [356, 1, 1, "", "warningReport"]], "armi.runLog.DeduplicationFilter": [[356, 3, 1, "", "filter"]], "armi.runLog.NullLogger": [[356, 3, 1, "", "addHandler"]], "armi.runLog.RunLogger": [[356, 4, 1, "", "FMT"], [356, 3, 1, "", "allowStopDuplicates"], [356, 3, 1, "", "close"], [356, 3, 1, "", "flush"], [356, 3, 1, "", "getDuplicatesFilter"], [356, 3, 1, "", "log"], [356, 3, 1, "", "setVerbosity"], [356, 3, 1, "", "warningReport"], [356, 3, 1, "", "write"]], "armi.settings": [[358, 0, 0, "-", "caseSettings"], [359, 0, 0, "-", "fwSettings"], [357, 1, 1, "", "isBoolSetting"], [357, 1, 1, "", "promptForSettingsFile"], [357, 1, 1, "", "recursivelyLoadSettingsFiles"], [364, 0, 0, "-", "setting"], [365, 0, 0, "-", "settingsIO"], [366, 0, 0, "-", "tests"]], "armi.settings.caseSettings": [[358, 2, 1, "", "Settings"]], "armi.settings.caseSettings.Settings": [[358, 5, 1, "", "caseTitle"], [358, 4, 1, "", "defaultCaseTitle"], [358, 3, 1, "", "duplicate"], [358, 5, 1, "", "environmentSettings"], [358, 3, 1, "", "failOnLoad"], [358, 3, 1, "", "getSetting"], [358, 3, 1, "", "getSettingsSetByUser"], [358, 3, 1, "", "initLogVerbosity"], [358, 5, 1, "", "inputDirectory"], [358, 3, 1, "", "items"], [358, 3, 1, "", "keys"], [358, 3, 1, "", "loadFromInputFile"], [358, 3, 1, "", "loadFromString"], [358, 3, 1, "", "modified"], [358, 3, 1, "", "registerUserPlugins"], [358, 3, 1, "", "revertToDefaults"], [358, 3, 1, "", "setModuleVerbosities"], [358, 3, 1, "", "updateEnvironmentSettingsFrom"], [358, 3, 1, "", "values"], [358, 3, 1, "", "writeToYamlFile"], [358, 3, 1, "", "writeToYamlStream"]], "armi.settings.fwSettings": [[360, 0, 0, "-", "databaseSettings"], [359, 1, 1, "", "getFrameworkSettings"], [361, 0, 0, "-", "globalSettings"], [362, 0, 0, "-", "reportSettings"], [363, 0, 0, "-", "tightCouplingSettings"]], "armi.settings.fwSettings.databaseSettings": [[360, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.globalSettings": [[361, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.reportSettings": [[362, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.tightCouplingSettings": [[363, 2, 1, "", "TightCouplingSettingDef"], [363, 2, 1, "", "TightCouplingSettings"], [363, 1, 1, "", "serializeTightCouplingSettings"], [363, 1, 1, "", "tightCouplingSettingsValidator"]], "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef": [[363, 3, 1, "", "dump"]], "armi.settings.setting": [[364, 2, 1, "", "Default"], [364, 2, 1, "", "FlagListSetting"], [364, 2, 1, "", "Option"], [364, 2, 1, "", "Setting"]], "armi.settings.setting.Default": [[364, 4, 1, "", "settingName"], [364, 4, 1, "", "value"]], "armi.settings.setting.FlagListSetting": [[364, 3, 1, "", "dump"], [364, 3, 1, "", "schema"]], "armi.settings.setting.Option": [[364, 4, 1, "", "option"], [364, 4, 1, "", "settingName"]], "armi.settings.setting.Setting": [[364, 3, 1, "", "addOption"], [364, 3, 1, "", "addOptions"], [364, 3, 1, "", "changeDefault"], [364, 5, 1, "", "containedType"], [364, 5, 1, "", "default"], [364, 3, 1, "", "dump"], [364, 3, 1, "", "getCustomAttributes"], [364, 3, 1, "", "getDefaultAttributes"], [364, 3, 1, "", "isDefault"], [364, 5, 1, "", "offDefault"], [364, 3, 1, "", "revertToDefault"], [364, 3, 1, "", "setValue"], [364, 5, 1, "", "underlyingType"], [364, 5, 1, "", "value"]], "armi.settings.settingsIO": [[365, 2, 1, "", "Roots"], [365, 7, 1, "", "RunLogPromptCancel"], [365, 7, 1, "", "RunLogPromptUnresolvable"], [365, 2, 1, "", "SettingRenamer"], [365, 2, 1, "", "SettingsReader"], [365, 2, 1, "", "SettingsWriter"], [365, 1, 1, "", "prompt"]], "armi.settings.settingsIO.Roots": [[365, 4, 1, "", "CUSTOM"], [365, 4, 1, "", "VERSION"]], "armi.settings.settingsIO.SettingRenamer": [[365, 3, 1, "", "renameSetting"]], "armi.settings.settingsIO.SettingsReader": [[365, 2, 1, "", "SettingsInputFormat"], [365, 3, 1, "", "readFromFile"], [365, 3, 1, "", "readFromStream"]], "armi.settings.settingsIO.SettingsReader.SettingsInputFormat": [[365, 4, 1, "", "YAML"], [365, 3, 1, "", "fromExt"]], "armi.settings.settingsIO.SettingsWriter": [[365, 3, 1, "", "writeYaml"]], "armi.settings.tests": [[367, 0, 0, "-", "test_settings"], [368, 0, 0, "-", "test_settingsIO"]], "armi.settings.tests.test_settings": [[367, 2, 1, "", "DummySettingPlugin1"], [367, 2, 1, "", "DummySettingPlugin2"], [367, 2, 1, "", "PluginAddsOptions"], [367, 2, 1, "", "TestAddingOptions"], [367, 2, 1, "", "TestCaseSettings"], [367, 2, 1, "", "TestFlagListSetting"], [367, 2, 1, "", "TestSettings2"], [367, 2, 1, "", "TestSettingsUtils"], [367, 2, 1, "", "TestSettingsValidationUtils"]], "armi.settings.tests.test_settings.DummySettingPlugin1": [[367, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.DummySettingPlugin2": [[367, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.PluginAddsOptions": [[367, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.TestAddingOptions": [[367, 3, 1, "", "test_addingOptions"]], "armi.settings.tests.test_settings.TestCaseSettings": [[367, 3, 1, "", "test_metaData"], [367, 3, 1, "", "test_updateEnvironmentSettingsFrom"]], "armi.settings.tests.test_settings.TestFlagListSetting": [[367, 3, 1, "", "test_flagListSetting"], [367, 3, 1, "", "test_invalidFlagListTypeError"]], "armi.settings.tests.test_settings.TestSettings2": [[367, 3, 1, "", "test_copySetting"], [367, 3, 1, "", "test_copySettingNotDefault"], [367, 3, 1, "", "test_csWorks"], [367, 3, 1, "", "test_default"], [367, 3, 1, "", "test_empty"], [367, 3, 1, "", "test_getFailures"], [367, 3, 1, "", "test_getSettingsSetByUser"], [367, 3, 1, "", "test_listCoercion"], [367, 3, 1, "", "test_listsMutable"], [367, 3, 1, "", "test_modified"], [367, 3, 1, "", "test_pluginSettings"], [367, 3, 1, "", "test_pluginValidatorsAreDiscovered"], [367, 3, 1, "", "test_schemaChecksType"], [367, 3, 1, "", "test_setModuleVerbosities"], [367, 3, 1, "", "test_settingIsOkayToGrab"], [367, 3, 1, "", "test_typeDetection"]], "armi.settings.tests.test_settings.TestSettingsUtils": [[367, 3, 1, "", "test_prompt"], [367, 3, 1, "", "test_recursiveScan"]], "armi.settings.tests.test_settings.TestSettingsValidationUtils": [[367, 3, 1, "", "test_validateVersion"]], "armi.settings.tests.test_settingsIO": [[368, 2, 1, "", "MockEntryPoint"], [368, 2, 1, "", "SettingArgsTests"], [368, 2, 1, "", "SettingsFailureTests"], [368, 2, 1, "", "SettingsReaderTests"], [368, 2, 1, "", "SettingsRenameTests"], [368, 2, 1, "", "SettingsWriterTests"]], "armi.settings.tests.test_settingsIO.MockEntryPoint": [[368, 4, 1, "", "name"], [368, 4, 1, "", "settingsArgument"]], "armi.settings.tests.test_settingsIO.SettingArgsTests": [[368, 3, 1, "", "test_cannotLoadSettingsAfterParsingCommandLineSetting"], [368, 3, 1, "", "test_commandLineSetting"]], "armi.settings.tests.test_settingsIO.SettingsFailureTests": [[368, 3, 1, "", "test_invalidFile"], [368, 3, 1, "", "test_loadFromYamlFailsOnBadNames"], [368, 3, 1, "", "test_settingsObjSetting"]], "armi.settings.tests.test_settingsIO.SettingsReaderTests": [[368, 3, 1, "", "test_basicSettingsReader"], [368, 3, 1, "", "test_readFromFile"]], "armi.settings.tests.test_settingsIO.SettingsRenameTests": [[368, 4, 1, "", "testSettings"], [368, 3, 1, "", "test_collidingRenames"], [368, 3, 1, "", "test_rename"]], "armi.settings.tests.test_settingsIO.SettingsWriterTests": [[368, 3, 1, "", "test_errorSettingsWriter"], [368, 3, 1, "", "test_writeFull"], [368, 3, 1, "", "test_writeMedium"], [368, 3, 1, "", "test_writeShort"], [368, 3, 1, "", "test_writeYaml"]], "armi.tests": [[369, 2, 1, "", "ArmiTestHelper"], [369, 2, 1, "", "Fixture"], [369, 1, 1, "", "fixture"], [369, 1, 1, "", "getEmptyCartesianReactor"], [369, 1, 1, "", "getEmptyHexReactor"], [370, 0, 0, "-", "mockRunLogs"], [369, 1, 1, "", "rebaselineTextComparisons"], [371, 0, 0, "-", "refSmallReactorShuffleLogic"], [369, 1, 1, "", "requires_fixture"], [372, 0, 0, "-", "test_apps"], [373, 0, 0, "-", "test_armiTestHelper"], [374, 0, 0, "-", "test_cartesian"], [375, 0, 0, "-", "test_interfaces"], [376, 0, 0, "-", "test_lwrInputs"], [377, 0, 0, "-", "test_mpiActions"], [378, 0, 0, "-", "test_mpiFeatures"], [379, 0, 0, "-", "test_mpiParameters"], [380, 0, 0, "-", "test_notebooks"], [381, 0, 0, "-", "test_plugins"], [382, 0, 0, "-", "test_runLog"], [383, 0, 0, "-", "test_tests"], [384, 0, 0, "-", "test_user_plugins"]], "armi.tests.ArmiTestHelper": [[369, 3, 1, "", "compareFilesLineByLine"], [369, 3, 1, "", "compareLines"]], "armi.tests.mockRunLogs": [[370, 2, 1, "", "BufferLog"], [370, 2, 1, "", "LogCounter"]], "armi.tests.mockRunLogs.BufferLog": [[370, 3, 1, "", "clearSingleWarnings"], [370, 3, 1, "", "emptyStdout"], [370, 3, 1, "", "getStderrValue"], [370, 3, 1, "", "getStdout"], [370, 3, 1, "", "log"]], "armi.tests.mockRunLogs.LogCounter": [[370, 3, 1, "", "log"]], "armi.tests.refSmallReactorShuffleLogic": [[371, 2, 1, "", "EquilibriumShuffler"], [371, 1, 1, "", "getFactorList"]], "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler": [[371, 3, 1, "", "chooseSwaps"]], "armi.tests.test_apps": [[372, 2, 1, "", "TestApps"], [372, 2, 1, "", "TestArmiHighLevel"], [372, 2, 1, "", "TestPlugin1"], [372, 2, 1, "", "TestPlugin2"], [372, 2, 1, "", "TestPlugin3"], [372, 2, 1, "", "TestPlugin4"]], "armi.tests.test_apps.TestApps": [[372, 3, 1, "", "test_disableFutureConfigures"], [372, 3, 1, "", "test_getParamRenames"], [372, 3, 1, "", "test_getParamRenamesInvalids"], [372, 3, 1, "", "test_getSettings"], [372, 3, 1, "", "test_isStableReleaseVersion"], [372, 3, 1, "", "test_registerPluginFlags"], [372, 3, 1, "", "test_splashText"], [372, 3, 1, "", "test_splashTextDifferentApp"], [372, 3, 1, "", "test_version"]], "armi.tests.test_apps.TestArmiHighLevel": [[372, 3, 1, "", "test_getDefaultPluginManager"], [372, 3, 1, "", "test_main"], [372, 3, 1, "", "test_overConfigured"]], "armi.tests.test_apps.TestPlugin1": [[372, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin2": [[372, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin3": [[372, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin4": [[372, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_armiTestHelper": [[373, 2, 1, "", "TestArmiTestHelper"]], "armi.tests.test_armiTestHelper.TestArmiTestHelper": [[373, 3, 1, "", "test_compareFilesFail"], [373, 3, 1, "", "test_compareFilesSucceedFalseNegative"], [373, 3, 1, "", "test_compareFilesSucess"]], "armi.tests.test_cartesian": [[374, 2, 1, "", "CartesianReactorTests"]], "armi.tests.test_cartesian.CartesianReactorTests": [[374, 3, 1, "", "test_custom"]], "armi.tests.test_interfaces": [[375, 2, 1, "", "DummyInterface"], [375, 2, 1, "", "TestCodeInterface"], [375, 2, 1, "", "TestTextProcessor"], [375, 2, 1, "", "TestTightCoupler"]], "armi.tests.test_interfaces.DummyInterface": [[375, 4, 1, "", "function"], [375, 4, 1, "", "name"]], "armi.tests.test_interfaces.TestCodeInterface": [[375, 3, 1, "", "test_distributable"], [375, 3, 1, "", "test_duplicate"], [375, 3, 1, "", "test_enabled"], [375, 3, 1, "", "test_isRequestedDetailPoint"], [375, 3, 1, "", "test_nameContains"], [375, 3, 1, "", "test_preDistributeState"]], "armi.tests.test_interfaces.TestTextProcessor": [[375, 3, 1, "", "test_fsearch"], [375, 3, 1, "", "test_fsearch_text"]], "armi.tests.test_interfaces.TestTightCoupler": [[375, 3, 1, "", "test_couplerActive"], [375, 3, 1, "", "test_getListDimension"], [375, 3, 1, "", "test_isConverged"], [375, 3, 1, "", "test_isConvergedRuntimeError"], [375, 3, 1, "", "test_isConvergedValueError"], [375, 3, 1, "", "test_storePreviousIterationValue"], [375, 3, 1, "", "test_storePreviousIterationValueException"]], "armi.tests.test_lwrInputs": [[376, 2, 1, "", "C5G7ReactorTests"]], "armi.tests.test_lwrInputs.C5G7ReactorTests": [[376, 3, 1, "", "test_loadC5G7"], [376, 3, 1, "", "test_runAndLoadC5G7"]], "armi.tests.test_mpiActions": [[377, 2, 1, "", "MpiIterTests"], [377, 2, 1, "", "QueueActionsTests"], [377, 1, 1, "", "passer"]], "armi.tests.test_mpiActions.MpiIterTests": [[377, 3, 1, "", "test_diagnosePickleErrorTestReactor"], [377, 3, 1, "", "test_excessProcesses"], [377, 3, 1, "", "test_mpiIter"], [377, 3, 1, "", "test_parallel"], [377, 3, 1, "", "test_perfectBalancing"], [377, 3, 1, "", "test_runActionsDistributeStateAction"], [377, 3, 1, "", "test_runActionsDistributionAction"], [377, 3, 1, "", "test_serialGather"], [377, 3, 1, "", "test_typicalBalancing"]], "armi.tests.test_mpiActions.QueueActionsTests": [[377, 3, 1, "", "test_disableForExclusiveTasks"], [377, 3, 1, "", "test_makeQueue"]], "armi.tests.test_mpiFeatures": [[378, 2, 1, "", "BcastAction1"], [378, 2, 1, "", "BcastAction2"], [378, 2, 1, "", "FailingInterface1"], [378, 2, 1, "", "FailingInterface2"], [378, 2, 1, "", "FailingInterface3"], [378, 2, 1, "", "MpiDistributeStateTests"], [378, 2, 1, "", "MpiOperatorTests"], [378, 2, 1, "", "MpiPathToolsTests"]], "armi.tests.test_mpiFeatures.BcastAction1": [[378, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.BcastAction2": [[378, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.FailingInterface1": [[378, 3, 1, "", "interactEveryNode"], [378, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface2": [[378, 3, 1, "", "interactEveryNode"], [378, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface3": [[378, 3, 1, "", "fail"], [378, 3, 1, "", "interactEveryNode"], [378, 4, 1, "", "name"], [378, 3, 1, "", "workerOperate"]], "armi.tests.test_mpiFeatures.MpiDistributeStateTests": [[378, 3, 1, "", "test_compileResults"], [378, 3, 1, "", "test_distributeInterfaces"], [378, 3, 1, "", "test_distributeReactor"], [378, 3, 1, "", "test_distributeSettings"], [378, 3, 1, "", "test_distributeState"]], "armi.tests.test_mpiFeatures.MpiOperatorTests": [[378, 3, 1, "", "test_basicOperatorMPI"], [378, 3, 1, "", "test_primaryCritical"], [378, 3, 1, "", "test_primaryException"]], "armi.tests.test_mpiFeatures.MpiPathToolsTests": [[378, 3, 1, "", "test_cleanPathMpi"]], "armi.tests.test_mpiParameters": [[379, 2, 1, "", "MockSyncPC"], [379, 2, 1, "", "SynchronizationTests"], [379, 1, 1, "", "makeComp"]], "armi.tests.test_mpiParameters.MockSyncPC": [[379, 4, 1, "", "pDefs"], [379, 4, 1, "", "pb"]], "armi.tests.test_mpiParameters.SynchronizationTests": [[379, 3, 1, "", "test_conflictsMaintainWithStateRetainer"], [379, 3, 1, "", "test_noConflicts"], [379, 3, 1, "", "test_withConflicts"], [379, 3, 1, "", "test_withConflictsButSameValue"]], "armi.tests.test_notebooks": [[380, 2, 1, "", "NotebookTests"], [380, 1, 1, "", "runNotebook"]], "armi.tests.test_notebooks.NotebookTests": [[380, 3, 1, "", "test_runDataModel"], [380, 3, 1, "", "test_runParamSweep"]], "armi.tests.test_plugins": [[381, 2, 1, "", "PluginFlags1"], [381, 2, 1, "", "TestPlugin"], [381, 2, 1, "", "TestPluginBasics"], [381, 2, 1, "", "TestPluginRegistration"]], "armi.tests.test_plugins.PluginFlags1": [[381, 3, 1, "", "defineFlags"]], "armi.tests.test_plugins.TestPlugin": [[381, 4, 1, "", "plugin"], [381, 3, 1, "", "test_defineBlueprintsSections"], [381, 3, 1, "", "test_exposeInterfaces"]], "armi.tests.test_plugins.TestPluginBasics": [[381, 3, 1, "", "test_defineParameters"], [381, 3, 1, "", "test_exposeInterfaces"], [381, 3, 1, "", "test_pluginsExposeInterfaces"]], "armi.tests.test_plugins.TestPluginRegistration": [[381, 3, 1, "", "test_defineFlags"]], "armi.tests.test_runLog": [[382, 2, 1, "", "TestRunLog"], [382, 2, 1, "", "TestRunLogger"]], "armi.tests.test_runLog.TestRunLog": [[382, 3, 1, "", "test_callingStartLogMultipleTimes"], [382, 3, 1, "", "test_closeLogging"], [382, 3, 1, "", "test_concatenateLogs"], [382, 3, 1, "", "test_createLogDir"], [382, 3, 1, "", "test_getWhiteSpace"], [382, 3, 1, "", "test_invalidSetVerbosityByString"], [382, 3, 1, "", "test_parentRunLogging"], [382, 3, 1, "", "test_setVerbosity"], [382, 3, 1, "", "test_setVerbosityBeforeStartLog"], [382, 3, 1, "", "test_setVerbosityFromInteger"], [382, 3, 1, "", "test_setVerbosityFromString"], [382, 3, 1, "", "test_verbosityOutOfRange"], [382, 3, 1, "", "test_warningReport"], [382, 3, 1, "", "test_warningReportInvalid"]], "armi.tests.test_runLog.TestRunLogger": [[382, 3, 1, "", "test_allowStopDuplicates"], [382, 3, 1, "", "test_getDuplicatesFilter"], [382, 3, 1, "", "test_write"]], "armi.tests.test_tests": [[383, 2, 1, "", "TestCompareFiles"]], "armi.tests.test_tests.TestCompareFiles": [[383, 3, 1, "", "test_compareFileLine"]], "armi.tests.test_user_plugins": [[384, 2, 1, "", "TestUserPlugins"], [384, 2, 1, "", "UpInterface"], [384, 2, 1, "", "UserPluginBadDefineParameterRenames"], [384, 2, 1, "", "UserPluginBadDefinesSettings"], [384, 2, 1, "", "UserPluginFlags"], [384, 2, 1, "", "UserPluginFlags2"], [384, 2, 1, "", "UserPluginFlags3"], [384, 2, 1, "", "UserPluginOnProcessCoreLoading"], [384, 2, 1, "", "UserPluginWithInterface"]], "armi.tests.test_user_plugins.TestUserPlugins": [[384, 3, 1, "", "test_registerRepeatedUserPlugins"], [384, 3, 1, "", "test_registerUserPlugins"], [384, 3, 1, "", "test_registerUserPluginsAbsPath"], [384, 3, 1, "", "test_registerUserPluginsFromSettings"], [384, 3, 1, "", "test_userPluginOnProcessCoreLoading"], [384, 3, 1, "", "test_userPluginWithInterfaces"], [384, 3, 1, "", "test_userPluginsFlags"], [384, 3, 1, "", "test_validateUserPluginLimitations"]], "armi.tests.test_user_plugins.UpInterface": [[384, 3, 1, "", "interactEveryNode"], [384, 4, 1, "", "name"]], "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames": [[384, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_user_plugins.UserPluginBadDefinesSettings": [[384, 3, 1, "", "defineSettings"]], "armi.tests.test_user_plugins.UserPluginFlags": [[384, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags2": [[384, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags3": [[384, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading": [[384, 3, 1, "", "onProcessCoreLoading"]], "armi.tests.test_user_plugins.UserPluginWithInterface": [[384, 3, 1, "", "exposeInterfaces"]], "armi.utils": [[385, 2, 1, "", "MergeableDict"], [385, 2, 1, "", "MyPickler"], [386, 0, 0, "-", "asciimaps"], [385, 1, 1, "", "capStrLen"], [385, 1, 1, "", "classesInHierarchy"], [387, 0, 0, "-", "codeTiming"], [385, 1, 1, "", "copyWithoutBlocking"], [385, 1, 1, "", "createFormattedStrWithDelimiter"], [388, 0, 0, "-", "customExceptions"], [389, 0, 0, "-", "densityTools"], [390, 0, 0, "-", "directoryChangers"], [391, 0, 0, "-", "directoryChangersMpi"], [385, 1, 1, "", "doTestPickleOnAllContents2"], [392, 0, 0, "-", "dochelpers"], [393, 0, 0, "-", "dynamicImporter"], [394, 0, 0, "-", "flags"], [385, 1, 1, "", "getAvailabilityFactors"], [385, 1, 1, "", "getBurnSteps"], [385, 1, 1, "", "getCumulativeNodeNum"], [385, 1, 1, "", "getCycleLengths"], [385, 1, 1, "", "getCycleNames"], [385, 1, 1, "", "getCycleNodeFromCumulativeNode"], [385, 1, 1, "", "getCycleNodeFromCumulativeStep"], [385, 1, 1, "", "getFileSHA1Hash"], [385, 1, 1, "", "getMaxBurnSteps"], [385, 1, 1, "", "getNodesPerCycle"], [385, 1, 1, "", "getPowerFractions"], [385, 1, 1, "", "getPreviousTimeNode"], [385, 1, 1, "", "getStepLengths"], [385, 1, 1, "", "hasBurnup"], [396, 0, 0, "-", "hexagon"], [397, 0, 0, "-", "iterables"], [385, 1, 1, "", "list2str"], [398, 0, 0, "-", "mathematics"], [399, 0, 0, "-", "outputCache"], [400, 0, 0, "-", "parsing"], [401, 0, 0, "-", "pathTools"], [385, 1, 1, "", "plotMatrix"], [402, 0, 0, "-", "plotting"], [385, 1, 1, "", "prependToList"], [403, 0, 0, "-", "properties"], [404, 0, 0, "-", "reportPlotting"], [385, 1, 1, "", "safeCopy"], [385, 1, 1, "", "slantSplit"], [405, 0, 0, "-", "tests"], [426, 0, 0, "-", "textProcessors"], [427, 0, 0, "-", "triangle"], [385, 1, 1, "", "tryPickleOnAllContents"], [385, 1, 1, "", "tryPickleOnAllContents3"], [428, 0, 0, "-", "units"], [385, 1, 1, "", "userName"]], "armi.utils.MergeableDict": [[385, 3, 1, "", "merge"]], "armi.utils.MyPickler": [[385, 3, 1, "", "save"]], "armi.utils.asciimaps": [[386, 2, 1, "", "AsciiMap"], [386, 2, 1, "", "AsciiMapCartesian"], [386, 2, 1, "", "AsciiMapHexFullFlatsUp"], [386, 2, 1, "", "AsciiMapHexFullTipsUp"], [386, 2, 1, "", "AsciiMapHexThirdFlatsUp"], [386, 1, 1, "", "asciiMapFromGeomAndDomain"]], "armi.utils.asciimaps.AsciiMap": [[386, 4, 1, "", "asciiLabelByIndices"], [386, 4, 1, "", "asciiLines"], [386, 4, 1, "", "asciiOffsets"], [386, 3, 1, "", "fromReactor"], [386, 3, 1, "", "gridContentsToAscii"], [386, 3, 1, "", "items"], [386, 3, 1, "", "keys"], [386, 3, 1, "", "readAscii"], [386, 3, 1, "", "writeAscii"]], "armi.utils.codeTiming": [[387, 2, 1, "", "MasterTimer"], [387, 1, 1, "", "getMasterTimer"], [387, 1, 1, "", "timed"]], "armi.utils.codeTiming.MasterTimer": [[387, 3, 1, "", "endTimer"], [387, 3, 1, "", "getActiveTimers"], [387, 3, 1, "", "getMasterTimer"], [387, 3, 1, "", "getTimer"], [387, 3, 1, "", "report"], [387, 3, 1, "", "startAll"], [387, 3, 1, "", "startTimer"], [387, 3, 1, "", "stopAll"], [387, 3, 1, "", "time"], [387, 3, 1, "", "timeline"]], "armi.utils.customExceptions": [[388, 7, 1, "", "InputError"], [388, 7, 1, "", "InvalidSettingsFileError"], [388, 7, 1, "", "InvalidSettingsStopProcess"], [388, 7, 1, "", "NonexistentSetting"], [388, 7, 1, "", "NonexistentSettingsFileError"], [388, 7, 1, "", "SettingException"], [388, 1, 1, "", "important"], [388, 1, 1, "", "info"], [388, 1, 1, "", "warn"], [388, 1, 1, "", "warn_when_root"]], "armi.utils.densityTools": [[389, 1, 1, "", "applyIsotopicsMix"], [389, 1, 1, "", "calculateMassDensity"], [389, 1, 1, "", "calculateNumberDensity"], [389, 1, 1, "", "expandElementalMassFracsToNuclides"], [389, 1, 1, "", "expandElementalNuclideMassFracs"], [389, 1, 1, "", "filterNuclideList"], [389, 1, 1, "", "formatMaterialCard"], [389, 1, 1, "", "getChemicals"], [389, 1, 1, "", "getMassFractions"], [389, 1, 1, "", "getMassInGrams"], [389, 1, 1, "", "getNDensFromMasses"], [389, 1, 1, "", "normalizeNuclideList"]], "armi.utils.directoryChangers": [[390, 2, 1, "", "DirectoryChanger"], [390, 2, 1, "", "ForcedCreationDirectoryChanger"], [390, 2, 1, "", "TemporaryDirectoryChanger"], [390, 1, 1, "", "directoryChangerFactory"]], "armi.utils.directoryChangers.DirectoryChanger": [[390, 3, 1, "", "close"], [390, 3, 1, "", "moveFiles"], [390, 3, 1, "", "open"], [390, 3, 1, "", "retrieveFiles"]], "armi.utils.directoryChangers.TemporaryDirectoryChanger": [[390, 3, 1, "", "GetRandomDirectory"]], "armi.utils.directoryChangersMpi": [[391, 2, 1, "", "MpiDirectoryChanger"]], "armi.utils.directoryChangersMpi.MpiDirectoryChanger": [[391, 3, 1, "", "close"], [391, 3, 1, "", "open"]], "armi.utils.dochelpers": [[392, 2, 1, "", "ExecDirective"], [392, 2, 1, "", "PyReverse"], [392, 1, 1, "", "create_figure"], [392, 1, 1, "", "create_table"], [392, 1, 1, "", "generateParamTable"], [392, 1, 1, "", "generatePluginSettingsTable"]], "armi.utils.dochelpers.ExecDirective": [[392, 4, 1, "", "has_content"], [392, 3, 1, "", "run"]], "armi.utils.dochelpers.PyReverse": [[392, 4, 1, "", "has_content"], [392, 4, 1, "", "option_spec"], [392, 4, 1, "", "optional_arguments"], [392, 4, 1, "", "required_arguments"], [392, 3, 1, "", "run"]], "armi.utils.dynamicImporter": [[393, 1, 1, "", "getEntireFamilyTree"]], "armi.utils.flags": [[394, 2, 1, "", "Flag"], [394, 2, 1, "", "auto"]], "armi.utils.flags.Flag": [[394, 3, 1, "", "extend"], [394, 3, 1, "", "fields"], [394, 3, 1, "", "from_bytes"], [394, 3, 1, "", "sortedFields"], [394, 3, 1, "", "to_bytes"], [394, 3, 1, "", "width"]], "armi.utils.hexagon": [[396, 1, 1, "", "area"], [396, 1, 1, "", "corners"], [396, 1, 1, "", "numPositionsInRing"], [396, 1, 1, "", "numRingsToHoldNumCells"], [396, 1, 1, "", "pitch"], [396, 1, 1, "", "side"]], "armi.utils.iterables": [[397, 2, 1, "", "Sequence"], [397, 1, 1, "", "chunk"], [397, 1, 1, "", "flatten"], [397, 1, 1, "", "packBinaryStrings"], [397, 1, 1, "", "packHexStrings"], [397, 1, 1, "", "split"], [397, 1, 1, "", "unpackBinaryStrings"], [397, 1, 1, "", "unpackHexStrings"]], "armi.utils.iterables.Sequence": [[397, 3, 1, "", "append"], [397, 3, 1, "", "copy"], [397, 3, 1, "", "drop"], [397, 3, 1, "", "extend"], [397, 3, 1, "", "select"], [397, 3, 1, "", "transform"]], "armi.utils.mathematics": [[398, 1, 1, "", "average1DWithinTolerance"], [398, 1, 1, "", "convertToSlice"], [398, 1, 1, "", "efmt"], [398, 1, 1, "", "expandRepeatedFloats"], [398, 1, 1, "", "findClosest"], [398, 1, 1, "", "findNearestValue"], [398, 1, 1, "", "findNearestValueAndIndex"], [398, 1, 1, "", "fixThreeDigitExp"], [398, 1, 1, "", "getFloat"], [398, 1, 1, "", "getStepsFromValues"], [398, 1, 1, "", "isMonotonic"], [398, 1, 1, "", "linearInterpolation"], [398, 1, 1, "", "minimizeScalarFunc"], [398, 1, 1, "", "newtonsMethod"], [398, 1, 1, "", "parabolaFromPoints"], [398, 1, 1, "", "parabolicInterpolation"], [398, 1, 1, "", "relErr"], [398, 1, 1, "", "resampleStepwise"], [398, 1, 1, "", "rotateXY"]], "armi.utils.outputCache": [[399, 1, 1, "", "cacheCall"], [399, 1, 1, "", "deleteCache"], [399, 1, 1, "", "retrieveOutput"], [399, 1, 1, "", "store"]], "armi.utils.parsing": [[400, 1, 1, "", "datetimeFromStr"], [400, 1, 1, "", "parseValue"], [400, 1, 1, "", "tryLiteralEval"]], "armi.utils.pathTools": [[401, 1, 1, "", "armiAbsPath"], [401, 1, 1, "", "cleanPath"], [401, 1, 1, "", "copyOrWarn"], [401, 1, 1, "", "importCustomPyModule"], [401, 1, 1, "", "isAccessible"], [401, 1, 1, "", "isFilePathNewer"], [401, 1, 1, "", "moduleAndAttributeExist"], [401, 1, 1, "", "separateModuleAndAttribute"]], "armi.utils.plotting": [[402, 2, 1, "", "DepthSlider"], [402, 1, 1, "", "close"], [402, 1, 1, "", "colorGenerator"], [402, 1, 1, "", "makeHistogram"], [402, 1, 1, "", "plotAssemblyTypes"], [402, 1, 1, "", "plotBlockDepthMap"], [402, 1, 1, "", "plotBlockDiagram"], [402, 1, 1, "", "plotBlockFlux"], [402, 1, 1, "", "plotFaceMap"], [402, 1, 1, "", "plotNucXs"], [402, 1, 1, "", "plotTriangleFlux"]], "armi.utils.plotting.DepthSlider": [[402, 3, 1, "", "next"], [402, 3, 1, "", "previous"], [402, 3, 1, "", "set_val"], [402, 3, 1, "", "updatePageDepthColor"]], "armi.utils.properties": [[403, 7, 1, "", "ImmutablePropertyError"], [403, 1, 1, "", "areEqual"], [403, 1, 1, "", "createImmutableProperty"], [403, 1, 1, "", "lockImmutableProperties"], [403, 1, 1, "", "numpyHackForEqual"], [403, 1, 1, "", "unlockImmutableProperties"]], "armi.utils.reportPlotting": [[404, 1, 1, "", "buVsTime"], [404, 1, 1, "", "createPlotMetaData"], [404, 1, 1, "", "keffVsTime"], [404, 1, 1, "", "movesVsCycle"], [404, 1, 1, "", "plotAxialProfile"], [404, 1, 1, "", "plotCoreOverviewRadar"], [404, 1, 1, "", "plotReactorPerformance"], [404, 1, 1, "", "valueVsTime"], [404, 1, 1, "", "xsHistoryVsTime"]], "armi.utils.tests": [[406, 0, 0, "-", "test_asciimaps"], [407, 0, 0, "-", "test_codeTiming"], [408, 0, 0, "-", "test_custom_exceptions"], [409, 0, 0, "-", "test_densityTools"], [410, 0, 0, "-", "test_directoryChangers"], [411, 0, 0, "-", "test_dochelpers"], [412, 0, 0, "-", "test_flags"], [413, 0, 0, "-", "test_hexagon"], [414, 0, 0, "-", "test_iterables"], [415, 0, 0, "-", "test_mathematics"], [416, 0, 0, "-", "test_outputCache"], [417, 0, 0, "-", "test_parsing"], [418, 0, 0, "-", "test_pathTools"], [419, 0, 0, "-", "test_plotting"], [420, 0, 0, "-", "test_properties"], [421, 0, 0, "-", "test_reportPlotting"], [422, 0, 0, "-", "test_textProcessors"], [423, 0, 0, "-", "test_triangle"], [424, 0, 0, "-", "test_units"], [425, 0, 0, "-", "test_utils"]], "armi.utils.tests.test_asciimaps": [[406, 2, 1, "", "TestAsciiMaps"]], "armi.utils.tests.test_asciimaps.TestAsciiMaps": [[406, 3, 1, "", "test_cartesian"], [406, 3, 1, "", "test_flatHexBases"], [406, 3, 1, "", "test_hexFull"], [406, 3, 1, "", "test_hexFullFlat"], [406, 3, 1, "", "test_hexSmallFlat"], [406, 3, 1, "", "test_hexThird"], [406, 3, 1, "", "test_hexWithEmptyRow"], [406, 3, 1, "", "test_hexWithHoles"], [406, 3, 1, "", "test_troublesomeHexThird"]], "armi.utils.tests.test_codeTiming": [[407, 2, 1, "", "CodeTimingTest"]], "armi.utils.tests.test_codeTiming.CodeTimingTest": [[407, 3, 1, "", "test_alternate_usages"], [407, 3, 1, "", "test_master"], [407, 3, 1, "", "test_messy_starts_and_stops"], [407, 3, 1, "", "test_method_definitions"], [407, 3, 1, "", "test_property_access"]], "armi.utils.tests.test_custom_exceptions": [[408, 2, 1, "", "CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions.CustomExceptionTests": [[408, 3, 1, "", "exampleImportantMessage"], [408, 3, 1, "", "exampleInfoMessage"], [408, 3, 1, "", "exampleWarnMessage"], [408, 3, 1, "", "exampleWarnWhenRootMessage"], [408, 3, 1, "", "test_important_decorator"], [408, 3, 1, "", "test_info_decorator"], [408, 3, 1, "", "test_warn_decorator"], [408, 3, 1, "", "test_warn_when_root_decorator"]], "armi.utils.tests.test_densityTools": [[409, 2, 1, "", "TestDensityTools"], [409, 2, 1, "", "UraniumOxide"]], "armi.utils.tests.test_densityTools.TestDensityTools": [[409, 3, 1, "", "test_applyIsotopicsMix"], [409, 3, 1, "", "test_calculateNumberDensity"], [409, 3, 1, "", "test_expandElement"], [409, 3, 1, "", "test_expandElementalMassFracsToNuclides"], [409, 3, 1, "", "test_expandElementalZeroMassFrac"], [409, 3, 1, "", "test_formatMaterialCard"], [409, 3, 1, "", "test_getChemicals"], [409, 3, 1, "", "test_getMassFractions"], [409, 3, 1, "", "test_getMassInGrams"], [409, 3, 1, "", "test_getNDensFromMasses"], [409, 3, 1, "", "test_normalizeNuclideList"]], "armi.utils.tests.test_densityTools.UraniumOxide": [[409, 3, 1, "", "density"], [409, 3, 1, "", "pseudoDensity"]], "armi.utils.tests.test_directoryChangers": [[410, 7, 1, "", "ExpectedException"], [410, 2, 1, "", "TestDirectoryChangers"]], "armi.utils.tests.test_directoryChangers.TestDirectoryChangers": [[410, 3, 1, "", "test_change_to_nonexisting_fails"], [410, 3, 1, "", "test_change_to_nonexisting_works_forced"], [410, 3, 1, "", "test_exception"], [410, 3, 1, "", "test_exception_disabled"], [410, 3, 1, "", "test_file_retrieval"], [410, 3, 1, "", "test_file_retrieval_missing_file"], [410, 3, 1, "", "test_mpiAction"], [410, 3, 1, "", "test_mpiActionFailsOnNonexistentPath"], [410, 3, 1, "", "test_temporary_cleans"]], "armi.utils.tests.test_dochelpers": [[411, 2, 1, "", "TestDocHelpers"]], "armi.utils.tests.test_dochelpers.TestDocHelpers": [[411, 3, 1, "", "test_createFigure"], [411, 3, 1, "", "test_createTable"], [411, 3, 1, "", "test_paramTable"], [411, 3, 1, "", "test_settingsTable"]], "armi.utils.tests.test_flags": [[412, 2, 1, "", "ExampleFlag"], [412, 2, 1, "", "TestFlag"]], "armi.utils.tests.test_flags.ExampleFlag": [[412, 4, 1, "", "BAR"], [412, 4, 1, "", "BAZ"], [412, 4, 1, "", "FOO"]], "armi.utils.tests.test_flags.TestFlag": [[412, 3, 1, "", "test_auto"], [412, 3, 1, "", "test_bitwise"], [412, 3, 1, "", "test_bool"], [412, 3, 1, "", "test_collision_creation"], [412, 3, 1, "", "test_collision_extension"], [412, 3, 1, "", "test_extend"], [412, 3, 1, "", "test_getitem"], [412, 3, 1, "", "test_hashable"], [412, 3, 1, "", "test_inclusion"], [412, 3, 1, "", "test_iteration"]], "armi.utils.tests.test_hexagon": [[413, 2, 1, "", "TestHexagon"]], "armi.utils.tests.test_hexagon.TestHexagon": [[413, 3, 1, "", "test_hexagon_area"], [413, 3, 1, "", "test_numPositionsInRing"]], "armi.utils.tests.test_iterables": [[414, 2, 1, "", "TestIterables"]], "armi.utils.tests.test_iterables.TestIterables": [[414, 3, 1, "", "test_addingSequences"], [414, 3, 1, "", "test_appendSequence"], [414, 3, 1, "", "test_chunk"], [414, 3, 1, "", "test_copySequence"], [414, 3, 1, "", "test_extendSequence"], [414, 3, 1, "", "test_flatten"], [414, 3, 1, "", "test_packingAndUnpackingBinaryStrings"], [414, 3, 1, "", "test_packingAndUnpackingHexStrings"], [414, 3, 1, "", "test_sequence"], [414, 3, 1, "", "test_sequenceInit"], [414, 3, 1, "", "test_split"]], "armi.utils.tests.test_mathematics": [[415, 2, 1, "", "TestMath"]], "armi.utils.tests.test_mathematics.TestMath": [[415, 3, 1, "", "test_average1DWithinTolerance"], [415, 3, 1, "", "test_average1DWithinToleranceInvalid"], [415, 3, 1, "", "test_convertToSlice"], [415, 3, 1, "", "test_efmt"], [415, 3, 1, "", "test_expandRepeatedFloats"], [415, 3, 1, "", "test_findClosest"], [415, 3, 1, "", "test_findNearestValue"], [415, 3, 1, "", "test_fixThreeDigitExp"], [415, 3, 1, "", "test_getFloat"], [415, 3, 1, "", "test_getStepsFromValues"], [415, 3, 1, "", "test_isMonotonic"], [415, 3, 1, "", "test_linearInterpolation"], [415, 3, 1, "", "test_minimizeScalarFunc"], [415, 3, 1, "", "test_newtonsMethod"], [415, 3, 1, "", "test_parabola"], [415, 3, 1, "", "test_parabolicInterpolation"], [415, 3, 1, "", "test_relErr"], [415, 3, 1, "", "test_resampleStepwiseAvg0"], [415, 3, 1, "", "test_resampleStepwiseAvg1"], [415, 3, 1, "", "test_resampleStepwiseAvg2"], [415, 3, 1, "", "test_resampleStepwiseAvg3"], [415, 3, 1, "", "test_resampleStepwiseAvg4"], [415, 3, 1, "", "test_resampleStepwiseAvg5"], [415, 3, 1, "", "test_resampleStepwiseAvg6"], [415, 3, 1, "", "test_resampleStepwiseAvg7"], [415, 3, 1, "", "test_resampleStepwiseAvgAllNones"], [415, 3, 1, "", "test_resampleStepwiseAvgComplicatedNone"], [415, 3, 1, "", "test_resampleStepwiseAvgNpArray"], [415, 3, 1, "", "test_resampleStepwiseAvgNpArrayAverage"], [415, 3, 1, "", "test_resampleStepwiseAvgOneNone"], [415, 3, 1, "", "test_resampleStepwiseSum0"], [415, 3, 1, "", "test_resampleStepwiseSum1"], [415, 3, 1, "", "test_resampleStepwiseSum2"], [415, 3, 1, "", "test_resampleStepwiseSum3"], [415, 3, 1, "", "test_resampleStepwiseSum4"], [415, 3, 1, "", "test_resampleStepwiseSum5"], [415, 3, 1, "", "test_resampleStepwiseSum6"], [415, 3, 1, "", "test_resampleStepwiseSum7"], [415, 3, 1, "", "test_resampleStepwiseSumAllNones"], [415, 3, 1, "", "test_resampleStepwiseSumOneNone"], [415, 3, 1, "", "test_rotateXY"]], "armi.utils.tests.test_outputCache": [[416, 2, 1, "", "TestOutputCache"]], "armi.utils.tests.test_outputCache.TestOutputCache": [[416, 3, 1, "", "test_deleteCache"], [416, 3, 1, "", "test_getCachedFolder"], [416, 3, 1, "", "test_hashFiles"], [416, 3, 1, "", "test_makeOutputManifest"], [416, 3, 1, "", "test_retrieveOutput"]], "armi.utils.tests.test_parsing": [[417, 2, 1, "", "LiteralEvalTest"]], "armi.utils.tests.test_parsing.LiteralEvalTest": [[417, 3, 1, "", "test_parseValue"], [417, 3, 1, "", "test_tryLiteralEval"]], "armi.utils.tests.test_pathTools": [[418, 2, 1, "", "PathToolsTests"]], "armi.utils.tests.test_pathTools.PathToolsTests": [[418, 3, 1, "", "test_cleanPathNoMpi"], [418, 3, 1, "", "test_importCustomModule"], [418, 3, 1, "", "test_isAccessible"], [418, 3, 1, "", "test_isFilePathNewer"], [418, 3, 1, "", "test_moduleAndAttributeExist"], [418, 3, 1, "", "test_separateModuleAndAttribute"]], "armi.utils.tests.test_plotting": [[419, 2, 1, "", "TestPlotting"]], "armi.utils.tests.test_plotting.TestPlotting": [[419, 3, 1, "", "test_plotAssemblyTypes"], [419, 3, 1, "", "test_plotBlockFlux"], [419, 3, 1, "", "test_plotCartesianBlock"], [419, 3, 1, "", "test_plotDepthMap"], [419, 3, 1, "", "test_plotHexBlock"]], "armi.utils.tests.test_properties": [[420, 2, 1, "", "ImmutableClass"], [420, 2, 1, "", "ImmutablePropertyTests"]], "armi.utils.tests.test_properties.ImmutableClass": [[420, 3, 1, "", "initialize"], [420, 5, 1, "", "myNum"]], "armi.utils.tests.test_properties.ImmutablePropertyTests": [[420, 3, 1, "", "test_cannotAssignValueToImmutableProperty"], [420, 3, 1, "", "test_retreivingUnassignedValueRaisesError"], [420, 3, 1, "", "test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "armi.utils.tests.test_reportPlotting": [[421, 2, 1, "", "TestRadar"]], "armi.utils.tests.test_reportPlotting.TestRadar": [[421, 3, 1, "", "test_buVsTime"], [421, 3, 1, "", "test_createPlotMetaData"], [421, 3, 1, "", "test_keffVsTime"], [421, 3, 1, "", "test_movesVsCycle"], [421, 3, 1, "", "test_plotAxialProfile"], [421, 3, 1, "", "test_radar"], [421, 3, 1, "", "test_valueVsTime"], [421, 3, 1, "", "test_xsHistoryVsTime"]], "armi.utils.tests.test_textProcessors": [[422, 2, 1, "", "SequentialReaderTests"], [422, 2, 1, "", "YamlIncludeTest"]], "armi.utils.tests.test_textProcessors.SequentialReaderTests": [[422, 3, 1, "", "test_readFile"], [422, 3, 1, "", "test_readFileWithPattern"], [422, 4, 1, "", "textStream"]], "armi.utils.tests.test_textProcessors.YamlIncludeTest": [[422, 3, 1, "", "test_findIncludes"], [422, 3, 1, "", "test_resolveIncludes"], [422, 3, 1, "", "test_resolveIncludes_StringIO"]], "armi.utils.tests.test_triangle": [[423, 2, 1, "", "TestTriangle"]], "armi.utils.tests.test_triangle.TestTriangle": [[423, 3, 1, "", "test_checkIfPointIsInTriangle"], [423, 3, 1, "", "test_checkIfPointIsInTriangle2"], [423, 3, 1, "", "test_getTriangleArea"]], "armi.utils.tests.test_units": [[424, 2, 1, "", "TestUnits"]], "armi.utils.tests.test_units.TestUnits": [[424, 3, 1, "", "test_convertXtoPascal"], [424, 3, 1, "", "test_getTc"], [424, 3, 1, "", "test_getTemperature"], [424, 3, 1, "", "test_getTf"], [424, 3, 1, "", "test_getTk"], [424, 3, 1, "", "test_getTmev"], [424, 3, 1, "", "test_getXYLineParameters"], [424, 3, 1, "", "test_pressure_converter"], [424, 3, 1, "", "test_sanitizeAngle"]], "armi.utils.tests.test_utils": [[425, 2, 1, "", "CyclesSettingsTests"], [425, 2, 1, "", "TestGeneralUtils"]], "armi.utils.tests.test_utils.CyclesSettingsTests": [[425, 4, 1, "", "availabilityFactorsDetailedSolution"], [425, 4, 1, "", "availabilityFactorsSimpleSolution"], [425, 4, 1, "", "burnStepsDetailedSolution"], [425, 4, 1, "", "burnStepsSimpleSolution"], [425, 4, 1, "", "cycleLengthsDetailedSolution"], [425, 4, 1, "", "cycleLengthsSimpleSolution"], [425, 4, 1, "", "cycleNamesDetailedSolution"], [425, 4, 1, "", "cycleNamesSimpleSolution"], [425, 4, 1, "", "detailedCyclesSettings"], [425, 4, 1, "", "maxBurnStepsDetailedSolution"], [425, 4, 1, "", "maxBurnStepsSimpleSolution"], [425, 4, 1, "", "nodesPerCycleDetailedSolution"], [425, 4, 1, "", "nodesPerCycleSimpleSolution"], [425, 4, 1, "", "powerFractionsDetailedSolution"], [425, 4, 1, "", "powerFractionsSimpleSolution"], [425, 4, 1, "", "simpleCyclesSettings"], [425, 4, 1, "", "stepLengthsDetailedSolution"], [425, 4, 1, "", "stepLengthsSimpleSolution"], [425, 3, 1, "", "test_getAvailabilityFactors"], [425, 3, 1, "", "test_getBurnSteps"], [425, 3, 1, "", "test_getCumulativeNodeNum"], [425, 3, 1, "", "test_getCycleLengths"], [425, 3, 1, "", "test_getCycleNames"], [425, 3, 1, "", "test_getCycleNodeFromCumulativeNode"], [425, 3, 1, "", "test_getCycleNodeFromCumulativeStep"], [425, 3, 1, "", "test_getMaxBurnSteps"], [425, 3, 1, "", "test_getNodesPerCycle"], [425, 3, 1, "", "test_getPowerFractions"], [425, 3, 1, "", "test_getPreviousTimeNode"], [425, 3, 1, "", "test_getStepLengths"], [425, 3, 1, "", "test_hasBurnup"]], "armi.utils.tests.test_utils.TestGeneralUtils": [[425, 3, 1, "", "test_capStrLen"], [425, 3, 1, "", "test_classesInHierarchy"], [425, 3, 1, "", "test_codeTiming"], [425, 3, 1, "", "test_createFormattedStrWithDelimiter"], [425, 3, 1, "", "test_list2str"], [425, 3, 1, "", "test_mergeableDictionary"], [425, 3, 1, "", "test_plotMatrix"], [425, 3, 1, "", "test_prependToList"], [425, 3, 1, "", "test_slantSplit"]], "armi.utils.textProcessors": [[426, 6, 1, "", "DECIMAL_PATTERN"], [426, 6, 1, "", "FLOATING_PATTERN"], [426, 2, 1, "", "FileMark"], [426, 6, 1, "", "SCIENTIFIC_PATTERN"], [426, 2, 1, "", "SequentialReader"], [426, 2, 1, "", "SequentialStringIOReader"], [426, 2, 1, "", "SmartList"], [426, 2, 1, "", "TextProcessor"], [426, 1, 1, "", "findYamlInclusions"], [426, 1, 1, "", "resolveMarkupInclusions"]], "armi.utils.textProcessors.SequentialReader": [[426, 3, 1, "", "consumeLine"], [426, 3, 1, "", "issueWarningOnFindingText"], [426, 3, 1, "", "raiseErrorOnFindingPattern"], [426, 3, 1, "", "raiseErrorOnFindingText"], [426, 3, 1, "", "searchForPattern"], [426, 3, 1, "", "searchForPatternOnNextLine"], [426, 3, 1, "", "searchForText"]], "armi.utils.textProcessors.SmartList": [[426, 3, 1, "", "close"], [426, 3, 1, "", "next"], [426, 3, 1, "", "seek"]], "armi.utils.textProcessors.TextProcessor": [[426, 3, 1, "", "checkErrors"], [426, 4, 1, "", "decimal"], [426, 3, 1, "", "errorChecking"], [426, 3, 1, "", "fsearch"], [426, 4, 1, "", "number"], [426, 3, 1, "", "reset"], [426, 4, 1, "", "scipat"]], "armi.utils.triangle": [[427, 1, 1, "", "checkIfPointIsInTriangle"], [427, 1, 1, "", "getTriangleArea"], [427, 1, 1, "", "getTriangleCentroid"]], "armi.utils.units": [[428, 1, 1, "", "convertAtmToPascal"], [428, 1, 1, "", "convertBarToPascal"], [428, 1, 1, "", "convertMmhgToPascal"], [428, 1, 1, "", "getTc"], [428, 1, 1, "", "getTemperature"], [428, 1, 1, "", "getTf"], [428, 1, 1, "", "getTk"], [428, 1, 1, "", "getTmev"], [428, 1, 1, "", "getXYLineParameters"], [428, 1, 1, "", "sanitizeAngle"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"armi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 435, 436, 437, 438, 439, 440, 468, 470, 471, 473, 475, 476, 477, 491, 492, 493], "packag": [0, 2, 3, 10, 19, 26, 30, 34, 37, 43, 45, 49, 54, 57, 70, 76, 115, 141, 145, 149, 153, 161, 162, 177, 192, 199, 205, 209, 212, 219, 223, 228, 233, 239, 243, 246, 248, 250, 253, 256, 263, 270, 271, 273, 280, 286, 293, 302, 309, 314, 317, 327, 336, 344, 357, 359, 366, 369, 385, 405, 430, 440, 477], "note": [0, 1, 3, 5, 6, 7, 8, 13, 16, 17, 44, 46, 47, 51, 52, 53, 74, 75, 76, 77, 78, 79, 84, 85, 99, 100, 101, 107, 108, 111, 112, 136, 137, 138, 148, 150, 151, 152, 156, 157, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 176, 181, 187, 193, 196, 197, 198, 200, 201, 204, 208, 210, 211, 212, 213, 216, 217, 220, 221, 232, 233, 235, 236, 238, 240, 242, 244, 247, 249, 251, 252, 254, 257, 264, 265, 279, 281, 285, 286, 289, 290, 291, 292, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 316, 318, 324, 329, 331, 332, 333, 334, 339, 342, 343, 346, 347, 352, 355, 358, 363, 364, 367, 369, 375, 385, 386, 389, 390, 391, 392, 396, 398, 399, 401, 402, 419, 426, 427, 428, 470, 471, 472], "subpackag": [0, 2, 3, 19, 34, 43, 45, 57, 76, 141, 149, 161, 162, 199, 209, 212, 223, 233, 239, 246, 253, 280, 286, 309, 357, 385], "submodul": [0, 2, 3, 10, 19, 26, 30, 34, 37, 43, 45, 49, 54, 57, 70, 76, 115, 141, 145, 149, 153, 161, 162, 177, 192, 199, 205, 209, 212, 219, 223, 228, 233, 239, 243, 246, 248, 250, 253, 256, 263, 271, 273, 280, 286, 293, 302, 309, 314, 317, 327, 336, 344, 357, 359, 366, 369, 385, 405, 475], "app": [1, 435, 475], "modul": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 247, 249, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 440], "histor": [1, 209], "fun": [1, 209], "fact": [1, 209], "bookkeep": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "db": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "when": 3, "updat": [3, 430], "version": [3, 440], "databas": [3, 16, 62, 473, 494], "revis": 3, "changelog": 3, "comparedb3": 4, "database3": 5, "databaseinterfac": 6, "factori": [7, 478], "layout": 8, "permiss": 9, "test": [10, 11, 12, 13, 14, 26, 27, 28, 30, 31, 32, 33, 37, 38, 39, 49, 50, 51, 54, 55, 56, 70, 71, 72, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 145, 146, 147, 153, 154, 155, 156, 157, 158, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 205, 206, 207, 208, 219, 220, 221, 222, 228, 229, 230, 231, 243, 244, 245, 248, 249, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 271, 272, 293, 294, 295, 296, 297, 298, 299, 300, 301, 317, 318, 319, 320, 321, 322, 323, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 432, 439, 440], "test_comparedb3": 11, "test_database3": 12, "test_databaseinterfac": 13, "test_layout": 14, "typedef": 15, "historytrack": 16, "get": [16, 433, 468, 469, 500], "histori": [16, 468, 491, 494], "inform": 16, "us": [16, 162, 430, 436, 439, 468], "base": [16, 142, 149, 435, 475], "tracker": 16, "specifi": [16, 479], "paramet": [16, 225, 260, 275, 285, 336, 337, 338, 339, 340, 433, 439, 478, 483, 484, 485, 486, 499], "add": 16, "eol": 16, "report": [16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 261, 438, 482, 492], "block": [16, 285, 447, 452, 454, 479, 480, 484, 488, 497], "assembli": [16, 281, 479, 480, 483, 488, 489, 491], "track": 16, "maininterfac": 17, "memoryprofil": 18, "data": [20, 439, 477, 493], "html": [21, 438], "newreportutil": 22, "newreport": 23, "reportinterfac": 24, "reportingutil": 25, "test_newreport": 27, "test_report": 28, "snapshotinterfac": 29, "test_historytrack": 31, "test_memoryprofil": 32, "test_snapshot": 33, "visual": [34, 35, 36, 37, 38, 39, 40, 41, 42], "dumper": 35, "entrypoint": [36, 63], "test_vi": 38, "test_xdmf": 39, "util": [40, 232, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "vtk": 41, "limit": 41, "xdmf": [42, 475], "case": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 468, 491], "todo": 44, "inputmodifi": [45, 46, 47, 48, 49, 50, 51], "neutronicsmodifi": 47, "pintypeinputmodifi": 48, "test_inputmodifi": 50, "test_pintypeinputmodifi": 51, "suit": 52, "suitebuild": 53, "test_cas": 55, "test_suitebuild": 56, "cli": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "checkinput": 58, "cleantemp": 59, "clone": 60, "comparecas": 61, "gridgui": 64, "migrateinput": 65, "modifi": [66, 473, 478], "reportsentrypoint": 67, "run": [68, 439, 475, 489], "runsuit": 69, "test_runentrypoint": 71, "test_runsuit": 72, "conftest": 73, "context": 74, "interfac": [75, 433, 475], "materi": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 446, 461, 475, 476], "air": 77, "alloy200": 78, "b4c": 79, "be9": 80, "cah2": 81, "californium": 82, "concret": 83, "copper": 84, "c": 85, "custom": [86, 475, 480, 488], "graphit": 87, "hafnium": 88, "hastelloyn": 89, "ht9": 90, "inconel": 91, "inconel600": 92, "inconel625": 93, "inconel800": 94, "inconelpe16": 95, "inconelx750": 96, "lead": 97, "leadbismuth": 98, "lithium": [99, 477], "magnesium": 100, "mgo": 102, "mixtur": 103, "molybdenum": 104, "mox": [105, 480], "nz": 106, "potassium": 107, "scandiumoxid": 108, "sic": 109, "sodium": 110, "sodiumchlorid": 111, "sulfur": 112, "tzm": 113, "tantalum": 114, "test__init__": 116, "test_air": 117, "test_b4c": 118, "test_be9": 119, "test_graphit": 120, "test_lithium": 121, "test_materi": 122, "test_sic": 123, "test_sulfur": 124, "test_thoriumoxid": 125, "test_uzr": 126, "test_wat": 127, "thu": 128, "thorium": 129, "thoriumoxid": 130, "uthzr": 131, "uzr": 132, "uranium": 133, "uraniumoxid": 134, "void": 135, "water": 136, "yttriumoxid": 137, "zincoxid": 138, "zr": 139, "meta": 140, "migrat": [141, 142, 143, 144, 145, 146, 147], "m0_1_3": 143, "m0_1_6": 144, "test_m0_1_6": 146, "test_migration_bas": 147, "mpiaction": 148, "sampl": 148, "mpi": [148, 436], "action": 148, "workflow": 148, "nucdirectori": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "element": [149, 150, 438, 477], "nuclid": [149, 152, 453, 477, 480, 488], "name": [149, 439, 488], "label": [149, 171], "id": 149, "indic": 149, "rapid": 149, "access": [149, 477, 482, 493], "list": [150, 152, 461, 475, 488], "nucdir": 151, "nuclidebas": 152, "test_el": 154, "test_nucdirectori": 155, "test_nuclidebas": 156, "test_thermalscatt": 157, "test_transmut": 158, "thermalscatt": 159, "transmut": [160, 464], "nucleardataio": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "cccc": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "system": [162, 468, 480, 488], "implement": [162, 435], "detail": [162, 435, 453, 491], "discuss": 162, "compx": 164, "dif3d": 165, "dlayx": 166, "fixsrc": 167, "gamiso": 168, "geodst": 169, "isotx": [170, 459], "nhflux": 172, "pmatrx": 173, "pwdint": 174, "rtflux": 175, "rzflux": 176, "test_cccc": 178, "test_compx": 179, "test_dif3d": 180, "test_dlayx": 181, "test_gamiso": 182, "test_geodst": 183, "test_isotx": 184, "test_label": 185, "test_nhflux": 186, "test_pmatrx": 187, "test_pwdint": 188, "test_rtflux": 189, "test_rzflux": 190, "nuclearfilemetadata": 191, "test_xscollect": 193, "test_xslibrari": 194, "test_xsnuclid": 195, "xscollect": 196, "xslibrari": 197, "xsnuclid": 198, "oper": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 433, 468, 489], "operatormpi": 201, "runtyp": 202, "settingsvalid": 203, "snapshot": [204, 433], "test_inspector": 206, "test_operatorsnapshot": 207, "test_oper": 208, "physic": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 468, 475, 497], "constant": [210, 330], "execut": [211, 224], "fuelcycl": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "assemblyrotationalgorithm": 213, "fuelhandlerfactori": 214, "fuelhandlerinterfac": 215, "fuelhandl": 216, "hexassemblyfuelmgmtutil": 217, "set": [218, 227, 262, 277, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 475, 479, 480, 491, 492, 493, 494], "test_assemblyrotationalgorithm": 220, "test_fuelhandl": 221, "test_hexassemblyfuelmgmtutil": 222, "fuelperform": [223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "plugin": [226, 276, 279, 430, 433, 435, 475, 488], "test_execut": [229, 272], "test_fuelperformanceplugin": 230, "test_fuelperformanceutil": 231, "neutron": [233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269], "const": [234, 274], "crosssectiongroupmanag": 235, "crosssectionset": 236, "diffisotx": 237, "energygroup": 238, "fissionproductmodel": [239, 240, 241, 242, 243, 244, 245], "fissionproductmodelset": 241, "lumpedfissionproduct": 242, "test_fissionproductmodel": 244, "test_lumpedfissionproduct": 245, "globalflux": [246, 247, 248, 249], "globalfluxinterfac": 247, "test_globalfluxinterfac": 249, "isotopicdeplet": [250, 251, 252], "crosssectiont": 251, "isotopicdepletioninterfac": 252, "latticephys": [253, 254, 255, 256, 257, 258], "latticephysicsinterfac": 254, "latticephysicswrit": 255, "test_latticeinterfac": 257, "test_latticewrit": 258, "macroxsgenerationinterfac": 259, "test_crosssectionmanag": 264, "test_crosssectionset": 265, "test_crosssectiont": 266, "test_energygroup": 267, "test_macroxsgenerationinterfac": 268, "test_neutronicsplugin": 269, "safeti": 270, "thermalhydraul": [273, 274, 275, 276, 277], "pluginmanag": 278, "reactor": [280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 433, 448, 462, 463, 473, 478, 479, 480, 494, 499], "assemblylist": 282, "assemblyparamet": 283, "blockparamet": 284, "blueprint": [286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 433, 479, 480, 488, 494], "assemblyblueprint": 287, "blockblueprint": 288, "componentblueprint": 289, "gridblueprint": 290, "isotopicopt": 291, "reactorblueprint": 292, "test_assemblyblueprint": 294, "test_blockblueprint": 295, "test_blueprint": 296, "test_componentblueprint": 297, "test_customisotop": 298, "test_gridblueprint": 299, "test_materialmodif": 300, "test_reactorblueprint": 301, "compon": [302, 303, 304, 305, 306, 307, 452, 485, 488], "basicshap": 303, "complexshap": 304, "componentparamet": 306, "volumetricshap": 307, "composit": 308, "convert": [309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 433], "axialexpansionchang": 310, "blockconvert": 311, "geometryconvert": 312, "meshconvert": 313, "parametersweep": [314, 315], "generalparametersweepconvert": 315, "pintypeblockconvert": 316, "test_axialexpansionchang": 318, "test_blockconvert": 319, "test_geometryconvert": 320, "test_meshconvert": 321, "test_pintypeblockconvert": 322, "test_uniformmesh": 323, "uniformmesh": 324, "requir": [324, 440, 468], "flag": [325, 394, 480, 488], "geometri": [326, 447, 448], "grid": [327, 328, 329, 330, 331, 332, 333, 334, 335, 456, 457, 458, 480, 488], "axial": [328, 498], "cartesian": [329, 457], "hexagon": [332, 396], "locat": 333, "structuredgrid": 334, "thetarz": 335, "exampl": [336, 436, 489], "basic": 336, "usag": [336, 399], "design": [336, 478], "consider": 336, "except": [337, 439], "parametercollect": 338, "parameterdefinit": 339, "resolvecollect": 340, "reactorparamet": 341, "systemlayoutinput": 343, "test_assembli": 345, "test_block": 346, "test_compon": 347, "test_composit": 348, "test_flag": [349, 412], "test_geometri": 350, "test_paramet": 351, "test_reactor": 352, "test_rz_reactor": 353, "test_zon": 354, "zone": 355, "runlog": 356, "caseset": 358, "fwset": [359, 360, 361, 362, 363], "databaseset": 360, "globalset": 361, "reportset": 362, "tightcouplingset": 363, "settingsio": 365, "test_set": 367, "test_settingsio": 368, "mockrunlog": 370, "refsmallreactorshufflelog": 371, "test_app": 372, "test_armitesthelp": 373, "test_cartesian": 374, "test_interfac": 375, "test_lwrinput": 376, "test_mpiact": 377, "test_mpifeatur": 378, "test_mpiparamet": 379, "test_notebook": 380, "test_plugin": 381, "test_runlog": 382, "test_test": 383, "test_user_plugin": 384, "asciimap": 386, "codetim": 387, "customexcept": 388, "densitytool": 389, "directorychang": 390, "directorychangersmpi": 391, "dochelp": 392, "dynamicimport": 393, "grideditor": 395, "iter": 397, "mathemat": 398, "outputcach": 399, "api": [399, 470], "pars": 400, "pathtool": 401, "plot": [402, 453, 459, 460, 463, 477], "properti": 403, "reportplot": 404, "test_asciimap": 406, "test_codetim": 407, "test_custom_except": 408, "test_densitytool": 409, "test_directorychang": 410, "test_dochelp": 411, "test_hexagon": 413, "test_iter": 414, "test_mathemat": 415, "test_outputcach": 416, "test_pars": 417, "test_pathtool": 418, "test_plot": 419, "test_properti": 420, "test_reportplot": 421, "test_textprocessor": 422, "test_triangl": 423, "test_unit": 424, "test_util": 425, "textprocessor": 426, "triangl": 427, "unit": [428, 439], "document": [430, 440], "build": [430, 462, 471, 479, 480], "link": [430, 468, 488], "from": [430, 459, 473, 483, 484, 485, 486, 499], "automat": [430, 452], "apidoc": 430, "namespac": 430, "galleri": [430, 441, 466, 481], "jupyt": 430, "notebook": 430, "entri": [431, 433, 475, 482], "point": [431, 433, 475, 482], "first": [432, 475], "time": [432, 449, 465], "contributor": 432, "guid": 432, "help": [432, 468], "want": 432, "submit": 432, "chang": [432, 470, 471], "licens": [432, 440, 468], "tool": [432, 440], "framework": [433, 444, 451, 466, 477, 481, 483, 484, 485, 486, 499], "architectur": 433, "The": [433, 438, 468, 469, 476, 477, 480, 488, 491, 494, 496, 500], "model": [433, 439, 473], "find": 433, "object": 433, "standard": [433, 439, 496], "stack": 433, "interact": 433, "hook": [433, 438], "ad": [433, 475], "new": [433, 440, 468, 471, 475], "how": [433, 477, 479], "call": 433, "develop": [434, 469, 500], "doc": [434, 487], "make": [435, 456, 457, 458, 475, 488], "head": 435, "up": [435, 477, 479, 480], "some": [435, 491, 493], "your": [435, 475], "own": 435, "applic": [435, 443, 450, 466, 481], "parallel": 436, "code": [436, 439, 469, 500], "commun": [436, 468], "crash": 436, "cours": 436, "within": [436, 439], "bcast": 436, "scatter": [436, 460], "A": [436, 478], "simplifi": 436, "approach": 436, "profil": 437, "getreportcont": 438, "what": [438, 471, 475, 480], "i": [438, 440], "reportcont": 438, "section": [438, 488], "tabl": 438, "imag": 438, "timeseri": 438, "summari": 438, "practic": 439, "format": [439, 475, 494], "black": 439, "remov": 439, "comment": 439, "out": 439, "avoid": 439, "hard": 439, "global": 439, "keyword": 439, "convent": 439, "meaning": 439, "gener": 439, "quick": [439, 468], "refer": 439, "common": 439, "prefer": 439, "shorter": 439, "method": 439, "repeat": 439, "public": 439, "should": 439, "have": 439, "docstr": 439, "import": 439, "statement": 439, "order": 439, "don": [439, 440], "t": [439, 440], "creat": [439, 475], "nake": 439, "input": [439, 462, 469, 479, 480, 488, 489, 490, 491, 500], "file": [439, 475, 479, 480, 488, 491, 494], "address": 439, "ruff": 439, "warn": 439, "do": 439, "": [439, 471], "infrastructur": 440, "good": 440, "commit": 440, "messag": 440, "pull": 440, "request": 440, "One": 440, "idea": 440, "pr": 440, "open": 440, "until": 440, "readi": 440, "It": 440, "watch": 440, "depend": 440, "manag": [440, 455, 473, 479, 480, 489], "pyproject": 440, "toml": 440, "third": 440, "parti": 440, "releas": [440, 470, 471, 472], "level": 440, "log": 440, "analysi": [442, 445, 466, 468, 481], "write": 446, "mcnp": 446, "card": 446, "hex": [447, 448, 456], "rz": [447, 448], "convers": [447, 448], "comput": [449, 452, 454, 465], "volum": 452, "fraction": 452, "thermal": [452, 475, 480, 498], "expans": [452, 498], "chart": [453, 477], "more": 453, "reaction": [454, 464], "rate": 454, "fuel": [455, 473, 479, 480, 489], "lwr": 455, "theta": 458, "r": 458, "z": 458, "multi": [459, 460], "group": [459, 460], "x": 459, "matrix": 460, "librari": [461, 469, 476, 500], "programmat": 462, "facemap": 463, "decai": 464, "glossari": 467, "start": [468, 475], "background": 468, "coupl": [468, 497], "autom": 468, "capabl": 468, "research": 468, "scientist": 468, "nuclear": 468, "startup": 468, "engin": 468, "vendor": 468, "enthusiast": 468, "disclaim": 468, "instal": [469, 500], "prerequisit": [469, 500], "right": [469, 500], "python": [469, 475, 500], "command": [469, 500], "prepar": [469, 500], "virtual": [469, 500], "environ": [469, 491, 500], "option": [469, 500], "1": [469, 470, 471, 473, 500], "2": [469, 470, 471, 500], "repositori": [469, 500], "verifi": [469, 500], "setup": [469, 500], "gui": [469, 491, 500], "output": [469, 475, 495, 496, 500], "v0": [470, 471], "7": [470, 471, 477], "bug": [470, 471], "fix": [470, 471], "6": [470, 471], "deprec": 470, "bugfix": 470, "5": [470, 471], "user": [470, 487], "face": 470, "enhanc": 470, "backend": 470, "4": [470, 471], "3": [470, 471, 480], "hotfix": 470, "0": [470, 471], "10": 471, "9": 471, "8": 471, "backward": 471, "incompat": 471, "hand": 473, "termin": 473, "initi": 473, "explor": [473, 477], "quiz": 473, "question": 473, "state": [473, 493, 494], "number": 473, "densiti": 473, "save": 473, "disk": 473, "load": [473, 494], "tutori": 474, "regist": 475, "defin": [475, 477, 479, 480, 488], "class": 475, "v": 475, "ar": [475, 477, 479], "again": 475, "kernel": 475, "dummi": 475, "flux": 475, "hydraul": 475, "debug": 475, "window": 475, "tip": [475, 489], "yet": 475, "anoth": 475, "wai": 475, "why": 475, "__main__": 475, "py": 475, "check": 475, "fanci": 475, "bonu": 475, "hoc": 475, "userplugin": 475, "individu": 477, "attribut": 477, "mani": 477, "total": 477, "look": 477, "u": 477, "235": 477, "li": 477, "sweep": 478, "simpl": 478, "one": 478, "dimension": 478, "full": 478, "post": 478, "process": 478, "result": 478, "fast": 479, "non": 479, "radial": [479, 498], "shield": 479, "reflector": 479, "control": 479, "plenum": 479, "arrang": 479, "core": [479, 486], "map": 479, "isotop": [480, 488], "vector": 480, "uo2": 480, "moder": 480, "d": 480, "definit": 480, "ok": 480, "so": 480, "now": 480, "thermalhydraulicsplugin": 484, "fuelperformanceplugin": 484, "neutronicsplugin": [484, 486], "type": 488, "pin": 488, "lattic": 488, "behavior": 488, "advanc": 488, "topic": 488, "overlap": 488, "shape": 488, "area": 488, "modif": 488, "put": 488, "all": 488, "togeth": 488, "unshap": 488, "swapassembli": 489, "dischargeswap": 489, "swapcascad": 489, "choos": 489, "move": 489, "converg": 489, "diverg": 489, "branch": 489, "search": 489, "clicker": 491, "tab": 491, "special": 491, "kinet": 491, "cycl": 491, "restart": 491, "variabl": 493, "interest": 493, "info": 493, "extract": 494, "structur": 494, "loos": 497, "tight": 497, "eigenvalu": 497, "wise": 497, "power": 497, "contract": 498}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"armi package": [[0, "module-armi"]], "Notes": [[0, null], [1, null], [1, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [5, null], [5, null], [5, null], [5, null], [5, null], [6, null], [6, null], [6, null], [6, null], [7, null], [8, null], [8, null], [13, null], [16, null], [16, null], [17, null], [44, null], [44, null], [44, null], [44, null], [44, null], [44, null], [46, null], [47, null], [51, null], [52, null], [52, null], [53, null], [74, null], [74, null], [75, null], [75, null], [75, null], [75, null], [75, null], [75, null], [75, null], [75, null], [75, null], [75, null], [76, null], [77, null], [77, null], [78, null], [79, null], [79, null], [79, null], [84, null], [85, null], [99, null], [100, null], [101, null], [101, null], [101, null], [101, null], [101, null], [101, null], [101, null], [101, null], [101, null], [101, null], [107, null], [108, null], [111, null], [111, null], [112, null], [136, null], [136, null], [136, null], [136, null], [136, null], [136, null], [136, null], [137, null], [138, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [150, null], [150, null], [150, null], [151, null], [152, null], [152, null], [152, null], [152, null], [152, null], [152, null], [152, null], [152, null], [152, null], [152, null], [156, null], [157, null], [160, null], [160, null], [160, null], [160, null], [162, null], [163, null], [163, null], [163, null], [163, null], [163, null], [163, null], [163, null], [163, null], [163, null], [163, null], [163, null], [164, null], [164, null], [166, null], [168, null], [169, null], [170, null], [170, null], [170, null], [170, null], [171, null], [172, null], [172, null], [172, null], [173, null], [176, null], [181, null], [187, null], [193, null], [193, null], [196, null], [196, null], [196, null], [196, null], [196, null], [197, null], [197, null], [198, null], [198, null], [198, null], [198, null], [200, null], [200, null], [200, null], [200, null], [200, null], [200, null], [201, null], [201, null], [204, null], [208, null], [210, null], [211, null], [212, null], [213, null], [213, null], [216, null], [216, null], [216, null], [216, null], [216, null], [216, null], [216, null], [216, null], [216, null], [216, null], [216, null], [217, null], [217, null], [217, null], [220, null], [221, null], [232, null], [233, null], [235, null], [235, null], [235, null], [235, null], [235, null], [235, null], [235, null], [235, null], [236, null], [236, null], [236, null], [236, null], [236, null], [236, null], [238, null], [240, null], [240, null], [240, null], [242, null], [244, null], [247, null], [247, null], [247, null], [247, null], [249, null], [251, null], [252, null], [252, null], [254, null], [254, null], [254, null], [257, null], [257, null], [264, null], [265, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [281, null], [281, null], [281, null], [281, null], [281, null], [281, null], [281, null], [281, null], [281, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [285, null], [286, null], [286, null], [289, null], [290, null], [291, null], [291, null], [291, null], [292, null], [302, null], [302, null], [302, null], [302, null], [303, null], [303, null], [303, null], [303, null], [303, null], [304, null], [305, null], [305, null], [305, null], [305, null], [305, null], [305, null], [305, null], [305, null], [305, null], [307, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [308, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [310, null], [311, null], [311, null], [311, null], [312, null], [312, null], [312, null], [312, null], [312, null], [313, null], [316, null], [316, null], [318, null], [318, null], [318, null], [318, null], [318, null], [318, null], [318, null], [318, null], [318, null], [318, null], [324, null], [324, null], [324, null], [324, null], [324, null], [324, null], [324, null], [329, null], [329, null], [329, null], [331, null], [332, null], [332, null], [332, null], [332, null], [332, null], [333, null], [333, null], [334, null], [334, null], [339, null], [339, null], [339, null], [339, null], [339, null], [342, null], [342, null], [342, null], [342, null], [342, null], [342, null], [342, null], [342, null], [342, null], [342, null], [342, null], [342, null], [342, null], [342, null], [342, null], [342, null], [343, null], [343, null], [346, null], [346, null], [346, null], [347, null], [347, null], [352, null], [352, null], [355, null], [355, null], [358, null], [358, null], [358, null], [358, null], [358, null], [363, null], [363, null], [363, null], [364, null], [364, null], [367, null], [369, null], [375, null], [385, null], [385, null], [385, null], [385, null], [385, null], [385, null], [385, null], [385, null], [385, null], [385, null], [385, null], [385, null], [386, null], [389, null], [390, null], [391, null], [392, null], [396, null], [396, null], [396, null], [396, null], [398, null], [398, null], [399, null], [399, null], [399, null], [399, null], [401, null], [401, null], [402, null], [402, null], [402, null], [402, null], [419, null], [426, null], [426, null], [426, null], [426, null], [426, null], [426, null], [427, null], [427, null], [428, null]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [3, "subpackages"], [19, "subpackages"], [34, "subpackages"], [43, "subpackages"], [45, "subpackages"], [57, "subpackages"], [76, "subpackages"], [141, "subpackages"], [149, "subpackages"], [161, "subpackages"], [162, "subpackages"], [199, "subpackages"], [209, "subpackages"], [212, "subpackages"], [223, "subpackages"], [233, "subpackages"], [239, "subpackages"], [246, "subpackages"], [253, "subpackages"], [280, "subpackages"], [286, "subpackages"], [309, "subpackages"], [357, "subpackages"], [385, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [10, "submodules"], [19, "submodules"], [26, "submodules"], [30, "submodules"], [34, "submodules"], [37, "submodules"], [43, "submodules"], [45, "submodules"], [49, "submodules"], [54, "submodules"], [57, "submodules"], [70, "submodules"], [76, "submodules"], [115, "submodules"], [141, "submodules"], [145, "submodules"], [149, "submodules"], [153, "submodules"], [161, "submodules"], [162, "submodules"], [177, "submodules"], [192, "submodules"], [199, "submodules"], [205, "submodules"], [209, "submodules"], [212, "submodules"], [219, "submodules"], [223, "submodules"], [228, "submodules"], [233, "submodules"], [239, "submodules"], [243, "submodules"], [246, "submodules"], [248, "submodules"], [250, "submodules"], [253, "submodules"], [256, "submodules"], [263, "submodules"], [271, "submodules"], [273, "submodules"], [280, "submodules"], [286, "submodules"], [293, "submodules"], [302, "submodules"], [309, "submodules"], [314, "submodules"], [317, "submodules"], [327, "submodules"], [336, "submodules"], [344, "submodules"], [357, "submodules"], [359, "submodules"], [366, "submodules"], [369, "submodules"], [385, "submodules"], [405, "submodules"]], "armi.apps module": [[1, "module-armi.apps"]], "Historical Fun Fact": [[1, null]], "armi.bookkeeping package": [[2, "module-armi.bookkeeping"]], "armi.bookkeeping.db package": [[3, "module-armi.bookkeeping.db"]], "When updating a db version": [[3, "when-updating-a-db-version"]], "Database revision changelog": [[3, "database-revision-changelog"]], "armi.bookkeeping.db.compareDB3 module": [[4, "module-armi.bookkeeping.db.compareDB3"]], "armi.bookkeeping.db.database3 module": [[5, "module-armi.bookkeeping.db.database3"]], "armi.bookkeeping.db.databaseInterface module": [[6, "module-armi.bookkeeping.db.databaseInterface"]], "armi.bookkeeping.db.factory module": [[7, "module-armi.bookkeeping.db.factory"]], "armi.bookkeeping.db.layout module": [[8, "module-armi.bookkeeping.db.layout"]], "armi.bookkeeping.db.permissions module": [[9, "module-armi.bookkeeping.db.permissions"]], "armi.bookkeeping.db.tests package": [[10, "module-armi.bookkeeping.db.tests"]], "armi.bookkeeping.db.tests.test_comparedb3 module": [[11, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "armi.bookkeeping.db.tests.test_database3 module": [[12, "module-armi.bookkeeping.db.tests.test_database3"]], "armi.bookkeeping.db.tests.test_databaseInterface module": [[13, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "armi.bookkeeping.db.tests.test_layout module": [[14, "module-armi.bookkeeping.db.tests.test_layout"]], "armi.bookkeeping.db.typedefs module": [[15, "module-armi.bookkeeping.db.typedefs"]], "armi.bookkeeping.historyTracker module": [[16, "module-armi.bookkeeping.historyTracker"]], "Getting history information": [[16, "getting-history-information"]], "Using the database-based history trackers": [[16, "using-the-database-based-history-trackers"]], "Specifying parameters to add to the EOL history report": [[16, "specifying-parameters-to-add-to-the-eol-history-report"]], "Specifying blocks and assemblies to track": [[16, "specifying-blocks-and-assemblies-to-track"]], "armi.bookkeeping.mainInterface module": [[17, "module-armi.bookkeeping.mainInterface"]], "armi.bookkeeping.memoryProfiler module": [[18, "module-armi.bookkeeping.memoryProfiler"]], "armi.bookkeeping.report package": [[19, "module-armi.bookkeeping.report"]], "armi.bookkeeping.report.data module": [[20, "module-armi.bookkeeping.report.data"]], "armi.bookkeeping.report.html module": [[21, "module-armi.bookkeeping.report.html"]], "armi.bookkeeping.report.newReportUtils module": [[22, "module-armi.bookkeeping.report.newReportUtils"]], "armi.bookkeeping.report.newReports module": [[23, "module-armi.bookkeeping.report.newReports"]], "armi.bookkeeping.report.reportInterface module": [[24, "module-armi.bookkeeping.report.reportInterface"]], "armi.bookkeeping.report.reportingUtils module": [[25, "module-armi.bookkeeping.report.reportingUtils"]], "armi.bookkeeping.report.tests package": [[26, "module-armi.bookkeeping.report.tests"]], "armi.bookkeeping.report.tests.test_newReport module": [[27, "module-armi.bookkeeping.report.tests.test_newReport"]], "armi.bookkeeping.report.tests.test_report module": [[28, "module-armi.bookkeeping.report.tests.test_report"]], "armi.bookkeeping.snapshotInterface module": [[29, "module-armi.bookkeeping.snapshotInterface"]], "armi.bookkeeping.tests package": [[30, "module-armi.bookkeeping.tests"]], "armi.bookkeeping.tests.test_historyTracker module": [[31, "module-armi.bookkeeping.tests.test_historyTracker"]], "armi.bookkeeping.tests.test_memoryProfiler module": [[32, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "armi.bookkeeping.tests.test_snapshot module": [[33, "module-armi.bookkeeping.tests.test_snapshot"]], "armi.bookkeeping.visualization package": [[34, "module-armi.bookkeeping.visualization"]], "armi.bookkeeping.visualization.dumper module": [[35, "module-armi.bookkeeping.visualization.dumper"]], "armi.bookkeeping.visualization.entryPoint module": [[36, "module-armi.bookkeeping.visualization.entryPoint"]], "armi.bookkeeping.visualization.tests package": [[37, "module-armi.bookkeeping.visualization.tests"]], "armi.bookkeeping.visualization.tests.test_vis module": [[38, "module-armi.bookkeeping.visualization.tests.test_vis"]], "armi.bookkeeping.visualization.tests.test_xdmf module": [[39, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "armi.bookkeeping.visualization.utils module": [[40, "module-armi.bookkeeping.visualization.utils"]], "armi.bookkeeping.visualization.vtk module": [[41, "module-armi.bookkeeping.visualization.vtk"]], "Limitations": [[41, "limitations"]], "armi.bookkeeping.visualization.xdmf module": [[42, "module-armi.bookkeeping.visualization.xdmf"]], "armi.cases package": [[43, "module-armi.cases"]], "armi.cases.case module": [[44, "module-armi.cases.case"]], "Todo": [[44, "id1"]], "armi.cases.inputModifiers package": [[45, "module-armi.cases.inputModifiers"]], "armi.cases.inputModifiers.inputModifiers module": [[46, "module-armi.cases.inputModifiers.inputModifiers"]], "armi.cases.inputModifiers.neutronicsModifiers module": [[47, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "armi.cases.inputModifiers.pinTypeInputModifiers module": [[48, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests package": [[49, "module-armi.cases.inputModifiers.tests"]], "armi.cases.inputModifiers.tests.test_inputModifiers module": [[50, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module": [[51, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "armi.cases.suite module": [[52, "module-armi.cases.suite"]], "armi.cases.suiteBuilder module": [[53, "module-armi.cases.suiteBuilder"]], "armi.cases.tests package": [[54, "module-armi.cases.tests"]], "armi.cases.tests.test_cases module": [[55, "module-armi.cases.tests.test_cases"]], "armi.cases.tests.test_suiteBuilder module": [[56, "module-armi.cases.tests.test_suiteBuilder"]], "armi.cli package": [[57, "module-armi.cli"]], "armi.cli.checkInputs module": [[58, "module-armi.cli.checkInputs"]], "armi.cli.cleanTemps module": [[59, "module-armi.cli.cleanTemps"]], "armi.cli.clone module": [[60, "module-armi.cli.clone"]], "armi.cli.compareCases module": [[61, "module-armi.cli.compareCases"]], "armi.cli.database module": [[62, "module-armi.cli.database"]], "armi.cli.entryPoint module": [[63, "module-armi.cli.entryPoint"]], "armi.cli.gridGui module": [[64, "module-armi.cli.gridGui"]], "armi.cli.migrateInputs module": [[65, "module-armi.cli.migrateInputs"]], "armi.cli.modify module": [[66, "module-armi.cli.modify"]], "armi.cli.reportsEntryPoint module": [[67, "module-armi.cli.reportsEntryPoint"]], "armi.cli.run module": [[68, "module-armi.cli.run"]], "armi.cli.runSuite module": [[69, "module-armi.cli.runSuite"]], "armi.cli.tests package": [[70, "module-armi.cli.tests"]], "armi.cli.tests.test_runEntryPoint module": [[71, "module-armi.cli.tests.test_runEntryPoint"]], "armi.cli.tests.test_runSuite module": [[72, "module-armi.cli.tests.test_runSuite"]], "armi.conftest module": [[73, "module-armi.conftest"]], "armi.context module": [[74, "module-armi.context"]], "armi.interfaces module": [[75, "module-armi.interfaces"]], "armi.materials package": [[76, "module-armi.materials"]], "armi.materials.air module": [[77, "module-armi.materials.air"]], "armi.materials.alloy200 module": [[78, "module-armi.materials.alloy200"]], "armi.materials.b4c module": [[79, "module-armi.materials.b4c"]], "armi.materials.be9 module": [[80, "module-armi.materials.be9"]], "armi.materials.caH2 module": [[81, "module-armi.materials.caH2"]], "armi.materials.californium module": [[82, "module-armi.materials.californium"]], "armi.materials.concrete module": [[83, "module-armi.materials.concrete"]], "armi.materials.copper module": [[84, "module-armi.materials.copper"]], "armi.materials.cs module": [[85, "module-armi.materials.cs"]], "armi.materials.custom module": [[86, "module-armi.materials.custom"]], "armi.materials.graphite module": [[87, "module-armi.materials.graphite"]], "armi.materials.hafnium module": [[88, "module-armi.materials.hafnium"]], "armi.materials.hastelloyN module": [[89, "module-armi.materials.hastelloyN"]], "armi.materials.ht9 module": [[90, "module-armi.materials.ht9"]], "armi.materials.inconel module": [[91, "module-armi.materials.inconel"]], "armi.materials.inconel600 module": [[92, "module-armi.materials.inconel600"]], "armi.materials.inconel625 module": [[93, "module-armi.materials.inconel625"]], "armi.materials.inconel800 module": [[94, "module-armi.materials.inconel800"]], "armi.materials.inconelPE16 module": [[95, "module-armi.materials.inconelPE16"]], "armi.materials.inconelX750 module": [[96, "module-armi.materials.inconelX750"]], "armi.materials.lead module": [[97, "module-armi.materials.lead"]], "armi.materials.leadBismuth module": [[98, "module-armi.materials.leadBismuth"]], "armi.materials.lithium module": [[99, "module-armi.materials.lithium"]], "armi.materials.magnesium module": [[100, "module-armi.materials.magnesium"]], "armi.materials.material module": [[101, "module-armi.materials.material"]], "armi.materials.mgO module": [[102, "module-armi.materials.mgO"]], "armi.materials.mixture module": [[103, "module-armi.materials.mixture"]], "armi.materials.molybdenum module": [[104, "module-armi.materials.molybdenum"]], "armi.materials.mox module": [[105, "module-armi.materials.mox"]], "armi.materials.nZ module": [[106, "module-armi.materials.nZ"]], "armi.materials.potassium module": [[107, "module-armi.materials.potassium"]], "armi.materials.scandiumOxide module": [[108, "module-armi.materials.scandiumOxide"]], "armi.materials.siC module": [[109, "module-armi.materials.siC"]], "armi.materials.sodium module": [[110, "module-armi.materials.sodium"]], "armi.materials.sodiumChloride module": [[111, "module-armi.materials.sodiumChloride"]], "armi.materials.sulfur module": [[112, "module-armi.materials.sulfur"]], "armi.materials.tZM module": [[113, "module-armi.materials.tZM"]], "armi.materials.tantalum module": [[114, "module-armi.materials.tantalum"]], "armi.materials.tests package": [[115, "module-armi.materials.tests"]], "armi.materials.tests.test__init__ module": [[116, "module-armi.materials.tests.test__init__"]], "armi.materials.tests.test_air module": [[117, "module-armi.materials.tests.test_air"]], "armi.materials.tests.test_b4c module": [[118, "module-armi.materials.tests.test_b4c"]], "armi.materials.tests.test_be9 module": [[119, "module-armi.materials.tests.test_be9"]], "armi.materials.tests.test_graphite module": [[120, "module-armi.materials.tests.test_graphite"]], "armi.materials.tests.test_lithium module": [[121, "module-armi.materials.tests.test_lithium"]], "armi.materials.tests.test_materials module": [[122, "module-armi.materials.tests.test_materials"]], "armi.materials.tests.test_sic module": [[123, "module-armi.materials.tests.test_sic"]], "armi.materials.tests.test_sulfur module": [[124, "module-armi.materials.tests.test_sulfur"]], "armi.materials.tests.test_thoriumOxide module": [[125, "module-armi.materials.tests.test_thoriumOxide"]], "armi.materials.tests.test_uZr module": [[126, "module-armi.materials.tests.test_uZr"]], "armi.materials.tests.test_water module": [[127, "module-armi.materials.tests.test_water"]], "armi.materials.thU module": [[128, "module-armi.materials.thU"]], "armi.materials.thorium module": [[129, "module-armi.materials.thorium"]], "armi.materials.thoriumOxide module": [[130, "module-armi.materials.thoriumOxide"]], "armi.materials.uThZr module": [[131, "module-armi.materials.uThZr"]], "armi.materials.uZr module": [[132, "module-armi.materials.uZr"]], "armi.materials.uranium module": [[133, "module-armi.materials.uranium"]], "armi.materials.uraniumOxide module": [[134, "module-armi.materials.uraniumOxide"]], "armi.materials.void module": [[135, "module-armi.materials.void"]], "armi.materials.water module": [[136, "module-armi.materials.water"]], "armi.materials.yttriumOxide module": [[137, "module-armi.materials.yttriumOxide"]], "armi.materials.zincOxide module": [[138, "module-armi.materials.zincOxide"]], "armi.materials.zr module": [[139, "module-armi.materials.zr"]], "armi.meta module": [[140, "module-armi.meta"]], "armi.migration package": [[141, "module-armi.migration"]], "armi.migration.base module": [[142, "module-armi.migration.base"]], "armi.migration.m0_1_3 module": [[143, "module-armi.migration.m0_1_3"]], "armi.migration.m0_1_6 module": [[144, "module-armi.migration.m0_1_6"]], "armi.migration.tests package": [[145, "module-armi.migration.tests"]], "armi.migration.tests.test_m0_1_6 module": [[146, "module-armi.migration.tests.test_m0_1_6"]], "armi.migration.tests.test_migration_base module": [[147, "module-armi.migration.tests.test_migration_base"]], "armi.mpiActions module": [[148, "module-armi.mpiActions"]], "Sample MPI Action Workflow": [[148, "id1"]], "armi.nucDirectory package": [[149, "module-armi.nucDirectory"]], "Elements": [[149, "elements"]], "Nuclide Bases": [[149, "nuclide-bases"]], "Nuclide names, labels, and IDs": [[149, "nuclide-names-labels-and-ids"]], "Indices - rapid access": [[149, "indices-rapid-access"]], "armi.nucDirectory.elements module": [[150, "module-armi.nucDirectory.elements"]], "List of elements": [[150, "id1"]], "armi.nucDirectory.nucDir module": [[151, "module-armi.nucDirectory.nucDir"]], "armi.nucDirectory.nuclideBases module": [[152, "module-armi.nucDirectory.nuclideBases"]], "List of nuclides": [[152, "id1"]], "armi.nucDirectory.tests package": [[153, "module-armi.nucDirectory.tests"]], "armi.nucDirectory.tests.test_elements module": [[154, "module-armi.nucDirectory.tests.test_elements"]], "armi.nucDirectory.tests.test_nucDirectory module": [[155, "module-armi.nucDirectory.tests.test_nucDirectory"]], "armi.nucDirectory.tests.test_nuclideBases module": [[156, "module-armi.nucDirectory.tests.test_nuclideBases"]], "armi.nucDirectory.tests.test_thermalScattering module": [[157, "module-armi.nucDirectory.tests.test_thermalScattering"]], "armi.nucDirectory.tests.test_transmutations module": [[158, "module-armi.nucDirectory.tests.test_transmutations"]], "armi.nucDirectory.thermalScattering module": [[159, "module-armi.nucDirectory.thermalScattering"]], "armi.nucDirectory.transmutations module": [[160, "module-armi.nucDirectory.transmutations"]], "armi.nuclearDataIO package": [[161, "module-armi.nuclearDataIO"]], "armi.nuclearDataIO.cccc package": [[162, "module-armi.nuclearDataIO.cccc"]], "Using the system": [[162, "using-the-system"]], "Implementation details": [[162, "implementation-details"]], "Discussion": [[162, "discussion"]], "armi.nuclearDataIO.cccc.cccc module": [[163, "module-armi.nuclearDataIO.cccc.cccc"]], "armi.nuclearDataIO.cccc.compxs module": [[164, "module-armi.nuclearDataIO.cccc.compxs"]], "armi.nuclearDataIO.cccc.dif3d module": [[165, "module-armi.nuclearDataIO.cccc.dif3d"]], "armi.nuclearDataIO.cccc.dlayxs module": [[166, "module-armi.nuclearDataIO.cccc.dlayxs"]], "armi.nuclearDataIO.cccc.fixsrc module": [[167, "module-armi.nuclearDataIO.cccc.fixsrc"]], "armi.nuclearDataIO.cccc.gamiso module": [[168, "module-armi.nuclearDataIO.cccc.gamiso"]], "armi.nuclearDataIO.cccc.geodst module": [[169, "module-armi.nuclearDataIO.cccc.geodst"]], "armi.nuclearDataIO.cccc.isotxs module": [[170, "module-armi.nuclearDataIO.cccc.isotxs"]], "armi.nuclearDataIO.cccc.labels module": [[171, "module-armi.nuclearDataIO.cccc.labels"]], "armi.nuclearDataIO.cccc.nhflux module": [[172, "module-armi.nuclearDataIO.cccc.nhflux"]], "armi.nuclearDataIO.cccc.pmatrx module": [[173, "module-armi.nuclearDataIO.cccc.pmatrx"]], "armi.nuclearDataIO.cccc.pwdint module": [[174, "module-armi.nuclearDataIO.cccc.pwdint"]], "armi.nuclearDataIO.cccc.rtflux module": [[175, "module-armi.nuclearDataIO.cccc.rtflux"]], "armi.nuclearDataIO.cccc.rzflux module": [[176, "module-armi.nuclearDataIO.cccc.rzflux"]], "armi.nuclearDataIO.cccc.tests package": [[177, "module-armi.nuclearDataIO.cccc.tests"]], "armi.nuclearDataIO.cccc.tests.test_cccc module": [[178, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "armi.nuclearDataIO.cccc.tests.test_compxs module": [[179, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "armi.nuclearDataIO.cccc.tests.test_dif3d module": [[180, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs module": [[181, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "armi.nuclearDataIO.cccc.tests.test_gamiso module": [[182, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "armi.nuclearDataIO.cccc.tests.test_geodst module": [[183, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs module": [[184, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "armi.nuclearDataIO.cccc.tests.test_labels module": [[185, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "armi.nuclearDataIO.cccc.tests.test_nhflux module": [[186, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx module": [[187, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "armi.nuclearDataIO.cccc.tests.test_pwdint module": [[188, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "armi.nuclearDataIO.cccc.tests.test_rtflux module": [[189, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux module": [[190, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "armi.nuclearDataIO.nuclearFileMetadata module": [[191, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "armi.nuclearDataIO.tests package": [[192, "module-armi.nuclearDataIO.tests"]], "armi.nuclearDataIO.tests.test_xsCollections module": [[193, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "armi.nuclearDataIO.tests.test_xsLibraries module": [[194, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "armi.nuclearDataIO.tests.test_xsNuclides module": [[195, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "armi.nuclearDataIO.xsCollections module": [[196, "module-armi.nuclearDataIO.xsCollections"]], "armi.nuclearDataIO.xsLibraries module": [[197, "module-armi.nuclearDataIO.xsLibraries"]], "armi.nuclearDataIO.xsNuclides module": [[198, "module-armi.nuclearDataIO.xsNuclides"]], "armi.operators package": [[199, "module-armi.operators"]], "armi.operators.operator module": [[200, "module-armi.operators.operator"]], "armi.operators.operatorMPI module": [[201, "module-armi.operators.operatorMPI"]], "armi.operators.runTypes module": [[202, "module-armi.operators.runTypes"]], "armi.operators.settingsValidation module": [[203, "module-armi.operators.settingsValidation"]], "armi.operators.snapshots module": [[204, "module-armi.operators.snapshots"]], "armi.operators.tests package": [[205, "module-armi.operators.tests"]], "armi.operators.tests.test_inspectors module": [[206, "module-armi.operators.tests.test_inspectors"]], "armi.operators.tests.test_operatorSnapshots module": [[207, "module-armi.operators.tests.test_operatorSnapshots"]], "armi.operators.tests.test_operators module": [[208, "module-armi.operators.tests.test_operators"]], "armi.physics package": [[209, "module-armi.physics"]], "Historical fun fact": [[209, null]], "armi.physics.constants module": [[210, "module-armi.physics.constants"]], "armi.physics.executers module": [[211, "module-armi.physics.executers"]], "armi.physics.fuelCycle package": [[212, "module-armi.physics.fuelCycle"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms module": [[213, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.fuelHandlerFactory module": [[214, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface module": [[215, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlers module": [[216, "module-armi.physics.fuelCycle.fuelHandlers"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module": [[217, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.settings module": [[218, "module-armi.physics.fuelCycle.settings"]], "armi.physics.fuelCycle.tests package": [[219, "module-armi.physics.fuelCycle.tests"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module": [[220, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.tests.test_fuelHandlers module": [[221, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module": [[222, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelPerformance package": [[223, "module-armi.physics.fuelPerformance"]], "armi.physics.fuelPerformance.executers module": [[224, "module-armi.physics.fuelPerformance.executers"]], "armi.physics.fuelPerformance.parameters module": [[225, "module-armi.physics.fuelPerformance.parameters"]], "armi.physics.fuelPerformance.plugin module": [[226, "module-armi.physics.fuelPerformance.plugin"]], "armi.physics.fuelPerformance.settings module": [[227, "module-armi.physics.fuelPerformance.settings"]], "armi.physics.fuelPerformance.tests package": [[228, "module-armi.physics.fuelPerformance.tests"]], "armi.physics.fuelPerformance.tests.test_executers module": [[229, "module-armi.physics.fuelPerformance.tests.test_executers"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module": [[230, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module": [[231, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.utils module": [[232, "module-armi.physics.fuelPerformance.utils"]], "armi.physics.neutronics package": [[233, "module-armi.physics.neutronics"]], "armi.physics.neutronics.const module": [[234, "module-armi.physics.neutronics.const"]], "armi.physics.neutronics.crossSectionGroupManager module": [[235, "module-armi.physics.neutronics.crossSectionGroupManager"]], "armi.physics.neutronics.crossSectionSettings module": [[236, "module-armi.physics.neutronics.crossSectionSettings"]], "armi.physics.neutronics.diffIsotxs module": [[237, "module-armi.physics.neutronics.diffIsotxs"]], "armi.physics.neutronics.energyGroups module": [[238, "module-armi.physics.neutronics.energyGroups"]], "armi.physics.neutronics.fissionProductModel package": [[239, "module-armi.physics.neutronics.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel module": [[240, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module": [[241, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module": [[242, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests package": [[243, "module-armi.physics.neutronics.fissionProductModel.tests"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module": [[244, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module": [[245, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "armi.physics.neutronics.globalFlux package": [[246, "module-armi.physics.neutronics.globalFlux"]], "armi.physics.neutronics.globalFlux.globalFluxInterface module": [[247, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests package": [[248, "module-armi.physics.neutronics.globalFlux.tests"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module": [[249, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "armi.physics.neutronics.isotopicDepletion package": [[250, "module-armi.physics.neutronics.isotopicDepletion"]], "armi.physics.neutronics.isotopicDepletion.crossSectionTable module": [[251, "module-armi.physics.neutronics.isotopicDepletion.crossSectionTable"]], "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface module": [[252, "module-armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface"]], "armi.physics.neutronics.latticePhysics package": [[253, "module-armi.physics.neutronics.latticePhysics"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module": [[254, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module": [[255, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests package": [[256, "module-armi.physics.neutronics.latticePhysics.tests"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module": [[257, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module": [[258, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "armi.physics.neutronics.macroXSGenerationInterface module": [[259, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "armi.physics.neutronics.parameters module": [[260, "module-armi.physics.neutronics.parameters"]], "armi.physics.neutronics.reports module": [[261, "module-armi.physics.neutronics.reports"]], "armi.physics.neutronics.settings module": [[262, "module-armi.physics.neutronics.settings"]], "armi.physics.neutronics.tests package": [[263, "module-armi.physics.neutronics.tests"]], "armi.physics.neutronics.tests.test_crossSectionManager module": [[264, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "armi.physics.neutronics.tests.test_crossSectionSettings module": [[265, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "armi.physics.neutronics.tests.test_crossSectionTable module": [[266, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "armi.physics.neutronics.tests.test_energyGroups module": [[267, "module-armi.physics.neutronics.tests.test_energyGroups"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface module": [[268, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_neutronicsPlugin module": [[269, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "armi.physics.safety package": [[270, "module-armi.physics.safety"]], "armi.physics.tests package": [[271, "module-armi.physics.tests"]], "armi.physics.tests.test_executers module": [[272, "module-armi.physics.tests.test_executers"]], "armi.physics.thermalHydraulics package": [[273, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalHydraulics.const module": [[274, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalHydraulics.parameters module": [[275, "module-armi.physics.thermalHydraulics.parameters"]], "armi.physics.thermalHydraulics.plugin module": [[276, "module-armi.physics.thermalHydraulics.plugin"]], "armi.physics.thermalHydraulics.settings module": [[277, "module-armi.physics.thermalHydraulics.settings"]], "armi.pluginManager module": [[278, "module-armi.pluginManager"]], "armi.plugins module": [[279, "module-armi.plugins"]], "armi.reactor package": [[280, "module-armi.reactor"]], "armi.reactor.assemblies module": [[281, "module-armi.reactor.assemblies"]], "armi.reactor.assemblyLists module": [[282, "module-armi.reactor.assemblyLists"]], "armi.reactor.assemblyParameters module": [[283, "module-armi.reactor.assemblyParameters"]], "armi.reactor.blockParameters module": [[284, "module-armi.reactor.blockParameters"]], "armi.reactor.blocks module": [[285, "module-armi.reactor.blocks"]], "Parameter": [[285, "parameter"]], "armi.reactor.blueprints package": [[286, "module-armi.reactor.blueprints"]], "armi.reactor.blueprints.assemblyBlueprint module": [[287, "module-armi.reactor.blueprints.assemblyBlueprint"]], "armi.reactor.blueprints.blockBlueprint module": [[288, "module-armi.reactor.blueprints.blockBlueprint"]], "armi.reactor.blueprints.componentBlueprint module": [[289, "module-armi.reactor.blueprints.componentBlueprint"]], "armi.reactor.blueprints.gridBlueprint module": [[290, "module-armi.reactor.blueprints.gridBlueprint"]], "armi.reactor.blueprints.isotopicOptions module": [[291, "module-armi.reactor.blueprints.isotopicOptions"]], "armi.reactor.blueprints.reactorBlueprint module": [[292, "module-armi.reactor.blueprints.reactorBlueprint"]], "armi.reactor.blueprints.tests package": [[293, "module-armi.reactor.blueprints.tests"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints module": [[294, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "armi.reactor.blueprints.tests.test_blockBlueprints module": [[295, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "armi.reactor.blueprints.tests.test_blueprints module": [[296, "module-armi.reactor.blueprints.tests.test_blueprints"]], "armi.reactor.blueprints.tests.test_componentBlueprint module": [[297, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "armi.reactor.blueprints.tests.test_customIsotopics module": [[298, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "armi.reactor.blueprints.tests.test_gridBlueprints module": [[299, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "armi.reactor.blueprints.tests.test_materialModifications module": [[300, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "armi.reactor.blueprints.tests.test_reactorBlueprints module": [[301, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "armi.reactor.components package": [[302, "module-armi.reactor.components"]], "armi.reactor.components.basicShapes module": [[303, "module-armi.reactor.components.basicShapes"]], "armi.reactor.components.complexShapes module": [[304, "module-armi.reactor.components.complexShapes"]], "armi.reactor.components.component module": [[305, "module-armi.reactor.components.component"]], "armi.reactor.components.componentParameters module": [[306, "module-armi.reactor.components.componentParameters"]], "armi.reactor.components.volumetricShapes module": [[307, "module-armi.reactor.components.volumetricShapes"]], "armi.reactor.composites module": [[308, "module-armi.reactor.composites"]], "armi.reactor.converters package": [[309, "module-armi.reactor.converters"]], "armi.reactor.converters.axialExpansionChanger module": [[310, "module-armi.reactor.converters.axialExpansionChanger"]], "armi.reactor.converters.blockConverters module": [[311, "module-armi.reactor.converters.blockConverters"]], "armi.reactor.converters.geometryConverters module": [[312, "module-armi.reactor.converters.geometryConverters"]], "armi.reactor.converters.meshConverters module": [[313, "module-armi.reactor.converters.meshConverters"]], "armi.reactor.converters.parameterSweeps package": [[314, "module-armi.reactor.converters.parameterSweeps"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module": [[315, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "armi.reactor.converters.pinTypeBlockConverters module": [[316, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests package": [[317, "module-armi.reactor.converters.tests"]], "armi.reactor.converters.tests.test_axialExpansionChanger module": [[318, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "armi.reactor.converters.tests.test_blockConverter module": [[319, "module-armi.reactor.converters.tests.test_blockConverter"]], "armi.reactor.converters.tests.test_geometryConverters module": [[320, "module-armi.reactor.converters.tests.test_geometryConverters"]], "armi.reactor.converters.tests.test_meshConverters module": [[321, "module-armi.reactor.converters.tests.test_meshConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters module": [[322, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "armi.reactor.converters.tests.test_uniformMesh module": [[323, "module-armi.reactor.converters.tests.test_uniformMesh"]], "armi.reactor.converters.uniformMesh module": [[324, "module-armi.reactor.converters.uniformMesh"]], "Requirements": [[324, "requirements"]], "armi.reactor.flags module": [[325, "module-armi.reactor.flags"]], "armi.reactor.geometry module": [[326, "module-armi.reactor.geometry"]], "armi.reactor.grids package": [[327, "module-armi.reactor.grids"]], "armi.reactor.grids.axial module": [[328, "module-armi.reactor.grids.axial"]], "armi.reactor.grids.cartesian module": [[329, "module-armi.reactor.grids.cartesian"]], "armi.reactor.grids.constants module": [[330, "module-armi.reactor.grids.constants"]], "armi.reactor.grids.grid module": [[331, "module-armi.reactor.grids.grid"]], "armi.reactor.grids.hexagonal module": [[332, "module-armi.reactor.grids.hexagonal"]], "armi.reactor.grids.locations module": [[333, "module-armi.reactor.grids.locations"]], "armi.reactor.grids.structuredgrid module": [[334, "module-armi.reactor.grids.structuredgrid"]], "armi.reactor.grids.thetarz module": [[335, "module-armi.reactor.grids.thetarz"]], "armi.reactor.parameters package": [[336, "module-armi.reactor.parameters"]], "Example Parameters": [[336, "id1"]], "Basic Usage": [[336, "basic-usage"]], "Design Considerations": [[336, "design-considerations"]], "Design considerations": [[336, "id2"]], "armi.reactor.parameters.exceptions module": [[337, "module-armi.reactor.parameters.exceptions"]], "armi.reactor.parameters.parameterCollections module": [[338, "module-armi.reactor.parameters.parameterCollections"]], "armi.reactor.parameters.parameterDefinitions module": [[339, "module-armi.reactor.parameters.parameterDefinitions"]], "armi.reactor.parameters.resolveCollections module": [[340, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorParameters module": [[341, "module-armi.reactor.reactorParameters"]], "armi.reactor.reactors module": [[342, "module-armi.reactor.reactors"]], "armi.reactor.systemLayoutInput module": [[343, "module-armi.reactor.systemLayoutInput"]], "armi.reactor.tests package": [[344, "module-armi.reactor.tests"]], "armi.reactor.tests.test_assemblies module": [[345, "module-armi.reactor.tests.test_assemblies"]], "armi.reactor.tests.test_blocks module": [[346, "module-armi.reactor.tests.test_blocks"]], "armi.reactor.tests.test_components module": [[347, "module-armi.reactor.tests.test_components"]], "armi.reactor.tests.test_composites module": [[348, "module-armi.reactor.tests.test_composites"]], "armi.reactor.tests.test_flags module": [[349, "module-armi.reactor.tests.test_flags"]], "armi.reactor.tests.test_geometry module": [[350, "module-armi.reactor.tests.test_geometry"]], "armi.reactor.tests.test_parameters module": [[351, "module-armi.reactor.tests.test_parameters"]], "armi.reactor.tests.test_reactors module": [[352, "module-armi.reactor.tests.test_reactors"]], "armi.reactor.tests.test_rz_reactors module": [[353, "module-armi.reactor.tests.test_rz_reactors"]], "armi.reactor.tests.test_zones module": [[354, "module-armi.reactor.tests.test_zones"]], "armi.reactor.zones module": [[355, "module-armi.reactor.zones"]], "armi.runLog module": [[356, "module-armi.runLog"]], "armi.settings package": [[357, "module-armi.settings"]], "armi.settings.caseSettings module": [[358, "module-armi.settings.caseSettings"]], "armi.settings.fwSettings package": [[359, "module-armi.settings.fwSettings"]], "armi.settings.fwSettings.databaseSettings module": [[360, "module-armi.settings.fwSettings.databaseSettings"]], "armi.settings.fwSettings.globalSettings module": [[361, "module-armi.settings.fwSettings.globalSettings"]], "armi.settings.fwSettings.reportSettings module": [[362, "module-armi.settings.fwSettings.reportSettings"]], "armi.settings.fwSettings.tightCouplingSettings module": [[363, "module-armi.settings.fwSettings.tightCouplingSettings"]], "armi.settings.setting module": [[364, "module-armi.settings.setting"]], "armi.settings.settingsIO module": [[365, "module-armi.settings.settingsIO"]], "armi.settings.tests package": [[366, "module-armi.settings.tests"]], "armi.settings.tests.test_settings module": [[367, "module-armi.settings.tests.test_settings"]], "armi.settings.tests.test_settingsIO module": [[368, "module-armi.settings.tests.test_settingsIO"]], "armi.tests package": [[369, "module-armi.tests"]], "armi.tests.mockRunLogs module": [[370, "module-armi.tests.mockRunLogs"]], "armi.tests.refSmallReactorShuffleLogic module": [[371, "module-armi.tests.refSmallReactorShuffleLogic"]], "armi.tests.test_apps module": [[372, "module-armi.tests.test_apps"]], "armi.tests.test_armiTestHelper module": [[373, "module-armi.tests.test_armiTestHelper"]], "armi.tests.test_cartesian module": [[374, "module-armi.tests.test_cartesian"]], "armi.tests.test_interfaces module": [[375, "module-armi.tests.test_interfaces"]], "armi.tests.test_lwrInputs module": [[376, "module-armi.tests.test_lwrInputs"]], "armi.tests.test_mpiActions module": [[377, "module-armi.tests.test_mpiActions"]], "armi.tests.test_mpiFeatures module": [[378, "module-armi.tests.test_mpiFeatures"]], "armi.tests.test_mpiParameters module": [[379, "module-armi.tests.test_mpiParameters"]], "armi.tests.test_notebooks module": [[380, "module-armi.tests.test_notebooks"]], "armi.tests.test_plugins module": [[381, "module-armi.tests.test_plugins"]], "armi.tests.test_runLog module": [[382, "module-armi.tests.test_runLog"]], "armi.tests.test_tests module": [[383, "module-armi.tests.test_tests"]], "armi.tests.test_user_plugins module": [[384, "module-armi.tests.test_user_plugins"]], "armi.utils package": [[385, "module-armi.utils"]], "armi.utils.asciimaps module": [[386, "module-armi.utils.asciimaps"]], "armi.utils.codeTiming module": [[387, "module-armi.utils.codeTiming"]], "armi.utils.customExceptions module": [[388, "module-armi.utils.customExceptions"]], "armi.utils.densityTools module": [[389, "module-armi.utils.densityTools"]], "armi.utils.directoryChangers module": [[390, "module-armi.utils.directoryChangers"]], "armi.utils.directoryChangersMpi module": [[391, "module-armi.utils.directoryChangersMpi"]], "armi.utils.dochelpers module": [[392, "module-armi.utils.dochelpers"]], "armi.utils.dynamicImporter module": [[393, "module-armi.utils.dynamicImporter"]], "armi.utils.flags module": [[394, "module-armi.utils.flags"]], "armi.utils.gridEditor module": [[395, "armi-utils-grideditor-module"]], "armi.utils.hexagon module": [[396, "module-armi.utils.hexagon"]], "armi.utils.iterables module": [[397, "module-armi.utils.iterables"]], "armi.utils.mathematics module": [[398, "module-armi.utils.mathematics"]], "armi.utils.outputCache module": [[399, "module-armi.utils.outputCache"]], "API usage": [[399, "api-usage"]], "armi.utils.parsing module": [[400, "module-armi.utils.parsing"]], "armi.utils.pathTools module": [[401, "module-armi.utils.pathTools"]], "armi.utils.plotting module": [[402, "module-armi.utils.plotting"]], "armi.utils.properties module": [[403, "module-armi.utils.properties"]], "armi.utils.reportPlotting module": [[404, "module-armi.utils.reportPlotting"]], "armi.utils.tests package": [[405, "module-armi.utils.tests"]], "armi.utils.tests.test_asciimaps module": [[406, "module-armi.utils.tests.test_asciimaps"]], "armi.utils.tests.test_codeTiming module": [[407, "module-armi.utils.tests.test_codeTiming"]], "armi.utils.tests.test_custom_exceptions module": [[408, "module-armi.utils.tests.test_custom_exceptions"]], "armi.utils.tests.test_densityTools module": [[409, "module-armi.utils.tests.test_densityTools"]], "armi.utils.tests.test_directoryChangers module": [[410, "module-armi.utils.tests.test_directoryChangers"]], "armi.utils.tests.test_dochelpers module": [[411, "module-armi.utils.tests.test_dochelpers"]], "armi.utils.tests.test_flags module": [[412, "module-armi.utils.tests.test_flags"]], "armi.utils.tests.test_hexagon module": [[413, "module-armi.utils.tests.test_hexagon"]], "armi.utils.tests.test_iterables module": [[414, "module-armi.utils.tests.test_iterables"]], "armi.utils.tests.test_mathematics module": [[415, "module-armi.utils.tests.test_mathematics"]], "armi.utils.tests.test_outputCache module": [[416, "module-armi.utils.tests.test_outputCache"]], "armi.utils.tests.test_parsing module": [[417, "module-armi.utils.tests.test_parsing"]], "armi.utils.tests.test_pathTools module": [[418, "module-armi.utils.tests.test_pathTools"]], "armi.utils.tests.test_plotting module": [[419, "module-armi.utils.tests.test_plotting"]], "armi.utils.tests.test_properties module": [[420, "module-armi.utils.tests.test_properties"]], "armi.utils.tests.test_reportPlotting module": [[421, "module-armi.utils.tests.test_reportPlotting"]], "armi.utils.tests.test_textProcessors module": [[422, "module-armi.utils.tests.test_textProcessors"]], "armi.utils.tests.test_triangle module": [[423, "module-armi.utils.tests.test_triangle"]], "armi.utils.tests.test_units module": [[424, "module-armi.utils.tests.test_units"]], "armi.utils.tests.test_utils module": [[425, "module-armi.utils.tests.test_utils"]], "armi.utils.textProcessors module": [[426, "module-armi.utils.textProcessors"]], "armi.utils.triangle module": [[427, "module-armi.utils.triangle"]], "armi.utils.units module": [[428, "module-armi.utils.units"]], "armi": [[429, "armi"]], "Documenting ARMI": [[430, "documenting-armi"]], "Building the documentation": [[430, "building-the-documentation"]], "Documentation for ARMI plugins": [[430, "documentation-for-armi-plugins"]], "Linking to ARMI documentation from plugins": [[430, "linking-to-armi-documentation-from-plugins"]], "Automatically building apidocs of namespace packages": [[430, "automatically-building-apidocs-of-namespace-packages"]], "Updating the Gallery": [[430, "updating-the-gallery"]], "Using Jupyter notebooks": [[430, "using-jupyter-notebooks"]], "Entry Points": [[431, "entry-points"], [433, "entry-points"]], "First Time Contributors Guide": [[432, "first-time-contributors-guide"]], "Help Wanted": [[432, "help-wanted"]], "Testing": [[432, "testing"]], "Submitting Changes": [[432, "submitting-changes"]], "Licensing of Tools": [[432, "licensing-of-tools"]], "Framework Architecture": [[433, "framework-architecture"]], "The Reactor Model": [[433, "the-reactor-model"]], "Finding objects in a model": [[433, "finding-objects-in-a-model"]], "Parameters": [[433, "parameters"]], "Converters": [[433, "converters"]], "Blueprints": [[433, "blueprints"]], "Operators": [[433, "operators"]], "The Standard Operator": [[433, "the-standard-operator"]], "The Snapshots Operator": [[433, "the-snapshots-operator"]], "The Interface Stack": [[433, "the-interface-stack"]], "Interface Interaction Hooks": [[433, "interface-interaction-hooks"]], "Adding a new interface": [[433, "adding-a-new-interface"]], "How interfaces get called": [[433, "how-interfaces-get-called"]], "Plugins": [[433, "plugins"]], "Developer Docs": [[434, "developer-docs"]], "Making ARMI-based Apps": [[435, "making-armi-based-apps"]], "Heads up": [[435, null]], "ARMI Plugins": [[435, "armi-plugins"]], "Some implementation details": [[435, "some-implementation-details"]], "Making your own Plugin": [[435, "making-your-own-plugin"]], "ARMI-Based Applications": [[435, "armi-based-applications"]], "Parallel Code in ARMI": [[436, "parallel-code-in-armi"]], "MPI communication crash course": [[436, "mpi-communication-crash-course"]], "MPI Communication within ARMI": [[436, "mpi-communication-within-armi"]], "Example using bcast": [[436, "example-using-bcast"]], "Example using scatter": [[436, "example-using-scatter"]], "A simplified approach": [[436, "a-simplified-approach"]], "Profiling ARMI": [[437, "profiling-armi"]], "Reports in ARMI": [[438, "reports-in-armi"]], "The Hook: getReportContents()": [[438, "the-hook-getreportcontents"]], "What is ReportContent?": [[438, "what-is-reportcontent"]], "Sections": [[438, "sections"]], "Tables": [[438, "tables"]], "Images": [[438, "images"]], "TimeSeries": [[438, "timeseries"]], "HTML Elements": [[438, "html-elements"]], "Summary": [[438, "summary"]], "Standards and Practices for Coding": [[439, "standards-and-practices-for-coding"]], "Code formatting with Black": [[439, "code-formatting-with-black"]], "Remove commented-out code": [[439, "remove-commented-out-code"]], "Avoid hard-coding run parameters": [[439, "avoid-hard-coding-run-parameters"]], "Avoid the global keyword": [[439, "avoid-the-global-keyword"]], "Naming conventions": [[439, "naming-conventions"]], "Use meaningful names": [[439, "use-meaningful-names"]], "General conventions": [[439, "general-conventions"]], "Naming quick-reference": [[439, "naming-quick-reference"]], "Common naming conventions within ARMI": [[439, "common-naming-conventions-within-armi"]], "Prefer shorter methods": [[439, "prefer-shorter-methods"]], "Avoid repeating code": [[439, "avoid-repeating-code"]], "Public methods should have docstrings": [[439, "public-methods-should-have-docstrings"]], "Unit tests": [[439, "unit-tests"]], "Import statements": [[439, "import-statements"]], "Import ordering": [[439, "import-ordering"]], "Don\u2019t create naked exceptions.": [[439, "don-t-create-naked-exceptions"]], "Data model": [[439, "data-model"]], "Input files": [[439, "input-files"]], "Address the ruff warnings": [[439, "address-the-ruff-warnings"]], "General do\u2019s and don\u2019ts": [[439, "general-do-s-and-don-ts"]], "Tooling and Infrastructure": [[440, "tooling-and-infrastructure"]], "Good Commit Messages": [[440, "good-commit-messages"]], "Good Pull Requests": [[440, "good-pull-requests"]], "One Idea = One PR": [[440, "one-idea-one-pr"]], "Don\u2019t open until it is ready": [[440, "don-t-open-until-it-is-ready"]], "Test It": [[440, "test-it"]], "Document It": [[440, "document-it"]], "Watch for Requirements": [[440, "watch-for-requirements"]], "Packaging and dependency management": [[440, "packaging-and-dependency-management"]], "pyproject.toml": [[440, "pyproject-toml"]], "Third-Party Licensing": [[440, "third-party-licensing"]], "Releasing a New Version of ARMI": [[440, "releasing-a-new-version-of-armi"]], "Module-Level Logging": [[440, "module-level-logging"]], "Gallery": [[441, "gallery"], [466, "gallery"], [481, "gallery"]], "Analysis": [[442, "analysis"], [445, "analysis"], [466, "analysis"], [481, "analysis"]], "Applications": [[443, "applications"], [450, "applications"], [466, "applications"], [481, "applications"]], "Framework": [[444, "framework"], [451, "framework"], [466, "framework"], [481, "framework"]], "Write MCNP Material Cards": [[446, "write-mcnp-material-cards"]], "Hex block to RZ geometry conversion": [[447, "hex-block-to-rz-geometry-conversion"]], "Hex reactor to RZ geometry conversion": [[448, "hex-reactor-to-rz-geometry-conversion"]], "Computation times": [[449, "computation-times"], [465, "computation-times"]], "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion": [[452, "computing-component-volume-fractions-on-a-block-with-automatic-thermal-expansion"]], "Plot a chart of the nuclides.": [[453, "plot-a-chart-of-the-nuclides"]], "More details": [[453, null]], "Computing Reaction Rates on a Block.": [[454, "computing-reaction-rates-on-a-block"]], "Fuel management in a LWR.": [[455, "fuel-management-in-a-lwr"]], "Make a hex grid.": [[456, "make-a-hex-grid"]], "Make a Cartesian grid.": [[457, "make-a-cartesian-grid"]], "Make a Theta-R-Z grid.": [[458, "make-a-theta-r-z-grid"]], "Plotting Multi-group XS from ISOTXS.": [[459, "plotting-multi-group-xs-from-isotxs"]], "Plotting a multi-group scatter matrix.": [[460, "plotting-a-multi-group-scatter-matrix"]], "Listing of Material Library.": [[461, "listing-of-material-library"]], "Build Reactor Inputs Programmatically.": [[462, "build-reactor-inputs-programmatically"]], "Plot a reactor facemap.": [[463, "plot-a-reactor-facemap"]], "Transmutation and decay reactions.": [[464, "transmutation-and-decay-reactions"]], "Glossary": [[467, "glossary"]], "ARMI": [[468, "armi"]], "Quick links": [[468, "id3"]], "Quick start": [[468, "quick-start"]], "Background": [[468, "background"]], "Communication and coupling": [[468, "communication-and-coupling"]], "Automation": [[468, "automation"]], "New analysis and physics capabilities": [[468, "new-analysis-and-physics-capabilities"]], "Use cases": [[468, "use-cases"]], "The Research Scientist": [[468, "the-research-scientist"]], "The Nuclear Startup Engineer": [[468, "the-nuclear-startup-engineer"]], "Operating and Vendor Engineers": [[468, "operating-and-vendor-engineers"]], "The Enthusiast": [[468, "the-enthusiast"]], "History of ARMI": [[468, "history-of-armi"]], "System Requirements": [[468, "system-requirements"]], "Getting help": [[468, "getting-help"]], "Disclaimers": [[468, "disclaimers"]], "License": [[468, "license"]], "Installation": [[469, "installation"], [500, "installation"]], "Prerequisites": [[469, "prerequisites"], [500, "prerequisites"]], "The right Python command": [[469, null], [500, null]], "Preparing a Virtual Environment": [[469, "preparing-a-virtual-environment"], [500, "preparing-a-virtual-environment"]], "Getting the code": [[469, "getting-the-code"], [500, "getting-the-code"]], "Option 1: Install as a library": [[469, "option-1-install-as-a-library"], [500, "option-1-install-as-a-library"]], "Option 2: Install as a repository (for developers)": [[469, "option-2-install-as-a-repository-for-developers"], [500, "option-2-install-as-a-repository-for-developers"]], "Verifying installation": [[469, "verifying-installation"], [500, "verifying-installation"]], "Optional Setup": [[469, "optional-setup"], [500, "optional-setup"]], "GUI input": [[469, "gui-input"], [500, "gui-input"]], "GUI output": [[469, "gui-output"], [500, "gui-output"]], "ARMI v0.1 Release Notes": [[470, "armi-v0-1-release-notes"]], "ARMI v0.1.7": [[470, "armi-v0-1-7"]], "API changes": [[470, "api-changes"]], "Bug fixes": [[470, "bug-fixes"], [471, "bug-fixes"], [471, "id6"], [471, "id8"], [471, "id11"], [471, "id15"], [471, "id18"], [471, "id21"], [471, "id26"], [471, "id28"], [471, "id30"], [471, "id33"]], "ARMI v0.1.6": [[470, "armi-v0-1-6"]], "Deprecations": [[470, "deprecations"]], "Bugfixes": [[470, "bugfixes"], [470, "id1"], [470, "id2"], [470, "id4"]], "ARMI v0.1.5": [[470, "armi-v0-1-5"]], "User-facing enhancements": [[470, "user-facing-enhancements"], [470, "id3"], [470, "id6"]], "Backend changes": [[470, "backend-changes"], [470, "id5"], [470, "id7"]], "ARMI v0.1.4": [[470, "armi-v0-1-4"]], "ARMI v0.1.3": [[470, "armi-v0-1-3"]], "ARMI v0.1.2": [[470, "armi-v0-1-2"]], "Hotfixes": [[470, "hotfixes"]], "ARMI v0.1.1": [[470, "armi-v0-1-1"]], "ARMI v0.1.0": [[470, "armi-v0-1-0"]], "ARMI v0.2 Release Notes": [[471, "armi-v0-2-release-notes"]], "ARMI v0.2.10": [[471, "armi-v0-2-10"]], "What\u2019s new in ARMI": [[471, "what-s-new-in-armi"], [471, "id1"], [471, "id7"], [471, "id9"], [471, "id13"], [471, "id17"], [471, "id19"], [471, "id24"]], "ARMI v0.2.9": [[471, "armi-v0-2-9"]], "Build changes": [[471, "build-changes"]], "ARMI v0.2.8": [[471, "armi-v0-2-8"]], "ARMI v0.2.7": [[471, "armi-v0-2-7"]], "ARMI v0.2.6": [[471, "armi-v0-2-6"]], "ARMI v0.2.5": [[471, "armi-v0-2-5"]], "ARMI v0.2.4": [[471, "armi-v0-2-4"]], "ARMI v0.2.3": [[471, "armi-v0-2-3"]], "ARMI v0.2.2": [[471, "armi-v0-2-2"]], "What\u2019s new in ARMI v0.2.2": [[471, "what-s-new-in-armi-v0-2-2"]], "ARMI v0.2.1": [[471, "armi-v0-2-1"]], "What\u2019s new in ARMI v0.2.1": [[471, "what-s-new-in-armi-v0-2-1"]], "ARMI v0.2.0": [[471, "armi-v0-2-0"]], "What\u2019s new in ARMI v0.2.0": [[471, "what-s-new-in-armi-v0-2-0"]], "Backwards incompatible changes": [[471, "backwards-incompatible-changes"]], "Release Notes": [[472, "release-notes"]], "Hands-on at the ARMI Terminal": [[473, "Hands-on-at-the-ARMI-Terminal"]], "Initializing and Exploring the ARMI Model": [[473, "Initializing-and-Exploring-the-ARMI-Model"]], "Quiz Question 1": [[473, null]], "Exploring the state of the reactor": [[473, "Exploring-the-state-of-the-reactor"]], "Modifying the state of the reactor": [[473, "Modifying-the-state-of-the-reactor"]], "Modifying number densities": [[473, "Modifying-number-densities"]], "Saving state to disk": [[473, "Saving-state-to-disk"]], "Fuel management": [[473, "Fuel-management"]], "Loading from the database": [[473, "Loading-from-the-database"]], "Tutorials": [[474, "tutorials"]], "Making your first ARMI-based App": [[475, "making-your-first-armi-based-app"]], "Starting a new app": [[475, "starting-a-new-app"]], "Registering the app with ARMI": [[475, "registering-the-app-with-armi"]], "Defining the app class": [[475, "defining-the-app-class"]], "Apps vs. plugins vs. interfaces": [[475, null]], "Defining the physics plugin": [[475, "defining-the-physics-plugin"]], "What are plugins again?": [[475, null]], "Defining custom settings": [[475, "defining-custom-settings"]], "Creating the physics kernels": [[475, "creating-the-physics-kernels"]], "Making the (dummy) flux kernel": [[475, "making-the-dummy-flux-kernel"]], "Making the thermal/hydraulics kernel": [[475, "making-the-thermal-hydraulics-kernel"]], "Adding entry points": [[475, "adding-entry-points"]], "Running the app and debugging": [[475, "running-the-app-and-debugging"]], "Windows tip": [[475, null]], "Submodule tip": [[475, null]], "Yet another way": [[475, null]], "Adding a new material": [[475, "adding-a-new-material"]], "Why __main__.py?": [[475, null]], "Checking the output": [[475, "checking-the-output"]], "Fancy XDMF format": [[475, null]], "Bonus: Ad-hoc UserPlugins": [[475, "bonus-ad-hoc-userplugins"]], "Define the UserPlugin in Python": [[475, "define-the-userplugin-in-python"]], "Define a list of UserPlugins in the Settings File": [[475, "define-a-list-of-userplugins-in-the-settings-file"]], "The ARMI Material Library": [[476, "The-ARMI-Material-Library"]], "The ARMI Nuclide and Element Packages": [[477, "The-ARMI-Nuclide-and-Element-Packages"]], "Accessing Individual Nuclide Data/Attributes": [[477, "Accessing-Individual-Nuclide-Data/Attributes"]], "How many total nuclides and elements are defined in the framework?": [[477, "How-many-total-nuclides-and-elements-are-defined-in-the-framework?"]], "Looking up nuclide and elemental data for U-235": [[477, "Looking-up-nuclide-and-elemental-data-for-U-235"]], "Looking up nuclide and elemental data for Li-7": [[477, "Looking-up-nuclide-and-elemental-data-for-Li-7"]], "Exploring elemental Lithium data": [[477, "Exploring-elemental-Lithium-data"]], "Plotting the Chart of the Nuclides": [[477, "Plotting-the-Chart-of-the-Nuclides"]], "Parameter sweeps": [[478, "Parameter-sweeps"]], "A simple one-dimensional parameter sweep": [[478, "A-simple-one-dimensional-parameter-sweep"]], "Modifying the reactor design": [[478, "Modifying-the-reactor-design"]], "A full factorial parameter sweep": [[478, "A-full-factorial-parameter-sweep"]], "Post-processing the results of the sweep": [[478, "Post-processing-the-results-of-the-sweep"]], "Building input files for a fast reactor": [[479, "building-input-files-for-a-fast-reactor"]], "Setting up the blueprints": [[479, "setting-up-the-blueprints"], [480, "setting-up-the-blueprints"]], "Defining non-fuel blocks": [[479, "defining-non-fuel-blocks"]], "Radial Shields": [[479, "radial-shields"]], "Reflectors": [[479, "reflectors"]], "Control": [[479, "control"]], "Plenum": [[479, "plenum"]], "Defining how the blocks are arranged into assemblies": [[479, "defining-how-the-blocks-are-arranged-into-assemblies"]], "Defining the fuel assemblies": [[479, "defining-the-fuel-assemblies"]], "Defining the non-fuel assemblies": [[479, "defining-the-non-fuel-assemblies"]], "Specifying the core map": [[479, "specifying-the-core-map"]], "Specifying settings": [[479, "specifying-settings"]], "Defining fuel management": [[479, "defining-fuel-management"], [480, "defining-fuel-management"]], "Building input files for a thermal reactor": [[480, "building-input-files-for-a-thermal-reactor"]], "Custom isotopic vectors": [[480, "custom-isotopic-vectors"]], "The UO2 block": [[480, "the-uo2-block"]], "The MOX block": [[480, "the-mox-block"]], "The moderator block": [[480, "the-moderator-block"]], "The 3-D Assembly definitions": [[480, "the-3-d-assembly-definitions"]], "The Systems definition": [[480, "the-systems-definition"]], "The Grids definitions": [[480, "the-grids-definitions"]], "Nuclide Flags": [[480, "nuclide-flags"], [488, "nuclide-flags"]], "The settings file": [[480, "the-settings-file"]], "Ok, so now what?": [[480, "ok-so-now-what"]], "Accessing Entry Points": [[482, "accessing-entry-points"]], "Reports Entry Point": [[482, "reports-entry-point"]], "Assembly Parameters": [[483, "assembly-parameters"]], "Assembly Parameters from Framework": [[483, "id1"]], "Block Parameters": [[484, "block-parameters"]], "Block Parameters from Framework": [[484, "id9"]], "Block Parameters from ThermalHydraulicsPlugin": [[484, "id10"]], "Block Parameters from FuelPerformancePlugin": [[484, "id11"]], "Block Parameters from NeutronicsPlugin": [[484, "id12"]], "Component Parameters": [[485, "component-parameters"]], "Component Parameters from Framework": [[485, "id1"]], "Core Parameters": [[486, "core-parameters"]], "Core Parameters from Framework": [[486, "id9"]], "Core Parameters from NeutronicsPlugin": [[486, "id10"]], "User Docs": [[487, "user-docs"]], "The Blueprints Input File": [[488, "the-blueprints-input-file"]], "Blueprint sections": [[488, "blueprint-sections"]], "Blocks and Components": [[488, "blocks-and-components"]], "Defining a Component": [[488, "defining-a-component"]], "Component Types": [[488, "component-types"]], "Component list": [[488, "id8"]], "Component Links": [[488, "component-links"]], "Pin lattices": [[488, "pin-lattices"]], "Flags and naming": [[488, "flags-and-naming"]], "Assemblies": [[488, "assemblies"]], "Systems": [[488, "systems"]], "Plugin Behavior": [[488, "plugin-behavior"]], "Grids": [[488, "grids"]], "Custom Isotopics": [[488, "custom-isotopics"]], "Advanced topics": [[488, "advanced-topics"]], "Overlapping shapes": [[488, "overlapping-shapes"]], "Component area modifications": [[488, "component-area-modifications"]], "Putting it all together to make a Block": [[488, "putting-it-all-together-to-make-a-block"]], "Making blocks with unshaped components": [[488, "making-blocks-with-unshaped-components"]], "Fuel Management Input": [[489, "fuel-management-input"]], "Fuel Management Operations": [[489, "fuel-management-operations"]], "swapAssemblies": [[489, "swapassemblies"]], "dischargeSwap": [[489, "dischargeswap"]], "swapCascade": [[489, "swapcascade"]], "Choosing Assemblies to Move": [[489, "choosing-assemblies-to-move"]], "Fuel Management Examples": [[489, "fuel-management-examples"]], "Convergent-Divergent": [[489, "convergent-divergent"]], "Fuel Management Tips": [[489, "fuel-management-tips"]], "Running a branch search": [[489, "running-a-branch-search"]], "Inputs": [[490, "inputs"]], "The Settings Input File": [[491, "the-settings-input-file"]], "The ARMI GUI": [[491, "the-armi-gui"]], "The assembly clicker": [[491, "the-assembly-clicker"]], "The ARMI Environment Tab": [[491, "the-armi-environment-tab"]], "Some special settings": [[491, "some-special-settings"]], "Detail assemblies": [[491, "detail-assemblies"]], "Kinetics settings": [[491, "kinetics-settings"]], "Cycle history": [[491, "cycle-history"]], "Restart cases": [[491, "restart-cases"]], "Settings Report": [[492, "settings-report"]], "ARMI Settings": [[492, "id1"]], "Accessing Data in ARMI": [[493, "accessing-data-in-armi"]], "Settings and State Variables": [[493, "settings-and-state-variables"]], "Accessing Some Interesting Info": [[493, "accessing-some-interesting-info"]], "The Database File": [[494, "the-database-file"]], "Loading Reactor State": [[494, "loading-reactor-state"]], "Extracting Reactor History": [[494, "extracting-reactor-history"]], "Extracting Settings and Blueprints": [[494, "extracting-settings-and-blueprints"]], "File format": [[494, "file-format"]], "Database Structure": [[494, "database-structure"]], "Database structure": [[494, "id1"]], "Outputs": [[495, "outputs"]], "The Standard Output": [[496, "the-standard-output"]], "Physics Coupling": [[497, "physics-coupling"]], "Loose Coupling": [[497, "loose-coupling"]], "Tight Coupling": [[497, "tight-coupling"]], "Eigenvalue": [[497, "eigenvalue"]], "Block-wise Power": [[497, "block-wise-power"]], "Radial and Axial Expansion and Contraction": [[498, "radial-and-axial-expansion-and-contraction"]], "Thermal Expansion": [[498, "thermal-expansion"]], "Radial Expansion": [[498, "radial-expansion"]], "Axial Expansion": [[498, "axial-expansion"]], "Reactor Parameters": [[499, "reactor-parameters"]], "Reactor Parameters from Framework": [[499, "id1"]]}, "indexentries": {"applyasynciowindowsworkaround() (in module armi)": [[0, "armi.applyAsyncioWindowsWorkaround"]], "armi": [[0, "module-armi"], [467, "term-ARMI"]], "configure() (in module armi)": [[0, "armi.configure"]], "disablefutureconfigures() (in module armi)": [[0, "armi.disableFutureConfigures"]], "getapp() (in module armi)": [[0, "armi.getApp"]], "getdefaultpluginmanager() (in module armi)": [[0, "armi.getDefaultPluginManager"]], "getdefaultplugins() (in module armi)": [[0, "armi.getDefaultPlugins"]], "getpluginmanager() (in module armi)": [[0, "armi.getPluginManager"]], "getpluginmanagerorfail() (in module armi)": [[0, "armi.getPluginManagerOrFail"]], "init() (in module armi)": [[0, "armi.init"]], "isconfigured() (in module armi)": [[0, "armi.isConfigured"]], "isstablereleaseversion() (in module armi)": [[0, "armi.isStableReleaseVersion"]], "module": [[0, "module-armi"], [1, "module-armi.apps"], [2, "module-armi.bookkeeping"], [3, "module-armi.bookkeeping.db"], [4, "module-armi.bookkeeping.db.compareDB3"], [5, "module-armi.bookkeeping.db.database3"], [6, "module-armi.bookkeeping.db.databaseInterface"], [7, "module-armi.bookkeeping.db.factory"], [8, "module-armi.bookkeeping.db.layout"], [9, "module-armi.bookkeeping.db.permissions"], [10, "module-armi.bookkeeping.db.tests"], [11, "module-armi.bookkeeping.db.tests.test_comparedb3"], [12, "module-armi.bookkeeping.db.tests.test_database3"], [13, "module-armi.bookkeeping.db.tests.test_databaseInterface"], [14, "module-armi.bookkeeping.db.tests.test_layout"], [15, "module-armi.bookkeeping.db.typedefs"], [16, "module-armi.bookkeeping.historyTracker"], [17, "module-armi.bookkeeping.mainInterface"], [18, "module-armi.bookkeeping.memoryProfiler"], [19, "module-armi.bookkeeping.report"], [20, "module-armi.bookkeeping.report.data"], [21, "module-armi.bookkeeping.report.html"], [22, "module-armi.bookkeeping.report.newReportUtils"], [23, "module-armi.bookkeeping.report.newReports"], [24, "module-armi.bookkeeping.report.reportInterface"], [25, "module-armi.bookkeeping.report.reportingUtils"], [26, "module-armi.bookkeeping.report.tests"], [27, "module-armi.bookkeeping.report.tests.test_newReport"], [28, "module-armi.bookkeeping.report.tests.test_report"], [29, "module-armi.bookkeeping.snapshotInterface"], [30, "module-armi.bookkeeping.tests"], [31, "module-armi.bookkeeping.tests.test_historyTracker"], [32, "module-armi.bookkeeping.tests.test_memoryProfiler"], [33, "module-armi.bookkeeping.tests.test_snapshot"], [34, "module-armi.bookkeeping.visualization"], [35, "module-armi.bookkeeping.visualization.dumper"], [36, "module-armi.bookkeeping.visualization.entryPoint"], [37, "module-armi.bookkeeping.visualization.tests"], [38, "module-armi.bookkeeping.visualization.tests.test_vis"], [39, "module-armi.bookkeeping.visualization.tests.test_xdmf"], [40, "module-armi.bookkeeping.visualization.utils"], [41, "module-armi.bookkeeping.visualization.vtk"], [42, "module-armi.bookkeeping.visualization.xdmf"], [43, "module-armi.cases"], [44, "module-armi.cases.case"], [45, "module-armi.cases.inputModifiers"], [46, "module-armi.cases.inputModifiers.inputModifiers"], [47, "module-armi.cases.inputModifiers.neutronicsModifiers"], [48, "module-armi.cases.inputModifiers.pinTypeInputModifiers"], [49, "module-armi.cases.inputModifiers.tests"], [50, "module-armi.cases.inputModifiers.tests.test_inputModifiers"], [51, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"], [52, "module-armi.cases.suite"], [53, "module-armi.cases.suiteBuilder"], [54, "module-armi.cases.tests"], [55, "module-armi.cases.tests.test_cases"], [56, "module-armi.cases.tests.test_suiteBuilder"], [57, "module-armi.cli"], [58, "module-armi.cli.checkInputs"], [59, "module-armi.cli.cleanTemps"], [60, "module-armi.cli.clone"], [61, "module-armi.cli.compareCases"], [62, "module-armi.cli.database"], [63, "module-armi.cli.entryPoint"], [64, "module-armi.cli.gridGui"], [65, "module-armi.cli.migrateInputs"], [66, "module-armi.cli.modify"], [67, "module-armi.cli.reportsEntryPoint"], [68, "module-armi.cli.run"], [69, "module-armi.cli.runSuite"], [70, "module-armi.cli.tests"], [71, "module-armi.cli.tests.test_runEntryPoint"], [72, "module-armi.cli.tests.test_runSuite"], [73, "module-armi.conftest"], [74, "module-armi.context"], [75, "module-armi.interfaces"], [76, "module-armi.materials"], [77, "module-armi.materials.air"], [78, "module-armi.materials.alloy200"], [79, "module-armi.materials.b4c"], [80, "module-armi.materials.be9"], [81, "module-armi.materials.caH2"], [82, "module-armi.materials.californium"], [83, "module-armi.materials.concrete"], [84, "module-armi.materials.copper"], [85, "module-armi.materials.cs"], [86, "module-armi.materials.custom"], [87, "module-armi.materials.graphite"], [88, "module-armi.materials.hafnium"], [89, "module-armi.materials.hastelloyN"], [90, "module-armi.materials.ht9"], [91, "module-armi.materials.inconel"], [92, "module-armi.materials.inconel600"], [93, "module-armi.materials.inconel625"], [94, "module-armi.materials.inconel800"], [95, "module-armi.materials.inconelPE16"], [96, "module-armi.materials.inconelX750"], [97, "module-armi.materials.lead"], [98, "module-armi.materials.leadBismuth"], [99, "module-armi.materials.lithium"], [100, "module-armi.materials.magnesium"], [101, "module-armi.materials.material"], [102, "module-armi.materials.mgO"], [103, "module-armi.materials.mixture"], [104, "module-armi.materials.molybdenum"], [105, "module-armi.materials.mox"], [106, "module-armi.materials.nZ"], [107, "module-armi.materials.potassium"], [108, "module-armi.materials.scandiumOxide"], [109, "module-armi.materials.siC"], [110, "module-armi.materials.sodium"], [111, "module-armi.materials.sodiumChloride"], [112, "module-armi.materials.sulfur"], [113, "module-armi.materials.tZM"], [114, "module-armi.materials.tantalum"], [115, "module-armi.materials.tests"], [116, "module-armi.materials.tests.test__init__"], [117, "module-armi.materials.tests.test_air"], [118, "module-armi.materials.tests.test_b4c"], [119, "module-armi.materials.tests.test_be9"], [120, "module-armi.materials.tests.test_graphite"], [121, "module-armi.materials.tests.test_lithium"], [122, "module-armi.materials.tests.test_materials"], [123, "module-armi.materials.tests.test_sic"], [124, "module-armi.materials.tests.test_sulfur"], [125, "module-armi.materials.tests.test_thoriumOxide"], [126, "module-armi.materials.tests.test_uZr"], [127, "module-armi.materials.tests.test_water"], [128, "module-armi.materials.thU"], [129, "module-armi.materials.thorium"], [130, "module-armi.materials.thoriumOxide"], [131, "module-armi.materials.uThZr"], [132, "module-armi.materials.uZr"], [133, "module-armi.materials.uranium"], [134, "module-armi.materials.uraniumOxide"], [135, "module-armi.materials.void"], [136, "module-armi.materials.water"], [137, "module-armi.materials.yttriumOxide"], [138, "module-armi.materials.zincOxide"], [139, "module-armi.materials.zr"], [140, "module-armi.meta"], [141, "module-armi.migration"], [142, "module-armi.migration.base"], [143, "module-armi.migration.m0_1_3"], [144, "module-armi.migration.m0_1_6"], [145, "module-armi.migration.tests"], [146, "module-armi.migration.tests.test_m0_1_6"], [147, "module-armi.migration.tests.test_migration_base"], [148, "module-armi.mpiActions"], [149, "module-armi.nucDirectory"], [150, "module-armi.nucDirectory.elements"], [151, "module-armi.nucDirectory.nucDir"], [152, "module-armi.nucDirectory.nuclideBases"], [153, "module-armi.nucDirectory.tests"], [154, "module-armi.nucDirectory.tests.test_elements"], [155, "module-armi.nucDirectory.tests.test_nucDirectory"], [156, "module-armi.nucDirectory.tests.test_nuclideBases"], [157, "module-armi.nucDirectory.tests.test_thermalScattering"], [158, "module-armi.nucDirectory.tests.test_transmutations"], [159, "module-armi.nucDirectory.thermalScattering"], [160, "module-armi.nucDirectory.transmutations"], [161, "module-armi.nuclearDataIO"], [162, "module-armi.nuclearDataIO.cccc"], [163, "module-armi.nuclearDataIO.cccc.cccc"], [164, "module-armi.nuclearDataIO.cccc.compxs"], [165, "module-armi.nuclearDataIO.cccc.dif3d"], [166, "module-armi.nuclearDataIO.cccc.dlayxs"], [167, "module-armi.nuclearDataIO.cccc.fixsrc"], [168, "module-armi.nuclearDataIO.cccc.gamiso"], [169, "module-armi.nuclearDataIO.cccc.geodst"], [170, "module-armi.nuclearDataIO.cccc.isotxs"], [171, "module-armi.nuclearDataIO.cccc.labels"], [172, "module-armi.nuclearDataIO.cccc.nhflux"], [173, "module-armi.nuclearDataIO.cccc.pmatrx"], [174, "module-armi.nuclearDataIO.cccc.pwdint"], [175, "module-armi.nuclearDataIO.cccc.rtflux"], [176, "module-armi.nuclearDataIO.cccc.rzflux"], [177, "module-armi.nuclearDataIO.cccc.tests"], [178, "module-armi.nuclearDataIO.cccc.tests.test_cccc"], [179, "module-armi.nuclearDataIO.cccc.tests.test_compxs"], [180, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"], [181, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"], [182, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"], [183, "module-armi.nuclearDataIO.cccc.tests.test_geodst"], [184, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"], [185, "module-armi.nuclearDataIO.cccc.tests.test_labels"], [186, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"], [187, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"], [188, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"], [189, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"], [190, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"], [191, "module-armi.nuclearDataIO.nuclearFileMetadata"], [192, "module-armi.nuclearDataIO.tests"], [193, "module-armi.nuclearDataIO.tests.test_xsCollections"], [194, "module-armi.nuclearDataIO.tests.test_xsLibraries"], [195, "module-armi.nuclearDataIO.tests.test_xsNuclides"], [196, "module-armi.nuclearDataIO.xsCollections"], [197, "module-armi.nuclearDataIO.xsLibraries"], [198, "module-armi.nuclearDataIO.xsNuclides"], [199, "module-armi.operators"], [200, "module-armi.operators.operator"], [201, "module-armi.operators.operatorMPI"], [202, "module-armi.operators.runTypes"], [203, "module-armi.operators.settingsValidation"], [204, "module-armi.operators.snapshots"], [205, "module-armi.operators.tests"], [206, "module-armi.operators.tests.test_inspectors"], [207, "module-armi.operators.tests.test_operatorSnapshots"], [208, "module-armi.operators.tests.test_operators"], [209, "module-armi.physics"], [210, "module-armi.physics.constants"], [211, "module-armi.physics.executers"], [212, "module-armi.physics.fuelCycle"], [213, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"], [214, "module-armi.physics.fuelCycle.fuelHandlerFactory"], [215, "module-armi.physics.fuelCycle.fuelHandlerInterface"], [216, "module-armi.physics.fuelCycle.fuelHandlers"], [217, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"], [218, "module-armi.physics.fuelCycle.settings"], [219, "module-armi.physics.fuelCycle.tests"], [220, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"], [221, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"], [222, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"], [223, "module-armi.physics.fuelPerformance"], [224, "module-armi.physics.fuelPerformance.executers"], [225, "module-armi.physics.fuelPerformance.parameters"], [226, "module-armi.physics.fuelPerformance.plugin"], [227, "module-armi.physics.fuelPerformance.settings"], [228, "module-armi.physics.fuelPerformance.tests"], [229, "module-armi.physics.fuelPerformance.tests.test_executers"], [230, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"], [231, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"], [232, "module-armi.physics.fuelPerformance.utils"], [233, "module-armi.physics.neutronics"], [234, "module-armi.physics.neutronics.const"], [235, "module-armi.physics.neutronics.crossSectionGroupManager"], [236, "module-armi.physics.neutronics.crossSectionSettings"], [237, "module-armi.physics.neutronics.diffIsotxs"], [238, "module-armi.physics.neutronics.energyGroups"], [239, "module-armi.physics.neutronics.fissionProductModel"], [240, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"], [241, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"], [242, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"], [243, "module-armi.physics.neutronics.fissionProductModel.tests"], [244, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"], [245, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"], [246, "module-armi.physics.neutronics.globalFlux"], [247, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"], [248, "module-armi.physics.neutronics.globalFlux.tests"], [249, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"], [250, "module-armi.physics.neutronics.isotopicDepletion"], [251, "module-armi.physics.neutronics.isotopicDepletion.crossSectionTable"], [252, "module-armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface"], [253, "module-armi.physics.neutronics.latticePhysics"], [254, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"], [255, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"], [256, "module-armi.physics.neutronics.latticePhysics.tests"], [257, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"], [258, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"], [259, "module-armi.physics.neutronics.macroXSGenerationInterface"], [260, "module-armi.physics.neutronics.parameters"], [261, "module-armi.physics.neutronics.reports"], [262, "module-armi.physics.neutronics.settings"], [263, "module-armi.physics.neutronics.tests"], [264, "module-armi.physics.neutronics.tests.test_crossSectionManager"], [265, "module-armi.physics.neutronics.tests.test_crossSectionSettings"], [266, "module-armi.physics.neutronics.tests.test_crossSectionTable"], [267, "module-armi.physics.neutronics.tests.test_energyGroups"], [268, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"], [269, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"], [270, "module-armi.physics.safety"], [271, "module-armi.physics.tests"], [272, "module-armi.physics.tests.test_executers"], [273, "module-armi.physics.thermalHydraulics"], [274, "module-armi.physics.thermalHydraulics.const"], [275, "module-armi.physics.thermalHydraulics.parameters"], [276, "module-armi.physics.thermalHydraulics.plugin"], [277, "module-armi.physics.thermalHydraulics.settings"], [278, "module-armi.pluginManager"], [279, "module-armi.plugins"], [280, "module-armi.reactor"], [281, "module-armi.reactor.assemblies"], [282, "module-armi.reactor.assemblyLists"], [283, "module-armi.reactor.assemblyParameters"], [284, "module-armi.reactor.blockParameters"], [285, "module-armi.reactor.blocks"], [286, "module-armi.reactor.blueprints"], [287, "module-armi.reactor.blueprints.assemblyBlueprint"], [288, "module-armi.reactor.blueprints.blockBlueprint"], [289, "module-armi.reactor.blueprints.componentBlueprint"], [290, "module-armi.reactor.blueprints.gridBlueprint"], [291, "module-armi.reactor.blueprints.isotopicOptions"], [292, "module-armi.reactor.blueprints.reactorBlueprint"], [293, "module-armi.reactor.blueprints.tests"], [294, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"], [295, "module-armi.reactor.blueprints.tests.test_blockBlueprints"], [296, "module-armi.reactor.blueprints.tests.test_blueprints"], [297, "module-armi.reactor.blueprints.tests.test_componentBlueprint"], [298, "module-armi.reactor.blueprints.tests.test_customIsotopics"], [299, "module-armi.reactor.blueprints.tests.test_gridBlueprints"], [300, "module-armi.reactor.blueprints.tests.test_materialModifications"], [301, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"], [302, "module-armi.reactor.components"], [303, "module-armi.reactor.components.basicShapes"], [304, "module-armi.reactor.components.complexShapes"], [305, "module-armi.reactor.components.component"], [306, "module-armi.reactor.components.componentParameters"], [307, "module-armi.reactor.components.volumetricShapes"], [308, "module-armi.reactor.composites"], [309, "module-armi.reactor.converters"], [310, "module-armi.reactor.converters.axialExpansionChanger"], [311, "module-armi.reactor.converters.blockConverters"], [312, "module-armi.reactor.converters.geometryConverters"], [313, "module-armi.reactor.converters.meshConverters"], [314, "module-armi.reactor.converters.parameterSweeps"], [315, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"], [316, "module-armi.reactor.converters.pinTypeBlockConverters"], [317, "module-armi.reactor.converters.tests"], [318, "module-armi.reactor.converters.tests.test_axialExpansionChanger"], [319, "module-armi.reactor.converters.tests.test_blockConverter"], [320, "module-armi.reactor.converters.tests.test_geometryConverters"], [321, "module-armi.reactor.converters.tests.test_meshConverters"], [322, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"], [323, "module-armi.reactor.converters.tests.test_uniformMesh"], [324, "module-armi.reactor.converters.uniformMesh"], [325, "module-armi.reactor.flags"], [326, "module-armi.reactor.geometry"], [327, "module-armi.reactor.grids"], [328, "module-armi.reactor.grids.axial"], [329, "module-armi.reactor.grids.cartesian"], [330, "module-armi.reactor.grids.constants"], [331, "module-armi.reactor.grids.grid"], [332, "module-armi.reactor.grids.hexagonal"], [333, "module-armi.reactor.grids.locations"], [334, "module-armi.reactor.grids.structuredgrid"], [335, "module-armi.reactor.grids.thetarz"], [336, "module-armi.reactor.parameters"], [337, "module-armi.reactor.parameters.exceptions"], [338, "module-armi.reactor.parameters.parameterCollections"], [339, "module-armi.reactor.parameters.parameterDefinitions"], [340, "module-armi.reactor.parameters.resolveCollections"], [341, "module-armi.reactor.reactorParameters"], [342, "module-armi.reactor.reactors"], [343, "module-armi.reactor.systemLayoutInput"], [344, "module-armi.reactor.tests"], [345, "module-armi.reactor.tests.test_assemblies"], [346, "module-armi.reactor.tests.test_blocks"], [347, "module-armi.reactor.tests.test_components"], [348, "module-armi.reactor.tests.test_composites"], [349, "module-armi.reactor.tests.test_flags"], [350, "module-armi.reactor.tests.test_geometry"], [351, "module-armi.reactor.tests.test_parameters"], [352, "module-armi.reactor.tests.test_reactors"], [353, "module-armi.reactor.tests.test_rz_reactors"], [354, "module-armi.reactor.tests.test_zones"], [355, "module-armi.reactor.zones"], [356, "module-armi.runLog"], [357, "module-armi.settings"], [358, "module-armi.settings.caseSettings"], [359, "module-armi.settings.fwSettings"], [360, "module-armi.settings.fwSettings.databaseSettings"], [361, "module-armi.settings.fwSettings.globalSettings"], [362, "module-armi.settings.fwSettings.reportSettings"], [363, "module-armi.settings.fwSettings.tightCouplingSettings"], [364, "module-armi.settings.setting"], [365, "module-armi.settings.settingsIO"], [366, "module-armi.settings.tests"], [367, "module-armi.settings.tests.test_settings"], [368, "module-armi.settings.tests.test_settingsIO"], [369, "module-armi.tests"], [370, "module-armi.tests.mockRunLogs"], [371, "module-armi.tests.refSmallReactorShuffleLogic"], [372, "module-armi.tests.test_apps"], [373, "module-armi.tests.test_armiTestHelper"], [374, "module-armi.tests.test_cartesian"], [375, "module-armi.tests.test_interfaces"], [376, "module-armi.tests.test_lwrInputs"], [377, "module-armi.tests.test_mpiActions"], [378, "module-armi.tests.test_mpiFeatures"], [379, "module-armi.tests.test_mpiParameters"], [380, "module-armi.tests.test_notebooks"], [381, "module-armi.tests.test_plugins"], [382, "module-armi.tests.test_runLog"], [383, "module-armi.tests.test_tests"], [384, "module-armi.tests.test_user_plugins"], [385, "module-armi.utils"], [386, "module-armi.utils.asciimaps"], [387, "module-armi.utils.codeTiming"], [388, "module-armi.utils.customExceptions"], [389, "module-armi.utils.densityTools"], [390, "module-armi.utils.directoryChangers"], [391, "module-armi.utils.directoryChangersMpi"], [392, "module-armi.utils.dochelpers"], [393, "module-armi.utils.dynamicImporter"], [394, "module-armi.utils.flags"], [396, "module-armi.utils.hexagon"], [397, "module-armi.utils.iterables"], [398, "module-armi.utils.mathematics"], [399, "module-armi.utils.outputCache"], [400, "module-armi.utils.parsing"], [401, "module-armi.utils.pathTools"], [402, "module-armi.utils.plotting"], [403, "module-armi.utils.properties"], [404, "module-armi.utils.reportPlotting"], [405, "module-armi.utils.tests"], [406, "module-armi.utils.tests.test_asciimaps"], [407, "module-armi.utils.tests.test_codeTiming"], [408, "module-armi.utils.tests.test_custom_exceptions"], [409, "module-armi.utils.tests.test_densityTools"], [410, "module-armi.utils.tests.test_directoryChangers"], [411, "module-armi.utils.tests.test_dochelpers"], [412, "module-armi.utils.tests.test_flags"], [413, "module-armi.utils.tests.test_hexagon"], [414, "module-armi.utils.tests.test_iterables"], [415, "module-armi.utils.tests.test_mathematics"], [416, "module-armi.utils.tests.test_outputCache"], [417, "module-armi.utils.tests.test_parsing"], [418, "module-armi.utils.tests.test_pathTools"], [419, "module-armi.utils.tests.test_plotting"], [420, "module-armi.utils.tests.test_properties"], [421, "module-armi.utils.tests.test_reportPlotting"], [422, "module-armi.utils.tests.test_textProcessors"], [423, "module-armi.utils.tests.test_triangle"], [424, "module-armi.utils.tests.test_units"], [425, "module-armi.utils.tests.test_utils"], [426, "module-armi.utils.textProcessors"], [427, "module-armi.utils.triangle"], [428, "module-armi.utils.units"]], "app (class in armi.apps)": [[1, "armi.apps.App"]], "armi.apps": [[1, "module-armi.apps"]], "getparamrenames() (armi.apps.app method)": [[1, "armi.apps.App.getParamRenames"]], "getsettings() (armi.apps.app method)": [[1, "armi.apps.App.getSettings"]], "name (armi.apps.app attribute)": [[1, "armi.apps.App.name"]], "pluginmanager (armi.apps.app property)": [[1, "armi.apps.App.pluginManager"]], "registerpluginflags() (armi.apps.app method)": [[1, "armi.apps.App.registerPluginFlags"]], "registeruserplugins() (armi.apps.app method)": [[1, "armi.apps.App.registerUserPlugins"]], "splashtext (armi.apps.app property)": [[1, "armi.apps.App.splashText"]], "version (armi.apps.app property)": [[1, "armi.apps.App.version"]], "bookkeepingplugin (class in armi.bookkeeping)": [[2, "armi.bookkeeping.BookkeepingPlugin"]], "armi.bookkeeping": [[2, "module-armi.bookkeeping"]], "definecasedependencies() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineEntryPoints"]], "exposeinterfaces() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.exposeInterfaces"]], "getreportcontents() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.mpiActionRequiresReset"]], "create_file_fie (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.CREATE_FILE_FIE"]], "create_file_fie2 (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.CREATE_FILE_FIE2"]], "create_file_tie (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.CREATE_FILE_TIE"]], "default (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.DEFAULT"]], "database3 (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.Database3"]], "databaseinterface (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.DatabaseInterface"]], "permissions (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.Permissions"]], "read_only_fme (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.READ_ONLY_FME"]], "read_write_create (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.READ_WRITE_CREATE"]], "read_write_fme (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.READ_WRITE_FME"]], "all (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.all"]], "armi.bookkeeping.db": [[3, "module-armi.bookkeeping.db"]], "close() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.close"]], "comparedatabases() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.compareDatabases"]], "convertdatabase() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.convertDatabase"]], "create (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.create"]], "database (armi.bookkeeping.db.databaseinterface property)": [[3, "armi.bookkeeping.db.DatabaseInterface.database"]], "databasefactory() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.databaseFactory"]], "distributable() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.distributable"]], "filename (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database3 static method)": [[3, "armi.bookkeeping.db.Database3.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getH5Group"]], "gethistories() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistories"]], "gethistories() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistory"]], "gethistory() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database3 static method)": [[3, "armi.bookkeeping.db.Database3.grabLocalCommitHash"]], "hastimestep() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.hasTimeStep"]], "initdb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEveryNode"]], "keys() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.keys"]], "load() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.load"]], "loadblueprints() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadGeometry"]], "loadoperator() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.loadOperator"]], "loadstate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.loadState"]], "mergehistory() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.mergeHistory"]], "name (armi.bookkeeping.db.databaseinterface attribute)": [[3, "armi.bookkeeping.db.DatabaseInterface.name"]], "open() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.open"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.prepRestartRun"]], "read (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.read"]], "readinputsfromdb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database3 attribute)": [[3, "armi.bookkeeping.db.Database3.timeNodeGroupPattern"]], "version (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.version"]], "versionmajor (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.versionMajor"]], "versionminor (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.versionMinor"]], "write (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.write"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.writeDBEveryNode"]], "writeinputstodb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database3 static method)": [[3, "armi.bookkeeping.db.Database3.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.writeToDB"]], "diffresults (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults"]], "outputwriter (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter"]], "adddiff() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addDiff"]], "addstructurediffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addStructureDiffs"]], "addtimestep() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addTimeStep"]], "armi.bookkeeping.db.comparedb3": [[4, "module-armi.bookkeeping.db.compareDB3"]], "comparedatabases() (in module armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.compareDatabases"]], "ndiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.nDiffs"]], "reportdiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.reportDiffs"]], "writeln() (armi.bookkeeping.db.comparedb3.outputwriter method)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter.writeln"]], "database3 (class in armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.Database3"]], "armi.bookkeeping.db.database3": [[5, "module-armi.bookkeeping.db.database3"]], "close() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.close"]], "collectblocknumberdensities() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.collectBlockNumberDensities"]], "filename (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database3.database3 static method)": [[5, "armi.bookkeeping.db.database3.Database3.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getH5Group"]], "geth5groupname() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.getH5GroupName"]], "gethistories() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database3.database3 static method)": [[5, "armi.bookkeeping.db.database3.Database3.grabLocalCommitHash"]], "h5db (armi.bookkeeping.db.database3.database3 attribute)": [[5, "armi.bookkeeping.db.database3.Database3.h5db"]], "hastimestep() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.hasTimeStep"]], "keys() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.keys"]], "load() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.load"]], "loadblueprints() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadGeometry"]], "mergehistory() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.mergeHistory"]], "open() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.open"]], "packspecialdata() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.packSpecialData"]], "readinputsfromdb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database3.database3 attribute)": [[5, "armi.bookkeeping.db.database3.Database3.timeNodeGroupPattern"]], "unpackspecialdata() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.unpackSpecialData"]], "version (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.version"]], "versionmajor (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.versionMajor"]], "versionminor (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.versionMinor"]], "writeinputstodb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.writeInputsToDB"]], "writesystemattributes() (armi.bookkeeping.db.database3.database3 static method)": [[5, "armi.bookkeeping.db.database3.Database3.writeSystemAttributes"]], "writetodb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.writeToDB"]], "databaseinterface (class in armi.bookkeeping.db.databaseinterface)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface"]], "armi.bookkeeping.db.databaseinterface": [[6, "module-armi.bookkeeping.db.databaseInterface"]], "database (armi.bookkeeping.db.databaseinterface.databaseinterface property)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.database"]], "describeinterfaces() (in module armi.bookkeeping.db.databaseinterface)": [[6, "armi.bookkeeping.db.databaseInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.distributable"]], "gethistories() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistories"]], "gethistory() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistory"]], "initdb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEveryNode"]], "loadstate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.loadState"]], "name (armi.bookkeeping.db.databaseinterface.databaseinterface attribute)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.name"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.prepRestartRun"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[7, "module-armi.bookkeeping.db.factory"]], "databasefactory() (in module armi.bookkeeping.db.factory)": [[7, "armi.bookkeeping.db.factory.databaseFactory"]], "layout (class in armi.bookkeeping.db.layout)": [[8, "armi.bookkeeping.db.layout.Layout"]], "allsubclasses() (armi.bookkeeping.db.layout.layout static method)": [[8, "armi.bookkeeping.db.layout.Layout.allSubclasses"]], "armi.bookkeeping.db.layout": [[8, "module-armi.bookkeeping.db.layout"]], "computeancestors() (armi.bookkeeping.db.layout.layout static method)": [[8, "armi.bookkeeping.db.layout.Layout.computeAncestors"]], "replacenoneswithnonsense() (in module armi.bookkeeping.db.layout)": [[8, "armi.bookkeeping.db.layout.replaceNonesWithNonsense"]], "replacenonsensewithnones() (in module armi.bookkeeping.db.layout)": [[8, "armi.bookkeeping.db.layout.replaceNonsenseWithNones"]], "writetodb() (armi.bookkeeping.db.layout.layout method)": [[8, "armi.bookkeeping.db.layout.Layout.writeToDB"]], "create_file_fie (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE"]], "create_file_fie2 (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE2"]], "create_file_tie (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_TIE"]], "default (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.DEFAULT"]], "permissions (class in armi.bookkeeping.db.permissions)": [[9, "armi.bookkeeping.db.permissions.Permissions"]], "read_only_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.READ_ONLY_FME"]], "read_write_create (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_CREATE"]], "read_write_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_FME"]], "all (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.all"]], "armi.bookkeeping.db.permissions": [[9, "module-armi.bookkeeping.db.permissions"]], "create (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.create"]], "read (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.read"]], "write (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.write"]], "armi.bookkeeping.db.tests": [[10, "module-armi.bookkeeping.db.tests"]], "testcomparedb3 (class in armi.bookkeeping.db.tests.test_comparedb3)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3": [[11, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "test_compareauxdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareAuxData"]], "test_comparedatabaseduplicate() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseDuplicate"]], "test_comparedatabasesim() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseSim"]], "test_comparesets() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareSets"]], "test_diffresultsbasic() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffResultsBasic"]], "test_diffsimpledata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSimpleData"]], "test_diffspecialdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSpecialData"]], "test_outputwriter() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_outputWriter"]], "testdatabase3 (class in armi.bookkeeping.db.tests.test_database3)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3"]], "armi.bookkeeping.db.tests.test_database3": [[12, "module-armi.bookkeeping.db.tests.test_database3"]], "makehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.makeHistory"]], "makeshufflehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.makeShuffleHistory"]], "test_auxdata() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_auxData"]], "test_computeparents() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_computeParents"]], "test_deleting() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_deleting"]], "test_filename() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_fileName"]], "test_geth5file() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_getH5File"]], "test_grablocalcommithash() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_grabLocalCommitHash"]], "test_history() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_history"]], "test_load() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_load"]], "test_loadblueprints() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_loadBlueprints"]], "test_loadcs() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_loadCS"]], "test_loadsortsetting() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_loadSortSetting"]], "test_mergehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_mergeHistory"]], "test_open() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_open"]], "test_preprestartrun() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_prepRestartRun"]], "test_readinputsfromdb() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_readInputsFromDB"]], "test_replacenones() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_replaceNones"]], "test_splitdatabase() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_splitDatabase"]], "test_writetodb() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_writeToDB"]], "mockinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface"]], "testbadname (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName"]], "testdatabaseinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface"]], "testdatabasereading (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading"]], "testdatabasewriter (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter"]], "teststandardfollowon (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn"]], "armi.bookkeeping.db.tests.test_databaseinterface": [[13, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "getsimpledboperator() (in module armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.getSimpleDBOperator"]], "interacteverynode() (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.interactEveryNode"]], "name (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface attribute)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.name"]], "test_baddbname() (armi.bookkeeping.db.tests.test_databaseinterface.testbadname method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName.test_badDBName"]], "test_distributable() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_distributable"]], "test_gethistory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistory"]], "test_gethistorybylocation() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistoryByLocation"]], "test_growtofullcore() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCore"]], "test_growtofullcorefromfactory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactory"]], "test_growtofullcorefromfactorywithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactoryWithCS"]], "test_growtofullcorewithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreWithCS"]], "test_interactbol() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_interactBOL"]], "test_interacteverynodereturn() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_interactEveryNodeReturn"]], "test_metadataendfail() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaDataEndFail"]], "test_metadata_endsuccessfully() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaData_endSuccessfully"]], "test_readwithoutinputs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWithoutInputs"]], "test_readwritten() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWritten"]], "test_standardrestart() (armi.bookkeeping.db.tests.test_databaseinterface.teststandardfollowon method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn.test_standardRestart"]], "test_timenodeloop_tightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_timeNodeLoop_tightCoupling"]], "test_varioustypeswork() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_variousTypesWork"]], "test_writesystemattributes() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_writeSystemAttributes"]], "testlocationpacking (class in armi.bookkeeping.db.tests.test_layout)": [[14, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout": [[14, "module-armi.bookkeeping.db.tests.test_layout"]], "test_close() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[14, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_close"]], "test_locationpacking() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[14, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPacking"]], "test_locationpackingoldversion() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[14, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOldVersion"]], "test_locationpackingolderversions() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[14, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOlderVersions"]], "armi.bookkeeping.db.typedefs": [[15, "module-armi.bookkeeping.db.typedefs"]], "historytrackerinterface (class in armi.bookkeeping.historytracker)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface"]], "addallfuelassems() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addAllFuelAssems"]], "adddetailassembliesbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembliesBOL"]], "adddetailassembly() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembly"]], "adddetailassemsbyassemnums() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssemsByAssemNums"]], "armi.bookkeeping.historytracker": [[16, "module-armi.bookkeeping.historyTracker"]], "describeinterfaces() (in module armi.bookkeeping.historytracker)": [[16, "armi.bookkeeping.historyTracker.describeInterfaces"]], "filtertimeindices() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.filterTimeIndices"]], "getblockhistoryval() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getBlockHistoryVal"]], "getdetailassemblies() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailAssemblies"]], "getdetailblocks() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailBlocks"]], "gettimesteps() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTimeSteps"]], "gettrackedparams() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTrackedParams"]], "interactboc() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOC"]], "interactbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOL"]], "interacteol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactEOL"]], "name (armi.bookkeeping.historytracker.historytrackerinterface attribute)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.name"]], "preloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.preloadBlockHistoryVals"]], "unloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.unloadBlockHistoryVals"]], "writeassemhistory() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.writeAssemHistory"]], "maininterface (class in armi.bookkeeping.maininterface)": [[17, "armi.bookkeeping.mainInterface.MainInterface"]], "armi.bookkeeping.maininterface": [[17, "module-armi.bookkeeping.mainInterface"]], "cleanarmifiles() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.cleanARMIFiles"]], "cleanlastcyclefiles() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.cleanLastCycleFiles"]], "describeinterfaces() (in module armi.bookkeeping.maininterface)": [[17, "armi.bookkeeping.mainInterface.describeInterfaces"]], "interactboc() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.interactBOC"]], "interactbol() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.interactBOL"]], "interacteol() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.interactEveryNode"]], "name (armi.bookkeeping.maininterface.maininterface attribute)": [[17, "armi.bookkeeping.mainInterface.MainInterface.name"]], "instancecounter (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.InstanceCounter"]], "klasscounter (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.KlassCounter"]], "memoryprofiler (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler"]], "printsystemmemoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction"]], "profilememoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction"]], "systemandprocessmemoryusage (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.SystemAndProcessMemoryUsage"]], "add() (armi.bookkeeping.memoryprofiler.instancecounter method)": [[18, "armi.bookkeeping.memoryProfiler.InstanceCounter.add"]], "armi.bookkeeping.memoryprofiler": [[18, "module-armi.bookkeeping.memoryProfiler"]], "checkforduplicateobjectsonarmimodel() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.checkForDuplicateObjectsOnArmiModel"]], "countobjects() (armi.bookkeeping.memoryprofiler.klasscounter method)": [[18, "armi.bookkeeping.memoryProfiler.KlassCounter.countObjects"]], "describeinterfaces() (in module armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.describeInterfaces"]], "displaymemoryusage() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.displayMemoryUsage"]], "getreferrers() (armi.bookkeeping.memoryprofiler.memoryprofiler static method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.getReferrers"]], "interactbol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactBOL"]], "interacteol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEOL"]], "interacteverynode() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEveryNode"]], "invokehook() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[18, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.invokeHook"]], "invokehook() (armi.bookkeeping.memoryprofiler.profilememoryusageaction method)": [[18, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction.invokeHook"]], "maxprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[18, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.maxProcessMemoryInMB"]], "minprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[18, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.minProcessMemoryInMB"]], "name (armi.bookkeeping.memoryprofiler.memoryprofiler attribute)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.name"]], "printusage() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[18, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.printUsage"]], "armi.bookkeeping.report": [[19, "module-armi.bookkeeping.report"]], "setdata() (in module armi.bookkeeping.report)": [[19, "armi.bookkeeping.report.setData"]], "group (class in armi.bookkeeping.report.data)": [[20, "armi.bookkeeping.report.data.Group"]], "image (class in armi.bookkeeping.report.data)": [[20, "armi.bookkeeping.report.data.Image"]], "report (class in armi.bookkeeping.report.data)": [[20, "armi.bookkeeping.report.data.Report"]], "table (class in armi.bookkeeping.report.data)": [[20, "armi.bookkeeping.report.data.Table"]], "addtoreport() (armi.bookkeeping.report.data.report method)": [[20, "armi.bookkeeping.report.data.Report.addToReport"]], "armi.bookkeeping.report.data": [[20, "module-armi.bookkeeping.report.data"]], "componentwellgroups (armi.bookkeeping.report.data.report attribute)": [[20, "armi.bookkeeping.report.data.Report.componentWellGroups"]], "count (armi.bookkeeping.report.data.image attribute)": [[20, "armi.bookkeeping.report.data.Image.count"]], "groupsorderfirst (armi.bookkeeping.report.data.report attribute)": [[20, "armi.bookkeeping.report.data.Report.groupsOrderFirst"]], "writegroupshtml() (armi.bookkeeping.report.data.report method)": [[20, "armi.bookkeeping.report.data.Report.writeGroupsHTML"]], "writehtml() (armi.bookkeeping.report.data.group method)": [[20, "armi.bookkeeping.report.data.Group.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.image method)": [[20, "armi.bookkeeping.report.data.Image.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.report method)": [[20, "armi.bookkeeping.report.data.Report.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.table method)": [[20, "armi.bookkeeping.report.data.Table.writeHTML"]], "a (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.A"]], "b (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.B"]], "body (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Body"]], "caption (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Caption"]], "div (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Div"]], "footer (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Footer"]], "h1 (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.H1"]], "h2 (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.H2"]], "h3 (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.H3"]], "h4 (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.H4"]], "htmlfile (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.HTMLFile"]], "head (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Head"]], "html (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Html"]], "img (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Img"]], "li (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.LI"]], "link (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Link"]], "p (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.P"]], "script (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Script"]], "span (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Span"]], "style (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Style"]], "tbody (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.TBody"]], "td (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.TD"]], "th (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.TH"]], "thead (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.THead"]], "tr (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.TR"]], "table (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Table"]], "tag (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Tag"]], "title (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Title"]], "ul (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.UL"]], "armi.bookkeeping.report.html": [[21, "module-armi.bookkeeping.report.html"]], "encode64() (in module armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.encode64"]], "tag (armi.bookkeeping.report.html.a attribute)": [[21, "armi.bookkeeping.report.html.A.tag"]], "tag (armi.bookkeeping.report.html.b attribute)": [[21, "armi.bookkeeping.report.html.B.tag"]], "tag (armi.bookkeeping.report.html.body attribute)": [[21, "armi.bookkeeping.report.html.Body.tag"]], "tag (armi.bookkeeping.report.html.caption attribute)": [[21, "armi.bookkeeping.report.html.Caption.tag"]], "tag (armi.bookkeeping.report.html.div attribute)": [[21, "armi.bookkeeping.report.html.Div.tag"]], "tag (armi.bookkeeping.report.html.footer attribute)": [[21, "armi.bookkeeping.report.html.Footer.tag"]], "tag (armi.bookkeeping.report.html.h1 attribute)": [[21, "armi.bookkeeping.report.html.H1.tag"]], "tag (armi.bookkeeping.report.html.h2 attribute)": [[21, "armi.bookkeeping.report.html.H2.tag"]], "tag (armi.bookkeeping.report.html.h3 attribute)": [[21, "armi.bookkeeping.report.html.H3.tag"]], "tag (armi.bookkeeping.report.html.h4 attribute)": [[21, "armi.bookkeeping.report.html.H4.tag"]], "tag (armi.bookkeeping.report.html.head attribute)": [[21, "armi.bookkeeping.report.html.Head.tag"]], "tag (armi.bookkeeping.report.html.html attribute)": [[21, "armi.bookkeeping.report.html.Html.tag"]], "tag (armi.bookkeeping.report.html.img attribute)": [[21, "armi.bookkeeping.report.html.Img.tag"]], "tag (armi.bookkeeping.report.html.li attribute)": [[21, "armi.bookkeeping.report.html.LI.tag"]], "tag (armi.bookkeeping.report.html.link attribute)": [[21, "armi.bookkeeping.report.html.Link.tag"]], "tag (armi.bookkeeping.report.html.p attribute)": [[21, "armi.bookkeeping.report.html.P.tag"]], "tag (armi.bookkeeping.report.html.script attribute)": [[21, "armi.bookkeeping.report.html.Script.tag"]], "tag (armi.bookkeeping.report.html.span attribute)": [[21, "armi.bookkeeping.report.html.Span.tag"]], "tag (armi.bookkeeping.report.html.style attribute)": [[21, "armi.bookkeeping.report.html.Style.tag"]], "tag (armi.bookkeeping.report.html.tbody attribute)": [[21, "armi.bookkeeping.report.html.TBody.tag"]], "tag (armi.bookkeeping.report.html.td attribute)": [[21, "armi.bookkeeping.report.html.TD.tag"]], "tag (armi.bookkeeping.report.html.th attribute)": [[21, "armi.bookkeeping.report.html.TH.tag"]], "tag (armi.bookkeeping.report.html.thead attribute)": [[21, "armi.bookkeeping.report.html.THead.tag"]], "tag (armi.bookkeeping.report.html.tr attribute)": [[21, "armi.bookkeeping.report.html.TR.tag"]], "tag (armi.bookkeeping.report.html.table attribute)": [[21, "armi.bookkeeping.report.html.Table.tag"]], "tag (armi.bookkeeping.report.html.tag attribute)": [[21, "armi.bookkeeping.report.html.Tag.tag"]], "tag (armi.bookkeeping.report.html.title attribute)": [[21, "armi.bookkeeping.report.html.Title.tag"]], "tag (armi.bookkeeping.report.html.ul attribute)": [[21, "armi.bookkeeping.report.html.UL.tag"]], "write() (armi.bookkeeping.report.html.htmlfile method)": [[21, "armi.bookkeeping.report.html.HTMLFile.write"]], "writeescaped() (armi.bookkeeping.report.html.htmlfile method)": [[21, "armi.bookkeeping.report.html.HTMLFile.writeEscaped"]], "writestandardreporttemplate() (in module armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.writeStandardReportTemplate"]], "design (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.DESIGN"]], "armi.bookkeeping.report.newreportutils": [[22, "module-armi.bookkeeping.report.newReportUtils"]], "comprehensivebolcontent() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.comprehensiveBOLContent"]], "createdimensionreport() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.createDimensionReport"]], "getpindesigntable() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.getPinDesignTable"]], "insertareafractionsreport() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertAreaFractionsReport"]], "insertblockdesignreport() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertBlockDesignReport"]], "insertblockdiagrams() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertBlockDiagrams"]], "insertblueprintcontent() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertBlueprintContent"]], "insertcoreandassemblymaps() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertCoreAndAssemblyMaps"]], "insertcoredesignreport() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertCoreDesignReport"]], "insertdesigncontent() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertDesignContent"]], "insertendoflifecontent() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertEndOfLifeContent"]], "insertgeneralreportcontent() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertGeneralReportContent"]], "insertmetatable() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertMetaTable"]], "insertsettingsdata() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertSettingsData"]], "begin (armi.bookkeeping.report.newreports.reportstage attribute)": [[23, "armi.bookkeeping.report.newReports.ReportStage.Begin"]], "end (armi.bookkeeping.report.newreports.reportstage attribute)": [[23, "armi.bookkeeping.report.newReports.ReportStage.End"]], "image (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.Image"]], "reportcontent (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.ReportContent"]], "reportnode (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.ReportNode"]], "reportstage (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.ReportStage"]], "section (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.Section"]], "standard (armi.bookkeeping.report.newreports.reportstage attribute)": [[23, "armi.bookkeeping.report.newReports.ReportStage.Standard"]], "table (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.Table"]], "timeseries (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.TimeSeries"]], "add() (armi.bookkeeping.report.newreports.timeseries method)": [[23, "armi.bookkeeping.report.newReports.TimeSeries.add"]], "addchildelement() (armi.bookkeeping.report.newreports.section method)": [[23, "armi.bookkeeping.report.newReports.Section.addChildElement"]], "addrow() (armi.bookkeeping.report.newreports.table method)": [[23, "armi.bookkeeping.report.newReports.Table.addRow"]], "armi.bookkeeping.report.newreports": [[23, "module-armi.bookkeeping.report.newReports"]], "encode64() (in module armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.encode64"]], "get() (armi.bookkeeping.report.newreports.reportcontent method)": [[23, "armi.bookkeeping.report.newReports.ReportContent.get"]], "get() (armi.bookkeeping.report.newreports.section method)": [[23, "armi.bookkeeping.report.newReports.Section.get"]], "items() (armi.bookkeeping.report.newreports.section method)": [[23, "armi.bookkeeping.report.newReports.Section.items"]], "leveldict (armi.bookkeeping.report.newreports.reportnode attribute)": [[23, "armi.bookkeeping.report.newReports.ReportNode.levelDict"]], "plot() (armi.bookkeeping.report.newreports.timeseries method)": [[23, "armi.bookkeeping.report.newReports.TimeSeries.plot"]], "render() (armi.bookkeeping.report.newreports.image method)": [[23, "armi.bookkeeping.report.newReports.Image.render"]], "render() (armi.bookkeeping.report.newreports.reportnode method)": [[23, "armi.bookkeeping.report.newReports.ReportNode.render"]], "render() (armi.bookkeeping.report.newreports.section method)": [[23, "armi.bookkeeping.report.newReports.Section.render"]], "render() (armi.bookkeeping.report.newreports.table method)": [[23, "armi.bookkeeping.report.newReports.Table.render"]], "render() (armi.bookkeeping.report.newreports.timeseries method)": [[23, "armi.bookkeeping.report.newReports.TimeSeries.render"]], "tableofcontents() (armi.bookkeeping.report.newreports.reportcontent method)": [[23, "armi.bookkeeping.report.newReports.ReportContent.tableOfContents"]], "writereports() (armi.bookkeeping.report.newreports.reportcontent method)": [[23, "armi.bookkeeping.report.newReports.ReportContent.writeReports"]], "reportinterface (class in armi.bookkeeping.report.reportinterface)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface"]], "armi.bookkeeping.report.reportinterface": [[24, "module-armi.bookkeeping.report.reportInterface"]], "describeinterfaces() (in module armi.bookkeeping.report.reportinterface)": [[24, "armi.bookkeeping.report.reportInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.distributable"]], "generatedesignreport() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.generateDesignReport"]], "interactboc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOC"]], "interactbol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOL"]], "interacteoc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOC"]], "interacteol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEveryNode"]], "name (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.name"]], "printreports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.printReports"]], "reports (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.reports"]], "writereports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.writeReports"]], "writerunsummary() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.writeRunSummary"]], "armi.bookkeeping.report.reportingutils": [[25, "module-armi.bookkeeping.report.reportingUtils"]], "getinterfacestacksummary() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.getInterfaceStackSummary"]], "makeblockdesignreport() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.makeBlockDesignReport"]], "makecoreandassemblymaps() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.makeCoreAndAssemblyMaps"]], "makecoredesignreport() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.makeCoreDesignReport"]], "setneutronbalancesreport() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.setNeutronBalancesReport"]], "summarizepindesign() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.summarizePinDesign"]], "summarizepower() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.summarizePower"]], "summarizepowerpeaking() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.summarizePowerPeaking"]], "writeassemblymasssummary() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.writeAssemblyMassSummary"]], "writecyclesummary() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.writeCycleSummary"]], "writetightcouplingconvergencesummary() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.writeTightCouplingConvergenceSummary"]], "writewelcomeheaders() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[26, "module-armi.bookkeeping.report.tests"]], "testreportcontentcreation (class in armi.bookkeeping.report.tests.test_newreport)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newreport": [[27, "module-armi.bookkeeping.report.tests.test_newReport"]], "test_neutronicsplotfunctions() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_neutronicsPlotFunctions"]], "test_reportbasics() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportBasics"]], "test_reportcontents() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContents"]], "test_reportcontentsend() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContentsEnd"]], "test_reportlogs() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportLogs"]], "test_tablecreation() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_tableCreation"]], "test_timeseries() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_timeSeries"]], "test_writereports() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_writeReports"]], "testreport (class in armi.bookkeeping.report.tests.test_report)": [[28, "armi.bookkeeping.report.tests.test_report.TestReport"]], "testreportinterface (class in armi.bookkeeping.report.tests.test_report)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface"]], "armi.bookkeeping.report.tests.test_report": [[28, "module-armi.bookkeeping.report.tests.test_report"]], "test_distributablereportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_distributableReportInt"]], "test_getdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReport.test_getData"]], "test_interactboc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOC"]], "test_interactbolreportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOLReportInt"]], "test_interacteoc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOC"]], "test_interacteol() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOL"]], "test_interacteverynode() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEveryNode"]], "test_printreports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_printReports"]], "test_reactorspecificreporting() (armi.bookkeeping.report.tests.test_report.testreport method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReport.test_reactorSpecificReporting"]], "test_setdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReport.test_setData"]], "test_writereports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_writeReports"]], "test_writewelcomeheaders() (armi.bookkeeping.report.tests.test_report.testreport method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReport.test_writeWelcomeHeaders"]], "snapshotinterface (class in armi.bookkeeping.snapshotinterface)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface"]], "activatedefaultsnapshots() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface.activateDefaultSnapshots"]], "armi.bookkeeping.snapshotinterface": [[29, "module-armi.bookkeeping.snapshotInterface"]], "describeinterfaces() (in module armi.bookkeeping.snapshotinterface)": [[29, "armi.bookkeeping.snapshotInterface.describeInterfaces"]], "extractcyclenodefromstamp() (in module armi.bookkeeping.snapshotinterface)": [[29, "armi.bookkeeping.snapshotInterface.extractCycleNodeFromStamp"]], "getcyclenodestamp() (in module armi.bookkeeping.snapshotinterface)": [[29, "armi.bookkeeping.snapshotInterface.getCycleNodeStamp"]], "interactbol() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactBOL"]], "interactcoupled() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactCoupled"]], "interacteverynode() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactEveryNode"]], "name (armi.bookkeeping.snapshotinterface.snapshotinterface attribute)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface.name"]], "armi.bookkeeping.tests": [[30, "module-armi.bookkeeping.tests"]], "testhistorytracker (class in armi.bookkeeping.tests.test_historytracker)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker"]], "testhistorytrackernomodel (class in armi.bookkeeping.tests.test_historytracker)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel"]], "armi.bookkeeping.tests.test_historytracker": [[31, "module-armi.bookkeeping.tests.test_historyTracker"]], "runtutorialnotebook() (in module armi.bookkeeping.tests.test_historytracker)": [[31, "armi.bookkeeping.tests.test_historyTracker.runTutorialNotebook"]], "test_blockname() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_blockName"]], "test_calcmgfluence() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_calcMGFluence"]], "test_getblockinassembly() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_getBlockInAssembly"]], "test_historyparameters() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyParameters"]], "test_historyreport() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyReport"]], "test_timestepfiltering() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFiltering"]], "test_timestepfilteringwithgap() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFilteringWithGap"]], "klasscountertests (class in armi.bookkeeping.tests.test_memoryprofiler)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests"]], "testmemoryprofiler (class in armi.bookkeeping.tests.test_memoryprofiler)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryprofiler": [[32, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "get_containers() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.get_containers"]], "test_checkforduplicateobjectsonarmimodel() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_checkForDuplicateObjectsOnArmiModel"]], "test_counthandlesrecursion() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_countHandlesRecursion"]], "test_displaymemoryusage() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_displayMemoryUsage"]], "test_expandcontainer() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_expandContainer"]], "test_fullbreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_fullBreakdown"]], "test_getreferrers() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_getReferrers"]], "test_printfullmemorybreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_printFullMemoryBreakdown"]], "test_profilememoryusageaction() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_profileMemoryUsageAction"]], "mockreactor (class in armi.bookkeeping.tests.test_snapshot)": [[33, "armi.bookkeeping.tests.test_snapshot.MockReactor"]], "mockreactorparams (class in armi.bookkeeping.tests.test_snapshot)": [[33, "armi.bookkeeping.tests.test_snapshot.MockReactorParams"]], "testsnapshotinterface (class in armi.bookkeeping.tests.test_snapshot)": [[33, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot": [[33, "module-armi.bookkeeping.tests.test_snapshot"]], "test_activeatedefaultsnapshots_17cycles5burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[33, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_17cycles5BurnSteps"]], "test_activeatedefaultsnapshots_30cycles2burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[33, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_30cycles2BurnSteps"]], "test_interactcoupled() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[33, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactCoupled"]], "test_interacteverynode() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[33, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactEveryNode"]], "armi.bookkeeping.visualization": [[34, "module-armi.bookkeeping.visualization"]], "visfiledumper (class in armi.bookkeeping.visualization.dumper)": [[35, "armi.bookkeeping.visualization.dumper.VisFileDumper"]], "armi.bookkeeping.visualization.dumper": [[35, "module-armi.bookkeeping.visualization.dumper"]], "dumpstate() (armi.bookkeeping.visualization.dumper.visfiledumper method)": [[35, "armi.bookkeeping.visualization.dumper.VisFileDumper.dumpState"]], "visfileentrypoint (class in armi.bookkeeping.visualization.entrypoint)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint"]], "addoptions() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.addOptions"]], "armi.bookkeeping.visualization.entrypoint": [[36, "module-armi.bookkeeping.visualization.entryPoint"]], "description (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.description"]], "invoke() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.invoke"]], "name (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.name"]], "parse() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.parse"]], "settingsargument (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.settingsArgument"]], "armi.bookkeeping.visualization.tests": [[37, "module-armi.bookkeeping.visualization.tests"]], "testvisdump (class in armi.bookkeeping.visualization.tests.test_vis)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump"]], "testvtkmesh (class in armi.bookkeeping.visualization.tests.test_vis)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis": [[38, "module-armi.bookkeeping.visualization.tests.test_vis"]], "test_cartesianmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_cartesianMesh"]], "test_dumpreactorvtk() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorVtk"]], "test_dumpreactorxdmf() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorXdmf"]], "test_hexmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_hexMesh"]], "test_testvtkmesh() (armi.bookkeeping.visualization.tests.test_vis.testvtkmesh method)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh.test_testVtkMesh"]], "testxdmf (class in armi.bookkeeping.visualization.tests.test_xdmf)": [[39, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[39, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "test_deduptimes() (armi.bookkeeping.visualization.tests.test_xdmf.testxdmf method)": [[39, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf.test_dedupTimes"]], "vtkmesh (class in armi.bookkeeping.visualization.utils)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh"]], "append() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.append"]], "armi.bookkeeping.visualization.utils": [[40, "module-armi.bookkeeping.visualization.utils"]], "createassemmesh() (in module armi.bookkeeping.visualization.utils)": [[40, "armi.bookkeeping.visualization.utils.createAssemMesh"]], "createblockmesh() (in module armi.bookkeeping.visualization.utils)": [[40, "armi.bookkeeping.visualization.utils.createBlockMesh"]], "createreactorassemmesh() (in module armi.bookkeeping.visualization.utils)": [[40, "armi.bookkeeping.visualization.utils.createReactorAssemMesh"]], "createreactorblockmesh() (in module armi.bookkeeping.visualization.utils)": [[40, "armi.bookkeeping.visualization.utils.createReactorBlockMesh"]], "empty() (armi.bookkeeping.visualization.utils.vtkmesh static method)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.empty"]], "write() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.write"]], "x (armi.bookkeeping.visualization.utils.vtkmesh property)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.x"]], "y (armi.bookkeeping.visualization.utils.vtkmesh property)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.y"]], "z (armi.bookkeeping.visualization.utils.vtkmesh property)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.z"]], "vtkdumper (class in armi.bookkeeping.visualization.vtk)": [[41, "armi.bookkeeping.visualization.vtk.VtkDumper"]], "armi.bookkeeping.visualization.vtk": [[41, "module-armi.bookkeeping.visualization.vtk"]], "dumpstate() (armi.bookkeeping.visualization.vtk.vtkdumper method)": [[41, "armi.bookkeeping.visualization.vtk.VtkDumper.dumpState"]], "xdmfdumper (class in armi.bookkeeping.visualization.xdmf)": [[42, "armi.bookkeeping.visualization.xdmf.XdmfDumper"]], "armi.bookkeeping.visualization.xdmf": [[42, "module-armi.bookkeeping.visualization.xdmf"]], "dumpstate() (armi.bookkeeping.visualization.xdmf.xdmfdumper method)": [[42, "armi.bookkeeping.visualization.xdmf.XdmfDumper.dumpState"]], "armi.cases": [[43, "module-armi.cases"]], "case (class in armi.cases.case)": [[44, "armi.cases.case.Case"]], "addexplicitdependency() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.addExplicitDependency"]], "armi.cases.case": [[44, "module-armi.cases.case"]], "bp (armi.cases.case.case property)": [[44, "armi.cases.case.Case.bp"]], "buildcommand() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.buildCommand"]], "checkinputs() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.checkInputs"]], "clone() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.clone"]], "compare() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.compare"]], "copyinterfaceinputs() (in module armi.cases.case)": [[44, "armi.cases.case.copyInterfaceInputs"]], "dbname (armi.cases.case.case property)": [[44, "armi.cases.case.Case.dbName"]], "dependencies (armi.cases.case.case property)": [[44, "armi.cases.case.Case.dependencies"]], "directory (armi.cases.case.case property)": [[44, "armi.cases.case.Case.directory"]], "geom (armi.cases.case.case property)": [[44, "armi.cases.case.Case.geom"]], "getpotentialparentfromsettingvalue() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.getPotentialParentFromSettingValue"]], "independentvariables (armi.cases.case.case property)": [[44, "armi.cases.case.Case.independentVariables"]], "initializeoperator() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.initializeOperator"]], "run() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.run"]], "setuptaskdependence() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.setUpTaskDependence"]], "summarizedesign() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.summarizeDesign"]], "title (armi.cases.case.case property)": [[44, "armi.cases.case.Case.title"]], "writeinputs() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.writeInputs"]], "armi.cases.inputmodifiers": [[45, "module-armi.cases.inputModifiers"]], "blueprintblockmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.BluePrintBlockModifier"]], "fail_if_after (armi.cases.inputmodifiers.inputmodifiers.inputmodifier attribute)": [[46, "armi.cases.inputModifiers.inputModifiers.InputModifier.FAIL_IF_AFTER"]], "fullcoremodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.FullCoreModifier"]], "inputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.InputModifier"]], "multisettingmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.MultiSettingModifier"]], "samplinginputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.SamplingInputModifier"]], "settingsmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.SettingsModifier"]], "armi.cases.inputmodifiers.inputmodifiers": [[46, "module-armi.cases.inputModifiers.inputModifiers"]], "neutronicconvergencemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[47, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicConvergenceModifier"]], "neutronicmeshssizemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[47, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicMeshsSizeModifier"]], "armi.cases.inputmodifiers.neutronicsmodifiers": [[47, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "cladthicknessbyidmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[48, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier"]], "cladthicknessbyodmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[48, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyidmodifier attribute)": [[48, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier.FAIL_IF_AFTER"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyodmodifier attribute)": [[48, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier.FAIL_IF_AFTER"]], "smeardensitymodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[48, "armi.cases.inputModifiers.pinTypeInputModifiers.SmearDensityModifier"]], "armi.cases.inputmodifiers.pintypeinputmodifiers": [[48, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputmodifiers.tests": [[49, "module-armi.cases.inputModifiers.tests"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom"]], "neutronicskernelopts (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.NeutronicsKernelOpts"]], "testfullcoremodifier (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier"]], "testsettingsmodifiers (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers"]], "testsuitebuilderintegrations (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations"]], "armi.cases.inputmodifiers.tests.test_inputmodifiers": [[50, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_inputmodifiers.mockgeom attribute)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom.geomType"]], "test_neutronicconvergencemodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsettingsmodifiers method)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers.test_NeutronicConvergenceModifier"]], "test_blueprintblockmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_bluePrintBlockModifier"]], "test_fullcoreconversion() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testfullcoremodifier method)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier.test_fullCoreConversion"]], "test_settingsmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_settingsModifier"]], "test_smeardensityfail() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_smearDensityFail"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom"]], "testblueprintmodifiers (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers"]], "armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers": [[51, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.mockgeom attribute)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom.geomType"]], "test_adjustsmeardensity() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_AdjustSmearDensity"]], "test_cladthickenessbyidmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByIDModifier"]], "test_cladthickenessbyodmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByODModifier"]], "casesuite (class in armi.cases.suite)": [[52, "armi.cases.suite.CaseSuite"]], "add() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.add"]], "armi.cases.suite": [[52, "module-armi.cases.suite"]], "clone() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.clone"]], "compare() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.compare"]], "discover() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.discover"]], "echoconfiguration() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.echoConfiguration"]], "remove() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.remove"]], "run() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.run"]], "writeinputs() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.writeInputs"]], "writetable() (armi.cases.suite.casesuite static method)": [[52, "armi.cases.suite.CaseSuite.writeTable"]], "fullfactorialsuitebuilder (class in armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder"]], "fullfactorialsuitebuildernoisy (class in armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy"]], "latinhypercubesuitebuilder (class in armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder"]], "separateeffectssuitebuilder (class in armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder"]], "suitebuilder (class in armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.SuiteBuilder"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuilder method)": [[53, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuildernoisy method)": [[53, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[53, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.separateeffectssuitebuilder method)": [[53, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.suitebuilder method)": [[53, "armi.cases.suiteBuilder.SuiteBuilder.addDegreeOfFreedom"]], "addmodifierset() (armi.cases.suitebuilder.suitebuilder method)": [[53, "armi.cases.suiteBuilder.SuiteBuilder.addModifierSet"]], "armi.cases.suitebuilder": [[53, "module-armi.cases.suiteBuilder"]], "buildsuite() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[53, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.buildSuite"]], "buildsuite() (armi.cases.suitebuilder.suitebuilder method)": [[53, "armi.cases.suiteBuilder.SuiteBuilder.buildSuite"]], "getinputmodifiers() (in module armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.getInputModifiers"]], "armi.cases.tests": [[54, "module-armi.cases.tests"]], "multifilesinterfaces (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.MultiFilesInterfaces"]], "testarmicase (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.TestArmiCase"]], "testcasesuitedependencies (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies"]], "testcopyinterfaceinputs (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs"]], "testextrainputwriting (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.TestExtraInputWriting"]], "testpluginforcopyinterfacesmultiplefiles (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles"]], "testpluginwithduplicatesetting (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting"]], "armi.cases.tests.test_cases": [[55, "module-armi.cases.tests.test_cases"]], "definesettings() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[55, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.defineSettings"]], "definesettings() (armi.cases.tests.test_cases.testpluginwithduplicatesetting static method)": [[55, "armi.cases.tests.test_cases.TestPluginWithDuplicateSetting.defineSettings"]], "exposeinterfaces() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[55, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.exposeInterfaces"]], "name (armi.cases.tests.test_cases.multifilesinterfaces attribute)": [[55, "armi.cases.tests.test_cases.MultiFilesInterfaces.name"]], "specifyinputs() (armi.cases.tests.test_cases.multifilesinterfaces static method)": [[55, "armi.cases.tests.test_cases.MultiFilesInterfaces.specifyInputs"]], "test_buildcommand() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_buildCommand"]], "test_checkinputs() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_checkInputs"]], "test_clone() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_clone"]], "test_clone() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_clone"]], "test_copyinputshelper() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInputsHelper"]], "test_copyinterfaceinputs_abspath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_absPath"]], "test_copyinterfaceinputs_multiplefiles() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_multipleFiles"]], "test_copyinterfaceinputs_nonfilepath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_nonFilePath"]], "test_copyinterfaceinputs_relpath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_relPath"]], "test_copyinterfaceinputs_singlefile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_singleFile"]], "test_copyinterfaceinputs_wildcardfile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_wildcardFile"]], "test_dependencieswithobscurepaths() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependenciesWithObscurePaths"]], "test_dependencyfromdbname() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromDBName"]], "test_dependencyfromexplictrepeatshuffles() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromExplictRepeatShuffles"]], "test_endcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_endCoverage"]], "test_endprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_endProfiling"]], "test_explicitdependency() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_explicitDependency"]], "test_failonduplicatesetting() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_failOnDuplicateSetting"]], "test_getcoveragercfile() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_getCoverageRcFile"]], "test_independentvariables() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_independentVariables"]], "test_run() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_run"]], "test_setuptaskdependence() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_setUpTaskDependence"]], "test_startcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_startCoverage"]], "test_startprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_startProfiling"]], "test_summarizedesign() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_summarizeDesign"]], "test_titlesettergetter() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_titleSetterGetter"]], "test_writeinput() (armi.cases.tests.test_cases.testextrainputwriting method)": [[55, "armi.cases.tests.test_cases.TestExtraInputWriting.test_writeInput"]], "latinhypercubemodifier (class in armi.cases.tests.test_suitebuilder)": [[56, "armi.cases.tests.test_suiteBuilder.LatinHyperCubeModifier"]], "settingmodifier (class in armi.cases.tests.test_suitebuilder)": [[56, "armi.cases.tests.test_suiteBuilder.SettingModifier"]], "testfullfactorialsuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[56, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder"]], "testlatinhypercubesuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[56, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder"]], "testseparateeffectsbuilder (class in armi.cases.tests.test_suitebuilder)": [[56, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder"]], "armi.cases.tests.test_suitebuilder": [[56, "module-armi.cases.tests.test_suiteBuilder"]], "test_adddegreeoffreedom() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[56, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_addDegreeOfFreedom"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testfullfactorialsuitebuilder method)": [[56, "armi.cases.tests.test_suiteBuilder.TestFullFactorialSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[56, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_buildSuite"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testseparateeffectsbuilder method)": [[56, "armi.cases.tests.test_suiteBuilder.TestSeparateEffectsBuilder.test_buildSuite"]], "test_initialize() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[56, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_initialize"]], "armicli (class in armi.cli)": [[57, "armi.cli.ArmiCLI"]], "armiparser (class in armi.cli)": [[57, "armi.cli.ArmiParser"]], "entrypointsplugin (class in armi.cli)": [[57, "armi.cli.EntryPointsPlugin"]], "armi.cli": [[57, "module-armi.cli"]], "defineentrypoints() (armi.cli.entrypointsplugin static method)": [[57, "armi.cli.EntryPointsPlugin.defineEntryPoints"]], "executecommand() (armi.cli.armicli method)": [[57, "armi.cli.ArmiCLI.executeCommand"]], "listcommands() (armi.cli.armicli method)": [[57, "armi.cli.ArmiCLI.listCommands"]], "print_help() (armi.cli.armiparser method)": [[57, "armi.cli.ArmiParser.print_help"]], "run() (armi.cli.armicli method)": [[57, "armi.cli.ArmiCLI.run"]], "showversion() (armi.cli.armicli static method)": [[57, "armi.cli.ArmiCLI.showVersion"]], "splash() (in module armi.cli)": [[57, "armi.cli.splash"]], "checkinputentrypoint (class in armi.cli.checkinputs)": [[58, "armi.cli.checkInputs.CheckInputEntryPoint"]], "expandblueprints (class in armi.cli.checkinputs)": [[58, "armi.cli.checkInputs.ExpandBlueprints"]], "addoptions() (armi.cli.checkinputs.checkinputentrypoint method)": [[58, "armi.cli.checkInputs.CheckInputEntryPoint.addOptions"]], "addoptions() (armi.cli.checkinputs.expandblueprints method)": [[58, "armi.cli.checkInputs.ExpandBlueprints.addOptions"]], "armi.cli.checkinputs": [[58, "module-armi.cli.checkInputs"]], "invoke() (armi.cli.checkinputs.checkinputentrypoint method)": [[58, "armi.cli.checkInputs.CheckInputEntryPoint.invoke"]], "invoke() (armi.cli.checkinputs.expandblueprints method)": [[58, "armi.cli.checkInputs.ExpandBlueprints.invoke"]], "name (armi.cli.checkinputs.checkinputentrypoint attribute)": [[58, "armi.cli.checkInputs.CheckInputEntryPoint.name"]], "name (armi.cli.checkinputs.expandblueprints attribute)": [[58, "armi.cli.checkInputs.ExpandBlueprints.name"]], "settingsargument (armi.cli.checkinputs.checkinputentrypoint attribute)": [[58, "armi.cli.checkInputs.CheckInputEntryPoint.settingsArgument"]], "settingsargument (armi.cli.checkinputs.expandblueprints attribute)": [[58, "armi.cli.checkInputs.ExpandBlueprints.settingsArgument"]], "splash (armi.cli.checkinputs.expandblueprints attribute)": [[58, "armi.cli.checkInputs.ExpandBlueprints.splash"]], "cleantemps (class in armi.cli.cleantemps)": [[59, "armi.cli.cleanTemps.CleanTemps"]], "armi.cli.cleantemps": [[59, "module-armi.cli.cleanTemps"]], "invoke() (armi.cli.cleantemps.cleantemps method)": [[59, "armi.cli.cleanTemps.CleanTemps.invoke"]], "name (armi.cli.cleantemps.cleantemps attribute)": [[59, "armi.cli.cleanTemps.CleanTemps.name"]], "settingsargument (armi.cli.cleantemps.cleantemps attribute)": [[59, "armi.cli.cleanTemps.CleanTemps.settingsArgument"]], "clonearmiruncommandbatch (class in armi.cli.clone)": [[60, "armi.cli.clone.CloneArmiRunCommandBatch"]], "clonearmiruncommandinteractive (class in armi.cli.clone)": [[60, "armi.cli.clone.CloneArmiRunCommandInteractive"]], "clonesuitecommand (class in armi.cli.clone)": [[60, "armi.cli.clone.CloneSuiteCommand"]], "addoptions() (armi.cli.clone.clonearmiruncommandbatch method)": [[60, "armi.cli.clone.CloneArmiRunCommandBatch.addOptions"]], "addoptions() (armi.cli.clone.clonesuitecommand method)": [[60, "armi.cli.clone.CloneSuiteCommand.addOptions"]], "armi.cli.clone": [[60, "module-armi.cli.clone"]], "invoke() (armi.cli.clone.clonearmiruncommandbatch method)": [[60, "armi.cli.clone.CloneArmiRunCommandBatch.invoke"]], "invoke() (armi.cli.clone.clonesuitecommand method)": [[60, "armi.cli.clone.CloneSuiteCommand.invoke"]], "name (armi.cli.clone.clonearmiruncommandbatch attribute)": [[60, "armi.cli.clone.CloneArmiRunCommandBatch.name"]], "name (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[60, "armi.cli.clone.CloneArmiRunCommandInteractive.name"]], "name (armi.cli.clone.clonesuitecommand attribute)": [[60, "armi.cli.clone.CloneSuiteCommand.name"]], "settingsargument (armi.cli.clone.clonearmiruncommandbatch attribute)": [[60, "armi.cli.clone.CloneArmiRunCommandBatch.settingsArgument"]], "settingsargument (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[60, "armi.cli.clone.CloneArmiRunCommandInteractive.settingsArgument"]], "settingsargument (armi.cli.clone.clonesuitecommand attribute)": [[60, "armi.cli.clone.CloneSuiteCommand.settingsArgument"]], "comparecases (class in armi.cli.comparecases)": [[61, "armi.cli.compareCases.CompareCases"]], "comparesuites (class in armi.cli.comparecases)": [[61, "armi.cli.compareCases.CompareSuites"]], "addoptions() (armi.cli.comparecases.comparecases method)": [[61, "armi.cli.compareCases.CompareCases.addOptions"]], "addoptions() (armi.cli.comparecases.comparesuites method)": [[61, "armi.cli.compareCases.CompareSuites.addOptions"]], "armi.cli.comparecases": [[61, "module-armi.cli.compareCases"]], "invoke() (armi.cli.comparecases.comparecases method)": [[61, "armi.cli.compareCases.CompareCases.invoke"]], "invoke() (armi.cli.comparecases.comparesuites method)": [[61, "armi.cli.compareCases.CompareSuites.invoke"]], "name (armi.cli.comparecases.comparecases attribute)": [[61, "armi.cli.compareCases.CompareCases.name"]], "name (armi.cli.comparecases.comparesuites attribute)": [[61, "armi.cli.compareCases.CompareSuites.name"]], "parse() (armi.cli.comparecases.comparecases method)": [[61, "armi.cli.compareCases.CompareCases.parse"]], "settingsargument (armi.cli.comparecases.comparecases attribute)": [[61, "armi.cli.compareCases.CompareCases.settingsArgument"]], "settingsargument (armi.cli.comparecases.comparesuites attribute)": [[61, "armi.cli.compareCases.CompareSuites.settingsArgument"]], "convertdb (class in armi.cli.database)": [[62, "armi.cli.database.ConvertDB"]], "extractinputs (class in armi.cli.database)": [[62, "armi.cli.database.ExtractInputs"]], "injectinputs (class in armi.cli.database)": [[62, "armi.cli.database.InjectInputs"]], "addoptions() (armi.cli.database.convertdb method)": [[62, "armi.cli.database.ConvertDB.addOptions"]], "addoptions() (armi.cli.database.extractinputs method)": [[62, "armi.cli.database.ExtractInputs.addOptions"]], "addoptions() (armi.cli.database.injectinputs method)": [[62, "armi.cli.database.InjectInputs.addOptions"]], "armi.cli.database": [[62, "module-armi.cli.database"]], "invoke() (armi.cli.database.convertdb method)": [[62, "armi.cli.database.ConvertDB.invoke"]], "invoke() (armi.cli.database.extractinputs method)": [[62, "armi.cli.database.ExtractInputs.invoke"]], "invoke() (armi.cli.database.injectinputs method)": [[62, "armi.cli.database.InjectInputs.invoke"]], "mode (armi.cli.database.convertdb attribute)": [[62, "armi.cli.database.ConvertDB.mode"]], "mode (armi.cli.database.extractinputs attribute)": [[62, "armi.cli.database.ExtractInputs.mode"]], "mode (armi.cli.database.injectinputs attribute)": [[62, "armi.cli.database.InjectInputs.mode"]], "name (armi.cli.database.convertdb attribute)": [[62, "armi.cli.database.ConvertDB.name"]], "name (armi.cli.database.extractinputs attribute)": [[62, "armi.cli.database.ExtractInputs.name"]], "name (armi.cli.database.injectinputs attribute)": [[62, "armi.cli.database.InjectInputs.name"]], "parse_args() (armi.cli.database.convertdb method)": [[62, "armi.cli.database.ConvertDB.parse_args"]], "parse_args() (armi.cli.database.extractinputs method)": [[62, "armi.cli.database.ExtractInputs.parse_args"]], "settingsargument (armi.cli.database.convertdb attribute)": [[62, "armi.cli.database.ConvertDB.settingsArgument"]], "settingsargument (armi.cli.database.extractinputs attribute)": [[62, "armi.cli.database.ExtractInputs.settingsArgument"]], "settingsargument (armi.cli.database.injectinputs attribute)": [[62, "armi.cli.database.InjectInputs.settingsArgument"]], "entrypoint (class in armi.cli.entrypoint)": [[63, "armi.cli.entryPoint.EntryPoint"]], "addoptions() (armi.cli.entrypoint.entrypoint method)": [[63, "armi.cli.entryPoint.EntryPoint.addOptions"]], "armi.cli.entrypoint": [[63, "module-armi.cli.entryPoint"]], "createoptionfromsetting() (armi.cli.entrypoint.entrypoint method)": [[63, "armi.cli.entryPoint.EntryPoint.createOptionFromSetting"]], "description (armi.cli.entrypoint.entrypoint attribute)": [[63, "armi.cli.entryPoint.EntryPoint.description"]], "invoke() (armi.cli.entrypoint.entrypoint method)": [[63, "armi.cli.entryPoint.EntryPoint.invoke"]], "loadsettings() (in module armi.cli.entrypoint)": [[63, "armi.cli.entryPoint.loadSettings"]], "mode (armi.cli.entrypoint.entrypoint attribute)": [[63, "armi.cli.entryPoint.EntryPoint.mode"]], "name (armi.cli.entrypoint.entrypoint attribute)": [[63, "armi.cli.entryPoint.EntryPoint.name"]], "parse() (armi.cli.entrypoint.entrypoint method)": [[63, "armi.cli.entryPoint.EntryPoint.parse"]], "parse_args() (armi.cli.entrypoint.entrypoint method)": [[63, "armi.cli.entryPoint.EntryPoint.parse_args"]], "setcasetitle() (in module armi.cli.entrypoint)": [[63, "armi.cli.entryPoint.setCaseTitle"]], "setsetting() (in module armi.cli.entrypoint)": [[63, "armi.cli.entryPoint.setSetting"]], "settingsargument (armi.cli.entrypoint.entrypoint attribute)": [[63, "armi.cli.entryPoint.EntryPoint.settingsArgument"]], "splash (armi.cli.entrypoint.entrypoint attribute)": [[63, "armi.cli.entryPoint.EntryPoint.splash"]], "storebool() (in module armi.cli.entrypoint)": [[63, "armi.cli.entryPoint.storeBool"]], "gridguientrypoint (class in armi.cli.gridgui)": [[64, "armi.cli.gridGui.GridGuiEntryPoint"]], "addoptions() (armi.cli.gridgui.gridguientrypoint method)": [[64, "armi.cli.gridGui.GridGuiEntryPoint.addOptions"]], "armi.cli.gridgui": [[64, "module-armi.cli.gridGui"]], "invoke() (armi.cli.gridgui.gridguientrypoint method)": [[64, "armi.cli.gridGui.GridGuiEntryPoint.invoke"]], "name (armi.cli.gridgui.gridguientrypoint attribute)": [[64, "armi.cli.gridGui.GridGuiEntryPoint.name"]], "settingsargument (armi.cli.gridgui.gridguientrypoint attribute)": [[64, "armi.cli.gridGui.GridGuiEntryPoint.settingsArgument"]], "migrateinputs (class in armi.cli.migrateinputs)": [[65, "armi.cli.migrateInputs.MigrateInputs"]], "addoptions() (armi.cli.migrateinputs.migrateinputs method)": [[65, "armi.cli.migrateInputs.MigrateInputs.addOptions"]], "armi.cli.migrateinputs": [[65, "module-armi.cli.migrateInputs"]], "invoke() (armi.cli.migrateinputs.migrateinputs method)": [[65, "armi.cli.migrateInputs.MigrateInputs.invoke"]], "name (armi.cli.migrateinputs.migrateinputs attribute)": [[65, "armi.cli.migrateInputs.MigrateInputs.name"]], "settingsargument (armi.cli.migrateinputs.migrateinputs attribute)": [[65, "armi.cli.migrateInputs.MigrateInputs.settingsArgument"]], "modifycasesettingscommand (class in armi.cli.modify)": [[66, "armi.cli.modify.ModifyCaseSettingsCommand"]], "addoptions() (armi.cli.modify.modifycasesettingscommand method)": [[66, "armi.cli.modify.ModifyCaseSettingsCommand.addOptions"]], "armi.cli.modify": [[66, "module-armi.cli.modify"]], "invoke() (armi.cli.modify.modifycasesettingscommand method)": [[66, "armi.cli.modify.ModifyCaseSettingsCommand.invoke"]], "name (armi.cli.modify.modifycasesettingscommand attribute)": [[66, "armi.cli.modify.ModifyCaseSettingsCommand.name"]], "settingsargument (armi.cli.modify.modifycasesettingscommand attribute)": [[66, "armi.cli.modify.ModifyCaseSettingsCommand.settingsArgument"]], "reportsentrypoint (class in armi.cli.reportsentrypoint)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint"]], "addoptions() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint.addOptions"]], "armi.cli.reportsentrypoint": [[67, "module-armi.cli.reportsEntryPoint"]], "createreportfromsettings() (in module armi.cli.reportsentrypoint)": [[67, "armi.cli.reportsEntryPoint.createReportFromSettings"]], "description (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint.description"]], "invoke() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint.invoke"]], "name (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint.name"]], "settingsargument (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint.settingsArgument"]], "runentrypoint (class in armi.cli.run)": [[68, "armi.cli.run.RunEntryPoint"]], "addoptions() (armi.cli.run.runentrypoint method)": [[68, "armi.cli.run.RunEntryPoint.addOptions"]], "armi.cli.run": [[68, "module-armi.cli.run"]], "invoke() (armi.cli.run.runentrypoint method)": [[68, "armi.cli.run.RunEntryPoint.invoke"]], "name (armi.cli.run.runentrypoint attribute)": [[68, "armi.cli.run.RunEntryPoint.name"]], "settingsargument (armi.cli.run.runentrypoint attribute)": [[68, "armi.cli.run.RunEntryPoint.settingsArgument"]], "runsuitecommand (class in armi.cli.runsuite)": [[69, "armi.cli.runSuite.RunSuiteCommand"]], "addoptions() (armi.cli.runsuite.runsuitecommand method)": [[69, "armi.cli.runSuite.RunSuiteCommand.addOptions"]], "armi.cli.runsuite": [[69, "module-armi.cli.runSuite"]], "invoke() (armi.cli.runsuite.runsuitecommand method)": [[69, "armi.cli.runSuite.RunSuiteCommand.invoke"]], "name (armi.cli.runsuite.runsuitecommand attribute)": [[69, "armi.cli.runSuite.RunSuiteCommand.name"]], "settingsargument (armi.cli.runsuite.runsuitecommand attribute)": [[69, "armi.cli.runSuite.RunSuiteCommand.settingsArgument"]], "armi.cli.tests": [[70, "module-armi.cli.tests"]], "testcheckinputentrypoint (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint"]], "testclonearmiruncommandbatch (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch"]], "testclonesuitecommand (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand"]], "testcomparecases (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareCases"]], "testcompareisotxslibsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint"]], "testcomparesuites (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareSuites"]], "testconvertdb (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestConvertDB"]], "testexpandblueprints (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints"]], "testextractinputs (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestExtractInputs"]], "testinitializationentrypoints (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints"]], "testinjectinputs (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestInjectInputs"]], "testmigrateinputs (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs"]], "testmodifycasesettingscommand (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand"]], "testreportsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint"]], "testrunentrypoint (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint"]], "testrunsuitecommand (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand"]], "testvisfileentrypointcommand (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand"]], "armi.cli.tests.test_runentrypoint": [[71, "module-armi.cli.tests.test_runEntryPoint"]], "test_checkinputentrypointbasics() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointBasics"]], "test_checkinputentrypointinvoke() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointInvoke"]], "test_clonearmiruncommandbatchbasics() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchBasics"]], "test_clonearmiruncommandbatchinvokemedium() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeMedium"]], "test_clonearmiruncommandbatchinvokeshort() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeShort"]], "test_clonesuitecommandbasics() (armi.cli.tests.test_runentrypoint.testclonesuitecommand method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand.test_cloneSuiteCommandBasics"]], "test_comparecasesbasics() (armi.cli.tests.test_runentrypoint.testcomparecases method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareCases.test_compareCasesBasics"]], "test_compareisotxslibsbasics() (armi.cli.tests.test_runentrypoint.testcompareisotxslibsentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint.test_compareIsotxsLibsBasics"]], "test_comparesuitesbasics() (armi.cli.tests.test_runentrypoint.testcomparesuites method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareSuites.test_compareSuitesBasics"]], "test_convertdbbasics() (armi.cli.tests.test_runentrypoint.testconvertdb method)": [[71, "armi.cli.tests.test_runEntryPoint.TestConvertDB.test_convertDbBasics"]], "test_convertdboutputnodes() (armi.cli.tests.test_runentrypoint.testconvertdb method)": [[71, "armi.cli.tests.test_runEntryPoint.TestConvertDB.test_convertDbOutputNodes"]], "test_convertdboutputversion() (armi.cli.tests.test_runentrypoint.testconvertdb method)": [[71, "armi.cli.tests.test_runEntryPoint.TestConvertDB.test_convertDbOutputVersion"]], "test_entrypointinitialization() (armi.cli.tests.test_runentrypoint.testinitializationentrypoints method)": [[71, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints.test_entryPointInitialization"]], "test_executecommand() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_executeCommand"]], "test_expandblueprintsbasics() (armi.cli.tests.test_runentrypoint.testexpandblueprints method)": [[71, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints.test_expandBlueprintsBasics"]], "test_extractinputsbasics() (armi.cli.tests.test_runentrypoint.testextractinputs method)": [[71, "armi.cli.tests.test_runEntryPoint.TestExtractInputs.test_extractInputsBasics"]], "test_injectinputsbasics() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[71, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsBasics"]], "test_injectinputsinvokeignore() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[71, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeIgnore"]], "test_injectinputsinvokenodata() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[71, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeNoData"]], "test_migrateinputsbasics() (armi.cli.tests.test_runentrypoint.testmigrateinputs method)": [[71, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs.test_migrateInputsBasics"]], "test_modifycasesettingscommandbasics() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[71, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandBasics"]], "test_modifycasesettingscommandinvoke() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[71, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandInvoke"]], "test_reportsentrypointbasics() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_reportsEntryPointBasics"]], "test_runcommandhelp() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runCommandHelp"]], "test_runentrypointbasics() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runEntryPointBasics"]], "test_runsuitecommandbasics() (armi.cli.tests.test_runentrypoint.testrunsuitecommand method)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand.test_runSuiteCommandBasics"]], "test_visfileentrypointbasics() (armi.cli.tests.test_runentrypoint.testvisfileentrypointcommand method)": [[71, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand.test_visFileEntryPointBasics"]], "testrunsuitesuite (class in armi.cli.tests.test_runsuite)": [[72, "armi.cli.tests.test_runSuite.TestRunSuiteSuite"]], "armi.cli.tests.test_runsuite": [[72, "module-armi.cli.tests.test_runSuite"]], "test_listcommand() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[72, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_listCommand"]], "test_run() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[72, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_run"]], "test_showversion() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[72, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_showVersion"]], "armi.conftest": [[73, "module-armi.conftest"]], "bootstraparmitestenv() (in module armi.conftest)": [[73, "armi.conftest.bootstrapArmiTestEnv"]], "pytest_sessionstart() (in module armi.conftest)": [[73, "armi.conftest.pytest_sessionstart"]], "batch (armi.context.mode attribute)": [[74, "armi.context.Mode.BATCH"]], "gui (armi.context.mode attribute)": [[74, "armi.context.Mode.GUI"]], "interactive (armi.context.mode attribute)": [[74, "armi.context.Mode.INTERACTIVE"]], "mode (class in armi.context)": [[74, "armi.context.Mode"]], "activatelocalfastpath() (in module armi.context)": [[74, "armi.context.activateLocalFastPath"]], "armi.context": [[74, "module-armi.context"]], "cleanallarmitempdirs() (in module armi.context)": [[74, "armi.context.cleanAllArmiTempDirs"]], "cleantempdirs() (in module armi.context)": [[74, "armi.context.cleanTempDirs"]], "disconnectallhdfdbs() (in module armi.context)": [[74, "armi.context.disconnectAllHdfDBs"]], "getfastpath() (in module armi.context)": [[74, "armi.context.getFastPath"]], "setmode() (armi.context.mode class method)": [[74, "armi.context.Mode.setMode"]], "after (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.AFTER"]], "before (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.BEFORE"]], "bookkeeping (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.BOOKKEEPING"]], "critical_control (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.CRITICAL_CONTROL"]], "cross_sections (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.CROSS_SECTIONS"]], "depletion (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.DEPLETION"]], "duplicate (armi.interfaces.interface.distribute attribute)": [[75, "armi.interfaces.Interface.Distribute.DUPLICATE"]], "flux (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.FLUX"]], "fuel_management (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.FUEL_MANAGEMENT"]], "fuel_performance (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.FUEL_PERFORMANCE"]], "inputwriter (class in armi.interfaces)": [[75, "armi.interfaces.InputWriter"]], "interface (class in armi.interfaces)": [[75, "armi.interfaces.Interface"]], "interface.distribute (class in armi.interfaces)": [[75, "armi.interfaces.Interface.Distribute"]], "interfaceinfo (class in armi.interfaces)": [[75, "armi.interfaces.InterfaceInfo"]], "new (armi.interfaces.interface.distribute attribute)": [[75, "armi.interfaces.Interface.Distribute.NEW"]], "outputreader (class in armi.interfaces)": [[75, "armi.interfaces.OutputReader"]], "postprocessing (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.POSTPROCESSING"]], "preprocessing (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.PREPROCESSING"]], "reactivity_coeffs (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.REACTIVITY_COEFFS"]], "skip (armi.interfaces.interface.distribute attribute)": [[75, "armi.interfaces.Interface.Distribute.SKIP"]], "stack_order (class in armi.interfaces)": [[75, "armi.interfaces.STACK_ORDER"]], "thermal_hydraulics (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.THERMAL_HYDRAULICS"]], "transient (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.TRANSIENT"]], "tightcoupler (class in armi.interfaces)": [[75, "armi.interfaces.TightCoupler"]], "apply() (armi.interfaces.outputreader method)": [[75, "armi.interfaces.OutputReader.apply"]], "armi.interfaces": [[75, "module-armi.interfaces"]], "attachreactor() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.attachReactor"]], "bolforce() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.bolForce"]], "detachreactor() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.detachReactor"]], "distributable() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.distributable"]], "duplicate() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.duplicate"]], "enabled() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.enabled"]], "function (armi.interfaces.interface attribute)": [[75, "armi.interfaces.Interface.function"]], "getactiveinterfaceinfo() (in module armi.interfaces)": [[75, "armi.interfaces.getActiveInterfaceInfo"]], "getdependencies() (armi.interfaces.interface class method)": [[75, "armi.interfaces.Interface.getDependencies"]], "gethistoryparams() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.getHistoryParams"]], "getinputfiles() (armi.interfaces.interface class method)": [[75, "armi.interfaces.Interface.getInputFiles"]], "getinterface() (armi.interfaces.inputwriter method)": [[75, "armi.interfaces.InputWriter.getInterface"]], "getinterface() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.getInterface"]], "getinterface() (armi.interfaces.outputreader method)": [[75, "armi.interfaces.OutputReader.getInterface"]], "getlistdimension() (armi.interfaces.tightcoupler static method)": [[75, "armi.interfaces.TightCoupler.getListDimension"]], "gettightcouplingvalue() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.getTightCouplingValue"]], "interactboc() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactBOC"]], "interactbol() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactBOL"]], "interactcoupled() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactCoupled"]], "interactdistributestate() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactDistributeState"]], "interacteoc() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactEOC"]], "interacteol() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactEOL"]], "interacterror() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactError"]], "interacteverynode() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactEveryNode"]], "interactinit() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactInit"]], "interfacecls (armi.interfaces.interfaceinfo attribute)": [[75, "armi.interfaces.InterfaceInfo.interfaceCls"]], "isconverged() (armi.interfaces.tightcoupler method)": [[75, "armi.interfaces.TightCoupler.isConverged"]], "isinterfaceactive() (in module armi.interfaces)": [[75, "armi.interfaces.isInterfaceActive"]], "isrequesteddetailpoint() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.isRequestedDetailPoint"]], "kwargs (armi.interfaces.interfaceinfo attribute)": [[75, "armi.interfaces.InterfaceInfo.kwargs"]], "name (armi.interfaces.interface attribute)": [[75, "armi.interfaces.Interface.name"]], "namecontains() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.nameContains"]], "order (armi.interfaces.interfaceinfo attribute)": [[75, "armi.interfaces.InterfaceInfo.order"]], "postdistributestate() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.postDistributeState"]], "predistributestate() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.preDistributeState"]], "read() (armi.interfaces.outputreader method)": [[75, "armi.interfaces.OutputReader.read"]], "readoutput() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.readOutput"]], "specifyinputs() (armi.interfaces.interface static method)": [[75, "armi.interfaces.Interface.specifyInputs"]], "storepreviousiterationvalue() (armi.interfaces.tightcoupler method)": [[75, "armi.interfaces.TightCoupler.storePreviousIterationValue"]], "updatephysicscouplingcontrol() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.updatePhysicsCouplingControl"]], "workeroperate() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.workerOperate"]], "write() (armi.interfaces.inputwriter method)": [[75, "armi.interfaces.InputWriter.write"]], "writeinput() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.writeInput"]], "armi.materials": [[76, "module-armi.materials"]], "importmaterialsintomodulenamespace() (in module armi.materials)": [[76, "armi.materials.importMaterialsIntoModuleNamespace"]], "iterallmaterialclassesinnamespace() (in module armi.materials)": [[76, "armi.materials.iterAllMaterialClassesInNamespace"]], "resolvematerialclassbyname() (in module armi.materials)": [[76, "armi.materials.resolveMaterialClassByName"]], "setmaterialnamespaceorder() (in module armi.materials)": [[76, "armi.materials.setMaterialNamespaceOrder"]], "air (class in armi.materials.air)": [[77, "armi.materials.air.Air"]], "armi.materials.air": [[77, "module-armi.materials.air"]], "heatcapacity() (armi.materials.air.air method)": [[77, "armi.materials.air.Air.heatCapacity"]], "propertyvalidtemperature (armi.materials.air.air attribute)": [[77, "armi.materials.air.Air.propertyValidTemperature"]], "pseudodensity() (armi.materials.air.air method)": [[77, "armi.materials.air.Air.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.air.air method)": [[77, "armi.materials.air.Air.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.air.air method)": [[77, "armi.materials.air.Air.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.air.air method)": [[77, "armi.materials.air.Air.thermalConductivity"]], "alloy200 (class in armi.materials.alloy200)": [[78, "armi.materials.alloy200.Alloy200"]], "armi.materials.alloy200": [[78, "module-armi.materials.alloy200"]], "linearexpansion() (armi.materials.alloy200.alloy200 method)": [[78, "armi.materials.alloy200.Alloy200.linearExpansion"]], "linearexpansiontable (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.linearExpansionTable"]], "linearexpansiontablek (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.linearExpansionTableK"]], "modelconst (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.modelConst"]], "propertyvalidtemperature (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.propertyValidTemperature"]], "referencemaxpercentimpurites (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.referenceMaxPercentImpurites"]], "references (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.references"]], "setdefaultmassfracs() (armi.materials.alloy200.alloy200 method)": [[78, "armi.materials.alloy200.Alloy200.setDefaultMassFracs"]], "b4c (class in armi.materials.b4c)": [[79, "armi.materials.b4c.B4C"]], "applyinputparams() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.applyInputParams"]], "armi.materials.b4c": [[79, "module-armi.materials.b4c"]], "density() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.density"]], "enrichednuclide (armi.materials.b4c.b4c attribute)": [[79, "armi.materials.b4c.B4C.enrichedNuclide"]], "getmassenrichmentfromnumenrich() (armi.materials.b4c.b4c static method)": [[79, "armi.materials.b4c.B4C.getMassEnrichmentFromNumEnrich"]], "linearexpansionpercent() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.b4c.b4c attribute)": [[79, "armi.materials.b4c.B4C.propertyValidTemperature"]], "pseudodensity() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.setDefaultMassFracs"]], "setnewmassfracsfrommassenrich() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.setNewMassFracsFromMassEnrich"]], "updatetd() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.updateTD"]], "be9 (class in armi.materials.be9)": [[80, "armi.materials.be9.Be9"]], "armi.materials.be9": [[80, "module-armi.materials.be9"]], "linearexpansionpercent() (armi.materials.be9.be9 method)": [[80, "armi.materials.be9.Be9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.be9.be9 attribute)": [[80, "armi.materials.be9.Be9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.be9.be9 method)": [[80, "armi.materials.be9.Be9.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.be9.be9 attribute)": [[80, "armi.materials.be9.Be9.thermalScatteringLaws"]], "cah2 (class in armi.materials.cah2)": [[81, "armi.materials.caH2.CaH2"]], "armi.materials.cah2": [[81, "module-armi.materials.caH2"]], "density() (armi.materials.cah2.cah2 method)": [[81, "armi.materials.caH2.CaH2.density"]], "setdefaultmassfracs() (armi.materials.cah2.cah2 method)": [[81, "armi.materials.caH2.CaH2.setDefaultMassFracs"]], "californium (class in armi.materials.californium)": [[82, "armi.materials.californium.Californium"]], "armi.materials.californium": [[82, "module-armi.materials.californium"]], "density() (armi.materials.californium.californium method)": [[82, "armi.materials.californium.Californium.density"]], "setdefaultmassfracs() (armi.materials.californium.californium method)": [[82, "armi.materials.californium.Californium.setDefaultMassFracs"]], "concrete (class in armi.materials.concrete)": [[83, "armi.materials.concrete.Concrete"]], "armi.materials.concrete": [[83, "module-armi.materials.concrete"]], "density() (armi.materials.concrete.concrete method)": [[83, "armi.materials.concrete.Concrete.density"]], "setdefaultmassfracs() (armi.materials.concrete.concrete method)": [[83, "armi.materials.concrete.Concrete.setDefaultMassFracs"]], "cu (class in armi.materials.copper)": [[84, "armi.materials.copper.Cu"]], "armi.materials.copper": [[84, "module-armi.materials.copper"]], "density() (armi.materials.copper.cu method)": [[84, "armi.materials.copper.Cu.density"]], "linearexpansionpercent() (armi.materials.copper.cu method)": [[84, "armi.materials.copper.Cu.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.copper.cu attribute)": [[84, "armi.materials.copper.Cu.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.copper.cu method)": [[84, "armi.materials.copper.Cu.setDefaultMassFracs"]], "cs (class in armi.materials.cs)": [[85, "armi.materials.cs.Cs"]], "armi.materials.cs": [[85, "module-armi.materials.cs"]], "meltingpoint() (armi.materials.cs.cs method)": [[85, "armi.materials.cs.Cs.meltingPoint"]], "pseudodensity() (armi.materials.cs.cs method)": [[85, "armi.materials.cs.Cs.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.cs.cs method)": [[85, "armi.materials.cs.Cs.setDefaultMassFracs"]], "custom (class in armi.materials.custom)": [[86, "armi.materials.custom.Custom"]], "armi.materials.custom": [[86, "module-armi.materials.custom"]], "enrichednuclide (armi.materials.custom.custom attribute)": [[86, "armi.materials.custom.Custom.enrichedNuclide"]], "pseudodensity() (armi.materials.custom.custom method)": [[86, "armi.materials.custom.Custom.pseudoDensity"]], "setmassfrac() (armi.materials.custom.custom method)": [[86, "armi.materials.custom.Custom.setMassFrac"]], "graphite (class in armi.materials.graphite)": [[87, "armi.materials.graphite.Graphite"]], "armi.materials.graphite": [[87, "module-armi.materials.graphite"]], "linearexpansionpercent() (armi.materials.graphite.graphite method)": [[87, "armi.materials.graphite.Graphite.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.graphite.graphite method)": [[87, "armi.materials.graphite.Graphite.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.graphite.graphite attribute)": [[87, "armi.materials.graphite.Graphite.thermalScatteringLaws"]], "hafnium (class in armi.materials.hafnium)": [[88, "armi.materials.hafnium.Hafnium"]], "armi.materials.hafnium": [[88, "module-armi.materials.hafnium"]], "density() (armi.materials.hafnium.hafnium method)": [[88, "armi.materials.hafnium.Hafnium.density"]], "setdefaultmassfracs() (armi.materials.hafnium.hafnium method)": [[88, "armi.materials.hafnium.Hafnium.setDefaultMassFracs"]], "hastelloyn (class in armi.materials.hastelloyn)": [[89, "armi.materials.hastelloyN.HastelloyN"]], "armi.materials.hastelloyn": [[89, "module-armi.materials.hastelloyN"]], "heatcapacity() (armi.materials.hastelloyn.hastelloyn method)": [[89, "armi.materials.hastelloyN.HastelloyN.heatCapacity"]], "linearexpansionpercent() (armi.materials.hastelloyn.hastelloyn method)": [[89, "armi.materials.hastelloyN.HastelloyN.linearExpansionPercent"]], "materialintro (armi.materials.hastelloyn.hastelloyn attribute)": [[89, "armi.materials.hastelloyN.HastelloyN.materialIntro"]], "meancoefficientthermalexpansion() (armi.materials.hastelloyn.hastelloyn method)": [[89, "armi.materials.hastelloyN.HastelloyN.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.hastelloyn.hastelloyn attribute)": [[89, "armi.materials.hastelloyN.HastelloyN.propertyValidTemperature"]], "reftempk (armi.materials.hastelloyn.hastelloyn attribute)": [[89, "armi.materials.hastelloyN.HastelloyN.refTempK"]], "setdefaultmassfracs() (armi.materials.hastelloyn.hastelloyn method)": [[89, "armi.materials.hastelloyN.HastelloyN.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.hastelloyn.hastelloyn method)": [[89, "armi.materials.hastelloyN.HastelloyN.thermalConductivity"]], "ht9 (class in armi.materials.ht9)": [[90, "armi.materials.ht9.HT9"]], "armi.materials.ht9": [[90, "module-armi.materials.ht9"]], "linearexpansionpercent() (armi.materials.ht9.ht9 method)": [[90, "armi.materials.ht9.HT9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.ht9.ht9 attribute)": [[90, "armi.materials.ht9.HT9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.ht9.ht9 method)": [[90, "armi.materials.ht9.HT9.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.ht9.ht9 method)": [[90, "armi.materials.ht9.HT9.thermalConductivity"]], "inconel (class in armi.materials.inconel)": [[91, "armi.materials.inconel.Inconel"]], "inconel617 (class in armi.materials.inconel)": [[91, "armi.materials.inconel.Inconel617"]], "armi.materials.inconel": [[91, "module-armi.materials.inconel"]], "density() (armi.materials.inconel.inconel method)": [[91, "armi.materials.inconel.Inconel.density"]], "references (armi.materials.inconel.inconel attribute)": [[91, "armi.materials.inconel.Inconel.references"]], "setdefaultmassfracs() (armi.materials.inconel.inconel method)": [[91, "armi.materials.inconel.Inconel.setDefaultMassFracs"]], "inconel600 (class in armi.materials.inconel600)": [[92, "armi.materials.inconel600.Inconel600"]], "armi.materials.inconel600": [[92, "module-armi.materials.inconel600"]], "heatcapacity() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.heatCapacity"]], "linearexpansion() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel600.inconel600 attribute)": [[92, "armi.materials.inconel600.Inconel600.propertyValidTemperature"]], "reftempk (armi.materials.inconel600.inconel600 attribute)": [[92, "armi.materials.inconel600.Inconel600.refTempK"]], "references (armi.materials.inconel600.inconel600 attribute)": [[92, "armi.materials.inconel600.Inconel600.references"]], "setdefaultmassfracs() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.thermalConductivity"]], "inconel625 (class in armi.materials.inconel625)": [[93, "armi.materials.inconel625.Inconel625"]], "armi.materials.inconel625": [[93, "module-armi.materials.inconel625"]], "heatcapacity() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.heatCapacity"]], "linearexpansion() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel625.inconel625 attribute)": [[93, "armi.materials.inconel625.Inconel625.propertyValidTemperature"]], "reftempk (armi.materials.inconel625.inconel625 attribute)": [[93, "armi.materials.inconel625.Inconel625.refTempK"]], "references (armi.materials.inconel625.inconel625 attribute)": [[93, "armi.materials.inconel625.Inconel625.references"]], "setdefaultmassfracs() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.thermalConductivity"]], "inconel800 (class in armi.materials.inconel800)": [[94, "armi.materials.inconel800.Inconel800"]], "armi.materials.inconel800": [[94, "module-armi.materials.inconel800"]], "linearexpansionpercent() (armi.materials.inconel800.inconel800 method)": [[94, "armi.materials.inconel800.Inconel800.linearExpansionPercent"]], "meancoefficientthermalexpansion() (armi.materials.inconel800.inconel800 method)": [[94, "armi.materials.inconel800.Inconel800.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.inconel800.inconel800 attribute)": [[94, "armi.materials.inconel800.Inconel800.propertyValidTemperature"]], "reftempk (armi.materials.inconel800.inconel800 attribute)": [[94, "armi.materials.inconel800.Inconel800.refTempK"]], "setdefaultmassfracs() (armi.materials.inconel800.inconel800 method)": [[94, "armi.materials.inconel800.Inconel800.setDefaultMassFracs"]], "inconelpe16 (class in armi.materials.inconelpe16)": [[95, "armi.materials.inconelPE16.InconelPE16"]], "armi.materials.inconelpe16": [[95, "module-armi.materials.inconelPE16"]], "density() (armi.materials.inconelpe16.inconelpe16 method)": [[95, "armi.materials.inconelPE16.InconelPE16.density"]], "references (armi.materials.inconelpe16.inconelpe16 attribute)": [[95, "armi.materials.inconelPE16.InconelPE16.references"]], "setdefaultmassfracs() (armi.materials.inconelpe16.inconelpe16 method)": [[95, "armi.materials.inconelPE16.InconelPE16.setDefaultMassFracs"]], "inconelx750 (class in armi.materials.inconelx750)": [[96, "armi.materials.inconelX750.InconelX750"]], "armi.materials.inconelx750": [[96, "module-armi.materials.inconelX750"]], "heatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.heatCapacity"]], "linearexpansion() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconelx750.inconelx750 attribute)": [[96, "armi.materials.inconelX750.InconelX750.propertyValidTemperature"]], "reftempk (armi.materials.inconelx750.inconelx750 attribute)": [[96, "armi.materials.inconelX750.InconelX750.refTempK"]], "references (armi.materials.inconelx750.inconelx750 attribute)": [[96, "armi.materials.inconelX750.InconelX750.references"]], "setdefaultmassfracs() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.thermalConductivity"]], "lead (class in armi.materials.lead)": [[97, "armi.materials.lead.Lead"]], "armi.materials.lead": [[97, "module-armi.materials.lead"]], "heatcapacity() (armi.materials.lead.lead method)": [[97, "armi.materials.lead.Lead.heatCapacity"]], "propertyvalidtemperature (armi.materials.lead.lead attribute)": [[97, "armi.materials.lead.Lead.propertyValidTemperature"]], "pseudodensity() (armi.materials.lead.lead method)": [[97, "armi.materials.lead.Lead.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.lead.lead method)": [[97, "armi.materials.lead.Lead.setDefaultMassFracs"]], "volumetricexpansion() (armi.materials.lead.lead method)": [[97, "armi.materials.lead.Lead.volumetricExpansion"]], "leadbismuth (class in armi.materials.leadbismuth)": [[98, "armi.materials.leadBismuth.LeadBismuth"]], "armi.materials.leadbismuth": [[98, "module-armi.materials.leadBismuth"]], "dynamicvisc() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.dynamicVisc"]], "heatcapacity() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.heatCapacity"]], "propertyvalidtemperature (armi.materials.leadbismuth.leadbismuth attribute)": [[98, "armi.materials.leadBismuth.LeadBismuth.propertyValidTemperature"]], "pseudodensity() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.thermalConductivity"]], "volumetricexpansion() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.volumetricExpansion"]], "lithium (class in armi.materials.lithium)": [[99, "armi.materials.lithium.Lithium"]], "applyinputparams() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.applyInputParams"]], "armi.materials.lithium": [[99, "module-armi.materials.lithium"]], "boilingpoint() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.boilingPoint"]], "enrichednuclide (armi.materials.lithium.lithium attribute)": [[99, "armi.materials.lithium.Lithium.enrichedNuclide"]], "heatcapacity() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.heatCapacity"]], "meltingpoint() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.meltingPoint"]], "pseudodensity() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.pseudoDensity"]], "references (armi.materials.lithium.lithium attribute)": [[99, "armi.materials.lithium.Lithium.references"]], "setdefaultmassfracs() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.thermalConductivity"]], "magnesium (class in armi.materials.magnesium)": [[100, "armi.materials.magnesium.Magnesium"]], "armi.materials.magnesium": [[100, "module-armi.materials.magnesium"]], "propertyvalidtemperature (armi.materials.magnesium.magnesium attribute)": [[100, "armi.materials.magnesium.Magnesium.propertyValidTemperature"]], "pseudodensity() (armi.materials.magnesium.magnesium method)": [[100, "armi.materials.magnesium.Magnesium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.magnesium.magnesium method)": [[100, "armi.materials.magnesium.Magnesium.setDefaultMassFracs"]], "data_source (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.DATA_SOURCE"]], "fluid (class in armi.materials.material)": [[101, "armi.materials.material.Fluid"]], "fuelmaterial (class in armi.materials.material)": [[101, "armi.materials.material.FuelMaterial"]], "material (class in armi.materials.material)": [[101, "armi.materials.material.Material"]], "simplesolid (class in armi.materials.material)": [[101, "armi.materials.material.SimpleSolid"]], "adjustmassenrichment() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.adjustMassEnrichment"]], "adjustmassfrac() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.adjustMassFrac"]], "adjusttd() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.adjustTD"]], "applyinputparams() (armi.materials.material.fuelmaterial method)": [[101, "armi.materials.material.FuelMaterial.applyInputParams"]], "applyinputparams() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.applyInputParams"]], "armi.materials.material": [[101, "module-armi.materials.material"]], "backup() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.backUp"]], "checkpropertytemprange() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.checkPropertyTempRange"]], "checktemprange() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.checkTempRange"]], "class1_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.class1_custom_isotopics"]], "class1_wt_frac (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.class1_wt_frac"]], "class2_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.class2_custom_isotopics"]], "clearcache() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.clearCache"]], "clearmassfrac() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.clearMassFrac"]], "density() (armi.materials.material.fluid method)": [[101, "armi.materials.material.Fluid.density"]], "density() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.density"]], "density() (armi.materials.material.simplesolid method)": [[101, "armi.materials.material.SimpleSolid.density"]], "densitykgm3() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.densityKgM3"]], "densitytimesheatcapacity() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.densityTimesHeatCapacity"]], "duplicate() (armi.materials.material.fuelmaterial method)": [[101, "armi.materials.material.FuelMaterial.duplicate"]], "duplicate() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.duplicate"]], "enrichednuclide (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.enrichedNuclide"]], "gasporosity (armi.materials.material.material property)": [[101, "armi.materials.material.Material.gasPorosity"]], "getchildren() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getChildren"]], "getchildrenwithflags() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getChildrenWithFlags"]], "getcorrosionrate() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getCorrosionRate"]], "getmassfrac() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getMassFrac"]], "getname() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getName"]], "getnuclides() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getNuclides"]], "getproperty() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getProperty"]], "gettd() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getTD"]], "gettempchangefordensitychange() (armi.materials.material.fluid method)": [[101, "armi.materials.material.Fluid.getTempChangeForDensityChange"]], "gettempchangefordensitychange() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getTempChangeForDensityChange"]], "gettemperatureatdensity() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getTemperatureAtDensity"]], "getthermalexpansiondensityreduction() (armi.materials.material.fluid method)": [[101, "armi.materials.material.Fluid.getThermalExpansionDensityReduction"]], "getthermalexpansiondensityreduction() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getThermalExpansionDensityReduction"]], "heatcapacity() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.heatCapacity"]], "linearexpansion() (armi.materials.material.fluid method)": [[101, "armi.materials.material.Fluid.linearExpansion"]], "linearexpansion() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.linearExpansion"]], "linearexpansionfactor() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.linearExpansionFactor"]], "linearexpansionpercent() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.linearExpansionPercent"]], "linearexpansionpercent() (armi.materials.material.simplesolid method)": [[101, "armi.materials.material.SimpleSolid.linearExpansionPercent"]], "liquidporosity (armi.materials.material.material property)": [[101, "armi.materials.material.Material.liquidPorosity"]], "modelconst (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.modelConst"]], "name (armi.materials.material.material property)": [[101, "armi.materials.material.Material.name"]], "propertyvalidtemperature (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.propertyValidTemperature"]], "pseudodensity() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.pseudoDensity"]], "pseudodensity() (armi.materials.material.simplesolid method)": [[101, "armi.materials.material.SimpleSolid.pseudoDensity"]], "pseudodensitykgm3() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.pseudoDensityKgM3"]], "pufrac (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.puFrac"]], "reftempk (armi.materials.material.simplesolid attribute)": [[101, "armi.materials.material.SimpleSolid.refTempK"]], "references (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.references"]], "removenucmassfrac() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.removeNucMassFrac"]], "restorebackup() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.restoreBackup"]], "setdefaultmassfracs() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.setDefaultMassFracs"]], "setmassfrac() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.setMassFrac"]], "thermalconductivity() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.thermalConductivity"]], "thermalscatteringlaws (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.thermalScatteringLaws"]], "ufrac (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.uFrac"]], "volumetricexpansion() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.volumetricExpansion"]], "yieldstrength() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.yieldStrength"]], "zrfrac (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.zrFrac"]], "mgo (class in armi.materials.mgo)": [[102, "armi.materials.mgO.MgO"]], "armi.materials.mgo": [[102, "module-armi.materials.mgO"]], "linearexpansionpercent() (armi.materials.mgo.mgo method)": [[102, "armi.materials.mgO.MgO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.mgo.mgo attribute)": [[102, "armi.materials.mgO.MgO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.mgo.mgo method)": [[102, "armi.materials.mgO.MgO.setDefaultMassFracs"]], "armi.materials.mixture": [[103, "module-armi.materials.mixture"]], "molybdenum (class in armi.materials.molybdenum)": [[104, "armi.materials.molybdenum.Molybdenum"]], "armi.materials.molybdenum": [[104, "module-armi.materials.molybdenum"]], "density() (armi.materials.molybdenum.molybdenum method)": [[104, "armi.materials.molybdenum.Molybdenum.density"]], "setdefaultmassfracs() (armi.materials.molybdenum.molybdenum method)": [[104, "armi.materials.molybdenum.Molybdenum.setDefaultMassFracs"]], "mox (class in armi.materials.mox)": [[105, "armi.materials.mox.MOX"]], "applyinputparams() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.applyInputParams"]], "armi.materials.mox": [[105, "module-armi.materials.mox"]], "enrichednuclide (armi.materials.mox.mox attribute)": [[105, "armi.materials.mox.MOX.enrichedNuclide"]], "getmassfracpuo2() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.getMassFracPuO2"]], "getmolfracpuo2() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.getMolFracPuO2"]], "meltingpoint() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.meltingPoint"]], "setdefaultmassfracs() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.setDefaultMassFracs"]], "setmassfracpuo2() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.setMassFracPuO2"]], "nz (class in armi.materials.nz)": [[106, "armi.materials.nZ.NZ"]], "armi.materials.nz": [[106, "module-armi.materials.nZ"]], "density() (armi.materials.nz.nz method)": [[106, "armi.materials.nZ.NZ.density"]], "setdefaultmassfracs() (armi.materials.nz.nz method)": [[106, "armi.materials.nZ.NZ.setDefaultMassFracs"]], "potassium (class in armi.materials.potassium)": [[107, "armi.materials.potassium.Potassium"]], "armi.materials.potassium": [[107, "module-armi.materials.potassium"]], "propertyvalidtemperature (armi.materials.potassium.potassium attribute)": [[107, "armi.materials.potassium.Potassium.propertyValidTemperature"]], "pseudodensity() (armi.materials.potassium.potassium method)": [[107, "armi.materials.potassium.Potassium.pseudoDensity"]], "sc2o3 (class in armi.materials.scandiumoxide)": [[108, "armi.materials.scandiumOxide.Sc2O3"]], "armi.materials.scandiumoxide": [[108, "module-armi.materials.scandiumOxide"]], "linearexpansionpercent() (armi.materials.scandiumoxide.sc2o3 method)": [[108, "armi.materials.scandiumOxide.Sc2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.scandiumoxide.sc2o3 attribute)": [[108, "armi.materials.scandiumOxide.Sc2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.scandiumoxide.sc2o3 method)": [[108, "armi.materials.scandiumOxide.Sc2O3.setDefaultMassFracs"]], "sic (class in armi.materials.sic)": [[109, "armi.materials.siC.SiC"]], "armi.materials.sic": [[109, "module-armi.materials.siC"]], "cumulativelinearexpansion() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.cumulativeLinearExpansion"]], "heatcapacity() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.heatCapacity"]], "meltingpoint() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.meltingPoint"]], "propertyequation (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.propertyEquation"]], "propertynotes (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.propertyNotes"]], "propertyunits (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.propertyUnits"]], "propertyvalidtemperature (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.propertyValidTemperature"]], "pseudodensity() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.pseudoDensity"]], "reftempk (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.refTempK"]], "references (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.references"]], "setdefaultmassfracs() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.thermalConductivity"]], "thermalscatteringlaws (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.thermalScatteringLaws"]], "sodium (class in armi.materials.sodium)": [[110, "armi.materials.sodium.Sodium"]], "armi.materials.sodium": [[110, "module-armi.materials.sodium"]], "enthalpy() (armi.materials.sodium.sodium method)": [[110, "armi.materials.sodium.Sodium.enthalpy"]], "propertyvalidtemperature (armi.materials.sodium.sodium attribute)": [[110, "armi.materials.sodium.Sodium.propertyValidTemperature"]], "pseudodensity() (armi.materials.sodium.sodium method)": [[110, "armi.materials.sodium.Sodium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sodium.sodium method)": [[110, "armi.materials.sodium.Sodium.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.sodium.sodium method)": [[110, "armi.materials.sodium.Sodium.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.sodium.sodium method)": [[110, "armi.materials.sodium.Sodium.thermalConductivity"]], "nacl (class in armi.materials.sodiumchloride)": [[111, "armi.materials.sodiumChloride.NaCl"]], "armi.materials.sodiumchloride": [[111, "module-armi.materials.sodiumChloride"]], "density() (armi.materials.sodiumchloride.nacl method)": [[111, "armi.materials.sodiumChloride.NaCl.density"]], "setdefaultmassfracs() (armi.materials.sodiumchloride.nacl method)": [[111, "armi.materials.sodiumChloride.NaCl.setDefaultMassFracs"]], "sulfur (class in armi.materials.sulfur)": [[112, "armi.materials.sulfur.Sulfur"]], "applyinputparams() (armi.materials.sulfur.sulfur method)": [[112, "armi.materials.sulfur.Sulfur.applyInputParams"]], "armi.materials.sulfur": [[112, "module-armi.materials.sulfur"]], "propertyvalidtemperature (armi.materials.sulfur.sulfur attribute)": [[112, "armi.materials.sulfur.Sulfur.propertyValidTemperature"]], "pseudodensity() (armi.materials.sulfur.sulfur method)": [[112, "armi.materials.sulfur.Sulfur.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sulfur.sulfur method)": [[112, "armi.materials.sulfur.Sulfur.setDefaultMassFracs"]], "updatetd() (armi.materials.sulfur.sulfur method)": [[112, "armi.materials.sulfur.Sulfur.updateTD"]], "volumetricexpansion() (armi.materials.sulfur.sulfur method)": [[112, "armi.materials.sulfur.Sulfur.volumetricExpansion"]], "tzm (class in armi.materials.tzm)": [[113, "armi.materials.tZM.TZM"]], "armi.materials.tzm": [[113, "module-armi.materials.tZM"]], "linearexpansionpercent() (armi.materials.tzm.tzm method)": [[113, "armi.materials.tZM.TZM.linearExpansionPercent"]], "percentthermalexpansion (armi.materials.tzm.tzm attribute)": [[113, "armi.materials.tZM.TZM.percentThermalExpansion"]], "propertyvalidtemperature (armi.materials.tzm.tzm attribute)": [[113, "armi.materials.tZM.TZM.propertyValidTemperature"]], "references (armi.materials.tzm.tzm attribute)": [[113, "armi.materials.tZM.TZM.references"]], "setdefaultmassfracs() (armi.materials.tzm.tzm method)": [[113, "armi.materials.tZM.TZM.setDefaultMassFracs"]], "temperaturec (armi.materials.tzm.tzm attribute)": [[113, "armi.materials.tZM.TZM.temperatureC"]], "tantalum (class in armi.materials.tantalum)": [[114, "armi.materials.tantalum.Tantalum"]], "armi.materials.tantalum": [[114, "module-armi.materials.tantalum"]], "density() (armi.materials.tantalum.tantalum method)": [[114, "armi.materials.tantalum.Tantalum.density"]], "setdefaultmassfracs() (armi.materials.tantalum.tantalum method)": [[114, "armi.materials.tantalum.Tantalum.setDefaultMassFracs"]], "armi.materials.tests": [[115, "module-armi.materials.tests"]], "materials__init__tests (class in armi.materials.tests.test__init__)": [[116, "armi.materials.tests.test__init__.Materials__init__Tests"]], "armi.materials.tests.test__init__": [[116, "module-armi.materials.tests.test__init__"]], "bettersubclasscheck() (in module armi.materials.tests.test__init__)": [[116, "armi.materials.tests.test__init__.betterSubClassCheck"]], "test_canaccessclassesfrompackage() (armi.materials.tests.test__init__.materials__init__tests method)": [[116, "armi.materials.tests.test__init__.Materials__init__Tests.test_canAccessClassesFromPackage"]], "test_packageclassesequalmoduleclasses() (armi.materials.tests.test__init__.materials__init__tests method)": [[116, "armi.materials.tests.test__init__.Materials__init__Tests.test_packageClassesEqualModuleClasses"]], "test_air (class in armi.materials.tests.test_air)": [[117, "armi.materials.tests.test_air.Test_Air"]], "armi.materials.tests.test_air": [[117, "module-armi.materials.tests.test_air"]], "test_heatcapacity() (armi.materials.tests.test_air.test_air method)": [[117, "armi.materials.tests.test_air.Test_Air.test_heatCapacity"]], "test_massfrac() (armi.materials.tests.test_air.test_air method)": [[117, "armi.materials.tests.test_air.Test_Air.test_massFrac"]], "test_pseudodensity() (armi.materials.tests.test_air.test_air method)": [[117, "armi.materials.tests.test_air.Test_Air.test_pseudoDensity"]], "test_thermalconductivity() (armi.materials.tests.test_air.test_air method)": [[117, "armi.materials.tests.test_air.Test_Air.test_thermalConductivity"]], "test_validranges() (armi.materials.tests.test_air.test_air method)": [[117, "armi.materials.tests.test_air.Test_Air.test_validRanges"]], "b4c_testcase (class in armi.materials.tests.test_b4c)": [[118, "armi.materials.tests.test_b4c.B4C_TestCase"]], "mat_class (armi.materials.tests.test_b4c.b4c_testcase attribute)": [[118, "armi.materials.tests.test_b4c.B4C_TestCase.MAT_CLASS"]], "armi.materials.tests.test_b4c": [[118, "module-armi.materials.tests.test_b4c"]], "test_propertyvalidtemperature() (armi.materials.tests.test_b4c.b4c_testcase method)": [[118, "armi.materials.tests.test_b4c.B4C_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_b4c.b4c_testcase method)": [[118, "armi.materials.tests.test_b4c.B4C_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_be9.test_be9 attribute)": [[119, "armi.materials.tests.test_be9.Test_Be9.MAT_CLASS"]], "test_be9 (class in armi.materials.tests.test_be9)": [[119, "armi.materials.tests.test_be9.Test_Be9"]], "armi.materials.tests.test_be9": [[119, "module-armi.materials.tests.test_be9"]], "test_propertyvalidtemperature() (armi.materials.tests.test_be9.test_be9 method)": [[119, "armi.materials.tests.test_be9.Test_Be9.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_be9.test_be9 method)": [[119, "armi.materials.tests.test_be9.Test_Be9.test_pseudoDensity"]], "graphite_testcase (class in armi.materials.tests.test_graphite)": [[120, "armi.materials.tests.test_graphite.Graphite_TestCase"]], "mat_class (armi.materials.tests.test_graphite.graphite_testcase attribute)": [[120, "armi.materials.tests.test_graphite.Graphite_TestCase.MAT_CLASS"]], "armi.materials.tests.test_graphite": [[120, "module-armi.materials.tests.test_graphite"]], "test_density() (armi.materials.tests.test_graphite.graphite_testcase method)": [[120, "armi.materials.tests.test_graphite.Graphite_TestCase.test_density"]], "test_linearexpansionpercent() (armi.materials.tests.test_graphite.graphite_testcase method)": [[120, "armi.materials.tests.test_graphite.Graphite_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_graphite.graphite_testcase method)": [[120, "armi.materials.tests.test_graphite.Graphite_TestCase.test_propertyValidTemperature"]], "lithium_testcase (class in armi.materials.tests.test_lithium)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase"]], "mat_class (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.MAT_CLASS"]], "armi.materials.tests.test_lithium": [[121, "module-armi.materials.tests.test_lithium"]], "defaultmassfrac (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.defaultMassFrac"]], "test_lithium_material_modifications() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_Lithium_material_modifications"]], "test_boilingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_boilingPoint"]], "test_heatcapacity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_pseudoDensity"]], "alloy200_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase"]], "cah2_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.CaH2_TestCase"]], "californium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Californium_TestCase"]], "cesium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Cesium_TestCase"]], "copper_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Copper_TestCase"]], "fuelmaterial_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.FuelMaterial_TestCase"]], "hafnium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Hafnium_TestCase"]], "hastelloyn_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase"]], "inconel600_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase"]], "inconel625_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase"]], "inconelx750_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase"]], "inconel_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Inconel_TestCase"]], "leadbismuth_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase"]], "lead_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Lead_TestCase"]], "mat_class (armi.materials.tests.test_materials.alloy200_testcase attribute)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cah2_testcase attribute)": [[122, "armi.materials.tests.test_materials.CaH2_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.californium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Californium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cesium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Cesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.copper_testcase attribute)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hafnium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Hafnium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hastelloyn_testcase attribute)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel600_testcase attribute)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel625_testcase attribute)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconelx750_testcase attribute)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.leadbismuth_testcase attribute)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.lead_testcase attribute)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mox_testcase attribute)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesiumoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Magnesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mixture_testcase attribute)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.molybdenum_testcase attribute)": [[122, "armi.materials.tests.test_materials.Molybdenum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.nacl_testcase attribute)": [[122, "armi.materials.tests.test_materials.NaCl_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.niobiumzirconium_testcase attribute)": [[122, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.potassium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Potassium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.scandiumoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sodium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sulfur_testcase attribute)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tzm_testcase attribute)": [[122, "armi.materials.tests.test_materials.TZM_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tantalum_testcase attribute)": [[122, "armi.materials.tests.test_materials.Tantalum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumuraniummetal_testcase attribute)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thorium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uraniumoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uranium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Uranium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.void_testcase attribute)": [[122, "armi.materials.tests.test_materials.Void_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.yttriumoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.YttriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zincoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.ZincOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zr_testcase attribute)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.MAT_CLASS"]], "mox_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.MOX_TestCase"]], "magnesiumoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase"]], "magnesium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Magnesium_TestCase"]], "materialconstructiontests (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.MaterialConstructionTests"]], "materialfindingtests (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.MaterialFindingTests"]], "mixture_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase"]], "molybdenum_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Molybdenum_TestCase"]], "nacl_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.NaCl_TestCase"]], "niobiumzirconium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase"]], "potassium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Potassium_TestCase"]], "scandiumoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.ScandiumOxide_TestCase"]], "sodium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase"]], "sulfur_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase"]], "tzm_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.TZM_TestCase"]], "tantalum_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Tantalum_TestCase"]], "thoriumoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase"]], "thoriumuraniummetal_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase"]], "thorium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase"]], "uraniumoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase"]], "uranium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Uranium_TestCase"]], "void_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Void_TestCase"]], "yttriumoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.YttriumOxide_TestCase"]], "zincoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.ZincOxide_TestCase"]], "zr_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Zr_TestCase"]], "armi.materials.tests.test_materials": [[122, "module-armi.materials.tests.test_materials"]], "baseinput (armi.materials.tests.test_materials.fuelmaterial_testcase attribute)": [[122, "armi.materials.tests.test_materials.FuelMaterial_TestCase.baseInput"]], "loadassembly() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[122, "armi.materials.tests.test_materials.FuelMaterial_TestCase.loadAssembly"]], "test_00_applyinputparams() (armi.materials.tests.test_materials.tzm_testcase method)": [[122, "armi.materials.tests.test_materials.TZM_TestCase.test_00_applyInputParams"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_00_setDefaultMassFracs"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_01_linearExpansionPercent"]], "test_01_pseudodensity() (armi.materials.tests.test_materials.tzm_testcase method)": [[122, "armi.materials.tests.test_materials.TZM_TestCase.test_01_pseudoDensity"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_02_linearExpansion"]], "test_02_linearexpansionpercent() (armi.materials.tests.test_materials.tzm_testcase method)": [[122, "armi.materials.tests.test_materials.TZM_TestCase.test_02_linearExpansionPercent"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_03_pseudoDensity"]], "test_iconel800_linearexpansion() (armi.materials.tests.test_materials.inconel_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel_TestCase.test_Iconel800_linearExpansion"]], "test_adjustmassenrichment() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_adjustMassEnrichment"]], "test_applyinputparams() (armi.materials.tests.test_materials.mox_testcase method)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uranium_testcase method)": [[122, "armi.materials.tests.test_materials.Uranium_TestCase.test_applyInputParams"]], "test_class1class2_class1_wt_frac() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[122, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_class1_wt_frac"]], "test_class1class2_classx_custom_isotopics() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[122, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_classX_custom_isotopics"]], "test_density() (armi.materials.tests.test_materials.mox_testcase method)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.mixture_testcase method)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.nacl_testcase method)": [[122, "armi.materials.tests.test_materials.NaCl_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.void_testcase method)": [[122, "armi.materials.tests.test_materials.Void_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_density"]], "test_densityneverchanges() (armi.materials.tests.test_materials.copper_testcase method)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.test_densityNeverChanges"]], "test_densitytimesheatcapactiy() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_densityTimesHeatCapactiy"]], "test_duplicate() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_duplicate"]], "test_dynamicvisc() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_dynamicVisc"]], "test_enthalpy() (armi.materials.tests.test_materials.sodium_testcase method)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.test_enthalpy"]], "test_findmaterial() (armi.materials.tests.test_materials.materialfindingtests method)": [[122, "armi.materials.tests.test_materials.MaterialFindingTests.test_findMaterial"]], "test_getchildren() (armi.materials.tests.test_materials.copper_testcase method)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildren"]], "test_getchildrenwithflags() (armi.materials.tests.test_materials.copper_testcase method)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildrenWithFlags"]], "test_getcorrosionrate() (armi.materials.tests.test_materials.californium_testcase method)": [[122, "armi.materials.tests.test_materials.Californium_TestCase.test_getCorrosionRate"]], "test_getdensityexpansion3d() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getDensityExpansion3D"]], "test_getmassfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.test_getMassFracPuO2"]], "test_getmeltingpoint() (armi.materials.tests.test_materials.mox_testcase method)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.test_getMeltingPoint"]], "test_getmolfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.test_getMolFracPuO2"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_getTempChangeForDensityChange"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTempChangeForDensityChange"]], "test_gettemperatureatdensity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTemperatureAtDensity"]], "test_heatcapacity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_heatCapacity"]], "test_linearexpansion() (armi.materials.tests.test_materials.alloy200_testcase method)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.mixture_testcase method)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.void_testcase method)": [[122, "armi.materials.tests.test_materials.Void_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.zr_testcase method)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansion"]], "test_linearexpansionhotter() (armi.materials.tests.test_materials.alloy200_testcase method)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansionHotter"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.copper_testcase method)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zr_testcase method)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansionPercent"]], "test_material_initialization() (armi.materials.tests.test_materials.materialconstructiontests method)": [[122, "armi.materials.tests.test_materials.MaterialConstructionTests.test_material_initialization"]], "test_meancoefficientthermalexpansion() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_meanCoefficientThermalExpansion"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_meltingPoint"]], "test_namespacing() (armi.materials.tests.test_materials.materialfindingtests method)": [[122, "armi.materials.tests.test_materials.MaterialFindingTests.test_namespacing"]], "test_nicklecontent() (armi.materials.tests.test_materials.alloy200_testcase method)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase.test_nickleContent"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitHeatCapacity"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitThermalConductivity"]], "test_porosities() (armi.materials.tests.test_materials.californium_testcase method)": [[122, "armi.materials.tests.test_materials.Californium_TestCase.test_porosities"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.alloy200_testcase method)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cah2_testcase method)": [[122, "armi.materials.tests.test_materials.CaH2_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.californium_testcase method)": [[122, "armi.materials.tests.test_materials.Californium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cesium_testcase method)": [[122, "armi.materials.tests.test_materials.Cesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hafnium_testcase method)": [[122, "armi.materials.tests.test_materials.Hafnium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesium_testcase method)": [[122, "armi.materials.tests.test_materials.Magnesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.mixture_testcase method)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[122, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.nacl_testcase method)": [[122, "armi.materials.tests.test_materials.NaCl_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[122, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.potassium_testcase method)": [[122, "armi.materials.tests.test_materials.Potassium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sodium_testcase method)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sulfur_testcase method)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tzm_testcase method)": [[122, "armi.materials.tests.test_materials.TZM_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tantalum_testcase method)": [[122, "armi.materials.tests.test_materials.Tantalum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uranium_testcase method)": [[122, "armi.materials.tests.test_materials.Uranium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.void_testcase method)": [[122, "armi.materials.tests.test_materials.Void_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zr_testcase method)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_materials.cah2_testcase method)": [[122, "armi.materials.tests.test_materials.CaH2_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.californium_testcase method)": [[122, "armi.materials.tests.test_materials.Californium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.cesium_testcase method)": [[122, "armi.materials.tests.test_materials.Cesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.hafnium_testcase method)": [[122, "armi.materials.tests.test_materials.Hafnium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.inconel_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesium_testcase method)": [[122, "armi.materials.tests.test_materials.Magnesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[122, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[122, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.potassium_testcase method)": [[122, "armi.materials.tests.test_materials.Potassium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sodium_testcase method)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sulfur_testcase method)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.tantalum_testcase method)": [[122, "armi.materials.tests.test_materials.Tantalum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.void_testcase method)": [[122, "armi.materials.tests.test_materials.Void_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.zr_testcase method)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.test_pseudoDensity"]], "test_removenucmassfrac() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_removeNucMassFrac"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.copper_testcase method)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.mixture_testcase method)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.sulfur_testcase method)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_setDefaultMassFracs"]], "test_specificvolumeliquid() (armi.materials.tests.test_materials.sodium_testcase method)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.test_specificVolumeLiquid"]], "test_thermalconductivity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.sodium_testcase method)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uranium_testcase method)": [[122, "armi.materials.tests.test_materials.Uranium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.zr_testcase method)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.test_thermalConductivity"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.sulfur_testcase method)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase.test_volumetricExpansion"]], "mat_class (armi.materials.tests.test_sic.test_sic attribute)": [[123, "armi.materials.tests.test_sic.Test_SiC.MAT_CLASS"]], "test_sic (class in armi.materials.tests.test_sic)": [[123, "armi.materials.tests.test_sic.Test_SiC"]], "armi.materials.tests.test_sic": [[123, "module-armi.materials.tests.test_sic"]], "test_heatcapacity() (armi.materials.tests.test_sic.test_sic method)": [[123, "armi.materials.tests.test_sic.Test_SiC.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_sic.test_sic method)": [[123, "armi.materials.tests.test_sic.Test_SiC.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sic.test_sic method)": [[123, "armi.materials.tests.test_sic.Test_SiC.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_sic.test_sic method)": [[123, "armi.materials.tests.test_sic.Test_SiC.test_pseudoDensity"]], "mat_class (armi.materials.tests.test_sulfur.sulfur_testcase attribute)": [[124, "armi.materials.tests.test_sulfur.Sulfur_TestCase.MAT_CLASS"]], "sulfur_testcase (class in armi.materials.tests.test_sulfur)": [[124, "armi.materials.tests.test_sulfur.Sulfur_TestCase"]], "armi.materials.tests.test_sulfur": [[124, "module-armi.materials.tests.test_sulfur"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[124, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_propertyValidTemperature"]], "test_sulfur_density_frac() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[124, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_sulfur_density_frac"]], "mat_class (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase attribute)": [[125, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.MAT_CLASS"]], "thoriumoxide_testcase (class in armi.materials.tests.test_thoriumoxide)": [[125, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumoxide": [[125, "module-armi.materials.tests.test_thoriumOxide"]], "test_linearexpansionpercent() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_uzr.uzr_testcase attribute)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.MAT_CLASS"]], "uzr_testcase (class in armi.materials.tests.test_uzr)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase"]], "armi.materials.tests.test_uzr": [[126, "module-armi.materials.tests.test_uZr"]], "test_td() (armi.materials.tests.test_uzr.uzr_testcase method)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.test_TD"]], "test_cache() (armi.materials.tests.test_uzr.uzr_testcase method)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.test_cache"]], "test_density() (armi.materials.tests.test_uzr.uzr_testcase method)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.test_density"]], "test_densitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.test_densityKgM3"]], "test_duplicate() (armi.materials.tests.test_uzr.uzr_testcase method)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.test_duplicate"]], "test_ispicklable() (armi.materials.tests.test_uzr.uzr_testcase method)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.test_isPicklable"]], "test_propertyvalidtemperature() (armi.materials.tests.test_uzr.uzr_testcase method)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.test_propertyValidTemperature"]], "test_pseudodensitykgm3() (armi.materials.tests.test_uzr.uzr_testcase method)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.test_pseudoDensityKgM3"]], "test_water (class in armi.materials.tests.test_water)": [[127, "armi.materials.tests.test_water.Test_Water"]], "armi.materials.tests.test_water": [[127, "module-armi.materials.tests.test_water"]], "test_massfrac() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_massFrac"]], "test_propertyvalidtemperature() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_propertyValidTemperature"]], "test_validatenames() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_validateNames"]], "test_water_at_boiling() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_water_at_boiling"]], "test_water_at_critcalpoint() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_water_at_critcalPoint"]], "test_water_at_freezing() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_water_at_freezing"]], "thu (class in armi.materials.thu)": [[128, "armi.materials.thU.ThU"]], "applyinputparams() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.applyInputParams"]], "armi.materials.thu": [[128, "module-armi.materials.thU"]], "enrichednuclide (armi.materials.thu.thu attribute)": [[128, "armi.materials.thU.ThU.enrichedNuclide"]], "getenrichment() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.getEnrichment"]], "linearexpansion() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.linearExpansion"]], "meltingpoint() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.meltingPoint"]], "propertyvalidtemperature (armi.materials.thu.thu attribute)": [[128, "armi.materials.thU.ThU.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.thermalConductivity"]], "thorium (class in armi.materials.thorium)": [[129, "armi.materials.thorium.Thorium"]], "armi.materials.thorium": [[129, "module-armi.materials.thorium"]], "linearexpansion() (armi.materials.thorium.thorium method)": [[129, "armi.materials.thorium.Thorium.linearExpansion"]], "meltingpoint() (armi.materials.thorium.thorium method)": [[129, "armi.materials.thorium.Thorium.meltingPoint"]], "propertyvalidtemperature (armi.materials.thorium.thorium attribute)": [[129, "armi.materials.thorium.Thorium.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thorium.thorium method)": [[129, "armi.materials.thorium.Thorium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thorium.thorium method)": [[129, "armi.materials.thorium.Thorium.thermalConductivity"]], "tho2 (class in armi.materials.thoriumoxide)": [[130, "armi.materials.thoriumOxide.ThO2"]], "thoriumoxide (class in armi.materials.thoriumoxide)": [[130, "armi.materials.thoriumOxide.ThoriumOxide"]], "applyinputparams() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.applyInputParams"]], "armi.materials.thoriumoxide": [[130, "module-armi.materials.thoriumOxide"]], "density() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.density"]], "linearexpansion() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.meltingPoint"]], "propertyvalidtemperature (armi.materials.thoriumoxide.thoriumoxide attribute)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.thermalConductivity"]], "uthzr (class in armi.materials.uthzr)": [[131, "armi.materials.uThZr.UThZr"]], "applyinputparams() (armi.materials.uthzr.uthzr method)": [[131, "armi.materials.uThZr.UThZr.applyInputParams"]], "armi.materials.uthzr": [[131, "module-armi.materials.uThZr"]], "enrichednuclide (armi.materials.uthzr.uthzr attribute)": [[131, "armi.materials.uThZr.UThZr.enrichedNuclide"]], "pseudodensity() (armi.materials.uthzr.uthzr method)": [[131, "armi.materials.uThZr.UThZr.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.uthzr.uthzr method)": [[131, "armi.materials.uThZr.UThZr.setDefaultMassFracs"]], "uzr (class in armi.materials.uzr)": [[132, "armi.materials.uZr.UZr"]], "applyinputparams() (armi.materials.uzr.uzr method)": [[132, "armi.materials.uZr.UZr.applyInputParams"]], "armi.materials.uzr": [[132, "module-armi.materials.uZr"]], "enrichednuclide (armi.materials.uzr.uzr attribute)": [[132, "armi.materials.uZr.UZr.enrichedNuclide"]], "linearexpansionpercent() (armi.materials.uzr.uzr method)": [[132, "armi.materials.uZr.UZr.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.uzr.uzr method)": [[132, "armi.materials.uZr.UZr.setDefaultMassFracs"]], "ufracdefault (armi.materials.uzr.uzr attribute)": [[132, "armi.materials.uZr.UZr.uFracDefault"]], "zrfracdefault (armi.materials.uzr.uzr attribute)": [[132, "armi.materials.uZr.UZr.zrFracDefault"]], "uranium (class in armi.materials.uranium)": [[133, "armi.materials.uranium.Uranium"]], "applyinputparams() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.applyInputParams"]], "armi.materials.uranium": [[133, "module-armi.materials.uranium"]], "density() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.density"]], "enrichednuclide (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.enrichedNuclide"]], "heatcapacity() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.heatCapacity"]], "linearexpansion() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.linearExpansion"]], "linearexpansionpercent() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.linearExpansionPercent"]], "materialintro (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.materialIntro"]], "meltingpoint() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.meltingPoint"]], "propertyequation (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.propertyEquation"]], "propertynotes (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.propertyNotes"]], "propertyrawdata (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.propertyRawData"]], "propertyunits (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.propertyUnits"]], "propertyvalidtemperature (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.propertyValidTemperature"]], "pseudodensity() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.pseudoDensity"]], "refdens (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.refDens"]], "references (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.references"]], "setdefaultmassfracs() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.thermalConductivity"]], "ea (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants.Ea"]], "heatcapacityconstants (class in armi.materials.uraniumoxide)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants"]], "reference_temperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.REFERENCE_TEMPERATURE"]], "uo2 (class in armi.materials.uraniumoxide)": [[134, "armi.materials.uraniumOxide.UO2"]], "uraniumoxide (class in armi.materials.uraniumoxide)": [[134, "armi.materials.uraniumOxide.UraniumOxide"]], "applyinputparams() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.applyInputParams"]], "armi.materials.uraniumoxide": [[134, "module-armi.materials.uraniumOxide"]], "c1 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants.c1"]], "c2 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants.c2"]], "c3 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants.c3"]], "density() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.density"]], "enrichednuclide (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.enrichedNuclide"]], "heatcapacity() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.heatCapacity"]], "heatcapacityconstants (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.heatCapacityConstants"]], "linearexpansion() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.meltingPoint"]], "propertyunits (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.propertyUnits"]], "propertyvalidtemperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.propertyValidTemperature"]], "references (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.references"]], "setdefaultmassfracs() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivity"]], "thermalconductivitytable (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTable"]], "thermalconductivitytablek (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTableK"]], "thermalscatteringlaws (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.thermalScatteringLaws"]], "theta (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants.theta"]], "void (class in armi.materials.void)": [[135, "armi.materials.void.Void"]], "armi.materials.void": [[135, "module-armi.materials.void"]], "density() (armi.materials.void.void method)": [[135, "armi.materials.void.Void.density"]], "pseudodensity() (armi.materials.void.void method)": [[135, "armi.materials.void.Void.pseudoDensity"]], "alpha_0 (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.ALPHA_0"]], "density_critical_gpercubiccentimeter (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.DENSITY_CRITICAL_GPERCUBICCENTIMETER"]], "density_critical_kgpercubicmeter (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.DENSITY_CRITICAL_KGPERCUBICMETER"]], "phi_0 (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.PHI_0"]], "saturatedsteam (class in armi.materials.water)": [[136, "armi.materials.water.SaturatedSteam"]], "saturatedwater (class in armi.materials.water)": [[136, "armi.materials.water.SaturatedWater"]], "temperature_critical_k (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.TEMPERATURE_CRITICAL_K"]], "vapor_pressure_critical_mpa (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_MPA"]], "vapor_pressure_critical_pa (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_PA"]], "water (class in armi.materials.water)": [[136, "armi.materials.water.Water"]], "armi.materials.water": [[136, "module-armi.materials.water"]], "auxiliaryquantityspecificenthalpy() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.auxiliaryQuantitySpecificEnthalpy"]], "auxiliaryquantityspecificentropy() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.auxiliaryQuantitySpecificEntropy"]], "d (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.d"]], "enthalpy() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.enthalpy"]], "entropy() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.entropy"]], "pseudodensity() (armi.materials.water.saturatedsteam method)": [[136, "armi.materials.water.SaturatedSteam.pseudoDensity"]], "pseudodensity() (armi.materials.water.saturatedwater method)": [[136, "armi.materials.water.SaturatedWater.pseudoDensity"]], "pseudodensity() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.pseudoDensity"]], "references (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.references"]], "setdefaultmassfracs() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.setDefaultMassFracs"]], "tau() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.tau"]], "thermalscatteringlaws (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.thermalScatteringLaws"]], "theta() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.theta"]], "vaporpressure() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.vaporPressure"]], "vaporpressureprime() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.vaporPressurePrime"]], "y2o3 (class in armi.materials.yttriumoxide)": [[137, "armi.materials.yttriumOxide.Y2O3"]], "armi.materials.yttriumoxide": [[137, "module-armi.materials.yttriumOxide"]], "linearexpansionpercent() (armi.materials.yttriumoxide.y2o3 method)": [[137, "armi.materials.yttriumOxide.Y2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.yttriumoxide.y2o3 attribute)": [[137, "armi.materials.yttriumOxide.Y2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.yttriumoxide.y2o3 method)": [[137, "armi.materials.yttriumOxide.Y2O3.setDefaultMassFracs"]], "zno (class in armi.materials.zincoxide)": [[138, "armi.materials.zincOxide.ZnO"]], "armi.materials.zincoxide": [[138, "module-armi.materials.zincOxide"]], "density() (armi.materials.zincoxide.zno method)": [[138, "armi.materials.zincOxide.ZnO.density"]], "linearexpansionpercent() (armi.materials.zincoxide.zno method)": [[138, "armi.materials.zincOxide.ZnO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.zincoxide.zno attribute)": [[138, "armi.materials.zincOxide.ZnO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.zincoxide.zno method)": [[138, "armi.materials.zincOxide.ZnO.setDefaultMassFracs"]], "zr (class in armi.materials.zr)": [[139, "armi.materials.zr.Zr"]], "armi.materials.zr": [[139, "module-armi.materials.zr"]], "linearexpansion() (armi.materials.zr.zr method)": [[139, "armi.materials.zr.Zr.linearExpansion"]], "linearexpansionpercent() (armi.materials.zr.zr method)": [[139, "armi.materials.zr.Zr.linearExpansionPercent"]], "linearexpansiontable (armi.materials.zr.zr attribute)": [[139, "armi.materials.zr.Zr.linearExpansionTable"]], "linearexpansiontablek (armi.materials.zr.zr attribute)": [[139, "armi.materials.zr.Zr.linearExpansionTableK"]], "propertyvalidtemperature (armi.materials.zr.zr attribute)": [[139, "armi.materials.zr.Zr.propertyValidTemperature"]], "reftempk (armi.materials.zr.zr attribute)": [[139, "armi.materials.zr.Zr.refTempK"]], "references (armi.materials.zr.zr attribute)": [[139, "armi.materials.zr.Zr.references"]], "setdefaultmassfracs() (armi.materials.zr.zr method)": [[139, "armi.materials.zr.Zr.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.zr.zr method)": [[139, "armi.materials.zr.Zr.thermalConductivity"]], "armi.meta": [[140, "module-armi.meta"]], "armi.migration": [[141, "module-armi.migration"]], "blueprintsmigration (class in armi.migration.base)": [[142, "armi.migration.base.BlueprintsMigration"]], "databasemigration (class in armi.migration.base)": [[142, "armi.migration.base.DatabaseMigration"]], "migration (class in armi.migration.base)": [[142, "armi.migration.base.Migration"]], "settingsmigration (class in armi.migration.base)": [[142, "armi.migration.base.SettingsMigration"]], "apply() (armi.migration.base.migration method)": [[142, "armi.migration.base.Migration.apply"]], "armi.migration.base": [[142, "module-armi.migration.base"]], "fromversion (armi.migration.base.migration attribute)": [[142, "armi.migration.base.Migration.fromVersion"]], "toversion (armi.migration.base.migration attribute)": [[142, "armi.migration.base.Migration.toVersion"]], "removecentersfromblueprints (class in armi.migration.m0_1_3)": [[143, "armi.migration.m0_1_3.RemoveCentersFromBlueprints"]], "updateelementalnuclides (class in armi.migration.m0_1_3)": [[143, "armi.migration.m0_1_3.UpdateElementalNuclides"]], "armi.migration.m0_1_3": [[143, "module-armi.migration.m0_1_3"]], "deletions (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[143, "armi.migration.m0_1_3.UpdateElementalNuclides.deletions"]], "fromversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[143, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.fromVersion"]], "fromversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[143, "armi.migration.m0_1_3.UpdateElementalNuclides.fromVersion"]], "swaps (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[143, "armi.migration.m0_1_3.UpdateElementalNuclides.swaps"]], "toversion (armi.migration.m0_1_3.removecentersfromblueprints attribute)": [[143, "armi.migration.m0_1_3.RemoveCentersFromBlueprints.toVersion"]], "toversion (armi.migration.m0_1_3.updateelementalnuclides attribute)": [[143, "armi.migration.m0_1_3.UpdateElementalNuclides.toVersion"]], "convertalphanumlocationsettingstonum (class in armi.migration.m0_1_6)": [[144, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum"]], "armi.migration.m0_1_6": [[144, "module-armi.migration.m0_1_6"]], "fromversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[144, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.fromVersion"]], "getindicesfromdif3dstylelocatorlabel() (in module armi.migration.m0_1_6)": [[144, "armi.migration.m0_1_6.getIndicesFromDIF3DStyleLocatorLabel"]], "toversion (armi.migration.m0_1_6.convertalphanumlocationsettingstonum attribute)": [[144, "armi.migration.m0_1_6.ConvertAlphanumLocationSettingsToNum.toVersion"]], "armi.migration.tests": [[145, "module-armi.migration.tests"]], "testmigration (class in armi.migration.tests.test_m0_1_6)": [[146, "armi.migration.tests.test_m0_1_6.TestMigration"]], "armi.migration.tests.test_m0_1_6": [[146, "module-armi.migration.tests.test_m0_1_6"]], "test_locationlabelmigration() (armi.migration.tests.test_m0_1_6.testmigration method)": [[146, "armi.migration.tests.test_m0_1_6.TestMigration.test_locationLabelMigration"]], "testmigrationbases (class in armi.migration.tests.test_migration_base)": [[147, "armi.migration.tests.test_migration_base.TestMigrationBases"]], "testsettingsmigration (class in armi.migration.tests.test_migration_base)": [[147, "armi.migration.tests.test_migration_base.TestSettingsMigration"]], "armi.migration.tests.test_migration_base": [[147, "module-armi.migration.tests.test_migration_base"]], "test_basic_validation() (armi.migration.tests.test_migration_base.testmigrationbases method)": [[147, "armi.migration.tests.test_migration_base.TestMigrationBases.test_basic_validation"]], "test_loadstreamfrompath() (armi.migration.tests.test_migration_base.testsettingsmigration method)": [[147, "armi.migration.tests.test_migration_base.TestSettingsMigration.test_loadStreamFromPath"]], "distributestateaction (class in armi.mpiactions)": [[148, "armi.mpiActions.DistributeStateAction"]], "distributionaction (class in armi.mpiactions)": [[148, "armi.mpiActions.DistributionAction"]], "mpiaction (class in armi.mpiactions)": [[148, "armi.mpiActions.MpiAction"]], "mpiactionerror": [[148, "armi.mpiActions.MpiActionError"]], "armi.mpiactions": [[148, "module-armi.mpiActions"]], "broadcast() (armi.mpiactions.mpiaction method)": [[148, "armi.mpiActions.MpiAction.broadcast"]], "gather() (armi.mpiactions.mpiaction method)": [[148, "armi.mpiActions.MpiAction.gather"]], "invoke() (armi.mpiactions.mpiaction method)": [[148, "armi.mpiActions.MpiAction.invoke"]], "invokeasmaster() (armi.mpiactions.mpiaction class method)": [[148, "armi.mpiActions.MpiAction.invokeAsMaster"]], "invokehook() (armi.mpiactions.distributestateaction method)": [[148, "armi.mpiActions.DistributeStateAction.invokeHook"]], "invokehook() (armi.mpiactions.distributionaction method)": [[148, "armi.mpiActions.DistributionAction.invokeHook"]], "invokehook() (armi.mpiactions.mpiaction method)": [[148, "armi.mpiActions.MpiAction.invokeHook"]], "mpiflatten() (armi.mpiactions.mpiaction static method)": [[148, "armi.mpiActions.MpiAction.mpiFlatten"]], "mpiiter() (armi.mpiactions.mpiaction static method)": [[148, "armi.mpiActions.MpiAction.mpiIter"]], "parallel (armi.mpiactions.mpiaction property)": [[148, "armi.mpiActions.MpiAction.parallel"]], "runactions() (in module armi.mpiactions)": [[148, "armi.mpiActions.runActions"]], "runactionsinserial() (in module armi.mpiactions)": [[148, "armi.mpiActions.runActionsInSerial"]], "armi.nucdirectory": [[149, "module-armi.nucDirectory"]], "actinide (armi.nucdirectory.elements.chemicalgroup attribute)": [[150, "armi.nucDirectory.elements.ChemicalGroup.ACTINIDE"]], "alkaline_earth_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[150, "armi.nucDirectory.elements.ChemicalGroup.ALKALINE_EARTH_METAL"]], "alkali_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[150, "armi.nucDirectory.elements.ChemicalGroup.ALKALI_METAL"]], "chemicalgroup (class in armi.nucdirectory.elements)": [[150, "armi.nucDirectory.elements.ChemicalGroup"]], "chemicalphase (class in armi.nucdirectory.elements)": [[150, "armi.nucDirectory.elements.ChemicalPhase"]], "element (class in armi.nucdirectory.elements)": [[150, "armi.nucDirectory.elements.Element"]], "gas (armi.nucdirectory.elements.chemicalphase attribute)": [[150, "armi.nucDirectory.elements.ChemicalPhase.GAS"]], "halogen (armi.nucdirectory.elements.chemicalgroup attribute)": [[150, "armi.nucDirectory.elements.ChemicalGroup.HALOGEN"]], "lanthanide (armi.nucdirectory.elements.chemicalgroup attribute)": [[150, "armi.nucDirectory.elements.ChemicalGroup.LANTHANIDE"]], "liquid (armi.nucdirectory.elements.chemicalphase attribute)": [[150, "armi.nucDirectory.elements.ChemicalPhase.LIQUID"]], "metalloid (armi.nucdirectory.elements.chemicalgroup attribute)": [[150, "armi.nucDirectory.elements.ChemicalGroup.METALLOID"]], "noble_gas (armi.nucdirectory.elements.chemicalgroup attribute)": [[150, "armi.nucDirectory.elements.ChemicalGroup.NOBLE_GAS"]], "nonmetal (armi.nucdirectory.elements.chemicalgroup attribute)": [[150, "armi.nucDirectory.elements.ChemicalGroup.NONMETAL"]], "post_transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[150, "armi.nucDirectory.elements.ChemicalGroup.POST_TRANSITION_METAL"]], "solid (armi.nucdirectory.elements.chemicalphase attribute)": [[150, "armi.nucDirectory.elements.ChemicalPhase.SOLID"]], "transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[150, "armi.nucDirectory.elements.ChemicalGroup.TRANSITION_METAL"]], "unknown (armi.nucdirectory.elements.chemicalgroup attribute)": [[150, "armi.nucDirectory.elements.ChemicalGroup.UNKNOWN"]], "unknown (armi.nucdirectory.elements.chemicalphase attribute)": [[150, "armi.nucDirectory.elements.ChemicalPhase.UNKNOWN"]], "addglobalelement() (in module armi.nucdirectory.elements)": [[150, "armi.nucDirectory.elements.addGlobalElement"]], "append() (armi.nucdirectory.elements.element method)": [[150, "armi.nucDirectory.elements.Element.append"]], "armi.nucdirectory.elements": [[150, "module-armi.nucDirectory.elements"]], "destroyglobalelements() (in module armi.nucdirectory.elements)": [[150, "armi.nucDirectory.elements.destroyGlobalElements"]], "factory() (in module armi.nucdirectory.elements)": [[150, "armi.nucDirectory.elements.factory"]], "getelementz() (in module armi.nucdirectory.elements)": [[150, "armi.nucDirectory.elements.getElementZ"]], "getelementsbychemicalgroup() (in module armi.nucdirectory.elements)": [[150, "armi.nucDirectory.elements.getElementsByChemicalGroup"]], "getelementsbychemicalphase() (in module armi.nucdirectory.elements)": [[150, "armi.nucDirectory.elements.getElementsByChemicalPhase"]], "getname() (in module armi.nucdirectory.elements)": [[150, "armi.nucDirectory.elements.getName"]], "getnaturalisotopics() (armi.nucdirectory.elements.element method)": [[150, "armi.nucDirectory.elements.Element.getNaturalIsotopics"]], "getsymbol() (in module armi.nucdirectory.elements)": [[150, "armi.nucDirectory.elements.getSymbol"]], "isheavymetal() (armi.nucdirectory.elements.element method)": [[150, "armi.nucDirectory.elements.Element.isHeavyMetal"]], "isnaturallyoccurring() (armi.nucdirectory.elements.element method)": [[150, "armi.nucDirectory.elements.Element.isNaturallyOccurring"]], "armi.nucdirectory.nucdir": [[151, "module-armi.nucDirectory.nucDir"]], "getatomicweight() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.getAtomicWeight"]], "getelementname() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.getElementName"]], "getelementsymbol() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.getElementSymbol"]], "getmc2label() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.getMc2Label"]], "getnaturalisotopics() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.getNaturalIsotopics"]], "getnaturalmassisotopics() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.getNaturalMassIsotopics"]], "getnuclide() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.getNuclide"]], "getnuclidefromname() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.getNuclideFromName"]], "getnuclidenames() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.getNuclideNames"]], "getnuclides() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.getNuclides"]], "getthresholddisplacementenergy() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.getThresholdDisplacementEnergy"]], "isfissile() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.isFissile"]], "isheavymetal() (in module armi.nucdirectory.nucdir)": [[151, "armi.nucDirectory.nucDir.isHeavyMetal"]], "decay (armi.nucdirectory.nuclidebases.inuclide attribute)": [[152, "armi.nucDirectory.nuclideBases.INuclide.DECAY"]], "dummynuclidebase (class in armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.DummyNuclideBase"]], "imcnpnuclide (class in armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.IMcnpNuclide"]], "inuclide (class in armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.INuclide"]], "lumpnuclidebase (class in armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.LumpNuclideBase"]], "naturalnuclidebase (class in armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.NaturalNuclideBase"]], "nuclidebase (class in armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.NuclideBase"]], "nuclideinterface (class in armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.NuclideInterface"]], "nuclidewrapper (class in armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.NuclideWrapper"]], "spontaneous_fission (armi.nucdirectory.nuclidebases.inuclide attribute)": [[152, "armi.nucDirectory.nuclideBases.INuclide.SPONTANEOUS_FISSION"]], "transmutation (armi.nucdirectory.nuclidebases.inuclide attribute)": [[152, "armi.nucDirectory.nuclideBases.INuclide.TRANSMUTATION"]], "addglobalnuclide() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.addGlobalNuclide"]], "addnuclidebases() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.addNuclideBases"]], "armi.nucdirectory.nuclidebases": [[152, "module-armi.nucDirectory.nuclideBases"]], "changelabel() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.changeLabel"]], "destroyglobalnuclides() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.destroyGlobalNuclides"]], "factory() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.factory"]], "fissile (armi.nucdirectory.nuclidebases.inuclide attribute)": [[152, "armi.nucDirectory.nuclideBases.INuclide.fissile"]], "fromname() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.fromName"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[152, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NuclideBase.getAAAZZZSId"]], "getdatabasename() (armi.nucdirectory.nuclidebases.inuclide method)": [[152, "armi.nucDirectory.nuclideBases.INuclide.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[152, "armi.nucDirectory.nuclideBases.NuclideInterface.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[152, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDatabaseName"]], "getdecay() (armi.nucdirectory.nuclidebases.inuclide method)": [[152, "armi.nucDirectory.nuclideBases.INuclide.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[152, "armi.nucDirectory.nuclideBases.NuclideInterface.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[152, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDecay"]], "getdepletablenuclides() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.getDepletableNuclides"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getEndfMatNum"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NuclideBase.getEndfMatNum"]], "getisotopics() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.getIsotopics"]], "getmcc2id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[152, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[152, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc2Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[152, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[152, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc3Id"]], "getmcnpid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[152, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NuclideBase.getMcnpId"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.inuclide method)": [[152, "armi.nucDirectory.nuclideBases.INuclide.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[152, "armi.nucDirectory.nuclideBases.NuclideInterface.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[152, "armi.nucDirectory.nuclideBases.NuclideWrapper.getNaturalIsotopics"]], "getserpentid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.NuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[152, "armi.nucDirectory.nuclideBases.NuclideInterface.getSerpentId"]], "imposeburnchain() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.imposeBurnChain"]], "initreachableactivenuclidesthroughburnchain() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.initReachableActiveNuclidesThroughBurnChain"]], "isfissile() (armi.nucdirectory.nuclidebases.inuclide method)": [[152, "armi.nucDirectory.nuclideBases.INuclide.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[152, "armi.nucDirectory.nuclideBases.NuclideInterface.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[152, "armi.nucDirectory.nuclideBases.NuclideWrapper.isFissile"]], "isheavymetal() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.DummyNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.inuclide method)": [[152, "armi.nucDirectory.nuclideBases.INuclide.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[152, "armi.nucDirectory.nuclideBases.LumpNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[152, "armi.nucDirectory.nuclideBases.NuclideInterface.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[152, "armi.nucDirectory.nuclideBases.NuclideWrapper.isHeavyMetal"]], "ismonoisotopicelement() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.isMonoIsotopicElement"]], "isotopes() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.isotopes"]], "name (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[152, "armi.nucDirectory.nuclideBases.NuclideWrapper.name"]], "readmccnuclidedata() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.readMCCNuclideData"]], "single() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.single"]], "updatenuclidebasesforspecialcases() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.updateNuclideBasesForSpecialCases"]], "weight (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[152, "armi.nucDirectory.nuclideBases.NuclideWrapper.weight"]], "where() (in module armi.nucdirectory.nuclidebases)": [[152, "armi.nucDirectory.nuclideBases.where"]], "armi.nucdirectory.tests": [[153, "module-armi.nucDirectory.tests"]], "testelement (class in armi.nucdirectory.tests.test_elements)": [[154, "armi.nucDirectory.tests.test_elements.TestElement"]], "armi.nucdirectory.tests.test_elements": [[154, "module-armi.nucDirectory.tests.test_elements"]], "test_abundancesaddtoone() (armi.nucdirectory.tests.test_elements.testelement method)": [[154, "armi.nucDirectory.tests.test_elements.TestElement.test_abundancesAddToOne"]], "test_element_addexistingelementfails() (armi.nucdirectory.tests.test_elements.testelement method)": [[154, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addExistingElementFails"]], "test_element_addedelementappearsinelementlist() (armi.nucdirectory.tests.test_elements.testelement method)": [[154, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addedElementAppearsInElementList"]], "test_element_elementbynamereturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[154, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByNameReturnsElement"]], "test_element_elementbysymbolreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[154, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementBySymbolReturnsElement"]], "test_element_elementbyzreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[154, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByZReturnsElement"]], "test_element_getnatrualisotpicsonlyretrievesabundacegt0() (armi.nucdirectory.tests.test_elements.testelement method)": [[154, "armi.nucDirectory.tests.test_elements.TestElement.test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"]], "test_element_isnaturallyoccurring() (armi.nucdirectory.tests.test_elements.testelement method)": [[154, "armi.nucDirectory.tests.test_elements.TestElement.test_element_isNaturallyOccurring"]], "test_elements_elementbulkproperties() (armi.nucdirectory.tests.test_elements.testelement method)": [[154, "armi.nucDirectory.tests.test_elements.TestElement.test_elements_elementBulkProperties"]], "test_isheavymetal() (armi.nucdirectory.tests.test_elements.testelement method)": [[154, "armi.nucDirectory.tests.test_elements.TestElement.test_isHeavyMetal"]], "testnucdirectory (class in armi.nucdirectory.tests.test_nucdirectory)": [[155, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory"]], "armi.nucdirectory.tests.test_nucdirectory": [[155, "module-armi.nucDirectory.tests.test_nucDirectory"]], "test_getdisplacementenergy() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[155, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_getDisplacementEnergy"]], "test_nucdir_getnameforolddashednames() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[155, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNameForOldDashedNames"]], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclide() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[155, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"]], "test_nucdir_getnuclidesfromforbadname() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[155, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclidesFromForBadName"]], "testaaazzzsid (class in armi.nucdirectory.tests.test_nuclidebases)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId"]], "testnuclide (class in armi.nucdirectory.tests.test_nuclidebases)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide"]], "armi.nucdirectory.tests.test_nuclidebases": [[156, "module-armi.nucDirectory.tests.test_nuclideBases"]], "test_aaazzzsnamegenerator() (armi.nucdirectory.tests.test_nuclidebases.testaaazzzsid method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestAAAZZZSId.test_AAAZZZSNameGenerator"]], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"]], "test_naturalnuclidebase_getnatrualisotpics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclideBase_getNatrualIsotpics"]], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotopes() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"]], "test_nonmc2nuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NonMc2Nuclide"]], "test_curiedefinitionwithra226() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_curieDefinitionWithRa226"]], "test_getdecay() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getDecay"]], "test_getendfmatnum() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getEndfMatNum"]], "test_kryptondecayconstants() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_kryptonDecayConstants"]], "test_loadmcc2data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc2Data"]], "test_loadmcc3data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc3Data"]], "test_nucbase_allabundancesaddtoone() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBase_AllAbundancesAddToOne"]], "test_nucbases_alldatabasenamesareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllDatabaseNamesAreUnique"]], "test_nucbases_alllabelsareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllLabelsAreUnique"]], "test_nucbases_am242m() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Am242m"]], "test_nucbases_mc2elementals() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Mc2Elementals"]], "test_nucbases_negativezraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_NegativeZRaisesException"]], "test_nucbases_z295raisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Z295RaisesException"]], "test_nucbases_databasenamesstartwith_n() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_databaseNamesStartWith_n"]], "test_nucbases_fromnamebadnameraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_fromNameBadNameRaisesException"]], "test_nucbases_imposeburnchaindecaybulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainDecayBulkStatistics"]], "test_nucbases_imposeburnchaintransmutationbulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainTransmutationBulkStatistics"]], "test_nucbases_imposeburn_nusf() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurn_nuSF"]], "test_nucbases_isheavymetal() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_isHeavyMetal"]], "test_nucbases_labelandnamecollsionsareforsamenuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_labelAndNameCollsionsAreForSameNuclide"]], "test_nucbases_singlefailswithmultiplematches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithMultipleMatches"]], "test_nucbases_singlefailswithnomatches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithNoMatches"]], "test_nucbases_singleisprettyspecific() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[156, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleIsPrettySpecific"]], "testthermalscattering (class in armi.nucdirectory.tests.test_thermalscattering)": [[157, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering"]], "armi.nucdirectory.tests.test_thermalscattering": [[157, "module-armi.nucDirectory.tests.test_thermalScattering"]], "buildblockwithtsl() (in module armi.nucdirectory.tests.test_thermalscattering)": [[157, "armi.nucDirectory.tests.test_thermalScattering.buildBlockWithTSL"]], "getnuclidethermalscatteringdata() (in module armi.nucdirectory.tests.test_thermalscattering)": [[157, "armi.nucDirectory.tests.test_thermalScattering.getNuclideThermalScatteringData"]], "test_acecompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[157, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACECompound"]], "test_aceelementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[157, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEElementInCompound"]], "test_aceisotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[157, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEIsotope"]], "test_endf8compound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[157, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Compound"]], "test_endf8elementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[157, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8ElementInCompound"]], "test_endf8isotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[157, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Isotope"]], "test_failonmultiple() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[157, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_failOnMultiple"]], "test_graphiteonreactor() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[157, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_graphiteOnReactor"]], "decaymodetests (class in armi.nucdirectory.tests.test_transmutations)": [[158, "armi.nucDirectory.tests.test_transmutations.DecayModeTests"]], "transmutationtests (class in armi.nucdirectory.tests.test_transmutations)": [[158, "armi.nucDirectory.tests.test_transmutations.TransmutationTests"]], "armi.nucdirectory.tests.test_transmutations": [[158, "module-armi.nucDirectory.tests.test_transmutations"]], "randomstring() (in module armi.nucdirectory.tests.test_transmutations)": [[158, "armi.nucDirectory.tests.test_transmutations.randomString"]], "test_decaymode_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[158, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_invalidReactionTypes"]], "test_decaymode_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[158, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_validReactionTypes"]], "test_transmutation_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[158, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_invalidReactionTypes"]], "test_transmutation_productparticle() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[158, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_productParticle"]], "test_transmutation_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[158, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_validReactionTypes"]], "thermalscattering (class in armi.nucdirectory.thermalscattering)": [[159, "armi.nucDirectory.thermalScattering.ThermalScattering"]], "armi.nucdirectory.thermalscattering": [[159, "module-armi.nucDirectory.thermalScattering"]], "factory() (in module armi.nucdirectory.thermalscattering)": [[159, "armi.nucDirectory.thermalScattering.factory"]], "getsubjectnuclidebases() (armi.nucdirectory.thermalscattering.thermalscattering method)": [[159, "armi.nucDirectory.thermalScattering.ThermalScattering.getSubjectNuclideBases"]], "decaymode (class in armi.nucdirectory.transmutations)": [[160, "armi.nucDirectory.transmutations.DecayMode"]], "transmutable (class in armi.nucdirectory.transmutations)": [[160, "armi.nucDirectory.transmutations.Transmutable"]], "transmutation (class in armi.nucdirectory.transmutations)": [[160, "armi.nucDirectory.transmutations.Transmutation"]], "armi.nucdirectory.transmutations": [[160, "module-armi.nucDirectory.transmutations"]], "getpreferredproduct() (armi.nucdirectory.transmutations.transmutable method)": [[160, "armi.nucDirectory.transmutations.Transmutable.getPreferredProduct"]], "armi.nucleardataio": [[161, "module-armi.nuclearDataIO"]], "getexpectedcompxsfilename() (in module armi.nucleardataio)": [[161, "armi.nuclearDataIO.getExpectedCOMPXSFileName"]], "getexpectedgamisofilename() (in module armi.nucleardataio)": [[161, "armi.nuclearDataIO.getExpectedGAMISOFileName"]], "getexpectedisotxsfilename() (in module armi.nucleardataio)": [[161, "armi.nuclearDataIO.getExpectedISOTXSFileName"]], "getexpectedpmatrxfilename() (in module armi.nucleardataio)": [[161, "armi.nuclearDataIO.getExpectedPMATRXFileName"]], "armi.nucleardataio.cccc": [[162, "module-armi.nuclearDataIO.cccc"]], "asciirecordreader (class in armi.nucleardataio.cccc.cccc)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader"]], "asciirecordwriter (class in armi.nucleardataio.cccc.cccc)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter"]], "binaryrecordreader (class in armi.nucleardataio.cccc.cccc)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader"]], "binaryrecordwriter (class in armi.nucleardataio.cccc.cccc)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter"]], "datacontainer (class in armi.nucleardataio.cccc.cccc)": [[163, "armi.nuclearDataIO.cccc.cccc.DataContainer"]], "implicit_int (in module armi.nucleardataio.cccc.cccc)": [[163, "armi.nuclearDataIO.cccc.cccc.IMPLICIT_INT"]], "iorecord (class in armi.nucleardataio.cccc.cccc)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord"]], "stream (class in armi.nucleardataio.cccc.cccc)": [[163, "armi.nuclearDataIO.cccc.cccc.Stream"]], "streamwithdatacontainer (class in armi.nucleardataio.cccc.cccc)": [[163, "armi.nuclearDataIO.cccc.cccc.StreamWithDataContainer"]], "armi.nucleardataio.cccc.cccc": [[163, "module-armi.nuclearDataIO.cccc.cccc"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.close"]], "count (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.count"]], "createrecord() (armi.nucleardataio.cccc.cccc.stream method)": [[163, "armi.nuclearDataIO.cccc.cccc.Stream.createRecord"]], "getblockbandwidth() (in module armi.nucleardataio.cccc.cccc)": [[163, "armi.nuclearDataIO.cccc.cccc.getBlockBandwidth"]], "maxsize (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.maxsize"]], "open() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.open"]], "readascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[163, "armi.nuclearDataIO.cccc.cccc.Stream.readAscii"]], "readbinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[163, "armi.nuclearDataIO.cccc.cccc.Stream.readBinary"]], "readwrite() (armi.nucleardataio.cccc.cccc.stream method)": [[163, "armi.nuclearDataIO.cccc.cccc.Stream.readWrite"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.rwBool"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDouble"]], "rwdoublematrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDoubleMatrix"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.rwFloat"]], "rwimplicitlytypedmap() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.rwImplicitlyTypedMap"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.rwInt"]], "rwintmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.rwIntMatrix"]], "rwlist() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.rwList"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwLong"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwLong"]], "rwmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.rwMatrix"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[163, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.iorecord method)": [[163, "armi.nuclearDataIO.cccc.cccc.IORecord.rwString"]], "writeascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[163, "armi.nuclearDataIO.cccc.cccc.Stream.writeAscii"]], "writebinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[163, "armi.nuclearDataIO.cccc.cccc.Stream.writeBinary"]], "compxsregion (class in armi.nucleardataio.cccc.compxs)": [[164, "armi.nuclearDataIO.cccc.compxs.CompxsRegion"]], "allocatexs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[164, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.allocateXS"]], "armi.nucleardataio.cccc.compxs": [[164, "module-armi.nuclearDataIO.cccc.compxs"]], "compare() (in module armi.nucleardataio.cccc.compxs)": [[164, "armi.nuclearDataIO.cccc.compxs.compare"]], "getxs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[164, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.getXS"]], "initmetadata() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[164, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.initMetadata"]], "isfissile (armi.nucleardataio.cccc.compxs.compxsregion property)": [[164, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.isFissile"]], "makescatteringmatrices() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[164, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.makeScatteringMatrices"]], "merge() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[164, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.merge"]], "dif3ddata (class in armi.nucleardataio.cccc.dif3d)": [[165, "armi.nuclearDataIO.cccc.dif3d.Dif3dData"]], "dif3dstream (class in armi.nucleardataio.cccc.dif3d)": [[165, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream"]], "armi.nucleardataio.cccc.dif3d": [[165, "module-armi.nuclearDataIO.cccc.dif3d"]], "readwrite() (armi.nucleardataio.cccc.dif3d.dif3dstream method)": [[165, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream.readWrite"]], "delayedneutrondata (class in armi.nucleardataio.cccc.dlayxs)": [[166, "armi.nuclearDataIO.cccc.dlayxs.DelayedNeutronData"]], "dlayxs (class in armi.nucleardataio.cccc.dlayxs)": [[166, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs"]], "dlayxsio (class in armi.nucleardataio.cccc.dlayxs)": [[166, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO"]], "g (armi.nucleardataio.cccc.dlayxs.dlayxs property)": [[166, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.G"]], "armi.nucleardataio.cccc.dlayxs": [[166, "module-armi.nuclearDataIO.cccc.dlayxs"]], "compare() (in module armi.nucleardataio.cccc.dlayxs)": [[166, "armi.nuclearDataIO.cccc.dlayxs.compare"]], "generateaveragedelayedneutronconstants() (armi.nucleardataio.cccc.dlayxs.dlayxs method)": [[166, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.generateAverageDelayedNeutronConstants"]], "readascii() (in module armi.nucleardataio.cccc.dlayxs)": [[166, "armi.nuclearDataIO.cccc.dlayxs.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.dlayxs)": [[166, "armi.nuclearDataIO.cccc.dlayxs.readBinary"]], "readwrite() (armi.nucleardataio.cccc.dlayxs.dlayxsio method)": [[166, "armi.nuclearDataIO.cccc.dlayxs.DlayxsIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.dlayxs)": [[166, "armi.nuclearDataIO.cccc.dlayxs.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.dlayxs)": [[166, "armi.nuclearDataIO.cccc.dlayxs.writeBinary"]], "fixsrc (class in armi.nucleardataio.cccc.fixsrc)": [[167, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC"]], "armi.nucleardataio.cccc.fixsrc": [[167, "module-armi.nuclearDataIO.cccc.fixsrc"]], "readbinary() (in module armi.nucleardataio.cccc.fixsrc)": [[167, "armi.nuclearDataIO.cccc.fixsrc.readBinary"]], "readwrite() (armi.nucleardataio.cccc.fixsrc.fixsrc method)": [[167, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC.readWrite"]], "writebinary() (in module armi.nucleardataio.cccc.fixsrc)": [[167, "armi.nuclearDataIO.cccc.fixsrc.writeBinary"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.gamiso)": [[168, "armi.nuclearDataIO.cccc.gamiso.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.gamiso": [[168, "module-armi.nuclearDataIO.cccc.gamiso"]], "compare() (in module armi.nucleardataio.cccc.gamiso)": [[168, "armi.nuclearDataIO.cccc.gamiso.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.gamiso)": [[168, "armi.nuclearDataIO.cccc.gamiso.compareNuclideXS"]], "geodstdata (class in armi.nucleardataio.cccc.geodst)": [[169, "armi.nuclearDataIO.cccc.geodst.GeodstData"]], "geodststream (class in armi.nucleardataio.cccc.geodst)": [[169, "armi.nuclearDataIO.cccc.geodst.GeodstStream"]], "armi.nucleardataio.cccc.geodst": [[169, "module-armi.nuclearDataIO.cccc.geodst"]], "readwrite() (armi.nucleardataio.cccc.geodst.geodststream method)": [[169, "armi.nuclearDataIO.cccc.geodst.GeodstStream.readWrite"]], "isotxsio (class in armi.nucleardataio.cccc.isotxs)": [[170, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.isotxs)": [[170, "armi.nuclearDataIO.cccc.isotxs.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.isotxs": [[170, "module-armi.nuclearDataIO.cccc.isotxs"]], "compare() (in module armi.nucleardataio.cccc.isotxs)": [[170, "armi.nuclearDataIO.cccc.isotxs.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.isotxs)": [[170, "armi.nuclearDataIO.cccc.isotxs.compareNuclideXS"]], "compareset() (in module armi.nucleardataio.cccc.isotxs)": [[170, "armi.nuclearDataIO.cccc.isotxs.compareSet"]], "readwrite() (armi.nucleardataio.cccc.isotxs.isotxsio method)": [[170, "armi.nuclearDataIO.cccc.isotxs.IsotxsIO.readWrite"]], "labelsdata (class in armi.nucleardataio.cccc.labels)": [[171, "armi.nuclearDataIO.cccc.labels.LabelsData"]], "labelsstream (class in armi.nucleardataio.cccc.labels)": [[171, "armi.nuclearDataIO.cccc.labels.LabelsStream"]], "armi.nucleardataio.cccc.labels": [[171, "module-armi.nuclearDataIO.cccc.labels"]], "readwrite() (armi.nucleardataio.cccc.labels.labelsstream method)": [[171, "armi.nuclearDataIO.cccc.labels.LabelsStream.readWrite"]], "nhflux (class in armi.nucleardataio.cccc.nhflux)": [[172, "armi.nuclearDataIO.cccc.nhflux.NHFLUX"]], "nafluxstream (class in armi.nucleardataio.cccc.nhflux)": [[172, "armi.nuclearDataIO.cccc.nhflux.NafluxStream"]], "nafluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[172, "armi.nuclearDataIO.cccc.nhflux.NafluxStreamVariant"]], "nhfluxstream (class in armi.nucleardataio.cccc.nhflux)": [[172, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream"]], "nhfluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[172, "armi.nuclearDataIO.cccc.nhflux.NhfluxStreamVariant"]], "armi.nucleardataio.cccc.nhflux": [[172, "module-armi.nuclearDataIO.cccc.nhflux"]], "fluxmoments (armi.nucleardataio.cccc.nhflux.nhflux property)": [[172, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.fluxMoments"]], "getnhfluxreader() (in module armi.nucleardataio.cccc.nhflux)": [[172, "armi.nuclearDataIO.cccc.nhflux.getNhfluxReader"]], "partialcurrentshex (armi.nucleardataio.cccc.nhflux.nhflux property)": [[172, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex"]], "partialcurrentshex_ext (armi.nucleardataio.cccc.nhflux.nhflux property)": [[172, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex_ext"]], "partialcurrentsz (armi.nucleardataio.cccc.nhflux.nhflux property)": [[172, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsZ"]], "readwrite() (armi.nucleardataio.cccc.nhflux.nhfluxstream method)": [[172, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream.readWrite"]], "pmatrxio (class in armi.nucleardataio.cccc.pmatrx)": [[173, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.pmatrx)": [[173, "armi.nuclearDataIO.cccc.pmatrx.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.pmatrx": [[173, "module-armi.nuclearDataIO.cccc.pmatrx"]], "compare() (in module armi.nucleardataio.cccc.pmatrx)": [[173, "armi.nuclearDataIO.cccc.pmatrx.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.pmatrx)": [[173, "armi.nuclearDataIO.cccc.pmatrx.compareNuclideXS"]], "readascii() (in module armi.nucleardataio.cccc.pmatrx)": [[173, "armi.nuclearDataIO.cccc.pmatrx.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.pmatrx)": [[173, "armi.nuclearDataIO.cccc.pmatrx.readBinary"]], "readwrite() (armi.nucleardataio.cccc.pmatrx.pmatrxio method)": [[173, "armi.nuclearDataIO.cccc.pmatrx.PmatrxIO.readWrite"]], "writeascii() (in module armi.nucleardataio.cccc.pmatrx)": [[173, "armi.nuclearDataIO.cccc.pmatrx.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.pmatrx)": [[173, "armi.nuclearDataIO.cccc.pmatrx.writeBinary"]], "pwdintdata (class in armi.nucleardataio.cccc.pwdint)": [[174, "armi.nuclearDataIO.cccc.pwdint.PwdintData"]], "pwdintstream (class in armi.nucleardataio.cccc.pwdint)": [[174, "armi.nuclearDataIO.cccc.pwdint.PwdintStream"]], "armi.nucleardataio.cccc.pwdint": [[174, "module-armi.nuclearDataIO.cccc.pwdint"]], "readwrite() (armi.nucleardataio.cccc.pwdint.pwdintstream method)": [[174, "armi.nuclearDataIO.cccc.pwdint.PwdintStream.readWrite"]], "atfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[175, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream"]], "rtfluxdata (class in armi.nucleardataio.cccc.rtflux)": [[175, "armi.nuclearDataIO.cccc.rtflux.RtfluxData"]], "rtfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[175, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream"]], "armi.nucleardataio.cccc.rtflux": [[175, "module-armi.nuclearDataIO.cccc.rtflux"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.atfluxstream method)": [[175, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream.getEnergyGroupIndex"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[175, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.getEnergyGroupIndex"]], "getfdfluxreader() (in module armi.nucleardataio.cccc.rtflux)": [[175, "armi.nuclearDataIO.cccc.rtflux.getFDFluxReader"]], "groupfluxes (armi.nucleardataio.cccc.rtflux.rtfluxdata attribute)": [[175, "armi.nuclearDataIO.cccc.rtflux.RtfluxData.groupFluxes"]], "readwrite() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[175, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.readWrite"]], "converged (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[176, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGED"]], "converging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[176, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGING"]], "convergence (class in armi.nucleardataio.cccc.rzflux)": [[176, "armi.nuclearDataIO.cccc.rzflux.Convergence"]], "diverging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[176, "armi.nuclearDataIO.cccc.rzflux.Convergence.DIVERGING"]], "no_iterations (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[176, "armi.nuclearDataIO.cccc.rzflux.Convergence.NO_ITERATIONS"]], "rzfluxdata (class in armi.nucleardataio.cccc.rzflux)": [[176, "armi.nuclearDataIO.cccc.rzflux.RzfluxData"]], "rzfluxstream (class in armi.nucleardataio.cccc.rzflux)": [[176, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream"]], "armi.nucleardataio.cccc.rzflux": [[176, "module-armi.nuclearDataIO.cccc.rzflux"]], "readwrite() (armi.nucleardataio.cccc.rzflux.rzfluxstream method)": [[176, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream.readWrite"]], "armi.nucleardataio.cccc.tests": [[177, "module-armi.nuclearDataIO.cccc.tests"]], "ccccasciirecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[178, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccAsciiRecordTests"]], "ccccbinaryrecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[178, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests"]], "cccciostreamtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[178, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests"]], "armi.nucleardataio.cccc.tests.test_cccc": [[178, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "test_initwithfilemode() (armi.nucleardataio.cccc.tests.test_cccc.cccciostreamtests method)": [[178, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests.test_initWithFileMode"]], "test_notreadinganentirerecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[178, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_notReadingAnEntireRecordRaisesException"]], "test_readingbeyondrecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[178, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_readingBeyondRecordRaisesException"]], "test_writeandreadsimplefloatrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[178, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleFloatRecord"]], "test_writeandreadsimpleintegerrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[178, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleIntegerRecord"]], "test_writeandreadsimplestringrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[178, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleStringRecord"]], "testcompxs (class in armi.nucleardataio.cccc.tests.test_compxs)": [[179, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs"]], "armi.nucleardataio.cccc.tests.test_compxs": [[179, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "asciiwritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[179, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.asciiWritePath"]], "binarywritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[179, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.binaryWritePath"]], "test_asciirw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[179, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_asciiRW"]], "test_binaryrw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[179, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_binaryRW"]], "test_getcompxsfilename() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[179, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_getCOMPXSFileName"]], "test_librarydata() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[179, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_libraryData"]], "test_mergecompxslibraries() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[179, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_mergeCompxsLibraries"]], "test_regionprimaryxs() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[179, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_regionPrimaryXS"]], "test_totalscattermatrix() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[179, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_totalScatterMatrix"]], "testdif3demptyrecords (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[180, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords"]], "testdif3dsimplehexz (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[180, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz"]], "armi.nucleardataio.cccc.tests.test_dif3d": [[180, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "test__rw2drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[180, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw2DRecord"]], "test__rw3drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[180, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw3DRecord"]], "test__rw4drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[180, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw4DRecord"]], "test__rw5drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[180, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw5DRecord"]], "test__rwfile1drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[180, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFile1DRecord"]], "test__rwfileid() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[180, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFileID"]], "test_empty4and5records() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3demptyrecords method)": [[180, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords.test_empty4and5Records"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[180, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test_writeBinary"]], "dlayxstests (class in armi.nucleardataio.cccc.tests.test_dlayxs)": [[181, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests"]], "armi.nucleardataio.cccc.tests.test_dlayxs": [[181, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "test_endfvii1decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1DecayConstants"]], "test_endfvii1neutronsperfission() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1NeutronsPerFission"]], "test_nudelay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_NuDelay"]], "test_avg() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_avg"]], "test_chi_delay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delay"]], "test_chi_delaysumsto1() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delaySumsTo1"]], "test_compare() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_compare"]], "test_decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_decayConstants"]], "test_nuclides() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_nuclides"]], "test_writebinary_mcc3() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[181, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_writeBinary_mcc3"]], "testgamiso (class in armi.nucleardataio.cccc.tests.test_gamiso)": [[182, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso"]], "armi.nucleardataio.cccc.tests.test_gamiso": [[182, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "test_adddummynuclidestolibrary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[182, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_addDummyNuclidesToLibrary"]], "test_compare() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[182, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_compare"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[182, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_writeBinary"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_geodst)": [[183, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_geodst": [[183, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[183, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[183, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_writeGeodst"]], "isotxs_merge_tests (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests"]], "testisotxs (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs"]], "armi.nucleardataio.cccc.tests.test_isotxs": [[184, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "test_getgamisofilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getGAMISOFileName"]], "test_getisotxsfilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getISOTXSFileName"]], "test_getnuclide() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getNuclide"]], "test_getscatterweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatterWeights"]], "test_getscatteringweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatteringWeights"]], "test_isotxsdetaileddata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsDetailedData"]], "test_isotxsgeneraldata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsGeneralData"]], "test_mergemccv2filesremovesthefilewidechi() (armi.nucleardataio.cccc.tests.test_isotxs.isotxs_merge_tests method)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests.test_mergeMccV2FilesRemovesTheFileWideChi"]], "test_n2nisreactionbased() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_n2nIsReactionBased"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[184, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_writeBinary"]], "testlabels (class in armi.nucleardataio.cccc.tests.test_labels)": [[185, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels"]], "armi.nucleardataio.cccc.tests.test_labels": [[185, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "test_readlabelsbinary() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[185, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_readLabelsBinary"]], "test_writelabelsascii() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[185, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_writeLabelsAscii"]], "testnhflux (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[186, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux"]], "testnhfluxvariant (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[186, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant"]], "armi.nucleardataio.cccc.tests.test_nhflux": [[186, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[186, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fc"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[186, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fc"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[186, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fluxMoments"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[186, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fluxMoments"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[186, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_write"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[186, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_write"]], "test_xypartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[186, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_xyPartialCurrents"]], "test_zpartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[186, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_zPartialCurrents"]], "testpmatrx (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx"]], "testpmatrxnuclides (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides"]], "testproductionmatrix_fromwritten (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten"]], "testproductionmatrix_fromwrittenascii (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWrittenAscii"]], "armi.nucleardataio.cccc.tests.test_pmatrx": [[187, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "test_getpmatrxfilename() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_getPMATRXFileName"]], "test_nuclidedataisdifferent() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_nuclideDataIsDifferent"]], "test_pmatrxdoesnthavedoseconversionfactors() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxDoesntHaveDoseConversionFactors"]], "test_pmatrxgammaenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxGammaEnergies"]], "test_pmatrxneutronenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNeutronEnergies"]], "test_pmatrxnuclidedataaa() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAA"]], "test_pmatrxnuclidedataab() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAB"]], "test_pmatrxnuclidenames() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNuclideNames"]], "test_writtenisidenticaltooriginal() (armi.nucleardataio.cccc.tests.test_pmatrx.testproductionmatrix_fromwritten method)": [[187, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten.test_writtenIsIdenticalToOriginal"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_pwdint)": [[188, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_pwdint": [[188, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[188, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[188, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_writeGeodst"]], "testrtflux (class in armi.nucleardataio.cccc.tests.test_rtflux)": [[189, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux"]], "armi.nucleardataio.cccc.tests.test_rtflux": [[189, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "test_adjoint() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[189, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_adjoint"]], "test_readrtflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[189, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_readrtflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[189, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_rwAscii"]], "test_writertflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[189, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_writertflux"]], "testrzflux (class in armi.nucleardataio.cccc.tests.test_rzflux)": [[190, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux"]], "armi.nucleardataio.cccc.tests.test_rzflux": [[190, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "binaryfilesequal() (in module armi.nucleardataio.cccc.tests.test_rzflux)": [[190, "armi.nuclearDataIO.cccc.tests.test_rzflux.binaryFilesEqual"]], "test_readrzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_readRzflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_rwAscii"]], "test_writerzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[190, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_writeRzflux"]], "filemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[191, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata"]], "nuclidemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[191, "armi.nuclearDataIO.nuclearFileMetadata.NuclideMetadata"]], "nuclidexsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[191, "armi.nuclearDataIO.nuclearFileMetadata.NuclideXSMetadata"]], "regionxsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[191, "armi.nuclearDataIO.nuclearFileMetadata.RegionXSMetadata"]], "armi.nucleardataio.nuclearfilemetadata": [[191, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "update() (armi.nucleardataio.nuclearfilemetadata.filemetadata method)": [[191, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata.update"]], "armi.nucleardataio.tests": [[192, "module-armi.nuclearDataIO.tests"]], "mockblock (class in armi.nucleardataio.tests.test_xscollections)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock"]], "mockblueprints (class in armi.nucleardataio.tests.test_xscollections)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.MockBlueprints"]], "mockreactor (class in armi.nucleardataio.tests.test_xscollections)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.MockReactor"]], "testxscollections (class in armi.nucleardataio.tests.test_xscollections)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections"]], "armi.nucleardataio.tests.test_xscollections": [[193, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "getnuclidenumberdensities() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclideNumberDensities"]], "getnuclides() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclides"]], "getvolume() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getVolume"]], "paramcollectiontype (armi.nucleardataio.tests.test_xscollections.mockblock attribute)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.paramCollectionType"]], "r (armi.nucleardataio.tests.test_xscollections.mockblock property)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.r"]], "setnumberdensity() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.setNumberDensity"]], "test_collapsecrosssection() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_collapseCrossSection"]], "test_createmacrosfrommicros() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_createMacrosFromMicros"]], "test_generatetotalscatteringmatrix() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrix"]], "test_generatetotalscatteringmatrixwithmissingdata() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrixWithMissingData"]], "test_plotnucxs() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[193, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_plotNucXs"]], "combined_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_merge_Tests"]], "gamiso_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests"]], "isotxs_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests"]], "pmatrx_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests"]], "tempfilemixin (class in armi.nucleardataio.tests.test_xslibraries)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin"]], "testgetisotxsfilesinworkingdirectory (class in armi.nucleardataio.tests.test_xslibraries)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory"]], "testxslibrary (class in armi.nucleardataio.tests.test_xslibraries)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary"]], "armi.nucleardataio.tests.test_xslibraries": [[194, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "assert_contains_only() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.assert_contains_only"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getErrorType"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getLibAAPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getLibAA_ABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getLibABPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getLibLumpedPath"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getReadFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getWriteFunc"]], "testfilename (armi.nucleardataio.tests.test_xslibraries.tempfilemixin property)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin.testFileName"]], "test_canpickleandunpicklegamiso() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleGAMISO"]], "test_canpickleandunpickleisotxs() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleISOTXS"]], "test_canpickleandunpicklepmatrx() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpicklePMATRX"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.test_canRemoveIsotopes"]], "test_canwritegamisofromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteGamisoFromCombinedXSLibrary"]], "test_canwriteisotxsfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteIsotxsFromCombinedXSLibrary"]], "test_canwritepmatrxfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWritePmatrxFromCombinedXSLibrary"]], "test_cannotmergexslibswithdifferentgammagroupstructures() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "test_comparedifferentcomponentsofanxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareDifferentComponentsOfAnXSLibrary"]], "test_compareworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareWorks"]], "test_gamisolibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_gamisoLibraryAttributes"]], "test_getisotxsfileswithlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithLibrarySuffix"]], "test_getisotxsfileswithoutlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.testgetisotxsfilesinworkingdirectory method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestGetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithoutLibrarySuffix"]], "test_isotxslibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_isotxsLibraryAttributes"]], "test_mergeallxslibfiles() (armi.nucleardataio.tests.test_xslibraries.combined_merge_tests method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_merge_Tests.test_mergeAllXSLibFiles"]], "test_mergefailswithnonisotxsfiles() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeFailsWithNonIsotxsFiles"]], "test_mergexslibrarieswithdifferentdataworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeXSLibrariesWithDifferentDataWorks"]], "test_pmatrxlibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[194, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_pmatrxLibraryAttributes"]], "nuclidetests (class in armi.nucleardataio.tests.test_xsnuclides)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests"]], "armi.nucleardataio.tests.test_xsnuclides": [[195, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "test_getmicroxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getMicroXS"]], "test_getxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getXS"]], "test_nuclide_2dxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_2dXsArrangementIsCorrect"]], "test_nuclide_createfromlabelfailsonbadname() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_createFromLabelFailsOnBadName"]], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"]], "test_nuclide_isoaadetails() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_isoaaDetails"]], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclide() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"]], "test_nuclide_newlabelsdontcausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_newLabelsDontCauseWarnings"]], "test_nuclide_nuclidebasemethodsshouldnotfail() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_nuclideBaseMethodsShouldNotFail"]], "test_nuclide_oldlabelscausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_oldLabelsCauseWarnings"]], "test_nuclide_scatterxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[195, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_scatterXsArrangementIsCorrect"]], "macroscopiccrosssectioncreator (class in armi.nucleardataio.xscollections)": [[196, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator"]], "xscollection (class in armi.nucleardataio.xscollections)": [[196, "armi.nuclearDataIO.xsCollections.XSCollection"]], "armi.nucleardataio.xscollections": [[196, "module-armi.nuclearDataIO.xsCollections"]], "clear() (armi.nucleardataio.xscollections.xscollection method)": [[196, "armi.nuclearDataIO.xsCollections.XSCollection.clear"]], "collapsecrosssection() (armi.nucleardataio.xscollections.xscollection static method)": [[196, "armi.nuclearDataIO.xsCollections.XSCollection.collapseCrossSection"]], "compare() (armi.nucleardataio.xscollections.xscollection method)": [[196, "armi.nuclearDataIO.xsCollections.XSCollection.compare"]], "computeblockaveragechi() (in module armi.nucleardataio.xscollections)": [[196, "armi.nuclearDataIO.xsCollections.computeBlockAverageChi"]], "computecaptureenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[196, "armi.nuclearDataIO.xsCollections.computeCaptureEnergyGenerationConstants"]], "computefissionenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[196, "armi.nuclearDataIO.xsCollections.computeFissionEnergyGenerationConstants"]], "computegammaenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[196, "armi.nuclearDataIO.xsCollections.computeGammaEnergyDepositionConstants"]], "computemacroscopicgroupconstants() (in module armi.nucleardataio.xscollections)": [[196, "armi.nuclearDataIO.xsCollections.computeMacroscopicGroupConstants"]], "computeneutronenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[196, "armi.nuclearDataIO.xsCollections.computeNeutronEnergyDepositionConstants"]], "createmacrosfrommicros() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[196, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosFromMicros"]], "createmacrosonblocklist() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[196, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosOnBlocklist"]], "get() (armi.nucleardataio.xscollections.xscollection method)": [[196, "armi.nuclearDataIO.xsCollections.XSCollection.get"]], "getabsorptionxs() (armi.nucleardataio.xscollections.xscollection method)": [[196, "armi.nuclearDataIO.xsCollections.XSCollection.getAbsorptionXS"]], "getdefaultxs() (armi.nucleardataio.xscollections.xscollection class method)": [[196, "armi.nuclearDataIO.xsCollections.XSCollection.getDefaultXs"]], "gettotalscattermatrix() (armi.nucleardataio.xscollections.xscollection method)": [[196, "armi.nuclearDataIO.xsCollections.XSCollection.getTotalScatterMatrix"]], "merge() (armi.nucleardataio.xscollections.xscollection method)": [[196, "armi.nuclearDataIO.xsCollections.XSCollection.merge"]], "compxslibrary (class in armi.nucleardataio.xslibraries)": [[197, "armi.nuclearDataIO.xsLibraries.CompxsLibrary"]], "isotxslibrary (class in armi.nucleardataio.xslibraries)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary"]], "armi.nucleardataio.xslibraries": [[197, "module-armi.nuclearDataIO.xsLibraries"]], "compare() (in module armi.nucleardataio.xslibraries)": [[197, "armi.nuclearDataIO.xsLibraries.compare"]], "comparelibraryneutronenergies() (in module armi.nucleardataio.xslibraries)": [[197, "armi.nuclearDataIO.xsLibraries.compareLibraryNeutronEnergies"]], "comparexslibraryattribute() (in module armi.nucleardataio.xslibraries)": [[197, "armi.nuclearDataIO.xsLibraries.compareXSLibraryAttribute"]], "gammadoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaDoseConversionFactors"]], "gammaenergyupperbounds (armi.nucleardataio.xslibraries.isotxslibrary property)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaEnergyUpperBounds"]], "get() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.get"]], "getisotxslibrariestomerge() (in module armi.nucleardataio.xslibraries)": [[197, "armi.nuclearDataIO.xsLibraries.getISOTXSLibrariesToMerge"]], "getnuclide() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclide"]], "getnuclides() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclides"]], "getscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getScatterWeights"]], "getsuffixfromnuclidelabel() (in module armi.nucleardataio.xslibraries)": [[197, "armi.nuclearDataIO.xsLibraries.getSuffixFromNuclideLabel"]], "merge() (armi.nucleardataio.xslibraries.compxslibrary method)": [[197, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.merge"]], "merge() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.merge"]], "mergexslibrariesinworkingdirectory() (in module armi.nucleardataio.xslibraries)": [[197, "armi.nuclearDataIO.xsLibraries.mergeXSLibrariesInWorkingDirectory"]], "neutrondoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.neutronDoseConversionFactors"]], "nuclidelabels (armi.nucleardataio.xslibraries.isotxslibrary property)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclideLabels"]], "nuclides (armi.nucleardataio.xslibraries.isotxslibrary property)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclides"]], "numgroups (armi.nucleardataio.xslibraries.isotxslibrary property)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroups"]], "numgroupsgamma (armi.nucleardataio.xslibraries.isotxslibrary property)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroupsGamma"]], "purgefissionproducts() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.purgeFissionProducts"]], "regionlabels (armi.nucleardataio.xslibraries.compxslibrary property)": [[197, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regionLabels"]], "regions (armi.nucleardataio.xslibraries.compxslibrary property)": [[197, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regions"]], "resetscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.resetScatterWeights"]], "xsids (armi.nucleardataio.xslibraries.isotxslibrary property)": [[197, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.xsIDs"]], "xsnuclide (class in armi.nucleardataio.xsnuclides)": [[198, "armi.nuclearDataIO.xsNuclides.XSNuclide"]], "armi.nucleardataio.xsnuclides": [[198, "module-armi.nuclearDataIO.xsNuclides"]], "buildnormalizedscattercolumns() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[198, "armi.nuclearDataIO.xsNuclides.XSNuclide.buildNormalizedScatterColumns"]], "decays (armi.nucleardataio.xsnuclides.xsnuclide property)": [[198, "armi.nuclearDataIO.xsNuclides.XSNuclide.decays"]], "getmicroxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[198, "armi.nuclearDataIO.xsNuclides.XSNuclide.getMicroXS"]], "getxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[198, "armi.nuclearDataIO.xsNuclides.XSNuclide.getXS"]], "merge() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[198, "armi.nuclearDataIO.xsNuclides.XSNuclide.merge"]], "plotcomparescattermatrix() (in module armi.nucleardataio.xsnuclides)": [[198, "armi.nuclearDataIO.xsNuclides.plotCompareScatterMatrix"]], "plotscattermatrix() (in module armi.nucleardataio.xsnuclides)": [[198, "armi.nuclearDataIO.xsNuclides.plotScatterMatrix"]], "trans (armi.nucleardataio.xsnuclides.xsnuclide property)": [[198, "armi.nuclearDataIO.xsNuclides.XSNuclide.trans"]], "updatebasenuclide() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[198, "armi.nuclearDataIO.xsNuclides.XSNuclide.updateBaseNuclide"]], "armi.operators": [[199, "module-armi.operators"]], "factory() (in module armi.operators)": [[199, "armi.operators.factory"]], "getoperatorclassfromsettings() (in module armi.operators)": [[199, "armi.operators.getOperatorClassFromSettings"]], "operator (class in armi.operators.operator)": [[200, "armi.operators.operator.Operator"]], "addinterface() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.addInterface"]], "armi.operators.operator": [[200, "module-armi.operators.operator"]], "ateol (armi.operators.operator.operator property)": [[200, "armi.operators.operator.Operator.atEOL"]], "availabilityfactors (armi.operators.operator.operator property)": [[200, "armi.operators.operator.Operator.availabilityFactors"]], "burnsteps (armi.operators.operator.operator property)": [[200, "armi.operators.operator.Operator.burnSteps"]], "couplingisactive() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.couplingIsActive"]], "createinterfaces() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.createInterfaces"]], "cyclelengths (armi.operators.operator.operator property)": [[200, "armi.operators.operator.Operator.cycleLengths"]], "cyclenames (armi.operators.operator.operator property)": [[200, "armi.operators.operator.Operator.cycleNames"]], "detach() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.detach"]], "getinterface() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.getInterface"]], "getinterfaces() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.getInterfaces"]], "initializeinterfaces() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.initializeInterfaces"]], "inspector (armi.operators.operator.operator attribute)": [[200, "armi.operators.operator.Operator.inspector"]], "interactallboc() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.interactAllBOC"]], "interactallbol() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.interactAllBOL"]], "interactallcoupled() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.interactAllCoupled"]], "interactalleoc() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.interactAllEOC"]], "interactalleol() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.interactAllEOL"]], "interactallerror() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.interactAllError"]], "interactalleverynode() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.interactAllEveryNode"]], "interactallinit() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.interactAllInit"]], "interfaceisactive() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.interfaceIsActive"]], "loadstate() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.loadState"]], "maxburnsteps (armi.operators.operator.operator property)": [[200, "armi.operators.operator.Operator.maxBurnSteps"]], "operate() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.operate"]], "powerfractions (armi.operators.operator.operator property)": [[200, "armi.operators.operator.Operator.powerFractions"]], "printinterfacesummary() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.printInterfaceSummary"]], "reattach() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.reattach"]], "removeallinterfaces() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.removeAllInterfaces"]], "removeinterface() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.removeInterface"]], "setstatetodefault() (armi.operators.operator.operator static method)": [[200, "armi.operators.operator.Operator.setStateToDefault"]], "snapshotrequest() (armi.operators.operator.operator method)": [[200, "armi.operators.operator.Operator.snapshotRequest"]], "steplengths (armi.operators.operator.operator property)": [[200, "armi.operators.operator.Operator.stepLengths"]], "operatormpi (class in armi.operators.operatormpi)": [[201, "armi.operators.operatorMPI.OperatorMPI"]], "armi.operators.operatormpi": [[201, "module-armi.operators.operatorMPI"]], "collapseallstderrs() (armi.operators.operatormpi.operatormpi method)": [[201, "armi.operators.operatorMPI.OperatorMPI.collapseAllStderrs"]], "operate() (armi.operators.operatormpi.operatormpi method)": [[201, "armi.operators.operatorMPI.OperatorMPI.operate"]], "workeroperate() (armi.operators.operatormpi.operatormpi method)": [[201, "armi.operators.operatorMPI.OperatorMPI.workerOperate"]], "workerquit() (armi.operators.operatormpi.operatormpi static method)": [[201, "armi.operators.operatorMPI.OperatorMPI.workerQuit"]], "equilibrium (armi.operators.runtypes.runtypes attribute)": [[202, "armi.operators.runTypes.RunTypes.EQUILIBRIUM"]], "runtypes (class in armi.operators.runtypes)": [[202, "armi.operators.runTypes.RunTypes"]], "snapshots (armi.operators.runtypes.runtypes attribute)": [[202, "armi.operators.runTypes.RunTypes.SNAPSHOTS"]], "standard (armi.operators.runtypes.runtypes attribute)": [[202, "armi.operators.runTypes.RunTypes.STANDARD"]], "armi.operators.runtypes": [[202, "module-armi.operators.runTypes"]], "inspector (class in armi.operators.settingsvalidation)": [[203, "armi.operators.settingsValidation.Inspector"]], "no_action() (armi.operators.settingsvalidation.inspector static method)": [[203, "armi.operators.settingsValidation.Inspector.NO_ACTION"]], "query (class in armi.operators.settingsvalidation)": [[203, "armi.operators.settingsValidation.Query"]], "addquery() (armi.operators.settingsvalidation.inspector method)": [[203, "armi.operators.settingsValidation.Inspector.addQuery"]], "addquerybadlocationwilllikelyfail() (armi.operators.settingsvalidation.inspector method)": [[203, "armi.operators.settingsValidation.Inspector.addQueryBadLocationWillLikelyFail"]], "addquerycurrentsettingmaynotsupportfeatures() (armi.operators.settingsvalidation.inspector method)": [[203, "armi.operators.settingsValidation.Inspector.addQueryCurrentSettingMayNotSupportFeatures"]], "armi.operators.settingsvalidation": [[203, "module-armi.operators.settingsValidation"]], "createqueryrevertbadpathtodefault() (in module armi.operators.settingsvalidation)": [[203, "armi.operators.settingsValidation.createQueryRevertBadPathToDefault"]], "iscorrective() (armi.operators.settingsvalidation.query method)": [[203, "armi.operators.settingsValidation.Query.isCorrective"]], "resolve() (armi.operators.settingsvalidation.query method)": [[203, "armi.operators.settingsValidation.Query.resolve"]], "run() (armi.operators.settingsvalidation.inspector method)": [[203, "armi.operators.settingsValidation.Inspector.run"]], "validateversion() (in module armi.operators.settingsvalidation)": [[203, "armi.operators.settingsValidation.validateVersion"]], "operatorsnapshots (class in armi.operators.snapshots)": [[204, "armi.operators.snapshots.OperatorSnapshots"]], "armi.operators.snapshots": [[204, "module-armi.operators.snapshots"]], "ateol (armi.operators.snapshots.operatorsnapshots property)": [[204, "armi.operators.snapshots.OperatorSnapshots.atEOL"]], "createinterfaces() (armi.operators.snapshots.operatorsnapshots method)": [[204, "armi.operators.snapshots.OperatorSnapshots.createInterfaces"]], "setstatetodefault() (armi.operators.snapshots.operatorsnapshots static method)": [[204, "armi.operators.snapshots.OperatorSnapshots.setStateToDefault"]], "armi.operators.tests": [[205, "module-armi.operators.tests"]], "testinspector (class in armi.operators.tests.test_inspectors)": [[206, "armi.operators.tests.test_inspectors.TestInspector"]], "armi.operators.tests.test_inspectors": [[206, "module-armi.operators.tests.test_inspectors"]], "test_assigncs() (armi.operators.tests.test_inspectors.testinspector method)": [[206, "armi.operators.tests.test_inspectors.TestInspector.test_assignCS"]], "test_callablecorrectioncheck() (armi.operators.tests.test_inspectors.testinspector method)": [[206, "armi.operators.tests.test_inspectors.TestInspector.test_callableCorrectionCheck"]], "test_changeofcs() (armi.operators.tests.test_inspectors.testinspector method)": [[206, "armi.operators.tests.test_inspectors.TestInspector.test_changeOfCS"]], "test_checkforbothsimpleanddetailedcyclesinputs() (armi.operators.tests.test_inspectors.testinspector method)": [[206, "armi.operators.tests.test_inspectors.TestInspector.test_checkForBothSimpleAndDetailedCyclesInputs"]], "test_correctcyclestozeroburnup() (armi.operators.tests.test_inspectors.testinspector method)": [[206, "armi.operators.tests.test_inspectors.TestInspector.test_correctCyclesToZeroBurnup"]], "test_createqueryrevertbadpathtodefault() (armi.operators.tests.test_inspectors.testinspector method)": [[206, "armi.operators.tests.test_inspectors.TestInspector.test_createQueryRevertBadPathToDefault"]], "test_noncorrectivequery() (armi.operators.tests.test_inspectors.testinspector method)": [[206, "armi.operators.tests.test_inspectors.TestInspector.test_nonCorrectiveQuery"]], "test_overwritesettingscorrectivequery() (armi.operators.tests.test_inspectors.testinspector method)": [[206, "armi.operators.tests.test_inspectors.TestInspector.test_overwriteSettingsCorrectiveQuery"]], "test_query() (armi.operators.tests.test_inspectors.testinspector method)": [[206, "armi.operators.tests.test_inspectors.TestInspector.test_query"]], "testoperatorsnapshots (class in armi.operators.tests.test_operatorsnapshots)": [[207, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots"]], "testoperatorsnapshotssettings (class in armi.operators.tests.test_operatorsnapshots)": [[207, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorsnapshots": [[207, "module-armi.operators.tests.test_operatorSnapshots"]], "test_ateol() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[207, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_atEOL"]], "test_createinterfaces() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[207, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfaces"]], "test_createinterfacesdisabled() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[207, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfacesDisabled"]], "test_getoperatorclassfromsettings() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshotssettings method)": [[207, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings.test_getOperatorClassFromSettings"]], "test_mainoperate() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[207, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_mainOperate"]], "test_setstatetodefault() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[207, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_setStateToDefault"]], "cyclessettingstests (class in armi.operators.tests.test_operators)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests"]], "interfacea (class in armi.operators.tests.test_operators)": [[208, "armi.operators.tests.test_operators.InterfaceA"]], "interfaceb (class in armi.operators.tests.test_operators)": [[208, "armi.operators.tests.test_operators.InterfaceB"]], "interfacec (class in armi.operators.tests.test_operators)": [[208, "armi.operators.tests.test_operators.InterfaceC"]], "operatortests (class in armi.operators.tests.test_operators)": [[208, "armi.operators.tests.test_operators.OperatorTests"]], "testcreateoperator (class in armi.operators.tests.test_operators)": [[208, "armi.operators.tests.test_operators.TestCreateOperator"]], "testinterfaceandeventheaders (class in armi.operators.tests.test_operators)": [[208, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders"]], "testtightcoupling (class in armi.operators.tests.test_operators)": [[208, "armi.operators.tests.test_operators.TestTightCoupling"]], "armi.operators.tests.test_operators": [[208, "module-armi.operators.tests.test_operators"]], "availabilityfactorssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.availabilityFactorsSolution"]], "burnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.burnStepsSolution"]], "cyclelengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleLengthsSolution"]], "cyclenamessolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleNamesSolution"]], "dbwriteforcoupling() (armi.operators.tests.test_operators.testtightcoupling method)": [[208, "armi.operators.tests.test_operators.TestTightCoupling.dbWriteForCoupling"]], "detailedcyclessettings (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.detailedCyclesSettings"]], "function (armi.operators.tests.test_operators.interfacea attribute)": [[208, "armi.operators.tests.test_operators.InterfaceA.function"]], "function (armi.operators.tests.test_operators.interfaceb attribute)": [[208, "armi.operators.tests.test_operators.InterfaceB.function"]], "function (armi.operators.tests.test_operators.interfacec attribute)": [[208, "armi.operators.tests.test_operators.InterfaceC.function"]], "maxburnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.maxBurnStepsSolution"]], "name (armi.operators.tests.test_operators.interfacea attribute)": [[208, "armi.operators.tests.test_operators.InterfaceA.name"]], "name (armi.operators.tests.test_operators.interfaceb attribute)": [[208, "armi.operators.tests.test_operators.InterfaceB.name"]], "name (armi.operators.tests.test_operators.interfacec attribute)": [[208, "armi.operators.tests.test_operators.InterfaceC.name"]], "powerfractionssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.powerFractionsSolution"]], "steplengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.stepLengthsSolution"]], "test_addinterfacesubclasscollision() (armi.operators.tests.test_operators.operatortests method)": [[208, "armi.operators.tests.test_operators.OperatorTests.test_addInterfaceSubclassCollision"]], "test_computetightcouplingconvergence() (armi.operators.tests.test_operators.testtightcoupling method)": [[208, "armi.operators.tests.test_operators.TestTightCoupling.test_computeTightCouplingConvergence"]], "test_couplingisactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[208, "armi.operators.tests.test_operators.TestTightCoupling.test_couplingIsActive"]], "test_createoperator() (armi.operators.tests.test_operators.testcreateoperator method)": [[208, "armi.operators.tests.test_operators.TestCreateOperator.test_createOperator"]], "test_expandcycleandtimenodeargs_empty() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[208, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Empty"]], "test_expandcycleandtimenodeargs_onearg() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[208, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_OneArg"]], "test_expandcycleandtimenodeargs_twoarg() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[208, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_TwoArg"]], "test_getavailabilityfactors() (armi.operators.tests.test_operators.cyclessettingstests method)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getBurnSteps"]], "test_getcyclelengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.operators.tests.test_operators.cyclessettingstests method)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleNames"]], "test_getmaxburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getpowerfractions() (armi.operators.tests.test_operators.cyclessettingstests method)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getPowerFractions"]], "test_getsteplengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[208, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getStepLengths"]], "test_getsteplengths() (armi.operators.tests.test_operators.testtightcoupling method)": [[208, "armi.operators.tests.test_operators.TestTightCoupling.test_getStepLengths"]], "test_interfaceisactive() (armi.operators.tests.test_operators.operatortests method)": [[208, "armi.operators.tests.test_operators.OperatorTests.test_interfaceIsActive"]], "test_loadstateerror() (armi.operators.tests.test_operators.operatortests method)": [[208, "armi.operators.tests.test_operators.OperatorTests.test_loadStateError"]], "test_operatordata() (armi.operators.tests.test_operators.operatortests method)": [[208, "armi.operators.tests.test_operators.OperatorTests.test_operatorData"]], "test_orderedinterfaces() (armi.operators.tests.test_operators.operatortests method)": [[208, "armi.operators.tests.test_operators.OperatorTests.test_orderedInterfaces"]], "test_performtightcoupling_inactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[208, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_Inactive"]], "test_performtightcoupling_nowritedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[208, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_NoWriteDB"]], "test_performtightcoupling_writedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[208, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_WriteDB"]], "test_performtightcoupling_notconverged() (armi.operators.tests.test_operators.testtightcoupling method)": [[208, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_notConverged"]], "test_performtightcoupling_skip() (armi.operators.tests.test_operators.testtightcoupling method)": [[208, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_skip"]], "test_setstatetodefault() (armi.operators.tests.test_operators.operatortests method)": [[208, "armi.operators.tests.test_operators.OperatorTests.test_setStateToDefault"]], "test_snapshotrequest() (armi.operators.tests.test_operators.operatortests method)": [[208, "armi.operators.tests.test_operators.OperatorTests.test_snapshotRequest"]], "armi.physics": [[209, "module-armi.physics"]], "dpa_cross_sections (in module armi.physics.constants)": [[210, "armi.physics.constants.DPA_CROSS_SECTIONS"]], "armi.physics.constants": [[210, "module-armi.physics.constants"]], "defaultexecuter (class in armi.physics.executers)": [[211, "armi.physics.executers.DefaultExecuter"]], "executer (class in armi.physics.executers)": [[211, "armi.physics.executers.Executer"]], "executionoptions (class in armi.physics.executers)": [[211, "armi.physics.executers.ExecutionOptions"]], "armi.physics.executers": [[211, "module-armi.physics.executers"]], "describe() (armi.physics.executers.executionoptions method)": [[211, "armi.physics.executers.ExecutionOptions.describe"]], "fromreactor() (armi.physics.executers.executionoptions method)": [[211, "armi.physics.executers.ExecutionOptions.fromReactor"]], "fromusersettings() (armi.physics.executers.executionoptions method)": [[211, "armi.physics.executers.ExecutionOptions.fromUserSettings"]], "resolvederivedoptions() (armi.physics.executers.executionoptions method)": [[211, "armi.physics.executers.ExecutionOptions.resolveDerivedOptions"]], "run() (armi.physics.executers.defaultexecuter method)": [[211, "armi.physics.executers.DefaultExecuter.run"]], "run() (armi.physics.executers.executer method)": [[211, "armi.physics.executers.Executer.run"]], "setrundirfromcasetitle() (armi.physics.executers.executionoptions method)": [[211, "armi.physics.executers.ExecutionOptions.setRunDirFromCaseTitle"]], "writeinput() (armi.physics.executers.defaultexecuter method)": [[211, "armi.physics.executers.DefaultExecuter.writeInput"]], "fuelhandlerplugin (class in armi.physics.fuelcycle)": [[212, "armi.physics.fuelCycle.FuelHandlerPlugin"]], "armi.physics.fuelcycle": [[212, "module-armi.physics.fuelCycle"]], "definesettings() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[212, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[212, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[212, "armi.physics.fuelCycle.FuelHandlerPlugin.exposeInterfaces"]], "armi.physics.fuelcycle.assemblyrotationalgorithms": [[213, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "bureducingassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[213, "armi.physics.fuelCycle.assemblyRotationAlgorithms.buReducingAssemblyRotation"]], "simpleassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[213, "armi.physics.fuelCycle.assemblyRotationAlgorithms.simpleAssemblyRotation"]], "armi.physics.fuelcycle.fuelhandlerfactory": [[214, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "fuelhandlerfactory() (in module armi.physics.fuelcycle.fuelhandlerfactory)": [[214, "armi.physics.fuelCycle.fuelHandlerFactory.fuelHandlerFactory"]], "fuelhandlerinterface (class in armi.physics.fuelcycle.fuelhandlerinterface)": [[215, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface"]], "armi.physics.fuelcycle.fuelhandlerinterface": [[215, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "interactboc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[215, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactBOC"]], "interacteoc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[215, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOC"]], "interacteol() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[215, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOL"]], "makeshufflereport() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[215, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.makeShuffleReport"]], "managefuel() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[215, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.manageFuel"]], "name (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface attribute)": [[215, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.name"]], "specifyinputs() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface static method)": [[215, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.specifyInputs"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[215, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.workerOperate"]], "fuelhandler (class in armi.physics.fuelcycle.fuelhandlers)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler"]], "armi.physics.fuelcycle.fuelhandlers": [[216, "module-armi.physics.fuelCycle.fuelHandlers"]], "chooseswaps() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.chooseSwaps"]], "cs (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cs"]], "cycle (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cycle"]], "dischargeswap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.dischargeSwap"]], "dorepeatshuffle() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.doRepeatShuffle"]], "findassembly() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.findAssembly"]], "getfactorlist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.getFactorList"]], "makeshufflearrows() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.makeShuffleArrows"]], "outage() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.outage"]], "prepcore() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepCore"]], "prepsearch() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepSearch"]], "prepshufflemap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepShuffleMap"]], "processmovelist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.processMoveList"]], "r (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.r"]], "readmoves() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.readMoves"]], "repeatshufflepattern() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.repeatShufflePattern"]], "swapassemblies() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapAssemblies"]], "swapcascade() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapCascade"]], "trackchain() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.trackChain"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[216, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.workerOperate"]], "armi.physics.fuelcycle.hexassemblyfuelmgmtutils": [[217, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "buildconvergentringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[217, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildConvergentRingSchedule"]], "buildeqringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[217, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildEqRingSchedule"]], "buildringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[217, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildRingSchedule"]], "getoptimalassemblyorientation() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[217, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.getOptimalAssemblyOrientation"]], "armi.physics.fuelcycle.settings": [[218, "module-armi.physics.fuelCycle.settings"]], "getfuelcyclesettingvalidators() (in module armi.physics.fuelcycle.settings)": [[218, "armi.physics.fuelCycle.settings.getFuelCycleSettingValidators"]], "getfuelcyclesettings() (in module armi.physics.fuelcycle.settings)": [[218, "armi.physics.fuelCycle.settings.getFuelCycleSettings"]], "armi.physics.fuelcycle.tests": [[219, "module-armi.physics.fuelCycle.tests"]], "testfuelhandlermgmttools (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[220, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools"]], "armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms": [[220, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "test_bureducingassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[220, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_buReducingAssemblyRotation"]], "test_simpleassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[220, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_simpleAssemblyRotation"]], "fuelhandlertesthelper (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.FuelHandlerTestHelper"]], "mocklatticephysicsinterface (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface"]], "mockxsgm (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM"]], "testfuelhandler (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler"]], "testfuelplugin (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin"]], "addsomedetailassemblies() (in module armi.physics.fuelcycle.tests.test_fuelhandlers)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.addSomeDetailAssemblies"]], "armi.physics.fuelcycle.tests.test_fuelhandlers": [[221, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.interactBOC"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mockxsgm method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM.interactBOC"]], "name (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface attribute)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.name"]], "runshuffling() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.runShuffling"]], "test_dischargeswap() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwap"]], "test_dischargeswapincompatiblestationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwapIncompatibleStationaryBlocks"]], "test_findbycoords() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findByCoords"]], "test_findhighbu() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findHighBu"]], "test_findinsfp() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findInSFP"]], "test_findmany() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findMany"]], "test_findwithminmax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findWithMinMax"]], "test_getfactorlist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getFactorList"]], "test_interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_interactBOC"]], "test_linpowbypin() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPin"]], "test_linpowbypingamma() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinGamma"]], "test_linpowbypinneutron() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinNeutron"]], "test_processmovelist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_processMoveList"]], "test_readmoves() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_readMoves"]], "test_repeatshuffles() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_repeatShuffles"]], "test_settingsarediscovered() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelplugin method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin.test_settingsAreDiscovered"]], "test_transferdifferentnumberstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferDifferentNumberStationaryBlocks"]], "test_transferincompatibleheightstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferIncompatibleHeightStationaryBlocks"]], "test_transferstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferStationaryBlocks"]], "test_transferunalignedlocationstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferUnalignedLocationStationaryBlocks"]], "test_width() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[221, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_width"]], "testhexassemmgmttools (class in armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils)": [[222, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools"]], "armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils": [[222, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "test_buildconvergentringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[222, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildConvergentRingSchedule"]], "test_buildeqringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[222, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildEqRingSchedule"]], "test_buildeqringschedulehelper() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[222, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildEqRingScheduleHelper"]], "test_buildringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[222, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildRingSchedule"]], "armi.physics.fuelperformance": [[223, "module-armi.physics.fuelPerformance"]], "fuelperformanceexecuter (class in armi.physics.fuelperformance.executers)": [[224, "armi.physics.fuelPerformance.executers.FuelPerformanceExecuter"]], "fuelperformanceoptions (class in armi.physics.fuelperformance.executers)": [[224, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions"]], "armi.physics.fuelperformance.executers": [[224, "module-armi.physics.fuelPerformance.executers"]], "fromreactor() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[224, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromReactor"]], "fromusersettings() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[224, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromUserSettings"]], "armi.physics.fuelperformance.parameters": [[225, "module-armi.physics.fuelPerformance.parameters"]], "getfuelperformanceparameterdefinitions() (in module armi.physics.fuelperformance.parameters)": [[225, "armi.physics.fuelPerformance.parameters.getFuelPerformanceParameterDefinitions"]], "fuelperformanceplugin (class in armi.physics.fuelperformance.plugin)": [[226, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin"]], "armi.physics.fuelperformance.plugin": [[226, "module-armi.physics.fuelPerformance.plugin"]], "defineparameters() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[226, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineParameters"]], "definesettings() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[226, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[226, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[226, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.exposeInterfaces"]], "armi.physics.fuelperformance.settings": [[227, "module-armi.physics.fuelPerformance.settings"]], "definesettings() (in module armi.physics.fuelperformance.settings)": [[227, "armi.physics.fuelPerformance.settings.defineSettings"]], "definevalidators() (in module armi.physics.fuelperformance.settings)": [[227, "armi.physics.fuelPerformance.settings.defineValidators"]], "armi.physics.fuelperformance.tests": [[228, "module-armi.physics.fuelPerformance.tests"]], "testfuelperformanceoptions (class in armi.physics.fuelperformance.tests.test_executers)": [[229, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions"]], "armi.physics.fuelperformance.tests.test_executers": [[229, "module-armi.physics.fuelPerformance.tests.test_executers"]], "test_fuelperformanceoptions() (armi.physics.fuelperformance.tests.test_executers.testfuelperformanceoptions method)": [[229, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions.test_fuelPerformanceOptions"]], "testfuelperformanceplugin (class in armi.physics.fuelperformance.tests.test_fuelperformanceplugin)": [[230, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin"]], "armi.physics.fuelperformance.tests.test_fuelperformanceplugin": [[230, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "plugin (armi.physics.fuelperformance.tests.test_fuelperformanceplugin.testfuelperformanceplugin attribute)": [[230, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin.plugin"]], "testfuelperformanceutils (class in armi.physics.fuelperformance.tests.test_fuelperformanceutils)": [[231, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils"]], "armi.physics.fuelperformance.tests.test_fuelperformanceutils": [[231, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "test_applyfueldisplacement() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[231, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_applyFuelDisplacement"]], "test_gasconductivitycorrection_morph0() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[231, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph0"]], "test_gasconductivitycorrection_morph1() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[231, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph1"]], "test_gasconductivitycorrection_morph2() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[231, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph2"]], "test_gasconductivitycorrection_morph3() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[231, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph3"]], "test_gasconductivitycorrection_morph4() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[231, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph4"]], "applyfueldisplacement() (in module armi.physics.fuelperformance.utils)": [[232, "armi.physics.fuelPerformance.utils.applyFuelDisplacement"]], "armi.physics.fuelperformance.utils": [[232, "module-armi.physics.fuelPerformance.utils"]], "gasconductivitycorrection() (in module armi.physics.fuelperformance.utils)": [[232, "armi.physics.fuelPerformance.utils.gasConductivityCorrection"]], "boc (armi.physics.neutronics.latticephysicsfrequency attribute)": [[233, "armi.physics.neutronics.LatticePhysicsFrequency.BOC"]], "bol (armi.physics.neutronics.latticephysicsfrequency attribute)": [[233, "armi.physics.neutronics.LatticePhysicsFrequency.BOL"]], "latticephysicsfrequency (class in armi.physics.neutronics)": [[233, "armi.physics.neutronics.LatticePhysicsFrequency"]], "neutronicsplugin (class in armi.physics.neutronics)": [[233, "armi.physics.neutronics.NeutronicsPlugin"]], "adjointcalculationrequested() (in module armi.physics.neutronics)": [[233, "armi.physics.neutronics.adjointCalculationRequested"]], "all (armi.physics.neutronics.latticephysicsfrequency attribute)": [[233, "armi.physics.neutronics.LatticePhysicsFrequency.all"]], "applyeffectivedelayedneutronfractiontocore() (in module armi.physics.neutronics)": [[233, "armi.physics.neutronics.applyEffectiveDelayedNeutronFractionToCore"]], "armi.physics.neutronics": [[233, "module-armi.physics.neutronics"]], "defineentrypoints() (armi.physics.neutronics.neutronicsplugin static method)": [[233, "armi.physics.neutronics.NeutronicsPlugin.defineEntryPoints"]], "defineparameters() (armi.physics.neutronics.neutronicsplugin static method)": [[233, "armi.physics.neutronics.NeutronicsPlugin.defineParameters"]], "definesettings() (armi.physics.neutronics.neutronicsplugin static method)": [[233, "armi.physics.neutronics.NeutronicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.neutronics.neutronicsplugin static method)": [[233, "armi.physics.neutronics.NeutronicsPlugin.defineSettingsValidators"]], "everynode (armi.physics.neutronics.latticephysicsfrequency attribute)": [[233, "armi.physics.neutronics.LatticePhysicsFrequency.everyNode"]], "exposeinterfaces() (armi.physics.neutronics.neutronicsplugin static method)": [[233, "armi.physics.neutronics.NeutronicsPlugin.exposeInterfaces"]], "firstcouplediteration (armi.physics.neutronics.latticephysicsfrequency attribute)": [[233, "armi.physics.neutronics.LatticePhysicsFrequency.firstCoupledIteration"]], "gammatransportisrequested() (in module armi.physics.neutronics)": [[233, "armi.physics.neutronics.gammaTransportIsRequested"]], "gammaxsarerequested() (in module armi.physics.neutronics)": [[233, "armi.physics.neutronics.gammaXsAreRequested"]], "getreportcontents() (armi.physics.neutronics.neutronicsplugin static method)": [[233, "armi.physics.neutronics.NeutronicsPlugin.getReportContents"]], "never (armi.physics.neutronics.latticephysicsfrequency attribute)": [[233, "armi.physics.neutronics.LatticePhysicsFrequency.never"]], "onprocesscoreloading() (armi.physics.neutronics.neutronicsplugin static method)": [[233, "armi.physics.neutronics.NeutronicsPlugin.onProcessCoreLoading"]], "realcalculationrequested() (in module armi.physics.neutronics)": [[233, "armi.physics.neutronics.realCalculationRequested"]], "armi.physics.neutronics.const": [[234, "module-armi.physics.neutronics.const"]], "averageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.AverageBlockCollection"]], "blockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection"]], "crosssectiongroupmanager (class in armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager"]], "cylindricalcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CylindricalComponentsAverageBlockCollection"]], "fluxweightedaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.FluxWeightedAverageBlockCollection"]], "medianblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.MedianBlockCollection"]], "slabcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.SlabComponentsAverageBlockCollection"]], "armi.physics.neutronics.crosssectiongroupmanager": [[235, "module-armi.physics.neutronics.crossSectionGroupManager"]], "blockcollectionfactory() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.blockCollectionFactory"]], "calcavgnuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.calcAvgNuclideTemperatures"]], "clearrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.clearRepresentativeBlocks"]], "createrepresentativeblock() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.createRepresentativeBlock"]], "createrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocks"]], "createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocksUsingExistingBlocks"]], "describeinterfaces() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.describeInterfaces"]], "disablebugroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.disableBuGroupUpdates"]], "enablebugroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.enableBuGroupUpdates"]], "fluxsolutionispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.fluxSolutionIsPregenerated"]], "getblocknuclidetemperatureavgterms() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.getBlockNuclideTemperatureAvgTerms"]], "getcandidateblocks() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getCandidateBlocks"]], "getnextavailablexstypes() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNextAvailableXsTypes"]], "getnuctemperature() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNucTemperature"]], "getweight() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getWeight"]], "getxstypelabelfromnumber() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeLabelFromNumber"]], "getxstypenumberfromlabel() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[235, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeNumberFromLabel"]], "interactboc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOC"]], "interactbol() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOL"]], "interactcoupled() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactCoupled"]], "interacteoc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEOC"]], "interacteverynode() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEveryNode"]], "makecrosssectiongroups() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.makeCrossSectionGroups"]], "name (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager attribute)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.name"]], "updatenuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.updateNuclideTemperatures"]], "xstypeispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[235, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.xsTypeIsPregenerated"]], "one_dimensional_cylinder (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[236, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_CYLINDER"]], "one_dimensional_slab (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[236, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_SLAB"]], "two_dimensional_hex (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[236, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.TWO_DIMENSIONAL_HEX"]], "xsgeometrytypes (class in armi.physics.neutronics.crosssectionsettings)": [[236, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes"]], "xsmodelingoptions (class in armi.physics.neutronics.crosssectionsettings)": [[236, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions"]], "xssettingdef (class in armi.physics.neutronics.crosssectionsettings)": [[236, "armi.physics.neutronics.crossSectionSettings.XSSettingDef"]], "xssettings (class in armi.physics.neutronics.crosssectionsettings)": [[236, "armi.physics.neutronics.crossSectionSettings.XSSettings"]], "zero_dimensional (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[236, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ZERO_DIMENSIONAL"]], "armi.physics.neutronics.crosssectionsettings": [[236, "module-armi.physics.neutronics.crossSectionSettings"]], "bugroup (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[236, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.buGroup"]], "dump() (armi.physics.neutronics.crosssectionsettings.xssettingdef method)": [[236, "armi.physics.neutronics.crossSectionSettings.XSSettingDef.dump"]], "fluxispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[236, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.fluxIsPregenerated"]], "getstr() (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes class method)": [[236, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.getStr"]], "serialize() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[236, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.serialize"]], "serializexssettings() (in module armi.physics.neutronics.crosssectionsettings)": [[236, "armi.physics.neutronics.crossSectionSettings.serializeXSSettings"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[236, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.setDefaults"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xssettings method)": [[236, "armi.physics.neutronics.crossSectionSettings.XSSettings.setDefaults"]], "validate() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[236, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.validate"]], "xsispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[236, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsIsPregenerated"]], "xssettingsvalidator() (in module armi.physics.neutronics.crosssectionsettings)": [[236, "armi.physics.neutronics.crossSectionSettings.xsSettingsValidator"]], "xstype (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[236, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsType"]], "compareisotxslibraries (class in armi.physics.neutronics.diffisotxs)": [[237, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries"]], "addoptions() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[237, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.addOptions"]], "armi.physics.neutronics.diffisotxs": [[237, "module-armi.physics.neutronics.diffIsotxs"]], "invoke() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[237, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.invoke"]], "name (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[237, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.name"]], "settingsargument (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[237, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.settingsArgument"]], "group_structure (in module armi.physics.neutronics.energygroups)": [[238, "armi.physics.neutronics.energyGroups.GROUP_STRUCTURE"]], "armi.physics.neutronics.energygroups": [[238, "module-armi.physics.neutronics.energyGroups"]], "getfastfluxgroupcutoff() (in module armi.physics.neutronics.energygroups)": [[238, "armi.physics.neutronics.energyGroups.getFastFluxGroupCutoff"]], "getgroupstructure() (in module armi.physics.neutronics.energygroups)": [[238, "armi.physics.neutronics.energyGroups.getGroupStructure"]], "getgroupstructuretype() (in module armi.physics.neutronics.energygroups)": [[238, "armi.physics.neutronics.energyGroups.getGroupStructureType"]], "armi.physics.neutronics.fissionproductmodel": [[239, "module-armi.physics.neutronics.fissionProductModel"]], "fissionproductmodel (class in armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodel": [[240, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "describeinterfaces() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.describeInterfaces"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getAllFissionProductNames"]], "getgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getGlobalLumpedFissionProducts"]], "interactboc() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOC"]], "interactbol() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOL"]], "interactdistributestate() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactDistributeState"]], "name (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel attribute)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.name"]], "removefissiongasesfromblocks() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.removeFissionGasesFromBlocks"]], "setallblocklfps() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllBlockLFPs"]], "setallcomponentfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllComponentFissionProducts"]], "setgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[240, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings": [[241, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "definesettings() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[241, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.defineSettings"]], "getfissionproductmodelsettingvalidators() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[241, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.getFissionProductModelSettingValidators"]], "fissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile"]], "lumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct"]], "lumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection"]], "armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct": [[242, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "createlfpsfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createLFPsFromFile"]], "createsinglelfpfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createSingleLFPFromFile"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.duplicate"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.duplicate"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNames"]], "getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNuclideBases"]], "getgaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getGaseousYieldFraction"]], "getlumpedfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getLumpedFissionProductNames"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFrac"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getMassFrac"]], "getmassfracdenom() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracDenom"]], "getmassfracs() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracs"]], "getnumberdensities() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getNumberDensities"]], "gettotalyield() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getTotalYield"]], "isgas() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.isGas"]], "items() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.items"]], "keys() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.keys"]], "lumpedfissionproductfactory() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.lumpedFissionProductFactory"]], "printdensities() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.printDensities"]], "values() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[242, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.values"]], "armi.physics.neutronics.fissionproductmodel.tests": [[243, "module-armi.physics.neutronics.fissionProductModel.tests"]], "testfissionproductmodelexplicitmc2library (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[244, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library"]], "testfissionproductmodellumpedfissionproducts (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[244, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel": [[244, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "test_fpapplication() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[244, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_fpApplication"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[244, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_getAllFissionProductNames"]], "test_loadgloballfpsfromfile() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[244, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_loadGlobalLFPsFromFile"]], "test_nuclideflags() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[244, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclideFlags"]], "test_nuclidesinmodelalldepletableblocks() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[244, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclidesInModelAllDepletableBlocks"]], "test_nuclidesinmodelfuel() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[244, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclidesInModelFuel"]], "testfissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile"]], "testlumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct"]], "testlumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection"]], "testlumpedfissionproductsexplicit (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit"]], "testlumpedfissionproductsfromreferencefile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile"]], "testmo99lfp (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP"]], "armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct": [[245, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "getdummylfpfile() (in module armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.getDummyLFPFile"]], "test_createlfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createLFPs"]], "test_createreferencelfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createReferenceLFPs"]], "test_duplicate() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_duplicate"]], "test_explicitfissionproducts() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsexplicit method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit.test_explicitFissionProducts"]], "test_fissionproductyields() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsfromreferencefile method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile.test_fissionProductYields"]], "test_gaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_gaseousYieldFraction"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNames"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testmo99lfp method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP.test_getAllFissionProductNames"]], "test_getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNuclideBases"]], "test_getmassfrac() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getMassFrac"]], "test_getnumberdensities() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getNumberDensities"]], "test_getyield() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_getYield"]], "test_isgas() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_isGas"]], "test_printdensities() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[245, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_printDensities"]], "armi.physics.neutronics.globalflux": [[246, "module-armi.physics.neutronics.globalFlux"]], "doseresultsmapper (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper"]], "globalfluxexecuter (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter"]], "globalfluxinterface (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface"]], "globalfluxinterfaceusingexecuters (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters"]], "globalfluxoptions (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions"]], "globalfluxresultmapper (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper"]], "apply() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.apply"]], "armi.physics.neutronics.globalflux.globalfluxinterface": [[247, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "calcreactionrates() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.calcReactionRates"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.calculateKeff"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.calculateKeff"]], "checkenergybalance() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.checkEnergyBalance"]], "clearflux() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.clearFlux"]], "computedparate() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.computeDpaRate"]], "edgeassembliesareneeded() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxexecuter method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter.edgeAssembliesAreNeeded"]], "fromreactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromReactor"]], "fromusersettings() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromUserSettings"]], "function (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.function"]], "getburnuppeakingfactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getBurnupPeakingFactor"]], "getdpaxs() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getDpaXs"]], "getexecuter() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuter"]], "getexecutercls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterOptions"]], "gethistoryparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface static method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getHistoryParams"]], "getiofilenames() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getIOFileNames"]], "getkeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getKeff"]], "getlabel() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getLabel"]], "getoptionscls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getOptionsCls"]], "gettightcouplingvalue() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getTightCouplingValue"]], "interactboc() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactBOC"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactCoupled"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactCoupled"]], "interacteoc() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactEOC"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactEveryNode"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactEveryNode"]], "name (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.name"]], "updatecycledoseparams() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.updateCycleDoseParams"]], "updatedparate() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateDpaRate"]], "updatefluenceanddpa() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.updateFluenceAndDpa"]], "updateloadpaddose() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.updateLoadpadDose"]], "updatemaxdpaparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[247, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateMaxDpaParams"]], "armi.physics.neutronics.globalflux.tests": [[248, "module-armi.physics.neutronics.globalFlux.tests"]], "mockcore (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCore"]], "mockcoreparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCoreParams"]], "mockglobalfluxexecuter (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxExecuter"]], "mockglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface"]], "mockglobalfluxwithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters"]], "mockglobalfluxwithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform"]], "mockreactor (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactor"]], "mockreactorparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactorParams"]], "testglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface"]], "testglobalfluxinterfacewithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters"]], "testglobalfluxinterfacewithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform"]], "testglobalfluxoptions (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions"]], "testglobalfluxresultmapper (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper"]], "testglobalfluxutils (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils"]], "applydummyflux() (in module armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.applyDummyFlux"]], "armi.physics.neutronics.globalflux.tests.test_globalfluxinterface": [[249, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecuters method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecutersnonuniform method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform.getExecuterOptions"]], "interactboc() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactBOC"]], "interacteverynode() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactEveryNode"]], "test_calcreactionrates() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxutils method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils.test_calcReactionRates"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_calculateKeff"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_calculateKeff"]], "test_checkenergybalance() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_checkEnergyBalance"]], "test_computedparate() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_computeDpaRate"]], "test_executerinteraction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_executerInteraction"]], "test_executerinteractionnonuniformassems() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_executerInteractionNonUniformAssems"]], "test_getburnuppeakingfactor() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactor"]], "test_getburnuppeakingfactorzero() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactorZero"]], "test_getdpaxs() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getDpaXs"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getExecuterCls"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_getExecuterCls"]], "test_gethistoryparams() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getHistoryParams"]], "test_getiofilenames() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getIOFileNames"]], "test_gettightcouplingvalue() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getTightCouplingValue"]], "test_interaction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_interaction"]], "test_mapper() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_mapper"]], "test_readfromreactors() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromReactors"]], "test_readfromsettings() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromSettings"]], "test_savephysicsfiles() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_savePhysicsFiles"]], "test_settightcouplingdefaults() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[249, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_setTightCouplingDefaults"]], "armi.physics.neutronics.isotopicdepletion": [[250, "module-armi.physics.neutronics.isotopicDepletion"]], "crosssectiontable (class in armi.physics.neutronics.isotopicdepletion.crosssectiontable)": [[251, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable"]], "add() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[251, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.add"]], "addmultigroupxs() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[251, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.addMultiGroupXS"]], "armi.physics.neutronics.isotopicdepletion.crosssectiontable": [[251, "module-armi.physics.neutronics.isotopicDepletion.crossSectionTable"]], "getname() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[251, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.getName"]], "getxsectable() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[251, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.getXsecTable"]], "hasvalues() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[251, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.hasValues"]], "makereactionratetable() (in module armi.physics.neutronics.isotopicdepletion.crosssectiontable)": [[251, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.makeReactionRateTable"]], "ratetypes (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable attribute)": [[251, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.rateTypes"]], "setname() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[251, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.setName"]], "abstractisotopicdepleter (class in armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter"]], "abstractisotopicdepletionreader (class in armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepletionReader"]], "csrc (class in armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.Csrc"]], "addtodeplete() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter method)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.addToDeplete"]], "armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface": [[252, "module-armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface"]], "function (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter attribute)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.function"]], "getchemicalvector() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.csrc method)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.Csrc.getChemicalVector"]], "gettodeplete() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter method)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.getToDeplete"]], "isdepletable() (in module armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.isDepletable"]], "makexsectable() (in module armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.makeXsecTable"]], "name (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter attribute)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.name"]], "read() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepletionreader method)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepletionReader.read"]], "run() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter method)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.run"]], "setchemicalvector() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.csrc method)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.Csrc.setChemicalVector"]], "settodeplete() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter method)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.setToDeplete"]], "write() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.csrc method)": [[252, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.Csrc.write"]], "armi.physics.neutronics.latticephysics": [[253, "module-armi.physics.neutronics.latticePhysics"]], "latticephysicsinterface (class in armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface"]], "armi.physics.neutronics.latticephysics.latticephysicsinterface": [[254, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "clearxs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.clearXS"]], "computecrosssections() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.computeCrossSections"]], "function (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface attribute)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.function"]], "generatelatticephysicsinputs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.generateLatticePhysicsInputs"]], "getreader() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getReader"]], "getrepresentativeblocks() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getRepresentativeBlocks"]], "getwriters() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getWriters"]], "interactboc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOC"]], "interactbol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOL"]], "interactcoupled() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactCoupled"]], "interacteoc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEOC"]], "interacteverynode() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEveryNode"]], "makecyclexsfilesasbasefiles() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.makeCycleXSFilesAsBaseFiles"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.readExistingXSLibraries"]], "setblockneutronvelocities() (in module armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.setBlockNeutronVelocities"]], "updatephysicscouplingcontrol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updatePhysicsCouplingControl"]], "updatexslibrary() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[254, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updateXSLibrary"]], "coolant_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.COOLANT_CATEGORY"]], "depletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.DEPLETABLE"]], "fission_product_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FISSION_PRODUCT_CATEGORY"]], "fuel_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FUEL_CATEGORY"]], "latticephysicswriter (class in armi.physics.neutronics.latticephysics.latticephysicswriter)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter"]], "represented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.REPRESENTED"]], "structure_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.STRUCTURE_CATEGORY"]], "undepletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNDEPLETABLE"]], "unrepresented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNREPRESENTED"]], "unused_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNUSED_CATEGORY"]], "armi.physics.neutronics.latticephysics.latticephysicswriter": [[255, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "write() (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter method)": [[255, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.write"]], "armi.physics.neutronics.latticephysics.tests": [[256, "module-armi.physics.neutronics.latticePhysics.tests"]], "latticeinterfacetester (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester"]], "latticeinterfacetesterlibfalse (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTesterLibFalse"]], "testlatticephysicsinterface (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface"]], "testlatticephysicsinterfacebase (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterfaceBase"]], "testlatticephysicslibrarycreation (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticephysics.tests.test_latticeinterface": [[257, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.latticeinterfacetester method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester.readExistingXSLibraries"]], "test_includegammaxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_includeGammaXS"]], "test_interactall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactAll"]], "test_interactboc() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNode"]], "test_interacteverynodeall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeAll"]], "test_interacteverynodefirstcoupled() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeFirstCoupled"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactFirstCoupledIteration"]], "test_latticephysicsinterface() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_latticePhysicsInterface"]], "test_libcreation_genxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS"]], "test_libcreation_genxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_2"]], "test_libcreation_genxs_3() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_3"]], "test_libcreation_nogenxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS"]], "test_libcreation_nogenxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[257, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS_2"]], "fakelatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter"]], "testlatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticephysics.tests.test_latticewriter": [[258, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "test_getallnuclidesbytemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInC"]], "test_getallnuclidesbytemperatureincexplicitfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCExplicitFissionProducts"]], "test_getallnuclidesbytemperatureincnone() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCNone"]], "test_getavgnuclidetemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAvgNuclideTemperatureInC"]], "test_getdetailedfpdensities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFPDensities"]], "test_getdetailedfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProducts"]], "test_getdetailedfissionproductspass() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProductsPass"]], "test_getdriverblock() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDriverBlock"]], "test_getfueltemperature() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getFuelTemperature"]], "test_iscriticalbucklingsearchactive() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isCriticalBucklingSearchActive"]], "test_isgammaxsgenerationenabled() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isGammaXSGenerationEnabled"]], "test_issourcedriven() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isSourceDriven"]], "test_latticephysicswriter() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_latticePhysicsWriter"]], "test_writetitle() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_writeTitle"]], "write() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.fakelatticephysicswriter method)": [[258, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter.write"]], "macroxsgenerationinterface (class in armi.physics.neutronics.macroxsgenerationinterface)": [[259, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface"]], "macroxsgenerator (class in armi.physics.neutronics.macroxsgenerationinterface)": [[259, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator"]], "armi.physics.neutronics.macroxsgenerationinterface": [[259, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "buildmacros() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface method)": [[259, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.buildMacros"]], "invokehook() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerator method)": [[259, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator.invokeHook"]], "name (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface attribute)": [[259, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.name"]], "armi.physics.neutronics.parameters": [[260, "module-armi.physics.neutronics.parameters"]], "getneutronicsparameterdefinitions() (in module armi.physics.neutronics.parameters)": [[260, "armi.physics.neutronics.parameters.getNeutronicsParameterDefinitions"]], "pd_plot (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.PD_PLOT"]], "armi.physics.neutronics.reports": [[261, "module-armi.physics.neutronics.reports"]], "generatelineplot() (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.generateLinePlot"]], "insertinitialcorefuelassem() (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.insertInitialCoreFuelAssem"]], "insertneutronicsbolcontent() (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.insertNeutronicsBOLContent"]], "insertneutronicsreport() (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.insertNeutronicsReport"]], "neutronicsplotting() (in module armi.physics.neutronics.reports)": [[261, "armi.physics.neutronics.reports.neutronicsPlotting"]], "armi.physics.neutronics.settings": [[262, "module-armi.physics.neutronics.settings"]], "definesettings() (in module armi.physics.neutronics.settings)": [[262, "armi.physics.neutronics.settings.defineSettings"]], "getneutronicssettingvalidators() (in module armi.physics.neutronics.settings)": [[262, "armi.physics.neutronics.settings.getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[263, "module-armi.physics.neutronics.tests"]], "testblockcollection (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection"]], "testblockcollectionaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage"]], "testblockcollectioncomponentaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage"]], "testblockcollectioncomponentaverage1dcylinder (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder"]], "testblockcollectionfluxweightedaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage"]], "testblockcollectionmedian (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian"]], "testcomponentaveraging (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging"]], "testcrosssectiongroupmanager (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager"]], "testxsnumberconverters (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters"]], "armi.physics.neutronics.tests.test_crosssectionmanager": [[264, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "makeblocks() (in module armi.physics.neutronics.tests.test_crosssectionmanager)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.makeBlocks"]], "test_componentaverage1dcylinder() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_ComponentAverage1DCylinder"]], "test_componentaveragerepblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage.test_ComponentAverageRepBlock"]], "test_add() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_add"]], "test_addxsgroupsfromblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_addXsGroupsFromBlocks"]], "test_calcweightedburnup() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_calcWeightedBurnup"]], "test_checkblocksimilarity() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_checkBlockSimilarity"]], "test_checkcomponentconsistency() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_checkComponentConsistency"]], "test_conversion() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion"]], "test_conversion_2digit() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion_2digit"]], "test_copypregeneratedfiles() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_copyPregeneratedFiles"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionmedian method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian.test_createRepresentativeBlock"]], "test_createrepresentativeblockdissimilar() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlockDissimilar"]], "test_createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocks"]], "test_getaveragecomponentnumberdensities() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentNumberDensities"]], "test_getaveragecomponenttemperature() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperature"]], "test_getaveragecomponenttemperaturenomass() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureNoMass"]], "test_getaveragecomponenttemperaturevariedweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testcomponentaveraging method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestComponentAveraging.test_getAverageComponentTemperatureVariedWeights"]], "test_getblocksingroup() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_getBlocksInGroup"]], "test_getnextavailablexstype() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getNextAvailableXsType"]], "test_getrepresentativeblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_getRepresentativeBlocks"]], "test_interactallcoupled() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactAllCoupled"]], "test_interactboc() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactEveryNode"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_interactFirstCoupledIteration"]], "test_invalidweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_invalidWeights"]], "test_is_pickleable() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_is_pickleable"]], "test_performaveragebycomponent() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_performAverageByComponent"]], "test_setbugroupbounds() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_setBuGroupBounds"]], "test_updateburnupgroups() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_updateBurnupGroups"]], "test_xsgmisrunbeforexs() (armi.physics.neutronics.tests.test_crosssectionmanager.testcrosssectiongroupmanager method)": [[264, "armi.physics.neutronics.tests.test_crossSectionManager.TestCrossSectionGroupManager.test_xsgmIsRunBeforeXS"]], "testcrosssectionsettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings"]], "testxssettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings"]], "armi.physics.neutronics.tests.test_crosssectionsettings": [[265, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "test_badcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_badCrossSections"]], "test_casesettings() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_caseSettings"]], "test_crosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_crossSections"]], "test_csblockrepresentation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentation"]], "test_csblockrepresentationfilelocation() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_csBlockRepresentationFileLocation"]], "test_homogeneousxsdefaultsettingassignment() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_homogeneousXsDefaultSettingAssignment"]], "test_optionalkey() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_optionalKey"]], "test_pregeneratedcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedCrossSections"]], "test_pregeneratedfluxinputs() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedFluxInputs"]], "test_prioritization() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_prioritization"]], "test_setdefaultsettingsbylowestbugrouphomogeneous() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestBuGroupHomogeneous"]], "test_setdefaultsettingsbylowestbugrouponedimensional() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestBuGroupOneDimensional"]], "test_xssettingssetdefault() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_xsSettingsSetDefault"]], "test_yamlio() (armi.physics.neutronics.tests.test_crosssectionsettings.testxssettings method)": [[265, "armi.physics.neutronics.tests.test_crossSectionSettings.TestXSSettings.test_yamlIO"]], "testcrosssectiontable (class in armi.physics.neutronics.tests.test_crosssectiontable)": [[266, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crosssectiontable": [[266, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "test_isotopicdepletioninterface() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[266, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_isotopicDepletionInterface"]], "test_maketable() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[266, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_makeTable"]], "testenergygroups (class in armi.physics.neutronics.tests.test_energygroups)": [[267, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energygroups": [[267, "module-armi.physics.neutronics.tests.test_energyGroups"]], "test_consistenciesbetweengroupstructureandgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[267, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_consistenciesBetweenGroupStructureAndGroupStructureType"]], "test_getfastfluxgroupcutoff() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[267, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_getFastFluxGroupCutoff"]], "test_invalidgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[267, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_invalidGroupStructureType"]], "testmacroxsgenerationinterface (class in armi.physics.neutronics.tests.test_macroxsgenerationinterface)": [[268, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroxsgenerationinterface": [[268, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "test_macroxsgenerationinterfacebasics() (armi.physics.neutronics.tests.test_macroxsgenerationinterface.testmacroxsgenerationinterface method)": [[268, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface.test_macroXSGenerationInterfaceBasics"]], "neutronicsreactortests (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests"]], "testneutronicsplugin (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsplugin": [[269, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "plugin (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin attribute)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.plugin"]], "test_customsettingobjectio() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingObjectIO"]], "test_customsettingroundtrip() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_customSettingRoundTrip"]], "test_kineticsparameterassignment() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_kineticsParameterAssignment"]], "test_neutronicssettingsloaded() (armi.physics.neutronics.tests.test_neutronicsplugin.testneutronicsplugin method)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.TestNeutronicsPlugin.test_neutronicsSettingsLoaded"]], "test_neutronicssettingsvalidators() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[269, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_neutronicsSettingsValidators"]], "safetyplugin (class in armi.physics.safety)": [[270, "armi.physics.safety.SafetyPlugin"]], "armi.physics.safety": [[270, "module-armi.physics.safety"]], "definesettings() (armi.physics.safety.safetyplugin static method)": [[270, "armi.physics.safety.SafetyPlugin.defineSettings"]], "armi.physics.tests": [[271, "module-armi.physics.tests"]], "mockcore (class in armi.physics.tests.test_executers)": [[272, "armi.physics.tests.test_executers.MockCore"]], "mockparams (class in armi.physics.tests.test_executers)": [[272, "armi.physics.tests.test_executers.MockParams"]], "mockreactor (class in armi.physics.tests.test_executers)": [[272, "armi.physics.tests.test_executers.MockReactor"]], "testexecuters (class in armi.physics.tests.test_executers)": [[272, "armi.physics.tests.test_executers.TestExecuters"]], "testexecutionoptions (class in armi.physics.tests.test_executers)": [[272, "armi.physics.tests.test_executers.TestExecutionOptions"]], "armi.physics.tests.test_executers": [[272, "module-armi.physics.tests.test_executers"]], "test_collectinputsandoutputs() (armi.physics.tests.test_executers.testexecuters method)": [[272, "armi.physics.tests.test_executers.TestExecuters.test_collectInputsAndOutputs"]], "test_runexternalexecutable() (armi.physics.tests.test_executers.testexecuters method)": [[272, "armi.physics.tests.test_executers.TestExecuters.test_runExternalExecutable"]], "test_runningdirectorypath() (armi.physics.tests.test_executers.testexecutionoptions method)": [[272, "armi.physics.tests.test_executers.TestExecutionOptions.test_runningDirectoryPath"]], "test_updaterundir() (armi.physics.tests.test_executers.testexecuters method)": [[272, "armi.physics.tests.test_executers.TestExecuters.test_updateRunDir"]], "armi.physics.thermalhydraulics": [[273, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalhydraulics.const": [[274, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalhydraulics.parameters": [[275, "module-armi.physics.thermalHydraulics.parameters"]], "getparameterdefinitions() (in module armi.physics.thermalhydraulics.parameters)": [[275, "armi.physics.thermalHydraulics.parameters.getParameterDefinitions"]], "thermalhydraulicsplugin (class in armi.physics.thermalhydraulics.plugin)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin"]], "afterconstructionofassemblies() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.afterConstructionOfAssemblies"]], "armi.physics.thermalhydraulics.plugin": [[276, "module-armi.physics.thermalHydraulics.plugin"]], "defineparameters() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineParameters"]], "definesettings() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[276, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.exposeInterfaces"]], "armi.physics.thermalhydraulics.settings": [[277, "module-armi.physics.thermalHydraulics.settings"]], "definesettings() (in module armi.physics.thermalhydraulics.settings)": [[277, "armi.physics.thermalHydraulics.settings.defineSettings"]], "definevalidators() (in module armi.physics.thermalhydraulics.settings)": [[277, "armi.physics.thermalHydraulics.settings.defineValidators"]], "armipluginmanager (class in armi.pluginmanager)": [[278, "armi.pluginManager.ArmiPluginManager"]], "armi.pluginmanager": [[278, "module-armi.pluginManager"]], "counter (armi.pluginmanager.armipluginmanager property)": [[278, "armi.pluginManager.ArmiPluginManager.counter"]], "register() (armi.pluginmanager.armipluginmanager method)": [[278, "armi.pluginManager.ArmiPluginManager.register"]], "unregister() (armi.pluginmanager.armipluginmanager method)": [[278, "armi.pluginManager.ArmiPluginManager.unregister"]], "armiplugin (class in armi.plugins)": [[279, "armi.plugins.ArmiPlugin"]], "pluginerror": [[279, "armi.plugins.PluginError"]], "userplugin (class in armi.plugins)": [[279, "armi.plugins.UserPlugin"]], "afterconstructionofassemblies() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.afterConstructionOfAssemblies"]], "armi.plugins": [[279, "module-armi.plugins"]], "collectinterfacedescriptions() (in module armi.plugins)": [[279, "armi.plugins.collectInterfaceDescriptions"]], "defineassemblytypes() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineBlockTypes"]], "defineblueprintssections() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineBlueprintsSections"]], "definecasedependencies() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineEntryPoints"]], "defineflags() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineFlags"]], "defineguiwidgets() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineGuiWidgets"]], "defineparameterrenames() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineParameterRenames"]], "defineparameterrenames() (armi.plugins.userplugin static method)": [[279, "armi.plugins.UserPlugin.defineParameterRenames"]], "defineparameters() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineParameters"]], "defineparameters() (armi.plugins.userplugin static method)": [[279, "armi.plugins.UserPlugin.defineParameters"]], "definesettings() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineSettings"]], "definesettings() (armi.plugins.userplugin static method)": [[279, "armi.plugins.UserPlugin.defineSettings"]], "definesettingsvalidators() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineSettingsValidators"]], "definesettingsvalidators() (armi.plugins.userplugin static method)": [[279, "armi.plugins.UserPlugin.defineSettingsValidators"]], "definesystembuilders() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.defineSystemBuilders"]], "exposeinterfaces() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.exposeInterfaces"]], "getnewpluginmanager() (in module armi.plugins)": [[279, "armi.plugins.getNewPluginManager"]], "getoperatorclassfromruntype() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.getOperatorClassFromRunType"]], "getreportcontents() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.mpiActionRequiresReset"]], "onprocesscoreloading() (armi.plugins.armiplugin static method)": [[279, "armi.plugins.ArmiPlugin.onProcessCoreLoading"]], "reactorplugin (class in armi.reactor)": [[280, "armi.reactor.ReactorPlugin"]], "armi.reactor": [[280, "module-armi.reactor"]], "defineassemblytypes() (armi.reactor.reactorplugin static method)": [[280, "armi.reactor.ReactorPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.reactor.reactorplugin static method)": [[280, "armi.reactor.ReactorPlugin.defineBlockTypes"]], "definesystembuilders() (armi.reactor.reactorplugin static method)": [[280, "armi.reactor.ReactorPlugin.defineSystemBuilders"]], "assembly (class in armi.reactor.assemblies)": [[281, "armi.reactor.assemblies.Assembly"]], "cartesianassembly (class in armi.reactor.assemblies)": [[281, "armi.reactor.assemblies.CartesianAssembly"]], "database (armi.reactor.assemblies.assembly attribute)": [[281, "armi.reactor.assemblies.Assembly.DATABASE"]], "hexassembly (class in armi.reactor.assemblies)": [[281, "armi.reactor.assemblies.HexAssembly"]], "load_queue (armi.reactor.assemblies.assembly attribute)": [[281, "armi.reactor.assemblies.Assembly.LOAD_QUEUE"]], "not_in_core (armi.reactor.assemblies.assembly attribute)": [[281, "armi.reactor.assemblies.Assembly.NOT_IN_CORE"]], "rzassembly (class in armi.reactor.assemblies)": [[281, "armi.reactor.assemblies.RZAssembly"]], "spent_fuel_pool (armi.reactor.assemblies.assembly attribute)": [[281, "armi.reactor.assemblies.Assembly.SPENT_FUEL_POOL"]], "thrzassembly (class in armi.reactor.assemblies)": [[281, "armi.reactor.assemblies.ThRZAssembly"]], "add() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.add"]], "adjustresolution() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.adjustResolution"]], "armi.reactor.assemblies": [[281, "module-armi.reactor.assemblies"]], "calculatezcoords() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.calculateZCoords"]], "coords() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.coords"]], "countblockswithflags() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.countBlocksWithFlags"]], "doubleresolution() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.doubleResolution"]], "dump() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.dump"]], "getage() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getAge"]], "getarea() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getArea"]], "getaverageplenumtemperature() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getAveragePlenumTemperature"]], "getaxialmesh() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getAxialMesh"]], "getbindexfromzindex() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getBIndexFromZIndex"]], "getblockatelevation() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getBlockAtElevation"]], "getblocks() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getBlocks"]], "getblocksandz() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getBlocksAndZ"]], "getblocksbetweenelevations() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getBlocksBetweenElevations"]], "getdim() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getDim"]], "getelevationboundariesbyblocktype() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getElevationBoundariesByBlockType"]], "getelevationsmatchingparamvalue() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getElevationsMatchingParamValue"]], "getfirstblock() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getFirstBlock"]], "getfirstblockbytype() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getFirstBlockByType"]], "getheight() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getHeight"]], "getlocation() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getLocation"]], "getnum() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getNum"]], "getparamofzfunction() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getParamOfZFunction"]], "getparamvaluesatz() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getParamValuesAtZ"]], "getpinplenumvolumeincubicmeters() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getPinPlenumVolumeInCubicMeters"]], "getreactiveheight() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getReactiveHeight"]], "getsymmetryfactor() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getSymmetryFactor"]], "gettotalheight() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getTotalHeight"]], "getvolume() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.getVolume"]], "hascontinuouscoolantchannel() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.hasContinuousCoolantChannel"]], "insert() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.insert"]], "makeaxialsnaplist() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.makeAxialSnapList"]], "makenamefromassemnum() (armi.reactor.assemblies.assembly static method)": [[281, "armi.reactor.assemblies.Assembly.makeNameFromAssemNum"]], "makeunique() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.makeUnique"]], "moveto() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.moveTo"]], "pdefs (armi.reactor.assemblies.assembly attribute)": [[281, "armi.reactor.assemblies.Assembly.pDefs"]], "paramcollectiontype (armi.reactor.assemblies.assembly attribute)": [[281, "armi.reactor.assemblies.Assembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.cartesianassembly attribute)": [[281, "armi.reactor.assemblies.CartesianAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.hexassembly attribute)": [[281, "armi.reactor.assemblies.HexAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.rzassembly attribute)": [[281, "armi.reactor.assemblies.RZAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.thrzassembly attribute)": [[281, "armi.reactor.assemblies.ThRZAssembly.paramCollectionType"]], "radialinner() (armi.reactor.assemblies.rzassembly method)": [[281, "armi.reactor.assemblies.RZAssembly.radialInner"]], "radialouter() (armi.reactor.assemblies.rzassembly method)": [[281, "armi.reactor.assemblies.RZAssembly.radialOuter"]], "reestablishblockorder() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.reestablishBlockOrder"]], "renameblocksaccordingtoassemblynum() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.renameBlocksAccordingToAssemblyNum"]], "renumber() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.renumber"]], "rotate() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.rotate"]], "rotatepins() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.rotatePins"]], "setblockheights() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.setBlockHeights"]], "setblockmesh() (armi.reactor.assemblies.assembly method)": [[281, "armi.reactor.assemblies.Assembly.setBlockMesh"]], "thetainner() (armi.reactor.assemblies.rzassembly method)": [[281, "armi.reactor.assemblies.RZAssembly.thetaInner"]], "thetaouter() (armi.reactor.assemblies.rzassembly method)": [[281, "armi.reactor.assemblies.RZAssembly.thetaOuter"]], "assemblylist (class in armi.reactor.assemblylists)": [[282, "armi.reactor.assemblyLists.AssemblyList"]], "autofiller (class in armi.reactor.assemblylists)": [[282, "armi.reactor.assemblyLists.AutoFiller"]], "rowmajorautofiller (class in armi.reactor.assemblylists)": [[282, "armi.reactor.assemblyLists.RowMajorAutoFiller"]], "spentfuelpool (class in armi.reactor.assemblylists)": [[282, "armi.reactor.assemblyLists.SpentFuelPool"]], "add() (armi.reactor.assemblylists.assemblylist method)": [[282, "armi.reactor.assemblyLists.AssemblyList.add"]], "add() (armi.reactor.assemblylists.spentfuelpool method)": [[282, "armi.reactor.assemblyLists.SpentFuelPool.add"]], "armi.reactor.assemblylists": [[282, "module-armi.reactor.assemblyLists"]], "assemblyadded() (armi.reactor.assemblylists.autofiller method)": [[282, "armi.reactor.assemblyLists.AutoFiller.assemblyAdded"]], "assemblyadded() (armi.reactor.assemblylists.rowmajorautofiller method)": [[282, "armi.reactor.assemblyLists.RowMajorAutoFiller.assemblyAdded"]], "count() (armi.reactor.assemblylists.assemblylist method)": [[282, "armi.reactor.assemblyLists.AssemblyList.count"]], "getassembly() (armi.reactor.assemblylists.assemblylist method)": [[282, "armi.reactor.assemblyLists.AssemblyList.getAssembly"]], "getnextlocation() (armi.reactor.assemblylists.autofiller method)": [[282, "armi.reactor.assemblyLists.AutoFiller.getNextLocation"]], "getnextlocation() (armi.reactor.assemblylists.rowmajorautofiller method)": [[282, "armi.reactor.assemblyLists.RowMajorAutoFiller.getNextLocation"]], "normalizenames() (armi.reactor.assemblylists.spentfuelpool method)": [[282, "armi.reactor.assemblyLists.SpentFuelPool.normalizeNames"]], "paramcollectiontype (armi.reactor.assemblylists.assemblylist attribute)": [[282, "armi.reactor.assemblyLists.AssemblyList.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblylists.spentfuelpool attribute)": [[282, "armi.reactor.assemblyLists.SpentFuelPool.paramCollectionType"]], "r (armi.reactor.assemblylists.assemblylist property)": [[282, "armi.reactor.assemblyLists.AssemblyList.r"]], "report() (armi.reactor.assemblylists.spentfuelpool method)": [[282, "armi.reactor.assemblyLists.SpentFuelPool.report"]], "armi.reactor.assemblyparameters": [[283, "module-armi.reactor.assemblyParameters"]], "getassemblyparameterdefinitions() (in module armi.reactor.assemblyparameters)": [[283, "armi.reactor.assemblyParameters.getAssemblyParameterDefinitions"]], "armi.reactor.blockparameters": [[284, "module-armi.reactor.blockParameters"]], "getblockparameterdefinitions() (in module armi.reactor.blockparameters)": [[284, "armi.reactor.blockParameters.getBlockParameterDefinitions"]], "block (class in armi.reactor.blocks)": [[285, "armi.reactor.blocks.Block"]], "cartesianblock (class in armi.reactor.blocks)": [[285, "armi.reactor.blocks.CartesianBlock"]], "hexblock (class in armi.reactor.blocks)": [[285, "armi.reactor.blocks.HexBlock"]], "pitch_component_type (armi.reactor.blocks.block attribute)": [[285, "armi.reactor.blocks.Block.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.cartesianblock attribute)": [[285, "armi.reactor.blocks.CartesianBlock.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.hexblock attribute)": [[285, "armi.reactor.blocks.HexBlock.PITCH_COMPONENT_TYPE"]], "pitch_dimension (armi.reactor.blocks.block attribute)": [[285, "armi.reactor.blocks.Block.PITCH_DIMENSION"]], "pitch_dimension (armi.reactor.blocks.cartesianblock attribute)": [[285, "armi.reactor.blocks.CartesianBlock.PITCH_DIMENSION"]], "thrzblock (class in armi.reactor.blocks)": [[285, "armi.reactor.blocks.ThRZBlock"]], "add() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.add"]], "adjustdensity() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.adjustDensity"]], "adjustuenrich() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.adjustUEnrich"]], "armi.reactor.blocks": [[285, "module-armi.reactor.blocks"]], "autocreatespatialgrids() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.autoCreateSpatialGrids"]], "autocreatespatialgrids() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.autoCreateSpatialGrids"]], "axialinner() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.axialInner"]], "axialouter() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.axialOuter"]], "breakfuelcomponentsintoindividuals() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.breakFuelComponentsIntoIndividuals"]], "completeinitialloading() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.completeInitialLoading"]], "coords() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.coords"]], "coords() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.coords"]], "core (armi.reactor.blocks.block property)": [[285, "armi.reactor.blocks.Block.core"]], "createhomogenizedcopy() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.createHomogenizedCopy"]], "createhomogenizedcopy() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.createHomogenizedCopy"]], "getarea() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getArea"]], "getblocks() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getBlocks"]], "getcomponentareafrac() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getComponentAreaFrac"]], "getcomponentsinlinkedorder() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getComponentsInLinkedOrder"]], "getcomponentsthatarelinkedto() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getComponentsThatAreLinkedTo"]], "getdim() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getDim"]], "getdimensions() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getDimensions"]], "getductip() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getDuctIP"]], "getductop() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getDuctOP"]], "getflowarea() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getFlowArea"]], "getflowareaperpin() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getFlowAreaPerPin"]], "getheight() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getHeight"]], "gethydraulicdiameter() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getHydraulicDiameter"]], "gethydraulicdiameter() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getHydraulicDiameter"]], "getintegratedmgflux() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getIntegratedMgFlux"]], "getlargestcomponent() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getLargestComponent"]], "getlocation() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getLocation"]], "getlumpedfissionproductcollection() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getLumpedFissionProductCollection"]], "getmaxarea() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.cartesianblock method)": [[285, "armi.reactor.blocks.CartesianBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.getMaxArea"]], "getmaxvolume() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getMaxVolume"]], "getmfp() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getMfp"]], "getmgflux() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getMgFlux"]], "getmicrosuffix() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getMicroSuffix"]], "getnumpins() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getNumPins"]], "getpincenterflattoflat() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.cartesianblock method)": [[285, "armi.reactor.blocks.CartesianBlock.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getPinCenterFlatToFlat"]], "getpincoordinates() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getPinCoordinates"]], "getpinpitch() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getPinPitch"]], "getpinpitch() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getPinPitch"]], "getpintoductgap() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getPinToDuctGap"]], "getpitch() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getPitch"]], "getplenumpin() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getPlenumPin"]], "getrotationnum() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getRotationNum"]], "getsmeardensity() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getSmearDensity"]], "getsortedcomponentsinsideofcomponent() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getSortedComponentsInsideOfComponent"]], "getsymmetryfactor() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.cartesianblock method)": [[285, "armi.reactor.blocks.CartesianBlock.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getSymmetryFactor"]], "getvolume() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getVolume"]], "getwettedperimeter() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getWettedPerimeter"]], "getwettedperimeter() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.getWettedPerimeter"]], "getwirewrapcladgap() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.getWireWrapCladGap"]], "haspinpitch() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.hasPinPitch"]], "haspinpitch() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.hasPinPitch"]], "initializepinlocations() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.initializePinLocations"]], "isonwhichsymmetryline() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.isOnWhichSymmetryLine"]], "isplenumpin() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.isPlenumPin"]], "makename() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.makeName"]], "mergewithblock() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.mergeWithBlock"]], "pdefs (armi.reactor.blocks.block attribute)": [[285, "armi.reactor.blocks.Block.pDefs"]], "paramcollectiontype (armi.reactor.blocks.block attribute)": [[285, "armi.reactor.blocks.Block.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.cartesianblock attribute)": [[285, "armi.reactor.blocks.CartesianBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.hexblock attribute)": [[285, "armi.reactor.blocks.HexBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.thrzblock attribute)": [[285, "armi.reactor.blocks.ThRZBlock.paramCollectionType"]], "plotflux() (armi.reactor.blocks.block static method)": [[285, "armi.reactor.blocks.Block.plotFlux"]], "r (armi.reactor.blocks.block property)": [[285, "armi.reactor.blocks.Block.r"]], "radialinner() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.radialInner"]], "radialouter() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.radialOuter"]], "remove() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.remove"]], "removeall() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.removeAll"]], "replaceblockwithblock() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.replaceBlockWithBlock"]], "rotate() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.rotate"]], "rotate() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.rotate"]], "rotatepins() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.rotatePins"]], "setareafractionsreport() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setAreaFractionsReport"]], "setaxialexptargetcomp() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setAxialExpTargetComp"]], "setb10volparam() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setB10VolParam"]], "setbulimitinfo() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setBuLimitInfo"]], "setheight() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setHeight"]], "setpinmgfluxes() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setPinMgFluxes"]], "setpinpowers() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.setPinPowers"]], "setpitch() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.setPitch"]], "setpitch() (armi.reactor.blocks.cartesianblock method)": [[285, "armi.reactor.blocks.CartesianBlock.setPitch"]], "setrotationnum() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.setRotationNum"]], "thetainner() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.thetaInner"]], "thetaouter() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.thetaOuter"]], "uniqid (armi.reactor.blocks.block attribute)": [[285, "armi.reactor.blocks.Block.uniqID"]], "updatecomponentdims() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.updateComponentDims"]], "verifyblockdims() (armi.reactor.blocks.block method)": [[285, "armi.reactor.blocks.Block.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.hexblock method)": [[285, "armi.reactor.blocks.HexBlock.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.thrzblock method)": [[285, "armi.reactor.blocks.ThRZBlock.verifyBlockDims"]], "blueprints (class in armi.reactor.blueprints)": [[286, "armi.reactor.blueprints.Blueprints"]], "adddefaultsfp() (armi.reactor.blueprints.blueprints method)": [[286, "armi.reactor.blueprints.Blueprints.addDefaultSFP"]], "armi.reactor.blueprints": [[286, "module-armi.reactor.blueprints"]], "attributes (armi.reactor.blueprints.blueprints attribute)": [[286, "armi.reactor.blueprints.Blueprints.attributes"]], "constructassem() (armi.reactor.blueprints.blueprints method)": [[286, "armi.reactor.blueprints.Blueprints.constructAssem"]], "load() (armi.reactor.blueprints.blueprints class method)": [[286, "armi.reactor.blueprints.Blueprints.load"]], "loadfromcs() (in module armi.reactor.blueprints)": [[286, "armi.reactor.blueprints.loadFromCs"]], "migrate() (armi.reactor.blueprints.blueprints class method)": [[286, "armi.reactor.blueprints.Blueprints.migrate"]], "migrate() (in module armi.reactor.blueprints)": [[286, "armi.reactor.blueprints.migrate"]], "assemblyblueprint (class in armi.reactor.blueprints.assemblyblueprint)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint"]], "assemblykeyedlist (class in armi.reactor.blueprints.assemblyblueprint)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList"]], "bycomponentmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[287, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications"]], "materialmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[287, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications"]], "modifications (class in armi.reactor.blueprints.assemblyblueprint)": [[287, "armi.reactor.blueprints.assemblyBlueprint.Modifications"]], "armi.reactor.blueprints.assemblyblueprint": [[287, "module-armi.reactor.blueprints.assemblyBlueprint"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.Modifications.attributes"]], "byspecifier (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist property)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.bySpecifier"]], "construct() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint method)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.construct"]], "getassemclass() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint class method)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.getAssemClass"]], "item_type (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.item_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.Modifications.key_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[287, "armi.reactor.blueprints.assemblyBlueprint.Modifications.value_type"]], "blockblueprint (class in armi.reactor.blueprints.blockblueprint)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint"]], "blockkeyedlist (class in armi.reactor.blueprints.blockblueprint)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList"]], "blocklist (class in armi.reactor.blueprints.blockblueprint)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockList"]], "armi.reactor.blueprints.blockblueprint": [[288, "module-armi.reactor.blueprints.blockBlueprint"]], "attributes (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.attributes"]], "attributes (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.attributes"]], "construct() (armi.reactor.blueprints.blockblueprint.blockblueprint method)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.construct"]], "item_type (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blocklist attribute)": [[288, "armi.reactor.blueprints.blockBlueprint.BlockList.item_type"]], "componentblueprint (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint"]], "componentdimension (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentDimension"]], "componentgroup (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroup"]], "componentgroups (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroups"]], "componentkeyedlist (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList"]], "groupedcomponent (class in armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.GroupedComponent"]], "armi.reactor.blueprints.componentblueprint": [[289, "module-armi.reactor.blueprints.componentBlueprint"]], "attributes (armi.reactor.blueprints.componentblueprint.componentblueprint attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentdimension attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.groupedcomponent attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.GroupedComponent.attributes"]], "construct() (armi.reactor.blueprints.componentblueprint.componentblueprint method)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.construct"]], "expandelementals() (in module armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.expandElementals"]], "from_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.from_yaml"]], "insertdepletablenuclidekeys() (in module armi.reactor.blueprints.componentblueprint)": [[289, "armi.reactor.blueprints.componentBlueprint.insertDepletableNuclideKeys"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.item_type"]], "to_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[289, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.to_yaml"]], "gridblueprint (class in armi.reactor.blueprints.gridblueprint)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint"]], "grids (class in armi.reactor.blueprints.gridblueprint)": [[290, "armi.reactor.blueprints.gridBlueprint.Grids"]], "triplet (class in armi.reactor.blueprints.gridblueprint)": [[290, "armi.reactor.blueprints.gridBlueprint.Triplet"]], "armi.reactor.blueprints.gridblueprint": [[290, "module-armi.reactor.blueprints.gridBlueprint"]], "attributes (armi.reactor.blueprints.gridblueprint.gridblueprint attribute)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.grids attribute)": [[290, "armi.reactor.blueprints.gridBlueprint.Grids.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.triplet attribute)": [[290, "armi.reactor.blueprints.gridBlueprint.Triplet.attributes"]], "construct() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.construct"]], "expandtofull() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.expandToFull"]], "getlocators() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getLocators"]], "getmultilocator() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getMultiLocator"]], "item_type (armi.reactor.blueprints.gridblueprint.grids attribute)": [[290, "armi.reactor.blueprints.gridBlueprint.Grids.item_type"]], "readfromlatticemap (armi.reactor.blueprints.gridblueprint.gridblueprint property)": [[290, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.readFromLatticeMap"]], "savetostream() (in module armi.reactor.blueprints.gridblueprint)": [[290, "armi.reactor.blueprints.gridBlueprint.saveToStream"]], "customisotopic (class in armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic"]], "customisotopics (class in armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics"]], "nuclideflag (class in armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlag"]], "nuclideflags (class in armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlags"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopic method)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.apply"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopics method)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.apply"]], "armi.reactor.blueprints.isotopicoptions": [[291, "module-armi.reactor.blueprints.isotopicOptions"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflag attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.attributes"]], "autoupdatenuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.autoUpdateNuclideFlags"]], "density (armi.reactor.blueprints.isotopicoptions.customisotopic property)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.density"]], "eleexpandinfobasedoncodeendf() (in module armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.eleExpandInfoBasedOnCodeENDF"]], "fileasactiveorinert() (armi.reactor.blueprints.isotopicoptions.nuclideflag method)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.fileAsActiveOrInert"]], "from_yaml() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml"]], "from_yaml_key_val() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml_key_val"]], "gendefaultnucflags() (in module armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.genDefaultNucFlags"]], "getallnuclidebasesbylibrary() (in module armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.getAllNuclideBasesByLibrary"]], "getdefaultnuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[291, "armi.reactor.blueprints.isotopicOptions.getDefaultNuclideFlags"]], "item_type (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.item_type"]], "item_type (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.item_type"]], "key_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.key_type"]], "value_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[291, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.value_type"]], "systemblueprint (class in armi.reactor.blueprints.reactorblueprint)": [[292, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint"]], "systems (class in armi.reactor.blueprints.reactorblueprint)": [[292, "armi.reactor.blueprints.reactorBlueprint.Systems"]], "armi.reactor.blueprints.reactorblueprint": [[292, "module-armi.reactor.blueprints.reactorBlueprint"]], "attributes (armi.reactor.blueprints.reactorblueprint.systemblueprint attribute)": [[292, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.attributes"]], "attributes (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[292, "armi.reactor.blueprints.reactorBlueprint.Systems.attributes"]], "construct() (armi.reactor.blueprints.reactorblueprint.systemblueprint method)": [[292, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.construct"]], "item_type (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[292, "armi.reactor.blueprints.reactorBlueprint.Systems.item_type"]], "summarizematerialdata() (in module armi.reactor.blueprints.reactorblueprint)": [[292, "armi.reactor.blueprints.reactorBlueprint.summarizeMaterialData"]], "armi.reactor.blueprints.tests": [[293, "module-armi.reactor.blueprints.tests"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_assemblyblueprints)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyblueprints": [[294, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "loadcustomassembly() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.loadCustomAssembly"]], "test_checkparamconsistency() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.test_checkParamConsistency"]], "twoblockinput_correct (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_correct"]], "twoblockinput_wrongheights (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongHeights"]], "twoblockinput_wrongmatmods (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMatMods"]], "twoblockinput_wrongmeshpoints (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMeshPoints"]], "twoblockinput_wrongxstypes (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongXSTypes"]], "testgriddedblock (class in armi.reactor.blueprints.tests.test_blockblueprints)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockblueprints": [[295, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "test_blocklattice() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_blockLattice"]], "test_constructspatialgrid() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_constructSpatialGrid"]], "test_densityconsistentwithcomponentconstructor() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_densityConsistentWithComponentConstructor"]], "test_explicitflags() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_explicitFlags"]], "test_getlocatorsatlatticepositions() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_getLocatorsAtLatticePositions"]], "test_nonlatticecomponenthasrightmult() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[295, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_nonLatticeComponentHasRightMult"]], "testblueprints (class in armi.reactor.blueprints.tests.test_blueprints)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints"]], "testblueprintsschema (class in armi.reactor.blueprints.tests.test_blueprints)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints": [[296, "module-armi.reactor.blueprints.tests.test_blueprints"]], "test_assemblyparameters() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_assemblyParameters"]], "test_cladding_invalid() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_cladding_invalid"]], "test_componentdimensions() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_componentDimensions"]], "test_componentgroupinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_componentGroupInput"]], "test_components() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_components"]], "test_customisotopics() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_customIsotopics"]], "test_getassemblytypebyspecifier() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_getAssemblyTypeBySpecifier"]], "test_merge() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_merge"]], "test_noduplicatekeysinyamlblueprints() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_noDuplicateKeysInYamlBlueprints"]], "test_nuclideflags() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclideFlags"]], "test_nuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_nuclides"]], "test_nuclidesmc2v2() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v2"]], "test_nuclidesmc2v3() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v3"]], "test_roundtripcompletebp() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_roundTripCompleteBP"]], "test_specialisotopicvectors() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_specialIsotopicVectors"]], "test_toplevelcomponentinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_topLevelComponentInput"]], "test_tracenuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_traceNuclides"]], "test_withoutblocks() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[296, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_withoutBlocks"]], "testcomponentblueprint (class in armi.reactor.blueprints.tests.test_componentblueprint)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentblueprint": [[297, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "componentstring (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint attribute)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.componentString"]], "test_autodepletable() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_autoDepletable"]], "test_componentinitializationamericiumcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationAmericiumCustomIsotopics"]], "test_componentinitializationcontrolcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationControlCustomIsotopics"]], "test_componentinitializationincompleteburnchain() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationIncompleteBurnChain"]], "test_componentinitializationthoriumburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumBurnCustomIsotopics"]], "test_componentinitializationthoriumnoburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[297, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumNoBurnCustomIsotopics"]], "testcustomisotopics (class in armi.reactor.blueprints.tests.test_customisotopics)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics"]], "testcustomisotopics_errorconditions (class in armi.reactor.blueprints.tests.test_customisotopics)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions"]], "testnuclideflagsexpansion (class in armi.reactor.blueprints.tests.test_customisotopics)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customisotopics": [[298, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "test_densitymustbepositive() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_densityMustBePositive"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_expandedNatural"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.test_expandedNatural"]], "test_massfractionsareapplied() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_massFractionsAreApplied"]], "test_nonconformantelementname() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_nonConformantElementName"]], "test_numberdensities() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensities"]], "test_numberdensitiesanchor() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensitiesAnchor"]], "test_numberdensitiescannotspecifydensity() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_numberDensitiesCannotSpecifyDensity"]], "test_numberfractions() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberFractions"]], "test_unmodified() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unmodified"]], "test_unrepresentedareonlynatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unrepresentedAreOnlyNatural"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlString"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion attribute)": [[298, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.yamlString"]], "testgridbproundtrip (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip"]], "testgridblueprintssection (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection"]], "testrztgridblueprint (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint"]], "armi.reactor.blueprints.tests.test_gridblueprints": [[299, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_construct"]], "test_contents() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_contents"]], "test_geomfile() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_geomFile"]], "test_roundtrip() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_roundTrip"]], "test_simpleread() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleRead"]], "test_simplereadlatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadLatticeMap"]], "test_simplereadnolatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadNoLatticeMap"]], "test_tinymap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridbproundtrip method)": [[299, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBPRoundTrip.test_tinyMap"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_materialmodifications)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialmodifications": [[300, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "boroninput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.boronInput"]], "loaduzrassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadUZrAssembly"]], "test_both_u235_zr_wt_frac_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_both_u235_zr_wt_frac_modification"]], "test_checkbycomponentmaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_checkByComponentMaterialInput"]], "test_filtermaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_filterMaterialInput"]], "test_invalidmatmodname() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidMatModName"]], "test_invalid_component_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalid_component_modification"]], "test_matmodsupthemro() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_matModsUpTheMRO"]], "test_nomaterialmodifications() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_noMaterialModifications"]], "test_u235_wt_frac_bycomponent_modification1() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification1"]], "test_u235_wt_frac_bycomponent_modification2() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification2"]], "test_u235_wt_frac_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_modification"]], "test_zr_wt_frac_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_zr_wt_frac_modification"]], "uzrinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[300, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.uZrInput"]], "testreactorblueprints (class in armi.reactor.blueprints.tests.test_reactorblueprints)": [[301, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorblueprints": [[301, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[301, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_construct"]], "test_materialdatasummary() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[301, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_materialDataSummary"]], "test_simple_read() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[301, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_simple_read"]], "dimension_names (armi.reactor.components.derivedshape attribute)": [[302, "armi.reactor.components.DerivedShape.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.nullcomponent attribute)": [[302, "armi.reactor.components.NullComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[302, "armi.reactor.components.PositiveOrNegativeVolumeComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedcomponent attribute)": [[302, "armi.reactor.components.UnshapedComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.zeromasscomponent attribute)": [[302, "armi.reactor.components.ZeroMassComponent.DIMENSION_NAMES"]], "derivedshape (class in armi.reactor.components)": [[302, "armi.reactor.components.DerivedShape"]], "init_signature (armi.reactor.components.derivedshape attribute)": [[302, "armi.reactor.components.DerivedShape.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.nullcomponent attribute)": [[302, "armi.reactor.components.NullComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[302, "armi.reactor.components.PositiveOrNegativeVolumeComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedcomponent attribute)": [[302, "armi.reactor.components.UnshapedComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.zeromasscomponent attribute)": [[302, "armi.reactor.components.ZeroMassComponent.INIT_SIGNATURE"]], "nullcomponent (class in armi.reactor.components)": [[302, "armi.reactor.components.NullComponent"]], "positiveornegativevolumecomponent (class in armi.reactor.components)": [[302, "armi.reactor.components.PositiveOrNegativeVolumeComponent"]], "unshapedcomponent (class in armi.reactor.components)": [[302, "armi.reactor.components.UnshapedComponent"]], "unshapedvolumetriccomponent (class in armi.reactor.components)": [[302, "armi.reactor.components.UnshapedVolumetricComponent"]], "zeromasscomponent (class in armi.reactor.components)": [[302, "armi.reactor.components.ZeroMassComponent"]], "armi.reactor.components": [[302, "module-armi.reactor.components"]], "computevolume() (armi.reactor.components.derivedshape method)": [[302, "armi.reactor.components.DerivedShape.computeVolume"]], "factory() (in module armi.reactor.components)": [[302, "armi.reactor.components.factory"]], "fromcomponent() (armi.reactor.components.unshapedcomponent static method)": [[302, "armi.reactor.components.UnshapedComponent.fromComponent"]], "getboundingcircleouterdiameter() (armi.reactor.components.derivedshape method)": [[302, "armi.reactor.components.DerivedShape.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.nullcomponent method)": [[302, "armi.reactor.components.NullComponent.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.unshapedcomponent method)": [[302, "armi.reactor.components.UnshapedComponent.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.derivedshape method)": [[302, "armi.reactor.components.DerivedShape.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedcomponent method)": [[302, "armi.reactor.components.UnshapedComponent.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedvolumetriccomponent method)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.getComponentVolume"]], "getdimension() (armi.reactor.components.nullcomponent method)": [[302, "armi.reactor.components.NullComponent.getDimension"]], "getnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[302, "armi.reactor.components.ZeroMassComponent.getNumberDensity"]], "getvolume() (armi.reactor.components.derivedshape method)": [[302, "armi.reactor.components.DerivedShape.getVolume"]], "is3d (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.is3D"]], "pdefs (armi.reactor.components.unshapedcomponent attribute)": [[302, "armi.reactor.components.UnshapedComponent.pDefs"]], "paramcollectiontype (armi.reactor.components.derivedshape attribute)": [[302, "armi.reactor.components.DerivedShape.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.nullcomponent attribute)": [[302, "armi.reactor.components.NullComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[302, "armi.reactor.components.PositiveOrNegativeVolumeComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedcomponent attribute)": [[302, "armi.reactor.components.UnshapedComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.zeromasscomponent attribute)": [[302, "armi.reactor.components.ZeroMassComponent.paramCollectionType"]], "setnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[302, "armi.reactor.components.ZeroMassComponent.setNumberDensity"]], "setvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[302, "armi.reactor.components.UnshapedVolumetricComponent.setVolume"]], "circle (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.Circle"]], "dimension_names (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.solidrectangle attribute)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.square attribute)": [[303, "armi.reactor.components.basicShapes.Square.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.DIMENSION_NAMES"]], "hexagon (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.Hexagon"]], "init_signature (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.solidrectangle attribute)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.square attribute)": [[303, "armi.reactor.components.basicShapes.Square.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.INIT_SIGNATURE"]], "rectangle (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.Rectangle"]], "solidrectangle (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.SolidRectangle"]], "square (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.Square"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.solidrectangle attribute)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.THERMAL_EXPANSION_DIMS"]], "triangle (class in armi.reactor.components.basicshapes)": [[303, "armi.reactor.components.basicShapes.Triangle"]], "armi.reactor.components.basicshapes": [[303, "module-armi.reactor.components.basicShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.circle method)": [[303, "armi.reactor.components.basicShapes.Circle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[303, "armi.reactor.components.basicShapes.Hexagon.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[303, "armi.reactor.components.basicShapes.Rectangle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.square method)": [[303, "armi.reactor.components.basicShapes.Square.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.circle method)": [[303, "armi.reactor.components.basicShapes.Circle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[303, "armi.reactor.components.basicShapes.Hexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[303, "armi.reactor.components.basicShapes.Rectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.square method)": [[303, "armi.reactor.components.basicShapes.Square.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.basicshapes.circle method)": [[303, "armi.reactor.components.basicShapes.Circle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.hexagon method)": [[303, "armi.reactor.components.basicShapes.Hexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.rectangle method)": [[303, "armi.reactor.components.basicShapes.Rectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.solidrectangle method)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.square method)": [[303, "armi.reactor.components.basicShapes.Square.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.triangle method)": [[303, "armi.reactor.components.basicShapes.Triangle.getComponentArea"]], "getperimeter() (armi.reactor.components.basicshapes.hexagon method)": [[303, "armi.reactor.components.basicShapes.Hexagon.getPerimeter"]], "getpitchdata() (armi.reactor.components.basicshapes.hexagon method)": [[303, "armi.reactor.components.basicShapes.Hexagon.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.rectangle method)": [[303, "armi.reactor.components.basicShapes.Rectangle.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.square method)": [[303, "armi.reactor.components.basicShapes.Square.getPitchData"]], "is3d (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.is3D"]], "is3d (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.is3D"]], "is3d (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.solidrectangle attribute)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.square attribute)": [[303, "armi.reactor.components.basicShapes.Square.is3D"]], "is3d (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.is3D"]], "isencapsulatedby() (armi.reactor.components.basicshapes.circle method)": [[303, "armi.reactor.components.basicShapes.Circle.isEncapsulatedBy"]], "islatticecomponent() (armi.reactor.components.basicshapes.rectangle method)": [[303, "armi.reactor.components.basicShapes.Rectangle.isLatticeComponent"]], "pdefs (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.pDefs"]], "pdefs (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.pDefs"]], "paramcollectiontype (armi.reactor.components.basicshapes.circle attribute)": [[303, "armi.reactor.components.basicShapes.Circle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.hexagon attribute)": [[303, "armi.reactor.components.basicShapes.Hexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.rectangle attribute)": [[303, "armi.reactor.components.basicShapes.Rectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.solidrectangle attribute)": [[303, "armi.reactor.components.basicShapes.SolidRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.square attribute)": [[303, "armi.reactor.components.basicShapes.Square.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.triangle attribute)": [[303, "armi.reactor.components.basicShapes.Triangle.paramCollectionType"]], "dimension_names (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedhexagon attribute)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedrectangle attribute)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedsquare attribute)": [[304, "armi.reactor.components.complexShapes.HoledSquare.DIMENSION_NAMES"]], "helix (class in armi.reactor.components.complexshapes)": [[304, "armi.reactor.components.complexShapes.Helix"]], "hexholedcircle (class in armi.reactor.components.complexshapes)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle"]], "holedhexagon (class in armi.reactor.components.complexshapes)": [[304, "armi.reactor.components.complexShapes.HoledHexagon"]], "holedrectangle (class in armi.reactor.components.complexshapes)": [[304, "armi.reactor.components.complexShapes.HoledRectangle"]], "holedsquare (class in armi.reactor.components.complexshapes)": [[304, "armi.reactor.components.complexShapes.HoledSquare"]], "init_signature (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedhexagon attribute)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedrectangle attribute)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedsquare attribute)": [[304, "armi.reactor.components.complexShapes.HoledSquare.INIT_SIGNATURE"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedhexagon attribute)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedrectangle attribute)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedsquare attribute)": [[304, "armi.reactor.components.complexShapes.HoledSquare.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.complexshapes": [[304, "module-armi.reactor.components.complexShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.complexshapes.helix method)": [[304, "armi.reactor.components.complexShapes.Helix.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.helix method)": [[304, "armi.reactor.components.complexShapes.Helix.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.hexholedcircle method)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedhexagon method)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedrectangle method)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedsquare method)": [[304, "armi.reactor.components.complexShapes.HoledSquare.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.complexshapes.helix method)": [[304, "armi.reactor.components.complexShapes.Helix.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.hexholedcircle method)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedhexagon method)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedrectangle method)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedsquare method)": [[304, "armi.reactor.components.complexShapes.HoledSquare.getComponentArea"]], "is3d (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.is3D"]], "pdefs (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.pDefs"]], "pdefs (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedhexagon attribute)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedrectangle attribute)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedsquare attribute)": [[304, "armi.reactor.components.complexShapes.HoledSquare.pDefs"]], "paramcollectiontype (armi.reactor.components.complexshapes.helix attribute)": [[304, "armi.reactor.components.complexShapes.Helix.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[304, "armi.reactor.components.complexShapes.HexHoledCircle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedhexagon attribute)": [[304, "armi.reactor.components.complexShapes.HoledHexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedrectangle attribute)": [[304, "armi.reactor.components.complexShapes.HoledRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedsquare attribute)": [[304, "armi.reactor.components.complexShapes.HoledSquare.paramCollectionType"]], "component (class in armi.reactor.components.component)": [[305, "armi.reactor.components.component.Component"]], "componenttype (class in armi.reactor.components.component)": [[305, "armi.reactor.components.component.ComponentType"]], "dimension_names (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.component.shapedcomponent attribute)": [[305, "armi.reactor.components.component.ShapedComponent.DIMENSION_NAMES"]], "init_signature (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.component.shapedcomponent attribute)": [[305, "armi.reactor.components.component.ShapedComponent.INIT_SIGNATURE"]], "non_dimension_names (armi.reactor.components.component.componenttype attribute)": [[305, "armi.reactor.components.component.ComponentType.NON_DIMENSION_NAMES"]], "shapedcomponent (class in armi.reactor.components.component)": [[305, "armi.reactor.components.component.ShapedComponent"]], "thermal_expansion_dims (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.THERMAL_EXPANSION_DIMS"]], "types (armi.reactor.components.component.componenttype attribute)": [[305, "armi.reactor.components.component.ComponentType.TYPES"]], "adjustdensityforheightexpansion() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.adjustDensityForHeightExpansion"]], "adjustmassenrichment() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.adjustMassEnrichment"]], "applymaterialmassfracstonumberdensities() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.applyMaterialMassFracsToNumberDensities"]], "armi.reactor.components.component": [[305, "module-armi.reactor.components.component"]], "backup() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.backUp"]], "clearcache() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.clearCache"]], "clearlinkedcache() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.clearLinkedCache"]], "componenttypeisvalid() (in module armi.reactor.components.component)": [[305, "armi.reactor.components.component.componentTypeIsValid"]], "computevolume() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.computeVolume"]], "containssolidmaterial() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.containsSolidMaterial"]], "containsvoidmaterial() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.containsVoidMaterial"]], "density() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.density"]], "dimensionislinked() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.dimensionIsLinked"]], "gasporosity (armi.reactor.components.component.component property)": [[305, "armi.reactor.components.component.Component.gasPorosity"]], "getarea() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getArea"]], "getboundingcircleouterdiameter() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getComponentVolume"]], "getdimension() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getDimension"]], "getdimensionnameslinkedto() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getDimensionNamesLinkedTo"]], "getenrichment() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getEnrichment"]], "getfuelmass() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getFuelMass"]], "getheightfactor() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getHeightFactor"]], "getintegratedmgflux() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getIntegratedMgFlux"]], "getlinkedcomponents() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getLinkedComponents"]], "getlumpedfissionproductcollection() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getLumpedFissionProductCollection"]], "getmass() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getMass"]], "getmassenrichment() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getMassEnrichment"]], "getmicrosuffix() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getMicroSuffix"]], "getnuclidenumberdensities() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getNuclides"]], "getnumberdensity() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getNumberDensity"]], "getpitchdata() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getPitchData"]], "getproperties() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getProperties"]], "getthermalexpansionfactor() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getThermalExpansionFactor"]], "getvolume() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.getVolume"]], "is3d (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.is3D"]], "itercomponents() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.iterComponents"]], "liquidporosity (armi.reactor.components.component.component property)": [[305, "armi.reactor.components.component.Component.liquidPorosity"]], "mergenuclidesinto() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.mergeNuclidesInto"]], "pdefs (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.pDefs"]], "paramcollectiontype (armi.reactor.components.component.component attribute)": [[305, "armi.reactor.components.component.Component.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.component.shapedcomponent attribute)": [[305, "armi.reactor.components.component.ShapedComponent.paramCollectionType"]], "printcontents() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.printContents"]], "resolvelinkeddims() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.resolveLinkedDims"]], "restorebackup() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.restoreBackup"]], "setarea() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setArea"]], "setdimension() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setDimension"]], "setdimensionreport() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setDimensionReport"]], "setlink() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setLink"]], "setlumpedfissionproducts() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setLumpedFissionProducts"]], "setname() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setName"]], "setnumberdensities() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setNumberDensities"]], "setnumberdensity() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setNumberDensity"]], "setproperties() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setProperties"]], "settemperature() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setTemperature"]], "setvolume() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.setVolume"]], "temperatureinc (armi.reactor.components.component.component property)": [[305, "armi.reactor.components.component.Component.temperatureInC"]], "temperatureink (armi.reactor.components.component.component property)": [[305, "armi.reactor.components.component.Component.temperatureInK"]], "updatedims() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.updateDims"]], "updatenumberdensities() (armi.reactor.components.component.component method)": [[305, "armi.reactor.components.component.Component.updateNumberDensities"]], "armi.reactor.components.componentparameters": [[306, "module-armi.reactor.components.componentParameters"]], "getcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getCircleParameterDefinitions"]], "getcomponentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getComponentParameterDefinitions"]], "getcubeparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getCubeParameterDefinitions"]], "gethelixparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getHelixParameterDefinitions"]], "gethexholedcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getHexHoledCircleParameterDefinitions"]], "gethexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getHexagonParameterDefinitions"]], "getholedhexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getHoledHexagonParameterDefinitions"]], "getholedrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getHoledRectangleParameterDefinitions"]], "getradialsegmentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getRadialSegmentParameterDefinitions"]], "getrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getRectangleParameterDefinitions"]], "gettriangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getTriangleParameterDefinitions"]], "getunshapedparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[306, "armi.reactor.components.componentParameters.getUnshapedParameterDefinitions"]], "cube (class in armi.reactor.components.volumetricshapes)": [[307, "armi.reactor.components.volumetricShapes.Cube"]], "dimension_names (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.DIMENSION_NAMES"]], "differentialradialsegment (class in armi.reactor.components.volumetricshapes)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment"]], "init_signature (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.INIT_SIGNATURE"]], "radialsegment (class in armi.reactor.components.volumetricshapes)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment"]], "sphere (class in armi.reactor.components.volumetricshapes)": [[307, "armi.reactor.components.volumetricShapes.Sphere"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.volumetricshapes": [[307, "module-armi.reactor.components.volumetricShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.radialsegment method)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.sphere method)": [[307, "armi.reactor.components.volumetricShapes.Sphere.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.cube method)": [[307, "armi.reactor.components.volumetricShapes.Cube.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.radialsegment method)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.sphere method)": [[307, "armi.reactor.components.volumetricShapes.Sphere.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.cube method)": [[307, "armi.reactor.components.volumetricShapes.Cube.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.radialsegment method)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.sphere method)": [[307, "armi.reactor.components.volumetricShapes.Sphere.getComponentVolume"]], "is3d (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.is3D"]], "is3d (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.is3D"]], "pdefs (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.pDefs"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.cube attribute)": [[307, "armi.reactor.components.volumetricShapes.Cube.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[307, "armi.reactor.components.volumetricShapes.RadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.sphere attribute)": [[307, "armi.reactor.components.volumetricShapes.Sphere.paramCollectionType"]], "updatedims() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[307, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.updateDims"]], "armiobject (class in armi.reactor.composites)": [[308, "armi.reactor.composites.ArmiObject"]], "composite (class in armi.reactor.composites)": [[308, "armi.reactor.composites.Composite"]], "compositemodeltype (class in armi.reactor.composites)": [[308, "armi.reactor.composites.CompositeModelType"]], "flagserializer (class in armi.reactor.composites)": [[308, "armi.reactor.composites.FlagSerializer"]], "stateretainer (class in armi.reactor.composites)": [[308, "armi.reactor.composites.StateRetainer"]], "types (armi.reactor.composites.compositemodeltype attribute)": [[308, "armi.reactor.composites.CompositeModelType.TYPES"]], "add() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.add"]], "addmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.addMass"]], "addmasses() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.addMasses"]], "adjustmassenrichment() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.adjustMassEnrichment"]], "adjustmassfrac() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.adjustMassFrac"]], "append() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.append"]], "armi.reactor.composites": [[308, "module-armi.reactor.composites"]], "backup() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.backUp"]], "calcavgparam() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.calcAvgParam"]], "calctotalparam() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.calcTotalParam"]], "changendensbyfactor() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.changeNDensByFactor"]], "clearcache() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.clearCache"]], "clearnumberdensities() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.clearNumberDensities"]], "constituentreport() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.constituentReport"]], "containsatleastonechildwithflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.containsAtLeastOneChildWithFlags"]], "containsheavymetal() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.containsHeavyMetal"]], "containsonlychildrenwithflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.containsOnlyChildrenWithFlags"]], "copyparamsfrom() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.copyParamsFrom"]], "copyparamstochildren() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.copyParamsToChildren"]], "density() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.density"]], "dochildrenhaveflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.doChildrenHaveFlags"]], "duplicate() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.duplicate"]], "expandallelementalstoisotopics() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.expandAllElementalsToIsotopics"]], "expandelementaltoisotopics() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.expandElementalToIsotopics"]], "extend() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.extend"]], "gathermaterialsbyvolume() (in module armi.reactor.composites)": [[308, "armi.reactor.composites.gatherMaterialsByVolume"]], "getancestor() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getAncestor"]], "getancestoranddistance() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getAncestorAndDistance"]], "getancestorwithflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getAncestorWithFlags"]], "getarea() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getArea"]], "getatomicweight() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getAtomicWeight"]], "getaveragetempinc() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getAverageTempInC"]], "getboronmassenrich() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getBoronMassEnrich"]], "getboundingcircleouterdiameter() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getBoundingCircleOuterDiameter"]], "getboundingindices() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getBoundingIndices"]], "getcaptureenergygenerationconstants() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getCaptureEnergyGenerationConstants"]], "getchildparamvalues() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getChildParamValues"]], "getchildren() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getChildren"]], "getchildren() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getChildren"]], "getchildrenoftype() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getChildrenOfType"]], "getchildrenwithflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getChildrenWithFlags"]], "getchildrenwithflags() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getChildrenWithFlags"]], "getchildrenwithnuclides() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getChildrenWithNuclides"]], "getcomponent() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponent"]], "getcomponentbyname() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponentByName"]], "getcomponentnames() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponentNames"]], "getcomponents() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponents"]], "getcomponents() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getComponents"]], "getcomponentsofmaterial() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponentsOfMaterial"]], "getcomponentsofshape() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getComponentsOfShape"]], "getdominantmaterial() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getDominantMaterial"]], "getdominantmaterial() (in module armi.reactor.composites)": [[308, "armi.reactor.composites.getDominantMaterial"]], "getfpmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getFPMass"]], "getfissilemass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getFissileMass"]], "getfissilemassenrich() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getFissileMassEnrich"]], "getfissionenergygenerationconstants() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getFissionEnergyGenerationConstants"]], "getfuelmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getFuelMass"]], "getgammaenergydepositionconstants() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getGammaEnergyDepositionConstants"]], "gethmdens() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getHMDens"]], "gethmmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getHMMass"]], "gethmmoles() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getHMMoles"]], "getintegratedmgflux() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getIntegratedMgFlux"]], "getintegratedmgflux() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getIntegratedMgFlux"]], "getlumpedfissionproductcollection() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getLumpedFissionProductCollection"]], "getlumpedfissionproductcollection() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getLumpedFissionProductCollection"]], "getlumpedfissionproductsifnecessary() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getLumpedFissionProductsIfNecessary"]], "getmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMass"]], "getmassfrac() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMassFrac"]], "getmassfracs() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMassFracs"]], "getmasses() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMasses"]], "getmaxarea() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMaxArea"]], "getmaxparam() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMaxParam"]], "getmaxuraniummassenrich() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMaxUraniumMassEnrich"]], "getmaxvolume() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMaxVolume"]], "getmgflux() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMgFlux"]], "getmicrosuffix() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMicroSuffix"]], "getminparam() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getMinParam"]], "getname() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getName"]], "getneutronenergydepositionconstants() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNeutronEnergyDepositionConstants"]], "getnuclidenumberdensities() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNuclides"]], "getnumcomponents() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNumComponents"]], "getnumberdensities() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNumberDensities"]], "getnumberdensity() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNumberDensity"]], "getnumberofatoms() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getNumberOfAtoms"]], "getparamnames() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getParamNames"]], "getparametercollection() (armi.reactor.composites.armiobject class method)": [[308, "armi.reactor.composites.ArmiObject.getParameterCollection"]], "getpufrac() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getPuFrac"]], "getpumass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getPuMass"]], "getpumoles() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getPuMoles"]], "getpun() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getPuN"]], "getreactionratedict() (in module armi.reactor.composites)": [[308, "armi.reactor.composites.getReactionRateDict"]], "getreactionrates() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.getReactionRates"]], "getsymmetryfactor() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getSymmetryFactor"]], "gettotalenergygenerationconstants() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getTotalEnergyGenerationConstants"]], "gettotalndens() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getTotalNDens"]], "gettype() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getType"]], "geturaniummassenrich() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getUraniumMassEnrich"]], "geturaniumnumenrich() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getUraniumNumEnrich"]], "getvolume() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getVolume"]], "getvolumefraction() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getVolumeFraction"]], "getvolumefractions() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getVolumeFractions"]], "getzrfrac() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.getZrFrac"]], "hascomponents() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.hasComponents"]], "hasflags() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.hasFlags"]], "index() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.index"]], "insert() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.insert"]], "isfuel() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.isFuel"]], "isonwhichsymmetryline() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.isOnWhichSymmetryLine"]], "itercomponents() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.iterComponents"]], "itercomponents() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.iterComponents"]], "moveto() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.moveTo"]], "namecontains() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.nameContains"]], "pdefs (armi.reactor.composites.armiobject attribute)": [[308, "armi.reactor.composites.ArmiObject.pDefs"]], "pack() (armi.reactor.composites.flagserializer static method)": [[308, "armi.reactor.composites.FlagSerializer.pack"]], "paramcollectiontype (armi.reactor.composites.armiobject attribute)": [[308, "armi.reactor.composites.ArmiObject.paramCollectionType"]], "paramcollectiontype (armi.reactor.composites.composite attribute)": [[308, "armi.reactor.composites.Composite.paramCollectionType"]], "printcontents() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.printContents"]], "printdensities() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.printDensities"]], "remove() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.remove"]], "removeall() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.removeAll"]], "removemass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.removeMass"]], "requireslumpedfissionproducts() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.requiresLumpedFissionProducts"]], "resolvelinkeddims() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.resolveLinkedDims"]], "restorebackup() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.restoreBackup"]], "retainstate() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.retainState"]], "setchildren() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.setChildren"]], "setchildrenlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setChildrenLumpedFissionProducts"]], "setcomponentdimensionsreport() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setComponentDimensionsReport"]], "setlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setLumpedFissionProducts"]], "setmass() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setMass"]], "setmassfrac() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setMassFrac"]], "setmassfracs() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setMassFracs"]], "setmasses() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setMasses"]], "setname() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setName"]], "setnumberdensities() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setNumberDensities"]], "setnumberdensity() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setNumberDensity"]], "settype() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.setType"]], "sort() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.sort"]], "syncmpistate() (armi.reactor.composites.composite method)": [[308, "armi.reactor.composites.Composite.syncMpiState"]], "unpack() (armi.reactor.composites.flagserializer class method)": [[308, "armi.reactor.composites.FlagSerializer.unpack"]], "updatenumberdensities() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.updateNumberDensities"]], "updateparamsfrom() (armi.reactor.composites.armiobject method)": [[308, "armi.reactor.composites.ArmiObject.updateParamsFrom"]], "version (armi.reactor.composites.flagserializer attribute)": [[308, "armi.reactor.composites.FlagSerializer.version"]], "armi.reactor.converters": [[309, "module-armi.reactor.converters"]], "assemblyaxiallinkage (class in armi.reactor.converters.axialexpansionchanger)": [[310, "armi.reactor.converters.axialExpansionChanger.AssemblyAxialLinkage"]], "axialexpansionchanger (class in armi.reactor.converters.axialexpansionchanger)": [[310, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger"]], "expansiondata (class in armi.reactor.converters.axialexpansionchanger)": [[310, "armi.reactor.converters.axialExpansionChanger.ExpansionData"]], "applycoldheightmassincrease() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[310, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.applyColdHeightMassIncrease"]], "armi.reactor.converters.axialexpansionchanger": [[310, "module-armi.reactor.converters.axialExpansionChanger"]], "axiallyexpandassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[310, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.axiallyExpandAssembly"]], "computethermalexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[310, "armi.reactor.converters.axialExpansionChanger.ExpansionData.computeThermalExpansionFactors"]], "determinetargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[310, "armi.reactor.converters.axialExpansionChanger.ExpansionData.determineTargetComponent"]], "expandcolddimstohot() (in module armi.reactor.converters.axialexpansionchanger)": [[310, "armi.reactor.converters.axialExpansionChanger.expandColdDimsToHot"]], "getdefaultreferenceassem() (in module armi.reactor.converters.axialexpansionchanger)": [[310, "armi.reactor.converters.axialExpansionChanger.getDefaultReferenceAssem"]], "getexpansionfactor() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[310, "armi.reactor.converters.axialExpansionChanger.ExpansionData.getExpansionFactor"]], "getsolidcomponents() (in module armi.reactor.converters.axialexpansionchanger)": [[310, "armi.reactor.converters.axialExpansionChanger.getSolidComponents"]], "istargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[310, "armi.reactor.converters.axialExpansionChanger.ExpansionData.isTargetComponent"]], "makeassemsabletosnaptouniformmesh() (in module armi.reactor.converters.axialexpansionchanger)": [[310, "armi.reactor.converters.axialExpansionChanger.makeAssemsAbleToSnapToUniformMesh"]], "managecoremesh() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[310, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.manageCoreMesh"]], "performprescribedaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[310, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.performPrescribedAxialExpansion"]], "performthermalaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[310, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.performThermalAxialExpansion"]], "reset() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[310, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.reset"]], "setassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[310, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.setAssembly"]], "setexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[310, "armi.reactor.converters.axialExpansionChanger.ExpansionData.setExpansionFactors"]], "updatecomponenttemp() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[310, "armi.reactor.converters.axialExpansionChanger.ExpansionData.updateComponentTemp"]], "updatecomponenttempsby1dtempfield() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[310, "armi.reactor.converters.axialExpansionChanger.ExpansionData.updateComponentTempsBy1DTempField"]], "blockavgtocylconverter (class in armi.reactor.converters.blockconverters)": [[311, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter"]], "blockconverter (class in armi.reactor.converters.blockconverters)": [[311, "armi.reactor.converters.blockConverters.BlockConverter"]], "componentmerger (class in armi.reactor.converters.blockconverters)": [[311, "armi.reactor.converters.blockConverters.ComponentMerger"]], "hexcomponentstocylconverter (class in armi.reactor.converters.blockconverters)": [[311, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter"]], "multiplecomponentmerger (class in armi.reactor.converters.blockconverters)": [[311, "armi.reactor.converters.blockConverters.MultipleComponentMerger"]], "armi.reactor.converters.blockconverters": [[311, "module-armi.reactor.converters.blockConverters"]], "convert() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[311, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.blockconverter method)": [[311, "armi.reactor.converters.blockConverters.BlockConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.componentmerger method)": [[311, "armi.reactor.converters.blockConverters.ComponentMerger.convert"]], "convert() (armi.reactor.converters.blockconverters.hexcomponentstocylconverter method)": [[311, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.multiplecomponentmerger method)": [[311, "armi.reactor.converters.blockConverters.MultipleComponentMerger.convert"]], "dissolvecomponentintocomponent() (armi.reactor.converters.blockconverters.blockconverter method)": [[311, "armi.reactor.converters.blockConverters.BlockConverter.dissolveComponentIntoComponent"]], "getouterdiamfromidandarea() (in module armi.reactor.converters.blockconverters)": [[311, "armi.reactor.converters.blockConverters.getOuterDiamFromIDAndArea"]], "plotconvertedblock() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[311, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.plotConvertedBlock"]], "radiifromhexpitches() (in module armi.reactor.converters.blockconverters)": [[311, "armi.reactor.converters.blockConverters.radiiFromHexPitches"]], "radiifromhexsides() (in module armi.reactor.converters.blockconverters)": [[311, "armi.reactor.converters.blockConverters.radiiFromHexSides"]], "radiifromringofrods() (in module armi.reactor.converters.blockconverters)": [[311, "armi.reactor.converters.blockConverters.radiiFromRingOfRods"]], "restablishlinks() (armi.reactor.converters.blockconverters.blockconverter method)": [[311, "armi.reactor.converters.blockConverters.BlockConverter.restablishLinks"]], "expected_input_symmetry (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger attribute)": [[312, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.EXPECTED_INPUT_SYMMETRY"]], "edgeassemblychanger (class in armi.reactor.converters.geometryconverters)": [[312, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger"]], "fuelassemnummodifier (class in armi.reactor.converters.geometryconverters)": [[312, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier"]], "geometrychanger (class in armi.reactor.converters.geometryconverters)": [[312, "armi.reactor.converters.geometryConverters.GeometryChanger"]], "geometryconverter (class in armi.reactor.converters.geometryconverters)": [[312, "armi.reactor.converters.geometryConverters.GeometryConverter"]], "hextorzconverter (class in armi.reactor.converters.geometryconverters)": [[312, "armi.reactor.converters.geometryConverters.HexToRZConverter"]], "hextorzthetaconverter (class in armi.reactor.converters.geometryconverters)": [[312, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter"]], "thirdcorehextofullcorechanger (class in armi.reactor.converters.geometryconverters)": [[312, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger"]], "addedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[312, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.addEdgeAssemblies"]], "addring() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[312, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.addRing"]], "armi.reactor.converters.geometryconverters": [[312, "module-armi.reactor.converters.geometryConverters"]], "convert() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[312, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.convert"]], "convert() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[312, "armi.reactor.converters.geometryConverters.GeometryChanger.convert"]], "convert() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[312, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.convert"]], "convert() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[312, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.convert"]], "createhomogenizedrztblock() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[312, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.createHomogenizedRZTBlock"]], "plotconvertedreactor() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[312, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.plotConvertedReactor"]], "removeedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[312, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.removeEdgeAssemblies"]], "reset() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[312, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.reset"]], "reset() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[312, "armi.reactor.converters.geometryConverters.GeometryChanger.reset"]], "reset() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[312, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.reset"]], "restorepreviousgeometry() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[312, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.restorePreviousGeometry"]], "scaleparamsrelatedtosymmetry() (armi.reactor.converters.geometryconverters.edgeassemblychanger static method)": [[312, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.scaleParamsRelatedToSymmetry"]], "meshconverter (class in armi.reactor.converters.meshconverters)": [[313, "armi.reactor.converters.meshConverters.MeshConverter"]], "rzthetareactormeshconverter (class in armi.reactor.converters.meshconverters)": [[313, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter"]], "rzthetareactormeshconverterbyringcompositionaxialbins (class in armi.reactor.converters.meshconverters)": [[313, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialBins"]], "rzthetareactormeshconverterbyringcompositionaxialcoordinates (class in armi.reactor.converters.meshconverters)": [[313, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"]], "rzthetareactormeshconverterbyringcompositionaxialflags (class in armi.reactor.converters.meshconverters)": [[313, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialFlags"]], "armi.reactor.converters.meshconverters": [[313, "module-armi.reactor.converters.meshConverters"]], "checklastvalueinlist() (in module armi.reactor.converters.meshconverters)": [[313, "armi.reactor.converters.meshConverters.checkLastValueInList"]], "checklistbounds() (in module armi.reactor.converters.meshconverters)": [[313, "armi.reactor.converters.meshConverters.checkListBounds"]], "generatebins() (in module armi.reactor.converters.meshconverters)": [[313, "armi.reactor.converters.meshConverters.generateBins"]], "generatemesh() (armi.reactor.converters.meshconverters.meshconverter method)": [[313, "armi.reactor.converters.meshConverters.MeshConverter.generateMesh"]], "generatemesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[313, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.generateMesh"]], "setaxialmesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[313, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setAxialMesh"]], "setringstoconvert() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[313, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setRingsToConvert"]], "setthetamesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[313, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setThetaMesh"]], "writemeshdata() (armi.reactor.converters.meshconverters.meshconverter method)": [[313, "armi.reactor.converters.meshConverters.MeshConverter.writeMeshData"]], "writemeshdata() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[313, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.writeMeshData"]], "armi.reactor.converters.parametersweeps": [[314, "module-armi.reactor.converters.parameterSweeps"]], "custommodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[315, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier"]], "neutronicconvergencemodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[315, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier"]], "priority (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter attribute)": [[315, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.PRIORITY"]], "parametersweepconverter (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[315, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter"]], "settingsmodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[315, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier"]], "armi.reactor.converters.parametersweeps.generalparametersweepconverters": [[315, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.custommodifier method)": [[315, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.neutronicconvergencemodifier method)": [[315, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter method)": [[315, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.settingsmodifier method)": [[315, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier.convert"]], "adjustcladthicknessbyid() (in module armi.reactor.converters.pintypeblockconverters)": [[316, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByID"]], "adjustcladthicknessbyod() (in module armi.reactor.converters.pintypeblockconverters)": [[316, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByOD"]], "adjustsmeardensity() (in module armi.reactor.converters.pintypeblockconverters)": [[316, "armi.reactor.converters.pinTypeBlockConverters.adjustSmearDensity"]], "armi.reactor.converters.pintypeblockconverters": [[316, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests": [[317, "module-armi.reactor.converters.tests"]], "axialexpansiontestbase (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase"]], "fakemat (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat"]], "fakematexception (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException"]], "steel_component_lst (armi.reactor.converters.tests.test_axialexpansionchanger.axialexpansiontestbase attribute)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase.Steel_Component_Lst"]], "temperature (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.Temperature"]], "testaxialexpansionheight (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight"]], "testconservation (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation"]], "testdeterminetargetcomponent (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent"]], "testexceptions (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions"]], "testgetsolidcomponents (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents"]], "testinputheightsconsideredhot (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot"]], "testlinkage (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage"]], "testmanagecoremesh (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh"]], "armi.reactor.converters.tests.test_axialexpansionchanger": [[318, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "buildtestassemblywithfakematerial() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.buildTestAssemblyWithFakeMaterial"]], "checkcoldblockheight() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.checkColdBlockHeight"]], "checkcoldheightblockmass() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.checkColdHeightBlockMass"]], "complexconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.complexConservationTest"]], "expandassemformassconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.expandAssemForMassConservationTest"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.linearExpansionPercent"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.linearExpansionPercent"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat attribute)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.name"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception attribute)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.name"]], "runtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.runTest"]], "test_annularhexoverlappingthickannularhex() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_AnnularHexOverlappingThickAnnularHex"]], "test_assemblyaxialexpansionexception() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_AssemblyAxialExpansionException"]], "test_assemblyaxialexpansionheight() (armi.reactor.converters.tests.test_axialexpansionchanger.testaxialexpansionheight method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight.test_AssemblyAxialExpansionHeight"]], "test_annularpinnotoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_annularPinNotOverlappingWithAnnulus"]], "test_annularpinoverlappingwithannuls() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_annularPinOverlappingWithAnnuls"]], "test_coldassemblyexpansion() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.test_coldAssemblyExpansion"]], "test_computethermalexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_computeThermalExpansionFactors"]], "test_determinelinked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_determineLinked"]], "test_determinetargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponent"]], "test_determinetargetcomponentblockwithmultipleflags() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponentBlockWithMultipleFlags"]], "test_differentmultnotoverlapping() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_differentMultNotOverlapping"]], "test_getlinkedcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_getLinkedComponents"]], "test_getsolidcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testgetsolidcomponents method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents.test_getSolidComponents"]], "test_isfuellocked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isFuelLocked"]], "test_istopdummyblockpresent() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isTopDummyBlockPresent"]], "test_liquids() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_liquids"]], "test_managecoremesh() (armi.reactor.converters.tests.test_axialexpansionchanger.testmanagecoremesh method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh.test_manageCoreMesh"]], "test_manuallysettargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_manuallySetTargetComponent"]], "test_nomovementaclp() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_noMovementACLP"]], "test_overlappingsolidpins() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_overlappingSolidPins"]], "test_prescribedexpansioncontractionconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_prescribedExpansionContractionConservation"]], "test_reset() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_reset"]], "test_setexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_setExpansionFactors"]], "test_solidpinnotoverlappingannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_solidPinNotOverlappingAnnulus"]], "test_solidpinoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_solidPinOverlappingWithAnnulus"]], "test_specifytargetcomponent_notfound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_NotFound"]], "test_specifytargetcomponent_singlesolid() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_singleSolid"]], "test_specifytargetcomponet_multiplefound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponet_MultipleFound"]], "test_targetcomponentmassconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_targetComponentMassConservation"]], "test_thermalexpansioncontractionconservation_complex() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_complex"]], "test_thermalexpansioncontractionconservation_simple() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_thermalExpansionContractionConservation_simple"]], "test_thinannularpinoverlappingwiththickannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_thinAnnularPinOverlappingWithThickAnnulus"]], "test_unshapedcomponentandcircle() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_unshapedComponentAndCircle"]], "test_updatecomponenttempsby1dtempfieldruntimeerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldRuntimeError"]], "test_updatecomponenttempsby1dtempfieldvalueerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[318, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldValueError"]], "testblockconverter (class in armi.reactor.converters.tests.test_blockconverter)": [[319, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter"]], "testtocircles (class in armi.reactor.converters.tests.test_blockconverter)": [[319, "armi.reactor.converters.tests.test_blockConverter.TestToCircles"]], "armi.reactor.converters.tests.test_blockconverter": [[319, "module-armi.reactor.converters.tests.test_blockConverter"]], "buildcontrolblockwithlinkednegativeareacomponent() (in module armi.reactor.converters.tests.test_blockconverter)": [[319, "armi.reactor.converters.tests.test_blockConverter.buildControlBlockWithLinkedNegativeAreaComponent"]], "test_build_nthring() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[319, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_build_NthRing"]], "test_convert() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[319, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convert"]], "test_convertcartesianlatticewithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[319, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertCartesianLatticeWithFuelDriver"]], "test_converthexwithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[319, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriver"]], "test_converthexwithfueldriveronnegativecomponentareablock() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[319, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"]], "test_dissolvelinerintoclad() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[319, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveLinerIntoClad"]], "test_dissolvewireintocoolant() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[319, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveWireIntoCoolant"]], "test_fromhex() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[319, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromHex"]], "test_fromringofrods() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[319, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromRingOfRods"]], "testedgeassemblychanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger"]], "testgeometryconverters (class in armi.reactor.converters.tests.test_geometryconverters)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters"]], "testhextorzconverter (class in armi.reactor.converters.tests.test_geometryconverters)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter"]], "testthirdcorehextofullcorechanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryconverters": [[320, "module-armi.reactor.converters.tests.test_geometryConverters"]], "test_addring() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_addRing"]], "test_convert() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_convert"]], "test_createhomogenizedrztblock() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_createHomogenizedRZTBlock"]], "test_edgeassemblies() (armi.reactor.converters.tests.test_geometryconverters.testedgeassemblychanger method)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger.test_edgeAssemblies"]], "test_getassembliesinsector() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_getAssembliesInSector"]], "test_growtofullcorefromthirdcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_growToFullCoreFromThirdCore"]], "test_initnewfullreactor() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_initNewFullReactor"]], "test_setnumberoffuelassems() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_setNumberOfFuelAssems"]], "test_skipgrowtofullcorewhenalreadyfullcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[320, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_skipGrowToFullCoreWhenAlreadyFullCore"]], "testrzreactormeshconverter (class in armi.reactor.converters.tests.test_meshconverters)": [[321, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshconverters": [[321, "module-armi.reactor.converters.tests.test_meshConverters"]], "test_meshbyringcompositionaxialbinslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[321, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsLargeCore"]], "test_meshbyringcompositionaxialbinssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[321, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsSmallCore"]], "test_meshbyringcompositionaxialcoordinateslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[321, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesLargeCore"]], "test_meshbyringcompositionaxialcoordinatessmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[321, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesSmallCore"]], "test_meshbyringcompositionaxialflagslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[321, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsLargeCore"]], "test_meshbyringcompositionaxialflagssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[321, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsSmallCore"]], "massconservationtests (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[322, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests"]], "testpintypeconverters (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[322, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pintypeblockconverters": [[322, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "test_adjustcladthicknessbyid() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[322, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByID"]], "test_adjustcladthicknessbyod() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[322, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByOD"]], "test_adjustsmeardensity() (armi.reactor.converters.tests.test_pintypeblockconverters.massconservationtests method)": [[322, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests.test_adjustSmearDensity"]], "dummyfluxoptions (class in armi.reactor.converters.tests.test_uniformmesh)": [[323, "armi.reactor.converters.tests.test_uniformMesh.DummyFluxOptions"]], "testassemblyuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh"]], "testconverterfactory (class in armi.reactor.converters.tests.test_uniformmesh)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory"]], "testgammauniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh"]], "testparamconversion (class in armi.reactor.converters.tests.test_uniformmesh)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion"]], "testuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh"]], "testuniformmeshcomponents (class in armi.reactor.converters.tests.test_uniformmesh)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents"]], "testuniformmeshgenerator (class in armi.reactor.converters.tests.test_uniformmesh)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator"]], "testuniformmeshnonuniformassemflags (class in armi.reactor.converters.tests.test_uniformmesh)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags"]], "applynonuniformheightdistribution() (in module armi.reactor.converters.tests.test_uniformmesh)": [[323, "armi.reactor.converters.tests.test_uniformMesh.applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformmesh": [[323, "module-armi.reactor.converters.tests.test_uniformMesh"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_applyStateToOriginal"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_applyStateToOriginal"]], "test_blueprintcopy() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshcomponents method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents.test_blueprintCopy"]], "test_clearassemblystate() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_clearAssemblyState"]], "test_computeaverageaxialmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_computeAverageAxialMesh"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_convertNumberDensities"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_convertNumberDensities"]], "test_converterfactory() (armi.reactor.converters.tests.test_uniformmesh.testconverterfactory method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory.test_converterFactory"]], "test_filtermesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filterMesh"]], "test_filteredtopandbottom() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filteredTopAndBottom"]], "test_generatecommonmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_generateCommonMesh"]], "test_makeassemuniformmeshparammappingsamemesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemUniformMeshParamMappingSameMesh"]], "test_makeassemwithuniformmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMesh"]], "test_makeassemwithuniformmeshsubmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMeshSubmesh"]], "test_reactorconversion() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshnonuniformassemflags method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags.test_reactorConversion"]], "test_setstatefromoverlaps() (armi.reactor.converters.tests.test_uniformmesh.testparamconversion method)": [[323, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion.test_setStateFromOverlaps"]], "gammauniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[324, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter"]], "neutronicsuniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[324, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter"]], "parammapper (class in armi.reactor.converters.uniformmesh)": [[324, "armi.reactor.converters.uniformMesh.ParamMapper"]], "uniformmeshgenerator (class in armi.reactor.converters.uniformmesh)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGenerator"]], "uniformmeshgeometryconverter (class in armi.reactor.converters.uniformmesh)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter"]], "applystatetooriginal() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.applyStateToOriginal"]], "armi.reactor.converters.uniformmesh": [[324, "module-armi.reactor.converters.uniformMesh"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[324, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[324, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.blockParamMappingCategories"]], "clearstateonassemblies() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.clearStateOnAssemblies"]], "convert() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.convert"]], "converterfactory() (in module armi.reactor.converters.uniformmesh)": [[324, "armi.reactor.converters.uniformMesh.converterFactory"]], "generatecommonmesh() (armi.reactor.converters.uniformmesh.uniformmeshgenerator method)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGenerator.generateCommonMesh"]], "initnewreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.initNewReactor"]], "makeassemwithuniformmesh() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.makeAssemWithUniformMesh"]], "paramgetter() (armi.reactor.converters.uniformmesh.parammapper method)": [[324, "armi.reactor.converters.uniformMesh.ParamMapper.paramGetter"]], "paramsetter() (armi.reactor.converters.uniformmesh.parammapper static method)": [[324, "armi.reactor.converters.uniformMesh.ParamMapper.paramSetter"]], "plotconvertedreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.plotConvertedReactor"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[324, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[324, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reactorParamMappingCategories"]], "reset() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reset"]], "setassemblystatefromoverlaps() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.setAssemblyStateFromOverlaps"]], "setnumberdensitiesfromoverlaps() (in module armi.reactor.converters.uniformmesh)": [[324, "armi.reactor.converters.uniformMesh.setNumberDensitiesFromOverlaps"]], "updatereactionrates() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[324, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.updateReactionRates"]], "a (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.A"]], "aclp (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.ACLP"]], "annular (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.ANNULAR"]], "axial (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.AXIAL"]], "b (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.B"]], "batchmassaddition (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.BATCHMASSADDITION"]], "blanket (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.BLANKET"]], "bond (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.BOND"]], "booster (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.BOOSTER"]], "c (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.C"]], "clad (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.CLAD"]], "control (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.CONTROL"]], "coolant (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.COOLANT"]], "core (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.CORE"]], "core_barrel (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.CORE_BARREL"]], "d (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.D"]], "depletable (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.DEPLETABLE"]], "driver (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.DRIVER"]], "dspacerinside (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.DSPACERINSIDE"]], "duct (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.DUCT"]], "dummy (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.DUMMY"]], "e (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.E"]], "feed (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.FEED"]], "fission_chamber (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.FISSION_CHAMBER"]], "fuel (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.FUEL"]], "flags (class in armi.reactor.flags)": [[325, "armi.reactor.flags.Flags"]], "gap (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.GAP"]], "grid_plate (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.GRID_PLATE"]], "guide_tube (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.GUIDE_TUBE"]], "handling_socket (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.HANDLING_SOCKET"]], "high (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.HIGH"]], "igniter (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.IGNITER"]], "inlet_nozzle (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.INLET_NOZZLE"]], "inner (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.INNER"]], "intercoolant (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.INTERCOOLANT"]], "interductcoolant (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.INTERDUCTCOOLANT"]], "invalidflagserror": [[325, "armi.reactor.flags.InvalidFlagsError"]], "liner (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.LINER"]], "load_pad (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.LOAD_PAD"]], "low (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.LOW"]], "lower (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.LOWER"]], "material (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.MATERIAL"]], "medium (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.MEDIUM"]], "middle (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.MIDDLE"]], "moderator (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.MODERATOR"]], "moveable (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.MOVEABLE"]], "mox (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.MOX"]], "outer (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.OUTER"]], "pin (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.PIN"]], "plenum (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.PLENUM"]], "poison (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.POISON"]], "primary (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.PRIMARY"]], "radial (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.RADIAL"]], "reactor (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.REACTOR"]], "reflector (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.REFLECTOR"]], "secondary (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.SECONDARY"]], "shield (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.SHIELD"]], "shield_block (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.SHIELD_BLOCK"]], "shutdown (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.SHUTDOWN"]], "skid (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.SKID"]], "slug (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.SLUG"]], "starter (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.STARTER"]], "structure (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.STRUCTURE"]], "target (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.TARGET"]], "tertiary (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.TERTIARY"]], "test (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.TEST"]], "ultimate (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.ULTIMATE"]], "upper (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.UPPER"]], "void (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.VOID"]], "wire (armi.reactor.flags.flags attribute)": [[325, "armi.reactor.flags.Flags.WIRE"]], "armi.reactor.flags": [[325, "module-armi.reactor.flags"]], "fromstring() (armi.reactor.flags.flags class method)": [[325, "armi.reactor.flags.Flags.fromString"]], "fromstringignoreerrors() (armi.reactor.flags.flags class method)": [[325, "armi.reactor.flags.Flags.fromStringIgnoreErrors"]], "tostring() (armi.reactor.flags.flags class method)": [[325, "armi.reactor.flags.Flags.toString"]], "boundarytype (class in armi.reactor.geometry)": [[326, "armi.reactor.geometry.BoundaryType"]], "cartesian (armi.reactor.geometry.geomtype attribute)": [[326, "armi.reactor.geometry.GeomType.CARTESIAN"]], "domaintype (class in armi.reactor.geometry)": [[326, "armi.reactor.geometry.DomainType"]], "eighth_core (armi.reactor.geometry.domaintype attribute)": [[326, "armi.reactor.geometry.DomainType.EIGHTH_CORE"]], "full_core (armi.reactor.geometry.domaintype attribute)": [[326, "armi.reactor.geometry.DomainType.FULL_CORE"]], "geomtype (class in armi.reactor.geometry)": [[326, "armi.reactor.geometry.GeomType"]], "hex (armi.reactor.geometry.geomtype attribute)": [[326, "armi.reactor.geometry.GeomType.HEX"]], "no_symmetry (armi.reactor.geometry.boundarytype attribute)": [[326, "armi.reactor.geometry.BoundaryType.NO_SYMMETRY"]], "null (armi.reactor.geometry.domaintype attribute)": [[326, "armi.reactor.geometry.DomainType.NULL"]], "periodic (armi.reactor.geometry.boundarytype attribute)": [[326, "armi.reactor.geometry.BoundaryType.PERIODIC"]], "quarter_core (armi.reactor.geometry.domaintype attribute)": [[326, "armi.reactor.geometry.DomainType.QUARTER_CORE"]], "reflective (armi.reactor.geometry.boundarytype attribute)": [[326, "armi.reactor.geometry.BoundaryType.REFLECTIVE"]], "rz (armi.reactor.geometry.geomtype attribute)": [[326, "armi.reactor.geometry.GeomType.RZ"]], "rzt (armi.reactor.geometry.geomtype attribute)": [[326, "armi.reactor.geometry.GeomType.RZT"]], "sixteenth_core (armi.reactor.geometry.domaintype attribute)": [[326, "armi.reactor.geometry.DomainType.SIXTEENTH_CORE"]], "symmetrytype (class in armi.reactor.geometry)": [[326, "armi.reactor.geometry.SymmetryType"]], "third_core (armi.reactor.geometry.domaintype attribute)": [[326, "armi.reactor.geometry.DomainType.THIRD_CORE"]], "valid_symmetry (armi.reactor.geometry.symmetrytype attribute)": [[326, "armi.reactor.geometry.SymmetryType.VALID_SYMMETRY"]], "armi.reactor.geometry": [[326, "module-armi.reactor.geometry"]], "checkvalidgeomsymmetrycombo() (in module armi.reactor.geometry)": [[326, "armi.reactor.geometry.checkValidGeomSymmetryCombo"]], "checkvalidsymmetry() (armi.reactor.geometry.symmetrytype method)": [[326, "armi.reactor.geometry.SymmetryType.checkValidSymmetry"]], "createvalidsymmetrystrings() (armi.reactor.geometry.symmetrytype class method)": [[326, "armi.reactor.geometry.SymmetryType.createValidSymmetryStrings"]], "fromany() (armi.reactor.geometry.boundarytype class method)": [[326, "armi.reactor.geometry.BoundaryType.fromAny"]], "fromany() (armi.reactor.geometry.domaintype class method)": [[326, "armi.reactor.geometry.DomainType.fromAny"]], "fromany() (armi.reactor.geometry.geomtype class method)": [[326, "armi.reactor.geometry.GeomType.fromAny"]], "fromany() (armi.reactor.geometry.symmetrytype class method)": [[326, "armi.reactor.geometry.SymmetryType.fromAny"]], "fromstr() (armi.reactor.geometry.boundarytype class method)": [[326, "armi.reactor.geometry.BoundaryType.fromStr"]], "fromstr() (armi.reactor.geometry.domaintype class method)": [[326, "armi.reactor.geometry.DomainType.fromStr"]], "fromstr() (armi.reactor.geometry.geomtype class method)": [[326, "armi.reactor.geometry.GeomType.fromStr"]], "fromstr() (armi.reactor.geometry.symmetrytype class method)": [[326, "armi.reactor.geometry.SymmetryType.fromStr"]], "hassymmetry() (armi.reactor.geometry.boundarytype method)": [[326, "armi.reactor.geometry.BoundaryType.hasSymmetry"]], "label (armi.reactor.geometry.boundarytype property)": [[326, "armi.reactor.geometry.BoundaryType.label"]], "label (armi.reactor.geometry.domaintype property)": [[326, "armi.reactor.geometry.DomainType.label"]], "label (armi.reactor.geometry.geomtype property)": [[326, "armi.reactor.geometry.GeomType.label"]], "symmetryfactor() (armi.reactor.geometry.domaintype method)": [[326, "armi.reactor.geometry.DomainType.symmetryFactor"]], "symmetryfactor() (armi.reactor.geometry.symmetrytype method)": [[326, "armi.reactor.geometry.SymmetryType.symmetryFactor"]], "armi.reactor.grids": [[327, "module-armi.reactor.grids"]], "locatorlabeltoindices() (in module armi.reactor.grids)": [[327, "armi.reactor.grids.locatorLabelToIndices"]], "axialgrid (class in armi.reactor.grids.axial)": [[328, "armi.reactor.grids.axial.AxialGrid"]], "armi.reactor.grids.axial": [[328, "module-armi.reactor.grids.axial"]], "armiobject (armi.reactor.grids.axial.axialgrid attribute)": [[328, "armi.reactor.grids.axial.AxialGrid.armiObject"]], "axialunitgrid() (in module armi.reactor.grids.axial)": [[328, "armi.reactor.grids.axial.axialUnitGrid"]], "fromncells() (armi.reactor.grids.axial.axialgrid class method)": [[328, "armi.reactor.grids.axial.AxialGrid.fromNCells"]], "getindicesfromringandpos() (armi.reactor.grids.axial.axialgrid static method)": [[328, "armi.reactor.grids.axial.AxialGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.axial.axialgrid static method)": [[328, "armi.reactor.grids.axial.AxialGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.axial.axialgrid static method)": [[328, "armi.reactor.grids.axial.AxialGrid.getPositionsInRing"]], "getsymmetricequivalents() (armi.reactor.grids.axial.axialgrid static method)": [[328, "armi.reactor.grids.axial.AxialGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.axial.axialgrid static method)": [[328, "armi.reactor.grids.axial.AxialGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.axial.axialgrid static method)": [[328, "armi.reactor.grids.axial.AxialGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.axial.axialgrid property)": [[328, "armi.reactor.grids.axial.AxialGrid.pitch"]], "cartesiangrid (class in armi.reactor.grids.cartesian)": [[329, "armi.reactor.grids.cartesian.CartesianGrid"]], "armi.reactor.grids.cartesian": [[329, "module-armi.reactor.grids.cartesian"]], "armiobject (armi.reactor.grids.cartesian.cartesiangrid attribute)": [[329, "armi.reactor.grids.cartesian.CartesianGrid.armiObject"]], "changepitch() (armi.reactor.grids.cartesian.cartesiangrid method)": [[329, "armi.reactor.grids.cartesian.CartesianGrid.changePitch"]], "fromrectangle() (armi.reactor.grids.cartesian.cartesiangrid class method)": [[329, "armi.reactor.grids.cartesian.CartesianGrid.fromRectangle"]], "getindicesfromringandpos() (armi.reactor.grids.cartesian.cartesiangrid static method)": [[329, "armi.reactor.grids.cartesian.CartesianGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.cartesian.cartesiangrid method)": [[329, "armi.reactor.grids.cartesian.CartesianGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.cartesian.cartesiangrid method)": [[329, "armi.reactor.grids.cartesian.CartesianGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.cartesian.cartesiangrid method)": [[329, "armi.reactor.grids.cartesian.CartesianGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.cartesian.cartesiangrid method)": [[329, "armi.reactor.grids.cartesian.CartesianGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.cartesian.cartesiangrid method)": [[329, "armi.reactor.grids.cartesian.CartesianGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.cartesian.cartesiangrid method)": [[329, "armi.reactor.grids.cartesian.CartesianGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.cartesian.cartesiangrid property)": [[329, "armi.reactor.grids.cartesian.CartesianGrid.pitch"]], "armi.reactor.grids.constants": [[330, "module-armi.reactor.grids.constants"]], "grid (class in armi.reactor.grids.grid)": [[331, "armi.reactor.grids.grid.Grid"]], "armi.reactor.grids.grid": [[331, "module-armi.reactor.grids.grid"]], "armiobject (armi.reactor.grids.grid.grid attribute)": [[331, "armi.reactor.grids.grid.Grid.armiObject"]], "backup() (armi.reactor.grids.grid.grid method)": [[331, "armi.reactor.grids.grid.Grid.backUp"]], "geomtype (armi.reactor.grids.grid.grid property)": [[331, "armi.reactor.grids.grid.Grid.geomType"]], "getcellbase() (armi.reactor.grids.grid.grid method)": [[331, "armi.reactor.grids.grid.Grid.getCellBase"]], "getcelltop() (armi.reactor.grids.grid.grid method)": [[331, "armi.reactor.grids.grid.Grid.getCellTop"]], "getcoordinates() (armi.reactor.grids.grid.grid method)": [[331, "armi.reactor.grids.grid.Grid.getCoordinates"]], "getlabel() (armi.reactor.grids.grid.grid static method)": [[331, "armi.reactor.grids.grid.Grid.getLabel"]], "getsymmetricequivalents() (armi.reactor.grids.grid.grid method)": [[331, "armi.reactor.grids.grid.Grid.getSymmetricEquivalents"]], "isaxialonly (armi.reactor.grids.grid.grid property)": [[331, "armi.reactor.grids.grid.Grid.isAxialOnly"]], "items() (armi.reactor.grids.grid.grid method)": [[331, "armi.reactor.grids.grid.Grid.items"]], "locatorindomain() (armi.reactor.grids.grid.grid method)": [[331, "armi.reactor.grids.grid.Grid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.grid.grid method)": [[331, "armi.reactor.grids.grid.Grid.overlapsWhichSymmetryLine"]], "reduce() (armi.reactor.grids.grid.grid method)": [[331, "armi.reactor.grids.grid.Grid.reduce"]], "restorebackup() (armi.reactor.grids.grid.grid method)": [[331, "armi.reactor.grids.grid.Grid.restoreBackup"]], "symmetry (armi.reactor.grids.grid.grid property)": [[331, "armi.reactor.grids.grid.Grid.symmetry"]], "hexgrid (class in armi.reactor.grids.hexagonal)": [[332, "armi.reactor.grids.hexagonal.HexGrid"]], "allpositionsinthird() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.allPositionsInThird"]], "armi.reactor.grids.hexagonal": [[332, "module-armi.reactor.grids.hexagonal"]], "armiobject (armi.reactor.grids.hexagonal.hexgrid attribute)": [[332, "armi.reactor.grids.hexagonal.HexGrid.armiObject"]], "changepitch() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.changePitch"]], "frompitch() (armi.reactor.grids.hexagonal.hexgrid static method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.fromPitch"]], "generatesortedhexlocationlist() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.generateSortedHexLocationList"]], "getindicesfromringandpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.getIndicesFromRingAndPos"]], "getlabel() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.getLabel"]], "getminimumrings() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.getSymmetricEquivalents"]], "indicestoringpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.indicesToRingPos"]], "isinfirstthird() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.isInFirstThird"]], "locatorindomain() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.hexagonal.hexgrid property)": [[332, "armi.reactor.grids.hexagonal.HexGrid.pitch"]], "trianglecoords() (armi.reactor.grids.hexagonal.hexgrid method)": [[332, "armi.reactor.grids.hexagonal.HexGrid.triangleCoords"]], "coordinatelocation (class in armi.reactor.grids.locations)": [[333, "armi.reactor.grids.locations.CoordinateLocation"]], "indexlocation (class in armi.reactor.grids.locations)": [[333, "armi.reactor.grids.locations.IndexLocation"]], "locationbase (class in armi.reactor.grids.locations)": [[333, "armi.reactor.grids.locations.LocationBase"]], "multiindexlocation (class in armi.reactor.grids.locations)": [[333, "armi.reactor.grids.locations.MultiIndexLocation"]], "addingisvalid() (in module armi.reactor.grids.locations)": [[333, "armi.reactor.grids.locations.addingIsValid"]], "append() (armi.reactor.grids.locations.multiindexlocation method)": [[333, "armi.reactor.grids.locations.MultiIndexLocation.append"]], "armi.reactor.grids.locations": [[333, "module-armi.reactor.grids.locations"]], "associate() (armi.reactor.grids.locations.locationbase method)": [[333, "armi.reactor.grids.locations.LocationBase.associate"]], "associate() (armi.reactor.grids.locations.multiindexlocation method)": [[333, "armi.reactor.grids.locations.MultiIndexLocation.associate"]], "detachedcopy() (armi.reactor.grids.locations.indexlocation method)": [[333, "armi.reactor.grids.locations.IndexLocation.detachedCopy"]], "detachedcopy() (armi.reactor.grids.locations.multiindexlocation method)": [[333, "armi.reactor.grids.locations.MultiIndexLocation.detachedCopy"]], "distanceto() (armi.reactor.grids.locations.indexlocation method)": [[333, "armi.reactor.grids.locations.IndexLocation.distanceTo"]], "extend() (armi.reactor.grids.locations.multiindexlocation method)": [[333, "armi.reactor.grids.locations.MultiIndexLocation.extend"]], "getcompleteindices() (armi.reactor.grids.locations.coordinatelocation method)": [[333, "armi.reactor.grids.locations.CoordinateLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.indexlocation method)": [[333, "armi.reactor.grids.locations.IndexLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.multiindexlocation method)": [[333, "armi.reactor.grids.locations.MultiIndexLocation.getCompleteIndices"]], "getglobalcellbase() (armi.reactor.grids.locations.coordinatelocation method)": [[333, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellBase"]], "getglobalcellbase() (armi.reactor.grids.locations.indexlocation method)": [[333, "armi.reactor.grids.locations.IndexLocation.getGlobalCellBase"]], "getglobalcelltop() (armi.reactor.grids.locations.coordinatelocation method)": [[333, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellTop"]], "getglobalcelltop() (armi.reactor.grids.locations.indexlocation method)": [[333, "armi.reactor.grids.locations.IndexLocation.getGlobalCellTop"]], "getglobalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[333, "armi.reactor.grids.locations.IndexLocation.getGlobalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.coordinatelocation method)": [[333, "armi.reactor.grids.locations.CoordinateLocation.getLocalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[333, "armi.reactor.grids.locations.IndexLocation.getLocalCoordinates"]], "getringpos() (armi.reactor.grids.locations.indexlocation method)": [[333, "armi.reactor.grids.locations.IndexLocation.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.locations.indexlocation method)": [[333, "armi.reactor.grids.locations.IndexLocation.getSymmetricEquivalents"]], "grid (armi.reactor.grids.locations.locationbase property)": [[333, "armi.reactor.grids.locations.LocationBase.grid"]], "i (armi.reactor.grids.locations.locationbase property)": [[333, "armi.reactor.grids.locations.LocationBase.i"]], "indices (armi.reactor.grids.locations.indexlocation property)": [[333, "armi.reactor.grids.locations.IndexLocation.indices"]], "indices (armi.reactor.grids.locations.locationbase property)": [[333, "armi.reactor.grids.locations.LocationBase.indices"]], "indices (armi.reactor.grids.locations.multiindexlocation property)": [[333, "armi.reactor.grids.locations.MultiIndexLocation.indices"]], "j (armi.reactor.grids.locations.locationbase property)": [[333, "armi.reactor.grids.locations.LocationBase.j"]], "k (armi.reactor.grids.locations.locationbase property)": [[333, "armi.reactor.grids.locations.LocationBase.k"]], "parentlocation (armi.reactor.grids.locations.indexlocation property)": [[333, "armi.reactor.grids.locations.IndexLocation.parentLocation"]], "pop() (armi.reactor.grids.locations.multiindexlocation method)": [[333, "armi.reactor.grids.locations.MultiIndexLocation.pop"]], "gridparameters (class in armi.reactor.grids.structuredgrid)": [[334, "armi.reactor.grids.structuredgrid.GridParameters"]], "structuredgrid (class in armi.reactor.grids.structuredgrid)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid"]], "armi.reactor.grids.structuredgrid": [[334, "module-armi.reactor.grids.structuredgrid"]], "armiobject (armi.reactor.grids.structuredgrid.structuredgrid attribute)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.armiObject"]], "backup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.backUp"]], "bounds (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[334, "armi.reactor.grids.structuredgrid.GridParameters.bounds"]], "geomtype (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[334, "armi.reactor.grids.structuredgrid.GridParameters.geomType"]], "getaboveandbelowcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getAboveAndBelowCellIndices"]], "getallindices() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getAllIndices"]], "getbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getBounds"]], "getcellbase() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getCellBase"]], "getcelltop() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getCellTop"]], "getcoordinates() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getCoordinates"]], "getindexbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getIndexBounds"]], "getindicesfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getIndicesFromRingAndPos"]], "getlocatorfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getLocatorFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.getRingPos"]], "isaxialonly (armi.reactor.grids.structuredgrid.structuredgrid property)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.isAxialOnly"]], "items() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.items"]], "offset (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[334, "armi.reactor.grids.structuredgrid.GridParameters.offset"]], "offset (armi.reactor.grids.structuredgrid.structuredgrid property)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.offset"]], "pitch (armi.reactor.grids.structuredgrid.structuredgrid property)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.pitch"]], "reduce() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.reduce"]], "restorebackup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[334, "armi.reactor.grids.structuredgrid.StructuredGrid.restoreBackup"]], "symmetry (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[334, "armi.reactor.grids.structuredgrid.GridParameters.symmetry"]], "unitsteplimits (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[334, "armi.reactor.grids.structuredgrid.GridParameters.unitStepLimits"]], "unitsteps (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[334, "armi.reactor.grids.structuredgrid.GridParameters.unitSteps"]], "thetarzgrid (class in armi.reactor.grids.thetarz)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid"]], "armi.reactor.grids.thetarz": [[335, "module-armi.reactor.grids.thetarz"]], "armiobject (armi.reactor.grids.thetarz.thetarzgrid attribute)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.armiObject"]], "fromgeom() (armi.reactor.grids.thetarz.thetarzgrid class method)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.fromGeom"]], "getcoordinates() (armi.reactor.grids.thetarz.thetarzgrid method)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.getCoordinates"]], "getindicesfromringandpos() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.thetarz.thetarzgrid method)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.thetarz.thetarzgrid method)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.getSymmetricEquivalents"]], "indicesofbounds() (armi.reactor.grids.thetarz.thetarzgrid method)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.indicesOfBounds"]], "locatorindomain() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.overlapsWhichSymmetryLine"]], "pitch() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[335, "armi.reactor.grids.thetarz.ThetaRZGrid.pitch"]], "armi.reactor.parameters": [[336, "module-armi.reactor.parameters"]], "reset() (in module armi.reactor.parameters)": [[336, "armi.reactor.parameters.reset"]], "parameterdefinitionerror": [[337, "armi.reactor.parameters.exceptions.ParameterDefinitionError"]], "parametererror": [[337, "armi.reactor.parameters.exceptions.ParameterError"]], "unknownparametererror": [[337, "armi.reactor.parameters.exceptions.UnknownParameterError"]], "armi.reactor.parameters.exceptions": [[337, "module-armi.reactor.parameters.exceptions"]], "global_serial_num (in module armi.reactor.parameters.parametercollections)": [[338, "armi.reactor.parameters.parameterCollections.GLOBAL_SERIAL_NUM"]], "parametercollection (class in armi.reactor.parameters.parametercollections)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection"]], "applyallparameters() (in module armi.reactor.parameters.parametercollections)": [[338, "armi.reactor.parameters.parameterCollections.applyAllParameters"]], "applyparameters() (armi.reactor.parameters.parametercollections.parametercollection class method)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.applyParameters"]], "armi.reactor.parameters.parametercollections": [[338, "module-armi.reactor.parameters.parameterCollections"]], "backup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.backUp"]], "collectpluginparameters() (in module armi.reactor.parameters.parametercollections)": [[338, "armi.reactor.parameters.parameterCollections.collectPluginParameters"]], "get() (armi.reactor.parameters.parametercollections.parametercollection method)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.get"]], "getsyncdata() (armi.reactor.parameters.parametercollections.parametercollection method)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.getSyncData"]], "items() (armi.reactor.parameters.parametercollections.parametercollection method)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.items"]], "keys() (armi.reactor.parameters.parametercollections.parametercollection method)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.keys"]], "pdefs (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.pDefs"]], "paramdefs (armi.reactor.parameters.parametercollections.parametercollection property)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.paramDefs"]], "restorebackup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.restoreBackup"]], "serialnum (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.serialNum"]], "update() (armi.reactor.parameters.parametercollections.parametercollection method)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.update"]], "values() (armi.reactor.parameters.parametercollections.parametercollection method)": [[338, "armi.reactor.parameters.parameterCollections.ParameterCollection.values"]], "average (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.ParamLocation.AVERAGE"]], "bottom (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.ParamLocation.BOTTOM"]], "centroid (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CENTROID"]], "children (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CHILDREN"]], "corners (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CORNERS"]], "category (class in armi.reactor.parameters.parameterdefinitions)": [[339, "armi.reactor.parameters.parameterDefinitions.Category"]], "edges (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.ParamLocation.EDGES"]], "max (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.ParamLocation.MAX"]], "nodefault (class in armi.reactor.parameters.parameterdefinitions)": [[339, "armi.reactor.parameters.parameterDefinitions.NoDefault"]], "paramlocation (class in armi.reactor.parameters.parameterdefinitions)": [[339, "armi.reactor.parameters.parameterDefinitions.ParamLocation"]], "parameter (class in armi.reactor.parameters.parameterdefinitions)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter"]], "parameterbuilder (class in armi.reactor.parameters.parameterdefinitions)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder"]], "parameterdefinitioncollection (class in armi.reactor.parameters.parameterdefinitions)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection"]], "serializer (class in armi.reactor.parameters.parameterdefinitions)": [[339, "armi.reactor.parameters.parameterDefinitions.Serializer"]], "top (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.ParamLocation.TOP"]], "volume_integrated (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.ParamLocation.VOLUME_INTEGRATED"]], "add() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.add"]], "armi.reactor.parameters.parameterdefinitions": [[339, "module-armi.reactor.parameters.parameterDefinitions"]], "assigninblueprints (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.assignInBlueprints"]], "assigned (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.assigned"]], "associateparameterdefinitioncollection() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.associateParameterDefinitionCollection"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.atLocation"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.atLocation"]], "backup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.backUp"]], "bynameandcollectiontype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndCollectionType"]], "bynameandtype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndType"]], "categories (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.categories"]], "categories (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.categories"]], "collectiontype (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.collectionType"]], "createbuilder() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.createBuilder"]], "cumulative (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.cumulative"]], "cumulativeovercycle (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.cumulativeOverCycle"]], "defparam() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.defParam"]], "default (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.default"]], "depletion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.depletion"]], "description (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.description"]], "detailedaxialexpansion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.detailedAxialExpansion"]], "extend() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.extend"]], "fieldname (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.fieldName"]], "fluxquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.fluxQuantities"]], "fortype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.forType"]], "gamma (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.gamma"]], "incategory() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.inCategory"]], "isnumpyarray() (in module armi.reactor.parameters.parameterdefinitions)": [[339, "armi.reactor.parameters.parameterDefinitions.isNumpyArray"]], "items() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.items"]], "location (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.location"]], "lock() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.lock"]], "locked (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.locked"]], "multigroupquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.multiGroupQuantities"]], "name (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.name"]], "names (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.names"]], "neutronics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.neutronics"]], "pack() (armi.reactor.parameters.parameterdefinitions.serializer static method)": [[339, "armi.reactor.parameters.parameterDefinitions.Serializer.pack"]], "pinquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.pinQuantities"]], "reactivitycoefficients (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.reactivityCoefficients"]], "resetassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.resetAssignmentFlag"]], "restorebackup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.restoreBackup"]], "retainonreplacement (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.retainOnReplacement"]], "savetodb (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.saveToDB"]], "serializer (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.serializer"]], "setassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.setAssignmentFlag"]], "setter() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.setter"]], "since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.since"]], "thermalhydraulics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Category.thermalHydraulics"]], "towritetodb() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.toWriteToDB"]], "unchanged_since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[339, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.unchanged_since"]], "units (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Parameter.units"]], "unpack() (armi.reactor.parameters.parameterdefinitions.serializer class method)": [[339, "armi.reactor.parameters.parameterDefinitions.Serializer.unpack"]], "version (armi.reactor.parameters.parameterdefinitions.serializer attribute)": [[339, "armi.reactor.parameters.parameterDefinitions.Serializer.version"]], "resolveparametersmeta (class in armi.reactor.parameters.resolvecollections)": [[340, "armi.reactor.parameters.resolveCollections.ResolveParametersMeta"]], "armi.reactor.parameters.resolvecollections": [[340, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorparameters": [[341, "module-armi.reactor.reactorParameters"]], "definecoreparameters() (in module armi.reactor.reactorparameters)": [[341, "armi.reactor.reactorParameters.defineCoreParameters"]], "definereactorparameters() (in module armi.reactor.reactorparameters)": [[341, "armi.reactor.reactorParameters.defineReactorParameters"]], "core (class in armi.reactor.reactors)": [[342, "armi.reactor.reactors.Core"]], "reactor (class in armi.reactor.reactors)": [[342, "armi.reactor.reactors.Reactor"]], "add() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.add"]], "add() (armi.reactor.reactors.reactor method)": [[342, "armi.reactor.reactors.Reactor.add"]], "addmorenodes() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.addMoreNodes"]], "armi.reactor.reactors": [[342, "module-armi.reactor.reactors"]], "buildcircularringdictionary() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.buildCircularRingDictionary"]], "buildmanualzones() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.buildManualZones"]], "calcblockmaxes() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.calcBlockMaxes"]], "countblockswithflags() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.countBlocksWithFlags"]], "countfuelaxialblocks() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.countFuelAxialBlocks"]], "createassemblyoftype() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.createAssemblyOfType"]], "createfreshfeed() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.createFreshFeed"]], "factory() (in module armi.reactor.reactors)": [[342, "armi.reactor.reactors.factory"]], "findallaxialmeshpoints() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.findAllAxialMeshPoints"]], "findallazimeshpoints() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.findAllAziMeshPoints"]], "findallmeshpoints() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.findAllMeshPoints"]], "findallradmeshpoints() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.findAllRadMeshPoints"]], "findaxialmeshindexof() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.findAxialMeshIndexOf"]], "findneighbors() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.findNeighbors"]], "genassembliesaddedthiscycle() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.genAssembliesAddedThisCycle"]], "genblocksbylocname() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.genBlocksByLocName"]], "geomtype (armi.reactor.reactors.core property)": [[342, "armi.reactor.reactors.Core.geomType"]], "getallnuclidesin() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAllNuclidesIn"]], "getallxssuffixes() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAllXsSuffixes"]], "getassemblies() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAssemblies"]], "getassembliesincircularring() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAssembliesInCircularRing"]], "getassembliesinring() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAssembliesInRing"]], "getassembliesinsquareorhexring() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAssembliesInSquareOrHexRing"]], "getassembliesoftype() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAssembliesOfType"]], "getassembliesonsymmetryline() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAssembliesOnSymmetryLine"]], "getassembly() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAssembly"]], "getassemblybyname() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAssemblyByName"]], "getassemblypitch() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAssemblyPitch"]], "getassemblywithassemnum() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAssemblyWithAssemNum"]], "getassemblywithstringlocation() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAssemblyWithStringLocation"]], "getavgtemp() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getAvgTemp"]], "getblockbyname() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getBlockByName"]], "getblocks() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getBlocks"]], "getblocksbyindices() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getBlocksByIndices"]], "getcoreradius() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getCoreRadius"]], "getfirstassembly() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getFirstAssembly"]], "getfirstblock() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getFirstBlock"]], "getfirstfuelblockaxialnode() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getFirstFuelBlockAxialNode"]], "getfluxvector() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getFluxVector"]], "getfuelbottomheight() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getFuelBottomHeight"]], "getlocationcontents() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getLocationContents"]], "getmaxassembliesinhexring() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getMaxAssembliesInHexRing"]], "getmaxblockparam() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getMaxBlockParam"]], "getmaxnumpins() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getMaxNumPins"]], "getminimumpercentfluxinfuel() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getMinimumPercentFluxInFuel"]], "getnozzletypes() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getNozzleTypes"]], "getnuclidecategories() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getNuclideCategories"]], "getnumassemblieswithallringsfilledout() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getNumAssembliesWithAllRingsFilledOut"]], "getnumenergygroups() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getNumEnergyGroups"]], "getnumhexrings() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getNumHexRings"]], "getnumrings() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getNumRings"]], "getscalarevolution() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getScalarEvolution"]], "gettotalblockparam() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.getTotalBlockParam"]], "growtofullcore() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.growToFullCore"]], "incrementassemnum() (armi.reactor.reactors.reactor method)": [[342, "armi.reactor.reactors.Reactor.incrementAssemNum"]], "isfullcore (armi.reactor.reactors.core property)": [[342, "armi.reactor.reactors.Core.isFullCore"]], "lib (armi.reactor.reactors.core property)": [[342, "armi.reactor.reactors.Core.lib"]], "loadfromcs() (in module armi.reactor.reactors)": [[342, "armi.reactor.reactors.loadFromCs"]], "locateallassemblies() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.locateAllAssemblies"]], "makelocationlookup() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.makeLocationLookup"]], "normalizeinternalbookeeping() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.normalizeInternalBookeeping"]], "normalizenames() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.normalizeNames"]], "normalizenames() (armi.reactor.reactors.reactor method)": [[342, "armi.reactor.reactors.Reactor.normalizeNames"]], "pdefs (armi.reactor.reactors.core attribute)": [[342, "armi.reactor.reactors.Core.pDefs"]], "pdefs (armi.reactor.reactors.reactor attribute)": [[342, "armi.reactor.reactors.Reactor.pDefs"]], "paramcollectiontype (armi.reactor.reactors.core attribute)": [[342, "armi.reactor.reactors.Core.paramCollectionType"]], "paramcollectiontype (armi.reactor.reactors.reactor attribute)": [[342, "armi.reactor.reactors.Reactor.paramCollectionType"]], "powermultiplier (armi.reactor.reactors.core property)": [[342, "armi.reactor.reactors.Core.powerMultiplier"]], "processloading() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.processLoading"]], "r (armi.reactor.reactors.core property)": [[342, "armi.reactor.reactors.Core.r"]], "refassem (armi.reactor.reactors.core property)": [[342, "armi.reactor.reactors.Core.refAssem"]], "regenassemblylists() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.regenAssemblyLists"]], "removeallassemblies() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.removeAllAssemblies"]], "removeassembliesinring() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.removeAssembliesInRing"]], "removeassembly() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.removeAssembly"]], "saveallflux() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.saveAllFlux"]], "setblockmassparams() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.setBlockMassParams"]], "setmovelist() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.setMoveList"]], "setoptionsfromcs() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.setOptionsFromCs"]], "setpitchuniform() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.setPitchUniform"]], "setpowerfromdensity() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.setPowerFromDensity"]], "setpowerifnecessary() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.setPowerIfNecessary"]], "sortassemsbyring() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.sortAssemsByRing"]], "summarizenuclidecategories() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.summarizeNuclideCategories"]], "summarizereactorstats() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.summarizeReactorStats"]], "symmetry (armi.reactor.reactors.core property)": [[342, "armi.reactor.reactors.Core.symmetry"]], "updateaxialmesh() (armi.reactor.reactors.core method)": [[342, "armi.reactor.reactors.Core.updateAxialMesh"]], "root_tag (armi.reactor.systemlayoutinput.systemlayoutinput attribute)": [[343, "armi.reactor.systemLayoutInput.SystemLayoutInput.ROOT_TAG"]], "systemlayoutinput (class in armi.reactor.systemlayoutinput)": [[343, "armi.reactor.systemLayoutInput.SystemLayoutInput"]], "armi.reactor.systemlayoutinput": [[343, "module-armi.reactor.systemLayoutInput"]], "fromreactor() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[343, "armi.reactor.systemLayoutInput.SystemLayoutInput.fromReactor"]], "growtofullcore() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[343, "armi.reactor.systemLayoutInput.SystemLayoutInput.growToFullCore"]], "loadfromcs() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[343, "armi.reactor.systemLayoutInput.SystemLayoutInput.loadFromCs"]], "modifyeqpaths() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[343, "armi.reactor.systemLayoutInput.SystemLayoutInput.modifyEqPaths"]], "readgeomfromfile() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[343, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromFile"]], "readgeomfromstream() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[343, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromStream"]], "togridblueprints() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[343, "armi.reactor.systemLayoutInput.SystemLayoutInput.toGridBlueprints"]], "writegeom() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[343, "armi.reactor.systemLayoutInput.SystemLayoutInput.writeGeom"]], "armi.reactor.tests": [[344, "module-armi.reactor.tests"]], "annularfueltestcase (class in armi.reactor.tests.test_assemblies)": [[345, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase"]], "assemblyinreactor_testcase (class in armi.reactor.tests.test_assemblies)": [[345, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase"]], "assembly_testcase (class in armi.reactor.tests.test_assemblies)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase"]], "materialinassembly_testcase (class in armi.reactor.tests.test_assemblies)": [[345, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase"]], "armi.reactor.tests.test_assemblies": [[345, "module-armi.reactor.tests.test_assemblies"]], "buildtestassemblies() (in module armi.reactor.tests.test_assemblies)": [[345, "armi.reactor.tests.test_assemblies.buildTestAssemblies"]], "maketestassembly() (in module armi.reactor.tests.test_assemblies)": [[345, "armi.reactor.tests.test_assemblies.makeTestAssembly"]], "test_uthzrmaterial() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_UThZrMaterial"]], "test_add() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_add"]], "test_adjustresolution() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_adjustResolution"]], "test_append() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_append"]], "test_areacheck() (armi.reactor.tests.test_assemblies.annularfueltestcase method)": [[345, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase.test_areaCheck"]], "test_assem_block_types() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_block_types"]], "test_assem_hex_type() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_assem_hex_type"]], "test_averageplenumtemperature() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_averagePlenumTemperature"]], "test_calcavgparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcAvgParam"]], "test_calctotalparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcTotalParam"]], "test_calculatezcoords() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calculateZCoords"]], "test_carestiancoordinates() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_carestianCoordinates"]], "test_countblocksoftype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_countBlocksOfType"]], "test_doubleresolution() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_doubleResolution"]], "test_duplicate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_duplicate"]], "test_extend() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_extend"]], "test_getage() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAge"]], "test_getarea() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getArea"]], "test_getaxialmesh() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAxialMesh"]], "test_getblockdata() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlockData"]], "test_getblocks() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocks"]], "test_getblocksandz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksAndZ"]], "test_getblocksbetweenelevations() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksBetweenElevations"]], "test_getdim() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDim"]], "test_getdominantmaterial() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDominantMaterial"]], "test_getelevationsmatchingparamvalue() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationsMatchingParamValue"]], "test_getfirstblock() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlock"]], "test_getfirstblockbytype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlockByType"]], "test_getfissilemass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFissileMass"]], "test_getheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getHeight"]], "test_getlocation() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getLocation"]], "test_getmass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMass"]], "test_getmaxparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMaxParam"]], "test_getmaxuraniummassenrich() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMaxUraniumMassEnrich"]], "test_getname() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getName"]], "test_getnum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getNum"]], "test_getparamvaluesatz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getParamValuesAtZ"]], "test_getpufrac() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getPuFrac"]], "test_getreactiveheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getReactiveHeight"]], "test_gettotalheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getTotalHeight"]], "test_getvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getVolume"]], "test_getzrfrac() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getZrFrac"]], "test_hascontinuouscoolantchannel() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasContinuousCoolantChannel"]], "test_hasflags() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasFlags"]], "test_iter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iter"]], "test_iteration() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iteration"]], "test_len() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_len"]], "test_makeaxialsnaplist() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_makeAxialSnapList"]], "test_moveto() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_moveTo"]], "test_notesparameter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_notesParameter"]], "test_pinplenumvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_pinPlenumVolume"]], "test_reattach() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reattach"]], "test_reestablishblockorder() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reestablishBlockOrder"]], "test_renameblocksaccordingtoassemblynum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_renameBlocksAccordingToAssemblyNum"]], "test_rotate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_rotate"]], "test_snapaxialmeshtoreference() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_snapAxialMeshToReference"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockigniter() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[345, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[345, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "test_sortnolocator() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_sortNoLocator"]], "test_updatefromassembly() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[345, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_updateFromAssembly"]], "block_testcase (class in armi.reactor.tests.test_blocks)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase"]], "cartesianblock_testcase (class in armi.reactor.tests.test_blocks)": [[346, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase"]], "hexblock_testcase (class in armi.reactor.tests.test_blocks)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase"]], "massconservationtests (class in armi.reactor.tests.test_blocks)": [[346, "armi.reactor.tests.test_blocks.MassConservationTests"]], "pitch (armi.reactor.tests.test_blocks.cartesianblock_testcase attribute)": [[346, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.PITCH"]], "testdetailedndensupdate (class in armi.reactor.tests.test_blocks)": [[346, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate"]], "testnegativevolume (class in armi.reactor.tests.test_blocks)": [[346, "armi.reactor.tests.test_blocks.TestNegativeVolume"]], "thrzblock_testcase (class in armi.reactor.tests.test_blocks)": [[346, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase"]], "applydummydata() (in module armi.reactor.tests.test_blocks)": [[346, "armi.reactor.tests.test_blocks.applyDummyData"]], "armi.reactor.tests.test_blocks": [[346, "module-armi.reactor.tests.test_blocks"]], "buildsimplefuelblock() (in module armi.reactor.tests.test_blocks)": [[346, "armi.reactor.tests.test_blocks.buildSimpleFuelBlock"]], "getcomponentdata() (in module armi.reactor.tests.test_blocks)": [[346, "armi.reactor.tests.test_blocks.getComponentData"]], "loadtestblock() (in module armi.reactor.tests.test_blocks)": [[346, "armi.reactor.tests.test_blocks.loadTestBlock"]], "test_100_getpinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_100_getPinPitch"]], "test_101_getpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_101_getPitch"]], "test_102_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_102_setPitch"]], "test_106_getareafractions() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_106_getAreaFractions"]], "test_27b_setbugroup() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_27b_setBuGroup"]], "test_add() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_add"]], "test_adjustdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustDensity"]], "test_adjustuenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustUEnrich"]], "test_axial() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_axial"]], "test_block_dims() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_block_dims"]], "test_breakfuelcomponentsintoindividuals() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_breakFuelComponentsIntoIndividuals"]], "test_cleardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_clearDensity"]], "test_coldmass() (armi.reactor.tests.test_blocks.massconservationtests method)": [[346, "armi.reactor.tests.test_blocks.MassConservationTests.test_coldMass"]], "test_completeinitialloading() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_completeInitialLoading"]], "test_component_type() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_component_type"]], "test_consistentareawithoverlappingcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentAreaWithOverlappingComponents"]], "test_consistentmassdensityvolumebetweencoldblockandcoldcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"]], "test_consistentmassdensityvolumebetweenhotblockandhotcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"]], "test_coords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_coords"]], "test_dimensionductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[346, "armi.reactor.tests.test_blocks.MassConservationTests.test_dimensionDuctHeatup"]], "test_duplicate() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_duplicate"]], "test_expandallelementalstoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandAllElementalsToIsotopics"]], "test_expandelementaltoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandElementalToIsotopics"]], "test_getarea() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getArea"]], "test_getcartesiangrid() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getCartesianGrid"]], "test_getcomponent() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponent"]], "test_getcomponentareafrac() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentAreaFrac"]], "test_getcomponentbyname() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentByName"]], "test_getcomponentnames() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentNames"]], "test_getcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponents"]], "test_getcomponentsinlinkedorder() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsInLinkedOrder"]], "test_getcomponentsofmaterial() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfMaterial"]], "test_getcomponentsofshape() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfShape"]], "test_getdimensions() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getDimensions"]], "test_getductpitch() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getDuctPitch"]], "test_getfissilemassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFissileMassEnrich"]], "test_getflowarea() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowArea"]], "test_getflowareaperpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowAreaPerPin"]], "test_gethmdens() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHMDens"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getHydraulicDiameter"]], "test_getmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMass"]], "test_getmasses() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMasses"]], "test_getmfp() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMfp"]], "test_getmicrosuffix() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMicroSuffix"]], "test_getnumcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumComponents"]], "test_getnumpins() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumPins"]], "test_getnumpins() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getNumPins"]], "test_getnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberDensity"]], "test_getnumberofatoms() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberOfAtoms"]], "test_getpincenterflattoflat() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCenterFlatToFlat"]], "test_getpincoords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCoords"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchsquare() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchSquare"]], "test_getplenumpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPlenumPin"]], "test_getpu() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPu"]], "test_getreactionrates() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getReactionRates"]], "test_getsmeardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensity"]], "test_getsmeardensitymultipleliner() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityMultipleLiner"]], "test_getsortedcomponentsinsideofcomponentclad() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentClad"]], "test_getsortedcomponentsinsideofcomponentduct() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentDuct"]], "test_getthetarzgrid() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getThetaRZGrid"]], "test_gettotalmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalMass"]], "test_gettotalndens() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalNDens"]], "test_gettype() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getType"]], "test_geturaniummassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumMassEnrich"]], "test_geturaniumnumenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumNumEnrich"]], "test_getvolumefractionwithoutparent() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionWithoutParent"]], "test_getvolumefractionswithzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionsWithZeroHeight"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getWettedPerimeter"]], "test_getxstype() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_getXsType"]], "test_gridcreation() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridCreation"]], "test_gridnotcreatedmultiplemultiplicities() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNotCreatedMultipleMultiplicities"]], "test_gridnumpinsandlocations() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNumPinsAndLocations"]], "test_hascomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasComponents"]], "test_hasflags() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasFlags"]], "test_haspinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasPinPitch"]], "test_heightexpansiondifferences() (armi.reactor.tests.test_blocks.massconservationtests method)": [[346, "armi.reactor.tests.test_blocks.MassConservationTests.test_heightExpansionDifferences"]], "test_homogenizedmixture() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_homogenizedMixture"]], "test_masscladheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[346, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCladHeatup"]], "test_massconsistency() (armi.reactor.tests.test_blocks.massconservationtests method)": [[346, "armi.reactor.tests.test_blocks.MassConservationTests.test_massConsistency"]], "test_masscoolheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[346, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCoolHeatup"]], "test_massductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[346, "armi.reactor.tests.test_blocks.MassConservationTests.test_massDuctHeatup"]], "test_massfuelheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[346, "armi.reactor.tests.test_blocks.MassConservationTests.test_massFuelHeatup"]], "test_mergewithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_mergeWithBlock"]], "test_negativevolume() (armi.reactor.tests.test_blocks.testnegativevolume method)": [[346, "armi.reactor.tests.test_blocks.TestNegativeVolume.test_negativeVolume"]], "test_pinmgfluxes() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_pinMgFluxes"]], "test_radii() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_radii"]], "test_removemass() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_removeMass"]], "test_replaceblockwithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_replaceBlockWithBlock"]], "test_retainstate() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_retainState"]], "test_rotatepins() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_rotatePins"]], "test_setbulimitinfo() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_setBuLimitInfo"]], "test_setimportantparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_setImportantParams"]], "test_setlinpowbypin() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLinPowByPin"]], "test_setlocation() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLocation"]], "test_setmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_setMass"]], "test_setnumberdensities() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensity"]], "test_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_setPitch"]], "test_settype() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_setType"]], "test_setzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_setZeroHeight"]], "test_symmetryfactor() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_symmetryFactor"]], "test_theta() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_theta"]], "test_timenodeparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[346, "armi.reactor.tests.test_blocks.Block_TestCase.test_timeNodeParams"]], "test_updatedetailedndens() (armi.reactor.tests.test_blocks.testdetailedndensupdate method)": [[346, "armi.reactor.tests.test_blocks.TestDetailedNDensUpdate.test_updateDetailedNdens"]], "test_verifyblockdims() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[346, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_verifyBlockDims"]], "testcircle (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestCircle"]], "testcomponent (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestComponent"]], "testcomponentexpansion (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion"]], "testcomponentfactory (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestComponentFactory"]], "testcube (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestCube"]], "testderivedshape (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestDerivedShape"]], "testdifferentialradialsegment (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestDifferentialRadialSegment"]], "testgeneralcomponents (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestGeneralComponents"]], "testhelix (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestHelix"]], "testhexholedcircle (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestHexHoledCircle"]], "testhexagon (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestHexagon"]], "testholedhexagon (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestHoledHexagon"]], "testholedrectangle (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestHoledRectangle"]], "testholedsquare (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestHoledSquare"]], "testmaterialadjustments (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestMaterialAdjustments"]], "testnullcomponent (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestNullComponent"]], "testradialsegment (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestRadialSegment"]], "testrectangle (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestRectangle"]], "testshapedcomponent (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestShapedComponent"]], "testsolidrectangle (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestSolidRectangle"]], "testsphere (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestSphere"]], "testsquare (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestSquare"]], "testtriangle (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestTriangle"]], "testunshapedcomponent (class in armi.reactor.tests.test_components)": [[347, "armi.reactor.tests.test_components.TestUnshapedComponent"]], "armi.reactor.tests.test_components": [[347, "module-armi.reactor.tests.test_components"]], "coldouterdiameter (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion.coldOuterDiameter"]], "componentcls (armi.reactor.tests.test_components.testcircle attribute)": [[347, "armi.reactor.tests.test_components.TestCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcomponent attribute)": [[347, "armi.reactor.tests.test_components.TestComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcube attribute)": [[347, "armi.reactor.tests.test_components.TestCube.componentCls"]], "componentcls (armi.reactor.tests.test_components.testderivedshape attribute)": [[347, "armi.reactor.tests.test_components.TestDerivedShape.componentCls"]], "componentcls (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[347, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[347, "armi.reactor.tests.test_components.TestGeneralComponents.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhelix attribute)": [[347, "armi.reactor.tests.test_components.TestHelix.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[347, "armi.reactor.tests.test_components.TestHexHoledCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexagon attribute)": [[347, "armi.reactor.tests.test_components.TestHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedhexagon attribute)": [[347, "armi.reactor.tests.test_components.TestHoledHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedrectangle attribute)": [[347, "armi.reactor.tests.test_components.TestHoledRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedsquare attribute)": [[347, "armi.reactor.tests.test_components.TestHoledSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testnullcomponent attribute)": [[347, "armi.reactor.tests.test_components.TestNullComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testradialsegment attribute)": [[347, "armi.reactor.tests.test_components.TestRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testrectangle attribute)": [[347, "armi.reactor.tests.test_components.TestRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[347, "armi.reactor.tests.test_components.TestSolidRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsphere attribute)": [[347, "armi.reactor.tests.test_components.TestSphere.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsquare attribute)": [[347, "armi.reactor.tests.test_components.TestSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testtriangle attribute)": [[347, "armi.reactor.tests.test_components.TestTriangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[347, "armi.reactor.tests.test_components.TestUnshapedComponent.componentCls"]], "componentdims (armi.reactor.tests.test_components.testcircle attribute)": [[347, "armi.reactor.tests.test_components.TestCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testcube attribute)": [[347, "armi.reactor.tests.test_components.TestCube.componentDims"]], "componentdims (armi.reactor.tests.test_components.testderivedshape attribute)": [[347, "armi.reactor.tests.test_components.TestDerivedShape.componentDims"]], "componentdims (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[347, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[347, "armi.reactor.tests.test_components.TestGeneralComponents.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhelix attribute)": [[347, "armi.reactor.tests.test_components.TestHelix.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[347, "armi.reactor.tests.test_components.TestHexHoledCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexagon attribute)": [[347, "armi.reactor.tests.test_components.TestHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedhexagon attribute)": [[347, "armi.reactor.tests.test_components.TestHoledHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedrectangle attribute)": [[347, "armi.reactor.tests.test_components.TestHoledRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedsquare attribute)": [[347, "armi.reactor.tests.test_components.TestHoledSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testradialsegment attribute)": [[347, "armi.reactor.tests.test_components.TestRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testrectangle attribute)": [[347, "armi.reactor.tests.test_components.TestRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[347, "armi.reactor.tests.test_components.TestSolidRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsphere attribute)": [[347, "armi.reactor.tests.test_components.TestSphere.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsquare attribute)": [[347, "armi.reactor.tests.test_components.TestSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testtriangle attribute)": [[347, "armi.reactor.tests.test_components.TestTriangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[347, "armi.reactor.tests.test_components.TestUnshapedComponent.componentDims"]], "componentmassindependentofinputtemp() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion.componentMassIndependentOfInputTemp"]], "componentmaterial (armi.reactor.tests.test_components.testderivedshape attribute)": [[347, "armi.reactor.tests.test_components.TestDerivedShape.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[347, "armi.reactor.tests.test_components.TestGeneralComponents.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[347, "armi.reactor.tests.test_components.TestUnshapedComponent.componentMaterial"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedrectangle attribute)": [[347, "armi.reactor.tests.test_components.TestHoledRectangle.dimsToTestExpansion"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedsquare attribute)": [[347, "armi.reactor.tests.test_components.TestHoledSquare.dimsToTestExpansion"]], "expansionconservationcoldheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationColdHeightDefined"]], "expansionconservationhotheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationHotHeightDefined"]], "getcirclefueldict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[347, "armi.reactor.tests.test_components.TestComponentFactory.getCircleFuelDict"]], "getcirclevoiddict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[347, "armi.reactor.tests.test_components.TestComponentFactory.getCircleVoidDict"]], "runexpansiontests() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion.runExpansionTests"]], "setclassdims() (armi.reactor.tests.test_components.testholedrectangle method)": [[347, "armi.reactor.tests.test_components.TestHoledRectangle.setClassDims"]], "setclassdims() (armi.reactor.tests.test_components.testholedsquare method)": [[347, "armi.reactor.tests.test_components.TestHoledSquare.setClassDims"]], "tcold (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion.tCold"]], "thot (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion.tHot"]], "twarm (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion.tWarm"]], "test_b4cexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion.test_B4CExpansion"]], "test_ht9expansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion.test_HT9Expansion"]], "test_uzrexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[347, "armi.reactor.tests.test_components.TestComponentExpansion.test_UZrExpansion"]], "test_adjustmassenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[347, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassEnrichment"]], "test_adjustmassfrac_u() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[347, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U"]], "test_adjustmassfrac_u235() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[347, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U235"]], "test_adjustmassfrac_clear_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[347, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_clear_ZR"]], "test_adjustmassfrac_invalid() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[347, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_invalid"]], "test_adjustmassfrac_leave_same() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[347, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_leave_same"]], "test_adjustmassfrac_set_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[347, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_set_ZR"]], "test_badcomponentname() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_badComponentName"]], "test_changenumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_changeNumberDensities"]], "test_cmp() (armi.reactor.tests.test_components.testnullcomponent method)": [[347, "armi.reactor.tests.test_components.TestNullComponent.test_cmp"]], "test_componentinitializationandduplication() (armi.reactor.tests.test_components.testcomponentfactory method)": [[347, "armi.reactor.tests.test_components.TestComponentFactory.test_componentInitializationAndDuplication"]], "test_componentinteractionslinkingbydimensions() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingByDimensions"]], "test_componentinteractionslinkingbysubtraction() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingBySubtraction"]], "test_component_less_than() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[347, "armi.reactor.tests.test_components.TestUnshapedComponent.test_component_less_than"]], "test_computevolume() (armi.reactor.tests.test_components.testderivedshape method)": [[347, "armi.reactor.tests.test_components.TestDerivedShape.test_computeVolume"]], "test_density() (armi.reactor.tests.test_components.testshapedcomponent method)": [[347, "armi.reactor.tests.test_components.TestShapedComponent.test_density"]], "test_densityconsistent() (armi.reactor.tests.test_components.testshapedcomponent method)": [[347, "armi.reactor.tests.test_components.TestShapedComponent.test_densityConsistent"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[347, "armi.reactor.tests.test_components.TestHelix.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[347, "armi.reactor.tests.test_components.TestHexHoledCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[347, "armi.reactor.tests.test_components.TestHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[347, "armi.reactor.tests.test_components.TestHoledHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[347, "armi.reactor.tests.test_components.TestHoledRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[347, "armi.reactor.tests.test_components.TestRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[347, "armi.reactor.tests.test_components.TestSolidRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[347, "armi.reactor.tests.test_components.TestSquare.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[347, "armi.reactor.tests.test_components.TestTriangle.test_dimensionThermallyExpands"]], "test_factory() (armi.reactor.tests.test_components.testcomponentfactory method)": [[347, "armi.reactor.tests.test_components.TestComponentFactory.test_factory"]], "test_factorybadshapename() (armi.reactor.tests.test_components.testcomponentfactory method)": [[347, "armi.reactor.tests.test_components.TestComponentFactory.test_factoryBadShapeName"]], "test_fromcomponent() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[347, "armi.reactor.tests.test_components.TestUnshapedComponent.test_fromComponent"]], "test_fuelmass() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_fuelMass"]], "test_getarea() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhelix method)": [[347, "armi.reactor.tests.test_components.TestHelix.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexholedcircle method)": [[347, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexagon method)": [[347, "armi.reactor.tests.test_components.TestHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedhexagon method)": [[347, "armi.reactor.tests.test_components.TestHoledHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedrectangle method)": [[347, "armi.reactor.tests.test_components.TestHoledRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testrectangle method)": [[347, "armi.reactor.tests.test_components.TestRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsolidrectangle method)": [[347, "armi.reactor.tests.test_components.TestSolidRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsquare method)": [[347, "armi.reactor.tests.test_components.TestSquare.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testtriangle method)": [[347, "armi.reactor.tests.test_components.TestTriangle.test_getArea"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testderivedshape method)": [[347, "armi.reactor.tests.test_components.TestDerivedShape.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[347, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhelix method)": [[347, "armi.reactor.tests.test_components.TestHelix.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[347, "armi.reactor.tests.test_components.TestHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[347, "armi.reactor.tests.test_components.TestHoledHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[347, "armi.reactor.tests.test_components.TestHoledRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testradialsegment method)": [[347, "armi.reactor.tests.test_components.TestRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[347, "armi.reactor.tests.test_components.TestRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsolidrectangle method)": [[347, "armi.reactor.tests.test_components.TestSolidRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsquare method)": [[347, "armi.reactor.tests.test_components.TestSquare.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[347, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getBoundingCircleOuterDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhelix method)": [[347, "armi.reactor.tests.test_components.TestHelix.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexholedcircle method)": [[347, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[347, "armi.reactor.tests.test_components.TestHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[347, "armi.reactor.tests.test_components.TestHoledHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[347, "armi.reactor.tests.test_components.TestHoledRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedsquare method)": [[347, "armi.reactor.tests.test_components.TestHoledSquare.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[347, "armi.reactor.tests.test_components.TestRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testsquare method)": [[347, "armi.reactor.tests.test_components.TestSquare.test_getCircleInnerDiameter"]], "test_getcomponentarea() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[347, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getComponentArea"]], "test_getdimension() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_getDimension"]], "test_getdimension() (armi.reactor.tests.test_components.testnullcomponent method)": [[347, "armi.reactor.tests.test_components.TestNullComponent.test_getDimension"]], "test_getenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[347, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_getEnrichment"]], "test_getnumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_getNumberDensities"]], "test_getperimeter() (armi.reactor.tests.test_components.testhexagon method)": [[347, "armi.reactor.tests.test_components.TestHexagon.test_getPerimeter"]], "test_getthermalexpansionfactorconservedmassbylinearexpansionpercent() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"]], "test_getvolume() (armi.reactor.tests.test_components.testcube method)": [[347, "armi.reactor.tests.test_components.TestCube.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[347, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testradialsegment method)": [[347, "armi.reactor.tests.test_components.TestRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testsphere method)": [[347, "armi.reactor.tests.test_components.TestSphere.test_getVolume"]], "test_initializecomponentmaterial() (armi.reactor.tests.test_components.testcomponent method)": [[347, "armi.reactor.tests.test_components.TestComponent.test_initializeComponentMaterial"]], "test_invalidcoolantcomponentassignment() (armi.reactor.tests.test_components.testcomponentfactory method)": [[347, "armi.reactor.tests.test_components.TestComponentFactory.test_invalidCoolantComponentAssignment"]], "test_negativearea() (armi.reactor.tests.test_components.testrectangle method)": [[347, "armi.reactor.tests.test_components.TestRectangle.test_negativeArea"]], "test_negativearea() (armi.reactor.tests.test_components.testsquare method)": [[347, "armi.reactor.tests.test_components.TestSquare.test_negativeArea"]], "test_negativevolume() (armi.reactor.tests.test_components.testcube method)": [[347, "armi.reactor.tests.test_components.TestCube.test_negativeVolume"]], "test_nonzero() (armi.reactor.tests.test_components.testnullcomponent method)": [[347, "armi.reactor.tests.test_components.TestNullComponent.test_nonzero"]], "test_preservemassduringthermalexpansion() (armi.reactor.tests.test_components.testshapedcomponent method)": [[347, "armi.reactor.tests.test_components.TestShapedComponent.test_preserveMassDuringThermalExpansion"]], "test_setmassfrac() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[347, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFrac"]], "test_setmassfraconcomponentmaterial() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[347, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFracOnComponentMaterial"]], "test_setnumberdensities() (armi.reactor.tests.test_components.testcomponent method)": [[347, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_components.testcomponent method)": [[347, "armi.reactor.tests.test_components.TestComponent.test_setNumberDensity"]], "test_solid_material() (armi.reactor.tests.test_components.testcomponent method)": [[347, "armi.reactor.tests.test_components.TestComponent.test_solid_material"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[347, "armi.reactor.tests.test_components.TestCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcube method)": [[347, "armi.reactor.tests.test_components.TestCube.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[347, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[347, "armi.reactor.tests.test_components.TestHelix.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[347, "armi.reactor.tests.test_components.TestHexHoledCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[347, "armi.reactor.tests.test_components.TestHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[347, "armi.reactor.tests.test_components.TestHoledHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[347, "armi.reactor.tests.test_components.TestHoledRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedsquare method)": [[347, "armi.reactor.tests.test_components.TestHoledSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testradialsegment method)": [[347, "armi.reactor.tests.test_components.TestRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[347, "armi.reactor.tests.test_components.TestRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[347, "armi.reactor.tests.test_components.TestSolidRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsphere method)": [[347, "armi.reactor.tests.test_components.TestSphere.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[347, "armi.reactor.tests.test_components.TestSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[347, "armi.reactor.tests.test_components.TestTriangle.test_thermallyExpands"]], "test_updatedims() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[347, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_updateDims"]], "test_validparameters() (armi.reactor.tests.test_components.testhelix method)": [[347, "armi.reactor.tests.test_components.TestHelix.test_validParameters"]], "test_volumeafterclearcache() (armi.reactor.tests.test_components.testshapedcomponent method)": [[347, "armi.reactor.tests.test_components.TestShapedComponent.test_volumeAfterClearCache"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.A"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.A"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.B"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.B"]], "bprime (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.BPRIME"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.C"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.C"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.D"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.D"]], "dummycomposite (class in armi.reactor.tests.test_composites)": [[348, "armi.reactor.tests.test_composites.DummyComposite"]], "dummyleaf (class in armi.reactor.tests.test_composites)": [[348, "armi.reactor.tests.test_composites.DummyLeaf"]], "mockbp (class in armi.reactor.tests.test_composites)": [[348, "armi.reactor.tests.test_composites.MockBP"]], "testcompositepattern (class in armi.reactor.tests.test_composites)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern"]], "testcompositetree (class in armi.reactor.tests.test_composites)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree"]], "testflagserializer (class in armi.reactor.tests.test_composites)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer"]], "testflagserializer.testflagsa (class in armi.reactor.tests.test_composites)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA"]], "testflagserializer.testflagsb (class in armi.reactor.tests.test_composites)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB"]], "testgetreactionratedict (class in armi.reactor.tests.test_composites)": [[348, "armi.reactor.tests.test_composites.TestGetReactionRateDict"]], "testmiscmethods (class in armi.reactor.tests.test_composites)": [[348, "armi.reactor.tests.test_composites.TestMiscMethods"]], "activenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[348, "armi.reactor.tests.test_composites.MockBP.activeNuclides"]], "allnuclidesinproblem (armi.reactor.tests.test_composites.mockbp attribute)": [[348, "armi.reactor.tests.test_composites.MockBP.allNuclidesInProblem"]], "armi.reactor.tests.test_composites": [[348, "module-armi.reactor.tests.test_composites"]], "blueprintyaml (armi.reactor.tests.test_composites.testcompositetree attribute)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.blueprintYaml"]], "customisotopics (armi.reactor.tests.test_composites.mockbp attribute)": [[348, "armi.reactor.tests.test_composites.MockBP.customIsotopics"]], "elementstoexpand (armi.reactor.tests.test_composites.mockbp attribute)": [[348, "armi.reactor.tests.test_composites.MockBP.elementsToExpand"]], "getboundingcircleouterdiameter() (armi.reactor.tests.test_composites.dummyleaf method)": [[348, "armi.reactor.tests.test_composites.DummyLeaf.getBoundingCircleOuterDiameter"]], "getchildren() (armi.reactor.tests.test_composites.dummyleaf method)": [[348, "armi.reactor.tests.test_composites.DummyLeaf.getChildren"]], "getchildrenwithflags() (armi.reactor.tests.test_composites.dummyleaf method)": [[348, "armi.reactor.tests.test_composites.DummyLeaf.getChildrenWithFlags"]], "getdummyparamdefs() (in module armi.reactor.tests.test_composites)": [[348, "armi.reactor.tests.test_composites.getDummyParamDefs"]], "inactivenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[348, "armi.reactor.tests.test_composites.MockBP.inactiveNuclides"]], "itercomponents() (armi.reactor.tests.test_composites.dummyleaf method)": [[348, "armi.reactor.tests.test_composites.DummyLeaf.iterComponents"]], "pdefs (armi.reactor.tests.test_composites.dummycomposite attribute)": [[348, "armi.reactor.tests.test_composites.DummyComposite.pDefs"]], "pdefs (armi.reactor.tests.test_composites.dummyleaf attribute)": [[348, "armi.reactor.tests.test_composites.DummyLeaf.pDefs"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummycomposite attribute)": [[348, "armi.reactor.tests.test_composites.DummyComposite.paramCollectionType"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummyleaf attribute)": [[348, "armi.reactor.tests.test_composites.DummyLeaf.paramCollectionType"]], "test_arechildernoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_areChildernOfType"]], "test_composite() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_composite"]], "test_constituentreport() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_constituentReport"]], "test_containsatleastonechildoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsAtLeastOneChildOfType"]], "test_containsheavymetal() (armi.reactor.tests.test_composites.testmiscmethods method)": [[348, "armi.reactor.tests.test_composites.TestMiscMethods.test_containsHeavyMetal"]], "test_containsonlychildrenoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsOnlyChildrenOfType"]], "test_copyparamsfrom() (armi.reactor.tests.test_composites.testmiscmethods method)": [[348, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsFrom"]], "test_copyparamstochildren() (armi.reactor.tests.test_composites.testmiscmethods method)": [[348, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsToChildren"]], "test_dimensionreport() (armi.reactor.tests.test_composites.testmiscmethods method)": [[348, "armi.reactor.tests.test_composites.TestMiscMethods.test_dimensionReport"]], "test_expandlfps() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_expandLFPs"]], "test_flagconversion() (armi.reactor.tests.test_composites.testflagserializer method)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagConversion"]], "test_flagserialization() (armi.reactor.tests.test_composites.testflagserializer method)": [[348, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagSerialization"]], "test_getatomicweight() (armi.reactor.tests.test_composites.testmiscmethods method)": [[348, "armi.reactor.tests.test_composites.TestMiscMethods.test_getAtomicWeight"]], "test_getboundingcirlceouterdiameter() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_getBoundingCirlceOuterDiameter"]], "test_getchildren() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_getChildren"]], "test_getchildrenincludematerials() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_getChildrenIncludeMaterials"]], "test_getfpmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFPMass"]], "test_getfissilemass() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFissileMass"]], "test_getfuelmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFuelMass"]], "test_getgammaenergydepositionconstants() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_getGammaEnergyDepositionConstants"]], "test_gethmmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_getHMMass"]], "test_getintegratedmgflux() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_getIntegratedMgFlux"]], "test_getmaxparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMaxParam"]], "test_getminparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMinParam"]], "test_getname() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_getName"]], "test_getneutronenergydepositionconstants() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_getNeutronEnergyDepositionConstants"]], "test_getnuclides() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_getNuclides"]], "test_getnumberdensities() (armi.reactor.tests.test_composites.testmiscmethods method)": [[348, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensities"]], "test_getnumberdensitieswithexpandedfissionproducts() (armi.reactor.tests.test_composites.testmiscmethods method)": [[348, "armi.reactor.tests.test_composites.TestMiscMethods.test_getNumberDensitiesWithExpandedFissionProducts"]], "test_getparamnames() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_getParamNames"]], "test_getreactionratedict() (armi.reactor.tests.test_composites.testgetreactionratedict method)": [[348, "armi.reactor.tests.test_composites.TestGetReactionRateDict.test_getReactionRateDict"]], "test_getreactionrates() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_getReactionRates"]], "test_hasflags() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlags"]], "test_hasflagsnotypespecified() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsNoTypeSpecified"]], "test_hasflagssubstring() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsSubstring"]], "test_itercomponents() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_iterComponents"]], "test_namecontains() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_nameContains"]], "test_nucspec() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_nucSpec"]], "test_ordering() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_ordering"]], "test_printdensities() (armi.reactor.tests.test_composites.testmiscmethods method)": [[348, "armi.reactor.tests.test_composites.TestMiscMethods.test_printDensities"]], "test_setmass() (armi.reactor.tests.test_composites.testmiscmethods method)": [[348, "armi.reactor.tests.test_composites.TestMiscMethods.test_setMass"]], "test_sort() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_sort"]], "test_summing() (armi.reactor.tests.test_composites.testcompositetree method)": [[348, "armi.reactor.tests.test_composites.TestCompositeTree.test_summing"]], "test_syncparameters() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_syncParameters"]], "test_updatevolume() (armi.reactor.tests.test_composites.testcompositepattern method)": [[348, "armi.reactor.tests.test_composites.TestCompositePattern.test_updateVolume"]], "testflags (class in armi.reactor.tests.test_flags)": [[349, "armi.reactor.tests.test_flags.TestFlags"]], "armi.reactor.tests.test_flags": [[349, "module-armi.reactor.tests.test_flags"]], "test_convertsstringswithnonflags() (armi.reactor.tests.test_flags.testflags method)": [[349, "armi.reactor.tests.test_flags.TestFlags.test_convertsStringsWithNonFlags"]], "test_defaultisfalse() (armi.reactor.tests.test_flags.testflags method)": [[349, "armi.reactor.tests.test_flags.TestFlags.test_defaultIsFalse"]], "test_flagstoandfromstring() (armi.reactor.tests.test_flags.testflags method)": [[349, "armi.reactor.tests.test_flags.TestFlags.test_flagsToAndFromString"]], "test_fromstring() (armi.reactor.tests.test_flags.testflags method)": [[349, "armi.reactor.tests.test_flags.TestFlags.test_fromString"]], "test_fromstringstrict() (armi.reactor.tests.test_flags.testflags method)": [[349, "armi.reactor.tests.test_flags.TestFlags.test_fromStringStrict"]], "test_ispickleable() (armi.reactor.tests.test_flags.testflags method)": [[349, "armi.reactor.tests.test_flags.TestFlags.test_isPickleable"]], "test_lookup() (armi.reactor.tests.test_flags.testflags method)": [[349, "armi.reactor.tests.test_flags.TestFlags.test_lookup"]], "testgeomtype (class in armi.reactor.tests.test_geometry)": [[350, "armi.reactor.tests.test_geometry.TestGeomType"]], "testsymmetrytype (class in armi.reactor.tests.test_geometry)": [[350, "armi.reactor.tests.test_geometry.TestSymmetryType"]], "testsystemlayoutinput (class in armi.reactor.tests.test_geometry)": [[350, "armi.reactor.tests.test_geometry.TestSystemLayoutInput"]], "testsystemlayoutinputtrz (class in armi.reactor.tests.test_geometry)": [[350, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry": [[350, "module-armi.reactor.tests.test_geometry"]], "test_symmetryfactor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[350, "armi.reactor.tests.test_geometry.TestSymmetryType.test_SymmetryFactor"]], "test_trzyamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[350, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_TRZyamlIO"]], "test_asciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[350, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_asciimap"]], "test_baseconstructor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[350, "armi.reactor.tests.test_geometry.TestSymmetryType.test_baseConstructor"]], "test_checkvalidgeomsymmetrycombo() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[350, "armi.reactor.tests.test_geometry.TestSymmetryType.test_checkValidGeomSymmetryCombo"]], "test_domaintypenulls() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[350, "armi.reactor.tests.test_geometry.TestSymmetryType.test_domainTypeNulls"]], "test_fromany() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[350, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromAny"]], "test_fromstr() (armi.reactor.tests.test_geometry.testgeomtype method)": [[350, "armi.reactor.tests.test_geometry.TestGeomType.test_fromStr"]], "test_fromstr() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[350, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromStr"]], "test_growtofullcore() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[350, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_growToFullCore"]], "test_label() (armi.reactor.tests.test_geometry.testgeomtype method)": [[350, "armi.reactor.tests.test_geometry.TestGeomType.test_label"]], "test_label() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[350, "armi.reactor.tests.test_geometry.TestSymmetryType.test_label"]], "test_readasciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[350, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readAsciimap"]], "test_readhexgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[350, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readHexGeomXML"]], "test_readreactor() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[350, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readReactor"]], "test_readtrzgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[350, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_readTRZGeomXML"]], "test_str() (armi.reactor.tests.test_geometry.testgeomtype method)": [[350, "armi.reactor.tests.test_geometry.TestGeomType.test_str"]], "test_yamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[350, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_yamlIO"]], "mockcomposite (class in armi.reactor.tests.test_parameters)": [[351, "armi.reactor.tests.test_parameters.MockComposite"]], "mockcompositechild (class in armi.reactor.tests.test_parameters)": [[351, "armi.reactor.tests.test_parameters.MockCompositeChild"]], "mockcompositegrandparent (class in armi.reactor.tests.test_parameters)": [[351, "armi.reactor.tests.test_parameters.MockCompositeGrandParent"]], "mockcompositeparent (class in armi.reactor.tests.test_parameters)": [[351, "armi.reactor.tests.test_parameters.MockCompositeParent"]], "parametertests (class in armi.reactor.tests.test_parameters)": [[351, "armi.reactor.tests.test_parameters.ParameterTests"]], "armi.reactor.tests.test_parameters": [[351, "module-armi.reactor.tests.test_parameters"]], "test_attemptingtosetparamwithoutsetterfails() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_attemptingToSetParamWithoutSetterFails"]], "test_cannotcreateattrbuteonparametercollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateAttrbuteOnParameterCollectionSubclass"]], "test_cannotcreateinstanceof_nodefault() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_NoDefault"]], "test_cannotcreateinstanceof_undefined() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_Undefined"]], "test_cannotdefineparameterwithsamename() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameName"]], "test_cannotdefineparameterwithsamenameforcollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameNameForCollectionSubclass"]], "test_categories() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_categories"]], "test_defaultlocation() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_defaultLocation"]], "test_getwithoutdefaultraisesparametererror() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_getWithoutDefaultRaisesParameterError"]], "test_mutabledefaultsnotsupported() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_mutableDefaultsNotSupported"]], "test_paramdefinitionscompose() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_paramDefinitionsCompose"]], "test_parampropertydoesnotconflict() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflict"]], "test_parampropertydoesnotconflictwithnonedefault() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflictWithNoneDefault"]], "test_parametercollectionshave__slots__() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_parameterCollectionsHave__slots__"]], "test_serializer_pack_unpack() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_serializer_pack_unpack"]], "test_setter() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_setter"]], "test_settergetterbasics() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_setterGetterBasics"]], "test_writesomeparamstodb() (armi.reactor.tests.test_parameters.parametertests method)": [[351, "armi.reactor.tests.test_parameters.ParameterTests.test_writeSomeParamsToDB"]], "cartesianreactortests (class in armi.reactor.tests.test_reactors)": [[352, "armi.reactor.tests.test_reactors.CartesianReactorTests"]], "hexreactortests (class in armi.reactor.tests.test_reactors)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests"]], "reactortests (class in armi.reactor.tests.test_reactors)": [[352, "armi.reactor.tests.test_reactors.ReactorTests"]], "armi.reactor.tests.test_reactors": [[352, "module-armi.reactor.tests.test_reactors"]], "buildoperatorofemptycartesianblocks() (in module armi.reactor.tests.test_reactors)": [[352, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyCartesianBlocks"]], "buildoperatorofemptyhexblocks() (in module armi.reactor.tests.test_reactors)": [[352, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyHexBlocks"]], "loadtestreactor() (in module armi.reactor.tests.test_reactors)": [[352, "armi.reactor.tests.test_reactors.loadTestReactor"]], "reducetestreactorrings() (in module armi.reactor.tests.test_reactors)": [[352, "armi.reactor.tests.test_reactors.reduceTestReactorRings"]], "test_addmorenodes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMoreNodes"]], "test_applythermalexpansion_coreconstruct() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_applyThermalExpansion_CoreConstruct"]], "test_buildmanualzones() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZones"]], "test_buildmanualzonesempty() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZonesEmpty"]], "test_coresfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_coreSfp"]], "test_countblocksoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_countBlocksOfType"]], "test_countfuelaxialblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_countFuelAxialBlocks"]], "test_createassemblyoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfType"]], "test_createassemblyoftypeexpandedcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfTypeExpandedCore"]], "test_createfreshfeed() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_createFreshFeed"]], "test_differentnuclidemodels() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_differentNuclideModels"]], "test_factorysortsetting() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_factorySortSetting"]], "test_findallaxialmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints"]], "test_findallaxialmeshpoints_wsubmesh() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints_wSubmesh"]], "test_findallazimeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAziMeshPoints"]], "test_findallradmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllRadMeshPoints"]], "test_findaxialmeshindexof() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAxialMeshIndexOf"]], "test_findneighbors() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_findNeighbors"]], "test_genassembliesaddedthiscycle() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_genAssembliesAddedThisCycle"]], "test_geomtype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_geomType"]], "test_getallxssuffixes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAllXsSuffixes"]], "test_getassembliesincircularring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInCircularRing"]], "test_getassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInHexRing"]], "test_getassembliesinsquarering() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[352, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssembliesInSquareRing"]], "test_getassembliesonsymmetryline() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesOnSymmetryLine"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[352, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssemblyPitch"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyPitch"]], "test_getassemblywithloc() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithLoc"]], "test_getassemblywithname() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyWithName"]], "test_getavgtemp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAvgTemp"]], "test_getblocksbyindices() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getBlocksByIndices"]], "test_getdominantmaterial() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getDominantMaterial"]], "test_getfirstfuelblockaxialnode() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFirstFuelBlockAxialNode"]], "test_getfluxvector() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFluxVector"]], "test_getfuelbottomheight() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFuelBottomHeight"]], "test_getgridbounds() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getGridBounds"]], "test_getmass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMass"]], "test_getmaxassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxAssembliesInHexRing"]], "test_getmaxnumpins() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxNumPins"]], "test_getminimumpercentfluxinfuel() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMinimumPercentFluxInFuel"]], "test_getnozzletypes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNozzleTypes"]], "test_getnuclidecategories() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNuclideCategories"]], "test_getnuclidecategorieslogging() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[352, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getNuclideCategoriesLogging"]], "test_getnumassemblieswithallringsfilledout() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOut"]], "test_getnumassemblieswithallringsfilledoutbipass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOutBipass"]], "test_getnumenergygroups() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumEnergyGroups"]], "test_getscalarevolution() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getScalarEvolution"]], "test_getsetparameters() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSetParameters"]], "test_getsymmetryfactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSymmetryFactor"]], "test_gettotalparam() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_getTotalParam"]], "test_growtofullcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_growToFullCore"]], "test_ifmissingspatialgrid() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_ifMissingSpatialGrid"]], "test_ispickleable() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_isPickleable"]], "test_locations() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_locations"]], "test_nonuniformassems() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_nonUniformAssems"]], "test_normalizenames() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_normalizeNames"]], "test_pincoordsallblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_pinCoordsAllBlocks"]], "test_removeallassemblies() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAllAssemblies"]], "test_removeassembliesinring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRing"]], "test_removeassembliesinringbycount() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingByCount"]], "test_removeassembliesinringhex() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingHex"]], "test_removeassembly() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembly"]], "test_removeassemblynosfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssemblyNoSfp"]], "test_restorereactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_restoreReactor"]], "test_saveallflux() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_saveAllFlux"]], "test_setb10voloncreation() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_setB10VolOnCreation"]], "test_setpowerifnecessary() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPowerIfNecessary"]], "test_sortassembyring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortAssemByRing"]], "test_sortchildren() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortChildren"]], "test_updateblockbolheights_dbload() (armi.reactor.tests.test_reactors.hexreactortests method)": [[352, "armi.reactor.tests.test_reactors.HexReactorTests.test_updateBlockBOLHeights_DBLoad"]], "testrztreactor (class in armi.reactor.tests.test_rz_reactors)": [[353, "armi.reactor.tests.test_rz_reactors.TestRZTReactor"]], "testrztreactormodern (class in armi.reactor.tests.test_rz_reactors)": [[353, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern"]], "armi.reactor.tests.test_rz_reactors": [[353, "module-armi.reactor.tests.test_rz_reactors"]], "test_findallmeshpoints() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[353, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_findAllMeshPoints"]], "test_loadrzt() (armi.reactor.tests.test_rz_reactors.testrztreactor method)": [[353, "armi.reactor.tests.test_rz_reactors.TestRZTReactor.test_loadRZT"]], "test_loadrzt_reactor() (armi.reactor.tests.test_rz_reactors.testrztreactormodern method)": [[353, "armi.reactor.tests.test_rz_reactors.TestRZTReactorModern.test_loadRZT_reactor"]], "testzone (class in armi.reactor.tests.test_zones)": [[354, "armi.reactor.tests.test_zones.TestZone"]], "testzones (class in armi.reactor.tests.test_zones)": [[354, "armi.reactor.tests.test_zones.TestZones"]], "armi.reactor.tests.test_zones": [[354, "module-armi.reactor.tests.test_zones"]], "test_additem() (armi.reactor.tests.test_zones.testzone method)": [[354, "armi.reactor.tests.test_zones.TestZone.test_addItem"]], "test_additems() (armi.reactor.tests.test_zones.testzone method)": [[354, "armi.reactor.tests.test_zones.TestZone.test_addItems"]], "test_addloc() (armi.reactor.tests.test_zones.testzone method)": [[354, "armi.reactor.tests.test_zones.TestZone.test_addLoc"]], "test_addlocs() (armi.reactor.tests.test_zones.testzone method)": [[354, "armi.reactor.tests.test_zones.TestZone.test_addLocs"]], "test_blocks() (armi.reactor.tests.test_zones.testzone method)": [[354, "armi.reactor.tests.test_zones.TestZone.test_blocks"]], "test_dictionaryinterface() (armi.reactor.tests.test_zones.testzones method)": [[354, "armi.reactor.tests.test_zones.TestZones.test_dictionaryInterface"]], "test_findzoneitisin() (armi.reactor.tests.test_zones.testzones method)": [[354, "armi.reactor.tests.test_zones.TestZones.test_findZoneItIsIn"]], "test_getalllocations() (armi.reactor.tests.test_zones.testzones method)": [[354, "armi.reactor.tests.test_zones.TestZones.test_getAllLocations"]], "test_getzonelocations() (armi.reactor.tests.test_zones.testzones method)": [[354, "armi.reactor.tests.test_zones.TestZones.test_getZoneLocations"]], "test_iteration() (armi.reactor.tests.test_zones.testzone method)": [[354, "armi.reactor.tests.test_zones.TestZone.test_iteration"]], "test_removeitem() (armi.reactor.tests.test_zones.testzone method)": [[354, "armi.reactor.tests.test_zones.TestZone.test_removeItem"]], "test_removeitems() (armi.reactor.tests.test_zones.testzone method)": [[354, "armi.reactor.tests.test_zones.TestZone.test_removeItems"]], "test_removeloc() (armi.reactor.tests.test_zones.testzone method)": [[354, "armi.reactor.tests.test_zones.TestZone.test_removeLoc"]], "test_removelocs() (armi.reactor.tests.test_zones.testzone method)": [[354, "armi.reactor.tests.test_zones.TestZone.test_removeLocs"]], "test_repr() (armi.reactor.tests.test_zones.testzone method)": [[354, "armi.reactor.tests.test_zones.TestZone.test_repr"]], "test_sortzones() (armi.reactor.tests.test_zones.testzones method)": [[354, "armi.reactor.tests.test_zones.TestZones.test_sortZones"]], "test_summary() (armi.reactor.tests.test_zones.testzones method)": [[354, "armi.reactor.tests.test_zones.TestZones.test_summary"]], "valid_types (armi.reactor.zones.zone attribute)": [[355, "armi.reactor.zones.Zone.VALID_TYPES"]], "zone (class in armi.reactor.zones)": [[355, "armi.reactor.zones.Zone"]], "zones (class in armi.reactor.zones)": [[355, "armi.reactor.zones.Zones"]], "additem() (armi.reactor.zones.zone method)": [[355, "armi.reactor.zones.Zone.addItem"]], "additems() (armi.reactor.zones.zone method)": [[355, "armi.reactor.zones.Zone.addItems"]], "addloc() (armi.reactor.zones.zone method)": [[355, "armi.reactor.zones.Zone.addLoc"]], "addlocs() (armi.reactor.zones.zone method)": [[355, "armi.reactor.zones.Zone.addLocs"]], "addzone() (armi.reactor.zones.zones method)": [[355, "armi.reactor.zones.Zones.addZone"]], "addzones() (armi.reactor.zones.zones method)": [[355, "armi.reactor.zones.Zones.addZones"]], "armi.reactor.zones": [[355, "module-armi.reactor.zones"]], "checkduplicates() (armi.reactor.zones.zones method)": [[355, "armi.reactor.zones.Zones.checkDuplicates"]], "findzoneitisin() (armi.reactor.zones.zones method)": [[355, "armi.reactor.zones.Zones.findZoneItIsIn"]], "getalllocations() (armi.reactor.zones.zones method)": [[355, "armi.reactor.zones.Zones.getAllLocations"]], "getzonelocations() (armi.reactor.zones.zones method)": [[355, "armi.reactor.zones.Zones.getZoneLocations"]], "names (armi.reactor.zones.zones property)": [[355, "armi.reactor.zones.Zones.names"]], "removeitem() (armi.reactor.zones.zone method)": [[355, "armi.reactor.zones.Zone.removeItem"]], "removeitems() (armi.reactor.zones.zone method)": [[355, "armi.reactor.zones.Zone.removeItems"]], "removeloc() (armi.reactor.zones.zone method)": [[355, "armi.reactor.zones.Zone.removeLoc"]], "removelocs() (armi.reactor.zones.zone method)": [[355, "armi.reactor.zones.Zone.removeLocs"]], "removezone() (armi.reactor.zones.zones method)": [[355, "armi.reactor.zones.Zones.removeZone"]], "removezones() (armi.reactor.zones.zones method)": [[355, "armi.reactor.zones.Zones.removeZones"]], "sortzones() (armi.reactor.zones.zones method)": [[355, "armi.reactor.zones.Zones.sortZones"]], "summary() (armi.reactor.zones.zones method)": [[355, "armi.reactor.zones.Zones.summary"]], "deduplicationfilter (class in armi.runlog)": [[356, "armi.runLog.DeduplicationFilter"]], "fmt (armi.runlog.runlogger attribute)": [[356, "armi.runLog.RunLogger.FMT"]], "nulllogger (class in armi.runlog)": [[356, "armi.runLog.NullLogger"]], "runlogger (class in armi.runlog)": [[356, "armi.runLog.RunLogger"]], "addhandler() (armi.runlog.nulllogger method)": [[356, "armi.runLog.NullLogger.addHandler"]], "allowstopduplicates() (armi.runlog.runlogger method)": [[356, "armi.runLog.RunLogger.allowStopDuplicates"]], "armi.runlog": [[356, "module-armi.runLog"]], "close() (armi.runlog.runlogger method)": [[356, "armi.runLog.RunLogger.close"]], "close() (in module armi.runlog)": [[356, "armi.runLog.close"]], "concatenatelogs() (in module armi.runlog)": [[356, "armi.runLog.concatenateLogs"]], "createlogdir() (in module armi.runlog)": [[356, "armi.runLog.createLogDir"]], "debug() (in module armi.runlog)": [[356, "armi.runLog.debug"]], "error() (in module armi.runlog)": [[356, "armi.runLog.error"]], "extra() (in module armi.runlog)": [[356, "armi.runLog.extra"]], "filter() (armi.runlog.deduplicationfilter method)": [[356, "armi.runLog.DeduplicationFilter.filter"]], "flush() (armi.runlog.runlogger method)": [[356, "armi.runLog.RunLogger.flush"]], "getduplicatesfilter() (armi.runlog.runlogger method)": [[356, "armi.runLog.RunLogger.getDuplicatesFilter"]], "getverbosity() (in module armi.runlog)": [[356, "armi.runLog.getVerbosity"]], "header() (in module armi.runlog)": [[356, "armi.runLog.header"]], "important() (in module armi.runlog)": [[356, "armi.runLog.important"]], "info() (in module armi.runlog)": [[356, "armi.runLog.info"]], "log() (armi.runlog.runlogger method)": [[356, "armi.runLog.RunLogger.log"]], "logfactory() (in module armi.runlog)": [[356, "armi.runLog.logFactory"]], "raw() (in module armi.runlog)": [[356, "armi.runLog.raw"]], "setverbosity() (armi.runlog.runlogger method)": [[356, "armi.runLog.RunLogger.setVerbosity"]], "setverbosity() (in module armi.runlog)": [[356, "armi.runLog.setVerbosity"]], "warning() (in module armi.runlog)": [[356, "armi.runLog.warning"]], "warningreport() (armi.runlog.runlogger method)": [[356, "armi.runLog.RunLogger.warningReport"]], "warningreport() (in module armi.runlog)": [[356, "armi.runLog.warningReport"]], "write() (armi.runlog.runlogger method)": [[356, "armi.runLog.RunLogger.write"]], "armi.settings": [[357, "module-armi.settings"]], "isboolsetting() (in module armi.settings)": [[357, "armi.settings.isBoolSetting"]], "promptforsettingsfile() (in module armi.settings)": [[357, "armi.settings.promptForSettingsFile"]], "recursivelyloadsettingsfiles() (in module armi.settings)": [[357, "armi.settings.recursivelyLoadSettingsFiles"]], "settings (class in armi.settings.casesettings)": [[358, "armi.settings.caseSettings.Settings"]], "armi.settings.casesettings": [[358, "module-armi.settings.caseSettings"]], "casetitle (armi.settings.casesettings.settings property)": [[358, "armi.settings.caseSettings.Settings.caseTitle"]], "defaultcasetitle (armi.settings.casesettings.settings attribute)": [[358, "armi.settings.caseSettings.Settings.defaultCaseTitle"]], "duplicate() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.duplicate"]], "environmentsettings (armi.settings.casesettings.settings property)": [[358, "armi.settings.caseSettings.Settings.environmentSettings"]], "failonload() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.failOnLoad"]], "getsetting() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.getSetting"]], "getsettingssetbyuser() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.getSettingsSetByUser"]], "initlogverbosity() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.initLogVerbosity"]], "inputdirectory (armi.settings.casesettings.settings property)": [[358, "armi.settings.caseSettings.Settings.inputDirectory"]], "items() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.items"]], "keys() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.keys"]], "loadfrominputfile() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.loadFromInputFile"]], "loadfromstring() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.loadFromString"]], "modified() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.modified"]], "registeruserplugins() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.registerUserPlugins"]], "reverttodefaults() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.revertToDefaults"]], "setmoduleverbosities() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.setModuleVerbosities"]], "updateenvironmentsettingsfrom() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.updateEnvironmentSettingsFrom"]], "values() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.values"]], "writetoyamlfile() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.writeToYamlFile"]], "writetoyamlstream() (armi.settings.casesettings.settings method)": [[358, "armi.settings.caseSettings.Settings.writeToYamlStream"]], "armi.settings.fwsettings": [[359, "module-armi.settings.fwSettings"]], "getframeworksettings() (in module armi.settings.fwsettings)": [[359, "armi.settings.fwSettings.getFrameworkSettings"]], "armi.settings.fwsettings.databasesettings": [[360, "module-armi.settings.fwSettings.databaseSettings"]], "definesettings() (in module armi.settings.fwsettings.databasesettings)": [[360, "armi.settings.fwSettings.databaseSettings.defineSettings"]], "armi.settings.fwsettings.globalsettings": [[361, "module-armi.settings.fwSettings.globalSettings"]], "definesettings() (in module armi.settings.fwsettings.globalsettings)": [[361, "armi.settings.fwSettings.globalSettings.defineSettings"]], "armi.settings.fwsettings.reportsettings": [[362, "module-armi.settings.fwSettings.reportSettings"]], "definesettings() (in module armi.settings.fwsettings.reportsettings)": [[362, "armi.settings.fwSettings.reportSettings.defineSettings"]], "tightcouplingsettingdef (class in armi.settings.fwsettings.tightcouplingsettings)": [[363, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef"]], "tightcouplingsettings (class in armi.settings.fwsettings.tightcouplingsettings)": [[363, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettings"]], "armi.settings.fwsettings.tightcouplingsettings": [[363, "module-armi.settings.fwSettings.tightCouplingSettings"]], "dump() (armi.settings.fwsettings.tightcouplingsettings.tightcouplingsettingdef method)": [[363, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef.dump"]], "serializetightcouplingsettings() (in module armi.settings.fwsettings.tightcouplingsettings)": [[363, "armi.settings.fwSettings.tightCouplingSettings.serializeTightCouplingSettings"]], "tightcouplingsettingsvalidator() (in module armi.settings.fwsettings.tightcouplingsettings)": [[363, "armi.settings.fwSettings.tightCouplingSettings.tightCouplingSettingsValidator"]], "default (class in armi.settings.setting)": [[364, "armi.settings.setting.Default"]], "flaglistsetting (class in armi.settings.setting)": [[364, "armi.settings.setting.FlagListSetting"]], "option (class in armi.settings.setting)": [[364, "armi.settings.setting.Option"]], "setting (class in armi.settings.setting)": [[364, "armi.settings.setting.Setting"]], "addoption() (armi.settings.setting.setting method)": [[364, "armi.settings.setting.Setting.addOption"]], "addoptions() (armi.settings.setting.setting method)": [[364, "armi.settings.setting.Setting.addOptions"]], "armi.settings.setting": [[364, "module-armi.settings.setting"]], "changedefault() (armi.settings.setting.setting method)": [[364, "armi.settings.setting.Setting.changeDefault"]], "containedtype (armi.settings.setting.setting property)": [[364, "armi.settings.setting.Setting.containedType"]], "default (armi.settings.setting.setting property)": [[364, "armi.settings.setting.Setting.default"]], "dump() (armi.settings.setting.flaglistsetting method)": [[364, "armi.settings.setting.FlagListSetting.dump"]], "dump() (armi.settings.setting.setting method)": [[364, "armi.settings.setting.Setting.dump"]], "getcustomattributes() (armi.settings.setting.setting method)": [[364, "armi.settings.setting.Setting.getCustomAttributes"]], "getdefaultattributes() (armi.settings.setting.setting method)": [[364, "armi.settings.setting.Setting.getDefaultAttributes"]], "isdefault() (armi.settings.setting.setting method)": [[364, "armi.settings.setting.Setting.isDefault"]], "offdefault (armi.settings.setting.setting property)": [[364, "armi.settings.setting.Setting.offDefault"]], "option (armi.settings.setting.option attribute)": [[364, "armi.settings.setting.Option.option"]], "reverttodefault() (armi.settings.setting.setting method)": [[364, "armi.settings.setting.Setting.revertToDefault"]], "schema() (armi.settings.setting.flaglistsetting static method)": [[364, "armi.settings.setting.FlagListSetting.schema"]], "setvalue() (armi.settings.setting.setting method)": [[364, "armi.settings.setting.Setting.setValue"]], "settingname (armi.settings.setting.default attribute)": [[364, "armi.settings.setting.Default.settingName"]], "settingname (armi.settings.setting.option attribute)": [[364, "armi.settings.setting.Option.settingName"]], "underlyingtype (armi.settings.setting.setting property)": [[364, "armi.settings.setting.Setting.underlyingType"]], "value (armi.settings.setting.default attribute)": [[364, "armi.settings.setting.Default.value"]], "value (armi.settings.setting.setting property)": [[364, "armi.settings.setting.Setting.value"]], "custom (armi.settings.settingsio.roots attribute)": [[365, "armi.settings.settingsIO.Roots.CUSTOM"]], "roots (class in armi.settings.settingsio)": [[365, "armi.settings.settingsIO.Roots"]], "runlogpromptcancel": [[365, "armi.settings.settingsIO.RunLogPromptCancel"]], "runlogpromptunresolvable": [[365, "armi.settings.settingsIO.RunLogPromptUnresolvable"]], "settingrenamer (class in armi.settings.settingsio)": [[365, "armi.settings.settingsIO.SettingRenamer"]], "settingsreader (class in armi.settings.settingsio)": [[365, "armi.settings.settingsIO.SettingsReader"]], "settingsreader.settingsinputformat (class in armi.settings.settingsio)": [[365, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat"]], "settingswriter (class in armi.settings.settingsio)": [[365, "armi.settings.settingsIO.SettingsWriter"]], "version (armi.settings.settingsio.roots attribute)": [[365, "armi.settings.settingsIO.Roots.VERSION"]], "yaml (armi.settings.settingsio.settingsreader.settingsinputformat attribute)": [[365, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.YAML"]], "armi.settings.settingsio": [[365, "module-armi.settings.settingsIO"]], "fromext() (armi.settings.settingsio.settingsreader.settingsinputformat class method)": [[365, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.fromExt"]], "prompt() (in module armi.settings.settingsio)": [[365, "armi.settings.settingsIO.prompt"]], "readfromfile() (armi.settings.settingsio.settingsreader method)": [[365, "armi.settings.settingsIO.SettingsReader.readFromFile"]], "readfromstream() (armi.settings.settingsio.settingsreader method)": [[365, "armi.settings.settingsIO.SettingsReader.readFromStream"]], "renamesetting() (armi.settings.settingsio.settingrenamer method)": [[365, "armi.settings.settingsIO.SettingRenamer.renameSetting"]], "writeyaml() (armi.settings.settingsio.settingswriter method)": [[365, "armi.settings.settingsIO.SettingsWriter.writeYaml"]], "armi.settings.tests": [[366, "module-armi.settings.tests"]], "dummysettingplugin1 (class in armi.settings.tests.test_settings)": [[367, "armi.settings.tests.test_settings.DummySettingPlugin1"]], "dummysettingplugin2 (class in armi.settings.tests.test_settings)": [[367, "armi.settings.tests.test_settings.DummySettingPlugin2"]], "pluginaddsoptions (class in armi.settings.tests.test_settings)": [[367, "armi.settings.tests.test_settings.PluginAddsOptions"]], "testaddingoptions (class in armi.settings.tests.test_settings)": [[367, "armi.settings.tests.test_settings.TestAddingOptions"]], "testcasesettings (class in armi.settings.tests.test_settings)": [[367, "armi.settings.tests.test_settings.TestCaseSettings"]], "testflaglistsetting (class in armi.settings.tests.test_settings)": [[367, "armi.settings.tests.test_settings.TestFlagListSetting"]], "testsettings2 (class in armi.settings.tests.test_settings)": [[367, "armi.settings.tests.test_settings.TestSettings2"]], "testsettingsutils (class in armi.settings.tests.test_settings)": [[367, "armi.settings.tests.test_settings.TestSettingsUtils"]], "testsettingsvalidationutils (class in armi.settings.tests.test_settings)": [[367, "armi.settings.tests.test_settings.TestSettingsValidationUtils"]], "armi.settings.tests.test_settings": [[367, "module-armi.settings.tests.test_settings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin1 static method)": [[367, "armi.settings.tests.test_settings.DummySettingPlugin1.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.dummysettingplugin2 static method)": [[367, "armi.settings.tests.test_settings.DummySettingPlugin2.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.pluginaddsoptions static method)": [[367, "armi.settings.tests.test_settings.PluginAddsOptions.defineSettings"]], "test_addingoptions() (armi.settings.tests.test_settings.testaddingoptions method)": [[367, "armi.settings.tests.test_settings.TestAddingOptions.test_addingOptions"]], "test_copysetting() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_copySetting"]], "test_copysettingnotdefault() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_copySettingNotDefault"]], "test_csworks() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_csWorks"]], "test_default() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_default"]], "test_empty() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_empty"]], "test_flaglistsetting() (armi.settings.tests.test_settings.testflaglistsetting method)": [[367, "armi.settings.tests.test_settings.TestFlagListSetting.test_flagListSetting"]], "test_getfailures() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_getFailures"]], "test_getsettingssetbyuser() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_getSettingsSetByUser"]], "test_invalidflaglisttypeerror() (armi.settings.tests.test_settings.testflaglistsetting method)": [[367, "armi.settings.tests.test_settings.TestFlagListSetting.test_invalidFlagListTypeError"]], "test_listcoercion() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_listCoercion"]], "test_listsmutable() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_listsMutable"]], "test_metadata() (armi.settings.tests.test_settings.testcasesettings method)": [[367, "armi.settings.tests.test_settings.TestCaseSettings.test_metaData"]], "test_modified() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_modified"]], "test_pluginsettings() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_pluginSettings"]], "test_pluginvalidatorsarediscovered() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_pluginValidatorsAreDiscovered"]], "test_prompt() (armi.settings.tests.test_settings.testsettingsutils method)": [[367, "armi.settings.tests.test_settings.TestSettingsUtils.test_prompt"]], "test_recursivescan() (armi.settings.tests.test_settings.testsettingsutils method)": [[367, "armi.settings.tests.test_settings.TestSettingsUtils.test_recursiveScan"]], "test_schemacheckstype() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_schemaChecksType"]], "test_setmoduleverbosities() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_setModuleVerbosities"]], "test_settingisokaytograb() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_settingIsOkayToGrab"]], "test_typedetection() (armi.settings.tests.test_settings.testsettings2 method)": [[367, "armi.settings.tests.test_settings.TestSettings2.test_typeDetection"]], "test_updateenvironmentsettingsfrom() (armi.settings.tests.test_settings.testcasesettings method)": [[367, "armi.settings.tests.test_settings.TestCaseSettings.test_updateEnvironmentSettingsFrom"]], "test_validateversion() (armi.settings.tests.test_settings.testsettingsvalidationutils method)": [[367, "armi.settings.tests.test_settings.TestSettingsValidationUtils.test_validateVersion"]], "mockentrypoint (class in armi.settings.tests.test_settingsio)": [[368, "armi.settings.tests.test_settingsIO.MockEntryPoint"]], "settingargstests (class in armi.settings.tests.test_settingsio)": [[368, "armi.settings.tests.test_settingsIO.SettingArgsTests"]], "settingsfailuretests (class in armi.settings.tests.test_settingsio)": [[368, "armi.settings.tests.test_settingsIO.SettingsFailureTests"]], "settingsreadertests (class in armi.settings.tests.test_settingsio)": [[368, "armi.settings.tests.test_settingsIO.SettingsReaderTests"]], "settingsrenametests (class in armi.settings.tests.test_settingsio)": [[368, "armi.settings.tests.test_settingsIO.SettingsRenameTests"]], "settingswritertests (class in armi.settings.tests.test_settingsio)": [[368, "armi.settings.tests.test_settingsIO.SettingsWriterTests"]], "armi.settings.tests.test_settingsio": [[368, "module-armi.settings.tests.test_settingsIO"]], "name (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[368, "armi.settings.tests.test_settingsIO.MockEntryPoint.name"]], "settingsargument (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[368, "armi.settings.tests.test_settingsIO.MockEntryPoint.settingsArgument"]], "testsettings (armi.settings.tests.test_settingsio.settingsrenametests attribute)": [[368, "armi.settings.tests.test_settingsIO.SettingsRenameTests.testSettings"]], "test_basicsettingsreader() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_basicSettingsReader"]], "test_cannotloadsettingsafterparsingcommandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[368, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_cannotLoadSettingsAfterParsingCommandLineSetting"]], "test_collidingrenames() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_collidingRenames"]], "test_commandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[368, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_commandLineSetting"]], "test_errorsettingswriter() (armi.settings.tests.test_settingsio.settingswritertests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_errorSettingsWriter"]], "test_invalidfile() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_invalidFile"]], "test_loadfromyamlfailsonbadnames() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_loadFromYamlFailsOnBadNames"]], "test_readfromfile() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_readFromFile"]], "test_rename() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_rename"]], "test_settingsobjsetting() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_settingsObjSetting"]], "test_writefull() (armi.settings.tests.test_settingsio.settingswritertests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeFull"]], "test_writemedium() (armi.settings.tests.test_settingsio.settingswritertests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeMedium"]], "test_writeshort() (armi.settings.tests.test_settingsio.settingswritertests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeShort"]], "test_writeyaml() (armi.settings.tests.test_settingsio.settingswritertests method)": [[368, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeYaml"]], "armitesthelper (class in armi.tests)": [[369, "armi.tests.ArmiTestHelper"]], "fixture (class in armi.tests)": [[369, "armi.tests.Fixture"]], "armi.tests": [[369, "module-armi.tests"]], "comparefileslinebyline() (armi.tests.armitesthelper method)": [[369, "armi.tests.ArmiTestHelper.compareFilesLineByLine"]], "comparelines() (armi.tests.armitesthelper static method)": [[369, "armi.tests.ArmiTestHelper.compareLines"]], "fixture() (in module armi.tests)": [[369, "armi.tests.fixture"]], "getemptycartesianreactor() (in module armi.tests)": [[369, "armi.tests.getEmptyCartesianReactor"]], "getemptyhexreactor() (in module armi.tests)": [[369, "armi.tests.getEmptyHexReactor"]], "rebaselinetextcomparisons() (in module armi.tests)": [[369, "armi.tests.rebaselineTextComparisons"]], "requires_fixture() (in module armi.tests)": [[369, "armi.tests.requires_fixture"]], "bufferlog (class in armi.tests.mockrunlogs)": [[370, "armi.tests.mockRunLogs.BufferLog"]], "logcounter (class in armi.tests.mockrunlogs)": [[370, "armi.tests.mockRunLogs.LogCounter"]], "armi.tests.mockrunlogs": [[370, "module-armi.tests.mockRunLogs"]], "clearsinglewarnings() (armi.tests.mockrunlogs.bufferlog method)": [[370, "armi.tests.mockRunLogs.BufferLog.clearSingleWarnings"]], "emptystdout() (armi.tests.mockrunlogs.bufferlog method)": [[370, "armi.tests.mockRunLogs.BufferLog.emptyStdout"]], "getstderrvalue() (armi.tests.mockrunlogs.bufferlog method)": [[370, "armi.tests.mockRunLogs.BufferLog.getStderrValue"]], "getstdout() (armi.tests.mockrunlogs.bufferlog method)": [[370, "armi.tests.mockRunLogs.BufferLog.getStdout"]], "log() (armi.tests.mockrunlogs.bufferlog method)": [[370, "armi.tests.mockRunLogs.BufferLog.log"]], "log() (armi.tests.mockrunlogs.logcounter method)": [[370, "armi.tests.mockRunLogs.LogCounter.log"]], "equilibriumshuffler (class in armi.tests.refsmallreactorshufflelogic)": [[371, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler"]], "armi.tests.refsmallreactorshufflelogic": [[371, "module-armi.tests.refSmallReactorShuffleLogic"]], "chooseswaps() (armi.tests.refsmallreactorshufflelogic.equilibriumshuffler method)": [[371, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler.chooseSwaps"]], "getfactorlist() (in module armi.tests.refsmallreactorshufflelogic)": [[371, "armi.tests.refSmallReactorShuffleLogic.getFactorList"]], "testapps (class in armi.tests.test_apps)": [[372, "armi.tests.test_apps.TestApps"]], "testarmihighlevel (class in armi.tests.test_apps)": [[372, "armi.tests.test_apps.TestArmiHighLevel"]], "testplugin1 (class in armi.tests.test_apps)": [[372, "armi.tests.test_apps.TestPlugin1"]], "testplugin2 (class in armi.tests.test_apps)": [[372, "armi.tests.test_apps.TestPlugin2"]], "testplugin3 (class in armi.tests.test_apps)": [[372, "armi.tests.test_apps.TestPlugin3"]], "testplugin4 (class in armi.tests.test_apps)": [[372, "armi.tests.test_apps.TestPlugin4"]], "armi.tests.test_apps": [[372, "module-armi.tests.test_apps"]], "defineparameterrenames() (armi.tests.test_apps.testplugin1 static method)": [[372, "armi.tests.test_apps.TestPlugin1.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin2 static method)": [[372, "armi.tests.test_apps.TestPlugin2.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin3 static method)": [[372, "armi.tests.test_apps.TestPlugin3.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin4 static method)": [[372, "armi.tests.test_apps.TestPlugin4.defineParameterRenames"]], "test_disablefutureconfigures() (armi.tests.test_apps.testapps method)": [[372, "armi.tests.test_apps.TestApps.test_disableFutureConfigures"]], "test_getdefaultpluginmanager() (armi.tests.test_apps.testarmihighlevel method)": [[372, "armi.tests.test_apps.TestArmiHighLevel.test_getDefaultPluginManager"]], "test_getparamrenames() (armi.tests.test_apps.testapps method)": [[372, "armi.tests.test_apps.TestApps.test_getParamRenames"]], "test_getparamrenamesinvalids() (armi.tests.test_apps.testapps method)": [[372, "armi.tests.test_apps.TestApps.test_getParamRenamesInvalids"]], "test_getsettings() (armi.tests.test_apps.testapps method)": [[372, "armi.tests.test_apps.TestApps.test_getSettings"]], "test_isstablereleaseversion() (armi.tests.test_apps.testapps method)": [[372, "armi.tests.test_apps.TestApps.test_isStableReleaseVersion"]], "test_main() (armi.tests.test_apps.testarmihighlevel method)": [[372, "armi.tests.test_apps.TestArmiHighLevel.test_main"]], "test_overconfigured() (armi.tests.test_apps.testarmihighlevel method)": [[372, "armi.tests.test_apps.TestArmiHighLevel.test_overConfigured"]], "test_registerpluginflags() (armi.tests.test_apps.testapps method)": [[372, "armi.tests.test_apps.TestApps.test_registerPluginFlags"]], "test_splashtext() (armi.tests.test_apps.testapps method)": [[372, "armi.tests.test_apps.TestApps.test_splashText"]], "test_splashtextdifferentapp() (armi.tests.test_apps.testapps method)": [[372, "armi.tests.test_apps.TestApps.test_splashTextDifferentApp"]], "test_version() (armi.tests.test_apps.testapps method)": [[372, "armi.tests.test_apps.TestApps.test_version"]], "testarmitesthelper (class in armi.tests.test_armitesthelper)": [[373, "armi.tests.test_armiTestHelper.TestArmiTestHelper"]], "armi.tests.test_armitesthelper": [[373, "module-armi.tests.test_armiTestHelper"]], "test_comparefilesfail() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[373, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesFail"]], "test_comparefilessucceedfalsenegative() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[373, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucceedFalseNegative"]], "test_comparefilessucess() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[373, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucess"]], "cartesianreactortests (class in armi.tests.test_cartesian)": [[374, "armi.tests.test_cartesian.CartesianReactorTests"]], "armi.tests.test_cartesian": [[374, "module-armi.tests.test_cartesian"]], "test_custom() (armi.tests.test_cartesian.cartesianreactortests method)": [[374, "armi.tests.test_cartesian.CartesianReactorTests.test_custom"]], "dummyinterface (class in armi.tests.test_interfaces)": [[375, "armi.tests.test_interfaces.DummyInterface"]], "testcodeinterface (class in armi.tests.test_interfaces)": [[375, "armi.tests.test_interfaces.TestCodeInterface"]], "testtextprocessor (class in armi.tests.test_interfaces)": [[375, "armi.tests.test_interfaces.TestTextProcessor"]], "testtightcoupler (class in armi.tests.test_interfaces)": [[375, "armi.tests.test_interfaces.TestTightCoupler"]], "armi.tests.test_interfaces": [[375, "module-armi.tests.test_interfaces"]], "function (armi.tests.test_interfaces.dummyinterface attribute)": [[375, "armi.tests.test_interfaces.DummyInterface.function"]], "name (armi.tests.test_interfaces.dummyinterface attribute)": [[375, "armi.tests.test_interfaces.DummyInterface.name"]], "test_coupleractive() (armi.tests.test_interfaces.testtightcoupler method)": [[375, "armi.tests.test_interfaces.TestTightCoupler.test_couplerActive"]], "test_distributable() (armi.tests.test_interfaces.testcodeinterface method)": [[375, "armi.tests.test_interfaces.TestCodeInterface.test_distributable"]], "test_duplicate() (armi.tests.test_interfaces.testcodeinterface method)": [[375, "armi.tests.test_interfaces.TestCodeInterface.test_duplicate"]], "test_enabled() (armi.tests.test_interfaces.testcodeinterface method)": [[375, "armi.tests.test_interfaces.TestCodeInterface.test_enabled"]], "test_fsearch() (armi.tests.test_interfaces.testtextprocessor method)": [[375, "armi.tests.test_interfaces.TestTextProcessor.test_fsearch"]], "test_fsearch_text() (armi.tests.test_interfaces.testtextprocessor method)": [[375, "armi.tests.test_interfaces.TestTextProcessor.test_fsearch_text"]], "test_getlistdimension() (armi.tests.test_interfaces.testtightcoupler method)": [[375, "armi.tests.test_interfaces.TestTightCoupler.test_getListDimension"]], "test_isconverged() (armi.tests.test_interfaces.testtightcoupler method)": [[375, "armi.tests.test_interfaces.TestTightCoupler.test_isConverged"]], "test_isconvergedruntimeerror() (armi.tests.test_interfaces.testtightcoupler method)": [[375, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedRuntimeError"]], "test_isconvergedvalueerror() (armi.tests.test_interfaces.testtightcoupler method)": [[375, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedValueError"]], "test_isrequesteddetailpoint() (armi.tests.test_interfaces.testcodeinterface method)": [[375, "armi.tests.test_interfaces.TestCodeInterface.test_isRequestedDetailPoint"]], "test_namecontains() (armi.tests.test_interfaces.testcodeinterface method)": [[375, "armi.tests.test_interfaces.TestCodeInterface.test_nameContains"]], "test_predistributestate() (armi.tests.test_interfaces.testcodeinterface method)": [[375, "armi.tests.test_interfaces.TestCodeInterface.test_preDistributeState"]], "test_storepreviousiterationvalue() (armi.tests.test_interfaces.testtightcoupler method)": [[375, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValue"]], "test_storepreviousiterationvalueexception() (armi.tests.test_interfaces.testtightcoupler method)": [[375, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValueException"]], "c5g7reactortests (class in armi.tests.test_lwrinputs)": [[376, "armi.tests.test_lwrInputs.C5G7ReactorTests"]], "armi.tests.test_lwrinputs": [[376, "module-armi.tests.test_lwrInputs"]], "test_loadc5g7() (armi.tests.test_lwrinputs.c5g7reactortests method)": [[376, "armi.tests.test_lwrInputs.C5G7ReactorTests.test_loadC5G7"]], "test_runandloadc5g7() (armi.tests.test_lwrinputs.c5g7reactortests method)": [[376, "armi.tests.test_lwrInputs.C5G7ReactorTests.test_runAndLoadC5G7"]], "mpiitertests (class in armi.tests.test_mpiactions)": [[377, "armi.tests.test_mpiActions.MpiIterTests"]], "queueactionstests (class in armi.tests.test_mpiactions)": [[377, "armi.tests.test_mpiActions.QueueActionsTests"]], "armi.tests.test_mpiactions": [[377, "module-armi.tests.test_mpiActions"]], "passer() (in module armi.tests.test_mpiactions)": [[377, "armi.tests.test_mpiActions.passer"]], "test_diagnosepickleerrortestreactor() (armi.tests.test_mpiactions.mpiitertests method)": [[377, "armi.tests.test_mpiActions.MpiIterTests.test_diagnosePickleErrorTestReactor"]], "test_disableforexclusivetasks() (armi.tests.test_mpiactions.queueactionstests method)": [[377, "armi.tests.test_mpiActions.QueueActionsTests.test_disableForExclusiveTasks"]], "test_excessprocesses() (armi.tests.test_mpiactions.mpiitertests method)": [[377, "armi.tests.test_mpiActions.MpiIterTests.test_excessProcesses"]], "test_makequeue() (armi.tests.test_mpiactions.queueactionstests method)": [[377, "armi.tests.test_mpiActions.QueueActionsTests.test_makeQueue"]], "test_mpiiter() (armi.tests.test_mpiactions.mpiitertests method)": [[377, "armi.tests.test_mpiActions.MpiIterTests.test_mpiIter"]], "test_parallel() (armi.tests.test_mpiactions.mpiitertests method)": [[377, "armi.tests.test_mpiActions.MpiIterTests.test_parallel"]], "test_perfectbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[377, "armi.tests.test_mpiActions.MpiIterTests.test_perfectBalancing"]], "test_runactionsdistributestateaction() (armi.tests.test_mpiactions.mpiitertests method)": [[377, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributeStateAction"]], "test_runactionsdistributionaction() (armi.tests.test_mpiactions.mpiitertests method)": [[377, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributionAction"]], "test_serialgather() (armi.tests.test_mpiactions.mpiitertests method)": [[377, "armi.tests.test_mpiActions.MpiIterTests.test_serialGather"]], "test_typicalbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[377, "armi.tests.test_mpiActions.MpiIterTests.test_typicalBalancing"]], "bcastaction1 (class in armi.tests.test_mpifeatures)": [[378, "armi.tests.test_mpiFeatures.BcastAction1"]], "bcastaction2 (class in armi.tests.test_mpifeatures)": [[378, "armi.tests.test_mpiFeatures.BcastAction2"]], "failinginterface1 (class in armi.tests.test_mpifeatures)": [[378, "armi.tests.test_mpiFeatures.FailingInterface1"]], "failinginterface2 (class in armi.tests.test_mpifeatures)": [[378, "armi.tests.test_mpiFeatures.FailingInterface2"]], "failinginterface3 (class in armi.tests.test_mpifeatures)": [[378, "armi.tests.test_mpiFeatures.FailingInterface3"]], "mpidistributestatetests (class in armi.tests.test_mpifeatures)": [[378, "armi.tests.test_mpiFeatures.MpiDistributeStateTests"]], "mpioperatortests (class in armi.tests.test_mpifeatures)": [[378, "armi.tests.test_mpiFeatures.MpiOperatorTests"]], "mpipathtoolstests (class in armi.tests.test_mpifeatures)": [[378, "armi.tests.test_mpiFeatures.MpiPathToolsTests"]], "armi.tests.test_mpifeatures": [[378, "module-armi.tests.test_mpiFeatures"]], "fail() (armi.tests.test_mpifeatures.failinginterface3 method)": [[378, "armi.tests.test_mpiFeatures.FailingInterface3.fail"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface1 method)": [[378, "armi.tests.test_mpiFeatures.FailingInterface1.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface2 method)": [[378, "armi.tests.test_mpiFeatures.FailingInterface2.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface3 method)": [[378, "armi.tests.test_mpiFeatures.FailingInterface3.interactEveryNode"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction1 method)": [[378, "armi.tests.test_mpiFeatures.BcastAction1.invokeHook"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction2 method)": [[378, "armi.tests.test_mpiFeatures.BcastAction2.invokeHook"]], "name (armi.tests.test_mpifeatures.failinginterface1 attribute)": [[378, "armi.tests.test_mpiFeatures.FailingInterface1.name"]], "name (armi.tests.test_mpifeatures.failinginterface2 attribute)": [[378, "armi.tests.test_mpiFeatures.FailingInterface2.name"]], "name (armi.tests.test_mpifeatures.failinginterface3 attribute)": [[378, "armi.tests.test_mpiFeatures.FailingInterface3.name"]], "test_basicoperatormpi() (armi.tests.test_mpifeatures.mpioperatortests method)": [[378, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_basicOperatorMPI"]], "test_cleanpathmpi() (armi.tests.test_mpifeatures.mpipathtoolstests method)": [[378, "armi.tests.test_mpiFeatures.MpiPathToolsTests.test_cleanPathMpi"]], "test_compileresults() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[378, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_compileResults"]], "test_distributeinterfaces() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[378, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeInterfaces"]], "test_distributereactor() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[378, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeReactor"]], "test_distributesettings() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[378, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeSettings"]], "test_distributestate() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[378, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeState"]], "test_primarycritical() (armi.tests.test_mpifeatures.mpioperatortests method)": [[378, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryCritical"]], "test_primaryexception() (armi.tests.test_mpifeatures.mpioperatortests method)": [[378, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryException"]], "workeroperate() (armi.tests.test_mpifeatures.failinginterface3 method)": [[378, "armi.tests.test_mpiFeatures.FailingInterface3.workerOperate"]], "mocksyncpc (class in armi.tests.test_mpiparameters)": [[379, "armi.tests.test_mpiParameters.MockSyncPC"]], "synchronizationtests (class in armi.tests.test_mpiparameters)": [[379, "armi.tests.test_mpiParameters.SynchronizationTests"]], "armi.tests.test_mpiparameters": [[379, "module-armi.tests.test_mpiParameters"]], "makecomp() (in module armi.tests.test_mpiparameters)": [[379, "armi.tests.test_mpiParameters.makeComp"]], "pdefs (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[379, "armi.tests.test_mpiParameters.MockSyncPC.pDefs"]], "pb (armi.tests.test_mpiparameters.mocksyncpc attribute)": [[379, "armi.tests.test_mpiParameters.MockSyncPC.pb"]], "test_conflictsmaintainwithstateretainer() (armi.tests.test_mpiparameters.synchronizationtests method)": [[379, "armi.tests.test_mpiParameters.SynchronizationTests.test_conflictsMaintainWithStateRetainer"]], "test_noconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[379, "armi.tests.test_mpiParameters.SynchronizationTests.test_noConflicts"]], "test_withconflicts() (armi.tests.test_mpiparameters.synchronizationtests method)": [[379, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflicts"]], "test_withconflictsbutsamevalue() (armi.tests.test_mpiparameters.synchronizationtests method)": [[379, "armi.tests.test_mpiParameters.SynchronizationTests.test_withConflictsButSameValue"]], "notebooktests (class in armi.tests.test_notebooks)": [[380, "armi.tests.test_notebooks.NotebookTests"]], "armi.tests.test_notebooks": [[380, "module-armi.tests.test_notebooks"]], "runnotebook() (in module armi.tests.test_notebooks)": [[380, "armi.tests.test_notebooks.runNotebook"]], "test_rundatamodel() (armi.tests.test_notebooks.notebooktests method)": [[380, "armi.tests.test_notebooks.NotebookTests.test_runDataModel"]], "test_runparamsweep() (armi.tests.test_notebooks.notebooktests method)": [[380, "armi.tests.test_notebooks.NotebookTests.test_runParamSweep"]], "pluginflags1 (class in armi.tests.test_plugins)": [[381, "armi.tests.test_plugins.PluginFlags1"]], "testplugin (class in armi.tests.test_plugins)": [[381, "armi.tests.test_plugins.TestPlugin"]], "testpluginbasics (class in armi.tests.test_plugins)": [[381, "armi.tests.test_plugins.TestPluginBasics"]], "testpluginregistration (class in armi.tests.test_plugins)": [[381, "armi.tests.test_plugins.TestPluginRegistration"]], "armi.tests.test_plugins": [[381, "module-armi.tests.test_plugins"]], "defineflags() (armi.tests.test_plugins.pluginflags1 static method)": [[381, "armi.tests.test_plugins.PluginFlags1.defineFlags"]], "plugin (armi.tests.test_plugins.testplugin attribute)": [[381, "armi.tests.test_plugins.TestPlugin.plugin"]], "test_defineblueprintssections() (armi.tests.test_plugins.testplugin method)": [[381, "armi.tests.test_plugins.TestPlugin.test_defineBlueprintsSections"]], "test_defineflags() (armi.tests.test_plugins.testpluginregistration method)": [[381, "armi.tests.test_plugins.TestPluginRegistration.test_defineFlags"]], "test_defineparameters() (armi.tests.test_plugins.testpluginbasics method)": [[381, "armi.tests.test_plugins.TestPluginBasics.test_defineParameters"]], "test_exposeinterfaces() (armi.tests.test_plugins.testplugin method)": [[381, "armi.tests.test_plugins.TestPlugin.test_exposeInterfaces"]], "test_exposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[381, "armi.tests.test_plugins.TestPluginBasics.test_exposeInterfaces"]], "test_pluginsexposeinterfaces() (armi.tests.test_plugins.testpluginbasics method)": [[381, "armi.tests.test_plugins.TestPluginBasics.test_pluginsExposeInterfaces"]], "testrunlog (class in armi.tests.test_runlog)": [[382, "armi.tests.test_runLog.TestRunLog"]], "testrunlogger (class in armi.tests.test_runlog)": [[382, "armi.tests.test_runLog.TestRunLogger"]], "armi.tests.test_runlog": [[382, "module-armi.tests.test_runLog"]], "test_allowstopduplicates() (armi.tests.test_runlog.testrunlogger method)": [[382, "armi.tests.test_runLog.TestRunLogger.test_allowStopDuplicates"]], "test_callingstartlogmultipletimes() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_callingStartLogMultipleTimes"]], "test_closelogging() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_closeLogging"]], "test_concatenatelogs() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_concatenateLogs"]], "test_createlogdir() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_createLogDir"]], "test_getduplicatesfilter() (armi.tests.test_runlog.testrunlogger method)": [[382, "armi.tests.test_runLog.TestRunLogger.test_getDuplicatesFilter"]], "test_getwhitespace() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_getWhiteSpace"]], "test_invalidsetverbositybystring() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_invalidSetVerbosityByString"]], "test_parentrunlogging() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_parentRunLogging"]], "test_setverbosity() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_setVerbosity"]], "test_setverbositybeforestartlog() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_setVerbosityBeforeStartLog"]], "test_setverbosityfrominteger() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromInteger"]], "test_setverbosityfromstring() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromString"]], "test_verbosityoutofrange() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_verbosityOutOfRange"]], "test_warningreport() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_warningReport"]], "test_warningreportinvalid() (armi.tests.test_runlog.testrunlog method)": [[382, "armi.tests.test_runLog.TestRunLog.test_warningReportInvalid"]], "test_write() (armi.tests.test_runlog.testrunlogger method)": [[382, "armi.tests.test_runLog.TestRunLogger.test_write"]], "testcomparefiles (class in armi.tests.test_tests)": [[383, "armi.tests.test_tests.TestCompareFiles"]], "armi.tests.test_tests": [[383, "module-armi.tests.test_tests"]], "test_comparefileline() (armi.tests.test_tests.testcomparefiles method)": [[383, "armi.tests.test_tests.TestCompareFiles.test_compareFileLine"]], "testuserplugins (class in armi.tests.test_user_plugins)": [[384, "armi.tests.test_user_plugins.TestUserPlugins"]], "upinterface (class in armi.tests.test_user_plugins)": [[384, "armi.tests.test_user_plugins.UpInterface"]], "userpluginbaddefineparameterrenames (class in armi.tests.test_user_plugins)": [[384, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames"]], "userpluginbaddefinessettings (class in armi.tests.test_user_plugins)": [[384, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings"]], "userpluginflags (class in armi.tests.test_user_plugins)": [[384, "armi.tests.test_user_plugins.UserPluginFlags"]], "userpluginflags2 (class in armi.tests.test_user_plugins)": [[384, "armi.tests.test_user_plugins.UserPluginFlags2"]], "userpluginflags3 (class in armi.tests.test_user_plugins)": [[384, "armi.tests.test_user_plugins.UserPluginFlags3"]], "userpluginonprocesscoreloading (class in armi.tests.test_user_plugins)": [[384, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading"]], "userpluginwithinterface (class in armi.tests.test_user_plugins)": [[384, "armi.tests.test_user_plugins.UserPluginWithInterface"]], "armi.tests.test_user_plugins": [[384, "module-armi.tests.test_user_plugins"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags static method)": [[384, "armi.tests.test_user_plugins.UserPluginFlags.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags2 static method)": [[384, "armi.tests.test_user_plugins.UserPluginFlags2.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags3 static method)": [[384, "armi.tests.test_user_plugins.UserPluginFlags3.defineFlags"]], "defineparameterrenames() (armi.tests.test_user_plugins.userpluginbaddefineparameterrenames static method)": [[384, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames.defineParameterRenames"]], "definesettings() (armi.tests.test_user_plugins.userpluginbaddefinessettings static method)": [[384, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings.defineSettings"]], "exposeinterfaces() (armi.tests.test_user_plugins.userpluginwithinterface static method)": [[384, "armi.tests.test_user_plugins.UserPluginWithInterface.exposeInterfaces"]], "interacteverynode() (armi.tests.test_user_plugins.upinterface method)": [[384, "armi.tests.test_user_plugins.UpInterface.interactEveryNode"]], "name (armi.tests.test_user_plugins.upinterface attribute)": [[384, "armi.tests.test_user_plugins.UpInterface.name"]], "onprocesscoreloading() (armi.tests.test_user_plugins.userpluginonprocesscoreloading static method)": [[384, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading.onProcessCoreLoading"]], "test_registerrepeateduserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[384, "armi.tests.test_user_plugins.TestUserPlugins.test_registerRepeatedUserPlugins"]], "test_registeruserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[384, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPlugins"]], "test_registeruserpluginsabspath() (armi.tests.test_user_plugins.testuserplugins method)": [[384, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsAbsPath"]], "test_registeruserpluginsfromsettings() (armi.tests.test_user_plugins.testuserplugins method)": [[384, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsFromSettings"]], "test_userpluginonprocesscoreloading() (armi.tests.test_user_plugins.testuserplugins method)": [[384, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginOnProcessCoreLoading"]], "test_userpluginwithinterfaces() (armi.tests.test_user_plugins.testuserplugins method)": [[384, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginWithInterfaces"]], "test_userpluginsflags() (armi.tests.test_user_plugins.testuserplugins method)": [[384, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginsFlags"]], "test_validateuserpluginlimitations() (armi.tests.test_user_plugins.testuserplugins method)": [[384, "armi.tests.test_user_plugins.TestUserPlugins.test_validateUserPluginLimitations"]], "mergeabledict (class in armi.utils)": [[385, "armi.utils.MergeableDict"]], "mypickler (class in armi.utils)": [[385, "armi.utils.MyPickler"]], "armi.utils": [[385, "module-armi.utils"]], "capstrlen() (in module armi.utils)": [[385, "armi.utils.capStrLen"]], "classesinhierarchy() (in module armi.utils)": [[385, "armi.utils.classesInHierarchy"]], "copywithoutblocking() (in module armi.utils)": [[385, "armi.utils.copyWithoutBlocking"]], "createformattedstrwithdelimiter() (in module armi.utils)": [[385, "armi.utils.createFormattedStrWithDelimiter"]], "dotestpickleonallcontents2() (in module armi.utils)": [[385, "armi.utils.doTestPickleOnAllContents2"]], "getavailabilityfactors() (in module armi.utils)": [[385, "armi.utils.getAvailabilityFactors"]], "getburnsteps() (in module armi.utils)": [[385, "armi.utils.getBurnSteps"]], "getcumulativenodenum() (in module armi.utils)": [[385, "armi.utils.getCumulativeNodeNum"]], "getcyclelengths() (in module armi.utils)": [[385, "armi.utils.getCycleLengths"]], "getcyclenames() (in module armi.utils)": [[385, "armi.utils.getCycleNames"]], "getcyclenodefromcumulativenode() (in module armi.utils)": [[385, "armi.utils.getCycleNodeFromCumulativeNode"]], "getcyclenodefromcumulativestep() (in module armi.utils)": [[385, "armi.utils.getCycleNodeFromCumulativeStep"]], "getfilesha1hash() (in module armi.utils)": [[385, "armi.utils.getFileSHA1Hash"]], "getmaxburnsteps() (in module armi.utils)": [[385, "armi.utils.getMaxBurnSteps"]], "getnodespercycle() (in module armi.utils)": [[385, "armi.utils.getNodesPerCycle"]], "getpowerfractions() (in module armi.utils)": [[385, "armi.utils.getPowerFractions"]], "getprevioustimenode() (in module armi.utils)": [[385, "armi.utils.getPreviousTimeNode"]], "getsteplengths() (in module armi.utils)": [[385, "armi.utils.getStepLengths"]], "hasburnup() (in module armi.utils)": [[385, "armi.utils.hasBurnup"]], "list2str() (in module armi.utils)": [[385, "armi.utils.list2str"]], "merge() (armi.utils.mergeabledict method)": [[385, "armi.utils.MergeableDict.merge"]], "plotmatrix() (in module armi.utils)": [[385, "armi.utils.plotMatrix"]], "prependtolist() (in module armi.utils)": [[385, "armi.utils.prependToList"]], "safecopy() (in module armi.utils)": [[385, "armi.utils.safeCopy"]], "save() (armi.utils.mypickler method)": [[385, "armi.utils.MyPickler.save"]], "slantsplit() (in module armi.utils)": [[385, "armi.utils.slantSplit"]], "trypickleonallcontents() (in module armi.utils)": [[385, "armi.utils.tryPickleOnAllContents"]], "trypickleonallcontents3() (in module armi.utils)": [[385, "armi.utils.tryPickleOnAllContents3"]], "username() (in module armi.utils)": [[385, "armi.utils.userName"]], "asciimap (class in armi.utils.asciimaps)": [[386, "armi.utils.asciimaps.AsciiMap"]], "asciimapcartesian (class in armi.utils.asciimaps)": [[386, "armi.utils.asciimaps.AsciiMapCartesian"]], "asciimaphexfullflatsup (class in armi.utils.asciimaps)": [[386, "armi.utils.asciimaps.AsciiMapHexFullFlatsUp"]], "asciimaphexfulltipsup (class in armi.utils.asciimaps)": [[386, "armi.utils.asciimaps.AsciiMapHexFullTipsUp"]], "asciimaphexthirdflatsup (class in armi.utils.asciimaps)": [[386, "armi.utils.asciimaps.AsciiMapHexThirdFlatsUp"]], "armi.utils.asciimaps": [[386, "module-armi.utils.asciimaps"]], "asciilabelbyindices (armi.utils.asciimaps.asciimap attribute)": [[386, "armi.utils.asciimaps.AsciiMap.asciiLabelByIndices"]], "asciilines (armi.utils.asciimaps.asciimap attribute)": [[386, "armi.utils.asciimaps.AsciiMap.asciiLines"]], "asciimapfromgeomanddomain() (in module armi.utils.asciimaps)": [[386, "armi.utils.asciimaps.asciiMapFromGeomAndDomain"]], "asciioffsets (armi.utils.asciimaps.asciimap attribute)": [[386, "armi.utils.asciimaps.AsciiMap.asciiOffsets"]], "fromreactor() (armi.utils.asciimaps.asciimap static method)": [[386, "armi.utils.asciimaps.AsciiMap.fromReactor"]], "gridcontentstoascii() (armi.utils.asciimaps.asciimap method)": [[386, "armi.utils.asciimaps.AsciiMap.gridContentsToAscii"]], "items() (armi.utils.asciimaps.asciimap method)": [[386, "armi.utils.asciimaps.AsciiMap.items"]], "keys() (armi.utils.asciimaps.asciimap method)": [[386, "armi.utils.asciimaps.AsciiMap.keys"]], "readascii() (armi.utils.asciimaps.asciimap method)": [[386, "armi.utils.asciimaps.AsciiMap.readAscii"]], "writeascii() (armi.utils.asciimaps.asciimap method)": [[386, "armi.utils.asciimaps.AsciiMap.writeAscii"]], "mastertimer (class in armi.utils.codetiming)": [[387, "armi.utils.codeTiming.MasterTimer"]], "armi.utils.codetiming": [[387, "module-armi.utils.codeTiming"]], "endtimer() (armi.utils.codetiming.mastertimer static method)": [[387, "armi.utils.codeTiming.MasterTimer.endTimer"]], "getactivetimers() (armi.utils.codetiming.mastertimer static method)": [[387, "armi.utils.codeTiming.MasterTimer.getActiveTimers"]], "getmastertimer() (armi.utils.codetiming.mastertimer static method)": [[387, "armi.utils.codeTiming.MasterTimer.getMasterTimer"]], "getmastertimer() (in module armi.utils.codetiming)": [[387, "armi.utils.codeTiming.getMasterTimer"]], "gettimer() (armi.utils.codetiming.mastertimer static method)": [[387, "armi.utils.codeTiming.MasterTimer.getTimer"]], "report() (armi.utils.codetiming.mastertimer static method)": [[387, "armi.utils.codeTiming.MasterTimer.report"]], "startall() (armi.utils.codetiming.mastertimer static method)": [[387, "armi.utils.codeTiming.MasterTimer.startAll"]], "starttimer() (armi.utils.codetiming.mastertimer static method)": [[387, "armi.utils.codeTiming.MasterTimer.startTimer"]], "stopall() (armi.utils.codetiming.mastertimer static method)": [[387, "armi.utils.codeTiming.MasterTimer.stopAll"]], "time() (armi.utils.codetiming.mastertimer static method)": [[387, "armi.utils.codeTiming.MasterTimer.time"]], "timed() (in module armi.utils.codetiming)": [[387, "armi.utils.codeTiming.timed"]], "timeline() (armi.utils.codetiming.mastertimer static method)": [[387, "armi.utils.codeTiming.MasterTimer.timeline"]], "inputerror": [[388, "armi.utils.customExceptions.InputError"]], "invalidsettingsfileerror": [[388, "armi.utils.customExceptions.InvalidSettingsFileError"]], "invalidsettingsstopprocess": [[388, "armi.utils.customExceptions.InvalidSettingsStopProcess"]], "nonexistentsetting": [[388, "armi.utils.customExceptions.NonexistentSetting"]], "nonexistentsettingsfileerror": [[388, "armi.utils.customExceptions.NonexistentSettingsFileError"]], "settingexception": [[388, "armi.utils.customExceptions.SettingException"]], "armi.utils.customexceptions": [[388, "module-armi.utils.customExceptions"]], "important() (in module armi.utils.customexceptions)": [[388, "armi.utils.customExceptions.important"]], "info() (in module armi.utils.customexceptions)": [[388, "armi.utils.customExceptions.info"]], "warn() (in module armi.utils.customexceptions)": [[388, "armi.utils.customExceptions.warn"]], "warn_when_root() (in module armi.utils.customexceptions)": [[388, "armi.utils.customExceptions.warn_when_root"]], "applyisotopicsmix() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.applyIsotopicsMix"]], "armi.utils.densitytools": [[389, "module-armi.utils.densityTools"]], "calculatemassdensity() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.calculateMassDensity"]], "calculatenumberdensity() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.calculateNumberDensity"]], "expandelementalmassfracstonuclides() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.expandElementalMassFracsToNuclides"]], "expandelementalnuclidemassfracs() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.expandElementalNuclideMassFracs"]], "filternuclidelist() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.filterNuclideList"]], "formatmaterialcard() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.formatMaterialCard"]], "getchemicals() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.getChemicals"]], "getmassfractions() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.getMassFractions"]], "getmassingrams() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.getMassInGrams"]], "getndensfrommasses() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.getNDensFromMasses"]], "normalizenuclidelist() (in module armi.utils.densitytools)": [[389, "armi.utils.densityTools.normalizeNuclideList"]], "directorychanger (class in armi.utils.directorychangers)": [[390, "armi.utils.directoryChangers.DirectoryChanger"]], "forcedcreationdirectorychanger (class in armi.utils.directorychangers)": [[390, "armi.utils.directoryChangers.ForcedCreationDirectoryChanger"]], "getrandomdirectory() (armi.utils.directorychangers.temporarydirectorychanger class method)": [[390, "armi.utils.directoryChangers.TemporaryDirectoryChanger.GetRandomDirectory"]], "temporarydirectorychanger (class in armi.utils.directorychangers)": [[390, "armi.utils.directoryChangers.TemporaryDirectoryChanger"]], "armi.utils.directorychangers": [[390, "module-armi.utils.directoryChangers"]], "close() (armi.utils.directorychangers.directorychanger method)": [[390, "armi.utils.directoryChangers.DirectoryChanger.close"]], "directorychangerfactory() (in module armi.utils.directorychangers)": [[390, "armi.utils.directoryChangers.directoryChangerFactory"]], "movefiles() (armi.utils.directorychangers.directorychanger method)": [[390, "armi.utils.directoryChangers.DirectoryChanger.moveFiles"]], "open() (armi.utils.directorychangers.directorychanger method)": [[390, "armi.utils.directoryChangers.DirectoryChanger.open"]], "retrievefiles() (armi.utils.directorychangers.directorychanger method)": [[390, "armi.utils.directoryChangers.DirectoryChanger.retrieveFiles"]], "mpidirectorychanger (class in armi.utils.directorychangersmpi)": [[391, "armi.utils.directoryChangersMpi.MpiDirectoryChanger"]], "armi.utils.directorychangersmpi": [[391, "module-armi.utils.directoryChangersMpi"]], "close() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[391, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.close"]], "open() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[391, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.open"]], "execdirective (class in armi.utils.dochelpers)": [[392, "armi.utils.dochelpers.ExecDirective"]], "pyreverse (class in armi.utils.dochelpers)": [[392, "armi.utils.dochelpers.PyReverse"]], "armi.utils.dochelpers": [[392, "module-armi.utils.dochelpers"]], "create_figure() (in module armi.utils.dochelpers)": [[392, "armi.utils.dochelpers.create_figure"]], "create_table() (in module armi.utils.dochelpers)": [[392, "armi.utils.dochelpers.create_table"]], "generateparamtable() (in module armi.utils.dochelpers)": [[392, "armi.utils.dochelpers.generateParamTable"]], "generatepluginsettingstable() (in module armi.utils.dochelpers)": [[392, "armi.utils.dochelpers.generatePluginSettingsTable"]], "has_content (armi.utils.dochelpers.execdirective attribute)": [[392, "armi.utils.dochelpers.ExecDirective.has_content"]], "has_content (armi.utils.dochelpers.pyreverse attribute)": [[392, "armi.utils.dochelpers.PyReverse.has_content"]], "option_spec (armi.utils.dochelpers.pyreverse attribute)": [[392, "armi.utils.dochelpers.PyReverse.option_spec"]], "optional_arguments (armi.utils.dochelpers.pyreverse attribute)": [[392, "armi.utils.dochelpers.PyReverse.optional_arguments"]], "required_arguments (armi.utils.dochelpers.pyreverse attribute)": [[392, "armi.utils.dochelpers.PyReverse.required_arguments"]], "run() (armi.utils.dochelpers.execdirective method)": [[392, "armi.utils.dochelpers.ExecDirective.run"]], "run() (armi.utils.dochelpers.pyreverse method)": [[392, "armi.utils.dochelpers.PyReverse.run"]], "armi.utils.dynamicimporter": [[393, "module-armi.utils.dynamicImporter"]], "getentirefamilytree() (in module armi.utils.dynamicimporter)": [[393, "armi.utils.dynamicImporter.getEntireFamilyTree"]], "flag (class in armi.utils.flags)": [[394, "armi.utils.flags.Flag"]], "armi.utils.flags": [[394, "module-armi.utils.flags"]], "auto (class in armi.utils.flags)": [[394, "armi.utils.flags.auto"]], "extend() (armi.utils.flags.flag class method)": [[394, "armi.utils.flags.Flag.extend"]], "fields() (armi.utils.flags.flag class method)": [[394, "armi.utils.flags.Flag.fields"]], "from_bytes() (armi.utils.flags.flag class method)": [[394, "armi.utils.flags.Flag.from_bytes"]], "sortedfields() (armi.utils.flags.flag class method)": [[394, "armi.utils.flags.Flag.sortedFields"]], "to_bytes() (armi.utils.flags.flag method)": [[394, "armi.utils.flags.Flag.to_bytes"]], "width() (armi.utils.flags.flag class method)": [[394, "armi.utils.flags.Flag.width"]], "area() (in module armi.utils.hexagon)": [[396, "armi.utils.hexagon.area"]], "armi.utils.hexagon": [[396, "module-armi.utils.hexagon"]], "corners() (in module armi.utils.hexagon)": [[396, "armi.utils.hexagon.corners"]], "numpositionsinring() (in module armi.utils.hexagon)": [[396, "armi.utils.hexagon.numPositionsInRing"]], "numringstoholdnumcells() (in module armi.utils.hexagon)": [[396, "armi.utils.hexagon.numRingsToHoldNumCells"]], "pitch() (in module armi.utils.hexagon)": [[396, "armi.utils.hexagon.pitch"]], "side() (in module armi.utils.hexagon)": [[396, "armi.utils.hexagon.side"]], "sequence (class in armi.utils.iterables)": [[397, "armi.utils.iterables.Sequence"]], "append() (armi.utils.iterables.sequence method)": [[397, "armi.utils.iterables.Sequence.append"]], "armi.utils.iterables": [[397, "module-armi.utils.iterables"]], "chunk() (in module armi.utils.iterables)": [[397, "armi.utils.iterables.chunk"]], "copy() (armi.utils.iterables.sequence method)": [[397, "armi.utils.iterables.Sequence.copy"]], "drop() (armi.utils.iterables.sequence method)": [[397, "armi.utils.iterables.Sequence.drop"]], "extend() (armi.utils.iterables.sequence method)": [[397, "armi.utils.iterables.Sequence.extend"]], "flatten() (in module armi.utils.iterables)": [[397, "armi.utils.iterables.flatten"]], "packbinarystrings() (in module armi.utils.iterables)": [[397, "armi.utils.iterables.packBinaryStrings"]], "packhexstrings() (in module armi.utils.iterables)": [[397, "armi.utils.iterables.packHexStrings"]], "select() (armi.utils.iterables.sequence method)": [[397, "armi.utils.iterables.Sequence.select"]], "split() (in module armi.utils.iterables)": [[397, "armi.utils.iterables.split"]], "transform() (armi.utils.iterables.sequence method)": [[397, "armi.utils.iterables.Sequence.transform"]], "unpackbinarystrings() (in module armi.utils.iterables)": [[397, "armi.utils.iterables.unpackBinaryStrings"]], "unpackhexstrings() (in module armi.utils.iterables)": [[397, "armi.utils.iterables.unpackHexStrings"]], "armi.utils.mathematics": [[398, "module-armi.utils.mathematics"]], "average1dwithintolerance() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.average1DWithinTolerance"]], "converttoslice() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.convertToSlice"]], "efmt() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.efmt"]], "expandrepeatedfloats() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.expandRepeatedFloats"]], "findclosest() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.findClosest"]], "findnearestvalue() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.findNearestValue"]], "findnearestvalueandindex() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.findNearestValueAndIndex"]], "fixthreedigitexp() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.fixThreeDigitExp"]], "getfloat() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.getFloat"]], "getstepsfromvalues() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.getStepsFromValues"]], "ismonotonic() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.isMonotonic"]], "linearinterpolation() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.linearInterpolation"]], "minimizescalarfunc() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.minimizeScalarFunc"]], "newtonsmethod() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.newtonsMethod"]], "parabolafrompoints() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.parabolaFromPoints"]], "parabolicinterpolation() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.parabolicInterpolation"]], "relerr() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.relErr"]], "resamplestepwise() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.resampleStepwise"]], "rotatexy() (in module armi.utils.mathematics)": [[398, "armi.utils.mathematics.rotateXY"]], "armi.utils.outputcache": [[399, "module-armi.utils.outputCache"]], "cachecall() (in module armi.utils.outputcache)": [[399, "armi.utils.outputCache.cacheCall"]], "deletecache() (in module armi.utils.outputcache)": [[399, "armi.utils.outputCache.deleteCache"]], "retrieveoutput() (in module armi.utils.outputcache)": [[399, "armi.utils.outputCache.retrieveOutput"]], "store() (in module armi.utils.outputcache)": [[399, "armi.utils.outputCache.store"]], "armi.utils.parsing": [[400, "module-armi.utils.parsing"]], "datetimefromstr() (in module armi.utils.parsing)": [[400, "armi.utils.parsing.datetimeFromStr"]], "parsevalue() (in module armi.utils.parsing)": [[400, "armi.utils.parsing.parseValue"]], "tryliteraleval() (in module armi.utils.parsing)": [[400, "armi.utils.parsing.tryLiteralEval"]], "armi.utils.pathtools": [[401, "module-armi.utils.pathTools"]], "armiabspath() (in module armi.utils.pathtools)": [[401, "armi.utils.pathTools.armiAbsPath"]], "cleanpath() (in module armi.utils.pathtools)": [[401, "armi.utils.pathTools.cleanPath"]], "copyorwarn() (in module armi.utils.pathtools)": [[401, "armi.utils.pathTools.copyOrWarn"]], "importcustompymodule() (in module armi.utils.pathtools)": [[401, "armi.utils.pathTools.importCustomPyModule"]], "isaccessible() (in module armi.utils.pathtools)": [[401, "armi.utils.pathTools.isAccessible"]], "isfilepathnewer() (in module armi.utils.pathtools)": [[401, "armi.utils.pathTools.isFilePathNewer"]], "moduleandattributeexist() (in module armi.utils.pathtools)": [[401, "armi.utils.pathTools.moduleAndAttributeExist"]], "separatemoduleandattribute() (in module armi.utils.pathtools)": [[401, "armi.utils.pathTools.separateModuleAndAttribute"]], "depthslider (class in armi.utils.plotting)": [[402, "armi.utils.plotting.DepthSlider"]], "armi.utils.plotting": [[402, "module-armi.utils.plotting"]], "close() (in module armi.utils.plotting)": [[402, "armi.utils.plotting.close"]], "colorgenerator() (in module armi.utils.plotting)": [[402, "armi.utils.plotting.colorGenerator"]], "makehistogram() (in module armi.utils.plotting)": [[402, "armi.utils.plotting.makeHistogram"]], "next() (armi.utils.plotting.depthslider method)": [[402, "armi.utils.plotting.DepthSlider.next"]], "plotassemblytypes() (in module armi.utils.plotting)": [[402, "armi.utils.plotting.plotAssemblyTypes"]], "plotblockdepthmap() (in module armi.utils.plotting)": [[402, "armi.utils.plotting.plotBlockDepthMap"]], "plotblockdiagram() (in module armi.utils.plotting)": [[402, "armi.utils.plotting.plotBlockDiagram"]], "plotblockflux() (in module armi.utils.plotting)": [[402, "armi.utils.plotting.plotBlockFlux"]], "plotfacemap() (in module armi.utils.plotting)": [[402, "armi.utils.plotting.plotFaceMap"]], "plotnucxs() (in module armi.utils.plotting)": [[402, "armi.utils.plotting.plotNucXs"]], "plottriangleflux() (in module armi.utils.plotting)": [[402, "armi.utils.plotting.plotTriangleFlux"]], "previous() (armi.utils.plotting.depthslider method)": [[402, "armi.utils.plotting.DepthSlider.previous"]], "set_val() (armi.utils.plotting.depthslider method)": [[402, "armi.utils.plotting.DepthSlider.set_val"]], "updatepagedepthcolor() (armi.utils.plotting.depthslider method)": [[402, "armi.utils.plotting.DepthSlider.updatePageDepthColor"]], "immutablepropertyerror": [[403, "armi.utils.properties.ImmutablePropertyError"]], "areequal() (in module armi.utils.properties)": [[403, "armi.utils.properties.areEqual"]], "armi.utils.properties": [[403, "module-armi.utils.properties"]], "createimmutableproperty() (in module armi.utils.properties)": [[403, "armi.utils.properties.createImmutableProperty"]], "lockimmutableproperties() (in module armi.utils.properties)": [[403, "armi.utils.properties.lockImmutableProperties"]], "numpyhackforequal() (in module armi.utils.properties)": [[403, "armi.utils.properties.numpyHackForEqual"]], "unlockimmutableproperties() (in module armi.utils.properties)": [[403, "armi.utils.properties.unlockImmutableProperties"]], "armi.utils.reportplotting": [[404, "module-armi.utils.reportPlotting"]], "buvstime() (in module armi.utils.reportplotting)": [[404, "armi.utils.reportPlotting.buVsTime"]], "createplotmetadata() (in module armi.utils.reportplotting)": [[404, "armi.utils.reportPlotting.createPlotMetaData"]], "keffvstime() (in module armi.utils.reportplotting)": [[404, "armi.utils.reportPlotting.keffVsTime"]], "movesvscycle() (in module armi.utils.reportplotting)": [[404, "armi.utils.reportPlotting.movesVsCycle"]], "plotaxialprofile() (in module armi.utils.reportplotting)": [[404, "armi.utils.reportPlotting.plotAxialProfile"]], "plotcoreoverviewradar() (in module armi.utils.reportplotting)": [[404, "armi.utils.reportPlotting.plotCoreOverviewRadar"]], "plotreactorperformance() (in module armi.utils.reportplotting)": [[404, "armi.utils.reportPlotting.plotReactorPerformance"]], "valuevstime() (in module armi.utils.reportplotting)": [[404, "armi.utils.reportPlotting.valueVsTime"]], "xshistoryvstime() (in module armi.utils.reportplotting)": [[404, "armi.utils.reportPlotting.xsHistoryVsTime"]], "armi.utils.tests": [[405, "module-armi.utils.tests"]], "testasciimaps (class in armi.utils.tests.test_asciimaps)": [[406, "armi.utils.tests.test_asciimaps.TestAsciiMaps"]], "armi.utils.tests.test_asciimaps": [[406, "module-armi.utils.tests.test_asciimaps"]], "test_cartesian() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[406, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_cartesian"]], "test_flathexbases() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[406, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_flatHexBases"]], "test_hexfull() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[406, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFull"]], "test_hexfullflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[406, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlat"]], "test_hexsmallflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[406, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexSmallFlat"]], "test_hexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[406, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexThird"]], "test_hexwithemptyrow() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[406, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithEmptyRow"]], "test_hexwithholes() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[406, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithHoles"]], "test_troublesomehexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[406, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_troublesomeHexThird"]], "codetimingtest (class in armi.utils.tests.test_codetiming)": [[407, "armi.utils.tests.test_codeTiming.CodeTimingTest"]], "armi.utils.tests.test_codetiming": [[407, "module-armi.utils.tests.test_codeTiming"]], "test_alternate_usages() (armi.utils.tests.test_codetiming.codetimingtest method)": [[407, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_alternate_usages"]], "test_master() (armi.utils.tests.test_codetiming.codetimingtest method)": [[407, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_master"]], "test_messy_starts_and_stops() (armi.utils.tests.test_codetiming.codetimingtest method)": [[407, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_messy_starts_and_stops"]], "test_method_definitions() (armi.utils.tests.test_codetiming.codetimingtest method)": [[407, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_method_definitions"]], "test_property_access() (armi.utils.tests.test_codetiming.codetimingtest method)": [[407, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_property_access"]], "customexceptiontests (class in armi.utils.tests.test_custom_exceptions)": [[408, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions": [[408, "module-armi.utils.tests.test_custom_exceptions"]], "exampleimportantmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[408, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleImportantMessage"]], "exampleinfomessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[408, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleInfoMessage"]], "examplewarnmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[408, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnMessage"]], "examplewarnwhenrootmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[408, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnWhenRootMessage"]], "test_important_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[408, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_important_decorator"]], "test_info_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[408, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_info_decorator"]], "test_warn_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[408, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_decorator"]], "test_warn_when_root_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[408, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_when_root_decorator"]], "testdensitytools (class in armi.utils.tests.test_densitytools)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools"]], "uraniumoxide (class in armi.utils.tests.test_densitytools)": [[409, "armi.utils.tests.test_densityTools.UraniumOxide"]], "armi.utils.tests.test_densitytools": [[409, "module-armi.utils.tests.test_densityTools"]], "density() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[409, "armi.utils.tests.test_densityTools.UraniumOxide.density"]], "pseudodensity() (armi.utils.tests.test_densitytools.uraniumoxide method)": [[409, "armi.utils.tests.test_densityTools.UraniumOxide.pseudoDensity"]], "test_applyisotopicsmix() (armi.utils.tests.test_densitytools.testdensitytools method)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools.test_applyIsotopicsMix"]], "test_calculatenumberdensity() (armi.utils.tests.test_densitytools.testdensitytools method)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools.test_calculateNumberDensity"]], "test_expandelement() (armi.utils.tests.test_densitytools.testdensitytools method)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElement"]], "test_expandelementalmassfracstonuclides() (armi.utils.tests.test_densitytools.testdensitytools method)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalMassFracsToNuclides"]], "test_expandelementalzeromassfrac() (armi.utils.tests.test_densitytools.testdensitytools method)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools.test_expandElementalZeroMassFrac"]], "test_formatmaterialcard() (armi.utils.tests.test_densitytools.testdensitytools method)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools.test_formatMaterialCard"]], "test_getchemicals() (armi.utils.tests.test_densitytools.testdensitytools method)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools.test_getChemicals"]], "test_getmassfractions() (armi.utils.tests.test_densitytools.testdensitytools method)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassFractions"]], "test_getmassingrams() (armi.utils.tests.test_densitytools.testdensitytools method)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools.test_getMassInGrams"]], "test_getndensfrommasses() (armi.utils.tests.test_densitytools.testdensitytools method)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools.test_getNDensFromMasses"]], "test_normalizenuclidelist() (armi.utils.tests.test_densitytools.testdensitytools method)": [[409, "armi.utils.tests.test_densityTools.TestDensityTools.test_normalizeNuclideList"]], "expectedexception": [[410, "armi.utils.tests.test_directoryChangers.ExpectedException"]], "testdirectorychangers (class in armi.utils.tests.test_directorychangers)": [[410, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers"]], "armi.utils.tests.test_directorychangers": [[410, "module-armi.utils.tests.test_directoryChangers"]], "test_change_to_nonexisting_fails() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[410, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_fails"]], "test_change_to_nonexisting_works_forced() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[410, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_works_forced"]], "test_exception() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[410, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception"]], "test_exception_disabled() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[410, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception_disabled"]], "test_file_retrieval() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[410, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval"]], "test_file_retrieval_missing_file() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[410, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval_missing_file"]], "test_mpiaction() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[410, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiAction"]], "test_mpiactionfailsonnonexistentpath() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[410, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiActionFailsOnNonexistentPath"]], "test_temporary_cleans() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[410, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_temporary_cleans"]], "testdochelpers (class in armi.utils.tests.test_dochelpers)": [[411, "armi.utils.tests.test_dochelpers.TestDocHelpers"]], "armi.utils.tests.test_dochelpers": [[411, "module-armi.utils.tests.test_dochelpers"]], "test_createfigure() (armi.utils.tests.test_dochelpers.testdochelpers method)": [[411, "armi.utils.tests.test_dochelpers.TestDocHelpers.test_createFigure"]], "test_createtable() (armi.utils.tests.test_dochelpers.testdochelpers method)": [[411, "armi.utils.tests.test_dochelpers.TestDocHelpers.test_createTable"]], "test_paramtable() (armi.utils.tests.test_dochelpers.testdochelpers method)": [[411, "armi.utils.tests.test_dochelpers.TestDocHelpers.test_paramTable"]], "test_settingstable() (armi.utils.tests.test_dochelpers.testdochelpers method)": [[411, "armi.utils.tests.test_dochelpers.TestDocHelpers.test_settingsTable"]], "bar (armi.utils.tests.test_flags.exampleflag attribute)": [[412, "armi.utils.tests.test_flags.ExampleFlag.BAR"]], "baz (armi.utils.tests.test_flags.exampleflag attribute)": [[412, "armi.utils.tests.test_flags.ExampleFlag.BAZ"]], "exampleflag (class in armi.utils.tests.test_flags)": [[412, "armi.utils.tests.test_flags.ExampleFlag"]], "foo (armi.utils.tests.test_flags.exampleflag attribute)": [[412, "armi.utils.tests.test_flags.ExampleFlag.FOO"]], "testflag (class in armi.utils.tests.test_flags)": [[412, "armi.utils.tests.test_flags.TestFlag"]], "armi.utils.tests.test_flags": [[412, "module-armi.utils.tests.test_flags"]], "test_auto() (armi.utils.tests.test_flags.testflag method)": [[412, "armi.utils.tests.test_flags.TestFlag.test_auto"]], "test_bitwise() (armi.utils.tests.test_flags.testflag method)": [[412, "armi.utils.tests.test_flags.TestFlag.test_bitwise"]], "test_bool() (armi.utils.tests.test_flags.testflag method)": [[412, "armi.utils.tests.test_flags.TestFlag.test_bool"]], "test_collision_creation() (armi.utils.tests.test_flags.testflag method)": [[412, "armi.utils.tests.test_flags.TestFlag.test_collision_creation"]], "test_collision_extension() (armi.utils.tests.test_flags.testflag method)": [[412, "armi.utils.tests.test_flags.TestFlag.test_collision_extension"]], "test_extend() (armi.utils.tests.test_flags.testflag method)": [[412, "armi.utils.tests.test_flags.TestFlag.test_extend"]], "test_getitem() (armi.utils.tests.test_flags.testflag method)": [[412, "armi.utils.tests.test_flags.TestFlag.test_getitem"]], "test_hashable() (armi.utils.tests.test_flags.testflag method)": [[412, "armi.utils.tests.test_flags.TestFlag.test_hashable"]], "test_inclusion() (armi.utils.tests.test_flags.testflag method)": [[412, "armi.utils.tests.test_flags.TestFlag.test_inclusion"]], "test_iteration() (armi.utils.tests.test_flags.testflag method)": [[412, "armi.utils.tests.test_flags.TestFlag.test_iteration"]], "testhexagon (class in armi.utils.tests.test_hexagon)": [[413, "armi.utils.tests.test_hexagon.TestHexagon"]], "armi.utils.tests.test_hexagon": [[413, "module-armi.utils.tests.test_hexagon"]], "test_hexagon_area() (armi.utils.tests.test_hexagon.testhexagon method)": [[413, "armi.utils.tests.test_hexagon.TestHexagon.test_hexagon_area"]], "test_numpositionsinring() (armi.utils.tests.test_hexagon.testhexagon method)": [[413, "armi.utils.tests.test_hexagon.TestHexagon.test_numPositionsInRing"]], "testiterables (class in armi.utils.tests.test_iterables)": [[414, "armi.utils.tests.test_iterables.TestIterables"]], "armi.utils.tests.test_iterables": [[414, "module-armi.utils.tests.test_iterables"]], "test_addingsequences() (armi.utils.tests.test_iterables.testiterables method)": [[414, "armi.utils.tests.test_iterables.TestIterables.test_addingSequences"]], "test_appendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[414, "armi.utils.tests.test_iterables.TestIterables.test_appendSequence"]], "test_chunk() (armi.utils.tests.test_iterables.testiterables method)": [[414, "armi.utils.tests.test_iterables.TestIterables.test_chunk"]], "test_copysequence() (armi.utils.tests.test_iterables.testiterables method)": [[414, "armi.utils.tests.test_iterables.TestIterables.test_copySequence"]], "test_extendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[414, "armi.utils.tests.test_iterables.TestIterables.test_extendSequence"]], "test_flatten() (armi.utils.tests.test_iterables.testiterables method)": [[414, "armi.utils.tests.test_iterables.TestIterables.test_flatten"]], "test_packingandunpackingbinarystrings() (armi.utils.tests.test_iterables.testiterables method)": [[414, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingBinaryStrings"]], "test_packingandunpackinghexstrings() (armi.utils.tests.test_iterables.testiterables method)": [[414, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingHexStrings"]], "test_sequence() (armi.utils.tests.test_iterables.testiterables method)": [[414, "armi.utils.tests.test_iterables.TestIterables.test_sequence"]], "test_sequenceinit() (armi.utils.tests.test_iterables.testiterables method)": [[414, "armi.utils.tests.test_iterables.TestIterables.test_sequenceInit"]], "test_split() (armi.utils.tests.test_iterables.testiterables method)": [[414, "armi.utils.tests.test_iterables.TestIterables.test_split"]], "testmath (class in armi.utils.tests.test_mathematics)": [[415, "armi.utils.tests.test_mathematics.TestMath"]], "armi.utils.tests.test_mathematics": [[415, "module-armi.utils.tests.test_mathematics"]], "test_average1dwithintolerance() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinTolerance"]], "test_average1dwithintoleranceinvalid() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinToleranceInvalid"]], "test_converttoslice() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_convertToSlice"]], "test_efmt() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_efmt"]], "test_expandrepeatedfloats() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_expandRepeatedFloats"]], "test_findclosest() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_findClosest"]], "test_findnearestvalue() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_findNearestValue"]], "test_fixthreedigitexp() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_fixThreeDigitExp"]], "test_getfloat() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_getFloat"]], "test_getstepsfromvalues() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_getStepsFromValues"]], "test_ismonotonic() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_isMonotonic"]], "test_linearinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_linearInterpolation"]], "test_minimizescalarfunc() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_minimizeScalarFunc"]], "test_newtonsmethod() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_newtonsMethod"]], "test_parabola() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_parabola"]], "test_parabolicinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_parabolicInterpolation"]], "test_relerr() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_relErr"]], "test_resamplestepwiseavg0() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg0"]], "test_resamplestepwiseavg1() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg1"]], "test_resamplestepwiseavg2() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg2"]], "test_resamplestepwiseavg3() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg3"]], "test_resamplestepwiseavg4() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg4"]], "test_resamplestepwiseavg5() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg5"]], "test_resamplestepwiseavg6() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg6"]], "test_resamplestepwiseavg7() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg7"]], "test_resamplestepwiseavgallnones() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgAllNones"]], "test_resamplestepwiseavgcomplicatednone() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgComplicatedNone"]], "test_resamplestepwiseavgnparray() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArray"]], "test_resamplestepwiseavgnparrayaverage() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArrayAverage"]], "test_resamplestepwiseavgonenone() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgOneNone"]], "test_resamplestepwisesum0() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum0"]], "test_resamplestepwisesum1() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum1"]], "test_resamplestepwisesum2() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum2"]], "test_resamplestepwisesum3() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum3"]], "test_resamplestepwisesum4() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum4"]], "test_resamplestepwisesum5() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum5"]], "test_resamplestepwisesum6() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum6"]], "test_resamplestepwisesum7() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum7"]], "test_resamplestepwisesumallnones() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumAllNones"]], "test_resamplestepwisesumonenone() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumOneNone"]], "test_rotatexy() (armi.utils.tests.test_mathematics.testmath method)": [[415, "armi.utils.tests.test_mathematics.TestMath.test_rotateXY"]], "testoutputcache (class in armi.utils.tests.test_outputcache)": [[416, "armi.utils.tests.test_outputCache.TestOutputCache"]], "armi.utils.tests.test_outputcache": [[416, "module-armi.utils.tests.test_outputCache"]], "test_deletecache() (armi.utils.tests.test_outputcache.testoutputcache method)": [[416, "armi.utils.tests.test_outputCache.TestOutputCache.test_deleteCache"]], "test_getcachedfolder() (armi.utils.tests.test_outputcache.testoutputcache method)": [[416, "armi.utils.tests.test_outputCache.TestOutputCache.test_getCachedFolder"]], "test_hashfiles() (armi.utils.tests.test_outputcache.testoutputcache method)": [[416, "armi.utils.tests.test_outputCache.TestOutputCache.test_hashFiles"]], "test_makeoutputmanifest() (armi.utils.tests.test_outputcache.testoutputcache method)": [[416, "armi.utils.tests.test_outputCache.TestOutputCache.test_makeOutputManifest"]], "test_retrieveoutput() (armi.utils.tests.test_outputcache.testoutputcache method)": [[416, "armi.utils.tests.test_outputCache.TestOutputCache.test_retrieveOutput"]], "literalevaltest (class in armi.utils.tests.test_parsing)": [[417, "armi.utils.tests.test_parsing.LiteralEvalTest"]], "armi.utils.tests.test_parsing": [[417, "module-armi.utils.tests.test_parsing"]], "test_parsevalue() (armi.utils.tests.test_parsing.literalevaltest method)": [[417, "armi.utils.tests.test_parsing.LiteralEvalTest.test_parseValue"]], "test_tryliteraleval() (armi.utils.tests.test_parsing.literalevaltest method)": [[417, "armi.utils.tests.test_parsing.LiteralEvalTest.test_tryLiteralEval"]], "pathtoolstests (class in armi.utils.tests.test_pathtools)": [[418, "armi.utils.tests.test_pathTools.PathToolsTests"]], "armi.utils.tests.test_pathtools": [[418, "module-armi.utils.tests.test_pathTools"]], "test_cleanpathnompi() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[418, "armi.utils.tests.test_pathTools.PathToolsTests.test_cleanPathNoMpi"]], "test_importcustommodule() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[418, "armi.utils.tests.test_pathTools.PathToolsTests.test_importCustomModule"]], "test_isaccessible() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[418, "armi.utils.tests.test_pathTools.PathToolsTests.test_isAccessible"]], "test_isfilepathnewer() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[418, "armi.utils.tests.test_pathTools.PathToolsTests.test_isFilePathNewer"]], "test_moduleandattributeexist() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[418, "armi.utils.tests.test_pathTools.PathToolsTests.test_moduleAndAttributeExist"]], "test_separatemoduleandattribute() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[418, "armi.utils.tests.test_pathTools.PathToolsTests.test_separateModuleAndAttribute"]], "testplotting (class in armi.utils.tests.test_plotting)": [[419, "armi.utils.tests.test_plotting.TestPlotting"]], "armi.utils.tests.test_plotting": [[419, "module-armi.utils.tests.test_plotting"]], "test_plotassemblytypes() (armi.utils.tests.test_plotting.testplotting method)": [[419, "armi.utils.tests.test_plotting.TestPlotting.test_plotAssemblyTypes"]], "test_plotblockflux() (armi.utils.tests.test_plotting.testplotting method)": [[419, "armi.utils.tests.test_plotting.TestPlotting.test_plotBlockFlux"]], "test_plotcartesianblock() (armi.utils.tests.test_plotting.testplotting method)": [[419, "armi.utils.tests.test_plotting.TestPlotting.test_plotCartesianBlock"]], "test_plotdepthmap() (armi.utils.tests.test_plotting.testplotting method)": [[419, "armi.utils.tests.test_plotting.TestPlotting.test_plotDepthMap"]], "test_plothexblock() (armi.utils.tests.test_plotting.testplotting method)": [[419, "armi.utils.tests.test_plotting.TestPlotting.test_plotHexBlock"]], "immutableclass (class in armi.utils.tests.test_properties)": [[420, "armi.utils.tests.test_properties.ImmutableClass"]], "immutablepropertytests (class in armi.utils.tests.test_properties)": [[420, "armi.utils.tests.test_properties.ImmutablePropertyTests"]], "armi.utils.tests.test_properties": [[420, "module-armi.utils.tests.test_properties"]], "initialize() (armi.utils.tests.test_properties.immutableclass method)": [[420, "armi.utils.tests.test_properties.ImmutableClass.initialize"]], "mynum (armi.utils.tests.test_properties.immutableclass property)": [[420, "armi.utils.tests.test_properties.ImmutableClass.myNum"]], "test_cannotassignvaluetoimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[420, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_cannotAssignValueToImmutableProperty"]], "test_retreivingunassignedvalueraiseserror() (armi.utils.tests.test_properties.immutablepropertytests method)": [[420, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_retreivingUnassignedValueRaisesError"]], "test_unlockdoesnotpermitsreassignmentofanimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[420, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "testradar (class in armi.utils.tests.test_reportplotting)": [[421, "armi.utils.tests.test_reportPlotting.TestRadar"]], "armi.utils.tests.test_reportplotting": [[421, "module-armi.utils.tests.test_reportPlotting"]], "test_buvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[421, "armi.utils.tests.test_reportPlotting.TestRadar.test_buVsTime"]], "test_createplotmetadata() (armi.utils.tests.test_reportplotting.testradar method)": [[421, "armi.utils.tests.test_reportPlotting.TestRadar.test_createPlotMetaData"]], "test_keffvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[421, "armi.utils.tests.test_reportPlotting.TestRadar.test_keffVsTime"]], "test_movesvscycle() (armi.utils.tests.test_reportplotting.testradar method)": [[421, "armi.utils.tests.test_reportPlotting.TestRadar.test_movesVsCycle"]], "test_plotaxialprofile() (armi.utils.tests.test_reportplotting.testradar method)": [[421, "armi.utils.tests.test_reportPlotting.TestRadar.test_plotAxialProfile"]], "test_radar() (armi.utils.tests.test_reportplotting.testradar method)": [[421, "armi.utils.tests.test_reportPlotting.TestRadar.test_radar"]], "test_valuevstime() (armi.utils.tests.test_reportplotting.testradar method)": [[421, "armi.utils.tests.test_reportPlotting.TestRadar.test_valueVsTime"]], "test_xshistoryvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[421, "armi.utils.tests.test_reportPlotting.TestRadar.test_xsHistoryVsTime"]], "sequentialreadertests (class in armi.utils.tests.test_textprocessors)": [[422, "armi.utils.tests.test_textProcessors.SequentialReaderTests"]], "yamlincludetest (class in armi.utils.tests.test_textprocessors)": [[422, "armi.utils.tests.test_textProcessors.YamlIncludeTest"]], "armi.utils.tests.test_textprocessors": [[422, "module-armi.utils.tests.test_textProcessors"]], "test_findincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[422, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_findIncludes"]], "test_readfile() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[422, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFile"]], "test_readfilewithpattern() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[422, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFileWithPattern"]], "test_resolveincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[422, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes"]], "test_resolveincludes_stringio() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[422, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes_StringIO"]], "textstream (armi.utils.tests.test_textprocessors.sequentialreadertests attribute)": [[422, "armi.utils.tests.test_textProcessors.SequentialReaderTests.textStream"]], "testtriangle (class in armi.utils.tests.test_triangle)": [[423, "armi.utils.tests.test_triangle.TestTriangle"]], "armi.utils.tests.test_triangle": [[423, "module-armi.utils.tests.test_triangle"]], "test_checkifpointisintriangle() (armi.utils.tests.test_triangle.testtriangle method)": [[423, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle"]], "test_checkifpointisintriangle2() (armi.utils.tests.test_triangle.testtriangle method)": [[423, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle2"]], "test_gettrianglearea() (armi.utils.tests.test_triangle.testtriangle method)": [[423, "armi.utils.tests.test_triangle.TestTriangle.test_getTriangleArea"]], "testunits (class in armi.utils.tests.test_units)": [[424, "armi.utils.tests.test_units.TestUnits"]], "armi.utils.tests.test_units": [[424, "module-armi.utils.tests.test_units"]], "test_convertxtopascal() (armi.utils.tests.test_units.testunits method)": [[424, "armi.utils.tests.test_units.TestUnits.test_convertXtoPascal"]], "test_gettc() (armi.utils.tests.test_units.testunits method)": [[424, "armi.utils.tests.test_units.TestUnits.test_getTc"]], "test_gettemperature() (armi.utils.tests.test_units.testunits method)": [[424, "armi.utils.tests.test_units.TestUnits.test_getTemperature"]], "test_gettf() (armi.utils.tests.test_units.testunits method)": [[424, "armi.utils.tests.test_units.TestUnits.test_getTf"]], "test_gettk() (armi.utils.tests.test_units.testunits method)": [[424, "armi.utils.tests.test_units.TestUnits.test_getTk"]], "test_gettmev() (armi.utils.tests.test_units.testunits method)": [[424, "armi.utils.tests.test_units.TestUnits.test_getTmev"]], "test_getxylineparameters() (armi.utils.tests.test_units.testunits method)": [[424, "armi.utils.tests.test_units.TestUnits.test_getXYLineParameters"]], "test_pressure_converter() (armi.utils.tests.test_units.testunits method)": [[424, "armi.utils.tests.test_units.TestUnits.test_pressure_converter"]], "test_sanitizeangle() (armi.utils.tests.test_units.testunits method)": [[424, "armi.utils.tests.test_units.TestUnits.test_sanitizeAngle"]], "cyclessettingstests (class in armi.utils.tests.test_utils)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests"]], "testgeneralutils (class in armi.utils.tests.test_utils)": [[425, "armi.utils.tests.test_utils.TestGeneralUtils"]], "armi.utils.tests.test_utils": [[425, "module-armi.utils.tests.test_utils"]], "availabilityfactorsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsDetailedSolution"]], "availabilityfactorssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsSimpleSolution"]], "burnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsDetailedSolution"]], "burnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsSimpleSolution"]], "cyclelengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsDetailedSolution"]], "cyclelengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsSimpleSolution"]], "cyclenamesdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesDetailedSolution"]], "cyclenamessimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesSimpleSolution"]], "detailedcyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.detailedCyclesSettings"]], "maxburnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsDetailedSolution"]], "maxburnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsSimpleSolution"]], "nodespercycledetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleDetailedSolution"]], "nodespercyclesimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleSimpleSolution"]], "powerfractionsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsDetailedSolution"]], "powerfractionssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsSimpleSolution"]], "simplecyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.simpleCyclesSettings"]], "steplengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsDetailedSolution"]], "steplengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsSimpleSolution"]], "test_capstrlen() (armi.utils.tests.test_utils.testgeneralutils method)": [[425, "armi.utils.tests.test_utils.TestGeneralUtils.test_capStrLen"]], "test_classesinhierarchy() (armi.utils.tests.test_utils.testgeneralutils method)": [[425, "armi.utils.tests.test_utils.TestGeneralUtils.test_classesInHierarchy"]], "test_codetiming() (armi.utils.tests.test_utils.testgeneralutils method)": [[425, "armi.utils.tests.test_utils.TestGeneralUtils.test_codeTiming"]], "test_createformattedstrwithdelimiter() (armi.utils.tests.test_utils.testgeneralutils method)": [[425, "armi.utils.tests.test_utils.TestGeneralUtils.test_createFormattedStrWithDelimiter"]], "test_getavailabilityfactors() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getBurnSteps"]], "test_getcumulativenodenum() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCumulativeNodeNum"]], "test_getcyclelengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNames"]], "test_getcyclenodefromcumulativenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeNode"]], "test_getcyclenodefromcumulativestep() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeStep"]], "test_getmaxburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getnodespercycle() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getNodesPerCycle"]], "test_getpowerfractions() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPowerFractions"]], "test_getprevioustimenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPreviousTimeNode"]], "test_getsteplengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getStepLengths"]], "test_hasburnup() (armi.utils.tests.test_utils.cyclessettingstests method)": [[425, "armi.utils.tests.test_utils.CyclesSettingsTests.test_hasBurnup"]], "test_list2str() (armi.utils.tests.test_utils.testgeneralutils method)": [[425, "armi.utils.tests.test_utils.TestGeneralUtils.test_list2str"]], "test_mergeabledictionary() (armi.utils.tests.test_utils.testgeneralutils method)": [[425, "armi.utils.tests.test_utils.TestGeneralUtils.test_mergeableDictionary"]], "test_plotmatrix() (armi.utils.tests.test_utils.testgeneralutils method)": [[425, "armi.utils.tests.test_utils.TestGeneralUtils.test_plotMatrix"]], "test_prependtolist() (armi.utils.tests.test_utils.testgeneralutils method)": [[425, "armi.utils.tests.test_utils.TestGeneralUtils.test_prependToList"]], "test_slantsplit() (armi.utils.tests.test_utils.testgeneralutils method)": [[425, "armi.utils.tests.test_utils.TestGeneralUtils.test_slantSplit"]], "decimal_pattern (in module armi.utils.textprocessors)": [[426, "armi.utils.textProcessors.DECIMAL_PATTERN"]], "floating_pattern (in module armi.utils.textprocessors)": [[426, "armi.utils.textProcessors.FLOATING_PATTERN"]], "filemark (class in armi.utils.textprocessors)": [[426, "armi.utils.textProcessors.FileMark"]], "scientific_pattern (in module armi.utils.textprocessors)": [[426, "armi.utils.textProcessors.SCIENTIFIC_PATTERN"]], "sequentialreader (class in armi.utils.textprocessors)": [[426, "armi.utils.textProcessors.SequentialReader"]], "sequentialstringioreader (class in armi.utils.textprocessors)": [[426, "armi.utils.textProcessors.SequentialStringIOReader"]], "smartlist (class in armi.utils.textprocessors)": [[426, "armi.utils.textProcessors.SmartList"]], "textprocessor (class in armi.utils.textprocessors)": [[426, "armi.utils.textProcessors.TextProcessor"]], "armi.utils.textprocessors": [[426, "module-armi.utils.textProcessors"]], "checkerrors() (armi.utils.textprocessors.textprocessor method)": [[426, "armi.utils.textProcessors.TextProcessor.checkErrors"]], "close() (armi.utils.textprocessors.smartlist method)": [[426, "armi.utils.textProcessors.SmartList.close"]], "consumeline() (armi.utils.textprocessors.sequentialreader method)": [[426, "armi.utils.textProcessors.SequentialReader.consumeLine"]], "decimal (armi.utils.textprocessors.textprocessor attribute)": [[426, "armi.utils.textProcessors.TextProcessor.decimal"]], "errorchecking() (armi.utils.textprocessors.textprocessor method)": [[426, "armi.utils.textProcessors.TextProcessor.errorChecking"]], "findyamlinclusions() (in module armi.utils.textprocessors)": [[426, "armi.utils.textProcessors.findYamlInclusions"]], "fsearch() (armi.utils.textprocessors.textprocessor method)": [[426, "armi.utils.textProcessors.TextProcessor.fsearch"]], "issuewarningonfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[426, "armi.utils.textProcessors.SequentialReader.issueWarningOnFindingText"]], "next() (armi.utils.textprocessors.smartlist method)": [[426, "armi.utils.textProcessors.SmartList.next"]], "number (armi.utils.textprocessors.textprocessor attribute)": [[426, "armi.utils.textProcessors.TextProcessor.number"]], "raiseerroronfindingpattern() (armi.utils.textprocessors.sequentialreader method)": [[426, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingPattern"]], "raiseerroronfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[426, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingText"]], "reset() (armi.utils.textprocessors.textprocessor method)": [[426, "armi.utils.textProcessors.TextProcessor.reset"]], "resolvemarkupinclusions() (in module armi.utils.textprocessors)": [[426, "armi.utils.textProcessors.resolveMarkupInclusions"]], "scipat (armi.utils.textprocessors.textprocessor attribute)": [[426, "armi.utils.textProcessors.TextProcessor.scipat"]], "searchforpattern() (armi.utils.textprocessors.sequentialreader method)": [[426, "armi.utils.textProcessors.SequentialReader.searchForPattern"]], "searchforpatternonnextline() (armi.utils.textprocessors.sequentialreader method)": [[426, "armi.utils.textProcessors.SequentialReader.searchForPatternOnNextLine"]], "searchfortext() (armi.utils.textprocessors.sequentialreader method)": [[426, "armi.utils.textProcessors.SequentialReader.searchForText"]], "seek() (armi.utils.textprocessors.smartlist method)": [[426, "armi.utils.textProcessors.SmartList.seek"]], "armi.utils.triangle": [[427, "module-armi.utils.triangle"]], "checkifpointisintriangle() (in module armi.utils.triangle)": [[427, "armi.utils.triangle.checkIfPointIsInTriangle"]], "gettrianglearea() (in module armi.utils.triangle)": [[427, "armi.utils.triangle.getTriangleArea"]], "gettrianglecentroid() (in module armi.utils.triangle)": [[427, "armi.utils.triangle.getTriangleCentroid"]], "armi.utils.units": [[428, "module-armi.utils.units"]], "convertatmtopascal() (in module armi.utils.units)": [[428, "armi.utils.units.convertAtmToPascal"]], "convertbartopascal() (in module armi.utils.units)": [[428, "armi.utils.units.convertBarToPascal"]], "convertmmhgtopascal() (in module armi.utils.units)": [[428, "armi.utils.units.convertMmhgToPascal"]], "gettc() (in module armi.utils.units)": [[428, "armi.utils.units.getTc"]], "gettemperature() (in module armi.utils.units)": [[428, "armi.utils.units.getTemperature"]], "gettf() (in module armi.utils.units)": [[428, "armi.utils.units.getTf"]], "gettk() (in module armi.utils.units)": [[428, "armi.utils.units.getTk"]], "gettmev() (in module armi.utils.units)": [[428, "armi.utils.units.getTmev"]], "getxylineparameters() (in module armi.utils.units)": [[428, "armi.utils.units.getXYLineParameters"]], "sanitizeangle() (in module armi.utils.units)": [[428, "armi.utils.units.sanitizeAngle"]], "anl": [[467, "term-ANL"]], "boc": [[467, "term-BOC"]], "bol": [[467, "term-BOL"]], "cli": [[467, "term-CLI"]], "fima": [[467, "term-FIMA"]], "gui": [[467, "term-GUI"]], "in-use tests": [[467, "term-In-Use-Tests"]], "lwr": [[467, "term-LWR"]], "liner": [[467, "term-Liner"]], "mpi": [[467, "term-MPI"]], "twr": [[467, "term-TWR"]], "unit tests": [[467, "term-Unit-Tests"]], "v&v": [[467, "term-V-V"]], "xtview": [[467, "term-XTVIEW"]], "assembly": [[467, "term-assembly"]], "block": [[467, "term-block"]], "burnup": [[467, "term-burnup"]], "cladding": [[467, "term-cladding"]], "component": [[467, "term-component"]], "grid plate": [[467, "term-grid-plate"]], "interface": [[467, "term-interface"]], "material": [[467, "term-material"]], "node": [[467, "term-node"]], "operator": [[467, "term-operator"]], "parameter": [[467, "term-parameter"]], "plenum": [[467, "term-plenum"]], "reactor": [[467, "term-reactor"]], "reactor state": [[467, "term-reactor-state"]], "smear density": [[467, "term-smear-density"]]}})