Search.setIndex({"docnames": [".apidocs/armi", ".apidocs/armi.apps", ".apidocs/armi.bookkeeping", ".apidocs/armi.bookkeeping.db", ".apidocs/armi.bookkeeping.db.compareDB3", ".apidocs/armi.bookkeeping.db.database3", ".apidocs/armi.bookkeeping.db.databaseInterface", ".apidocs/armi.bookkeeping.db.factory", ".apidocs/armi.bookkeeping.db.layout", ".apidocs/armi.bookkeeping.db.permissions", ".apidocs/armi.bookkeeping.db.tests", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3", ".apidocs/armi.bookkeeping.db.tests.test_database3", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface", ".apidocs/armi.bookkeeping.db.tests.test_layout", ".apidocs/armi.bookkeeping.db.typedefs", ".apidocs/armi.bookkeeping.historyTracker", ".apidocs/armi.bookkeeping.mainInterface", ".apidocs/armi.bookkeeping.memoryProfiler", ".apidocs/armi.bookkeeping.report", ".apidocs/armi.bookkeeping.report.data", ".apidocs/armi.bookkeeping.report.html", ".apidocs/armi.bookkeeping.report.newReportUtils", ".apidocs/armi.bookkeeping.report.newReports", ".apidocs/armi.bookkeeping.report.reportInterface", ".apidocs/armi.bookkeeping.report.reportingUtils", ".apidocs/armi.bookkeeping.report.tests", ".apidocs/armi.bookkeeping.report.tests.test_newReport", ".apidocs/armi.bookkeeping.report.tests.test_report", ".apidocs/armi.bookkeeping.snapshotInterface", ".apidocs/armi.bookkeeping.tests", ".apidocs/armi.bookkeeping.tests.test_historyTracker", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler", ".apidocs/armi.bookkeeping.tests.test_snapshot", ".apidocs/armi.bookkeeping.visualization", ".apidocs/armi.bookkeeping.visualization.dumper", ".apidocs/armi.bookkeeping.visualization.entryPoint", ".apidocs/armi.bookkeeping.visualization.tests", ".apidocs/armi.bookkeeping.visualization.tests.test_vis", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf", ".apidocs/armi.bookkeeping.visualization.utils", ".apidocs/armi.bookkeeping.visualization.vtk", ".apidocs/armi.bookkeeping.visualization.xdmf", ".apidocs/armi.cases", ".apidocs/armi.cases.case", ".apidocs/armi.cases.inputModifiers", ".apidocs/armi.cases.inputModifiers.inputModifiers", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers", ".apidocs/armi.cases.inputModifiers.tests", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers", ".apidocs/armi.cases.suite", ".apidocs/armi.cases.suiteBuilder", ".apidocs/armi.cases.tests", ".apidocs/armi.cases.tests.test_cases", ".apidocs/armi.cases.tests.test_suiteBuilder", ".apidocs/armi.cli", ".apidocs/armi.cli.checkInputs", ".apidocs/armi.cli.cleanTemps", ".apidocs/armi.cli.clone", ".apidocs/armi.cli.compareCases", ".apidocs/armi.cli.database", ".apidocs/armi.cli.entryPoint", ".apidocs/armi.cli.gridGui", ".apidocs/armi.cli.migrateInputs", ".apidocs/armi.cli.modify", ".apidocs/armi.cli.reportsEntryPoint", ".apidocs/armi.cli.run", ".apidocs/armi.cli.runSuite", ".apidocs/armi.cli.tests", ".apidocs/armi.cli.tests.test_runEntryPoint", ".apidocs/armi.cli.tests.test_runSuite", ".apidocs/armi.conftest", ".apidocs/armi.context", ".apidocs/armi.interfaces", ".apidocs/armi.materials", ".apidocs/armi.materials.air", ".apidocs/armi.materials.alloy200", ".apidocs/armi.materials.b4c", ".apidocs/armi.materials.be9", ".apidocs/armi.materials.caH2", ".apidocs/armi.materials.californium", ".apidocs/armi.materials.concrete", ".apidocs/armi.materials.copper", ".apidocs/armi.materials.cs", ".apidocs/armi.materials.custom", ".apidocs/armi.materials.graphite", ".apidocs/armi.materials.hafnium", ".apidocs/armi.materials.hastelloyN", ".apidocs/armi.materials.ht9", ".apidocs/armi.materials.inconel", ".apidocs/armi.materials.inconel600", ".apidocs/armi.materials.inconel625", ".apidocs/armi.materials.inconel800", ".apidocs/armi.materials.inconelPE16", ".apidocs/armi.materials.inconelX750", ".apidocs/armi.materials.lead", ".apidocs/armi.materials.leadBismuth", ".apidocs/armi.materials.lithium", ".apidocs/armi.materials.magnesium", ".apidocs/armi.materials.material", ".apidocs/armi.materials.mgO", ".apidocs/armi.materials.mixture", ".apidocs/armi.materials.molybdenum", ".apidocs/armi.materials.mox", ".apidocs/armi.materials.nZ", ".apidocs/armi.materials.potassium", ".apidocs/armi.materials.scandiumOxide", ".apidocs/armi.materials.siC", ".apidocs/armi.materials.sodium", ".apidocs/armi.materials.sodiumChloride", ".apidocs/armi.materials.sulfur", ".apidocs/armi.materials.tZM", ".apidocs/armi.materials.tantalum", ".apidocs/armi.materials.tests", ".apidocs/armi.materials.tests.test__init__", ".apidocs/armi.materials.tests.test_air", ".apidocs/armi.materials.tests.test_b4c", ".apidocs/armi.materials.tests.test_be9", ".apidocs/armi.materials.tests.test_graphite", ".apidocs/armi.materials.tests.test_lithium", ".apidocs/armi.materials.tests.test_materials", ".apidocs/armi.materials.tests.test_sic", ".apidocs/armi.materials.tests.test_sulfur", ".apidocs/armi.materials.tests.test_thoriumOxide", ".apidocs/armi.materials.tests.test_uZr", ".apidocs/armi.materials.tests.test_water", ".apidocs/armi.materials.thU", ".apidocs/armi.materials.thorium", ".apidocs/armi.materials.thoriumOxide", ".apidocs/armi.materials.uThZr", ".apidocs/armi.materials.uZr", ".apidocs/armi.materials.uranium", ".apidocs/armi.materials.uraniumOxide", ".apidocs/armi.materials.void", ".apidocs/armi.materials.water", ".apidocs/armi.materials.yttriumOxide", ".apidocs/armi.materials.zincOxide", ".apidocs/armi.materials.zr", ".apidocs/armi.meta", ".apidocs/armi.mpiActions", ".apidocs/armi.nucDirectory", ".apidocs/armi.nucDirectory.elements", ".apidocs/armi.nucDirectory.nucDir", ".apidocs/armi.nucDirectory.nuclideBases", ".apidocs/armi.nucDirectory.tests", ".apidocs/armi.nucDirectory.tests.test_elements", ".apidocs/armi.nucDirectory.tests.test_nucDirectory", ".apidocs/armi.nucDirectory.tests.test_nuclideBases", ".apidocs/armi.nucDirectory.tests.test_thermalScattering", ".apidocs/armi.nucDirectory.tests.test_transmutations", ".apidocs/armi.nucDirectory.thermalScattering", ".apidocs/armi.nucDirectory.transmutations", ".apidocs/armi.nuclearDataIO", ".apidocs/armi.nuclearDataIO.cccc", ".apidocs/armi.nuclearDataIO.cccc.cccc", ".apidocs/armi.nuclearDataIO.cccc.compxs", ".apidocs/armi.nuclearDataIO.cccc.dif3d", ".apidocs/armi.nuclearDataIO.cccc.dlayxs", ".apidocs/armi.nuclearDataIO.cccc.fixsrc", ".apidocs/armi.nuclearDataIO.cccc.gamiso", ".apidocs/armi.nuclearDataIO.cccc.geodst", ".apidocs/armi.nuclearDataIO.cccc.isotxs", ".apidocs/armi.nuclearDataIO.cccc.labels", ".apidocs/armi.nuclearDataIO.cccc.nhflux", ".apidocs/armi.nuclearDataIO.cccc.pmatrx", ".apidocs/armi.nuclearDataIO.cccc.pwdint", ".apidocs/armi.nuclearDataIO.cccc.rtflux", ".apidocs/armi.nuclearDataIO.cccc.rzflux", ".apidocs/armi.nuclearDataIO.cccc.tests", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata", ".apidocs/armi.nuclearDataIO.tests", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides", ".apidocs/armi.nuclearDataIO.xsCollections", ".apidocs/armi.nuclearDataIO.xsLibraries", ".apidocs/armi.nuclearDataIO.xsNuclides", ".apidocs/armi.operators", ".apidocs/armi.operators.operator", ".apidocs/armi.operators.operatorMPI", ".apidocs/armi.operators.runTypes", ".apidocs/armi.operators.settingsValidation", ".apidocs/armi.operators.snapshots", ".apidocs/armi.operators.tests", ".apidocs/armi.operators.tests.test_inspectors", ".apidocs/armi.operators.tests.test_operatorSnapshots", ".apidocs/armi.operators.tests.test_operators", ".apidocs/armi.physics", ".apidocs/armi.physics.constants", ".apidocs/armi.physics.executers", ".apidocs/armi.physics.fuelCycle", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface", ".apidocs/armi.physics.fuelCycle.fuelHandlers", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelCycle.settings", ".apidocs/armi.physics.fuelCycle.tests", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils", ".apidocs/armi.physics.fuelPerformance", ".apidocs/armi.physics.fuelPerformance.executers", ".apidocs/armi.physics.fuelPerformance.parameters", ".apidocs/armi.physics.fuelPerformance.plugin", ".apidocs/armi.physics.fuelPerformance.settings", ".apidocs/armi.physics.fuelPerformance.tests", ".apidocs/armi.physics.fuelPerformance.tests.test_executers", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils", ".apidocs/armi.physics.fuelPerformance.utils", ".apidocs/armi.physics.neutronics", ".apidocs/armi.physics.neutronics.const", ".apidocs/armi.physics.neutronics.crossSectionGroupManager", ".apidocs/armi.physics.neutronics.crossSectionSettings", ".apidocs/armi.physics.neutronics.diffIsotxs", ".apidocs/armi.physics.neutronics.energyGroups", ".apidocs/armi.physics.neutronics.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct", ".apidocs/armi.physics.neutronics.fissionProductModel.tests", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct", ".apidocs/armi.physics.neutronics.globalFlux", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface", ".apidocs/armi.physics.neutronics.globalFlux.tests", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface", ".apidocs/armi.physics.neutronics.isotopicDepletion", ".apidocs/armi.physics.neutronics.isotopicDepletion.crossSectionTable", ".apidocs/armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface", ".apidocs/armi.physics.neutronics.latticePhysics", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter", ".apidocs/armi.physics.neutronics.latticePhysics.tests", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.parameters", ".apidocs/armi.physics.neutronics.reports", ".apidocs/armi.physics.neutronics.settings", ".apidocs/armi.physics.neutronics.tests", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable", ".apidocs/armi.physics.neutronics.tests.test_energyGroups", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin", ".apidocs/armi.physics.safety", ".apidocs/armi.physics.safety.settings", ".apidocs/armi.physics.tests", ".apidocs/armi.physics.tests.test_executers", ".apidocs/armi.physics.thermalHydraulics", ".apidocs/armi.physics.thermalHydraulics.const", ".apidocs/armi.physics.thermalHydraulics.parameters", ".apidocs/armi.physics.thermalHydraulics.plugin", ".apidocs/armi.physics.thermalHydraulics.settings", ".apidocs/armi.pluginManager", ".apidocs/armi.plugins", ".apidocs/armi.reactor", ".apidocs/armi.reactor.assemblies", ".apidocs/armi.reactor.assemblyLists", ".apidocs/armi.reactor.assemblyParameters", ".apidocs/armi.reactor.blockParameters", ".apidocs/armi.reactor.blocks", ".apidocs/armi.reactor.blueprints", ".apidocs/armi.reactor.blueprints.assemblyBlueprint", ".apidocs/armi.reactor.blueprints.blockBlueprint", ".apidocs/armi.reactor.blueprints.componentBlueprint", ".apidocs/armi.reactor.blueprints.gridBlueprint", ".apidocs/armi.reactor.blueprints.isotopicOptions", ".apidocs/armi.reactor.blueprints.reactorBlueprint", ".apidocs/armi.reactor.blueprints.tests", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_blueprints", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints", ".apidocs/armi.reactor.components", ".apidocs/armi.reactor.components.basicShapes", ".apidocs/armi.reactor.components.complexShapes", ".apidocs/armi.reactor.components.component", ".apidocs/armi.reactor.components.componentParameters", ".apidocs/armi.reactor.components.volumetricShapes", ".apidocs/armi.reactor.composites", ".apidocs/armi.reactor.converters", ".apidocs/armi.reactor.converters.axialExpansionChanger", ".apidocs/armi.reactor.converters.blockConverters", ".apidocs/armi.reactor.converters.geometryConverters", ".apidocs/armi.reactor.converters.meshConverters", ".apidocs/armi.reactor.converters.parameterSweeps", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters", ".apidocs/armi.reactor.converters.pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger", ".apidocs/armi.reactor.converters.tests.test_blockConverter", ".apidocs/armi.reactor.converters.tests.test_geometryConverters", ".apidocs/armi.reactor.converters.tests.test_meshConverters", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters", ".apidocs/armi.reactor.converters.tests.test_uniformMesh", ".apidocs/armi.reactor.converters.uniformMesh", ".apidocs/armi.reactor.flags", ".apidocs/armi.reactor.geometry", ".apidocs/armi.reactor.grids", ".apidocs/armi.reactor.grids.axial", ".apidocs/armi.reactor.grids.cartesian", ".apidocs/armi.reactor.grids.constants", ".apidocs/armi.reactor.grids.grid", ".apidocs/armi.reactor.grids.hexagonal", ".apidocs/armi.reactor.grids.locations", ".apidocs/armi.reactor.grids.structuredgrid", ".apidocs/armi.reactor.grids.thetarz", ".apidocs/armi.reactor.parameters", ".apidocs/armi.reactor.parameters.exceptions", ".apidocs/armi.reactor.parameters.parameterCollections", ".apidocs/armi.reactor.parameters.parameterDefinitions", ".apidocs/armi.reactor.parameters.resolveCollections", ".apidocs/armi.reactor.reactorParameters", ".apidocs/armi.reactor.reactors", ".apidocs/armi.reactor.systemLayoutInput", ".apidocs/armi.reactor.tests", ".apidocs/armi.reactor.tests.test_assemblies", ".apidocs/armi.reactor.tests.test_blocks", ".apidocs/armi.reactor.tests.test_components", ".apidocs/armi.reactor.tests.test_composites", ".apidocs/armi.reactor.tests.test_flags", ".apidocs/armi.reactor.tests.test_geometry", ".apidocs/armi.reactor.tests.test_parameters", ".apidocs/armi.reactor.tests.test_reactors", ".apidocs/armi.reactor.tests.test_rz_reactors", ".apidocs/armi.reactor.tests.test_zones", ".apidocs/armi.reactor.zones", ".apidocs/armi.runLog", ".apidocs/armi.scripts", ".apidocs/armi.scripts.migration", ".apidocs/armi.scripts.migration.base", ".apidocs/armi.scripts.migration.crossSectionBlueprintsToSettings", ".apidocs/armi.scripts.migration.m0_1_0_newDbFormat", ".apidocs/armi.scripts.migration.m0_1_3", ".apidocs/armi.scripts.migration.m0_1_6_locationLabels", ".apidocs/armi.scripts.migration.tests", ".apidocs/armi.scripts.migration.tests.test_m0_1_6_locationLabels", ".apidocs/armi.settings", ".apidocs/armi.settings.caseSettings", ".apidocs/armi.settings.fwSettings", ".apidocs/armi.settings.fwSettings.databaseSettings", ".apidocs/armi.settings.fwSettings.globalSettings", ".apidocs/armi.settings.fwSettings.reportSettings", ".apidocs/armi.settings.fwSettings.tightCouplingSettings", ".apidocs/armi.settings.setting", ".apidocs/armi.settings.settingsIO", ".apidocs/armi.settings.tests", ".apidocs/armi.settings.tests.test_settings", ".apidocs/armi.settings.tests.test_settingsIO", ".apidocs/armi.tests", ".apidocs/armi.tests.mockRunLogs", ".apidocs/armi.tests.refSmallReactorShuffleLogic", ".apidocs/armi.tests.test_apps", ".apidocs/armi.tests.test_armiTestHelper", ".apidocs/armi.tests.test_cartesian", ".apidocs/armi.tests.test_interfaces", ".apidocs/armi.tests.test_lwrInputs", ".apidocs/armi.tests.test_mpiActions", ".apidocs/armi.tests.test_mpiFeatures", ".apidocs/armi.tests.test_notebooks", ".apidocs/armi.tests.test_plugins", ".apidocs/armi.tests.test_runLog", ".apidocs/armi.tests.test_tests", ".apidocs/armi.tests.test_user_plugins", ".apidocs/armi.utils", ".apidocs/armi.utils.asciimaps", ".apidocs/armi.utils.codeTiming", ".apidocs/armi.utils.customExceptions", ".apidocs/armi.utils.densityTools", ".apidocs/armi.utils.directoryChangers", ".apidocs/armi.utils.directoryChangersMpi", ".apidocs/armi.utils.dochelpers", ".apidocs/armi.utils.dynamicImporter", ".apidocs/armi.utils.flags", ".apidocs/armi.utils.gridEditor", ".apidocs/armi.utils.hexagon", ".apidocs/armi.utils.iterables", ".apidocs/armi.utils.mathematics", ".apidocs/armi.utils.outputCache", ".apidocs/armi.utils.parsing", ".apidocs/armi.utils.pathTools", ".apidocs/armi.utils.plotting", ".apidocs/armi.utils.properties", ".apidocs/armi.utils.reportPlotting", ".apidocs/armi.utils.tests", ".apidocs/armi.utils.tests.test_asciimaps", ".apidocs/armi.utils.tests.test_codeTiming", ".apidocs/armi.utils.tests.test_custom_exceptions", ".apidocs/armi.utils.tests.test_densityTools", ".apidocs/armi.utils.tests.test_directoryChangers", ".apidocs/armi.utils.tests.test_dochelpers", ".apidocs/armi.utils.tests.test_flags", ".apidocs/armi.utils.tests.test_iterables", ".apidocs/armi.utils.tests.test_mathematics", ".apidocs/armi.utils.tests.test_outputCache", ".apidocs/armi.utils.tests.test_parsing", ".apidocs/armi.utils.tests.test_pathTools", ".apidocs/armi.utils.tests.test_plotting", ".apidocs/armi.utils.tests.test_properties", ".apidocs/armi.utils.tests.test_reportPlotting", ".apidocs/armi.utils.tests.test_textProcessors", ".apidocs/armi.utils.tests.test_triangle", ".apidocs/armi.utils.tests.test_units", ".apidocs/armi.utils.tests.test_utils", ".apidocs/armi.utils.textProcessors", ".apidocs/armi.utils.triangle", ".apidocs/armi.utils.units", ".apidocs/modules", "developer/documenting", "developer/entrypoints", "developer/first_time_contributors", "developer/guide", "developer/index", "developer/making_armi_based_apps", "developer/parallel_coding", "developer/profiling", "developer/reports", "developer/standards_and_practices", "developer/tooling", "gallery-src/README", "gallery-src/analysis/README", "gallery-src/applications/README", "gallery-src/framework/README", "gallery/analysis/index", "gallery/analysis/run_blockMcnpMaterialCard", "gallery/analysis/run_hexBlockToRZConversion", "gallery/analysis/run_hexReactorToRZ", "gallery/analysis/sg_execution_times", "gallery/applications/index", "gallery/framework/index", "gallery/framework/run_blockVolumeFractions", "gallery/framework/run_chartOfNuclides", "gallery/framework/run_computeReactionRates", "gallery/framework/run_fuelManagement", "gallery/framework/run_grids1_hex", "gallery/framework/run_grids2_cartesian", "gallery/framework/run_grids3_rzt", "gallery/framework/run_isotxs", "gallery/framework/run_isotxs2_matrix", "gallery/framework/run_materials", "gallery/framework/run_programmaticReactorDefinition", "gallery/framework/run_reactorFacemap", "gallery/framework/run_transmutationMatrix", "gallery/framework/sg_execution_times", "gallery/index", "glossary", "index", "installation", "release/0.1", "release/0.2", "release/index", "requirements/index", "requirements/sdid", "requirements/srsd", "requirements/str", "tutorials/data_model", "tutorials/index", "tutorials/making_your_first_app", "tutorials/materials_demo", "tutorials/nuclide_demo", "tutorials/param_sweep", "tutorials/walkthrough_inputs", "tutorials/walkthrough_lwr_inputs", "user/_gallery/index", "user/accessingEntryPoints", "user/assembly_parameters_report", "user/block_parameters_report", "user/component_parameters_report", "user/core_parameters_report", "user/index", "user/inputs/blueprints", "user/inputs/fuel_management", "user/inputs/index", "user/inputs/settings", "user/inputs/settings_report", "user/manual_data_access", "user/outputs/database", "user/outputs/index", "user/outputs/stdout", "user/physics_coupling", "user/radial_and_axial_expansion", "user/reactor_parameters_report", "user/user_install"], "filenames": [".apidocs/armi.rst", ".apidocs/armi.apps.rst", ".apidocs/armi.bookkeeping.rst", ".apidocs/armi.bookkeeping.db.rst", ".apidocs/armi.bookkeeping.db.compareDB3.rst", ".apidocs/armi.bookkeeping.db.database3.rst", ".apidocs/armi.bookkeeping.db.databaseInterface.rst", ".apidocs/armi.bookkeeping.db.factory.rst", ".apidocs/armi.bookkeeping.db.layout.rst", ".apidocs/armi.bookkeeping.db.permissions.rst", ".apidocs/armi.bookkeeping.db.tests.rst", ".apidocs/armi.bookkeeping.db.tests.test_comparedb3.rst", ".apidocs/armi.bookkeeping.db.tests.test_database3.rst", ".apidocs/armi.bookkeeping.db.tests.test_databaseInterface.rst", ".apidocs/armi.bookkeeping.db.tests.test_layout.rst", ".apidocs/armi.bookkeeping.db.typedefs.rst", ".apidocs/armi.bookkeeping.historyTracker.rst", ".apidocs/armi.bookkeeping.mainInterface.rst", ".apidocs/armi.bookkeeping.memoryProfiler.rst", ".apidocs/armi.bookkeeping.report.rst", ".apidocs/armi.bookkeeping.report.data.rst", ".apidocs/armi.bookkeeping.report.html.rst", ".apidocs/armi.bookkeeping.report.newReportUtils.rst", ".apidocs/armi.bookkeeping.report.newReports.rst", ".apidocs/armi.bookkeeping.report.reportInterface.rst", ".apidocs/armi.bookkeeping.report.reportingUtils.rst", ".apidocs/armi.bookkeeping.report.tests.rst", ".apidocs/armi.bookkeeping.report.tests.test_newReport.rst", ".apidocs/armi.bookkeeping.report.tests.test_report.rst", ".apidocs/armi.bookkeeping.snapshotInterface.rst", ".apidocs/armi.bookkeeping.tests.rst", ".apidocs/armi.bookkeeping.tests.test_historyTracker.rst", ".apidocs/armi.bookkeeping.tests.test_memoryProfiler.rst", ".apidocs/armi.bookkeeping.tests.test_snapshot.rst", ".apidocs/armi.bookkeeping.visualization.rst", ".apidocs/armi.bookkeeping.visualization.dumper.rst", ".apidocs/armi.bookkeeping.visualization.entryPoint.rst", ".apidocs/armi.bookkeeping.visualization.tests.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_vis.rst", ".apidocs/armi.bookkeeping.visualization.tests.test_xdmf.rst", ".apidocs/armi.bookkeeping.visualization.utils.rst", ".apidocs/armi.bookkeeping.visualization.vtk.rst", ".apidocs/armi.bookkeeping.visualization.xdmf.rst", ".apidocs/armi.cases.rst", ".apidocs/armi.cases.case.rst", ".apidocs/armi.cases.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.neutronicsModifiers.rst", ".apidocs/armi.cases.inputModifiers.pinTypeInputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.rst", ".apidocs/armi.cases.inputModifiers.tests.test_inputModifiers.rst", ".apidocs/armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.rst", ".apidocs/armi.cases.suite.rst", ".apidocs/armi.cases.suiteBuilder.rst", ".apidocs/armi.cases.tests.rst", ".apidocs/armi.cases.tests.test_cases.rst", ".apidocs/armi.cases.tests.test_suiteBuilder.rst", ".apidocs/armi.cli.rst", ".apidocs/armi.cli.checkInputs.rst", ".apidocs/armi.cli.cleanTemps.rst", ".apidocs/armi.cli.clone.rst", ".apidocs/armi.cli.compareCases.rst", ".apidocs/armi.cli.database.rst", ".apidocs/armi.cli.entryPoint.rst", ".apidocs/armi.cli.gridGui.rst", ".apidocs/armi.cli.migrateInputs.rst", ".apidocs/armi.cli.modify.rst", ".apidocs/armi.cli.reportsEntryPoint.rst", ".apidocs/armi.cli.run.rst", ".apidocs/armi.cli.runSuite.rst", ".apidocs/armi.cli.tests.rst", ".apidocs/armi.cli.tests.test_runEntryPoint.rst", ".apidocs/armi.cli.tests.test_runSuite.rst", ".apidocs/armi.conftest.rst", ".apidocs/armi.context.rst", ".apidocs/armi.interfaces.rst", ".apidocs/armi.materials.rst", ".apidocs/armi.materials.air.rst", ".apidocs/armi.materials.alloy200.rst", ".apidocs/armi.materials.b4c.rst", ".apidocs/armi.materials.be9.rst", ".apidocs/armi.materials.caH2.rst", ".apidocs/armi.materials.californium.rst", ".apidocs/armi.materials.concrete.rst", ".apidocs/armi.materials.copper.rst", ".apidocs/armi.materials.cs.rst", ".apidocs/armi.materials.custom.rst", ".apidocs/armi.materials.graphite.rst", ".apidocs/armi.materials.hafnium.rst", ".apidocs/armi.materials.hastelloyN.rst", ".apidocs/armi.materials.ht9.rst", ".apidocs/armi.materials.inconel.rst", ".apidocs/armi.materials.inconel600.rst", ".apidocs/armi.materials.inconel625.rst", ".apidocs/armi.materials.inconel800.rst", ".apidocs/armi.materials.inconelPE16.rst", ".apidocs/armi.materials.inconelX750.rst", ".apidocs/armi.materials.lead.rst", ".apidocs/armi.materials.leadBismuth.rst", ".apidocs/armi.materials.lithium.rst", ".apidocs/armi.materials.magnesium.rst", ".apidocs/armi.materials.material.rst", ".apidocs/armi.materials.mgO.rst", ".apidocs/armi.materials.mixture.rst", ".apidocs/armi.materials.molybdenum.rst", ".apidocs/armi.materials.mox.rst", ".apidocs/armi.materials.nZ.rst", ".apidocs/armi.materials.potassium.rst", ".apidocs/armi.materials.scandiumOxide.rst", ".apidocs/armi.materials.siC.rst", ".apidocs/armi.materials.sodium.rst", ".apidocs/armi.materials.sodiumChloride.rst", ".apidocs/armi.materials.sulfur.rst", ".apidocs/armi.materials.tZM.rst", ".apidocs/armi.materials.tantalum.rst", ".apidocs/armi.materials.tests.rst", ".apidocs/armi.materials.tests.test__init__.rst", ".apidocs/armi.materials.tests.test_air.rst", ".apidocs/armi.materials.tests.test_b4c.rst", ".apidocs/armi.materials.tests.test_be9.rst", ".apidocs/armi.materials.tests.test_graphite.rst", ".apidocs/armi.materials.tests.test_lithium.rst", ".apidocs/armi.materials.tests.test_materials.rst", ".apidocs/armi.materials.tests.test_sic.rst", ".apidocs/armi.materials.tests.test_sulfur.rst", ".apidocs/armi.materials.tests.test_thoriumOxide.rst", ".apidocs/armi.materials.tests.test_uZr.rst", ".apidocs/armi.materials.tests.test_water.rst", ".apidocs/armi.materials.thU.rst", ".apidocs/armi.materials.thorium.rst", ".apidocs/armi.materials.thoriumOxide.rst", ".apidocs/armi.materials.uThZr.rst", ".apidocs/armi.materials.uZr.rst", ".apidocs/armi.materials.uranium.rst", ".apidocs/armi.materials.uraniumOxide.rst", ".apidocs/armi.materials.void.rst", ".apidocs/armi.materials.water.rst", ".apidocs/armi.materials.yttriumOxide.rst", ".apidocs/armi.materials.zincOxide.rst", ".apidocs/armi.materials.zr.rst", ".apidocs/armi.meta.rst", ".apidocs/armi.mpiActions.rst", ".apidocs/armi.nucDirectory.rst", ".apidocs/armi.nucDirectory.elements.rst", ".apidocs/armi.nucDirectory.nucDir.rst", ".apidocs/armi.nucDirectory.nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.rst", ".apidocs/armi.nucDirectory.tests.test_elements.rst", ".apidocs/armi.nucDirectory.tests.test_nucDirectory.rst", ".apidocs/armi.nucDirectory.tests.test_nuclideBases.rst", ".apidocs/armi.nucDirectory.tests.test_thermalScattering.rst", ".apidocs/armi.nucDirectory.tests.test_transmutations.rst", ".apidocs/armi.nucDirectory.thermalScattering.rst", ".apidocs/armi.nucDirectory.transmutations.rst", ".apidocs/armi.nuclearDataIO.rst", ".apidocs/armi.nuclearDataIO.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.fixsrc.rst", ".apidocs/armi.nuclearDataIO.cccc.gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.labels.rst", ".apidocs/armi.nuclearDataIO.cccc.nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.rzflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_cccc.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_compxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dif3d.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_dlayxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_gamiso.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_geodst.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_isotxs.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_labels.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_nhflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pmatrx.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_pwdint.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rtflux.rst", ".apidocs/armi.nuclearDataIO.cccc.tests.test_rzflux.rst", ".apidocs/armi.nuclearDataIO.nuclearFileMetadata.rst", ".apidocs/armi.nuclearDataIO.tests.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsCollections.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsLibraries.rst", ".apidocs/armi.nuclearDataIO.tests.test_xsNuclides.rst", ".apidocs/armi.nuclearDataIO.xsCollections.rst", ".apidocs/armi.nuclearDataIO.xsLibraries.rst", ".apidocs/armi.nuclearDataIO.xsNuclides.rst", ".apidocs/armi.operators.rst", ".apidocs/armi.operators.operator.rst", ".apidocs/armi.operators.operatorMPI.rst", ".apidocs/armi.operators.runTypes.rst", ".apidocs/armi.operators.settingsValidation.rst", ".apidocs/armi.operators.snapshots.rst", ".apidocs/armi.operators.tests.rst", ".apidocs/armi.operators.tests.test_inspectors.rst", ".apidocs/armi.operators.tests.test_operatorSnapshots.rst", ".apidocs/armi.operators.tests.test_operators.rst", ".apidocs/armi.physics.rst", ".apidocs/armi.physics.constants.rst", ".apidocs/armi.physics.executers.rst", ".apidocs/armi.physics.fuelCycle.rst", ".apidocs/armi.physics.fuelCycle.assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerFactory.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlerInterface.rst", ".apidocs/armi.physics.fuelCycle.fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelCycle.settings.rst", ".apidocs/armi.physics.fuelCycle.tests.rst", ".apidocs/armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.rst", ".apidocs/armi.physics.fuelCycle.tests.test_fuelHandlers.rst", ".apidocs/armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.rst", ".apidocs/armi.physics.fuelPerformance.rst", ".apidocs/armi.physics.fuelPerformance.executers.rst", ".apidocs/armi.physics.fuelPerformance.parameters.rst", ".apidocs/armi.physics.fuelPerformance.plugin.rst", ".apidocs/armi.physics.fuelPerformance.settings.rst", ".apidocs/armi.physics.fuelPerformance.tests.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_executers.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.rst", ".apidocs/armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.rst", ".apidocs/armi.physics.fuelPerformance.utils.rst", ".apidocs/armi.physics.neutronics.rst", ".apidocs/armi.physics.neutronics.const.rst", ".apidocs/armi.physics.neutronics.crossSectionGroupManager.rst", ".apidocs/armi.physics.neutronics.crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.diffIsotxs.rst", ".apidocs/armi.physics.neutronics.energyGroups.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.rst", ".apidocs/armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.rst", ".apidocs/armi.physics.neutronics.globalFlux.rst", ".apidocs/armi.physics.neutronics.globalFlux.globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.rst", ".apidocs/armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.rst", ".apidocs/armi.physics.neutronics.isotopicDepletion.rst", ".apidocs/armi.physics.neutronics.isotopicDepletion.crossSectionTable.rst", ".apidocs/armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.latticePhysicsWriter.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.rst", ".apidocs/armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.rst", ".apidocs/armi.physics.neutronics.macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.parameters.rst", ".apidocs/armi.physics.neutronics.reports.rst", ".apidocs/armi.physics.neutronics.settings.rst", ".apidocs/armi.physics.neutronics.tests.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionManager.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionSettings.rst", ".apidocs/armi.physics.neutronics.tests.test_crossSectionTable.rst", ".apidocs/armi.physics.neutronics.tests.test_energyGroups.rst", ".apidocs/armi.physics.neutronics.tests.test_macroXSGenerationInterface.rst", ".apidocs/armi.physics.neutronics.tests.test_neutronicsPlugin.rst", ".apidocs/armi.physics.safety.rst", ".apidocs/armi.physics.safety.settings.rst", ".apidocs/armi.physics.tests.rst", ".apidocs/armi.physics.tests.test_executers.rst", ".apidocs/armi.physics.thermalHydraulics.rst", ".apidocs/armi.physics.thermalHydraulics.const.rst", ".apidocs/armi.physics.thermalHydraulics.parameters.rst", ".apidocs/armi.physics.thermalHydraulics.plugin.rst", ".apidocs/armi.physics.thermalHydraulics.settings.rst", ".apidocs/armi.pluginManager.rst", ".apidocs/armi.plugins.rst", ".apidocs/armi.reactor.rst", ".apidocs/armi.reactor.assemblies.rst", ".apidocs/armi.reactor.assemblyLists.rst", ".apidocs/armi.reactor.assemblyParameters.rst", ".apidocs/armi.reactor.blockParameters.rst", ".apidocs/armi.reactor.blocks.rst", ".apidocs/armi.reactor.blueprints.rst", ".apidocs/armi.reactor.blueprints.assemblyBlueprint.rst", ".apidocs/armi.reactor.blueprints.blockBlueprint.rst", ".apidocs/armi.reactor.blueprints.componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.gridBlueprint.rst", ".apidocs/armi.reactor.blueprints.isotopicOptions.rst", ".apidocs/armi.reactor.blueprints.reactorBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.rst", ".apidocs/armi.reactor.blueprints.tests.test_assemblyBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blockBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_blueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_componentBlueprint.rst", ".apidocs/armi.reactor.blueprints.tests.test_customIsotopics.rst", ".apidocs/armi.reactor.blueprints.tests.test_gridBlueprints.rst", ".apidocs/armi.reactor.blueprints.tests.test_materialModifications.rst", ".apidocs/armi.reactor.blueprints.tests.test_reactorBlueprints.rst", ".apidocs/armi.reactor.components.rst", ".apidocs/armi.reactor.components.basicShapes.rst", ".apidocs/armi.reactor.components.complexShapes.rst", ".apidocs/armi.reactor.components.component.rst", ".apidocs/armi.reactor.components.componentParameters.rst", ".apidocs/armi.reactor.components.volumetricShapes.rst", ".apidocs/armi.reactor.composites.rst", ".apidocs/armi.reactor.converters.rst", ".apidocs/armi.reactor.converters.axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.blockConverters.rst", ".apidocs/armi.reactor.converters.geometryConverters.rst", ".apidocs/armi.reactor.converters.meshConverters.rst", ".apidocs/armi.reactor.converters.parameterSweeps.rst", ".apidocs/armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.rst", ".apidocs/armi.reactor.converters.pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.rst", ".apidocs/armi.reactor.converters.tests.test_axialExpansionChanger.rst", ".apidocs/armi.reactor.converters.tests.test_blockConverter.rst", ".apidocs/armi.reactor.converters.tests.test_geometryConverters.rst", ".apidocs/armi.reactor.converters.tests.test_meshConverters.rst", ".apidocs/armi.reactor.converters.tests.test_pinTypeBlockConverters.rst", ".apidocs/armi.reactor.converters.tests.test_uniformMesh.rst", ".apidocs/armi.reactor.converters.uniformMesh.rst", ".apidocs/armi.reactor.flags.rst", ".apidocs/armi.reactor.geometry.rst", ".apidocs/armi.reactor.grids.rst", ".apidocs/armi.reactor.grids.axial.rst", ".apidocs/armi.reactor.grids.cartesian.rst", ".apidocs/armi.reactor.grids.constants.rst", ".apidocs/armi.reactor.grids.grid.rst", ".apidocs/armi.reactor.grids.hexagonal.rst", ".apidocs/armi.reactor.grids.locations.rst", ".apidocs/armi.reactor.grids.structuredgrid.rst", ".apidocs/armi.reactor.grids.thetarz.rst", ".apidocs/armi.reactor.parameters.rst", ".apidocs/armi.reactor.parameters.exceptions.rst", ".apidocs/armi.reactor.parameters.parameterCollections.rst", ".apidocs/armi.reactor.parameters.parameterDefinitions.rst", ".apidocs/armi.reactor.parameters.resolveCollections.rst", ".apidocs/armi.reactor.reactorParameters.rst", ".apidocs/armi.reactor.reactors.rst", ".apidocs/armi.reactor.systemLayoutInput.rst", ".apidocs/armi.reactor.tests.rst", ".apidocs/armi.reactor.tests.test_assemblies.rst", ".apidocs/armi.reactor.tests.test_blocks.rst", ".apidocs/armi.reactor.tests.test_components.rst", ".apidocs/armi.reactor.tests.test_composites.rst", ".apidocs/armi.reactor.tests.test_flags.rst", ".apidocs/armi.reactor.tests.test_geometry.rst", ".apidocs/armi.reactor.tests.test_parameters.rst", ".apidocs/armi.reactor.tests.test_reactors.rst", ".apidocs/armi.reactor.tests.test_rz_reactors.rst", ".apidocs/armi.reactor.tests.test_zones.rst", ".apidocs/armi.reactor.zones.rst", ".apidocs/armi.runLog.rst", ".apidocs/armi.scripts.rst", ".apidocs/armi.scripts.migration.rst", ".apidocs/armi.scripts.migration.base.rst", ".apidocs/armi.scripts.migration.crossSectionBlueprintsToSettings.rst", ".apidocs/armi.scripts.migration.m0_1_0_newDbFormat.rst", ".apidocs/armi.scripts.migration.m0_1_3.rst", ".apidocs/armi.scripts.migration.m0_1_6_locationLabels.rst", ".apidocs/armi.scripts.migration.tests.rst", ".apidocs/armi.scripts.migration.tests.test_m0_1_6_locationLabels.rst", ".apidocs/armi.settings.rst", ".apidocs/armi.settings.caseSettings.rst", ".apidocs/armi.settings.fwSettings.rst", ".apidocs/armi.settings.fwSettings.databaseSettings.rst", ".apidocs/armi.settings.fwSettings.globalSettings.rst", ".apidocs/armi.settings.fwSettings.reportSettings.rst", ".apidocs/armi.settings.fwSettings.tightCouplingSettings.rst", ".apidocs/armi.settings.setting.rst", ".apidocs/armi.settings.settingsIO.rst", ".apidocs/armi.settings.tests.rst", ".apidocs/armi.settings.tests.test_settings.rst", ".apidocs/armi.settings.tests.test_settingsIO.rst", ".apidocs/armi.tests.rst", ".apidocs/armi.tests.mockRunLogs.rst", ".apidocs/armi.tests.refSmallReactorShuffleLogic.rst", ".apidocs/armi.tests.test_apps.rst", ".apidocs/armi.tests.test_armiTestHelper.rst", ".apidocs/armi.tests.test_cartesian.rst", ".apidocs/armi.tests.test_interfaces.rst", ".apidocs/armi.tests.test_lwrInputs.rst", ".apidocs/armi.tests.test_mpiActions.rst", ".apidocs/armi.tests.test_mpiFeatures.rst", ".apidocs/armi.tests.test_notebooks.rst", ".apidocs/armi.tests.test_plugins.rst", ".apidocs/armi.tests.test_runLog.rst", ".apidocs/armi.tests.test_tests.rst", ".apidocs/armi.tests.test_user_plugins.rst", ".apidocs/armi.utils.rst", ".apidocs/armi.utils.asciimaps.rst", ".apidocs/armi.utils.codeTiming.rst", ".apidocs/armi.utils.customExceptions.rst", ".apidocs/armi.utils.densityTools.rst", ".apidocs/armi.utils.directoryChangers.rst", ".apidocs/armi.utils.directoryChangersMpi.rst", ".apidocs/armi.utils.dochelpers.rst", ".apidocs/armi.utils.dynamicImporter.rst", ".apidocs/armi.utils.flags.rst", ".apidocs/armi.utils.gridEditor.rst", ".apidocs/armi.utils.hexagon.rst", ".apidocs/armi.utils.iterables.rst", ".apidocs/armi.utils.mathematics.rst", ".apidocs/armi.utils.outputCache.rst", ".apidocs/armi.utils.parsing.rst", ".apidocs/armi.utils.pathTools.rst", ".apidocs/armi.utils.plotting.rst", ".apidocs/armi.utils.properties.rst", ".apidocs/armi.utils.reportPlotting.rst", ".apidocs/armi.utils.tests.rst", ".apidocs/armi.utils.tests.test_asciimaps.rst", ".apidocs/armi.utils.tests.test_codeTiming.rst", ".apidocs/armi.utils.tests.test_custom_exceptions.rst", ".apidocs/armi.utils.tests.test_densityTools.rst", ".apidocs/armi.utils.tests.test_directoryChangers.rst", ".apidocs/armi.utils.tests.test_dochelpers.rst", ".apidocs/armi.utils.tests.test_flags.rst", ".apidocs/armi.utils.tests.test_iterables.rst", ".apidocs/armi.utils.tests.test_mathematics.rst", ".apidocs/armi.utils.tests.test_outputCache.rst", ".apidocs/armi.utils.tests.test_parsing.rst", ".apidocs/armi.utils.tests.test_pathTools.rst", ".apidocs/armi.utils.tests.test_plotting.rst", ".apidocs/armi.utils.tests.test_properties.rst", ".apidocs/armi.utils.tests.test_reportPlotting.rst", ".apidocs/armi.utils.tests.test_textProcessors.rst", ".apidocs/armi.utils.tests.test_triangle.rst", ".apidocs/armi.utils.tests.test_units.rst", ".apidocs/armi.utils.tests.test_utils.rst", ".apidocs/armi.utils.textProcessors.rst", ".apidocs/armi.utils.triangle.rst", ".apidocs/armi.utils.units.rst", ".apidocs/modules.rst", "developer/documenting.rst", "developer/entrypoints.rst", "developer/first_time_contributors.rst", "developer/guide.rst", "developer/index.rst", "developer/making_armi_based_apps.rst", "developer/parallel_coding.rst", "developer/profiling.rst", "developer/reports.rst", "developer/standards_and_practices.rst", "developer/tooling.rst", "gallery-src/README.rst", "gallery-src/analysis/README.rst", "gallery-src/applications/README.rst", "gallery-src/framework/README.rst", "gallery/analysis/index.rst", "gallery/analysis/run_blockMcnpMaterialCard.rst", "gallery/analysis/run_hexBlockToRZConversion.rst", "gallery/analysis/run_hexReactorToRZ.rst", "gallery/analysis/sg_execution_times.rst", "gallery/applications/index.rst", "gallery/framework/index.rst", "gallery/framework/run_blockVolumeFractions.rst", "gallery/framework/run_chartOfNuclides.rst", "gallery/framework/run_computeReactionRates.rst", "gallery/framework/run_fuelManagement.rst", "gallery/framework/run_grids1_hex.rst", "gallery/framework/run_grids2_cartesian.rst", "gallery/framework/run_grids3_rzt.rst", "gallery/framework/run_isotxs.rst", "gallery/framework/run_isotxs2_matrix.rst", "gallery/framework/run_materials.rst", "gallery/framework/run_programmaticReactorDefinition.rst", "gallery/framework/run_reactorFacemap.rst", "gallery/framework/run_transmutationMatrix.rst", "gallery/framework/sg_execution_times.rst", "gallery/index.rst", "glossary.rst", "index.rst", "installation.rst", "release/0.1.rst", "release/0.2.rst", "release/index.rst", "requirements/index.rst", "requirements/sdid.rst", "requirements/srsd.rst", "requirements/str.rst", "tutorials/data_model.nblink", "tutorials/index.rst", "tutorials/making_your_first_app.rst", "tutorials/materials_demo.ipynb", "tutorials/nuclide_demo.ipynb", "tutorials/param_sweep.nblink", "tutorials/walkthrough_inputs.rst", "tutorials/walkthrough_lwr_inputs.rst", "user/_gallery/index.rst", "user/accessingEntryPoints.rst", "user/assembly_parameters_report.rst", "user/block_parameters_report.rst", "user/component_parameters_report.rst", "user/core_parameters_report.rst", "user/index.rst", "user/inputs/blueprints.rst", "user/inputs/fuel_management.rst", "user/inputs/index.rst", "user/inputs/settings.rst", "user/inputs/settings_report.rst", "user/manual_data_access.rst", "user/outputs/database.rst", "user/outputs/index.rst", "user/outputs/stdout.rst", "user/physics_coupling.rst", "user/radial_and_axial_expansion.rst", "user/reactor_parameters_report.rst", "user/user_install.rst"], "titles": ["armi package", "armi.apps module", "armi.bookkeeping package", "armi.bookkeeping.db package", "armi.bookkeeping.db.compareDB3 module", "armi.bookkeeping.db.database3 module", "armi.bookkeeping.db.databaseInterface module", "armi.bookkeeping.db.factory module", "armi.bookkeeping.db.layout module", "armi.bookkeeping.db.permissions module", "armi.bookkeeping.db.tests package", "armi.bookkeeping.db.tests.test_comparedb3 module", "armi.bookkeeping.db.tests.test_database3 module", "armi.bookkeeping.db.tests.test_databaseInterface module", "armi.bookkeeping.db.tests.test_layout module", "armi.bookkeeping.db.typedefs module", "armi.bookkeeping.historyTracker module", "armi.bookkeeping.mainInterface module", "armi.bookkeeping.memoryProfiler module", "armi.bookkeeping.report package", "armi.bookkeeping.report.data module", "armi.bookkeeping.report.html module", "armi.bookkeeping.report.newReportUtils module", "armi.bookkeeping.report.newReports module", "armi.bookkeeping.report.reportInterface module", "armi.bookkeeping.report.reportingUtils module", "armi.bookkeeping.report.tests package", "armi.bookkeeping.report.tests.test_newReport module", "armi.bookkeeping.report.tests.test_report module", "armi.bookkeeping.snapshotInterface module", "armi.bookkeeping.tests package", "armi.bookkeeping.tests.test_historyTracker module", "armi.bookkeeping.tests.test_memoryProfiler module", "armi.bookkeeping.tests.test_snapshot module", "armi.bookkeeping.visualization package", "armi.bookkeeping.visualization.dumper module", "armi.bookkeeping.visualization.entryPoint module", "armi.bookkeeping.visualization.tests package", "armi.bookkeeping.visualization.tests.test_vis module", "armi.bookkeeping.visualization.tests.test_xdmf module", "armi.bookkeeping.visualization.utils module", "armi.bookkeeping.visualization.vtk module", "armi.bookkeeping.visualization.xdmf module", "armi.cases package", "armi.cases.case module", "armi.cases.inputModifiers package", "armi.cases.inputModifiers.inputModifiers module", "armi.cases.inputModifiers.neutronicsModifiers module", "armi.cases.inputModifiers.pinTypeInputModifiers module", "armi.cases.inputModifiers.tests package", "armi.cases.inputModifiers.tests.test_inputModifiers module", "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module", "armi.cases.suite module", "armi.cases.suiteBuilder module", "armi.cases.tests package", "armi.cases.tests.test_cases module", "armi.cases.tests.test_suiteBuilder module", "armi.cli package", "armi.cli.checkInputs module", "armi.cli.cleanTemps module", "armi.cli.clone module", "armi.cli.compareCases module", "armi.cli.database module", "armi.cli.entryPoint module", "armi.cli.gridGui module", "armi.cli.migrateInputs module", "armi.cli.modify module", "armi.cli.reportsEntryPoint module", "armi.cli.run module", "armi.cli.runSuite module", "armi.cli.tests package", "armi.cli.tests.test_runEntryPoint module", "armi.cli.tests.test_runSuite module", "armi.conftest module", "armi.context module", "armi.interfaces module", "armi.materials package", "armi.materials.air module", "armi.materials.alloy200 module", "armi.materials.b4c module", "armi.materials.be9 module", "armi.materials.caH2 module", "armi.materials.californium module", "armi.materials.concrete module", "armi.materials.copper module", "armi.materials.cs module", "armi.materials.custom module", "armi.materials.graphite module", "armi.materials.hafnium module", "armi.materials.hastelloyN module", "armi.materials.ht9 module", "armi.materials.inconel module", "armi.materials.inconel600 module", "armi.materials.inconel625 module", "armi.materials.inconel800 module", "armi.materials.inconelPE16 module", "armi.materials.inconelX750 module", "armi.materials.lead module", "armi.materials.leadBismuth module", "armi.materials.lithium module", "armi.materials.magnesium module", "armi.materials.material module", "armi.materials.mgO module", "armi.materials.mixture module", "armi.materials.molybdenum module", "armi.materials.mox module", "armi.materials.nZ module", "armi.materials.potassium module", "armi.materials.scandiumOxide module", "armi.materials.siC module", "armi.materials.sodium module", "armi.materials.sodiumChloride module", "armi.materials.sulfur module", "armi.materials.tZM module", "armi.materials.tantalum module", "armi.materials.tests package", "armi.materials.tests.test__init__ module", "armi.materials.tests.test_air module", "armi.materials.tests.test_b4c module", "armi.materials.tests.test_be9 module", "armi.materials.tests.test_graphite module", "armi.materials.tests.test_lithium module", "armi.materials.tests.test_materials module", "armi.materials.tests.test_sic module", "armi.materials.tests.test_sulfur module", "armi.materials.tests.test_thoriumOxide module", "armi.materials.tests.test_uZr module", "armi.materials.tests.test_water module", "armi.materials.thU module", "armi.materials.thorium module", "armi.materials.thoriumOxide module", "armi.materials.uThZr module", "armi.materials.uZr module", "armi.materials.uranium module", "armi.materials.uraniumOxide module", "armi.materials.void module", "armi.materials.water module", "armi.materials.yttriumOxide module", "armi.materials.zincOxide module", "armi.materials.zr module", "armi.meta module", "armi.mpiActions module", "armi.nucDirectory package", "armi.nucDirectory.elements module", "armi.nucDirectory.nucDir module", "armi.nucDirectory.nuclideBases module", "armi.nucDirectory.tests package", "armi.nucDirectory.tests.test_elements module", "armi.nucDirectory.tests.test_nucDirectory module", "armi.nucDirectory.tests.test_nuclideBases module", "armi.nucDirectory.tests.test_thermalScattering module", "armi.nucDirectory.tests.test_transmutations module", "armi.nucDirectory.thermalScattering module", "armi.nucDirectory.transmutations module", "armi.nuclearDataIO package", "armi.nuclearDataIO.cccc package", "armi.nuclearDataIO.cccc.cccc module", "armi.nuclearDataIO.cccc.compxs module", "armi.nuclearDataIO.cccc.dif3d module", "armi.nuclearDataIO.cccc.dlayxs module", "armi.nuclearDataIO.cccc.fixsrc module", "armi.nuclearDataIO.cccc.gamiso module", "armi.nuclearDataIO.cccc.geodst module", "armi.nuclearDataIO.cccc.isotxs module", "armi.nuclearDataIO.cccc.labels module", "armi.nuclearDataIO.cccc.nhflux module", "armi.nuclearDataIO.cccc.pmatrx module", "armi.nuclearDataIO.cccc.pwdint module", "armi.nuclearDataIO.cccc.rtflux module", "armi.nuclearDataIO.cccc.rzflux module", "armi.nuclearDataIO.cccc.tests package", "armi.nuclearDataIO.cccc.tests.test_cccc module", "armi.nuclearDataIO.cccc.tests.test_compxs module", "armi.nuclearDataIO.cccc.tests.test_dif3d module", "armi.nuclearDataIO.cccc.tests.test_dlayxs module", "armi.nuclearDataIO.cccc.tests.test_gamiso module", "armi.nuclearDataIO.cccc.tests.test_geodst module", "armi.nuclearDataIO.cccc.tests.test_isotxs module", "armi.nuclearDataIO.cccc.tests.test_labels module", "armi.nuclearDataIO.cccc.tests.test_nhflux module", "armi.nuclearDataIO.cccc.tests.test_pmatrx module", "armi.nuclearDataIO.cccc.tests.test_pwdint module", "armi.nuclearDataIO.cccc.tests.test_rtflux module", "armi.nuclearDataIO.cccc.tests.test_rzflux module", "armi.nuclearDataIO.nuclearFileMetadata module", "armi.nuclearDataIO.tests package", "armi.nuclearDataIO.tests.test_xsCollections module", "armi.nuclearDataIO.tests.test_xsLibraries module", "armi.nuclearDataIO.tests.test_xsNuclides module", "armi.nuclearDataIO.xsCollections module", "armi.nuclearDataIO.xsLibraries module", "armi.nuclearDataIO.xsNuclides module", "armi.operators package", "armi.operators.operator module", "armi.operators.operatorMPI module", "armi.operators.runTypes module", "armi.operators.settingsValidation module", "armi.operators.snapshots module", "armi.operators.tests package", "armi.operators.tests.test_inspectors module", "armi.operators.tests.test_operatorSnapshots module", "armi.operators.tests.test_operators module", "armi.physics package", "armi.physics.constants module", "armi.physics.executers module", "armi.physics.fuelCycle package", "armi.physics.fuelCycle.assemblyRotationAlgorithms module", "armi.physics.fuelCycle.fuelHandlerFactory module", "armi.physics.fuelCycle.fuelHandlerInterface module", "armi.physics.fuelCycle.fuelHandlers module", "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module", "armi.physics.fuelCycle.settings module", "armi.physics.fuelCycle.tests package", "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module", "armi.physics.fuelCycle.tests.test_fuelHandlers module", "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module", "armi.physics.fuelPerformance package", "armi.physics.fuelPerformance.executers module", "armi.physics.fuelPerformance.parameters module", "armi.physics.fuelPerformance.plugin module", "armi.physics.fuelPerformance.settings module", "armi.physics.fuelPerformance.tests package", "armi.physics.fuelPerformance.tests.test_executers module", "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module", "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module", "armi.physics.fuelPerformance.utils module", "armi.physics.neutronics package", "armi.physics.neutronics.const module", "armi.physics.neutronics.crossSectionGroupManager module", "armi.physics.neutronics.crossSectionSettings module", "armi.physics.neutronics.diffIsotxs module", "armi.physics.neutronics.energyGroups module", "armi.physics.neutronics.fissionProductModel package", "armi.physics.neutronics.fissionProductModel.fissionProductModel module", "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module", "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module", "armi.physics.neutronics.fissionProductModel.tests package", "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module", "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module", "armi.physics.neutronics.globalFlux package", "armi.physics.neutronics.globalFlux.globalFluxInterface module", "armi.physics.neutronics.globalFlux.tests package", "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module", "armi.physics.neutronics.isotopicDepletion package", "armi.physics.neutronics.isotopicDepletion.crossSectionTable module", "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface module", "armi.physics.neutronics.latticePhysics package", "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module", "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module", "armi.physics.neutronics.latticePhysics.tests package", "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module", "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module", "armi.physics.neutronics.macroXSGenerationInterface module", "armi.physics.neutronics.parameters module", "armi.physics.neutronics.reports module", "armi.physics.neutronics.settings module", "armi.physics.neutronics.tests package", "armi.physics.neutronics.tests.test_crossSectionManager module", "armi.physics.neutronics.tests.test_crossSectionSettings module", "armi.physics.neutronics.tests.test_crossSectionTable module", "armi.physics.neutronics.tests.test_energyGroups module", "armi.physics.neutronics.tests.test_macroXSGenerationInterface module", "armi.physics.neutronics.tests.test_neutronicsPlugin module", "armi.physics.safety package", "armi.physics.safety.settings module", "armi.physics.tests package", "armi.physics.tests.test_executers module", "armi.physics.thermalHydraulics package", "armi.physics.thermalHydraulics.const module", "armi.physics.thermalHydraulics.parameters module", "armi.physics.thermalHydraulics.plugin module", "armi.physics.thermalHydraulics.settings module", "armi.pluginManager module", "armi.plugins module", "armi.reactor package", "armi.reactor.assemblies module", "armi.reactor.assemblyLists module", "armi.reactor.assemblyParameters module", "armi.reactor.blockParameters module", "armi.reactor.blocks module", "armi.reactor.blueprints package", "armi.reactor.blueprints.assemblyBlueprint module", "armi.reactor.blueprints.blockBlueprint module", "armi.reactor.blueprints.componentBlueprint module", "armi.reactor.blueprints.gridBlueprint module", "armi.reactor.blueprints.isotopicOptions module", "armi.reactor.blueprints.reactorBlueprint module", "armi.reactor.blueprints.tests package", "armi.reactor.blueprints.tests.test_assemblyBlueprints module", "armi.reactor.blueprints.tests.test_blockBlueprints module", "armi.reactor.blueprints.tests.test_blueprints module", "armi.reactor.blueprints.tests.test_componentBlueprint module", "armi.reactor.blueprints.tests.test_customIsotopics module", "armi.reactor.blueprints.tests.test_gridBlueprints module", "armi.reactor.blueprints.tests.test_materialModifications module", "armi.reactor.blueprints.tests.test_reactorBlueprints module", "armi.reactor.components package", "armi.reactor.components.basicShapes module", "armi.reactor.components.complexShapes module", "armi.reactor.components.component module", "armi.reactor.components.componentParameters module", "armi.reactor.components.volumetricShapes module", "armi.reactor.composites module", "armi.reactor.converters package", "armi.reactor.converters.axialExpansionChanger module", "armi.reactor.converters.blockConverters module", "armi.reactor.converters.geometryConverters module", "armi.reactor.converters.meshConverters module", "armi.reactor.converters.parameterSweeps package", "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module", "armi.reactor.converters.pinTypeBlockConverters module", "armi.reactor.converters.tests package", "armi.reactor.converters.tests.test_axialExpansionChanger module", "armi.reactor.converters.tests.test_blockConverter module", "armi.reactor.converters.tests.test_geometryConverters module", "armi.reactor.converters.tests.test_meshConverters module", "armi.reactor.converters.tests.test_pinTypeBlockConverters module", "armi.reactor.converters.tests.test_uniformMesh module", "armi.reactor.converters.uniformMesh module", "armi.reactor.flags module", "armi.reactor.geometry module", "armi.reactor.grids package", "armi.reactor.grids.axial module", "armi.reactor.grids.cartesian module", "armi.reactor.grids.constants module", "armi.reactor.grids.grid module", "armi.reactor.grids.hexagonal module", "armi.reactor.grids.locations module", "armi.reactor.grids.structuredgrid module", "armi.reactor.grids.thetarz module", "armi.reactor.parameters package", "armi.reactor.parameters.exceptions module", "armi.reactor.parameters.parameterCollections module", "armi.reactor.parameters.parameterDefinitions module", "armi.reactor.parameters.resolveCollections module", "armi.reactor.reactorParameters module", "armi.reactor.reactors module", "armi.reactor.systemLayoutInput module", "armi.reactor.tests package", "armi.reactor.tests.test_assemblies module", "armi.reactor.tests.test_blocks module", "armi.reactor.tests.test_components module", "armi.reactor.tests.test_composites module", "armi.reactor.tests.test_flags module", "armi.reactor.tests.test_geometry module", "armi.reactor.tests.test_parameters module", "armi.reactor.tests.test_reactors module", "armi.reactor.tests.test_rz_reactors module", "armi.reactor.tests.test_zones module", "armi.reactor.zones module", "armi.runLog module", "armi.scripts package", "armi.scripts.migration package", "armi.scripts.migration.base module", "armi.scripts.migration.crossSectionBlueprintsToSettings module", "armi.scripts.migration.m0_1_0_newDbFormat module", "armi.scripts.migration.m0_1_3 module", "armi.scripts.migration.m0_1_6_locationLabels module", "armi.scripts.migration.tests package", "armi.scripts.migration.tests.test_m0_1_6_locationLabels module", "armi.settings package", "armi.settings.caseSettings module", "armi.settings.fwSettings package", "armi.settings.fwSettings.databaseSettings module", "armi.settings.fwSettings.globalSettings module", "armi.settings.fwSettings.reportSettings module", "armi.settings.fwSettings.tightCouplingSettings module", "armi.settings.setting module", "armi.settings.settingsIO module", "armi.settings.tests package", "armi.settings.tests.test_settings module", "armi.settings.tests.test_settingsIO module", "armi.tests package", "armi.tests.mockRunLogs module", "armi.tests.refSmallReactorShuffleLogic module", "armi.tests.test_apps module", "armi.tests.test_armiTestHelper module", "armi.tests.test_cartesian module", "armi.tests.test_interfaces module", "armi.tests.test_lwrInputs module", "armi.tests.test_mpiActions module", "armi.tests.test_mpiFeatures module", "armi.tests.test_notebooks module", "armi.tests.test_plugins module", "armi.tests.test_runLog module", "armi.tests.test_tests module", "armi.tests.test_user_plugins module", "armi.utils package", "armi.utils.asciimaps module", "armi.utils.codeTiming module", "armi.utils.customExceptions module", "armi.utils.densityTools module", "armi.utils.directoryChangers module", "armi.utils.directoryChangersMpi module", "armi.utils.dochelpers module", "armi.utils.dynamicImporter module", "armi.utils.flags module", "armi.utils.gridEditor module", "armi.utils.hexagon module", "armi.utils.iterables module", "armi.utils.mathematics module", "armi.utils.outputCache module", "armi.utils.parsing module", "armi.utils.pathTools module", "armi.utils.plotting module", "armi.utils.properties module", "armi.utils.reportPlotting module", "armi.utils.tests package", "armi.utils.tests.test_asciimaps module", "armi.utils.tests.test_codeTiming module", "armi.utils.tests.test_custom_exceptions module", "armi.utils.tests.test_densityTools module", "armi.utils.tests.test_directoryChangers module", "armi.utils.tests.test_dochelpers module", "armi.utils.tests.test_flags module", "armi.utils.tests.test_iterables module", "armi.utils.tests.test_mathematics module", "armi.utils.tests.test_outputCache module", "armi.utils.tests.test_parsing module", "armi.utils.tests.test_pathTools module", "armi.utils.tests.test_plotting module", "armi.utils.tests.test_properties module", "armi.utils.tests.test_reportPlotting module", "armi.utils.tests.test_textProcessors module", "armi.utils.tests.test_triangle module", "armi.utils.tests.test_units module", "armi.utils.tests.test_utils module", "armi.utils.textProcessors module", "armi.utils.triangle module", "armi.utils.units module", "armi", "<span class=\"section-number\">4. </span>Documenting ARMI", "<span class=\"section-number\">3. </span>Entry Points", "<span class=\"section-number\">8. </span>First Time Contributors Guide", "<span class=\"section-number\">1. </span>Framework Architecture", "Developer Docs", "<span class=\"section-number\">2. </span>Making ARMI-based Apps", "<span class=\"section-number\">5. </span>Parallel Code in ARMI", "<span class=\"section-number\">6. </span>Profiling ARMI", "<span class=\"section-number\">7. </span>Reports in ARMI", "<span class=\"section-number\">9. </span>Standards and Practices for Coding", "<span class=\"section-number\">10. </span>Tooling and Infrastructure", "Gallery", "Analysis", "Applications", "Framework", "Analysis", "Write MCNP Material Cards", "Hex block to RZ geometry conversion", "Hex reactor to RZ geometry conversion", "Computation times", "Applications", "Framework", "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion", "Plot a chart of the nuclides.", "Computing Reaction Rates on a Block.", "Fuel management in a LWR.", "Make a hex grid.", "Make a Cartesian grid.", "Make a Theta-R-Z grid.", "Plotting Multi-group XS from ISOTXS.", "Plotting a multi-group scatter matrix.", "Listing of Material Library.", "Build Reactor Inputs Programmatically.", "Plot a reactor facemap.", "Transmutation and decay reactions.", "Computation times", "Gallery", "Glossary", "ARMI", "Installation", "ARMI v0.1 Release Notes", "ARMI v0.2 Release Notes", "Release Notes", "Requirements", "<span class=\"section-number\">2. </span>Software Design and Implementation Document (SDID)", "<span class=\"section-number\">1. </span>Software Requirement Specification Document (SRSD)", "<span class=\"section-number\">3. </span>Software Test Report (STR)", "<span class=\"section-number\">5. </span>Hands-on at the ARMI Terminal", "Tutorials", "<span class=\"section-number\">6. </span>Making your first ARMI-based App", "<span class=\"section-number\">2. </span>The ARMI Material Library", "<span class=\"section-number\">1. </span>The ARMI Nuclide and Element Packages", "<span class=\"section-number\">7. </span>Parameter sweeps", "<span class=\"section-number\">3. </span>Building input files for a fast reactor", "<span class=\"section-number\">4. </span>Building input files for a thermal reactor", "Gallery", "<span class=\"section-number\">12. </span>Accessing Entry Points", "<span class=\"section-number\">8. </span>Assembly Parameters", "<span class=\"section-number\">9. </span>Block Parameters", "<span class=\"section-number\">7. </span>Component Parameters", "<span class=\"section-number\">6. </span>Core Parameters", "User Docs", "<span class=\"section-number\">2.2. </span>The Blueprints Input File", "<span class=\"section-number\">2.3. </span>Fuel Management Input", "<span class=\"section-number\">2. </span>Inputs", "<span class=\"section-number\">2.1. </span>The Settings Input File", "<span class=\"section-number\">2.4. </span>Settings Report", "<span class=\"section-number\">4. </span>Accessing Data in ARMI", "<span class=\"section-number\">3.2. </span>The Database File", "<span class=\"section-number\">3. </span>Outputs", "<span class=\"section-number\">3.1. </span>The Standard Output", "<span class=\"section-number\">10. </span>Physics Coupling", "<span class=\"section-number\">11. </span>Radial and Axial Expansion and Contraction", "<span class=\"section-number\">5. </span>Reactor Parameters", "<span class=\"section-number\">1. </span>Installation"], "terms": {"welcom": [0, 25, 303, 469, 472], "advanc": [0, 3, 7, 89, 228, 229, 302, 303, 366, 398, 468, 469, 470, 475, 478, 483, 495, 505], "reactor": [0, 2, 3, 5, 6, 8, 12, 13, 16, 17, 18, 22, 23, 25, 28, 29, 31, 35, 38, 40, 41, 42, 43, 44, 45, 55, 57, 58, 67, 75, 76, 79, 82, 86, 87, 89, 98, 101, 141, 145, 150, 154, 155, 156, 159, 160, 165, 166, 176, 181, 190, 192, 193, 201, 202, 204, 205, 206, 208, 209, 210, 215, 216, 217, 228, 233, 235, 240, 242, 245, 247, 254, 257, 273, 367, 372, 377, 378, 380, 381, 386, 387, 388, 391, 393, 396, 398, 406, 426, 430, 433, 435, 436, 437, 439, 440, 442, 445, 446, 447, 448, 450, 452, 453, 455, 456, 457, 458, 459, 465, 466, 467, 468, 469, 470, 471, 472, 476, 479, 480, 481, 486, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 505], "model": [0, 3, 5, 6, 8, 18, 31, 43, 44, 53, 57, 75, 77, 78, 79, 80, 84, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139, 149, 150, 153, 164, 192, 196, 202, 204, 216, 225, 226, 228, 229, 232, 233, 234, 237, 238, 244, 258, 273, 274, 279, 280, 281, 282, 283, 284, 285, 290, 296, 298, 299, 302, 303, 305, 306, 310, 319, 323, 327, 330, 332, 333, 334, 336, 345, 347, 360, 387, 435, 436, 443, 445, 446, 448, 452, 455, 465, 467, 468, 469, 470, 471, 472, 475, 476, 479, 480, 481, 483, 484, 485, 486, 489, 491, 493, 495, 496, 497, 499, 500, 505], "interfac": [0, 1, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 29, 31, 44, 55, 141, 145, 155, 156, 164, 165, 168, 169, 178, 192, 193, 194, 201, 204, 205, 208, 209, 214, 219, 226, 228, 233, 237, 240, 242, 245, 246, 247, 250, 252, 270, 273, 275, 302, 320, 325, 330, 336, 366, 375, 378, 381, 386, 396, 399, 406, 430, 431, 432, 436, 437, 440, 441, 456, 463, 464, 468, 469, 470, 471, 472, 474, 478, 483, 493, 494, 497, 500, 501, 502, 505], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 20, 22, 23, 24, 29, 30, 31, 34, 36, 39, 40, 41, 42, 44, 46, 47, 48, 52, 53, 55, 57, 58, 59, 62, 63, 66, 67, 73, 74, 75, 76, 77, 79, 86, 87, 90, 91, 98, 100, 101, 102, 105, 110, 111, 112, 113, 116, 122, 130, 131, 132, 134, 135, 136, 141, 142, 143, 144, 145, 150, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 176, 177, 179, 180, 181, 184, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 209, 210, 214, 217, 225, 226, 228, 229, 230, 231, 233, 235, 237, 240, 242, 244, 245, 247, 250, 252, 254, 257, 258, 266, 272, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 294, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 310, 312, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 339, 340, 341, 342, 344, 345, 347, 349, 350, 351, 353, 354, 355, 360, 361, 362, 364, 366, 367, 368, 372, 373, 375, 378, 379, 380, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 422, 423, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 455, 456, 457, 458, 459, 460, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496, 497, 499, 500, 501, 502, 503, 504, 505], "modul": [0, 2, 3, 10, 19, 26, 30, 34, 37, 43, 45, 49, 54, 57, 70, 76, 115, 142, 146, 154, 155, 170, 185, 192, 198, 202, 205, 212, 216, 221, 226, 232, 236, 239, 241, 243, 246, 249, 256, 263, 265, 267, 274, 280, 287, 296, 303, 308, 311, 321, 330, 338, 351, 352, 358, 360, 362, 369, 372, 387, 407, 430, 432, 434, 435, 436, 437, 440, 468, 469, 471, 472, 475, 480, 482, 483, 484, 493, 494, 495, 496, 497, 499, 501], "initi": [0, 1, 3, 6, 44, 58, 71, 75, 141, 143, 152, 156, 157, 160, 165, 190, 193, 194, 196, 206, 210, 233, 246, 254, 273, 281, 282, 283, 284, 285, 286, 290, 294, 299, 302, 304, 312, 318, 330, 333, 336, 367, 389, 391, 392, 405, 407, 421, 434, 453, 456, 463, 464, 468, 469, 471, 472, 476, 479, 489, 490, 495, 496, 497], "platform": [0, 469, 470, 472, 505], "The": [0, 1, 2, 3, 4, 5, 6, 8, 12, 13, 16, 17, 18, 22, 23, 24, 29, 34, 36, 39, 41, 42, 44, 46, 47, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 78, 79, 85, 86, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 105, 109, 113, 133, 134, 136, 139, 141, 142, 143, 144, 145, 149, 152, 153, 155, 156, 157, 159, 160, 162, 164, 165, 168, 169, 177, 179, 186, 189, 190, 191, 192, 193, 194, 196, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 214, 216, 225, 226, 228, 229, 230, 232, 233, 234, 235, 240, 243, 244, 245, 247, 252, 255, 258, 272, 273, 274, 275, 276, 279, 280, 281, 282, 284, 285, 286, 296, 297, 298, 299, 301, 302, 304, 305, 306, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 340, 342, 346, 347, 349, 350, 353, 360, 361, 366, 367, 368, 371, 372, 378, 381, 384, 386, 387, 388, 391, 394, 398, 399, 400, 403, 404, 405, 406, 427, 429, 431, 432, 433, 435, 436, 437, 438, 440, 441, 448, 463, 465, 468, 471, 472, 474, 476, 478, 479, 480, 483, 484, 487, 488, 489, 490, 491, 492, 494, 495, 497, 498, 500, 502, 503, 504], "bootstrap": 0, "process": [0, 3, 4, 5, 18, 20, 36, 42, 44, 52, 74, 101, 141, 165, 193, 194, 204, 205, 208, 209, 216, 217, 226, 229, 240, 247, 273, 276, 302, 312, 318, 332, 336, 345, 361, 368, 380, 390, 427, 432, 433, 434, 437, 440, 441, 468, 469, 471, 472, 473, 478, 479, 480, 491, 497, 499, 501, 502], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 20, 22, 23, 24, 25, 29, 30, 31, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 100, 101, 102, 105, 110, 111, 112, 113, 128, 129, 130, 132, 133, 134, 136, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 177, 179, 184, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 214, 216, 217, 225, 226, 228, 229, 230, 231, 233, 235, 238, 240, 242, 244, 245, 247, 250, 251, 252, 254, 257, 258, 266, 270, 272, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 340, 341, 342, 343, 345, 346, 347, 349, 350, 353, 355, 360, 361, 366, 367, 368, 370, 371, 372, 373, 376, 378, 381, 382, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 412, 416, 419, 420, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 447, 448, 453, 455, 456, 457, 458, 459, 462, 463, 465, 468, 469, 470, 471, 472, 474, 475, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 493, 494, 496, 497, 499, 500, 501, 502, 503, 504, 505], "broken": [0, 141, 279, 326, 399, 440, 471, 480, 493], "sever": [0, 74, 155, 209, 240, 247, 260, 273, 318, 330, 431, 434, 440, 460, 469, 472, 475, 480, 482, 493, 495], "phase": [0, 108, 137, 143, 152, 238], "import": [0, 1, 5, 30, 41, 73, 74, 76, 142, 144, 145, 155, 157, 159, 163, 165, 202, 203, 205, 209, 227, 228, 233, 244, 247, 273, 292, 299, 318, 319, 328, 330, 336, 340, 350, 370, 387, 390, 393, 394, 395, 403, 404, 427, 430, 432, 435, 436, 437, 438, 439, 441, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 475, 476, 478, 480, 481, 482, 483, 484, 485, 493, 494, 496, 497, 499, 505], "fundament": [0, 43, 57, 76, 77, 117, 138, 142, 143, 145, 302, 333, 398, 484], "depend": [0, 16, 23, 29, 34, 43, 44, 52, 53, 55, 74, 75, 76, 101, 141, 142, 155, 158, 159, 164, 193, 194, 195, 214, 225, 228, 229, 233, 245, 273, 275, 279, 284, 285, 299, 301, 302, 306, 318, 323, 325, 326, 333, 336, 346, 355, 372, 427, 431, 433, 434, 435, 439, 462, 465, 469, 470, 471, 472, 476, 480, 481, 483, 491, 493, 495, 496, 498, 505], "python": [0, 1, 18, 34, 36, 44, 55, 63, 66, 67, 75, 155, 156, 202, 209, 273, 279, 327, 330, 333, 367, 381, 387, 394, 396, 399, 402, 403, 427, 431, 432, 433, 434, 436, 437, 438, 440, 441, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 471, 472, 475, 476, 478, 483, 484, 485, 494, 496, 497, 499], "librari": [0, 18, 34, 44, 144, 145, 152, 153, 157, 159, 161, 163, 165, 166, 172, 177, 180, 184, 186, 189, 190, 191, 233, 240, 247, 252, 279, 285, 299, 302, 336, 350, 396, 404, 432, 433, 436, 437, 440, 441, 452, 455, 460, 461, 466, 467, 469, 471, 472, 475, 476, 479, 480, 485, 486, 493, 496, 497], "some": [0, 1, 2, 3, 4, 5, 7, 8, 12, 16, 17, 18, 25, 29, 36, 38, 41, 43, 46, 52, 53, 74, 75, 86, 101, 105, 141, 142, 144, 145, 150, 155, 156, 157, 159, 162, 165, 169, 184, 188, 189, 193, 202, 203, 204, 209, 214, 215, 216, 226, 228, 229, 233, 240, 244, 255, 270, 273, 279, 280, 283, 284, 285, 290, 295, 299, 302, 303, 304, 317, 318, 319, 324, 325, 326, 328, 330, 333, 334, 336, 339, 340, 345, 346, 349, 350, 351, 353, 354, 360, 361, 367, 368, 370, 372, 380, 383, 388, 396, 399, 400, 403, 404, 406, 416, 420, 426, 427, 431, 433, 434, 435, 437, 439, 440, 441, 442, 448, 462, 465, 467, 469, 470, 471, 472, 475, 476, 478, 480, 483, 484, 485, 486, 488, 490, 492, 493, 494, 495, 499, 501, 505], "third": [0, 29, 94, 157, 168, 201, 240, 273, 275, 284, 302, 306, 314, 325, 326, 336, 400, 428, 433, 440, 463, 469, 476, 484, 496, 497], "parti": [0, 29, 193, 433, 440, 469], "lib": [0, 80, 157, 161, 163, 166, 189, 190, 204, 240, 250, 252, 274, 302, 336, 387, 405, 440, 455, 460, 461], "investig": [0, 74, 481], "environ": [0, 44, 73, 74, 361, 367, 381, 431, 440, 441, 469, 471, 484, 492, 495], "check": [0, 1, 4, 39, 44, 58, 75, 101, 122, 155, 179, 187, 188, 196, 199, 201, 204, 209, 214, 226, 228, 229, 242, 257, 262, 273, 279, 290, 299, 302, 304, 305, 307, 312, 314, 317, 319, 320, 326, 329, 336, 339, 340, 341, 367, 372, 373, 379, 387, 399, 400, 401, 403, 405, 412, 420, 426, 433, 434, 436, 437, 439, 440, 468, 470, 471, 472, 475, 476, 478, 479, 483, 484, 494, 497, 505], "version": [0, 1, 2, 4, 5, 7, 8, 12, 41, 46, 57, 62, 65, 101, 152, 155, 165, 196, 201, 229, 272, 273, 274, 285, 302, 330, 333, 336, 352, 355, 360, 366, 367, 368, 396, 399, 400, 404, 426, 434, 435, 469, 470, 471, 472, 476, 478, 480, 483, 484, 485, 496, 497, 499, 505], "code": [0, 1, 3, 4, 5, 6, 7, 16, 17, 18, 24, 29, 44, 45, 57, 63, 65, 74, 75, 76, 83, 141, 142, 144, 150, 152, 155, 156, 157, 158, 159, 163, 166, 189, 192, 193, 202, 203, 204, 205, 208, 209, 211, 226, 228, 233, 242, 243, 244, 245, 247, 248, 263, 273, 279, 280, 282, 283, 285, 290, 303, 305, 310, 318, 319, 320, 325, 326, 328, 333, 337, 350, 352, 355, 361, 378, 388, 389, 392, 394, 396, 400, 409, 420, 427, 431, 432, 433, 434, 435, 436, 438, 439, 441, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 471, 472, 474, 475, 476, 480, 482, 484, 489, 492, 493, 494, 496, 497, 499, 501], "mpi": [0, 2, 3, 5, 18, 24, 74, 75, 193, 194, 208, 209, 229, 245, 252, 273, 302, 332, 380, 381, 387, 393, 403, 419, 435, 468, 469, 470, 472, 497, 505], "situat": [0, 8, 196, 283, 296, 302, 319, 320, 327, 350, 384, 469, 480, 493], "tty": 0, "gui": [0, 57, 62, 63, 64, 74, 196, 273, 323, 361, 367, 400, 432, 434, 468, 469, 471, 472, 475, 480, 484, 493, 494, 495, 498], "interact": [0, 3, 5, 6, 7, 8, 13, 16, 17, 60, 62, 63, 74, 75, 145, 157, 191, 192, 193, 216, 226, 228, 242, 245, 247, 250, 273, 332, 431, 468, 469, 470, 471, 472, 475, 476, 478, 479, 480, 481, 489, 491, 497, 499, 502, 505], "set": [0, 1, 3, 4, 5, 6, 8, 12, 17, 18, 22, 25, 29, 36, 40, 41, 42, 43, 44, 46, 47, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 86, 87, 92, 93, 96, 101, 141, 144, 145, 153, 154, 157, 160, 161, 163, 164, 165, 166, 189, 190, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 216, 217, 219, 226, 228, 229, 230, 231, 233, 234, 235, 237, 240, 242, 244, 245, 247, 250, 254, 257, 258, 262, 263, 266, 267, 270, 272, 273, 275, 279, 280, 283, 284, 285, 286, 290, 299, 302, 304, 305, 306, 307, 309, 312, 316, 317, 318, 319, 320, 325, 327, 328, 330, 331, 332, 333, 336, 340, 341, 345, 346, 349, 353, 354, 357, 359, 378, 381, 384, 386, 387, 390, 391, 394, 399, 400, 401, 403, 404, 405, 406, 414, 423, 426, 427, 430, 432, 434, 436, 437, 439, 440, 448, 449, 453, 455, 463, 464, 469, 470, 471, 472, 473, 476, 478, 479, 481, 483, 487, 488, 489, 491, 492, 493, 494, 495, 500, 501, 502, 503, 505], "up": [0, 3, 4, 5, 8, 16, 18, 23, 42, 44, 64, 74, 75, 76, 90, 101, 141, 142, 143, 144, 145, 152, 153, 155, 159, 189, 191, 193, 194, 196, 202, 204, 209, 225, 228, 240, 258, 266, 275, 279, 283, 285, 290, 294, 299, 302, 304, 306, 318, 319, 323, 326, 327, 328, 332, 333, 336, 340, 349, 352, 356, 378, 387, 388, 391, 400, 404, 406, 408, 412, 416, 431, 432, 434, 437, 439, 440, 465, 469, 470, 471, 472, 475, 476, 478, 479, 480, 481, 483, 488, 489, 491, 493, 494, 496, 497, 500, 501, 505], "temp": [0, 22, 59, 74, 105, 299, 304, 312, 404, 472, 497], "dir": [0, 59, 204, 392, 472], "printout": [0, 18, 52, 240, 295, 336, 471], "tabl": [0, 2, 4, 19, 20, 21, 22, 23, 52, 58, 77, 87, 89, 94, 102, 108, 110, 113, 120, 133, 137, 143, 144, 152, 174, 209, 244, 245, 254, 259, 275, 307, 336, 343, 394, 398, 435, 437, 476, 483, 484, 493, 494, 496, 498, 499], "format": [0, 1, 3, 4, 5, 20, 21, 34, 40, 42, 43, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 122, 128, 129, 130, 133, 134, 137, 138, 139, 145, 155, 156, 157, 162, 163, 164, 165, 167, 168, 169, 182, 183, 209, 235, 244, 245, 275, 281, 284, 285, 291, 292, 299, 336, 337, 344, 350, 361, 373, 387, 391, 394, 404, 406, 435, 437, 439, 460, 461, 469, 471, 476, 478, 483, 485, 493, 496, 497, 500], "prepar": [0, 75, 161, 201, 209, 233, 247, 302, 306, 318, 336, 387, 388, 475, 481, 492], "log": [0, 3, 5, 52, 193, 346, 350, 361, 372, 373, 381, 384, 390, 406, 435, 455, 460, 472, 480, 483, 501], "info": [0, 16, 18, 75, 110, 133, 159, 165, 173, 179, 273, 302, 328, 330, 337, 350, 373, 387, 390, 430, 434, 441, 462, 478, 480, 483, 484, 489, 492, 497, 501], "all": [0, 1, 2, 3, 4, 5, 6, 8, 9, 16, 17, 18, 34, 41, 42, 44, 47, 48, 52, 57, 59, 63, 66, 69, 71, 74, 75, 76, 86, 101, 122, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 155, 156, 157, 159, 161, 163, 164, 165, 166, 174, 177, 180, 184, 189, 191, 193, 194, 195, 202, 204, 206, 208, 209, 210, 217, 226, 228, 229, 233, 235, 237, 240, 244, 245, 247, 248, 250, 252, 257, 273, 275, 276, 279, 280, 283, 285, 296, 299, 302, 304, 306, 312, 318, 319, 320, 321, 326, 327, 328, 329, 330, 332, 333, 334, 336, 339, 340, 341, 342, 346, 349, 350, 367, 368, 371, 372, 373, 380, 386, 387, 388, 389, 391, 393, 394, 395, 396, 399, 400, 401, 404, 406, 412, 416, 427, 431, 433, 434, 436, 437, 439, 440, 441, 453, 462, 465, 468, 469, 470, 472, 475, 476, 478, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 504, 505], "possibl": [0, 3, 5, 6, 16, 17, 74, 75, 141, 155, 156, 193, 196, 210, 240, 272, 273, 275, 279, 280, 281, 285, 299, 306, 319, 328, 330, 332, 333, 336, 346, 367, 372, 396, 400, 401, 403, 404, 427, 439, 440, 441, 465, 469, 475, 476, 480, 484, 487, 493, 496], "nuclid": [0, 5, 76, 79, 80, 86, 87, 99, 101, 105, 109, 128, 131, 132, 133, 134, 136, 143, 144, 148, 149, 150, 152, 153, 154, 155, 159, 161, 163, 164, 166, 184, 188, 189, 190, 191, 228, 229, 233, 235, 237, 238, 240, 244, 245, 248, 279, 280, 282, 283, 285, 290, 292, 299, 302, 305, 312, 318, 336, 346, 356, 391, 404, 430, 452, 455, 456, 463, 464, 465, 466, 467, 468, 471, 472, 475, 476, 478, 479, 481, 486, 488, 489, 490, 491, 495, 497], "object": [0, 1, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29, 33, 40, 42, 43, 44, 45, 46, 50, 51, 52, 53, 55, 57, 63, 74, 75, 76, 101, 141, 142, 143, 144, 145, 152, 153, 155, 156, 157, 159, 160, 161, 163, 165, 166, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 201, 204, 206, 207, 208, 209, 210, 217, 226, 229, 233, 235, 240, 242, 245, 247, 252, 258, 262, 266, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 290, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 309, 310, 312, 317, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 332, 333, 336, 337, 339, 342, 345, 346, 349, 350, 353, 360, 361, 366, 367, 368, 370, 372, 378, 380, 381, 386, 387, 388, 389, 391, 392, 396, 399, 400, 402, 404, 405, 406, 421, 426, 427, 432, 436, 437, 439, 440, 441, 442, 463, 464, 467, 468, 469, 471, 475, 476, 478, 481, 483, 486, 488, 489, 490, 493, 494, 497, 499], "directori": [0, 3, 5, 43, 44, 52, 53, 55, 59, 60, 66, 73, 74, 75, 144, 148, 152, 190, 193, 204, 240, 266, 336, 346, 350, 360, 372, 392, 393, 403, 412, 427, 432, 440, 454, 469, 470, 471, 472, 478, 480, 485, 494, 497, 500, 505], "discov": [0, 43, 44, 52, 53, 193, 214, 273, 434, 470, 483, 484, 505], "regist": [0, 1, 44, 72, 75, 272, 273, 276, 360, 394, 436, 469, 479, 497, 502], "avail": [0, 1, 3, 5, 6, 16, 44, 57, 63, 141, 142, 144, 152, 165, 189, 191, 193, 194, 195, 201, 204, 228, 229, 233, 237, 244, 245, 273, 279, 285, 290, 302, 318, 333, 360, 370, 387, 394, 396, 426, 431, 433, 434, 436, 437, 439, 442, 467, 469, 476, 478, 481, 482, 484, 485, 486, 491, 493, 494, 496, 497, 498, 499, 500, 502, 504], "built": [0, 8, 57, 190, 198, 209, 217, 226, 252, 257, 270, 273, 274, 275, 279, 280, 286, 302, 305, 312, 321, 394, 431, 432, 434, 436, 440, 455, 468, 469, 478, 480, 493, 494, 497, 499], "plugin": [0, 1, 2, 22, 29, 44, 47, 52, 57, 73, 75, 76, 90, 101, 110, 132, 142, 192, 195, 196, 202, 203, 205, 209, 214, 216, 217, 218, 221, 223, 226, 233, 240, 245, 253, 256, 262, 267, 269, 272, 274, 279, 283, 285, 299, 303, 318, 330, 332, 333, 360, 361, 364, 370, 372, 382, 383, 386, 394, 396, 430, 435, 439, 447, 456, 462, 465, 469, 471, 476, 478, 479, 481, 485, 495, 496, 497, 500], "custom": [0, 1, 57, 63, 76, 90, 101, 105, 141, 192, 205, 208, 209, 226, 229, 235, 240, 247, 258, 272, 280, 283, 285, 292, 299, 309, 318, 350, 360, 361, 366, 367, 368, 377, 391, 403, 404, 405, 410, 415, 427, 430, 434, 436, 441, 463, 469, 471, 478, 479, 484, 494, 495, 497, 499, 501], "ones": [0, 57, 86, 145, 153, 156, 189, 214, 228, 279, 302, 336, 355, 388, 456, 478, 480, 493, 494], "after": [0, 2, 13, 23, 46, 52, 69, 74, 75, 86, 101, 142, 157, 159, 165, 191, 193, 204, 209, 240, 247, 270, 273, 275, 279, 299, 302, 304, 306, 318, 327, 328, 330, 332, 334, 336, 340, 350, 354, 361, 386, 389, 394, 396, 400, 404, 405, 406, 434, 436, 437, 440, 441, 468, 472, 476, 478, 480, 483, 489, 491, 493, 494, 496, 497], "input": [0, 1, 3, 5, 6, 16, 17, 22, 25, 29, 36, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 57, 58, 60, 62, 63, 65, 66, 75, 76, 86, 101, 122, 132, 145, 149, 158, 159, 160, 163, 173, 188, 189, 193, 204, 205, 208, 209, 210, 214, 228, 229, 233, 240, 244, 245, 247, 248, 273, 275, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 293, 296, 297, 299, 302, 303, 306, 310, 312, 318, 319, 320, 328, 329, 336, 337, 340, 341, 344, 346, 349, 352, 353, 354, 356, 360, 361, 366, 367, 372, 379, 387, 388, 390, 391, 395, 400, 401, 402, 416, 423, 426, 429, 432, 434, 435, 442, 452, 455, 456, 464, 465, 466, 467, 469, 471, 472, 476, 478, 479, 480, 483, 486, 488, 489, 490, 492, 497, 498, 499, 500, 501], "defin": [0, 1, 3, 5, 7, 16, 17, 23, 29, 46, 55, 75, 76, 77, 85, 99, 100, 101, 105, 107, 112, 136, 143, 145, 149, 152, 153, 155, 156, 162, 165, 168, 169, 186, 189, 190, 193, 194, 195, 201, 206, 209, 211, 213, 219, 220, 228, 240, 245, 247, 255, 258, 270, 271, 273, 275, 279, 280, 281, 282, 283, 284, 285, 286, 290, 296, 297, 299, 301, 302, 304, 305, 317, 318, 319, 321, 325, 327, 328, 330, 331, 332, 333, 334, 336, 344, 353, 361, 367, 378, 381, 386, 388, 394, 396, 400, 403, 404, 406, 428, 429, 434, 436, 439, 440, 441, 442, 448, 453, 455, 463, 465, 467, 468, 471, 472, 475, 476, 478, 479, 481, 483, 486, 489, 491, 494, 495, 496, 497, 499, 500], "potenti": [0, 18, 46, 75, 128, 129, 130, 152, 153, 193, 196, 204, 273, 325, 336, 368, 393, 401, 433, 434, 436, 439, 441, 469, 480, 483, 488, 491, 496, 504], "configur": [0, 1, 4, 73, 74, 229, 258, 273, 306, 367, 430, 434, 436, 440, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 469, 470, 471, 472, 474, 476, 478, 480, 483, 485, 488, 493, 497, 505], "from": [0, 1, 3, 4, 5, 6, 8, 13, 16, 17, 18, 22, 23, 25, 29, 30, 31, 34, 36, 40, 41, 43, 44, 46, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 79, 84, 86, 87, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 105, 107, 108, 110, 111, 113, 117, 120, 122, 127, 128, 129, 130, 132, 133, 134, 137, 138, 141, 142, 143, 144, 145, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 176, 179, 180, 181, 184, 189, 190, 191, 192, 193, 194, 196, 197, 201, 203, 204, 205, 209, 210, 214, 217, 226, 228, 229, 230, 231, 233, 235, 237, 238, 240, 244, 245, 247, 252, 257, 258, 262, 272, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 296, 298, 299, 302, 303, 304, 305, 306, 310, 312, 314, 317, 318, 319, 320, 321, 323, 325, 326, 327, 328, 330, 332, 333, 334, 336, 337, 340, 341, 345, 346, 349, 350, 352, 353, 354, 355, 356, 360, 361, 367, 368, 371, 372, 373, 378, 379, 381, 386, 387, 388, 391, 392, 394, 396, 399, 400, 401, 404, 406, 427, 429, 432, 433, 434, 436, 437, 439, 440, 441, 442, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 493, 494, 495, 496, 497, 499, 501, 503, 505], "read": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 16, 31, 44, 75, 145, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 190, 191, 208, 209, 214, 229, 235, 243, 245, 258, 273, 280, 281, 286, 302, 318, 327, 332, 333, 336, 337, 344, 353, 354, 361, 368, 379, 388, 400, 404, 405, 408, 426, 427, 431, 432, 436, 437, 440, 469, 471, 472, 476, 483, 484, 496, 499, 500], "file": [0, 1, 3, 4, 5, 6, 7, 8, 16, 17, 20, 22, 23, 25, 29, 30, 31, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 78, 86, 116, 141, 142, 145, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 178, 179, 180, 181, 182, 183, 184, 190, 191, 193, 194, 196, 199, 204, 206, 208, 209, 214, 227, 228, 229, 230, 233, 235, 237, 238, 240, 245, 247, 254, 257, 273, 275, 280, 281, 283, 284, 285, 286, 290, 302, 303, 318, 319, 330, 333, 336, 337, 344, 346, 349, 350, 352, 353, 354, 360, 361, 367, 368, 371, 372, 379, 384, 387, 388, 389, 390, 392, 393, 396, 401, 402, 403, 404, 406, 412, 427, 431, 432, 433, 434, 435, 438, 439, 441, 450, 455, 456, 460, 463, 464, 466, 469, 470, 471, 472, 475, 476, 478, 479, 483, 487, 492, 494, 495, 497, 500, 501, 505], "updat": [0, 2, 6, 44, 46, 55, 75, 101, 145, 149, 154, 155, 159, 165, 184, 189, 191, 193, 196, 197, 203, 204, 208, 226, 228, 233, 240, 242, 247, 250, 257, 266, 275, 279, 283, 285, 296, 299, 301, 302, 304, 306, 307, 312, 318, 328, 330, 332, 333, 336, 337, 346, 352, 356, 361, 367, 370, 372, 388, 391, 404, 435, 437, 440, 453, 469, 471, 472, 473, 475, 476, 478, 480, 493, 496, 497, 502], "deplet": [0, 75, 145, 153, 194, 202, 228, 229, 233, 237, 240, 243, 244, 245, 246, 248, 259, 274, 275, 279, 283, 285, 319, 330, 333, 387, 400, 434, 456, 468, 471, 472, 476, 478, 484, 488, 489, 493, 496, 497], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 162, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 219, 222, 223, 224, 226, 228, 229, 230, 233, 235, 237, 238, 240, 242, 244, 245, 247, 248, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 266, 270, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 399, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 434, 435, 439, 440, 441, 444, 448, 449, 451, 454, 465, 467, 469, 471, 472, 475, 476, 478, 479, 481, 482, 483, 484, 485, 486, 489, 491, 493, 502], "config": [0, 73, 431], "state": [0, 1, 2, 3, 5, 6, 16, 17, 35, 41, 75, 77, 87, 90, 101, 110, 133, 141, 145, 152, 159, 161, 165, 166, 189, 193, 196, 197, 202, 204, 208, 226, 228, 240, 242, 247, 270, 273, 276, 279, 299, 302, 304, 306, 312, 317, 318, 325, 330, 332, 333, 336, 337, 361, 386, 394, 434, 436, 437, 439, 440, 445, 452, 465, 467, 468, 469, 476, 479, 480, 484, 486, 491, 492, 493, 495, 496, 497, 500, 503], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 19, 22, 23, 25, 29, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 57, 63, 74, 75, 76, 77, 78, 79, 89, 92, 93, 94, 96, 101, 105, 110, 113, 136, 141, 143, 144, 145, 152, 156, 157, 160, 161, 162, 163, 165, 166, 167, 168, 169, 173, 189, 190, 191, 192, 193, 196, 201, 202, 206, 209, 210, 216, 225, 226, 228, 229, 235, 240, 244, 245, 247, 252, 254, 267, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 317, 318, 319, 323, 325, 326, 328, 329, 335, 336, 337, 342, 345, 346, 349, 360, 361, 366, 367, 368, 372, 378, 381, 386, 387, 389, 391, 392, 393, 394, 396, 398, 399, 400, 403, 404, 405, 406, 427, 428, 429, 435, 436, 437, 463, 464, 468, 469, 471, 472, 475, 478, 479, 484, 492, 493, 494, 495, 496, 497, 498, 499, 502], "data": [0, 1, 2, 3, 4, 5, 6, 8, 16, 19, 21, 23, 24, 40, 41, 42, 53, 75, 77, 78, 83, 89, 92, 93, 96, 102, 109, 113, 128, 129, 130, 134, 142, 143, 144, 145, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 184, 188, 190, 191, 196, 203, 204, 208, 209, 229, 233, 235, 240, 245, 247, 252, 272, 273, 274, 275, 279, 281, 285, 286, 290, 295, 297, 299, 302, 304, 306, 307, 318, 325, 327, 328, 330, 332, 333, 336, 337, 340, 353, 366, 367, 372, 387, 388, 396, 404, 406, 423, 427, 432, 434, 435, 437, 439, 443, 445, 446, 449, 452, 453, 456, 463, 464, 467, 468, 469, 472, 476, 478, 479, 480, 483, 484, 485, 486, 488, 492, 493, 497, 499, 500], "possibli": [0, 3, 5, 52, 75, 192, 296, 305, 404, 468, 478, 480, 493], "entri": [0, 1, 5, 34, 36, 43, 44, 52, 57, 58, 62, 63, 64, 65, 66, 71, 72, 74, 75, 153, 209, 210, 273, 279, 282, 283, 284, 299, 302, 312, 337, 392, 399, 400, 435, 437, 471, 476, 479, 484, 492, 493, 496, 499], "point": [0, 1, 3, 5, 23, 29, 34, 36, 42, 43, 44, 46, 47, 52, 53, 57, 58, 62, 63, 64, 65, 66, 71, 72, 74, 75, 105, 109, 112, 122, 128, 129, 130, 133, 134, 145, 153, 156, 159, 163, 173, 174, 191, 192, 193, 194, 209, 229, 233, 240, 260, 272, 275, 280, 282, 284, 285, 288, 291, 292, 294, 303, 304, 307, 318, 321, 323, 326, 327, 328, 333, 336, 340, 342, 378, 400, 404, 424, 428, 430, 435, 437, 439, 441, 448, 449, 468, 471, 476, 478, 479, 483, 484, 485, 488, 489, 492, 493, 494, 496, 497, 499, 500], "choos": [0, 76, 152, 192, 204, 285, 353, 470, 480, 484, 493, 495, 496, 497, 505], "user": [0, 1, 3, 5, 7, 16, 20, 24, 29, 36, 44, 46, 52, 53, 57, 74, 76, 86, 90, 91, 101, 110, 132, 142, 152, 153, 155, 157, 163, 190, 191, 192, 193, 196, 205, 206, 207, 209, 226, 228, 229, 233, 235, 240, 247, 258, 273, 279, 281, 283, 285, 286, 290, 299, 302, 304, 320, 328, 330, 336, 346, 349, 350, 352, 355, 360, 361, 367, 368, 371, 384, 387, 388, 390, 392, 400, 403, 432, 433, 434, 436, 439, 440, 441, 465, 468, 469, 470, 472, 476, 478, 480, 481, 485, 493, 494, 496, 497, 498, 500, 501, 502, 505], "command": [0, 16, 36, 44, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 157, 194, 196, 208, 209, 230, 273, 361, 367, 371, 389, 401, 431, 432, 437, 438, 440, 468, 469, 478, 480, 483, 493, 496, 501], "If": [0, 1, 3, 5, 6, 16, 18, 24, 36, 40, 44, 46, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 101, 132, 141, 142, 144, 145, 153, 154, 156, 157, 159, 160, 189, 190, 192, 193, 194, 196, 202, 204, 209, 210, 228, 229, 230, 233, 240, 244, 245, 247, 252, 272, 273, 275, 276, 279, 280, 281, 285, 299, 302, 303, 304, 305, 306, 312, 317, 318, 321, 323, 325, 326, 328, 330, 332, 333, 334, 336, 337, 340, 350, 361, 367, 368, 371, 372, 387, 391, 392, 394, 398, 399, 400, 403, 404, 406, 427, 431, 434, 437, 439, 440, 441, 469, 470, 475, 476, 478, 480, 484, 485, 488, 489, 493, 494, 496, 497, 499, 500, 501, 505], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 42, 43, 44, 45, 47, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 89, 92, 93, 94, 96, 101, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 132, 134, 135, 136, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 163, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 204, 206, 208, 209, 210, 213, 214, 215, 217, 222, 223, 224, 225, 228, 229, 230, 231, 233, 235, 237, 238, 240, 242, 244, 245, 247, 248, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 266, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 359, 361, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 399, 400, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 438, 439, 441, 442, 443, 446, 448, 449, 454, 456, 457, 463, 465, 467, 468, 470, 471, 472, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 505], "run": [0, 1, 3, 4, 5, 6, 13, 16, 17, 18, 22, 24, 29, 30, 31, 34, 36, 43, 44, 45, 52, 53, 55, 57, 58, 59, 62, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 101, 141, 145, 152, 155, 171, 180, 186, 192, 193, 194, 195, 196, 197, 202, 203, 204, 208, 209, 217, 226, 228, 229, 240, 242, 243, 245, 246, 247, 252, 266, 273, 275, 279, 290, 302, 303, 305, 306, 312, 330, 333, 336, 338, 345, 346, 350, 360, 361, 372, 379, 380, 381, 382, 387, 389, 394, 401, 404, 420, 431, 432, 433, 434, 435, 437, 438, 439, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 475, 476, 478, 479, 481, 483, 484, 485, 488, 489, 491, 492, 493, 495, 496, 497, 499, 500, 501, 505], "addit": [0, 1, 2, 44, 57, 63, 141, 145, 155, 157, 192, 193, 209, 229, 245, 273, 279, 281, 296, 299, 302, 304, 306, 319, 327, 332, 334, 336, 367, 433, 434, 439, 441, 469, 472, 476, 493, 495, 496, 497], "work": [0, 3, 5, 18, 40, 41, 42, 43, 44, 50, 53, 55, 74, 75, 86, 101, 141, 177, 180, 190, 204, 209, 210, 235, 240, 242, 245, 260, 279, 284, 285, 286, 289, 290, 294, 299, 302, 304, 306, 310, 319, 320, 325, 334, 336, 337, 343, 345, 346, 350, 352, 367, 370, 372, 373, 378, 384, 387, 388, 389, 392, 394, 398, 399, 403, 405, 411, 414, 419, 427, 431, 433, 434, 436, 437, 439, 441, 448, 449, 468, 469, 470, 472, 474, 475, 476, 478, 480, 482, 484, 485, 487, 488, 494, 497, 500, 504, 505], "done": [0, 3, 18, 29, 44, 97, 98, 159, 209, 225, 233, 240, 242, 272, 299, 302, 303, 312, 319, 325, 332, 336, 372, 394, 399, 400, 401, 431, 432, 433, 434, 437, 455, 469, 476, 478, 480, 485, 493, 496], "build": [0, 3, 22, 25, 31, 43, 44, 50, 53, 57, 75, 76, 142, 174, 190, 191, 192, 193, 204, 205, 209, 210, 214, 228, 233, 235, 240, 252, 262, 273, 275, 279, 283, 284, 286, 296, 304, 305, 313, 318, 321, 322, 323, 326, 329, 336, 337, 339, 340, 346, 349, 367, 435, 436, 441, 442, 448, 449, 452, 455, 457, 458, 459, 466, 467, 468, 469, 472, 478, 479, 480, 481, 483, 486, 493, 494, 498], "oper": [0, 1, 2, 3, 5, 6, 8, 13, 25, 43, 44, 57, 74, 75, 141, 142, 160, 191, 207, 208, 209, 233, 273, 279, 285, 299, 302, 306, 310, 312, 317, 319, 320, 326, 328, 332, 333, 336, 346, 370, 374, 381, 387, 388, 399, 403, 405, 414, 430, 435, 436, 437, 440, 464, 468, 470, 471, 472, 476, 478, 479, 480, 484, 485, 490, 493, 495, 496, 497, 504, 505], "specif": [0, 1, 2, 3, 4, 5, 8, 16, 17, 22, 29, 38, 39, 40, 44, 46, 52, 53, 55, 63, 75, 76, 77, 89, 92, 93, 96, 101, 105, 110, 136, 142, 143, 144, 145, 156, 157, 159, 162, 164, 167, 189, 190, 191, 192, 193, 194, 201, 203, 204, 209, 215, 229, 233, 240, 245, 247, 262, 272, 273, 275, 276, 279, 281, 284, 285, 296, 299, 302, 303, 305, 307, 310, 312, 318, 319, 330, 332, 333, 334, 336, 350, 373, 378, 381, 386, 388, 396, 400, 401, 406, 431, 432, 433, 434, 436, 439, 440, 441, 447, 468, 469, 472, 474, 475, 480, 482, 483, 484, 485, 488, 493, 496, 497, 498, 499], "calcul": [0, 3, 5, 29, 52, 75, 79, 89, 92, 93, 96, 101, 105, 107, 131, 136, 141, 144, 145, 153, 159, 165, 191, 192, 193, 194, 204, 217, 225, 226, 228, 229, 231, 233, 240, 246, 247, 257, 273, 275, 279, 297, 299, 302, 303, 304, 305, 306, 312, 318, 328, 333, 336, 340, 391, 401, 424, 434, 448, 453, 468, 469, 471, 472, 476, 478, 480, 481, 483, 484, 485, 489, 491, 493, 494, 496, 497, 502], "loop": [0, 13, 16, 74, 141, 192, 193, 194, 196, 197, 209, 217, 336, 339, 387, 404, 406, 434, 440, 465, 469, 478, 480, 483, 491, 501], "order": [0, 1, 3, 6, 8, 53, 75, 76, 89, 92, 93, 94, 96, 102, 141, 142, 145, 153, 155, 156, 157, 159, 160, 163, 165, 168, 193, 197, 209, 210, 228, 257, 273, 275, 279, 299, 304, 305, 318, 326, 332, 336, 340, 345, 349, 387, 401, 404, 405, 434, 437, 439, 448, 469, 471, 472, 476, 478, 480, 484, 489, 493, 494, 497, 499], "stack": [0, 3, 6, 8, 16, 17, 75, 193, 194, 273, 275, 279, 312, 386, 456, 463, 464, 468, 472, 478, 480, 484, 485, 493, 497], "begin": [0, 2, 3, 5, 6, 17, 19, 22, 23, 67, 75, 155, 156, 193, 208, 226, 254, 273, 275, 326, 336, 387, 388, 434, 439, 468, 478, 480, 481, 482, 488, 489, 491, 496, 497, 501, 503], "over": [0, 1, 16, 25, 30, 76, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139, 141, 152, 159, 165, 192, 193, 197, 233, 242, 247, 275, 276, 279, 301, 302, 305, 306, 312, 318, 327, 330, 333, 336, 339, 399, 401, 404, 414, 434, 453, 455, 465, 469, 470, 476, 483, 489, 493, 496, 502, 504, 505], "upon": [0, 5, 23, 41, 58, 63, 75, 142, 145, 192, 193, 204, 207, 299, 302, 319, 328, 332, 333, 336, 340, 372, 396, 432, 434, 455, 469, 475, 497], "accord": [0, 19, 53, 60, 159, 165, 228, 279, 336, 388, 434, 481, 494, 501], "design": [0, 1, 2, 16, 18, 19, 22, 25, 44, 46, 52, 53, 58, 75, 80, 101, 122, 143, 145, 203, 209, 229, 245, 273, 274, 275, 276, 279, 280, 283, 286, 302, 303, 304, 306, 310, 316, 321, 328, 336, 340, 361, 367, 434, 435, 436, 439, 440, 448, 468, 469, 471, 474, 479, 481, 484, 493, 494, 497, 498, 503], "until": [0, 42, 209, 273, 286, 296, 299, 305, 332, 334, 342, 367, 398, 400, 427, 437, 439, 469, 476, 494, 502], "complet": [0, 3, 13, 52, 63, 71, 75, 142, 204, 240, 285, 286, 290, 297, 298, 302, 305, 318, 327, 336, 372, 387, 433, 436, 440, 441, 456, 463, 464, 475, 476, 478, 480, 483, 484, 493, 497, 499, 501], "wrap": [0, 18, 20, 23, 193, 279, 298, 299, 340, 372, 436, 439, 476, 478, 483, 484], "quit": [0, 1, 202, 240, 276, 305, 381, 469, 480, 481, 484, 493], "disablefutureconfigur": [0, 430], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 237, 238, 240, 242, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 433, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 470, 473, 474, 476, 478, 480, 482, 489, 491, 494, 496, 497, 498, 505], "expos": [0, 1, 6, 16, 17, 18, 24, 29, 219, 226, 228, 233, 270, 272, 273, 274, 436, 478], "function": [0, 1, 3, 5, 6, 8, 16, 17, 18, 24, 25, 29, 34, 39, 40, 44, 46, 50, 53, 55, 57, 58, 63, 75, 78, 86, 101, 105, 113, 122, 145, 156, 168, 193, 196, 198, 201, 209, 210, 228, 229, 233, 235, 239, 240, 243, 244, 245, 246, 247, 250, 252, 255, 273, 275, 276, 279, 280, 285, 289, 290, 302, 316, 318, 320, 326, 327, 328, 330, 332, 333, 336, 337, 340, 341, 350, 362, 366, 367, 370, 372, 375, 376, 378, 380, 383, 384, 387, 389, 394, 396, 399, 400, 401, 403, 404, 406, 413, 423, 426, 427, 429, 432, 434, 436, 437, 439, 440, 441, 455, 468, 469, 471, 472, 474, 475, 478, 480, 481, 483, 494, 496, 497, 502, 503], "ensur": [0, 50, 55, 71, 72, 143, 156, 176, 181, 182, 183, 188, 201, 204, 228, 233, 237, 238, 240, 242, 258, 283, 289, 290, 292, 296, 307, 312, 317, 327, 336, 340, 342, 344, 350, 354, 370, 373, 378, 379, 411, 414, 431, 437, 439, 440, 441, 471, 480, 485, 496], "isn": [0, 8, 39, 75, 191, 276, 319, 336, 439, 440, 441, 480, 484, 485], "t": [0, 2, 3, 4, 5, 8, 16, 17, 31, 39, 41, 44, 52, 55, 74, 75, 76, 80, 89, 90, 91, 94, 101, 105, 133, 136, 143, 145, 149, 152, 153, 157, 189, 190, 191, 193, 194, 196, 197, 209, 225, 228, 229, 238, 240, 244, 252, 258, 270, 273, 276, 279, 280, 290, 297, 298, 299, 301, 302, 305, 319, 320, 321, 323, 326, 327, 328, 329, 330, 332, 334, 336, 341, 344, 346, 361, 366, 372, 389, 391, 398, 399, 400, 403, 404, 405, 412, 416, 420, 426, 427, 429, 431, 432, 433, 435, 436, 437, 439, 462, 469, 470, 472, 475, 476, 478, 480, 481, 483, 484, 485, 488, 489, 493, 496, 497, 499, 503, 505], "call": [0, 1, 3, 5, 6, 8, 16, 17, 23, 29, 36, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 101, 141, 143, 145, 152, 193, 194, 196, 202, 204, 206, 207, 209, 210, 214, 229, 230, 233, 235, 240, 244, 245, 272, 273, 275, 279, 284, 286, 290, 294, 299, 302, 304, 306, 314, 318, 320, 323, 326, 328, 329, 332, 333, 334, 336, 345, 350, 353, 360, 361, 367, 371, 372, 373, 384, 387, 389, 392, 396, 399, 401, 403, 420, 436, 437, 439, 440, 441, 472, 475, 476, 478, 480, 484, 485, 487, 494, 496, 499], "more": [0, 1, 3, 4, 5, 6, 8, 16, 29, 31, 34, 40, 41, 44, 47, 52, 53, 57, 75, 76, 90, 101, 122, 145, 150, 152, 153, 155, 156, 163, 165, 191, 193, 196, 209, 210, 217, 229, 233, 235, 240, 273, 276, 279, 280, 284, 286, 290, 299, 301, 302, 303, 304, 305, 318, 319, 320, 321, 323, 325, 327, 328, 332, 336, 342, 349, 352, 354, 367, 372, 388, 389, 394, 396, 398, 404, 406, 427, 428, 433, 434, 436, 437, 439, 440, 441, 442, 456, 457, 458, 459, 462, 465, 467, 469, 472, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 493, 494, 496, 497, 498, 499], "than": [0, 3, 4, 5, 16, 31, 41, 45, 46, 53, 74, 101, 122, 132, 136, 144, 145, 150, 153, 156, 157, 165, 168, 190, 193, 197, 201, 204, 209, 226, 228, 229, 240, 245, 273, 275, 279, 285, 296, 298, 299, 302, 312, 319, 323, 325, 326, 328, 329, 336, 349, 354, 361, 367, 388, 389, 396, 398, 399, 403, 404, 406, 440, 441, 455, 463, 465, 469, 471, 475, 476, 478, 480, 484, 485, 488, 489, 493, 496, 497, 501], "onc": [0, 5, 145, 155, 202, 258, 279, 280, 306, 310, 313, 317, 318, 340, 361, 434, 436, 438, 439, 463, 478, 480, 483, 487, 488, 493, 494, 496], "isstablereleasevers": [0, 430], "none": [0, 3, 4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 29, 36, 41, 42, 44, 46, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 152, 153, 154, 156, 173, 186, 189, 190, 191, 193, 196, 201, 204, 208, 209, 210, 214, 217, 228, 229, 230, 233, 235, 240, 242, 244, 245, 247, 248, 250, 252, 273, 275, 276, 279, 280, 283, 286, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 309, 310, 312, 318, 321, 322, 323, 325, 326, 328, 329, 332, 333, 334, 336, 339, 342, 345, 346, 349, 350, 353, 354, 355, 356, 357, 360, 361, 366, 367, 371, 372, 373, 374, 378, 381, 383, 386, 387, 391, 392, 393, 394, 399, 400, 401, 404, 406, 416, 426, 427, 429, 431, 432, 437, 439, 458, 463, 464, 471, 476, 478, 483, 484, 494, 496, 497, 499], "determin": [0, 3, 5, 8, 23, 25, 44, 52, 53, 75, 141, 144, 145, 153, 155, 156, 157, 190, 192, 193, 195, 209, 210, 228, 229, 233, 240, 244, 247, 273, 275, 279, 281, 285, 296, 297, 299, 302, 304, 305, 306, 312, 330, 332, 336, 340, 360, 372, 373, 398, 400, 401, 404, 419, 427, 434, 440, 469, 472, 476, 478, 480, 489, 493, 494, 496, 497], "should": [0, 1, 3, 4, 5, 6, 16, 18, 40, 44, 46, 52, 53, 55, 58, 63, 74, 75, 90, 101, 136, 141, 142, 143, 145, 150, 152, 153, 155, 156, 157, 159, 165, 189, 190, 191, 193, 195, 201, 204, 206, 209, 210, 225, 226, 229, 233, 235, 240, 247, 252, 273, 275, 276, 279, 280, 281, 283, 285, 286, 297, 298, 299, 301, 302, 304, 305, 306, 307, 312, 318, 319, 320, 323, 325, 327, 328, 330, 332, 333, 334, 336, 340, 342, 345, 350, 352, 361, 364, 367, 372, 373, 375, 380, 384, 388, 389, 394, 396, 399, 400, 401, 404, 405, 406, 425, 431, 433, 434, 435, 437, 441, 469, 470, 475, 476, 479, 480, 483, 484, 485, 488, 489, 491, 493, 494, 495, 496, 497, 505], "consid": [0, 44, 75, 101, 144, 156, 229, 233, 235, 240, 247, 273, 275, 279, 302, 303, 304, 312, 325, 327, 333, 336, 367, 396, 433, 440, 441, 448, 449, 453, 469, 475, 476, 485, 493, 494, 496, 497], "stabl": [0, 3, 5, 145, 325, 441, 472, 476, 483], "releas": [0, 44, 136, 145, 155, 159, 216, 435, 469, 496], "init": [0, 74, 152, 193, 304, 319, 342, 361, 396, 414, 430, 431, 456, 463, 464, 472, 478, 485, 494], "choic": [0, 273, 285, 360, 478, 483], "fname": [0, 3, 4, 6, 16, 23, 75, 165, 191, 209, 240, 245, 275, 279, 305, 336, 337, 361, 387, 404, 406, 427, 478, 485], "c": [0, 1, 2, 3, 4, 5, 6, 8, 12, 13, 16, 17, 18, 22, 24, 25, 29, 33, 43, 44, 46, 52, 53, 55, 63, 67, 75, 76, 77, 78, 79, 80, 87, 89, 90, 92, 93, 94, 96, 101, 107, 109, 110, 113, 122, 141, 143, 145, 150, 152, 155, 161, 165, 186, 189, 190, 192, 193, 194, 196, 197, 201, 203, 204, 205, 208, 209, 210, 214, 217, 219, 226, 228, 229, 233, 235, 240, 242, 245, 247, 250, 252, 254, 270, 273, 274, 279, 280, 281, 282, 283, 285, 286, 290, 292, 297, 298, 299, 301, 302, 304, 306, 307, 309, 312, 317, 318, 319, 323, 328, 336, 337, 338, 341, 342, 346, 360, 361, 366, 368, 374, 378, 381, 386, 387, 392, 394, 400, 426, 429, 432, 437, 439, 440, 449, 453, 454, 455, 463, 471, 475, 476, 478, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 493, 494, 496, 497, 499], "scan": [0, 18, 336, 360, 372, 427], "load": [0, 1, 2, 3, 5, 6, 12, 13, 16, 17, 22, 25, 31, 44, 52, 62, 64, 86, 101, 142, 143, 145, 155, 189, 193, 197, 201, 208, 209, 217, 226, 229, 235, 237, 238, 240, 262, 273, 274, 275, 279, 280, 286, 290, 312, 315, 317, 336, 337, 344, 346, 347, 355, 360, 361, 367, 368, 379, 380, 386, 388, 399, 434, 436, 437, 440, 447, 464, 465, 471, 472, 475, 476, 479, 480, 483, 484, 485, 491, 493, 494, 496, 497, 500], "one": [0, 1, 3, 4, 5, 6, 8, 13, 16, 17, 18, 23, 24, 29, 40, 41, 43, 44, 46, 52, 53, 55, 57, 69, 73, 74, 75, 101, 141, 143, 150, 152, 153, 155, 159, 162, 165, 179, 189, 190, 193, 194, 196, 201, 205, 208, 209, 210, 214, 228, 229, 233, 235, 240, 244, 247, 252, 273, 279, 296, 297, 298, 299, 301, 302, 303, 305, 306, 313, 318, 321, 322, 323, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 340, 346, 349, 350, 352, 353, 354, 360, 367, 368, 372, 373, 378, 381, 386, 387, 388, 394, 396, 399, 400, 403, 404, 406, 408, 416, 431, 434, 437, 439, 440, 441, 447, 465, 469, 470, 472, 475, 476, 478, 479, 480, 484, 485, 493, 494, 496, 497, 501, 502, 503, 505], "int": [0, 3, 4, 5, 6, 8, 16, 23, 44, 47, 52, 53, 57, 62, 63, 74, 75, 92, 93, 96, 143, 144, 145, 156, 159, 165, 193, 209, 210, 225, 228, 229, 240, 247, 273, 275, 276, 279, 282, 283, 302, 305, 321, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 336, 360, 387, 391, 396, 398, 399, 400, 404, 406, 429, 475, 499], "option": [0, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 23, 24, 29, 34, 36, 41, 42, 44, 46, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 92, 93, 96, 101, 110, 133, 134, 135, 136, 141, 143, 144, 145, 152, 153, 156, 157, 160, 165, 189, 190, 193, 201, 204, 206, 208, 209, 210, 214, 217, 225, 226, 228, 229, 230, 233, 235, 240, 242, 244, 245, 247, 252, 258, 273, 275, 276, 279, 280, 281, 283, 285, 286, 296, 299, 301, 302, 304, 305, 306, 310, 312, 318, 320, 321, 322, 323, 325, 326, 327, 328, 329, 332, 333, 336, 342, 345, 346, 349, 350, 360, 361, 367, 368, 371, 372, 378, 381, 383, 386, 387, 389, 391, 392, 393, 394, 399, 400, 404, 406, 426, 427, 432, 434, 436, 437, 439, 441, 469, 471, 472, 476, 478, 480, 482, 483, 484, 485, 492, 493, 494, 496, 497, 498, 502], "automat": [0, 53, 75, 145, 152, 226, 229, 233, 245, 276, 279, 302, 333, 334, 336, 366, 367, 394, 396, 440, 448, 449, 452, 466, 467, 469, 470, 475, 476, 478, 481, 484, 486, 493, 505], "item": [0, 18, 19, 23, 52, 53, 116, 142, 152, 153, 156, 209, 232, 235, 240, 275, 281, 282, 302, 321, 325, 328, 330, 332, 333, 349, 360, 361, 387, 388, 389, 398, 399, 400, 406, 431, 439, 440, 447, 454, 458, 462, 463, 470, 474, 478, 482, 505], "out": [0, 1, 3, 4, 5, 7, 8, 13, 16, 18, 20, 25, 29, 40, 42, 44, 45, 52, 53, 75, 101, 143, 145, 150, 155, 157, 189, 190, 191, 193, 209, 210, 214, 216, 228, 233, 240, 244, 245, 273, 279, 280, 290, 298, 299, 301, 302, 306, 318, 319, 323, 330, 336, 337, 361, 368, 384, 388, 389, 391, 406, 416, 427, 433, 434, 435, 436, 437, 441, 447, 453, 469, 471, 472, 475, 476, 478, 480, 483, 484, 485, 488, 489, 493, 494, 497, 498, 501, 502], "menu": [0, 496], "would": [0, 1, 2, 3, 5, 8, 42, 53, 58, 63, 74, 75, 101, 141, 145, 152, 155, 159, 193, 196, 209, 229, 233, 235, 273, 275, 276, 279, 299, 302, 305, 319, 320, 322, 325, 328, 330, 332, 333, 334, 336, 346, 349, 367, 381, 387, 388, 393, 394, 396, 400, 406, 427, 434, 437, 439, 440, 447, 456, 465, 468, 471, 472, 475, 476, 478, 480, 481, 483, 484, 485, 493, 494, 496], "produc": [0, 1, 4, 34, 36, 42, 44, 53, 58, 63, 79, 82, 113, 159, 164, 165, 180, 186, 187, 189, 193, 228, 229, 235, 245, 279, 284, 312, 320, 322, 328, 329, 336, 368, 389, 390, 401, 404, 406, 420, 438, 468, 469, 471, 476, 480, 483, 489, 491, 493, 496, 497, 500, 504], "exist": [0, 3, 5, 6, 34, 41, 43, 44, 52, 57, 60, 62, 66, 74, 75, 76, 142, 143, 145, 147, 152, 153, 160, 189, 190, 191, 193, 196, 233, 240, 247, 252, 257, 258, 260, 273, 275, 276, 279, 282, 299, 302, 306, 318, 330, 332, 333, 336, 337, 350, 361, 390, 392, 396, 401, 403, 406, 412, 419, 432, 434, 437, 439, 440, 441, 460, 468, 469, 470, 471, 475, 476, 480, 482, 489, 491, 493, 494, 496, 497, 499, 505], "xml": [0, 42, 337, 354, 360, 368, 485], "str": [0, 1, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 19, 24, 29, 36, 40, 41, 42, 44, 46, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 101, 143, 144, 145, 152, 153, 156, 158, 160, 162, 164, 165, 167, 168, 169, 189, 190, 193, 196, 201, 204, 208, 209, 210, 214, 228, 229, 230, 233, 235, 240, 244, 247, 252, 273, 274, 275, 279, 280, 282, 284, 285, 296, 299, 302, 305, 306, 307, 312, 318, 320, 321, 323, 325, 330, 332, 333, 336, 337, 341, 346, 349, 350, 360, 361, 366, 367, 368, 371, 372, 378, 381, 386, 387, 388, 389, 391, 392, 393, 394, 396, 400, 403, 404, 405, 406, 427, 429, 439, 447, 474, 475], "an": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 36, 38, 39, 40, 42, 43, 44, 46, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 80, 88, 90, 101, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 136, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 213, 214, 215, 222, 223, 224, 226, 227, 228, 229, 230, 233, 235, 237, 238, 240, 242, 244, 245, 247, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 266, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 305, 306, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 359, 360, 361, 367, 368, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 396, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 453, 455, 457, 460, 461, 468, 469, 471, 472, 473, 475, 476, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503], "actual": [0, 1, 3, 5, 31, 42, 74, 75, 153, 155, 156, 193, 202, 205, 209, 228, 229, 240, 276, 279, 292, 295, 299, 302, 320, 325, 326, 327, 328, 330, 333, 345, 361, 367, 368, 372, 388, 404, 427, 431, 432, 436, 441, 456, 465, 472, 480, 484, 485, 493, 494], "case": [0, 1, 2, 3, 5, 6, 7, 8, 12, 22, 25, 29, 42, 57, 58, 60, 61, 62, 68, 69, 74, 75, 76, 80, 86, 101, 141, 142, 143, 145, 150, 152, 153, 155, 159, 187, 192, 193, 194, 199, 204, 208, 209, 214, 216, 226, 229, 240, 244, 245, 247, 254, 257, 258, 266, 273, 279, 281, 285, 290, 298, 299, 302, 303, 306, 310, 312, 318, 319, 323, 325, 330, 333, 336, 344, 350, 352, 355, 360, 361, 367, 379, 380, 387, 388, 400, 401, 403, 406, 416, 430, 432, 434, 439, 440, 441, 442, 447, 448, 449, 456, 463, 464, 467, 468, 470, 471, 472, 475, 476, 478, 480, 481, 483, 485, 486, 488, 491, 493, 494, 495, 497, 499, 500, 501, 503, 505], "name": [0, 1, 2, 3, 5, 6, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 75, 76, 77, 78, 79, 80, 84, 86, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 155, 156, 157, 160, 163, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 196, 198, 199, 200, 201, 202, 204, 205, 208, 209, 212, 213, 214, 215, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 266, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 305, 306, 311, 312, 313, 314, 315, 316, 317, 318, 319, 327, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 359, 360, 361, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 394, 396, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 432, 434, 435, 439, 441, 453, 454, 462, 463, 465, 468, 470, 471, 472, 475, 476, 478, 480, 482, 483, 484, 485, 488, 489, 490, 491, 494, 495, 496, 497, 499, 504, 505], "e": [0, 1, 3, 4, 5, 6, 7, 8, 18, 23, 29, 34, 44, 57, 74, 75, 76, 86, 90, 92, 93, 96, 139, 141, 142, 143, 144, 145, 150, 152, 153, 155, 156, 157, 165, 184, 189, 190, 191, 192, 193, 210, 216, 228, 229, 233, 240, 244, 245, 247, 273, 274, 275, 279, 280, 283, 284, 290, 296, 297, 298, 299, 301, 302, 304, 306, 312, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 332, 333, 336, 341, 346, 350, 361, 366, 367, 373, 387, 391, 399, 400, 403, 404, 426, 427, 433, 434, 436, 437, 440, 441, 463, 468, 469, 470, 471, 472, 475, 476, 478, 480, 483, 484, 489, 490, 493, 494, 495, 496, 497, 502, 505], "g": [0, 1, 3, 5, 6, 7, 8, 18, 29, 34, 44, 57, 74, 75, 76, 77, 79, 86, 87, 90, 97, 98, 99, 100, 101, 105, 107, 110, 130, 131, 132, 133, 134, 136, 141, 143, 144, 145, 150, 152, 153, 155, 157, 159, 165, 168, 174, 184, 189, 190, 191, 192, 193, 210, 216, 225, 228, 229, 240, 244, 247, 252, 273, 275, 279, 280, 283, 284, 296, 299, 302, 306, 312, 318, 319, 320, 321, 323, 325, 326, 328, 329, 330, 332, 333, 336, 341, 350, 367, 373, 387, 391, 399, 403, 404, 433, 434, 436, 437, 440, 460, 463, 468, 469, 470, 471, 472, 475, 476, 478, 480, 481, 483, 484, 489, 490, 491, 493, 495, 496, 497, 502, 505], "nttwr1": 0, "suppli": [0, 3, 16, 44, 47, 53, 60, 75, 101, 141, 191, 280, 302, 332, 337, 401, 404, 469, 475, 476, 493, 496, 497], "superced": 0, "other": [0, 1, 3, 4, 5, 6, 16, 17, 18, 24, 29, 34, 40, 44, 46, 52, 53, 57, 63, 69, 73, 74, 75, 101, 132, 141, 142, 152, 153, 155, 157, 159, 173, 174, 184, 189, 190, 191, 193, 194, 197, 204, 209, 214, 216, 228, 229, 233, 238, 240, 250, 252, 279, 280, 284, 290, 296, 297, 298, 299, 302, 303, 304, 305, 306, 321, 325, 327, 328, 329, 330, 332, 333, 334, 336, 340, 346, 360, 361, 366, 372, 387, 388, 396, 399, 400, 404, 419, 430, 432, 434, 436, 437, 439, 440, 441, 468, 469, 470, 471, 475, 476, 478, 480, 481, 482, 483, 484, 485, 490, 493, 494, 496, 497, 498, 499, 501, 502, 505], "method": [0, 1, 3, 4, 5, 11, 12, 13, 14, 16, 18, 20, 27, 28, 31, 32, 33, 38, 39, 44, 46, 50, 51, 52, 53, 55, 56, 63, 71, 72, 75, 79, 86, 99, 101, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 141, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 159, 161, 163, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 193, 194, 196, 197, 199, 200, 201, 204, 206, 209, 213, 214, 215, 222, 223, 224, 225, 228, 229, 234, 235, 237, 238, 240, 242, 245, 248, 250, 251, 252, 255, 257, 258, 259, 260, 261, 262, 266, 273, 275, 279, 280, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 301, 302, 304, 306, 309, 310, 312, 313, 314, 315, 316, 317, 318, 321, 323, 328, 330, 332, 333, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 359, 361, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 396, 398, 399, 400, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 434, 435, 436, 437, 439, 457, 468, 469, 470, 472, 475, 478, 493, 494, 496, 497, 499, 505], "directli": [0, 1, 3, 4, 5, 16, 42, 74, 76, 101, 145, 153, 162, 167, 196, 233, 273, 279, 281, 284, 296, 299, 302, 304, 323, 326, 328, 329, 334, 336, 367, 372, 433, 439, 455, 463, 465, 469, 472, 480, 483, 485, 493, 499], "exampl": [0, 1, 3, 5, 8, 16, 23, 43, 46, 52, 53, 57, 73, 74, 75, 76, 101, 141, 142, 143, 144, 145, 150, 152, 153, 154, 155, 157, 162, 163, 164, 165, 167, 168, 169, 189, 190, 193, 194, 206, 209, 210, 228, 229, 235, 240, 245, 273, 275, 279, 280, 281, 283, 284, 285, 286, 299, 302, 303, 305, 306, 318, 319, 321, 323, 327, 328, 329, 333, 334, 336, 349, 353, 366, 367, 372, 387, 389, 396, 399, 400, 401, 404, 405, 423, 427, 431, 432, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 493, 495, 496, 497, 499, 501, 502], "o": [0, 3, 18, 25, 75, 105, 107, 134, 141, 143, 145, 155, 160, 193, 196, 203, 204, 235, 240, 245, 250, 279, 280, 285, 290, 297, 298, 301, 302, 306, 323, 326, 328, 329, 333, 336, 341, 342, 346, 356, 372, 392, 394, 403, 426, 437, 438, 440, 449, 456, 463, 465, 472, 474, 478, 481, 485, 489, 493, 498], "getdefaultplugin": [0, 430], "list": [0, 1, 3, 5, 8, 16, 18, 23, 29, 30, 31, 36, 41, 44, 46, 52, 53, 56, 57, 63, 67, 75, 76, 92, 93, 96, 101, 141, 142, 144, 153, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 184, 189, 190, 193, 204, 208, 209, 210, 228, 229, 233, 235, 240, 244, 245, 247, 273, 275, 276, 279, 281, 282, 283, 284, 285, 296, 299, 302, 304, 305, 307, 312, 318, 319, 320, 322, 325, 326, 327, 329, 332, 333, 336, 337, 342, 345, 349, 360, 361, 362, 364, 367, 370, 372, 373, 378, 387, 388, 391, 392, 394, 395, 396, 399, 400, 401, 403, 404, 406, 427, 431, 434, 437, 439, 441, 452, 453, 466, 467, 468, 471, 472, 475, 476, 478, 482, 484, 485, 486, 488, 489, 490, 491, 494, 496, 497, 499, 500, 504], "type": [0, 3, 4, 5, 7, 8, 13, 16, 22, 23, 25, 38, 40, 44, 46, 52, 53, 63, 74, 75, 76, 77, 78, 79, 81, 89, 91, 92, 93, 94, 95, 96, 99, 101, 109, 110, 113, 122, 133, 134, 136, 139, 141, 143, 144, 145, 149, 150, 153, 156, 157, 164, 168, 184, 189, 190, 191, 192, 193, 195, 196, 209, 210, 214, 225, 226, 228, 229, 235, 240, 242, 247, 260, 273, 274, 275, 276, 279, 280, 281, 284, 285, 288, 291, 292, 294, 296, 299, 302, 303, 304, 305, 306, 310, 312, 316, 318, 319, 320, 322, 325, 326, 328, 329, 330, 332, 333, 334, 336, 342, 346, 349, 360, 361, 367, 370, 375, 387, 388, 391, 396, 398, 399, 400, 402, 403, 404, 405, 406, 427, 429, 432, 433, 434, 436, 437, 439, 440, 448, 455, 465, 469, 470, 471, 472, 476, 478, 480, 482, 484, 485, 488, 489, 490, 494, 495, 496, 497, 499, 503, 505], "armiplugin": [0, 1, 2, 55, 57, 205, 219, 226, 263, 270, 273, 274, 370, 375, 383, 430, 436, 480, 493], "return": [0, 1, 3, 4, 5, 6, 7, 8, 13, 16, 21, 22, 23, 29, 40, 44, 52, 53, 57, 63, 75, 76, 77, 78, 79, 80, 81, 84, 89, 92, 93, 94, 96, 100, 101, 105, 108, 110, 111, 113, 134, 136, 137, 138, 141, 143, 144, 145, 150, 152, 154, 156, 157, 159, 161, 163, 165, 166, 168, 172, 188, 189, 190, 191, 192, 193, 196, 201, 207, 209, 210, 218, 225, 226, 228, 229, 231, 233, 235, 240, 242, 244, 245, 247, 253, 269, 273, 275, 276, 279, 284, 285, 296, 297, 298, 299, 300, 302, 304, 305, 312, 313, 317, 318, 320, 322, 323, 325, 326, 327, 328, 329, 332, 333, 336, 337, 340, 342, 346, 349, 360, 361, 364, 366, 367, 368, 372, 387, 389, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 406, 412, 427, 428, 429, 436, 437, 439, 440, 455, 463, 465, 472, 475, 478, 483, 484, 494, 503], "contain": [0, 1, 3, 5, 8, 18, 23, 34, 40, 42, 44, 52, 53, 74, 75, 89, 92, 93, 96, 101, 141, 142, 145, 149, 150, 152, 153, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 184, 187, 189, 190, 191, 193, 196, 197, 202, 209, 226, 228, 229, 231, 233, 235, 237, 240, 243, 244, 245, 248, 252, 273, 274, 275, 276, 279, 281, 282, 283, 284, 286, 296, 297, 299, 302, 303, 304, 306, 312, 313, 318, 319, 320, 321, 325, 327, 330, 333, 334, 336, 337, 340, 349, 351, 361, 362, 364, 366, 368, 372, 373, 383, 387, 388, 390, 391, 394, 396, 398, 399, 400, 402, 403, 404, 405, 406, 423, 427, 429, 434, 436, 437, 438, 439, 441, 443, 444, 446, 451, 455, 467, 468, 469, 470, 475, 476, 478, 480, 483, 485, 486, 488, 489, 493, 494, 495, 496, 497, 498, 499, 505], "default": [0, 1, 2, 3, 4, 5, 9, 16, 22, 23, 25, 29, 41, 43, 44, 46, 53, 57, 62, 63, 75, 76, 79, 81, 86, 89, 101, 143, 153, 163, 189, 190, 196, 204, 209, 210, 225, 226, 229, 240, 242, 247, 258, 273, 275, 276, 279, 280, 284, 285, 286, 302, 304, 318, 319, 326, 328, 330, 331, 332, 333, 336, 341, 346, 349, 350, 360, 361, 367, 368, 370, 371, 387, 392, 400, 404, 427, 431, 432, 436, 439, 470, 471, 472, 475, 476, 478, 480, 483, 485, 488, 493, 494, 496, 497, 502, 505], "framework": [0, 1, 44, 73, 75, 76, 142, 143, 145, 150, 192, 193, 202, 209, 226, 229, 233, 243, 273, 319, 334, 360, 362, 364, 372, 375, 393, 433, 435, 436, 443, 446, 447, 456, 469, 472, 478, 480, 481, 483, 493, 496, 497, 500, 505], "applic": [0, 1, 53, 57, 63, 73, 74, 75, 143, 145, 226, 229, 233, 318, 333, 340, 352, 373, 388, 394, 432, 433, 435, 440, 469, 470, 472, 474, 480, 482, 484, 489, 493, 505], "fold": 0, "": [0, 1, 3, 4, 5, 6, 8, 13, 16, 17, 18, 23, 24, 29, 31, 36, 42, 44, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 78, 82, 98, 101, 105, 110, 132, 133, 134, 136, 139, 141, 142, 143, 145, 147, 150, 152, 155, 156, 157, 159, 168, 189, 190, 191, 192, 193, 196, 197, 204, 208, 209, 225, 228, 230, 233, 240, 244, 273, 275, 276, 279, 280, 282, 284, 290, 296, 297, 298, 299, 301, 302, 303, 306, 319, 321, 323, 326, 327, 328, 329, 330, 332, 333, 334, 336, 339, 340, 341, 342, 346, 349, 350, 352, 361, 367, 371, 384, 387, 388, 391, 396, 398, 399, 400, 401, 403, 404, 406, 426, 427, 428, 431, 433, 434, 435, 436, 437, 438, 439, 443, 446, 454, 455, 463, 467, 469, 470, 474, 476, 478, 480, 481, 482, 484, 485, 486, 488, 489, 491, 493, 494, 496, 497, 498, 499, 505], "capabl": [0, 44, 52, 160, 193, 202, 209, 214, 226, 340, 420, 427, 436, 437, 442, 467, 471, 472, 476, 478, 484, 485, 486, 493], "its": [0, 1, 5, 75, 101, 113, 122, 141, 142, 145, 159, 193, 196, 210, 225, 238, 274, 275, 279, 284, 290, 296, 297, 298, 299, 301, 302, 305, 315, 318, 330, 332, 334, 336, 346, 360, 361, 367, 373, 375, 391, 400, 404, 431, 434, 436, 439, 445, 452, 467, 468, 469, 470, 471, 475, 476, 478, 481, 486, 488, 489, 491, 492, 493, 494, 496, 499, 500, 505], "own": [0, 1, 23, 46, 53, 141, 152, 155, 159, 204, 209, 229, 233, 235, 240, 273, 276, 290, 302, 303, 330, 334, 360, 367, 375, 396, 432, 440, 442, 448, 449, 462, 465, 467, 469, 471, 472, 475, 480, 483, 486, 493, 497, 503], "getdefaultpluginmanag": [0, 430], "armipluginmanag": [0, 1, 272, 273, 430], "manag": [0, 1, 3, 6, 24, 41, 44, 46, 141, 142, 193, 196, 197, 202, 205, 208, 209, 210, 214, 226, 228, 229, 233, 235, 257, 272, 273, 276, 302, 304, 312, 319, 333, 336, 366, 372, 378, 392, 434, 435, 452, 466, 467, 468, 469, 470, 472, 479, 480, 483, 486, 489, 492, 495, 496, 497, 499, 501, 505], "when": [0, 2, 4, 5, 8, 11, 12, 13, 14, 16, 18, 20, 23, 27, 28, 29, 31, 32, 33, 36, 38, 39, 41, 42, 44, 47, 50, 51, 52, 53, 55, 56, 62, 63, 67, 71, 72, 73, 74, 75, 76, 79, 86, 90, 101, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 141, 143, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 162, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 193, 194, 196, 199, 200, 201, 204, 209, 210, 213, 214, 215, 222, 223, 224, 226, 228, 229, 233, 237, 238, 240, 242, 247, 250, 251, 254, 257, 258, 259, 260, 261, 262, 266, 272, 273, 275, 276, 279, 280, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 302, 304, 305, 306, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 327, 328, 330, 332, 333, 334, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 359, 360, 361, 367, 368, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 396, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 436, 437, 439, 440, 441, 463, 469, 470, 471, 472, 475, 476, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 494, 496, 497, 499, 502, 505], "standalon": [0, 20, 190, 469], "facil": [0, 476], "without": [0, 3, 8, 39, 42, 44, 52, 75, 86, 101, 122, 134, 141, 144, 150, 190, 193, 196, 209, 229, 240, 279, 283, 285, 290, 305, 318, 323, 328, 330, 350, 352, 372, 373, 381, 399, 401, 403, 404, 431, 436, 439, 440, 441, 465, 468, 469, 470, 471, 472, 475, 476, 484, 489, 493, 496, 505], "isconfigur": [0, 430, 478, 483], "whether": [0, 3, 5, 8, 23, 36, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 101, 145, 165, 188, 193, 196, 226, 230, 233, 240, 279, 285, 286, 299, 302, 304, 323, 325, 330, 333, 349, 353, 360, 367, 368, 371, 373, 387, 403, 427, 439, 440, 469, 470, 472, 484, 493, 496, 497, 499, 505], "ha": [0, 1, 3, 5, 8, 13, 16, 18, 23, 31, 34, 44, 52, 53, 58, 74, 75, 80, 82, 88, 89, 101, 116, 122, 141, 142, 144, 150, 155, 156, 165, 168, 186, 193, 194, 196, 204, 209, 210, 233, 235, 240, 242, 244, 250, 252, 258, 272, 273, 275, 276, 279, 281, 285, 289, 290, 296, 299, 301, 302, 304, 305, 306, 312, 317, 318, 319, 320, 323, 326, 327, 328, 330, 331, 332, 334, 336, 337, 342, 344, 346, 360, 361, 367, 370, 372, 387, 392, 396, 399, 400, 403, 405, 422, 423, 427, 434, 437, 439, 441, 457, 465, 468, 469, 470, 471, 472, 473, 475, 476, 478, 480, 481, 483, 484, 485, 488, 489, 491, 493, 494, 496, 497, 499, 505], "been": [0, 3, 4, 5, 6, 16, 41, 42, 44, 52, 75, 155, 157, 186, 189, 194, 204, 208, 209, 240, 244, 258, 272, 273, 275, 276, 279, 281, 299, 302, 304, 319, 327, 330, 331, 332, 333, 334, 336, 337, 342, 370, 372, 392, 395, 396, 399, 400, 405, 434, 437, 439, 440, 465, 468, 469, 471, 475, 480, 483, 485, 489, 493, 494, 502], "app": [0, 52, 57, 76, 196, 202, 253, 273, 375, 379, 394, 430, 432, 434, 435, 471, 478, 479, 483, 485, 497, 502], "getpluginmanag": [0, 430], "getpluginmanagerorfail": [0, 273, 430], "rais": [0, 3, 6, 11, 12, 13, 14, 16, 17, 27, 28, 29, 31, 32, 33, 38, 39, 44, 50, 51, 52, 53, 55, 56, 71, 72, 74, 75, 76, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 141, 145, 147, 148, 149, 150, 151, 156, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 192, 193, 196, 199, 200, 201, 213, 214, 215, 222, 223, 224, 226, 228, 229, 237, 238, 240, 242, 247, 250, 251, 257, 258, 259, 260, 261, 262, 266, 273, 279, 280, 286, 288, 289, 290, 291, 292, 293, 294, 295, 302, 304, 312, 313, 314, 315, 316, 317, 319, 331, 332, 333, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 359, 367, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 392, 403, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 476], "error": [0, 1, 3, 5, 6, 57, 58, 75, 101, 122, 141, 150, 152, 157, 159, 187, 189, 193, 194, 196, 204, 229, 240, 273, 286, 290, 302, 303, 319, 320, 329, 330, 331, 334, 350, 360, 367, 368, 370, 375, 387, 390, 392, 394, 399, 400, 405, 427, 430, 434, 439, 440, 441, 469, 470, 472, 476, 480, 483, 484, 489, 491, 493, 497, 501, 505], "getapp": [0, 430], "permiss": [0, 2, 3, 5, 7, 403, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 469, 484], "fals": [0, 3, 5, 6, 16, 22, 25, 44, 58, 63, 75, 101, 122, 141, 143, 145, 156, 157, 159, 161, 163, 165, 166, 189, 190, 193, 196, 201, 204, 209, 229, 233, 247, 248, 250, 252, 275, 279, 280, 284, 286, 288, 292, 294, 296, 297, 298, 299, 301, 302, 304, 306, 307, 312, 318, 320, 322, 323, 325, 326, 327, 328, 329, 336, 341, 342, 349, 350, 361, 367, 373, 374, 387, 389, 391, 400, 402, 403, 404, 406, 427, 432, 434, 472, 478, 482, 483, 485, 493, 496, 497], "intern": [0, 3, 4, 6, 42, 53, 75, 89, 136, 153, 165, 189, 210, 229, 320, 325, 328, 332, 336, 345, 434, 436, 440, 468, 473, 480], "those": [0, 5, 39, 42, 53, 75, 145, 157, 209, 273, 275, 279, 285, 299, 302, 303, 318, 319, 320, 327, 330, 333, 336, 387, 399, 404, 434, 436, 439, 440, 470, 476, 478, 480, 484, 485, 493, 496, 505], "instanc": [0, 3, 4, 5, 8, 11, 12, 13, 14, 18, 27, 28, 31, 32, 33, 38, 39, 41, 50, 51, 53, 55, 56, 71, 72, 74, 75, 80, 87, 101, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 134, 136, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 156, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 191, 199, 200, 201, 209, 213, 214, 215, 222, 223, 224, 229, 237, 238, 242, 247, 250, 251, 257, 258, 259, 260, 261, 262, 266, 273, 275, 276, 280, 281, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 302, 305, 306, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 328, 330, 332, 333, 334, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 359, 360, 361, 367, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 396, 399, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 433, 434, 436, 437, 440, 441, 465, 469, 471, 478, 481, 482, 488, 493, 496, 497, 499], "which": [0, 1, 3, 4, 5, 8, 16, 23, 39, 40, 42, 44, 52, 53, 62, 63, 73, 74, 75, 76, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 136, 137, 138, 139, 141, 142, 145, 149, 153, 155, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 189, 190, 191, 192, 193, 194, 195, 196, 207, 209, 210, 214, 216, 228, 229, 231, 233, 235, 240, 242, 244, 245, 247, 253, 254, 273, 275, 276, 279, 281, 284, 285, 286, 296, 297, 298, 299, 302, 304, 306, 312, 318, 319, 320, 325, 326, 327, 330, 333, 334, 336, 337, 346, 360, 361, 368, 372, 373, 387, 389, 392, 394, 396, 398, 399, 400, 406, 426, 427, 434, 436, 437, 438, 439, 440, 441, 448, 449, 465, 469, 470, 471, 475, 476, 478, 480, 481, 483, 484, 485, 488, 489, 493, 494, 495, 496, 497, 499, 501, 502, 505], "provid": [0, 1, 3, 5, 6, 16, 18, 25, 30, 36, 40, 44, 46, 53, 57, 63, 67, 71, 74, 75, 76, 83, 90, 101, 110, 132, 141, 142, 143, 145, 152, 155, 161, 163, 166, 184, 190, 193, 196, 202, 209, 228, 229, 234, 235, 240, 247, 248, 255, 266, 273, 275, 276, 284, 285, 286, 299, 302, 304, 305, 312, 318, 319, 320, 328, 330, 333, 336, 341, 350, 361, 367, 370, 372, 383, 389, 392, 396, 399, 404, 427, 429, 431, 432, 436, 439, 440, 441, 445, 452, 456, 458, 462, 465, 467, 469, 470, 472, 475, 476, 480, 481, 484, 485, 486, 488, 489, 490, 491, 493, 496, 497, 499, 501, 504, 505], "onli": [0, 2, 3, 5, 6, 7, 8, 13, 16, 20, 29, 34, 41, 42, 53, 73, 75, 101, 132, 141, 142, 145, 152, 153, 156, 165, 174, 189, 190, 191, 193, 204, 206, 207, 209, 210, 226, 228, 235, 240, 242, 245, 247, 252, 258, 273, 275, 279, 280, 284, 286, 292, 296, 297, 298, 299, 302, 304, 306, 310, 312, 317, 318, 319, 321, 323, 325, 326, 327, 330, 332, 333, 336, 337, 340, 345, 350, 353, 361, 364, 367, 368, 371, 372, 373, 387, 390, 394, 395, 396, 399, 400, 401, 404, 406, 427, 433, 436, 437, 439, 440, 441, 448, 449, 469, 472, 475, 476, 478, 480, 483, 484, 485, 488, 489, 491, 493, 496, 497, 498, 499, 502], "true": [0, 3, 5, 6, 13, 18, 22, 23, 25, 43, 44, 52, 57, 63, 75, 101, 122, 141, 142, 143, 145, 156, 157, 159, 161, 163, 166, 183, 189, 190, 193, 196, 209, 226, 228, 229, 233, 235, 240, 242, 245, 252, 275, 279, 280, 285, 286, 288, 292, 294, 296, 297, 299, 301, 302, 304, 305, 306, 312, 318, 319, 320, 323, 326, 327, 333, 336, 340, 341, 342, 360, 361, 367, 368, 387, 392, 394, 399, 400, 402, 403, 404, 427, 431, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 469, 478, 482, 484, 485, 493, 496, 497, 498, 502], "under": [0, 3, 5, 52, 73, 74, 105, 204, 209, 226, 245, 273, 282, 296, 299, 302, 339, 349, 381, 433, 434, 440, 441, 469, 470, 475, 476, 480, 484, 493, 500, 502, 505], "test": [0, 2, 3, 19, 34, 43, 44, 45, 52, 57, 58, 73, 74, 76, 142, 154, 155, 190, 192, 202, 205, 216, 226, 232, 239, 246, 272, 274, 280, 286, 302, 303, 319, 321, 325, 330, 351, 352, 360, 361, 367, 387, 401, 428, 430, 431, 434, 435, 442, 447, 448, 449, 453, 455, 456, 460, 461, 464, 467, 468, 469, 471, 472, 474, 480, 483, 485, 486, 493, 496, 497], "demonstr": [0, 257, 340, 341, 346, 376, 420, 439, 442, 455, 456, 467, 468, 471, 476, 479, 485, 486], "purpos": [0, 3, 5, 76, 142, 156, 190, 192, 204, 226, 228, 258, 279, 302, 320, 325, 336, 364, 394, 439, 440, 441, 456, 468, 471, 494], "where": [0, 2, 3, 5, 8, 16, 17, 23, 25, 29, 40, 51, 53, 55, 75, 76, 101, 105, 142, 143, 144, 145, 152, 156, 157, 165, 191, 193, 199, 201, 202, 204, 209, 210, 214, 228, 229, 233, 247, 258, 273, 275, 276, 279, 296, 299, 302, 304, 312, 313, 318, 319, 320, 321, 322, 323, 325, 327, 328, 333, 334, 336, 361, 378, 381, 386, 387, 400, 403, 427, 436, 439, 440, 441, 469, 471, 472, 475, 476, 480, 485, 488, 489, 491, 493, 494, 496, 497, 499, 502, 503], "content": [0, 2, 3, 5, 8, 20, 22, 23, 156, 165, 187, 226, 235, 254, 273, 284, 325, 372, 373, 388, 392, 394, 427, 439, 441, 462, 476, 478, 493], "otherwis": [0, 1, 3, 5, 6, 44, 75, 141, 145, 152, 153, 156, 209, 240, 275, 279, 283, 318, 319, 323, 325, 326, 328, 330, 332, 336, 372, 388, 400, 401, 403, 427, 437, 469, 476, 481, 491, 494, 502], "independ": [0, 3, 5, 44, 46, 53, 157, 159, 194, 197, 226, 227, 233, 305, 318, 360, 437, 441, 469, 480, 484, 493, 497, 503], "script": [0, 2, 19, 21, 74, 203, 226, 230, 430, 437, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 470, 471, 480, 483, 484, 485, 494, 497, 499, 505], "need": [0, 1, 3, 5, 7, 8, 16, 24, 41, 44, 46, 52, 53, 55, 62, 86, 101, 141, 142, 145, 155, 159, 165, 186, 190, 193, 194, 195, 196, 204, 209, 228, 229, 233, 240, 244, 247, 252, 273, 275, 276, 279, 280, 281, 284, 285, 286, 299, 302, 303, 304, 306, 318, 319, 320, 323, 326, 328, 330, 333, 334, 336, 340, 346, 350, 352, 353, 361, 367, 372, 381, 388, 396, 400, 401, 404, 405, 427, 431, 432, 433, 434, 436, 437, 439, 440, 441, 447, 456, 469, 470, 471, 476, 478, 480, 481, 482, 483, 484, 485, 488, 493, 494, 496, 497, 498, 499, 505], "same": [0, 3, 4, 5, 6, 16, 44, 46, 52, 63, 74, 77, 85, 99, 100, 101, 107, 112, 136, 141, 142, 145, 150, 156, 159, 165, 168, 171, 172, 189, 193, 194, 228, 229, 233, 260, 273, 275, 276, 279, 302, 304, 305, 306, 318, 319, 320, 326, 329, 330, 331, 332, 333, 336, 340, 342, 350, 380, 389, 394, 400, 401, 403, 404, 405, 427, 431, 434, 437, 439, 440, 441, 453, 469, 470, 472, 475, 476, 478, 480, 482, 484, 485, 489, 493, 496, 497, 505], "sinc": [0, 1, 3, 6, 7, 16, 23, 42, 44, 53, 75, 101, 116, 141, 145, 152, 155, 156, 157, 159, 161, 163, 166, 173, 191, 193, 194, 197, 228, 229, 240, 247, 252, 257, 273, 275, 279, 284, 296, 299, 302, 305, 319, 322, 328, 330, 332, 333, 334, 336, 340, 346, 375, 387, 389, 393, 396, 427, 439, 465, 469, 471, 476, 478, 480, 482, 484, 485, 488, 491, 493, 494, 496], "affect": [0, 5, 73, 101, 216, 276, 302, 319, 386, 387, 404, 440, 472, 476, 484, 493, 497], "behavior": [0, 1, 3, 5, 31, 75, 116, 169, 194, 210, 216, 226, 229, 237, 273, 283, 284, 296, 302, 318, 319, 327, 330, 333, 353, 360, 367, 390, 396, 405, 436, 471, 472, 476, 495, 496, 497], "time": [0, 1, 2, 3, 4, 5, 6, 12, 16, 23, 29, 41, 42, 44, 47, 74, 75, 101, 141, 142, 145, 150, 153, 157, 165, 192, 193, 197, 202, 209, 226, 229, 233, 240, 245, 247, 252, 254, 272, 273, 275, 285, 299, 302, 312, 318, 322, 327, 333, 336, 350, 352, 360, 372, 373, 384, 387, 389, 399, 400, 401, 403, 404, 406, 409, 434, 435, 437, 439, 441, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 475, 476, 478, 480, 484, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 500, 502, 504, 505], "gener": [0, 2, 3, 4, 5, 16, 19, 20, 22, 24, 25, 31, 36, 40, 42, 43, 52, 53, 57, 58, 63, 67, 74, 75, 86, 141, 142, 143, 145, 150, 152, 155, 164, 166, 186, 189, 192, 193, 196, 202, 203, 204, 209, 210, 211, 216, 219, 220, 222, 223, 226, 228, 229, 233, 235, 240, 242, 244, 247, 248, 254, 255, 257, 263, 266, 270, 271, 273, 275, 279, 280, 285, 286, 296, 299, 302, 303, 304, 305, 306, 307, 309, 318, 319, 325, 326, 328, 330, 334, 336, 352, 353, 356, 360, 364, 365, 368, 372, 381, 387, 388, 389, 392, 394, 398, 399, 404, 406, 427, 428, 431, 433, 434, 435, 439, 441, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 471, 472, 474, 475, 476, 480, 481, 483, 484, 485, 486, 487, 489, 491, 493, 494, 497, 499, 500, 501, 502], "safe": [0, 44, 272, 273, 299, 320, 328, 332, 350, 367, 375, 491], "re": [0, 3, 5, 17, 62, 74, 81, 101, 110, 143, 145, 152, 156, 209, 244, 275, 279, 284, 296, 302, 303, 306, 327, 342, 349, 353, 378, 401, 427, 434, 440, 456, 465, 471, 480, 483, 484, 485, 488, 489, 496], "therefor": [0, 3, 5, 141, 159, 193, 228, 233, 244, 273, 290, 302, 312, 319, 323, 333, 336, 401, 404, 406, 422, 434, 440, 476, 494, 499], "runtimeerror": [0, 3, 6, 17, 29, 44, 53, 55, 75, 150, 193, 196, 201, 240, 273, 302, 304, 312, 378, 381, 386], "attempt": [0, 3, 4, 5, 44, 46, 52, 62, 228, 240, 273, 281, 284, 286, 318, 319, 331, 332, 334, 361, 368, 387, 388, 399, 401, 405, 427, 469, 471, 476, 497], "unless": [0, 17, 41, 143, 145, 152, 245, 325, 336, 399, 436, 437, 439, 440, 441, 469, 470, 484, 493, 505], "we": [0, 1, 2, 3, 4, 5, 6, 8, 12, 23, 42, 52, 55, 71, 74, 77, 85, 99, 101, 107, 112, 136, 144, 145, 149, 150, 152, 155, 156, 159, 165, 176, 181, 182, 183, 186, 190, 193, 194, 201, 202, 209, 210, 217, 226, 228, 238, 240, 247, 250, 253, 254, 258, 273, 275, 276, 279, 280, 283, 284, 285, 286, 290, 294, 296, 299, 302, 303, 304, 317, 318, 320, 325, 327, 328, 330, 332, 333, 334, 336, 340, 341, 342, 344, 346, 349, 350, 354, 367, 370, 373, 379, 380, 381, 382, 386, 388, 394, 396, 400, 401, 403, 408, 414, 427, 431, 433, 434, 436, 437, 438, 439, 440, 441, 447, 458, 461, 463, 468, 469, 470, 473, 475, 478, 480, 481, 482, 483, 484, 485, 488, 493, 494, 495, 499, 502, 503, 505], "ar": [0, 1, 3, 4, 5, 6, 8, 16, 17, 18, 23, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 46, 47, 53, 55, 57, 63, 74, 75, 76, 77, 78, 79, 80, 84, 86, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 105, 107, 108, 109, 110, 112, 113, 122, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 149, 152, 153, 155, 157, 158, 159, 163, 164, 165, 172, 174, 177, 179, 183, 189, 190, 191, 192, 193, 194, 196, 197, 201, 202, 203, 204, 206, 209, 210, 213, 214, 216, 217, 228, 229, 231, 233, 235, 237, 238, 240, 242, 244, 245, 247, 252, 254, 257, 262, 270, 272, 273, 274, 275, 276, 279, 280, 281, 283, 284, 285, 286, 290, 292, 294, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 310, 312, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 340, 342, 346, 349, 352, 353, 360, 361, 364, 366, 367, 368, 370, 371, 372, 378, 379, 381, 386, 387, 388, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 416, 420, 426, 427, 429, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 453, 455, 460, 462, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 481, 483, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505], "plan": [0, 1, 157, 336, 436, 470, 474, 484, 493, 505], "encapsul": [0, 1, 189], "much": [0, 1, 3, 5, 16, 48, 90, 133, 142, 187, 193, 229, 273, 279, 280, 281, 319, 323, 325, 336, 341, 346, 354, 388, 396, 427, 434, 436, 437, 441, 468, 469, 475, 478, 480, 484, 493, 494, 496, 497], "global": [0, 1, 74, 76, 143, 145, 159, 163, 165, 193, 204, 233, 235, 237, 239, 240, 242, 258, 273, 275, 279, 299, 302, 318, 321, 327, 328, 330, 333, 336, 350, 360, 361, 364, 390, 435, 441, 456, 469, 471, 472, 476, 482, 485, 491, 493, 496, 497, 498, 502], "get": [0, 1, 2, 3, 4, 5, 6, 18, 19, 23, 30, 42, 44, 52, 53, 57, 74, 75, 76, 79, 86, 90, 99, 101, 132, 141, 142, 143, 144, 145, 148, 149, 152, 153, 154, 155, 157, 163, 173, 189, 190, 191, 193, 204, 209, 210, 228, 235, 240, 244, 245, 260, 273, 275, 276, 279, 281, 284, 285, 289, 296, 299, 302, 306, 312, 316, 318, 325, 326, 327, 328, 330, 331, 332, 333, 336, 340, 341, 342, 346, 349, 350, 352, 367, 370, 373, 379, 380, 387, 388, 391, 393, 400, 401, 406, 408, 411, 412, 427, 428, 432, 433, 435, 436, 437, 438, 439, 441, 471, 478, 480, 481, 483, 484, 492, 493, 494, 496, 497, 498, 499], "itself": [0, 3, 5, 42, 46, 62, 141, 142, 189, 276, 279, 296, 328, 330, 334, 336, 360, 387, 388, 427, 431, 432, 434, 436, 439, 441, 463, 469, 471, 475, 476, 478, 480, 483, 484, 494, 502], "thing": [0, 1, 3, 5, 6, 16, 20, 22, 25, 44, 52, 57, 74, 101, 141, 144, 153, 187, 196, 205, 214, 233, 240, 273, 275, 276, 279, 284, 285, 294, 296, 302, 305, 318, 319, 320, 321, 325, 327, 328, 330, 332, 336, 350, 360, 361, 373, 388, 400, 403, 432, 434, 436, 437, 439, 440, 442, 467, 468, 469, 471, 478, 480, 483, 484, 485, 486, 493, 494, 495, 499, 501], "go": [0, 8, 16, 83, 101, 145, 209, 262, 273, 275, 279, 280, 299, 306, 319, 332, 336, 400, 404, 431, 436, 437, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 480, 493, 498], "number": [0, 3, 4, 5, 8, 16, 23, 28, 41, 44, 47, 52, 75, 79, 86, 101, 117, 134, 141, 142, 143, 144, 145, 156, 157, 159, 162, 165, 172, 189, 190, 193, 209, 210, 214, 225, 228, 229, 233, 235, 240, 245, 247, 252, 275, 276, 279, 282, 283, 292, 298, 299, 302, 304, 305, 306, 307, 312, 314, 317, 318, 319, 322, 323, 326, 328, 330, 332, 336, 340, 341, 350, 361, 367, 373, 378, 380, 387, 388, 391, 394, 396, 398, 399, 400, 404, 405, 406, 421, 427, 434, 437, 441, 454, 462, 471, 472, 476, 479, 480, 481, 482, 484, 485, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 504], "benefit": [0, 3, 42, 53, 128, 129, 130, 326, 327, 330, 431, 434, 463, 469], "main": [0, 1, 3, 5, 6, 17, 39, 42, 57, 71, 77, 141, 142, 157, 190, 193, 194, 204, 226, 272, 273, 282, 283, 302, 332, 337, 433, 434, 441, 456, 463, 464, 470, 472, 475, 478, 480, 493, 494, 496, 501, 505], "being": [0, 3, 4, 5, 16, 18, 34, 42, 44, 46, 63, 75, 76, 101, 141, 142, 153, 156, 162, 167, 168, 169, 173, 193, 196, 209, 210, 214, 216, 226, 229, 233, 247, 273, 275, 279, 284, 291, 299, 302, 305, 306, 312, 317, 318, 319, 321, 325, 334, 353, 367, 378, 387, 395, 400, 403, 405, 406, 427, 428, 465, 469, 472, 475, 476, 480, 488, 493, 494, 496, 499, 502], "becom": [0, 16, 40, 153, 273, 279, 298, 299, 305, 327, 329, 330, 336, 355, 370, 404, 432, 433, 434, 469, 494], "trivial": [0, 46, 299, 302, 320, 333, 396, 401, 437], "current": [0, 2, 3, 5, 6, 16, 23, 29, 44, 46, 52, 60, 74, 75, 101, 141, 152, 154, 155, 157, 160, 161, 163, 165, 166, 179, 189, 190, 193, 196, 202, 204, 209, 210, 228, 229, 233, 240, 247, 254, 273, 279, 280, 284, 299, 302, 304, 306, 319, 321, 328, 333, 336, 337, 340, 361, 367, 368, 387, 388, 390, 400, 427, 436, 437, 439, 440, 448, 471, 475, 478, 488, 489, 490, 493, 497, 502, 504], "applyasynciowindowsworkaround": [0, 430], "appli": [0, 1, 3, 5, 6, 53, 75, 76, 79, 86, 101, 102, 132, 145, 189, 204, 210, 228, 229, 239, 240, 245, 258, 262, 273, 275, 279, 280, 281, 284, 285, 286, 299, 302, 304, 318, 319, 325, 328, 330, 332, 334, 336, 352, 353, 355, 360, 387, 399, 431, 433, 437, 455, 456, 463, 464, 471, 472, 475, 476, 478, 480, 484, 485, 488, 489, 490, 493, 496, 499], "asyncio": 0, "workaround": 0, "window": [0, 1, 18, 55, 74, 403, 431, 469, 470, 497, 505], "3": [0, 3, 5, 8, 16, 18, 23, 31, 43, 53, 66, 75, 77, 78, 90, 92, 93, 96, 101, 105, 109, 110, 132, 133, 134, 136, 141, 142, 143, 145, 153, 157, 161, 163, 166, 167, 169, 176, 181, 189, 196, 201, 203, 209, 210, 225, 226, 231, 233, 237, 240, 275, 279, 283, 284, 286, 292, 296, 299, 301, 302, 303, 306, 317, 319, 320, 323, 326, 327, 328, 336, 340, 341, 349, 355, 356, 387, 388, 398, 399, 400, 404, 408, 423, 426, 431, 434, 437, 441, 447, 449, 455, 456, 457, 459, 465, 469, 470, 476, 478, 481, 482, 483, 484, 488, 489, 490, 491, 493, 494, 496, 497, 499, 503, 505], "8": [0, 8, 75, 78, 109, 134, 139, 143, 145, 203, 210, 229, 231, 235, 284, 305, 306, 319, 320, 323, 327, 328, 342, 347, 391, 396, 399, 404, 439, 447, 454, 455, 456, 457, 458, 476, 478, 482, 483, 484, 485, 493, 494, 497], "prevent": [0, 2, 30, 240, 273, 318, 330, 332, 345, 373, 382, 405, 470, 475, 476, 505], "notimplementederror": [0, 21, 480], "hi": [0, 488, 489], "show": [0, 16, 18, 24, 25, 31, 42, 149, 157, 163, 177, 179, 180, 191, 258, 294, 318, 327, 340, 341, 373, 382, 386, 387, 389, 400, 404, 406, 426, 437, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 465, 468, 482, 485, 494, 497, 499, 501], "dure": [0, 1, 3, 5, 12, 16, 18, 29, 44, 73, 75, 76, 86, 101, 141, 145, 152, 153, 155, 159, 191, 193, 196, 204, 216, 226, 228, 240, 247, 273, 274, 279, 283, 299, 302, 304, 310, 312, 316, 318, 332, 336, 340, 341, 350, 382, 431, 432, 434, 468, 469, 470, 472, 475, 476, 478, 480, 489, 493, 494, 495, 496, 497, 499, 500, 501, 505], "jupyt": [0, 30, 31, 382, 435, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 478], "notebook": [0, 30, 31, 382, 435, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "document": [0, 20, 23, 24, 30, 31, 91, 92, 93, 94, 95, 96, 101, 155, 157, 164, 189, 275, 280, 286, 304, 319, 330, 394, 413, 427, 433, 434, 435, 436, 439, 468, 469, 471, 472, 474, 478, 480, 483, 484, 485, 488, 489, 490, 491, 496, 497, 499, 502, 504], "see": [0, 1, 3, 5, 7, 16, 23, 63, 101, 113, 139, 145, 152, 155, 161, 165, 166, 168, 189, 193, 194, 196, 203, 229, 273, 274, 275, 279, 280, 286, 290, 299, 302, 304, 306, 310, 312, 318, 319, 321, 323, 329, 330, 333, 336, 387, 388, 396, 401, 404, 406, 428, 431, 433, 436, 437, 440, 441, 461, 469, 470, 472, 478, 480, 481, 483, 484, 485, 488, 489, 490, 493, 494, 496, 497, 499, 505], "http": [0, 18, 77, 78, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 105, 110, 127, 128, 129, 130, 132, 134, 136, 142, 152, 155, 157, 165, 174, 297, 298, 333, 394, 404, 427, 428, 431, 469, 470, 472, 484, 505], "bug": [0, 163, 273, 327, 352, 433, 436, 440, 441, 469], "org": [0, 18, 81, 82, 85, 98, 127, 128, 129, 130, 132, 136, 155, 404, 428, 431, 469, 484], "issue37373": 0, "bookkeep": [0, 75, 279, 333, 336, 406, 430, 439, 472, 478, 494, 499], "bookkeepingplugin": [0, 2, 430], "exposeinterfac": [0, 2, 54, 55, 202, 205, 216, 219, 226, 267, 270, 273, 372, 383, 386, 480], "defineentrypoint": [0, 2, 57, 202, 226, 273, 480], "definecasedepend": [0, 2, 273], "mpiactionrequiresreset": [0, 2, 273, 471], "getreportcont": [0, 2, 202, 226, 273, 435], "db": [0, 2, 16, 17, 31, 62, 143, 144, 193, 201, 333, 336, 346, 353, 355, 379, 386, 406, 440, 471, 478, 483, 497, 499], "databas": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 36, 42, 43, 44, 57, 61, 67, 75, 145, 193, 197, 226, 247, 273, 274, 275, 302, 320, 325, 327, 330, 332, 333, 352, 353, 355, 363, 387, 404, 434, 440, 456, 463, 464, 468, 469, 471, 472, 476, 479, 480, 483, 485, 492, 494, 496, 497, 500], "revis": [0, 2, 136, 431], "changelog": [0, 2], "database3": [0, 2, 3, 6, 8, 12, 333, 471, 472, 478, 499], "databaseinterfac": [0, 2, 3, 5, 13, 406, 472, 497], "comparedatabas": [0, 2, 3, 4, 11], "databasefactori": [0, 2, 3, 7, 478, 499], "convertdatabas": [0, 2, 3], "loadoper": [0, 2, 3, 193, 472], "report": [0, 2, 4, 18, 31, 38, 58, 67, 75, 98, 113, 157, 202, 208, 226, 273, 274, 276, 299, 302, 365, 367, 384, 387, 389, 404, 406, 434, 435, 456, 463, 469, 472, 474, 476, 478, 483, 492, 495], "setdata": [0, 2, 19], "visual": [0, 2, 5, 228, 298, 404, 438, 468, 469, 471, 480, 489], "historytrack": [0, 2, 406, 478], "histori": [0, 2, 3, 5, 6, 31, 75, 201, 209, 240, 247, 273, 319, 332, 336, 400, 406, 426, 434, 440, 456, 463, 464, 471, 478, 495, 497, 500], "inform": [0, 2, 3, 5, 6, 8, 18, 20, 24, 25, 28, 42, 44, 52, 53, 74, 75, 80, 87, 101, 109, 134, 136, 141, 142, 143, 145, 152, 156, 157, 159, 161, 162, 163, 166, 169, 172, 184, 190, 191, 193, 194, 196, 204, 209, 228, 240, 250, 270, 273, 275, 279, 281, 282, 284, 302, 304, 305, 318, 319, 327, 328, 330, 332, 336, 350, 367, 368, 391, 394, 404, 406, 427, 428, 433, 434, 437, 439, 440, 441, 456, 463, 464, 469, 475, 476, 478, 484, 485, 489, 493, 496, 497, 498, 499, 501], "describeinterfac": [0, 2, 3, 6, 16, 17, 18, 19, 24, 29, 75, 202, 226, 228, 232, 233, 273], "historytrackerinterfac": [0, 2, 16, 406], "maininterfac": [0, 2], "memoryprofil": [0, 2, 32, 456, 463, 464, 478], "klasscount": [0, 2, 18], "instancecount": [0, 2, 18], "profilememoryusageact": [0, 2, 18], "systemandprocessmemoryusag": [0, 2, 18], "printsystemmemoryusageact": [0, 2, 18], "snapshotinterfac": [0, 2, 472], "extractcyclenodefromstamp": [0, 2, 29], "getcyclenodestamp": [0, 2, 29], "inputmodifi": [0, 43, 53, 303, 310, 483], "copyinterfaceinput": [0, 43, 44, 55, 472], "suit": [0, 2, 43, 44, 50, 53, 57, 60, 61, 69, 72, 273, 303, 317, 321, 432, 434, 464, 471, 472, 483], "casesuit": [0, 43, 44, 52, 53, 55, 61, 75, 273, 483], "suitebuild": [0, 43, 44, 56, 471, 483], "getinputmodifi": [0, 43, 53], "fullfactorialsuitebuild": [0, 43, 53, 483], "fullfactorialsuitebuildernoisi": [0, 43, 53], "separateeffectssuitebuild": [0, 43, 53, 483], "latinhypercubesuitebuild": [0, 43, 53, 56], "cli": [0, 43, 74, 273, 430, 432, 434, 468, 472, 498], "entrypointsplugin": [0, 57, 430], "armipars": [0, 57, 430], "print_help": [0, 57], "armicli": [0, 57, 72, 430], "showvers": [0, 57, 72], "listcommand": [0, 57], "executecommand": [0, 57, 71], "splash": [0, 1, 57, 58, 63, 430, 470, 480, 505], "checkinput": [0, 43, 44, 57], "expandblueprint": [0, 57, 58], "checkinputentrypoint": [0, 57, 58], "cleantemp": [0, 57], "clone": [0, 43, 44, 52, 55, 57, 75, 273, 361, 399, 431, 469, 470, 471, 472, 505], "clonearmiruncommandbatch": [0, 57, 60], "clonearmiruncommandinteract": [0, 57, 60], "clonesuitecommand": [0, 57, 60], "comparecas": [0, 57], "comparesuit": [0, 57, 61], "convertdb": [0, 57, 62], "extractinput": [0, 57, 62], "injectinput": [0, 57, 62], "entrypoint": [0, 2, 34, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 74, 230, 273, 371, 432, 472], "storebool": [0, 57, 63], "setset": [0, 57, 63], "setcasetitl": [0, 57, 63], "loadset": [0, 57, 63], "gridgui": [0, 57], "gridguientrypoint": [0, 57, 64], "migrateinput": [0, 57], "modifi": [0, 3, 44, 46, 47, 50, 51, 53, 57, 60, 62, 101, 142, 145, 149, 163, 176, 181, 182, 183, 186, 228, 233, 235, 242, 272, 275, 279, 299, 303, 304, 306, 309, 310, 314, 317, 318, 325, 332, 333, 336, 337, 341, 342, 354, 360, 361, 367, 370, 391, 399, 405, 441, 453, 469, 470, 472, 476, 479, 484, 493, 496, 497, 505], "modifycasesettingscommand": [0, 57, 66], "reportsentrypoint": [0, 57], "createreportfromset": [0, 57, 67], "runentrypoint": [0, 57, 68, 69, 434], "runsuit": [0, 57, 72], "runsuitecommand": [0, 57, 69], "materi": [0, 8, 144, 145, 152, 203, 216, 225, 229, 240, 245, 273, 274, 275, 279, 280, 281, 282, 283, 285, 286, 288, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 304, 306, 307, 312, 318, 319, 336, 339, 340, 341, 342, 372, 377, 391, 404, 430, 433, 434, 436, 446, 448, 450, 452, 453, 455, 456, 463, 464, 466, 467, 468, 469, 471, 472, 475, 476, 478, 479, 484, 485, 486, 488, 489, 490, 493, 497, 498, 499, 504], "setmaterialnamespaceord": [0, 76, 430, 480], "importmaterialsintomodulenamespac": [0, 76, 430], "iterallmaterialclassesinnamespac": [0, 76, 430, 462], "resolvematerialclassbynam": [0, 76, 430], "air": [0, 76, 117], "alloy200": [0, 76, 122, 472], "b4c": [0, 76, 118, 472, 478, 483, 484, 489, 493], "be9": [0, 76, 119, 145, 342], "cah2": [0, 76, 122], "californium": [0, 76, 122, 143, 462], "concret": [0, 3, 6, 13, 16, 17, 18, 24, 29, 55, 75, 76, 145, 150, 156, 201, 208, 214, 228, 233, 240, 252, 284, 302, 318, 353, 378, 381, 386, 472], "copper": [0, 76, 143, 472], "cu": [0, 76, 78, 84, 122, 143, 145, 342, 493], "graphit": [0, 76, 120, 150, 152], "hafnium": [0, 76, 122, 143], "hastelloyn": [0, 76, 122], "ht9": [0, 76, 101, 150, 203, 240, 292, 312, 341, 342, 455, 463, 471, 478, 484, 491, 493, 497, 498], "inconel": [0, 76, 92, 93, 95, 96, 472], "inconel617": [0, 76, 91], "inconel600": [0, 76, 122], "inconel625": [0, 76, 122], "inconel800": [0, 76], "inconelpe16": [0, 76], "inconelx750": [0, 76, 122], "lead": [0, 3, 4, 5, 74, 75, 76, 98, 122, 143, 155, 156, 189, 209, 273, 279, 302, 319, 330, 375, 384, 389, 396, 414, 434, 436, 440, 471, 493, 494], "leadbismuth": [0, 76, 122], "lithium": [0, 76, 121, 143, 472, 493], "magnesium": [0, 76, 102, 122, 143], "fluid": [0, 76, 77, 85, 97, 98, 99, 100, 101, 107, 110, 112, 135, 136, 202, 209, 304, 319, 493], "simplesolid": [0, 76, 81, 82, 88, 91, 95, 101, 104, 106, 111, 114, 130, 134], "fuelmateri": [0, 76, 101, 128, 129, 130, 131, 132, 133, 134, 391, 493], "mgo": [0, 76, 122], "mixtur": [0, 76, 105, 279, 312, 328, 391, 471, 493], "molybdenum": [0, 76, 122, 143], "mox": [0, 76, 122, 134, 274, 285, 319, 342, 472], "nz": [0, 76, 122], "potassium": [0, 76, 122, 143, 472], "scandiumoxid": [0, 76], "sc2o3": [0, 76, 108, 122], "sic": [0, 76, 123], "sodium": [0, 76, 107, 111, 122, 143, 216, 275, 285, 340, 341, 342, 436, 455, 463, 468, 469, 478, 480, 484, 485, 489, 493], "sodiumchlorid": [0, 76], "nacl": [0, 76, 111, 122], "sulfur": [0, 76, 122, 124, 143, 493], "tzm": [0, 76, 122], "tantalum": [0, 76, 122, 143], "thu": [0, 31, 46, 76, 122, 152, 162, 202, 204, 229, 275, 279, 302, 306, 327, 328, 381, 388, 394, 456, 469, 474, 475, 476, 484, 485, 493], "thorium": [0, 76, 122, 128, 130, 131, 143, 493], "thoriumoxid": [0, 76, 122, 125, 472, 493], "tho2": [0, 76, 125, 130], "uthzr": [0, 76, 339, 493], "uzr": [0, 76, 101, 122, 126, 288, 292, 294, 302, 339, 342, 455, 478, 484, 493, 497], "uranium": [0, 76, 101, 122, 128, 131, 134, 142, 143, 145, 292, 299, 302, 469, 478, 481, 482, 484, 493], "uraniumoxid": [0, 76, 105, 122, 472, 481, 493], "heatcapacityconst": [0, 76, 134], "uo2": [0, 76, 105, 134, 302, 481], "void": [0, 76, 90, 101, 122, 228, 247, 274, 279, 297, 299, 302, 305, 319, 347, 463, 478, 484, 485, 489, 491, 493], "water": [0, 76, 127, 150, 233, 468, 485], "saturatedwat": [0, 76, 136, 485], "saturatedsteam": [0, 76, 136], "yttriumoxid": [0, 76], "y2o3": [0, 76, 122, 137], "zincoxid": [0, 76], "zno": [0, 76, 122, 138], "zr": [0, 76, 101, 122, 131, 132, 143, 144, 145, 279, 285, 288, 290, 292, 294, 302, 336, 342, 478, 483, 485, 490], "nucdirectori": [0, 1, 157, 191, 292, 302, 404, 430, 447, 454, 462, 465, 476, 482], "element": [0, 4, 5, 8, 23, 42, 77, 79, 82, 88, 101, 144, 145, 147, 152, 205, 244, 245, 273, 283, 285, 292, 299, 301, 302, 328, 337, 340, 356, 372, 387, 391, 396, 399, 400, 411, 430, 434, 435, 455, 462, 469, 471, 476, 478, 479, 483, 485, 493], "label": [0, 3, 5, 23, 80, 87, 101, 109, 134, 136, 144, 145, 152, 154, 155, 178, 190, 191, 204, 209, 217, 228, 240, 242, 254, 266, 274, 275, 279, 302, 320, 321, 325, 326, 349, 350, 357, 367, 373, 388, 394, 404, 406, 439, 453, 455, 460, 465, 471, 472, 476, 482, 490, 493], "id": [0, 23, 40, 46, 51, 145, 190, 228, 229, 247, 257, 275, 279, 284, 292, 297, 298, 299, 301, 305, 310, 341, 342, 455, 456, 463, 464, 472, 476, 478, 484, 485, 489, 493, 497, 498], "indic": [0, 3, 8, 16, 23, 40, 75, 101, 145, 152, 155, 156, 157, 162, 165, 167, 168, 169, 172, 179, 190, 191, 193, 196, 229, 233, 245, 273, 275, 276, 279, 284, 285, 302, 304, 320, 321, 322, 323, 325, 326, 327, 328, 329, 332, 333, 336, 337, 357, 372, 388, 400, 404, 406, 434, 440, 457, 471, 476, 484, 489, 493, 497, 499], "rapid": [0, 469], "access": [0, 1, 16, 17, 98, 141, 150, 156, 157, 193, 201, 235, 248, 273, 279, 280, 299, 302, 304, 318, 330, 332, 333, 361, 367, 390, 403, 405, 434, 439, 469, 471, 475, 476, 478, 479, 480, 492, 494, 496, 497], "chemicalphas": [0, 142, 143, 482], "chemicalgroup": [0, 142, 143, 482], "getelementsbychemicalphas": [0, 142, 143], "getelementsbychemicalgroup": [0, 142, 143], "getnam": [0, 16, 76, 101, 142, 143, 243, 244, 274, 302, 478], "getsymbol": [0, 142, 143], "getelementz": [0, 142, 143], "factori": [0, 2, 3, 53, 76, 142, 143, 145, 152, 192, 193, 207, 274, 296, 299, 333, 336, 430, 434, 437, 457, 479], "addglobalel": [0, 142, 143], "destroyglobalel": [0, 142, 143], "nucdir": [0, 142], "getnuclidefromnam": [0, 142, 144], "getnaturalisotop": [0, 142, 143, 144, 145, 292], "getnaturalmassisotop": [0, 142, 144], "getmc2label": [0, 142, 144], "getelementnam": [0, 142, 144], "getelementsymbol": [0, 142, 144], "getnuclid": [0, 76, 101, 142, 144, 154, 163, 185, 186, 190, 244, 274, 296, 299, 302, 342, 460, 461], "getnuclidenam": [0, 142, 144], "getatomicweight": [0, 142, 144, 274, 302], "isheavymet": [0, 142, 143, 144, 145, 482], "isfissil": [0, 142, 144, 145, 155, 157], "getthresholddisplacementenergi": [0, 142, 144], "nuclidebas": [0, 1, 142, 144, 149, 150, 152, 153, 159, 235, 285, 292, 302, 391, 447, 454, 455, 462, 465, 482], "nuclideinterfac": [0, 142, 145], "nuclidewrapp": [0, 142, 145, 191], "inuclid": [0, 142, 144, 145, 152, 191], "imcnpnuclid": [0, 142, 145], "naturalnuclidebas": [0, 80, 87, 109, 134, 136, 142, 143, 144, 145, 152, 285, 482], "dummynuclidebas": [0, 142, 145, 482], "lumpnuclidebas": [0, 142, 145, 482], "initreachableactivenuclidesthroughburnchain": [0, 142, 145], "isotop": [0, 86, 88, 101, 105, 122, 142, 144, 145, 152, 155, 163, 189, 229, 233, 235, 244, 245, 280, 283, 285, 290, 291, 292, 296, 297, 298, 299, 301, 302, 341, 391, 404, 411, 434, 468, 471, 476, 478, 482, 483, 484, 490, 495], "getisotop": [0, 142, 145], "fromnam": [0, 142, 145, 465], "ismonoisotopicel": [0, 142, 145], "singl": [0, 3, 5, 6, 16, 35, 42, 44, 53, 142, 145, 156, 157, 189, 191, 193, 201, 209, 228, 229, 273, 275, 279, 283, 285, 296, 298, 299, 302, 305, 306, 319, 321, 323, 328, 336, 339, 340, 349, 350, 373, 380, 386, 387, 394, 396, 399, 404, 433, 437, 439, 440, 441, 455, 465, 469, 472, 475, 476, 480, 484, 489, 493, 494, 496, 497, 501, 502], "changelabel": [0, 142, 145], "getdepletablenuclid": [0, 142, 145], "imposeburnchain": [0, 142, 145, 465], "addglobalnuclid": [0, 142, 145], "destroyglobalnuclid": [0, 142, 145], "thermalscatt": [0, 80, 87, 101, 109, 134, 136, 142, 150], "transmut": [0, 142, 145, 149, 151, 191, 226, 243, 245, 285, 452, 466, 467, 476, 486, 489, 493, 497], "decaymod": [0, 142, 145, 153], "nucleardataio": [0, 203, 252, 302, 336, 430, 455, 460, 461, 476], "getexpectedisotxsfilenam": [0, 154, 430], "getexpectedcompxsfilenam": [0, 154, 430], "getexpectedgamisofilenam": [0, 154, 430], "getexpectedpmatrxfilenam": [0, 154, 430], "cccc": [0, 142, 154, 190, 455, 460, 461, 471], "system": [0, 3, 5, 6, 24, 30, 34, 74, 145, 154, 165, 192, 193, 194, 196, 199, 202, 204, 208, 209, 216, 229, 233, 240, 273, 274, 275, 276, 280, 284, 286, 295, 299, 305, 319, 320, 321, 323, 326, 327, 330, 332, 333, 334, 336, 337, 343, 345, 354, 367, 370, 381, 388, 389, 392, 396, 401, 403, 431, 434, 436, 440, 448, 449, 463, 468, 470, 471, 473, 475, 476, 478, 483, 484, 495, 496, 499, 505], "implement": [0, 1, 3, 5, 17, 29, 41, 42, 46, 53, 55, 57, 63, 74, 75, 76, 90, 101, 136, 141, 142, 145, 154, 156, 159, 163, 201, 205, 209, 226, 228, 229, 233, 240, 247, 272, 273, 275, 276, 279, 284, 297, 298, 301, 302, 305, 306, 307, 312, 318, 323, 325, 327, 328, 330, 332, 336, 340, 345, 353, 367, 378, 381, 383, 386, 387, 388, 396, 399, 432, 434, 439, 472, 474, 476, 480, 482, 485, 493, 497, 499, 502], "detail": [0, 3, 5, 6, 16, 29, 36, 58, 63, 67, 75, 90, 101, 154, 192, 203, 206, 209, 210, 225, 229, 233, 240, 247, 273, 279, 280, 282, 284, 302, 303, 304, 319, 336, 378, 426, 434, 441, 448, 449, 469, 471, 472, 475, 476, 478, 479, 481, 483, 484, 485, 489, 493, 494, 495, 497, 498, 499], "discuss": [0, 5, 142, 154, 159, 202, 233, 273, 330, 434, 436, 437, 469, 480, 484, 496], "nuclearfilemetadata": [0, 154], "filemetadata": [0, 154, 184], "nuclidexsmetadata": [0, 154, 184], "regionxsmetadata": [0, 154, 184], "nuclidemetadata": [0, 154, 184], "xscollect": [0, 154, 186, 191, 244, 404], "macroscopiccrosssectioncr": [0, 154, 189], "computeblockaveragechi": [0, 154, 189], "computeneutronenergydepositionconst": [0, 154, 189], "computegammaenergydepositionconst": [0, 154, 189], "computefissionenergygenerationconst": [0, 154, 189], "computecaptureenergygenerationconst": [0, 154, 189], "computemacroscopicgroupconst": [0, 154, 189], "xslibrari": [0, 154, 157, 159, 161, 163, 166, 187, 189, 191, 240], "compar": [0, 1, 3, 4, 29, 43, 44, 52, 53, 61, 154, 155, 157, 159, 161, 162, 163, 166, 172, 188, 189, 190, 191, 196, 209, 214, 230, 312, 320, 327, 328, 336, 347, 372, 404, 406, 476, 494], "comparexslibraryattribut": [0, 154, 190], "comparelibraryneutronenergi": [0, 154, 190], "getsuffixfromnuclidelabel": [0, 154, 190], "getisotxslibrariestomerg": [0, 154, 190], "mergexslibrariesinworkingdirectori": [0, 154, 190], "isotxslibrari": [0, 154, 162, 166, 169, 187, 190, 336, 404], "compxslibrari": [0, 154, 157, 190], "xsnuclid": [0, 154, 157, 189, 461], "plotscattermatrix": [0, 154, 191, 404, 461], "plotcomparescattermatrix": [0, 154, 191], "getoperatorclassfromset": [0, 192, 430], "operatormpi": [0, 2, 141, 192, 197, 273, 434], "runtyp": [0, 192, 201, 273, 426, 434, 496, 497], "settingsvalid": [0, 192, 273, 472], "queri": [0, 192, 196, 199, 209, 273, 302, 476, 480], "inspector": [0, 192, 193, 196, 205, 211, 219, 220, 226, 234, 255, 270, 271, 273], "createqueryrevertbadpathtodefault": [0, 192, 196], "validatevers": [0, 192, 196], "snapshot": [0, 3, 5, 22, 29, 33, 44, 75, 192, 193, 195, 200, 226, 247, 275, 456, 463, 464, 471, 472, 478, 496, 497], "operatorsnapshot": [0, 192, 193, 197, 434], "physic": [0, 29, 47, 75, 76, 84, 100, 102, 134, 142, 145, 152, 153, 154, 155, 156, 159, 163, 174, 192, 193, 194, 197, 273, 275, 279, 283, 285, 299, 301, 302, 303, 304, 305, 318, 325, 330, 333, 336, 340, 364, 430, 431, 434, 436, 448, 456, 460, 468, 471, 472, 475, 476, 478, 479, 481, 483, 484, 488, 492, 493, 495, 496, 497, 500], "fuelcycl": [0, 202, 273, 456, 478, 484], "fuelhandlerplugin": [0, 202, 205], "fuelperform": [0, 202], "neutron": [0, 25, 47, 75, 82, 98, 144, 145, 152, 153, 155, 157, 159, 160, 169, 189, 190, 191, 202, 203, 216, 273, 275, 279, 282, 283, 296, 299, 302, 303, 309, 318, 330, 333, 404, 436, 439, 454, 460, 465, 469, 471, 472, 475, 476, 480, 481, 482, 484, 485, 489, 491, 493, 494, 496, 497], "neutronicsplugin": [0, 202, 226, 262, 273, 436], "gammatransportisrequest": [0, 202, 226], "gammaxsarerequest": [0, 202, 226], "adjointcalculationrequest": [0, 202, 226], "realcalculationrequest": [0, 202, 226], "applyeffectivedelayedneutronfractiontocor": [0, 202, 226], "latticephysicsfrequ": [0, 202, 226, 228, 250, 472, 497], "safeti": [0, 159, 202, 396, 403, 469, 476], "safetyplugin": [0, 202, 263], "thermalhydraul": [0, 202, 330, 333, 502], "constant": [0, 22, 74, 75, 78, 86, 100, 101, 149, 155, 159, 174, 189, 195, 202, 226, 227, 231, 245, 247, 254, 262, 274, 299, 302, 310, 320, 321, 325, 326, 328, 364, 391, 429, 440, 455, 465, 472, 476, 489, 491, 493, 494, 496, 497], "dpa_cross_sect": [0, 202, 203], "execut": [0, 11, 12, 13, 14, 27, 28, 31, 32, 33, 38, 39, 44, 50, 51, 52, 55, 56, 57, 58, 63, 71, 72, 74, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 141, 147, 148, 149, 150, 151, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 193, 194, 199, 200, 201, 202, 213, 214, 215, 216, 222, 223, 224, 229, 237, 238, 240, 242, 245, 247, 250, 251, 257, 258, 259, 260, 261, 262, 266, 279, 288, 289, 290, 291, 292, 293, 294, 295, 302, 312, 313, 314, 315, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 359, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 394, 401, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 431, 434, 437, 448, 450, 466, 469, 470, 471, 472, 476, 480, 493, 497, 499, 500, 501, 505], "executionopt": [0, 202, 204, 217, 240], "defaultexecut": [0, 202, 204, 217, 240], "reactorplugin": [0, 273, 274, 430, 493], "defineblocktyp": [0, 273, 274], "defineassemblytyp": [0, 273, 274], "definesystembuild": [0, 273, 274, 493], "blueprint": [0, 2, 3, 5, 22, 44, 46, 52, 53, 58, 86, 101, 105, 145, 184, 193, 226, 228, 233, 245, 273, 274, 275, 279, 302, 312, 317, 319, 333, 336, 337, 346, 353, 354, 356, 388, 404, 439, 440, 455, 463, 471, 472, 476, 478, 479, 480, 483, 488, 490, 492, 495, 496, 497, 500], "loadfromc": [0, 274, 280, 336, 337], "migrat": [0, 3, 5, 44, 57, 62, 65, 273, 274, 280, 286, 303, 319, 336, 337, 351, 367, 368, 404, 471, 478], "compon": [0, 3, 4, 5, 8, 22, 41, 46, 48, 75, 101, 143, 157, 172, 228, 229, 233, 257, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 302, 304, 305, 312, 313, 319, 327, 330, 336, 340, 341, 342, 356, 403, 404, 434, 436, 439, 447, 452, 455, 463, 466, 467, 468, 469, 471, 472, 475, 476, 478, 481, 483, 484, 485, 486, 489, 492, 495, 497, 498, 499], "nullcompon": [0, 274, 296, 299, 302, 341, 493], "unshapedcompon": [0, 274, 296, 299, 300, 302, 341, 493], "unshapedvolumetriccompon": [0, 274, 296, 299, 302, 493], "zeromasscompon": [0, 274, 296, 299, 302, 493], "positiveornegativevolumecompon": [0, 274, 296, 299, 302, 493], "derivedshap": [0, 274, 279, 296, 299, 302, 341, 342, 344, 453, 455, 463, 478, 484, 485, 493], "convert": [0, 3, 4, 5, 8, 23, 36, 45, 62, 67, 92, 93, 96, 101, 144, 145, 156, 179, 189, 209, 228, 240, 252, 273, 274, 275, 279, 299, 302, 320, 321, 326, 327, 333, 336, 337, 355, 357, 367, 370, 388, 391, 396, 399, 400, 402, 403, 425, 429, 439, 441, 447, 448, 449, 471, 472, 476, 478, 493, 497], "grid": [0, 3, 5, 8, 42, 46, 64, 229, 240, 273, 274, 275, 276, 279, 280, 284, 286, 289, 293, 302, 304, 305, 312, 336, 337, 340, 388, 398, 404, 434, 452, 453, 455, 460, 462, 463, 466, 467, 468, 469, 470, 471, 472, 475, 478, 481, 484, 486, 491, 494, 495, 496, 497, 505], "locatorlabeltoindic": [0, 274, 321], "basic": [0, 4, 12, 17, 28, 29, 43, 136, 141, 142, 145, 242, 250, 251, 252, 274, 280, 290, 297, 302, 309, 318, 321, 367, 379, 384, 391, 410, 412, 420, 424, 427, 432, 434, 437, 438, 441, 468, 469, 475, 476, 480, 483, 484, 485, 497, 498], "usag": [0, 4, 18, 57, 141, 191, 274, 279, 331, 387, 388, 404, 406, 437, 440, 472, 497], "consider": [0, 41, 226, 228, 273, 274, 328, 389, 434], "reset": [0, 2, 75, 240, 273, 274, 296, 302, 303, 304, 306, 318, 330, 361, 373, 384, 387, 427, 478, 489], "assembli": [0, 2, 3, 5, 13, 22, 23, 25, 40, 41, 44, 47, 75, 79, 86, 165, 206, 209, 210, 213, 214, 215, 228, 240, 242, 254, 270, 273, 274, 276, 277, 279, 280, 281, 282, 286, 288, 290, 291, 294, 296, 299, 302, 303, 304, 305, 306, 312, 314, 317, 318, 319, 321, 323, 325, 326, 327, 328, 330, 336, 337, 339, 342, 346, 349, 367, 378, 387, 388, 391, 400, 404, 406, 426, 434, 437, 439, 440, 448, 455, 456, 463, 464, 468, 469, 471, 472, 475, 476, 478, 480, 483, 489, 491, 492, 495, 497, 498, 499, 502, 504], "hexassembli": [0, 273, 274, 275, 302, 455], "cartesianassembli": [0, 273, 274, 275, 302], "rzassembli": [0, 274, 275, 302], "thrzassembli": [0, 273, 274, 275, 302], "assemblylist": [0, 273, 274, 302, 464, 494], "autofil": [0, 233, 274, 276], "rowmajorautofil": [0, 274, 276], "spentfuelpool": [0, 273, 274, 276, 302, 493], "assemblyparamet": [0, 274], "getassemblyparameterdefinit": [0, 274, 277], "blockparamet": [0, 274], "getblockparameterdefinit": [0, 274, 278], "block": [0, 2, 3, 4, 5, 13, 22, 25, 38, 40, 41, 46, 47, 76, 122, 141, 142, 150, 156, 165, 189, 209, 214, 225, 228, 229, 233, 235, 237, 240, 244, 245, 247, 251, 252, 257, 258, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 294, 296, 297, 299, 301, 302, 304, 305, 306, 307, 310, 312, 313, 316, 317, 318, 319, 321, 322, 327, 330, 333, 334, 336, 339, 340, 342, 346, 349, 378, 386, 387, 391, 400, 404, 426, 434, 437, 439, 440, 446, 447, 450, 452, 463, 464, 466, 467, 468, 471, 472, 475, 476, 478, 480, 481, 483, 486, 488, 491, 492, 495, 497, 498, 501], "hexblock": [0, 8, 186, 273, 274, 279, 302, 305, 306, 312, 339, 455, 472], "cartesianblock": [0, 273, 274, 279, 302, 305], "thrzblock": [0, 273, 274, 275, 279, 302], "composit": [0, 3, 5, 8, 76, 77, 78, 142, 157, 159, 164, 172, 189, 216, 228, 229, 244, 245, 257, 273, 274, 275, 276, 279, 280, 285, 296, 299, 305, 306, 307, 319, 323, 325, 327, 328, 330, 332, 333, 334, 336, 342, 427, 434, 437, 449, 468, 471, 472, 475, 476, 478, 481, 484, 485, 493, 495, 497, 499], "flagseri": [0, 274, 302, 333], "compositemodeltyp": [0, 273, 274, 299, 302], "armiobject": [0, 3, 5, 6, 218, 235, 240, 245, 253, 269, 273, 274, 284, 302, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 334, 336, 394, 440, 455, 475], "stateretain": [0, 274, 302, 342], "gathermaterialsbyvolum": [0, 274, 302], "getdominantmateri": [0, 274, 302, 336], "getreactionratedict": [0, 274, 302], "flag": [0, 1, 3, 9, 16, 23, 75, 101, 122, 169, 193, 209, 226, 233, 237, 240, 245, 273, 274, 275, 279, 280, 283, 284, 285, 288, 290, 291, 292, 294, 296, 302, 304, 305, 306, 307, 312, 330, 332, 333, 336, 340, 342, 343, 356, 367, 370, 386, 387, 392, 403, 404, 406, 414, 429, 434, 437, 447, 448, 453, 455, 456, 471, 472, 478, 480, 483, 495, 497, 498, 499], "invalidflagserror": [0, 274, 319], "geometri": [0, 3, 5, 42, 44, 52, 53, 155, 160, 162, 164, 165, 168, 176, 181, 193, 204, 228, 229, 240, 273, 274, 275, 279, 281, 284, 286, 299, 301, 303, 305, 306, 307, 312, 314, 317, 318, 321, 323, 325, 326, 328, 329, 336, 337, 344, 353, 388, 404, 434, 446, 450, 455, 456, 459, 463, 464, 467, 469, 471, 475, 478, 484, 486, 493, 496, 499], "geomtyp": [0, 49, 50, 51, 240, 274, 320, 321, 322, 323, 325, 326, 328, 329, 336, 388, 455, 471], "domaintyp": [0, 274, 320, 388, 455], "boundarytyp": [0, 274, 320, 455], "symmetrytyp": [0, 274, 306, 320, 325, 336, 455], "checkvalidgeomsymmetrycombo": [0, 274, 320], "reactorparamet": [0, 274], "definereactorparamet": [0, 274, 335], "definecoreparamet": [0, 274, 335], "core": [0, 3, 5, 8, 16, 22, 23, 25, 28, 41, 46, 50, 86, 157, 160, 165, 193, 205, 206, 209, 210, 214, 226, 228, 229, 233, 237, 240, 250, 252, 254, 273, 274, 275, 276, 279, 280, 284, 286, 295, 302, 304, 305, 306, 307, 309, 312, 314, 318, 319, 321, 323, 325, 326, 327, 328, 329, 330, 336, 337, 339, 346, 347, 349, 361, 386, 388, 404, 406, 408, 426, 434, 439, 441, 447, 448, 449, 455, 456, 463, 464, 468, 469, 470, 471, 472, 475, 476, 478, 479, 480, 483, 485, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 502, 505], "systemlayoutinput": [0, 44, 46, 53, 274, 286, 329, 336, 471], "zone": [0, 155, 162, 164, 168, 169, 209, 274, 306, 336, 348, 456, 463, 464, 472, 478, 484, 485, 488, 489, 497], "isboolset": [0, 360, 430], "recursivelyloadsettingsfil": [0, 360, 430], "promptforsettingsfil": [0, 360, 430], "getmasterc": [0, 360, 430], "setmasterc": [0, 360, 430, 463], "fwset": [0, 360], "getframeworkset": [0, 360, 362], "caseset": [0, 3, 5, 22, 25, 44, 46, 52, 53, 75, 141, 193, 204, 273, 280, 281, 282, 318, 336, 337, 360, 368, 434, 463, 478, 497], "flaglistset": [0, 360, 367], "settingsio": [0, 360, 371], "root": [0, 3, 5, 8, 44, 52, 74, 141, 145, 202, 276, 281, 334, 360, 368, 372, 390, 392, 400, 427, 437, 440, 480, 499], "settingrenam": [0, 360, 368], "settingsread": [0, 360, 368], "settingswrit": [0, 360, 361, 368, 472], "prompt": [0, 196, 360, 368, 480, 491, 496, 497], "runlogpromptcancel": [0, 360, 368], "runlogpromptunresolv": [0, 360, 368], "getemptyhexreactor": [0, 372, 430], "getemptycartesianreactor": [0, 372, 430], "fixtur": [0, 31, 372, 430], "requires_fixtur": [0, 372, 430], "armitesthelp": [0, 31, 214, 215, 372, 376, 430], "comparefileslinebylin": [0, 372], "comparelin": [0, 372], "rebaselinetextcomparison": [0, 372, 430], "mockrunlog": [0, 372], "bufferlog": [0, 372, 373], "logcount": [0, 372, 373], "refsmallreactorshufflelog": [0, 372], "equilibriumshuffl": [0, 372, 374], "getfactorlist": [0, 205, 209, 372, 374, 484, 494], "test_app": [0, 372], "testplugin1": [0, 372, 375], "testplugin2": [0, 372, 375], "testplugin3": [0, 372, 375], "testplugin4": [0, 372, 375], "testapp": [0, 372, 375], "testarmi": [0, 372, 375], "test_armitesthelp": [0, 372], "testarmitesthelp": [0, 372, 376], "test_cartesian": [0, 372, 407, 408], "cartesianreactortest": [0, 274, 338, 346, 372, 377], "test_interfac": [0, 372], "dummyinterfac": [0, 372, 378], "testcodeinterfac": [0, 372, 378], "testtextprocessor": [0, 372, 378], "testtightcoupl": [0, 192, 198, 201, 372, 378], "test_lwrinput": [0, 372], "c5g7reactortest": [0, 372, 379], "test_mpiact": [0, 372, 407, 412], "mpiitertest": [0, 372, 380], "queueactionstest": [0, 372, 380], "passer": [0, 350, 372, 373, 380], "test_mpifeatur": [0, 372], "failinginterface1": [0, 372, 381], "failinginterface2": [0, 372, 381], "failinginterface3": [0, 372, 381], "mpioperatortest": [0, 372, 381], "bcastaction1": [0, 372, 381], "bcastaction2": [0, 372, 381], "mpidistributestatetest": [0, 372, 381], "mpipathtoolstest": [0, 372, 381], "test_notebook": [0, 372], "notebooktest": [0, 372, 382], "runnotebook": [0, 372, 382], "test_plugin": [0, 372], "testplugin": [0, 223, 262, 372, 383], "test_runlog": [0, 372], "testrunlog": [0, 372, 384], "testrunlogg": [0, 372, 384], "test_test": [0, 372], "test_comparefil": [0, 372, 385], "test_user_plugin": [0, 372, 480], "userpluginflag": [0, 372, 386], "userpluginflags2": [0, 372, 386], "userpluginflags3": [0, 372, 386], "userpluginbaddefinesset": [0, 372, 386], "userpluginbaddefineparameterrenam": [0, 372, 386], "userpluginonprocesscoreload": [0, 372, 386], "upinterfac": [0, 372, 386], "userpluginwithinterfac": [0, 372, 386], "testuserplugin": [0, 372, 386], "util": [0, 2, 4, 28, 34, 38, 58, 63, 74, 187, 189, 202, 204, 210, 216, 224, 243, 273, 281, 282, 284, 304, 310, 318, 319, 321, 368, 370, 381, 430, 431, 434, 437, 445, 447, 449, 452, 456, 463, 464, 467, 469, 471, 472, 475, 476, 478, 484, 486, 496, 497], "getfilesha1hash": [0, 387, 430], "copywithoutblock": [0, 387, 430], "getpowerfract": [0, 387, 430], "getcyclenam": [0, 387, 430], "getavailabilityfactor": [0, 387, 430], "getsteplength": [0, 387, 430], "getcyclelength": [0, 387, 430], "getburnstep": [0, 387, 430], "hasburnup": [0, 387, 430], "getmaxburnstep": [0, 387, 430], "getcumulativenodenum": [0, 387, 430], "getcyclenodefromcumulativestep": [0, 387, 430], "getcyclenodefromcumulativenod": [0, 387, 430], "getnodespercycl": [0, 387, 430], "getprevioustimenod": [0, 387, 430], "trypickleonallcont": [0, 387, 430], "dotestpickleonallcontents2": [0, 387, 430], "mypickl": [0, 387, 430], "save": [0, 6, 36, 75, 193, 226, 252, 284, 302, 318, 330, 336, 361, 387, 404, 406, 434, 439, 441, 469, 472, 479, 496, 497], "trypickleonallcontents3": [0, 387, 430], "classesinhierarchi": [0, 387, 426, 430], "slantsplit": [0, 387, 430], "prependtolist": [0, 387, 430], "capstrlen": [0, 387, 430], "list2str": [0, 387, 430], "createformattedstrwithdelimit": [0, 387, 430], "plotmatrix": [0, 387, 430], "usernam": [0, 387, 430], "mergeabledict": [0, 75, 387, 430], "merg": [0, 1, 154, 155, 156, 157, 172, 189, 190, 191, 229, 279, 299, 305, 375, 387, 471, 476, 490], "safecopi": [0, 387, 430], "asciimap": [0, 284, 387, 472], "asciimapcartesian": [0, 387, 388], "asciimaphexthirdflatsup": [0, 387, 388], "asciimaphexfullflatsup": [0, 387, 388], "asciimaphexfulltipsup": [0, 387, 388], "asciimapfromgeomanddomain": [0, 387, 388], "codetim": [0, 387], "getmastertim": [0, 387, 389], "mastertim": [0, 387, 389], "customexcept": [0, 387, 471], "warn": [0, 3, 5, 75, 86, 189, 190, 201, 229, 275, 302, 320, 350, 368, 373, 379, 384, 387, 390, 392, 394, 403, 427, 430, 435, 478, 480, 483, 485, 497, 501], "warn_when_root": [0, 387, 390], "inputerror": [0, 387, 390], "settingexcept": [0, 387, 390], "invalidsettingsstopprocess": [0, 387, 390], "nonexistentset": [0, 387, 390], "invalidsettingsfileerror": [0, 387, 390], "nonexistentsettingsfileerror": [0, 387, 390], "densitytool": [0, 387, 411, 447], "getndensfrommass": [0, 387, 391], "getmassfract": [0, 387, 391], "calculatemassdens": [0, 387, 391], "calculatenumberdens": [0, 387, 391], "getmassingram": [0, 387, 391], "formatmaterialcard": [0, 387, 391, 447], "filternuclidelist": [0, 387, 391], "normalizenuclidelist": [0, 387, 391], "expandelementalmassfracstonuclid": [0, 387, 391], "expandelementalnuclidemassfrac": [0, 387, 391], "getchem": [0, 387, 391], "applyisotopicsmix": [0, 387, 391], "directorychang": [0, 204, 387, 393, 412, 472], "temporarydirectorychang": [0, 266, 387, 392, 472], "forcedcreationdirectorychang": [0, 43, 266, 387, 392], "directorychangerfactori": [0, 387, 392], "directorychangersmpi": [0, 387], "mpidirectorychang": [0, 387, 393], "dochelp": [0, 387, 413], "create_figur": [0, 387, 394], "create_t": [0, 387, 394], "execdirect": [0, 387, 394], "pyrevers": [0, 387, 394], "generateparamt": [0, 387, 394], "generatepluginsettingst": [0, 387, 394], "dynamicimport": [0, 387], "getentirefamilytre": [0, 387, 395], "auto": [0, 3, 5, 7, 74, 101, 196, 204, 240, 245, 273, 276, 283, 302, 336, 342, 344, 356, 387, 394, 396, 414, 431, 441, 471, 472, 497], "grideditor": [0, 64, 387], "hexagon": [0, 42, 122, 165, 273, 274, 279, 288, 291, 292, 294, 296, 297, 298, 299, 300, 302, 303, 305, 306, 321, 325, 328, 336, 341, 342, 387, 388, 404, 434, 453, 455, 457, 463, 469, 475, 476, 478, 484, 489, 493, 496, 497, 498], "area": [0, 22, 51, 164, 210, 257, 273, 275, 279, 296, 297, 298, 299, 301, 302, 305, 313, 340, 341, 344, 387, 398, 424, 428, 439, 468, 475, 484, 488, 489, 490, 495, 497], "side": [0, 23, 209, 279, 297, 298, 305, 325, 372, 387, 398, 404, 448], "corner": [0, 179, 210, 279, 299, 302, 323, 330, 333, 387, 388, 398, 489], "pitch": [0, 279, 284, 297, 298, 299, 305, 306, 321, 322, 323, 326, 328, 329, 336, 338, 340, 372, 387, 398, 404, 457, 475, 478, 483, 484, 485, 493, 497, 498], "numringstoholdnumcel": [0, 387, 398], "numpositionsinr": [0, 387, 398], "iter": [0, 3, 5, 8, 29, 44, 75, 76, 145, 193, 201, 226, 228, 240, 247, 250, 275, 279, 302, 306, 325, 328, 336, 372, 387, 400, 404, 406, 414, 415, 437, 453, 455, 476, 480, 491, 496, 497, 502, 504], "flatten": [0, 141, 387, 399, 437, 499], "chunk": [0, 279, 387, 396, 399, 427, 437, 440], "split": [0, 42, 141, 193, 275, 279, 306, 317, 323, 325, 330, 372, 387, 399, 437, 469, 472, 476, 484, 488, 496], "unpackbinarystr": [0, 387, 399], "packbinarystr": [0, 387, 399], "unpackhexstr": [0, 387, 399], "packhexstr": [0, 387, 399], "sequenc": [0, 3, 4, 5, 6, 44, 52, 53, 57, 101, 201, 204, 247, 273, 281, 282, 283, 284, 285, 286, 302, 328, 333, 342, 387, 396, 399, 404, 406, 434, 468, 469], "mathemat": [0, 101, 387, 416], "average1dwithintoler": [0, 318, 387, 400], "converttoslic": [0, 387, 400], "efmt": [0, 387, 400], "expandrepeatedfloat": [0, 387, 400], "findclosest": [0, 387, 400], "findnearestvalu": [0, 387, 400], "findnearestvalueandindex": [0, 387, 400], "fixthreedigitexp": [0, 387, 400], "getfloat": [0, 387, 400], "getstepsfromvalu": [0, 387, 400], "ismonoton": [0, 387, 400], "linearinterpol": [0, 387, 400], "minimizescalarfunc": [0, 387, 400], "newtonsmethod": [0, 387, 400], "parabolafrompoint": [0, 387, 400], "parabolicinterpol": [0, 387, 400], "relerr": [0, 387, 400], "resamplestepwis": [0, 387, 400, 416], "rotatexi": [0, 387, 400], "outputcach": [0, 387], "api": [0, 1, 44, 209, 273, 302, 387, 431, 434, 436, 440, 441, 456, 469, 472, 478, 483, 494], "retrieveoutput": [0, 387, 401], "store": [0, 3, 4, 5, 8, 16, 19, 23, 29, 40, 42, 44, 75, 101, 143, 145, 160, 162, 165, 168, 172, 184, 189, 193, 209, 229, 244, 247, 273, 275, 276, 279, 286, 299, 302, 304, 305, 312, 318, 319, 320, 325, 327, 328, 330, 332, 333, 334, 336, 354, 368, 387, 396, 399, 401, 406, 426, 434, 439, 440, 471, 472, 475, 476, 478, 480, 488, 489, 496, 497, 498, 499, 500, 502], "deletecach": [0, 387, 401], "cachecal": [0, 387, 401], "pars": [0, 34, 36, 44, 57, 61, 63, 208, 320, 354, 372, 387, 418, 427], "tryliteralev": [0, 387, 402], "parsevalu": [0, 387, 402], "datetimefromstr": [0, 387, 402], "pathtool": [0, 387, 419], "armiabspath": [0, 387, 403], "copyorwarn": [0, 387, 403], "isfilepathnew": [0, 387, 403], "isaccess": [0, 387, 403], "separatemoduleandattribut": [0, 387, 403], "importcustompymodul": [0, 387, 403, 419], "moduleandattributeexist": [0, 387, 403], "cleanpath": [0, 387, 403, 419], "plot": [0, 19, 22, 23, 25, 42, 46, 157, 186, 191, 209, 254, 306, 328, 387, 406, 420, 422, 439, 448, 449, 452, 453, 455, 456, 458, 463, 465, 466, 467, 469, 471, 472, 478, 479, 480, 481, 483, 485, 486, 497], "colorgener": [0, 387, 404], "plotblockdepthmap": [0, 387, 404, 478], "plotfacemap": [0, 387, 404, 449, 456, 464, 478], "close": [0, 2, 3, 5, 6, 74, 149, 155, 156, 209, 302, 350, 384, 387, 391, 392, 393, 404, 406, 427, 430, 464, 478, 493], "depthslid": [0, 387, 404], "plotassemblytyp": [0, 387, 404, 463], "plotblockflux": [0, 387, 404], "makehistogram": [0, 387, 404], "plotblockdiagram": [0, 387, 404], "plottriangleflux": [0, 387, 404], "plotnucx": [0, 387, 404], "properti": [0, 1, 3, 4, 5, 6, 18, 40, 44, 76, 77, 78, 79, 80, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 110, 111, 112, 113, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 141, 145, 157, 159, 165, 172, 186, 187, 190, 191, 193, 197, 209, 216, 228, 229, 272, 276, 279, 280, 281, 284, 285, 299, 302, 305, 318, 320, 322, 323, 325, 326, 327, 328, 330, 332, 333, 336, 342, 349, 361, 367, 372, 387, 421, 434, 436, 462, 468, 469, 471, 475, 476, 478, 480, 481, 485, 490, 493], "areequ": [0, 387, 405], "numpyhackforequ": [0, 387, 405], "createimmutableproperti": [0, 387, 405], "immutablepropertyerror": [0, 387, 405], "unlockimmutableproperti": [0, 387, 405], "lockimmutableproperti": [0, 387, 405], "reportplot": [0, 387], "plotreactorperform": [0, 387, 406], "valuevstim": [0, 387, 406], "keffvstim": [0, 387, 406], "buvstim": [0, 387, 406], "xshistoryvstim": [0, 387, 406], "movesvscycl": [0, 387, 406], "plotcoreoverviewradar": [0, 387, 406], "createplotmetadata": [0, 387, 406], "plotaxialprofil": [0, 387, 406], "textprocessor": [0, 387, 423], "scientific_pattern": [0, 387, 427], "floating_pattern": [0, 387, 427], "decimal_pattern": [0, 387, 427], "filemark": [0, 387, 427], "resolvemarkupinclus": [0, 387, 423, 427], "findyamlinclus": [0, 387, 427], "sequentialread": [0, 387, 427], "sequentialstringioread": [0, 387, 427], "smartlist": [0, 387, 427], "triangl": [0, 274, 296, 297, 299, 300, 302, 326, 341, 387, 404, 424, 493], "gettrianglearea": [0, 387, 424, 428], "gettrianglecentroid": [0, 387, 428], "checkifpointisintriangl": [0, 387, 428], "unit": [0, 13, 50, 51, 55, 56, 73, 74, 77, 87, 90, 101, 110, 117, 119, 127, 133, 151, 161, 165, 166, 189, 240, 262, 279, 292, 312, 315, 316, 321, 322, 323, 328, 330, 333, 336, 340, 345, 347, 367, 372, 380, 382, 385, 387, 398, 409, 418, 419, 425, 433, 435, 441, 468, 469, 472, 474, 476, 484, 488, 489, 490, 491, 493, 494, 496, 497, 504], "gettk": [0, 387, 429], "gettc": [0, 387, 429], "gettf": [0, 387, 429], "gettemperatur": [0, 387, 429], "gettmev": [0, 387, 429], "convertmmhgtopasc": [0, 387, 429], "convertbartopasc": [0, 387, 429], "convertatmtopasc": [0, 387, 429], "sanitizeangl": [0, 387, 429], "getxylineparamet": [0, 387, 429], "pluginmanag": [0, 1, 273, 430, 436], "getset": [0, 1, 360, 361], "getparamrenam": [0, 1], "registerpluginflag": [0, 1], "registeruserplugin": [0, 1, 360, 361], "splashtext": [0, 1, 436], "conftest": [0, 430], "pytest_sessionstart": [0, 73, 430], "bootstraparmitestenv": [0, 73, 430], "context": [0, 41, 44, 141, 252, 286, 320, 387, 392, 430, 441, 465, 469, 471, 485, 499], "mode": [0, 57, 62, 63, 74, 82, 142, 145, 156, 240, 284, 336, 357, 368, 378, 430, 476, 484, 491], "batch": [0, 60, 62, 63, 74, 245, 247, 296, 484], "setmod": [0, 74], "activatelocalfastpath": [0, 74, 430], "getfastpath": [0, 74, 430, 471], "cleantempdir": [0, 74, 430], "cleanallarmitempdir": [0, 74, 430], "disconnectallhdfdb": [0, 74, 430], "stack_ord": [0, 75, 193, 430, 480], "befor": [0, 3, 5, 16, 44, 46, 75, 141, 190, 193, 202, 204, 208, 209, 210, 225, 229, 273, 275, 276, 279, 299, 302, 304, 305, 306, 320, 330, 332, 336, 350, 384, 387, 388, 395, 400, 431, 433, 436, 437, 439, 440, 456, 469, 470, 471, 472, 478, 480, 489, 491, 493, 494, 496, 497, 505], "preprocess": [0, 75], "fuel_manag": [0, 75], "fuel_perform": [0, 75], "cross_sect": [0, 75], "critical_control": [0, 75], "flux": [0, 16, 31, 75, 155, 157, 159, 161, 163, 165, 168, 169, 179, 189, 193, 210, 228, 229, 233, 239, 240, 242, 244, 245, 253, 257, 273, 275, 279, 296, 299, 302, 317, 318, 319, 330, 333, 336, 340, 404, 434, 455, 456, 468, 469, 471, 472, 476, 478, 489, 491, 493, 496, 497, 502], "thermal_hydraul": [0, 75], "reactivity_coeff": [0, 75], "transient": [0, 29, 75, 192, 197, 202, 439, 469, 495], "postprocess": [0, 75], "tightcoupl": [0, 13, 75, 242, 378, 430, 497, 502], "storepreviousiterationvalu": [0, 75], "isconverg": [0, 75, 378], "getlistdimens": [0, 75], "getdepend": [0, 75], "getinputfil": [0, 75], "distribut": [0, 2, 3, 5, 6, 19, 24, 75, 140, 141, 142, 155, 209, 210, 226, 242, 302, 304, 305, 328, 345, 404, 437, 456, 464, 469, 472, 476, 478, 480, 484, 489, 491, 493, 494, 502], "duplic": [0, 18, 41, 53, 75, 76, 101, 143, 232, 235, 238, 274, 275, 290, 302, 328, 336, 350, 360, 361, 389, 401, 472, 475, 476, 484, 493, 499], "new": [0, 3, 4, 5, 16, 23, 27, 42, 44, 52, 53, 60, 62, 75, 77, 89, 101, 107, 117, 134, 139, 141, 172, 189, 191, 197, 202, 204, 207, 209, 228, 229, 240, 247, 252, 257, 270, 273, 275, 276, 279, 280, 283, 285, 296, 302, 304, 305, 306, 307, 310, 318, 319, 328, 332, 333, 334, 336, 337, 345, 346, 349, 352, 355, 357, 359, 361, 367, 370, 386, 387, 392, 393, 394, 396, 399, 400, 427, 431, 432, 433, 435, 436, 439, 440, 449, 470, 471, 475, 476, 478, 479, 483, 484, 485, 493, 494, 496, 497, 499, 502, 503, 505], "skip": [0, 75, 152, 159, 165, 189, 201, 229, 240, 279, 318, 334, 346, 366, 367, 392, 404, 436, 465, 472, 485, 494, 496, 497], "namecontain": [0, 75, 274, 302], "predistributest": [0, 75], "postdistributest": [0, 75], "attachreactor": [0, 75], "detachreactor": [0, 75], "gethistoryparam": [0, 16, 75, 239, 240], "getinterfac": [0, 16, 75, 192, 193, 434, 478], "interactinit": [0, 75, 193, 434], "interactbol": [0, 2, 3, 6, 16, 17, 18, 19, 24, 29, 75, 193, 226, 228, 229, 232, 233, 246, 247, 250, 336, 434], "interacteol": [0, 2, 3, 6, 16, 17, 18, 19, 24, 75, 193, 205, 208, 434], "interactboc": [0, 2, 16, 17, 19, 24, 75, 205, 208, 212, 214, 226, 228, 232, 233, 239, 240, 241, 242, 246, 247, 250, 434], "interacteoc": [0, 2, 3, 6, 19, 24, 75, 205, 208, 226, 228, 239, 240, 246, 247, 434], "interacteverynod": [0, 2, 3, 6, 10, 13, 17, 18, 19, 24, 29, 75, 193, 226, 228, 239, 240, 241, 242, 246, 247, 250, 372, 381, 386, 434, 437, 480], "interactcoupl": [0, 2, 29, 75, 226, 228, 239, 240, 246, 247, 250, 472, 496], "gettightcouplingvalu": [0, 75, 239, 240, 242], "interacterror": [0, 2, 3, 6, 75, 434], "interactdistributest": [0, 2, 3, 6, 75, 232, 233], "isrequesteddetailpoint": [0, 29, 75], "workeroper": [0, 2, 75, 141, 192, 193, 194, 205, 208, 209, 273, 372, 381], "enabl": [0, 3, 6, 44, 75, 91, 101, 160, 193, 229, 233, 237, 238, 240, 253, 280, 281, 283, 304, 327, 336, 361, 367, 431, 434, 436, 441, 469, 471, 472, 478, 483, 489, 493, 496, 497, 502, 503], "bolforc": [0, 75, 193], "writeinput": [0, 43, 44, 52, 75, 202, 204, 306, 463, 483], "readoutput": [0, 75], "specifyinput": [0, 54, 55, 75, 205, 208, 273], "updatephysicscouplingcontrol": [0, 75, 246, 247], "inputwrit": [0, 75, 248, 430], "write": [0, 2, 3, 5, 6, 7, 9, 12, 16, 19, 20, 21, 25, 28, 34, 40, 41, 44, 45, 52, 75, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 190, 204, 209, 214, 243, 245, 246, 247, 248, 249, 251, 258, 262, 275, 280, 303, 307, 333, 336, 337, 338, 344, 345, 350, 353, 361, 367, 368, 372, 388, 389, 390, 400, 404, 434, 436, 437, 439, 440, 441, 446, 450, 453, 463, 467, 469, 470, 471, 472, 476, 478, 480, 483, 484, 486, 494, 497, 499, 505], "outputread": [0, 75, 240, 242, 245, 430], "getactiveinterfaceinfo": [0, 75, 193, 430], "isinterfaceact": [0, 75, 430], "interfaceinfo": [0, 75, 430], "interfacecl": [0, 75], "kwarg": [0, 75, 79, 86, 99, 101, 105, 128, 130, 131, 132, 133, 134, 141, 159, 186, 209, 228, 229, 244, 247, 272, 273, 275, 281, 282, 283, 284, 285, 286, 296, 329, 333, 336, 342, 350, 373, 386, 404, 410], "meta": [0, 145, 191, 285, 330, 333, 430, 441, 476], "mpiaction": [0, 18, 194, 204, 252, 273, 381, 430, 434, 437, 472], "parallel": [0, 69, 141, 193, 194, 247, 252, 302, 381, 433, 434, 435, 468, 469, 470, 476, 494, 505], "invokeasmast": [0, 141, 437], "broadcast": [0, 24, 75, 141, 194, 302, 393, 437], "gather": [0, 2, 3, 5, 16, 52, 75, 141, 279, 328, 437, 475, 498], "invok": [0, 1, 34, 36, 44, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 141, 226, 230, 240, 309, 334, 405, 427, 431, 432, 434, 437, 470, 471, 505], "mpiflatten": [0, 141, 437], "mpiiter": [0, 141, 437], "invokehook": [0, 2, 18, 141, 226, 252, 372, 381, 437], "runact": [0, 141, 430, 437], "runactionsinseri": [0, 141, 430], "distributionact": [0, 141, 430], "mpiactionerror": [0, 141, 430], "distributestateact": [0, 141, 430, 437], "counter": [0, 75, 272, 275, 279, 323, 326, 332, 399, 489], "unregist": [0, 272], "defineparamet": [0, 202, 216, 219, 226, 267, 270, 273, 480], "afterconstructionofassembli": [0, 267, 270, 273], "onprocesscoreload": [0, 202, 226, 273, 372, 386, 480], "defineflag": [0, 1, 273, 372, 386, 493], "defineblueprintssect": [0, 273, 383], "defineset": [0, 54, 55, 202, 205, 216, 219, 220, 226, 232, 234, 255, 263, 264, 267, 270, 271, 273, 360, 362, 363, 364, 365, 369, 370, 372, 386, 394, 480], "definesettingsvalid": [0, 202, 205, 216, 219, 226, 267, 270, 273, 480], "defineguiwidget": [0, 273], "getoperatorclassfromruntyp": [0, 273], "defineparameterrenam": [0, 273, 372, 375, 386, 480], "userplugin": [0, 273, 386, 430, 472, 479, 497], "getnewpluginmanag": [0, 273, 430], "collectinterfacedescript": [0, 273, 430], "pluginerror": [0, 273, 430], "runlog": [0, 4, 25, 57, 201, 305, 368, 373, 384, 430, 440, 441, 472, 501], "concatenatelog": [0, 350, 430], "raw": [0, 350, 427, 430, 437], "extra": [0, 1, 4, 29, 55, 280, 302, 327, 330, 350, 367, 430, 431, 434, 441, 497, 501], "debug": [0, 2, 18, 44, 336, 350, 387, 430, 434, 441, 472, 479, 494, 496, 497, 501], "header": [0, 20, 23, 244, 245, 350, 430, 436, 439, 453, 472, 502], "warningreport": [0, 350, 384, 430], "setverbos": [0, 350, 384, 430, 441], "getverbos": [0, 350, 430], "deduplicationfilt": [0, 350, 430], "filter": [0, 16, 18, 52, 143, 145, 302, 317, 319, 333, 350, 391, 399, 404, 456, 499], "runlogg": [0, 350, 430], "fmt": [0, 350, 368, 387, 455], "allowstopdupl": [0, 350], "flush": [0, 350, 472], "getduplicatesfilt": [0, 350], "nulllogg": [0, 350, 430], "addhandl": [0, 350], "createlogdir": [0, 350, 384, 430], "logfactori": [0, 350, 430], "k": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505], "class": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 145, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 208, 209, 213, 214, 215, 217, 219, 222, 223, 224, 226, 228, 229, 230, 233, 235, 237, 238, 240, 242, 244, 245, 247, 248, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 266, 270, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 361, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 399, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 434, 436, 437, 439, 440, 471, 472, 479, 481, 482, 483, 484, 493, 494, 497], "simpl": [1, 3, 6, 13, 34, 76, 77, 83, 90, 101, 110, 111, 141, 142, 150, 172, 184, 204, 210, 228, 229, 273, 275, 279, 285, 318, 320, 328, 340, 366, 384, 386, 388, 419, 426, 434, 437, 444, 451, 467, 469, 472, 479, 480, 484, 485, 486, 493, 494, 496, 497], "pattern": [1, 44, 52, 75, 155, 156, 204, 240, 302, 328, 342, 360, 423, 427, 434, 475, 476, 483, 489], "mani": [1, 3, 7, 8, 16, 18, 31, 41, 44, 52, 57, 63, 74, 101, 142, 145, 153, 155, 156, 159, 189, 194, 204, 209, 216, 228, 233, 240, 247, 297, 302, 305, 318, 319, 327, 328, 330, 332, 333, 336, 340, 352, 360, 361, 372, 398, 399, 427, 433, 434, 439, 440, 442, 462, 465, 467, 468, 469, 470, 471, 472, 475, 476, 478, 480, 481, 485, 486, 489, 490, 493, 494, 496, 499, 500, 505], "wai": [1, 3, 5, 6, 18, 42, 44, 46, 86, 101, 141, 142, 153, 155, 173, 193, 204, 228, 240, 273, 275, 279, 302, 306, 318, 319, 328, 330, 333, 336, 340, 349, 350, 354, 367, 380, 400, 401, 431, 433, 434, 438, 439, 468, 469, 472, 475, 478, 481, 484, 487, 493, 496, 497, 502], "what": [1, 3, 4, 5, 8, 16, 29, 46, 75, 86, 101, 142, 143, 145, 152, 156, 187, 194, 204, 209, 210, 233, 247, 254, 273, 275, 279, 284, 303, 319, 325, 330, 333, 334, 336, 340, 360, 388, 396, 399, 401, 427, 432, 433, 434, 435, 436, 437, 441, 469, 475, 478, 479, 481, 482, 484, 493, 494, 495, 496, 501], "made": [1, 3, 5, 41, 43, 44, 52, 75, 82, 101, 142, 233, 240, 275, 279, 280, 281, 302, 305, 306, 334, 336, 372, 389, 392, 434, 437, 439, 441, 447, 469, 471, 472, 475, 476, 478, 480, 484, 485, 493, 496], "heavi": [1, 58, 98, 143, 145, 279, 302, 336, 391, 404, 406, 468, 482, 489, 490, 491, 493, 497], "take": [1, 16, 25, 31, 45, 53, 105, 130, 141, 159, 163, 191, 194, 196, 204, 209, 228, 229, 240, 273, 275, 279, 302, 328, 330, 336, 353, 387, 389, 400, 404, 427, 436, 437, 438, 439, 440, 469, 471, 478, 480, 481, 491, 493, 494, 496, 503], "bit": [1, 17, 30, 53, 152, 156, 233, 273, 275, 279, 299, 302, 323, 396, 437, 440, 465, 470, 475, 480, 484, 488, 498, 499, 505], "effort": [1, 41, 310, 318, 328, 400, 441, 469, 493], "refactor": [1, 209, 283, 320, 431, 440], "through": [1, 12, 29, 44, 66, 74, 110, 141, 142, 144, 145, 153, 157, 162, 167, 168, 169, 190, 191, 193, 194, 196, 228, 233, 273, 275, 279, 296, 299, 302, 312, 318, 319, 323, 325, 326, 327, 328, 330, 331, 332, 336, 361, 367, 380, 386, 387, 391, 400, 404, 425, 427, 434, 435, 436, 437, 439, 440, 468, 469, 472, 476, 478, 480, 484, 487, 488, 489, 491, 493, 494, 496, 497, 499, 501, 502, 505], "do": [1, 3, 4, 7, 13, 16, 17, 18, 24, 31, 41, 42, 43, 44, 46, 47, 55, 57, 61, 74, 75, 76, 101, 141, 142, 143, 145, 152, 153, 155, 159, 189, 190, 204, 206, 209, 210, 228, 233, 244, 245, 273, 275, 276, 279, 302, 304, 305, 306, 312, 318, 319, 325, 327, 328, 329, 330, 332, 334, 336, 345, 349, 350, 368, 372, 378, 380, 381, 389, 392, 393, 399, 400, 401, 412, 420, 427, 431, 432, 434, 435, 436, 437, 439, 441, 456, 469, 470, 471, 476, 478, 480, 481, 483, 484, 485, 491, 493, 494, 496, 497, 499, 501, 505], "now": [1, 16, 34, 44, 46, 101, 136, 165, 190, 209, 240, 273, 279, 302, 326, 330, 356, 431, 437, 439, 440, 441, 469, 470, 471, 472, 475, 478, 479, 480, 483, 484, 488, 493, 494, 498, 502, 505], "somewhat": [1, 4, 40, 155, 240, 296, 302, 327, 328, 336, 441, 469, 480, 493], "rudimentari": [1, 284], "intend": [1, 3, 5, 20, 52, 142, 190, 196, 204, 228, 229, 240, 273, 284, 290, 302, 305, 318, 319, 327, 328, 360, 393, 396, 399, 434, 435, 440, 468, 475, 476, 480, 502, 503], "subclass": [1, 8, 46, 52, 53, 57, 63, 71, 75, 76, 152, 155, 168, 192, 209, 217, 229, 240, 245, 247, 250, 251, 272, 273, 275, 276, 296, 299, 301, 302, 306, 318, 319, 325, 330, 332, 333, 334, 353, 367, 373, 394, 395, 427, 432, 434, 436, 437, 472, 480, 496, 497], "look": [1, 16, 18, 136, 142, 144, 145, 153, 193, 204, 209, 228, 233, 275, 279, 302, 306, 319, 328, 330, 336, 395, 404, 433, 436, 437, 438, 441, 478, 480, 481, 484, 494, 496], "feel": [1, 436, 480], "popul": [1, 86, 157, 240, 284, 326, 328, 337, 388, 406, 434, 437, 439], "__init__": [1, 53, 116, 141, 193, 195, 202, 273, 284, 286, 296, 299, 323, 325, 326, 327, 329, 330, 332, 333, 368, 375, 436, 440, 480], "collect": [1, 3, 4, 5, 18, 23, 25, 29, 41, 42, 43, 44, 52, 57, 75, 141, 156, 189, 190, 193, 226, 228, 229, 233, 235, 238, 247, 254, 273, 275, 276, 279, 299, 302, 320, 321, 327, 330, 332, 333, 336, 349, 391, 394, 396, 404, 432, 434, 436, 437, 439, 453, 455, 457, 465, 469, 472, 475, 476, 478, 480, 481, 482, 493, 499], "deem": [1, 53, 228, 434], "suitabl": [1, 330], "given": [1, 3, 4, 5, 8, 16, 40, 67, 75, 77, 79, 80, 101, 105, 110, 143, 144, 145, 148, 153, 189, 192, 193, 228, 229, 231, 233, 235, 240, 244, 248, 273, 275, 279, 280, 284, 285, 302, 304, 305, 306, 310, 318, 320, 323, 325, 328, 329, 330, 332, 333, 336, 346, 349, 353, 396, 398, 399, 400, 403, 404, 406, 427, 428, 429, 434, 437, 439, 440, 448, 453, 456, 469, 475, 476, 480, 484, 488, 491, 493, 494, 496, 497, 499, 500, 502, 503], "well": [1, 3, 4, 5, 6, 8, 16, 40, 42, 46, 52, 53, 74, 75, 76, 134, 142, 152, 214, 216, 233, 240, 273, 279, 283, 285, 299, 302, 303, 318, 328, 330, 332, 336, 354, 360, 391, 396, 399, 403, 404, 431, 434, 439, 440, 461, 463, 469, 476, 478, 480, 483, 484, 485, 493, 496, 497, 499], "further": [1, 3, 5, 233, 306, 332, 336, 388, 437, 439, 475, 476, 493], "also": [1, 3, 4, 5, 8, 30, 41, 44, 46, 58, 63, 74, 76, 83, 101, 141, 142, 145, 153, 155, 156, 162, 165, 168, 169, 190, 191, 193, 202, 206, 208, 209, 226, 228, 233, 240, 244, 245, 257, 273, 275, 279, 285, 290, 298, 299, 302, 304, 310, 312, 319, 320, 323, 327, 330, 332, 333, 336, 345, 367, 379, 388, 394, 396, 399, 400, 404, 427, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 454, 455, 458, 461, 463, 468, 469, 470, 471, 474, 476, 478, 480, 483, 484, 485, 487, 488, 489, 493, 494, 496, 497, 499, 505], "good": [1, 18, 42, 44, 89, 136, 163, 193, 210, 250, 280, 299, 333, 367, 372, 404, 433, 435, 439, 440, 469, 470, 471, 478, 480, 494, 505], "place": [1, 3, 5, 8, 18, 23, 24, 42, 44, 52, 75, 101, 141, 145, 204, 208, 209, 210, 228, 229, 273, 275, 276, 280, 282, 292, 306, 310, 323, 328, 332, 336, 387, 391, 399, 433, 434, 440, 441, 469, 470, 471, 475, 478, 480, 485, 493, 494, 496, 501, 505], "conveni": [1, 44, 142, 156, 193, 196, 204, 229, 273, 276, 328, 336, 372, 388, 389, 399, 431, 475, 480, 484, 496], "pluggi": [1, 272, 273, 436], "hook": [1, 18, 44, 75, 193, 242, 245, 272, 273, 283, 383, 386, 394, 435, 436, 469, 471, 480, 493], "can": [1, 3, 4, 5, 6, 8, 16, 18, 23, 29, 39, 41, 42, 43, 44, 45, 47, 52, 53, 55, 57, 58, 62, 63, 73, 74, 75, 76, 83, 86, 90, 101, 122, 141, 142, 145, 150, 152, 153, 155, 156, 157, 159, 162, 163, 165, 167, 169, 172, 176, 179, 180, 181, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 196, 197, 201, 202, 203, 204, 205, 206, 208, 209, 210, 216, 217, 228, 229, 233, 235, 240, 245, 247, 252, 257, 258, 262, 266, 273, 275, 276, 279, 280, 283, 284, 285, 290, 294, 296, 297, 298, 299, 301, 302, 303, 304, 306, 312, 314, 317, 318, 319, 320, 321, 323, 325, 327, 328, 330, 332, 333, 334, 336, 340, 341, 342, 344, 346, 349, 350, 352, 360, 361, 367, 368, 370, 372, 373, 378, 379, 382, 383, 384, 386, 387, 389, 391, 394, 395, 396, 398, 399, 400, 403, 404, 408, 414, 424, 427, 431, 432, 433, 434, 436, 437, 439, 440, 441, 448, 449, 462, 463, 464, 465, 468, 469, 470, 471, 472, 475, 476, 478, 480, 481, 483, 484, 485, 488, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505], "sometim": [1, 4, 44, 74, 145, 190, 209, 229, 245, 303, 330, 463, 478, 480, 493, 496, 499, 501], "pain": [1, 330, 394], "result": [1, 3, 5, 8, 16, 18, 23, 34, 44, 53, 58, 75, 79, 117, 120, 127, 141, 153, 155, 157, 173, 186, 190, 204, 216, 228, 229, 235, 240, 242, 244, 245, 247, 272, 273, 279, 286, 289, 296, 302, 304, 305, 312, 318, 332, 333, 336, 352, 367, 370, 379, 389, 394, 399, 401, 427, 434, 437, 439, 456, 468, 469, 470, 474, 475, 476, 479, 489, 493, 494, 496, 497, 498, 501, 502, 505], "individu": [1, 3, 5, 16, 43, 52, 57, 69, 75, 145, 193, 194, 196, 209, 226, 233, 235, 279, 286, 302, 306, 317, 319, 327, 341, 389, 437, 440, 475, 476, 478, 479, 484, 497], "mai": [1, 3, 4, 5, 16, 17, 23, 29, 30, 34, 40, 41, 44, 46, 47, 52, 55, 57, 63, 66, 74, 75, 76, 78, 101, 105, 141, 142, 143, 144, 145, 153, 155, 156, 159, 163, 189, 192, 193, 194, 196, 197, 201, 204, 205, 209, 226, 229, 233, 235, 240, 244, 245, 247, 273, 275, 276, 279, 280, 281, 284, 296, 299, 301, 302, 303, 304, 305, 306, 318, 319, 320, 321, 325, 328, 330, 332, 333, 336, 342, 350, 360, 361, 378, 381, 384, 386, 394, 396, 399, 404, 406, 427, 432, 434, 436, 439, 440, 441, 454, 469, 470, 471, 472, 475, 476, 478, 480, 483, 484, 485, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505], "ad": [1, 5, 22, 23, 34, 36, 41, 42, 44, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 145, 153, 161, 163, 166, 193, 197, 209, 229, 230, 233, 238, 240, 245, 247, 273, 275, 276, 279, 285, 291, 296, 302, 305, 306, 310, 314, 322, 327, 332, 334, 336, 337, 340, 361, 371, 387, 404, 405, 431, 439, 441, 456, 463, 464, 465, 468, 469, 471, 472, 478, 479, 483, 493, 494, 496, 497], "logic": [1, 75, 101, 152, 155, 162, 167, 193, 209, 273, 280, 283, 285, 309, 318, 333, 336, 368, 384, 471, 472, 476, 478, 494, 495, 497], "here": [1, 3, 5, 12, 41, 44, 57, 63, 74, 75, 76, 142, 143, 145, 152, 156, 157, 162, 164, 167, 186, 189, 194, 195, 202, 204, 209, 210, 226, 228, 233, 240, 273, 279, 280, 284, 285, 290, 296, 297, 298, 299, 301, 302, 303, 310, 312, 317, 325, 326, 327, 336, 340, 350, 353, 367, 382, 388, 396, 427, 432, 434, 436, 437, 439, 440, 441, 447, 455, 461, 462, 468, 469, 475, 476, 478, 480, 481, 482, 484, 485, 487, 489, 492, 493, 496, 497, 501], "reduc": [1, 5, 275, 302, 318, 321, 325, 328, 332, 346, 471, 476, 478, 493], "boilerpl": [1, 156], "throughout": [1, 6, 143, 145, 233, 302, 320, 321, 434, 440, 476, 485, 488, 493, 497], "rest": [1, 78, 173, 275, 281, 319, 380, 394, 434, 455, 484, 485, 493, 501], "mostli": [1, 3, 5, 6, 134, 159, 240, 273, 286, 302, 306, 361, 373, 384, 386, 403, 465, 469, 485], "free": [1, 101, 152, 279, 340, 404, 406, 436, 493], "adopt": [1, 334, 436], "throw": [1, 472], "awai": [1, 323], "start": [1, 3, 8, 23, 75, 145, 155, 162, 193, 209, 229, 233, 240, 247, 276, 279, 303, 318, 326, 328, 336, 387, 388, 389, 398, 399, 400, 404, 406, 427, 433, 434, 435, 436, 438, 439, 440, 441, 447, 448, 449, 470, 472, 479, 483, 484, 490, 491, 493, 499, 505], "scratch": [1, 74, 463, 478, 480, 484, 485, 497], "thei": [1, 4, 5, 31, 44, 53, 63, 74, 75, 76, 101, 141, 142, 145, 155, 159, 162, 164, 165, 189, 191, 193, 194, 196, 197, 204, 206, 210, 213, 226, 229, 233, 235, 240, 245, 247, 258, 273, 275, 276, 279, 280, 281, 284, 286, 294, 296, 302, 303, 304, 319, 321, 325, 327, 328, 329, 330, 332, 333, 334, 336, 342, 349, 352, 360, 368, 371, 372, 387, 389, 394, 400, 420, 432, 433, 434, 436, 437, 439, 440, 441, 463, 469, 471, 472, 475, 476, 478, 480, 483, 484, 485, 489, 493, 494, 497, 500, 501], "wish": [1, 3, 4, 5, 52, 165, 233, 273, 280, 281, 427, 436, 478, 480], "For": [1, 3, 4, 5, 7, 8, 16, 23, 41, 46, 52, 53, 57, 74, 75, 100, 101, 136, 141, 142, 143, 153, 154, 155, 159, 165, 172, 193, 194, 209, 229, 240, 245, 247, 273, 279, 281, 284, 285, 296, 297, 298, 299, 302, 303, 305, 306, 318, 319, 320, 323, 325, 327, 328, 330, 333, 334, 336, 346, 353, 367, 387, 388, 394, 396, 399, 400, 408, 427, 431, 433, 434, 436, 437, 439, 440, 441, 448, 449, 465, 469, 475, 476, 478, 480, 481, 482, 483, 484, 485, 488, 489, 491, 493, 496, 497, 499, 500, 502], "descript": [1, 17, 18, 20, 34, 36, 42, 57, 63, 67, 101, 111, 155, 156, 184, 280, 284, 302, 330, 333, 336, 367, 394, 403, 405, 432, 439, 440, 448, 469, 472, 476, 478, 480, 484, 488, 489, 490, 491, 497, 499, 504], "program": [1, 113, 196, 245, 330, 331, 437, 438, 440, 468, 469, 475, 476, 480, 483, 497], "appropri": [1, 3, 7, 17, 18, 23, 29, 44, 55, 73, 75, 144, 152, 155, 165, 168, 201, 218, 226, 253, 269, 273, 281, 282, 312, 318, 330, 378, 381, 386, 427, 437, 448, 449, 469, 470, 475, 476, 480, 497, 505], "__main__": [1, 434, 436, 463, 465], "expect": [1, 3, 4, 5, 46, 71, 75, 76, 98, 149, 152, 156, 159, 186, 207, 209, 210, 228, 233, 244, 247, 257, 273, 275, 280, 285, 286, 290, 296, 302, 305, 307, 312, 336, 341, 345, 347, 350, 355, 359, 372, 380, 395, 401, 402, 434, 436, 437, 442, 467, 475, 476, 478, 480, 481, 483, 486, 493, 502], "m": [1, 36, 63, 66, 67, 74, 77, 80, 89, 90, 92, 93, 94, 96, 98, 101, 109, 110, 128, 129, 130, 133, 139, 155, 156, 161, 165, 193, 280, 290, 297, 298, 301, 323, 326, 328, 329, 336, 341, 381, 387, 400, 432, 434, 438, 440, 441, 462, 470, 471, 476, 480, 483, 485, 488, 489, 491, 499, 505], "myapp": [1, 432, 436, 480], "grab": [1, 12, 16, 142, 275, 361, 478, 499], "ridabl": 1, "develop": [1, 18, 44, 73, 142, 196, 209, 233, 273, 274, 276, 279, 302, 319, 334, 336, 339, 352, 389, 400, 405, 431, 432, 433, 434, 436, 440, 441, 463, 468, 469, 475, 476, 480, 485, 493, 496, 497, 502], "dict": [1, 3, 5, 6, 18, 44, 46, 75, 76, 101, 145, 150, 156, 159, 189, 191, 209, 228, 229, 235, 247, 273, 274, 279, 282, 284, 285, 296, 299, 302, 304, 306, 307, 312, 330, 332, 333, 336, 337, 346, 366, 367, 368, 387, 391, 396, 405, 406, 465, 483], "dictionari": [1, 3, 4, 5, 44, 75, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139, 142, 143, 145, 150, 159, 184, 209, 228, 229, 231, 233, 235, 245, 247, 273, 283, 284, 296, 302, 307, 312, 318, 330, 332, 333, 336, 337, 346, 361, 366, 367, 387, 391, 396, 399, 406, 434, 439, 472, 476, 482, 494, 499], "renam": [1, 44, 204, 273, 276, 331, 336, 354, 368, 404, 412, 440, 471, 476, 480], "render": [1, 3, 5, 19, 20, 23, 24, 42, 305, 394, 431, 436, 438, 439, 476], "It": [1, 3, 4, 5, 8, 13, 16, 17, 18, 40, 44, 53, 74, 75, 76, 78, 80, 82, 83, 89, 98, 101, 110, 134, 141, 142, 143, 153, 156, 159, 165, 168, 169, 191, 193, 204, 208, 209, 228, 229, 233, 240, 247, 252, 273, 274, 275, 279, 283, 285, 302, 304, 318, 323, 326, 327, 328, 329, 332, 333, 334, 336, 340, 350, 354, 360, 361, 367, 373, 394, 398, 399, 400, 401, 403, 404, 406, 434, 435, 436, 439, 440, 458, 468, 469, 475, 476, 478, 480, 484, 487, 489, 492, 493, 496, 497, 501], "perform": [1, 3, 5, 8, 16, 17, 43, 44, 46, 47, 52, 57, 58, 62, 73, 74, 75, 84, 101, 141, 142, 155, 159, 191, 192, 194, 201, 204, 208, 209, 216, 217, 218, 219, 220, 222, 223, 224, 225, 229, 240, 244, 247, 273, 279, 280, 285, 302, 304, 305, 306, 318, 319, 328, 332, 333, 336, 341, 367, 372, 378, 399, 400, 403, 405, 434, 437, 440, 443, 446, 448, 453, 467, 468, 469, 471, 474, 475, 478, 480, 482, 483, 484, 486, 489, 493, 494, 495, 496, 497, 498, 499], "cach": [1, 16, 44, 101, 190, 244, 272, 275, 276, 299, 302, 317, 318, 336, 368, 401, 417, 483, 497], "expens": [1, 75, 272, 302, 437], "detect": [1, 3, 5, 7, 8, 74, 272, 273, 294, 333, 476], "chang": [1, 3, 4, 5, 6, 16, 44, 45, 74, 76, 101, 105, 141, 145, 163, 165, 202, 216, 226, 245, 247, 273, 275, 279, 280, 285, 296, 299, 302, 304, 305, 306, 310, 314, 318, 323, 325, 326, 328, 332, 333, 336, 350, 355, 367, 372, 392, 393, 400, 405, 431, 432, 434, 435, 437, 440, 441, 453, 469, 470, 475, 476, 478, 480, 481, 483, 488, 489, 493, 496, 497, 502, 503, 505], "invalid": [1, 3, 53, 55, 75, 247, 279, 290, 294, 299, 302, 330, 341, 353, 355, 356, 384, 386, 390, 429, 471, 472, 476, 478, 493], "recomput": [1, 101, 228, 279, 296, 299, 302], "specifi": [1, 2, 3, 5, 6, 11, 12, 13, 14, 19, 27, 28, 31, 32, 33, 36, 38, 39, 46, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 86, 101, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 145, 147, 148, 149, 150, 151, 153, 156, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 193, 196, 199, 200, 201, 213, 214, 215, 222, 223, 224, 226, 228, 229, 230, 233, 235, 237, 238, 240, 242, 245, 247, 250, 251, 252, 257, 258, 259, 260, 261, 262, 266, 273, 275, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 299, 302, 304, 306, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 359, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 396, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 439, 441, 449, 459, 463, 471, 472, 475, 478, 479, 485, 488, 489, 493, 494, 496, 497, 500, 502], "pass": [1, 3, 5, 6, 8, 16, 22, 40, 44, 53, 55, 74, 75, 76, 141, 145, 156, 187, 196, 204, 228, 240, 273, 275, 279, 280, 284, 302, 304, 312, 323, 325, 327, 328, 332, 333, 336, 345, 360, 361, 367, 368, 372, 391, 392, 394, 400, 425, 427, 432, 433, 436, 437, 441, 462, 465, 468, 483, 494, 497], "pluginpath": 1, "path": [1, 3, 4, 5, 7, 23, 40, 43, 44, 52, 53, 55, 73, 74, 75, 76, 162, 167, 168, 169, 190, 196, 203, 204, 209, 229, 235, 240, 266, 279, 284, 337, 340, 346, 353, 354, 355, 356, 357, 360, 361, 368, 372, 387, 389, 390, 392, 394, 401, 403, 412, 427, 431, 432, 440, 463, 465, 470, 471, 472, 478, 480, 493, 494, 496, 497, 505], "These": [1, 4, 5, 16, 23, 31, 43, 45, 46, 57, 74, 75, 105, 142, 145, 152, 153, 165, 189, 193, 195, 196, 197, 206, 209, 210, 213, 217, 229, 233, 235, 240, 252, 273, 275, 279, 284, 296, 297, 302, 306, 310, 318, 319, 323, 330, 333, 336, 355, 360, 364, 366, 367, 373, 381, 388, 394, 420, 434, 437, 439, 440, 468, 469, 470, 471, 474, 475, 480, 481, 484, 489, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 505], "startup": [1, 193, 201, 475], "full": [1, 3, 5, 16, 25, 44, 46, 50, 52, 53, 57, 76, 86, 153, 157, 189, 190, 193, 210, 229, 240, 279, 284, 285, 298, 302, 303, 305, 306, 314, 317, 326, 327, 328, 336, 337, 344, 347, 361, 368, 371, 388, 403, 404, 406, 408, 412, 434, 436, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 476, 478, 479, 480, 484, 485, 488, 489, 491, 493, 494, 495, 496, 497, 501, 504, 505], "namespac": [1, 8, 36, 76, 202, 273, 333, 436, 440, 472, 480, 497], "There": [1, 3, 5, 18, 57, 75, 142, 155, 159, 174, 205, 226, 233, 240, 279, 280, 285, 296, 305, 318, 320, 330, 333, 336, 337, 382, 396, 399, 433, 434, 437, 439, 440, 472, 475, 476, 480, 483, 484, 485, 487, 493, 495, 497, 499], "comma": [1, 440], "between": [1, 3, 4, 5, 6, 16, 47, 61, 62, 74, 75, 101, 150, 152, 153, 155, 156, 162, 165, 189, 191, 192, 193, 209, 210, 214, 228, 233, 240, 244, 245, 257, 273, 275, 279, 280, 285, 298, 302, 303, 310, 312, 318, 319, 323, 325, 326, 327, 328, 330, 333, 336, 367, 372, 387, 393, 394, 400, 404, 429, 437, 439, 440, 455, 468, 469, 471, 472, 475, 476, 478, 480, 481, 482, 483, 484, 488, 489, 493, 494, 496, 497, 499, 502, 503], "dot": [1, 328, 438, 480], "repres": [1, 3, 5, 43, 74, 91, 101, 141, 143, 145, 152, 155, 159, 165, 189, 190, 191, 204, 209, 210, 228, 229, 233, 235, 240, 246, 247, 248, 257, 273, 274, 275, 279, 280, 282, 284, 297, 298, 299, 301, 302, 318, 321, 323, 325, 326, 327, 328, 330, 333, 336, 342, 349, 360, 388, 396, 434, 472, 475, 476, 478, 480, 484, 485, 488, 489, 491, 493, 496, 497, 499, 501], "stuff": [1, 5, 44, 280, 389, 393, 427, 437, 440], "plugindir": 1, "pluginmod": 1, "plugincl": 1, "whatev": [1, 3, 4, 7, 44, 52, 63, 204, 286, 334, 389, 392, 400, 436, 437, 493], "plugmod2": 1, "plugcls2": 1, "linux": [1, 55, 469, 470, 472, 480, 501, 505], "unix": [1, 480], "py": [1, 3, 6, 116, 122, 145, 190, 195, 202, 206, 209, 213, 245, 279, 302, 339, 340, 346, 361, 381, 403, 414, 415, 423, 425, 431, 434, 436, 437, 440, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 471, 472, 478, 484, 497, 501], "meant": [1, 145, 273, 299, 318, 361, 420, 439, 441, 474, 485, 488], "taken": [1, 228, 229, 302, 326, 330, 334, 341, 427, 483, 485], "though": [1, 4, 98, 155, 189, 279, 302, 329, 336, 340, 388, 427, 434, 471, 480, 496], "public": [1, 4, 53, 77, 128, 129, 130, 155, 165, 302, 435, 471], "idea": [1, 197, 299, 336, 427, 432, 436, 437, 440, 469, 480], "differ": [1, 3, 4, 5, 7, 18, 44, 47, 52, 62, 74, 75, 76, 79, 101, 152, 155, 157, 159, 163, 165, 182, 186, 192, 193, 195, 197, 204, 214, 225, 226, 228, 229, 233, 240, 247, 250, 275, 276, 279, 285, 286, 291, 299, 302, 303, 304, 306, 312, 318, 319, 326, 327, 330, 336, 340, 361, 372, 378, 388, 392, 394, 396, 400, 401, 404, 437, 439, 440, 441, 448, 469, 472, 476, 478, 480, 481, 484, 485, 488, 489, 493, 496, 497, 499, 502, 503], "regular": [1, 36, 44, 155, 168, 169, 305, 326, 328, 423, 427, 475, 476, 480, 485, 494], "becaus": [1, 2, 3, 5, 16, 34, 53, 71, 74, 75, 90, 145, 150, 152, 153, 156, 165, 186, 189, 191, 193, 206, 209, 216, 229, 231, 240, 245, 273, 275, 279, 280, 296, 298, 299, 302, 304, 305, 318, 323, 325, 326, 327, 328, 333, 336, 344, 349, 354, 367, 380, 386, 387, 388, 393, 400, 401, 405, 406, 427, 433, 436, 437, 439, 456, 469, 470, 475, 476, 478, 483, 485, 493, 496, 505], "As": [1, 3, 5, 44, 52, 76, 132, 155, 217, 273, 286, 299, 302, 306, 319, 330, 387, 388, 411, 434, 436, 469, 473, 475, 476, 478, 481, 484, 485, 489, 493, 494, 496, 499], "restrict": [1, 52, 190, 273, 275, 302, 306, 330, 336, 496, 502], "flexibl": [1, 3, 193, 204, 273, 318, 456, 469, 471, 476, 480, 496], "power": [1, 25, 53, 92, 93, 96, 136, 155, 157, 167, 168, 189, 193, 201, 202, 206, 208, 209, 210, 226, 228, 240, 242, 247, 275, 279, 302, 305, 306, 318, 330, 336, 352, 360, 361, 387, 388, 426, 427, 434, 436, 439, 464, 469, 472, 478, 480, 483, 484, 485, 488, 489, 491, 494, 495, 496, 497, 498, 499, 504], "usual": [1, 3, 5, 31, 44, 76, 100, 145, 149, 165, 189, 209, 240, 273, 279, 319, 333, 336, 387, 436, 440, 441, 471, 475, 485, 493, 494], "textual": [1, 463, 485], "screen": [1, 404, 470, 480, 505], "want": [1, 2, 3, 5, 7, 18, 29, 44, 52, 75, 76, 101, 152, 155, 156, 159, 163, 168, 202, 204, 209, 226, 228, 240, 244, 245, 273, 275, 276, 279, 284, 286, 296, 299, 302, 303, 318, 330, 333, 334, 336, 340, 349, 350, 352, 355, 361, 387, 388, 396, 400, 404, 414, 431, 434, 435, 436, 437, 439, 440, 441, 463, 469, 470, 476, 478, 480, 483, 485, 493, 494, 496, 497, 501, 505], "handl": [2, 3, 5, 6, 12, 23, 25, 40, 41, 44, 57, 74, 75, 76, 89, 101, 141, 150, 152, 156, 194, 209, 214, 215, 226, 228, 245, 273, 275, 279, 283, 284, 302, 307, 319, 325, 328, 333, 336, 350, 367, 373, 387, 390, 394, 412, 423, 427, 469, 471, 472, 478, 481, 485, 488, 493, 494, 497], "persist": [2, 3, 6, 319, 330, 434, 439, 469, 472], "static": [2, 3, 5, 8, 12, 18, 40, 52, 55, 57, 75, 79, 141, 189, 193, 194, 196, 197, 205, 208, 209, 219, 226, 240, 263, 270, 273, 274, 275, 279, 296, 302, 306, 318, 322, 323, 325, 326, 328, 329, 333, 367, 370, 372, 375, 386, 388, 389, 436, 447, 468, 469], "cmd": [2, 208, 209, 273, 381, 437], "bool": [2, 3, 5, 6, 22, 25, 44, 52, 63, 75, 101, 145, 156, 157, 165, 190, 193, 196, 201, 204, 209, 226, 229, 240, 247, 273, 275, 279, 284, 285, 286, 296, 299, 302, 304, 306, 312, 318, 320, 322, 323, 325, 326, 328, 329, 333, 336, 349, 360, 361, 367, 368, 387, 389, 392, 400, 403, 404, 406, 427, 428, 475], "certain": [2, 57, 142, 193, 194, 196, 228, 240, 245, 273, 275, 279, 285, 302, 303, 310, 319, 333, 336, 373, 387, 436, 437, 439, 448, 469, 471, 476, 480, 483, 484, 493, 496, 500], "action": [2, 13, 36, 63, 67, 194, 196, 201, 252, 333, 380, 389, 393, 405, 432, 434, 437, 439, 472], "memori": [2, 3, 4, 5, 6, 16, 18, 44, 75, 142, 194, 204, 228, 240, 273, 302, 328, 330, 336, 399, 404, 406, 437, 472, 476, 485, 488, 491, 497], "profil": [2, 18, 44, 389, 406, 433, 435, 440, 470, 472, 483, 493, 497, 505], "small": [2, 163, 176, 181, 319, 336, 457, 468, 469, 472, 480, 481, 489, 497], "enough": [2, 34, 40, 53, 136, 150, 155, 159, 194, 210, 214, 279, 302, 305, 312, 398, 399, 440, 469, 481, 484, 485, 491, 499], "don": [2, 3, 5, 8, 16, 75, 101, 143, 145, 152, 193, 197, 209, 238, 273, 279, 299, 302, 336, 346, 361, 398, 399, 400, 416, 420, 432, 435, 437, 439, 462, 470, 475, 478, 493, 499, 505], "undon": 2, "so": [2, 3, 4, 5, 6, 8, 16, 17, 18, 30, 34, 40, 41, 44, 46, 55, 74, 75, 86, 101, 141, 142, 143, 145, 152, 156, 159, 165, 168, 191, 193, 204, 205, 209, 210, 228, 231, 233, 235, 240, 250, 251, 260, 273, 275, 279, 280, 283, 284, 285, 290, 294, 296, 297, 299, 302, 303, 304, 305, 306, 318, 319, 323, 325, 326, 327, 328, 330, 332, 333, 334, 336, 350, 352, 361, 368, 372, 373, 387, 394, 396, 398, 399, 400, 401, 404, 406, 427, 431, 433, 434, 436, 437, 438, 439, 440, 441, 447, 458, 465, 468, 469, 470, 471, 472, 475, 478, 479, 480, 481, 482, 483, 484, 489, 491, 493, 494, 496, 497, 499, 501, 504, 505], "r": [2, 3, 5, 6, 7, 8, 9, 13, 16, 17, 18, 22, 23, 24, 25, 29, 35, 40, 41, 42, 44, 55, 75, 89, 90, 112, 139, 141, 155, 156, 161, 165, 185, 186, 190, 193, 201, 205, 208, 209, 210, 214, 226, 228, 233, 240, 242, 245, 247, 248, 250, 251, 252, 254, 273, 274, 276, 279, 280, 290, 293, 297, 298, 301, 302, 303, 304, 306, 307, 309, 318, 321, 323, 326, 328, 329, 330, 336, 339, 341, 346, 378, 381, 386, 387, 400, 404, 426, 431, 433, 434, 437, 439, 440, 447, 448, 449, 452, 455, 460, 465, 466, 467, 469, 470, 471, 472, 476, 478, 483, 484, 485, 486, 493, 496, 497, 498, 499, 505], "stage": [2, 22, 226, 254, 273, 439], "diagram": [2, 22, 145, 228, 274, 296, 404, 431, 439, 472], "come": [2, 4, 41, 62, 74, 76, 101, 155, 162, 167, 189, 190, 192, 194, 202, 226, 240, 273, 279, 330, 332, 333, 345, 387, 394, 396, 427, 432, 434, 436, 441, 444, 451, 456, 465, 467, 469, 472, 478, 480, 481, 483, 484, 486, 496, 497], "togeth": [2, 8, 42, 141, 190, 228, 229, 233, 244, 245, 279, 284, 321, 327, 334, 349, 427, 436, 439, 468, 480, 495, 499, 500], "happen": [2, 44, 55, 141, 145, 202, 209, 210, 240, 245, 273, 279, 294, 302, 318, 330, 336, 352, 353, 360, 434, 436, 437, 439, 476, 481, 494, 497, 501], "end": [2, 3, 5, 6, 11, 16, 17, 18, 19, 22, 23, 42, 74, 75, 101, 142, 153, 155, 156, 159, 193, 247, 254, 273, 283, 305, 326, 327, 350, 378, 387, 388, 434, 439, 441, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 475, 481, 483, 484, 489, 496, 500, 503], "section": [2, 3, 5, 19, 22, 23, 88, 133, 134, 142, 145, 153, 155, 157, 161, 163, 164, 166, 172, 184, 186, 188, 189, 190, 191, 202, 203, 214, 226, 228, 229, 233, 240, 244, 245, 247, 252, 254, 257, 258, 259, 273, 279, 284, 285, 290, 293, 302, 305, 330, 336, 337, 354, 394, 404, 406, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 455, 460, 461, 467, 469, 471, 472, 473, 474, 476, 478, 484, 485, 486, 488, 489, 490, 494, 495, 496, 497, 500, 501, 502, 503, 505], "creat": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 22, 23, 25, 27, 28, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 50, 51, 52, 53, 55, 56, 57, 58, 59, 63, 67, 71, 72, 74, 75, 101, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 134, 141, 143, 145, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 161, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 199, 200, 201, 208, 209, 213, 214, 215, 222, 223, 224, 228, 229, 235, 237, 238, 242, 247, 248, 250, 251, 254, 257, 258, 259, 260, 261, 262, 266, 273, 275, 279, 280, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 302, 306, 312, 313, 314, 315, 316, 317, 318, 320, 325, 327, 328, 330, 331, 332, 333, 334, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 359, 360, 361, 367, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392, 394, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 431, 433, 434, 435, 436, 437, 439, 444, 451, 455, 456, 457, 463, 464, 467, 469, 470, 472, 475, 476, 478, 479, 483, 484, 485, 486, 493, 496, 497, 499, 500, 503, 504, 505], "graph": [2, 23, 406, 439, 455], "across": [2, 44, 53, 88, 152, 155, 161, 163, 166, 276, 302, 330, 336, 349, 372, 403, 404, 437, 469, 471, 475, 482, 483, 484, 488, 494, 498, 499], "timenodegrouppattern": [2, 3, 5], "versionmajor": [2, 3, 5], "versionminor": [2, 3, 5], "open": [2, 3, 5, 6, 42, 57, 74, 155, 156, 225, 336, 387, 392, 393, 431, 432, 433, 440, 465, 469, 470, 473, 474, 475, 478, 484, 496, 499, 505], "grablocalcommithash": [2, 3, 5], "splitdatabas": [2, 3, 5], "filenam": [2, 3, 5, 6, 74, 75, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 184, 193, 360, 382, 392, 394, 403, 404, 439], "loadc": [2, 3, 5, 478], "loadblueprint": [2, 3, 5], "loadgeometri": [2, 3, 5], "writeinputstodb": [2, 3, 5], "readinputsfromdb": [2, 3, 5], "mergehistori": [2, 3, 5], "gentimestepgroup": [2, 3, 5], "getlayout": [2, 3, 5], "gentimestep": [2, 3, 5], "genauxiliarydata": [2, 3, 5], "getauxiliarydatapath": [2, 3, 5], "kei": [2, 3, 5, 16, 23, 44, 52, 75, 101, 145, 150, 156, 159, 186, 189, 191, 209, 228, 229, 232, 233, 235, 245, 247, 258, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 296, 299, 301, 302, 304, 312, 330, 332, 336, 342, 346, 352, 360, 361, 366, 387, 388, 391, 396, 404, 406, 439, 447, 455, 456, 470, 475, 476, 478, 482, 483, 488, 489, 491, 493, 494, 496, 505], "geth5group": [2, 3, 5], "hastimestep": [2, 3, 5], "writetodb": [2, 3, 5, 8, 478], "synctosharedfold": [2, 3, 5], "gethistorybyloc": [2, 3, 5], "gethistoriesbyloc": [2, 3, 5], "gethistori": [2, 3, 5, 6, 499], "initdb": [2, 3, 6, 478], "writedbeverynod": [2, 3, 6], "preprestartrun": [2, 3, 6], "loadstat": [2, 3, 6, 192, 193], "read_only_fm": [2, 3, 9], "read_write_fm": [2, 3, 9], "create_file_ti": [2, 3, 9], "create_file_fi": [2, 3, 9], "create_file_fie2": [2, 3, 9], "read_write_cr": [2, 3, 9], "comparedb3": [2, 3, 11], "outputwrit": [2, 3, 4], "diffresult": [2, 3, 4], "geth5groupnam": [2, 3, 5], "packspecialdata": [2, 3, 5, 333, 499], "unpackspecialdata": [2, 3, 5, 333], "collectblocknumberdens": [2, 3, 5], "layout": [2, 3, 5, 14, 273, 280, 286, 305, 318, 327, 337, 388, 439, 493, 496, 499], "replacenoneswithnonsens": [2, 3, 8], "replacenonsensewithnon": [2, 3, 8], "typedef": [2, 3], "group": [2, 3, 4, 5, 8, 19, 20, 23, 31, 41, 44, 142, 143, 155, 157, 159, 163, 164, 165, 168, 169, 172, 174, 182, 186, 189, 190, 191, 193, 214, 226, 228, 229, 231, 233, 240, 244, 245, 247, 257, 260, 273, 279, 282, 283, 290, 299, 302, 306, 318, 328, 333, 336, 349, 391, 404, 406, 434, 437, 439, 440, 452, 455, 466, 467, 472, 476, 478, 485, 486, 489, 491, 493, 496, 497, 499, 501], "imag": [2, 19, 20, 21, 23, 301, 305, 318, 389, 394, 404, 406, 420, 435, 438, 456, 472, 476], "html": [2, 18, 19, 20, 23, 28, 44, 80, 98, 155, 298, 333, 394, 404, 428, 431, 435, 469, 476, 487, 497], "htmlfile": [2, 19, 21], "tag": [2, 19, 21, 23, 145, 240, 427, 441, 493], "head": [2, 19, 21, 23, 254, 336, 439, 469, 493], "bodi": [2, 19, 21, 63, 141, 394, 468], "img": [2, 19, 21, 23], "b": [2, 19, 21, 40, 46, 52, 79, 90, 92, 93, 96, 113, 133, 134, 143, 145, 152, 165, 174, 189, 190, 193, 209, 210, 225, 228, 233, 235, 240, 274, 275, 279, 280, 290, 294, 297, 298, 301, 302, 304, 318, 319, 328, 330, 334, 336, 338, 341, 342, 346, 400, 427, 429, 434, 437, 453, 455, 456, 460, 464, 471, 472, 476, 478, 480, 483, 484, 485, 489, 491, 493, 494, 496, 498, 502], "p": [2, 3, 19, 21, 23, 77, 87, 90, 100, 101, 110, 112, 117, 133, 139, 143, 145, 153, 159, 161, 165, 166, 193, 245, 279, 280, 290, 297, 298, 299, 301, 302, 304, 318, 323, 326, 328, 329, 330, 336, 341, 342, 346, 398, 427, 432, 437, 439, 455, 456, 464, 472, 476, 478, 480, 484, 488, 489, 491, 493, 499], "A": [2, 3, 5, 8, 17, 19, 20, 21, 23, 25, 29, 36, 40, 41, 43, 44, 52, 53, 55, 63, 67, 75, 76, 77, 80, 87, 90, 101, 102, 105, 109, 122, 134, 136, 141, 142, 143, 144, 145, 150, 153, 155, 156, 157, 159, 161, 165, 189, 190, 191, 193, 196, 201, 204, 206, 208, 209, 210, 214, 225, 228, 229, 233, 235, 240, 247, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 286, 288, 291, 292, 294, 296, 297, 298, 299, 301, 302, 304, 306, 307, 312, 318, 319, 320, 323, 326, 327, 328, 329, 332, 333, 334, 336, 338, 341, 342, 346, 349, 350, 353, 361, 367, 372, 378, 381, 384, 386, 387, 388, 394, 396, 400, 404, 406, 427, 429, 431, 434, 436, 439, 440, 441, 455, 463, 465, 468, 469, 471, 475, 476, 478, 479, 480, 482, 484, 485, 488, 489, 490, 493, 494, 496, 497, 498, 499], "titl": [2, 19, 20, 21, 23, 43, 44, 52, 53, 204, 266, 361, 387, 394, 404, 406, 432, 439, 454, 455, 478, 481, 482, 483, 496], "h1": [2, 19, 21, 23, 145, 342], "h2": [2, 19, 21, 23, 81, 145, 342], "h3": [2, 19, 21, 145, 342], "h4": [2, 19, 21, 23, 145, 342], "ul": [2, 19, 21], "li": [2, 19, 21, 143, 145, 165, 247, 297, 302, 336, 342, 427], "style": [2, 19, 21, 44, 52, 101, 145, 156, 273, 330, 332, 336, 337, 357, 361, 368, 440, 469, 472, 493], "div": [2, 19, 21, 23, 439], "caption": [2, 19, 21, 23, 254, 394, 439], "tbodi": [2, 19, 21], "thead": [2, 19, 21], "tr": [2, 19, 21], "th": [2, 8, 19, 21, 23, 130, 143, 145, 165, 193, 302, 328, 342, 434, 480, 489, 491, 496, 502], "td": [2, 19, 21, 79, 112], "span": [2, 19, 21, 323, 350], "footer": [2, 19, 21], "link": [2, 19, 21, 23, 153, 193, 209, 279, 280, 283, 286, 290, 292, 296, 297, 298, 299, 301, 302, 304, 313, 323, 326, 327, 328, 329, 336, 341, 346, 354, 426, 434, 439, 468, 471, 474, 476, 484, 489, 495, 498], "encode64": [2, 19, 21, 23], "writestandardreporttempl": [2, 19, 21], "newreportutil": [2, 19, 439], "insertblueprintcont": [2, 19, 22], "insertgeneralreportcont": [2, 19, 22], "comprehensivebolcont": [2, 19, 22], "insertdesigncont": [2, 19, 22], "insertblockdesignreport": [2, 19, 22], "insertcoredesignreport": [2, 19, 22], "insertendoflifecont": [2, 19, 22], "insertblockdiagram": [2, 19, 22], "insertmetat": [2, 19, 22], "insertsettingsdata": [2, 19, 22], "getpindesignt": [2, 19, 22], "insertareafractionsreport": [2, 19, 22], "createdimensionreport": [2, 19, 22], "insertcoreandassemblymap": [2, 19, 22], "newreport": [2, 19, 22, 439, 472], "reportcont": [2, 19, 22, 23, 254, 273, 435], "reportnod": [2, 19, 23], "timeseri": [2, 19, 23, 27, 254, 435], "reportstag": [2, 19, 23, 254, 273, 439], "reportinterfac": [2, 19, 25, 44, 434], "reportingutil": [2, 19], "writewelcomehead": [2, 19, 25], "getinterfacestacksummari": [2, 19, 25], "writetightcouplingconvergencesummari": [2, 19, 25], "writeassemblymasssummari": [2, 19, 25], "writecyclesummari": [2, 19, 25], "setneutronbalancesreport": [2, 19, 25], "summarizepindesign": [2, 19, 25], "summarizepowerpeak": [2, 19, 25], "summarizepow": [2, 19, 25], "makecoredesignreport": [2, 19, 25], "makeblockdesignreport": [2, 19, 25], "makecoreandassemblymap": [2, 19, 25], "test_historytrack": [2, 30], "runtutorialnotebook": [2, 30, 31], "testhistorytrack": [2, 30, 31], "testhistorytrackernomodel": [2, 30, 31], "test_memoryprofil": [2, 30], "testmemoryprofil": [2, 30, 32], "klasscountertest": [2, 30, 32], "test_snapshot": [2, 30], "mockreactorparam": [2, 30, 33, 202, 239, 241, 242, 265, 266], "mockreactor": [2, 30, 33, 154, 185, 186, 202, 239, 241, 242, 265, 266], "testsnapshotinterfac": [2, 30, 33], "dumper": [2, 34, 41, 42, 283], "visfiledump": [2, 34, 35, 41, 42], "visfileentrypoint": [2, 34, 36], "vtkmesh": [2, 34, 38, 40], "createreactorblockmesh": [2, 34, 40], "createreactorassemmesh": [2, 34, 40], "createblockmesh": [2, 34, 40], "createassemmesh": [2, 34, 40], "vtk": [2, 34, 40, 470, 471, 480, 505], "limit": [2, 3, 5, 34, 101, 145, 209, 216, 240, 247, 273, 279, 280, 303, 328, 329, 396, 427, 436, 440, 469, 471, 475, 480, 484, 488, 489, 490, 493, 494, 496, 497, 502, 503], "vtkdumper": [2, 34, 41], "xdmf": [2, 34, 39, 470, 471, 505], "xdmfdumper": [2, 34, 42], "tracker": [2, 31, 75, 406, 469], "add": [2, 4, 18, 19, 22, 23, 24, 40, 43, 44, 52, 53, 55, 63, 75, 101, 141, 143, 145, 161, 163, 166, 193, 196, 197, 210, 233, 240, 242, 243, 244, 245, 254, 273, 274, 275, 276, 279, 296, 302, 305, 306, 312, 314, 327, 330, 332, 333, 334, 336, 340, 349, 350, 354, 361, 373, 386, 387, 389, 403, 404, 406, 427, 431, 432, 433, 434, 437, 439, 440, 441, 455, 465, 470, 471, 472, 475, 478, 480, 483, 485, 490, 493, 496, 497, 505], "eol": [2, 29, 75, 193, 197, 208, 273, 434, 439, 478, 497], "track": [2, 3, 4, 6, 18, 41, 42, 44, 143, 153, 157, 209, 233, 240, 254, 275, 279, 302, 306, 332, 336, 360, 361, 384, 396, 427, 431, 471, 472, 474, 475, 493, 494, 497], "adddetailassembliesbol": [2, 16], "addallfuelassem": [2, 16], "adddetailassemsbyassemnum": [2, 16], "gettrackedparam": [2, 16], "adddetailassembli": [2, 16], "getdetailassembli": [2, 16], "getdetailblock": [2, 16], "filtertimeindic": [2, 16], "writeassemhistori": [2, 16], "preloadblockhistoryv": [2, 16], "unloadblockhistoryv": [2, 16], "getblockhistoryv": [2, 16], "gettimestep": [2, 16], "cleanarmifil": [2, 17], "cleanlastcyclefil": [2, 17], "displaymemoryusag": [2, 18], "checkforduplicateobjectsonarmimodel": [2, 18], "getreferr": [2, 18], "countobject": [2, 18], "minprocessmemoryinmb": [2, 18, 491], "maxprocessmemoryinmb": [2, 18, 491], "printusag": [2, 18], "activatedefaultsnapshot": [2, 29], "respons": [3, 8, 44, 52, 141, 247, 273, 281, 285, 297, 299, 334, 336, 475, 478, 480, 494], "disk": [3, 44, 155, 193, 204, 479], "progress": [3, 8, 204, 434, 469, 474, 501], "period": [3, 74, 88, 143, 193, 274, 284, 320, 341, 440, 455, 463, 484, 489, 491, 496], "primari": [3, 5, 6, 57, 75, 141, 172, 193, 194, 273, 274, 304, 319, 336, 360, 361, 434, 436, 437, 440, 478, 480, 483, 488, 491, 493, 494, 497, 501], "output": [3, 4, 5, 17, 18, 41, 43, 44, 58, 62, 63, 65, 75, 163, 165, 193, 204, 209, 240, 244, 245, 266, 279, 284, 302, 305, 306, 318, 325, 328, 337, 352, 353, 361, 371, 373, 384, 392, 393, 394, 399, 401, 412, 417, 427, 431, 434, 438, 439, 469, 471, 472, 476, 479, 483, 485, 487, 492, 496, 497], "follow": [3, 4, 8, 16, 29, 142, 153, 155, 190, 192, 193, 202, 203, 209, 216, 233, 235, 240, 273, 299, 302, 305, 312, 318, 319, 323, 326, 334, 336, 352, 368, 372, 399, 400, 403, 405, 427, 431, 432, 434, 436, 437, 439, 440, 441, 469, 470, 475, 476, 478, 479, 480, 482, 484, 485, 487, 493, 494, 496, 497, 498, 499, 502, 503, 505], "analysi": [3, 5, 16, 18, 29, 44, 52, 76, 155, 166, 192, 193, 194, 202, 204, 216, 225, 233, 244, 245, 273, 349, 388, 401, 406, 434, 436, 439, 448, 465, 468, 475, 476, 478, 480, 483, 484, 485, 493, 495, 496, 497, 498], "restart": [3, 5, 13, 17, 197, 208, 209, 240, 285, 387, 389, 434, 472, 476, 495, 497, 499], "select": [3, 5, 34, 75, 155, 210, 228, 229, 233, 266, 273, 285, 333, 360, 387, 399, 400, 404, 456, 469, 478, 482, 494, 497], "relat": [3, 5, 13, 30, 41, 43, 47, 52, 57, 74, 136, 143, 159, 180, 189, 202, 217, 220, 228, 234, 243, 255, 263, 271, 276, 279, 302, 318, 330, 332, 333, 334, 363, 364, 365, 367, 389, 400, 403, 436, 471, 475, 480, 483, 488, 489, 496, 503], "associ": [3, 5, 14, 23, 41, 44, 46, 60, 136, 141, 143, 154, 196, 202, 226, 233, 276, 281, 302, 321, 327, 328, 330, 332, 333, 334, 336, 352, 367, 387, 434, 436, 463, 480, 488, 493, 499, 500, 501], "repeat": [3, 157, 164, 208, 209, 214, 273, 305, 306, 326, 328, 336, 390, 400, 404, 427, 435, 439, 469, 471, 476, 496, 497, 502], "yourself": [3, 86, 142, 404, 440], "dry": [3, 5, 77, 493], "practic": [3, 5, 86, 152, 196, 273, 299, 312, 333, 334, 396, 433, 435, 437, 441, 469, 480, 496], "share": [3, 29, 159, 193, 194, 204, 233, 275, 310, 330, 334, 360, 372, 388, 437, 475, 476, 484, 485, 493, 497], "major": [3, 193, 202, 280, 328, 330, 406, 434, 437, 439, 441, 469, 475, 476], "you": [3, 5, 7, 16, 17, 18, 29, 36, 44, 46, 52, 53, 55, 63, 67, 75, 86, 99, 101, 132, 142, 143, 144, 145, 152, 153, 155, 159, 162, 163, 168, 180, 187, 189, 193, 196, 202, 204, 209, 228, 229, 235, 240, 244, 245, 273, 275, 276, 279, 284, 286, 290, 296, 299, 302, 303, 326, 327, 334, 336, 350, 361, 367, 381, 387, 388, 394, 398, 403, 404, 405, 406, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 462, 463, 464, 467, 469, 470, 478, 479, 480, 482, 483, 484, 485, 486, 492, 493, 494, 496, 497, 498, 499, 505], "1": [3, 8, 12, 13, 18, 23, 31, 40, 46, 51, 53, 62, 74, 75, 77, 78, 79, 86, 87, 90, 92, 93, 96, 101, 102, 105, 107, 109, 110, 113, 117, 122, 128, 129, 130, 132, 133, 134, 136, 138, 139, 141, 143, 145, 149, 153, 156, 157, 159, 162, 163, 164, 165, 169, 172, 174, 176, 181, 186, 189, 193, 196, 201, 203, 209, 210, 225, 226, 228, 229, 231, 235, 240, 242, 247, 252, 273, 275, 279, 284, 286, 288, 291, 292, 294, 297, 298, 299, 301, 302, 304, 305, 306, 310, 312, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 333, 336, 337, 339, 340, 341, 342, 349, 354, 356, 357, 361, 367, 368, 380, 386, 387, 388, 389, 391, 394, 396, 398, 399, 400, 404, 405, 406, 408, 414, 426, 427, 434, 438, 439, 440, 441, 447, 448, 449, 455, 457, 458, 459, 462, 463, 465, 469, 473, 475, 476, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 493, 494, 496, 497, 502, 503], "origin": [3, 4, 5, 36, 42, 44, 52, 75, 141, 142, 144, 149, 155, 179, 180, 191, 193, 194, 226, 228, 238, 240, 257, 276, 279, 284, 296, 302, 304, 306, 312, 317, 318, 319, 323, 326, 327, 336, 354, 368, 370, 387, 388, 392, 398, 437, 441, 463, 469, 472, 476, 480, 484, 485, 489, 490, 493, 496, 499], "were": [3, 4, 5, 52, 74, 141, 155, 194, 195, 206, 209, 233, 273, 275, 276, 279, 299, 302, 310, 318, 319, 330, 334, 336, 373, 434, 439, 440, 469, 471, 472, 475, 478, 480, 485, 497, 499, 501], "sql": [3, 75], "2": [3, 4, 8, 12, 18, 23, 31, 51, 53, 74, 75, 80, 81, 87, 89, 90, 92, 93, 96, 101, 105, 107, 109, 110, 120, 122, 130, 132, 133, 134, 136, 141, 142, 143, 144, 145, 153, 157, 161, 162, 165, 168, 169, 177, 189, 190, 196, 201, 203, 209, 210, 225, 226, 228, 229, 231, 235, 238, 240, 279, 284, 292, 296, 297, 298, 299, 302, 305, 306, 310, 312, 319, 320, 321, 323, 326, 327, 328, 329, 330, 333, 336, 337, 339, 340, 341, 342, 346, 349, 355, 356, 381, 387, 388, 391, 398, 399, 400, 405, 406, 408, 414, 423, 426, 427, 429, 434, 439, 440, 447, 449, 455, 456, 457, 459, 460, 462, 464, 465, 469, 473, 475, 476, 478, 481, 482, 483, 484, 485, 488, 489, 490, 491, 493, 494, 496, 497, 499, 502], "storag": [3, 6, 20, 273, 327, 330, 406, 497], "wa": [3, 4, 5, 6, 34, 74, 75, 77, 89, 101, 141, 145, 149, 155, 156, 159, 174, 176, 180, 181, 186, 193, 196, 209, 210, 214, 226, 247, 273, 279, 280, 286, 299, 302, 305, 319, 326, 327, 328, 336, 354, 367, 368, 373, 382, 389, 400, 403, 427, 429, 439, 440, 463, 469, 471, 472, 475, 476, 478, 480, 483, 484, 485, 488, 493, 496, 497, 499], "hdf5": [3, 4, 5, 9, 31, 42, 74, 333, 396, 471, 480, 483, 499], "requir": [3, 17, 28, 29, 31, 34, 36, 42, 46, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 101, 141, 144, 145, 153, 160, 189, 193, 201, 204, 209, 210, 214, 228, 229, 230, 233, 240, 247, 273, 274, 275, 279, 281, 283, 284, 285, 290, 292, 298, 302, 303, 307, 310, 319, 321, 322, 328, 330, 333, 336, 337, 344, 349, 366, 367, 371, 372, 378, 381, 386, 393, 394, 398, 401, 427, 431, 432, 433, 437, 439, 440, 465, 468, 470, 471, 472, 480, 481, 482, 484, 485, 488, 491, 493, 494, 495, 496, 497, 504, 505], "less": [3, 46, 101, 145, 153, 156, 157, 193, 210, 298, 299, 305, 320, 325, 336, 389, 399, 406, 427, 439, 440, 471, 472, 480, 483, 496, 497], "extern": [3, 75, 77, 159, 165, 193, 204, 208, 228, 229, 240, 244, 245, 273, 336, 391, 400, 434, 436, 440, 468, 469, 472, 475, 480, 489, 493, 496, 497, 500], "infrastructur": [3, 273, 435, 469], "howev": [3, 5, 7, 8, 44, 46, 75, 142, 184, 228, 279, 285, 296, 302, 319, 325, 330, 333, 336, 340, 381, 396, 436, 438, 439, 440, 475, 478, 480, 484, 493, 494, 496], "did": [3, 4, 299, 302, 327, 427, 471, 485], "ghost": 3, "could": [3, 4, 5, 34, 44, 46, 52, 53, 75, 101, 142, 150, 152, 153, 184, 187, 190, 193, 202, 226, 229, 233, 240, 247, 279, 280, 285, 299, 305, 329, 330, 333, 336, 367, 387, 398, 399, 400, 401, 403, 404, 427, 439, 469, 472, 476, 478, 480, 483, 485, 488, 489, 493, 496, 499], "long": [3, 5, 29, 36, 63, 67, 101, 159, 163, 193, 209, 273, 302, 387, 388, 389, 432, 439, 441, 469, 475, 480], "dimens": [3, 4, 5, 22, 25, 46, 53, 75, 89, 94, 101, 157, 193, 225, 228, 275, 279, 280, 283, 284, 290, 296, 297, 299, 301, 302, 310, 312, 323, 328, 333, 341, 378, 388, 434, 459, 468, 471, 472, 476, 478, 484, 489, 493, 495, 497, 498, 503], "consist": [3, 44, 101, 141, 145, 149, 155, 156, 159, 161, 163, 166, 174, 189, 202, 204, 228, 247, 275, 279, 285, 302, 305, 312, 325, 336, 340, 342, 372, 388, 427, 437, 440, 468, 469, 471, 472, 475, 476, 480, 484, 489, 493, 496, 497], "inconveni": 3, "prone": [3, 303, 319, 320, 334, 469], "kept": [3, 101, 276, 319, 360], "schema": [3, 229, 273, 290, 360, 366, 367, 370], "permit": [3, 5, 8, 275, 276, 302, 396, 471], "entir": [3, 5, 75, 101, 156, 193, 228, 273, 276, 279, 281, 284, 302, 304, 320, 336, 361, 392, 403, 408, 427, 440, 441, 449, 475, 476, 484, 485, 491, 496, 499], "written": [3, 4, 5, 6, 13, 16, 41, 42, 44, 52, 55, 155, 156, 160, 162, 164, 165, 167, 168, 169, 173, 179, 180, 201, 327, 333, 361, 404, 434, 439, 440, 441, 469, 471, 472, 475, 476, 478, 485, 494, 496, 497], "recov": [3, 8, 62, 312, 499], "just": [3, 5, 7, 8, 16, 18, 30, 42, 43, 46, 75, 76, 101, 110, 112, 141, 142, 144, 152, 153, 155, 187, 194, 197, 206, 209, 229, 240, 245, 273, 275, 279, 280, 284, 290, 296, 299, 302, 312, 318, 325, 327, 328, 330, 336, 347, 350, 352, 354, 361, 367, 386, 387, 394, 398, 400, 404, 419, 425, 427, 432, 436, 437, 439, 440, 441, 458, 469, 472, 478, 480, 482, 483, 484, 485, 493, 494, 496, 497, 498, 501], "improv": [3, 41, 44, 75, 152, 273, 279, 319, 342, 471, 472, 473, 493, 502], "strategi": [3, 42, 276], "larg": [3, 75, 82, 210, 226, 229, 273, 302, 303, 336, 346, 352, 361, 372, 387, 393, 395, 398, 404, 434, 437, 440, 469, 471, 475, 480, 484, 485, 488, 493, 498], "attribut": [3, 4, 5, 8, 21, 23, 46, 52, 63, 75, 101, 141, 143, 145, 152, 157, 159, 165, 189, 190, 191, 228, 229, 233, 240, 245, 252, 258, 273, 274, 276, 280, 281, 282, 283, 284, 285, 286, 302, 306, 317, 318, 321, 330, 332, 333, 334, 336, 345, 366, 373, 403, 405, 419, 427, 432, 434, 437, 440, 471, 472, 474, 478, 479, 480, 493, 499], "special": [3, 4, 5, 8, 29, 43, 76, 94, 101, 152, 153, 156, 193, 209, 228, 229, 262, 273, 283, 298, 302, 330, 333, 336, 350, 381, 389, 403, 427, 431, 434, 439, 468, 471, 478, 480, 484, 493, 495, 497, 499], "string": [3, 5, 7, 23, 30, 36, 53, 63, 67, 75, 76, 145, 156, 162, 163, 167, 168, 169, 184, 190, 194, 201, 204, 209, 229, 244, 245, 247, 254, 273, 275, 279, 281, 282, 283, 284, 285, 286, 291, 296, 299, 302, 312, 319, 320, 325, 326, 330, 333, 336, 345, 350, 361, 366, 367, 368, 370, 372, 384, 387, 389, 391, 394, 399, 400, 402, 404, 405, 427, 437, 440, 441, 471, 475, 484, 488, 489, 493, 496, 497, 499], "symbol": [3, 101, 142, 143, 144, 145, 391, 476], "c00n00": [3, 5, 478], "attr": [3, 4, 5, 21, 299, 302, 333, 334, 403], "5_linkeddim": 3, "support": [3, 5, 8, 34, 40, 42, 44, 73, 75, 76, 83, 142, 145, 152, 153, 155, 193, 194, 195, 196, 228, 233, 244, 273, 279, 286, 297, 298, 301, 306, 312, 323, 330, 333, 336, 337, 341, 350, 384, 388, 396, 399, 427, 434, 440, 469, 471, 472, 475, 476, 480, 485, 496, 497, 499, 502, 503], "copi": [3, 5, 29, 44, 75, 101, 141, 161, 163, 166, 193, 204, 217, 229, 231, 235, 240, 257, 266, 284, 302, 318, 327, 336, 349, 361, 370, 387, 392, 399, 401, 403, 412, 431, 440, 469, 471, 472, 475, 483, 484, 485, 493, 497], "node": [3, 5, 6, 8, 13, 16, 17, 18, 23, 24, 29, 41, 57, 74, 75, 141, 154, 165, 179, 190, 193, 194, 197, 209, 226, 240, 242, 247, 250, 275, 283, 285, 302, 336, 368, 381, 386, 387, 390, 393, 394, 404, 406, 434, 437, 439, 468, 478, 480, 489, 496, 497, 499, 501, 502, 504], "dataset": [3, 4, 5, 42, 179, 499], "anoth": [3, 5, 29, 40, 44, 52, 53, 75, 130, 134, 150, 153, 173, 184, 191, 193, 196, 209, 229, 240, 242, 273, 296, 299, 302, 303, 305, 306, 318, 327, 328, 333, 336, 352, 387, 400, 406, 416, 427, 437, 439, 440, 441, 465, 469, 470, 475, 476, 483, 490, 493, 494, 496, 497, 503, 505], "refer": [3, 4, 5, 23, 44, 76, 77, 78, 91, 92, 93, 95, 96, 99, 101, 109, 113, 130, 133, 134, 136, 139, 141, 142, 143, 144, 145, 156, 164, 184, 209, 229, 238, 273, 275, 279, 284, 299, 302, 304, 321, 336, 340, 361, 372, 387, 404, 427, 431, 434, 436, 437, 439, 442, 467, 470, 472, 475, 476, 484, 486, 489, 491, 493, 496, 497, 499, 503, 505], "maintain": [3, 101, 135, 144, 145, 159, 193, 275, 302, 312, 334, 448, 469, 470, 471, 476, 493, 505], "previou": [3, 5, 17, 75, 165, 177, 192, 193, 197, 209, 210, 240, 273, 279, 302, 352, 355, 367, 387, 404, 427, 434, 471, 476, 480, 485, 489, 493, 494, 496, 497, 502], "old": [3, 4, 5, 74, 156, 209, 240, 273, 280, 286, 299, 302, 305, 333, 336, 337, 352, 353, 355, 357, 359, 360, 367, 392, 440, 469, 471, 472, 476, 496, 499, 502], "cannot": [3, 4, 75, 76, 101, 141, 145, 192, 228, 229, 296, 299, 302, 303, 330, 331, 333, 334, 341, 368, 372, 387, 394, 400, 404, 405, 476, 478, 480, 483, 493, 496], "compress": [3, 476], "locat": [3, 5, 8, 14, 36, 40, 44, 52, 75, 204, 209, 210, 214, 273, 274, 275, 276, 279, 284, 289, 302, 304, 312, 320, 321, 322, 323, 325, 326, 328, 329, 330, 333, 336, 337, 339, 349, 357, 361, 372, 388, 395, 427, 434, 456, 470, 471, 472, 475, 476, 478, 483, 485, 488, 489, 491, 493, 494, 496, 497, 499, 505], "allow": [3, 4, 5, 6, 7, 18, 36, 42, 44, 52, 53, 57, 63, 67, 75, 76, 101, 141, 142, 149, 152, 153, 155, 157, 163, 190, 193, 196, 204, 208, 209, 210, 233, 240, 272, 273, 276, 279, 280, 283, 285, 291, 296, 299, 302, 305, 307, 318, 319, 327, 330, 332, 333, 336, 350, 360, 366, 367, 368, 387, 388, 394, 396, 400, 401, 403, 432, 433, 434, 436, 439, 440, 441, 448, 456, 469, 471, 472, 475, 476, 483, 484, 485, 493, 494, 496, 497, 502], "multiindex": 3, "4": [3, 5, 8, 18, 31, 51, 53, 74, 75, 77, 78, 79, 80, 81, 87, 105, 108, 109, 122, 133, 134, 136, 142, 143, 145, 149, 153, 156, 165, 174, 203, 209, 210, 225, 226, 229, 231, 279, 284, 292, 305, 306, 319, 320, 323, 328, 333, 340, 341, 342, 387, 399, 404, 414, 423, 426, 433, 437, 447, 449, 455, 456, 458, 463, 465, 469, 476, 478, 481, 482, 483, 484, 485, 493, 494, 496, 497, 502, 503], "includ": [3, 5, 23, 41, 44, 53, 58, 75, 76, 105, 134, 142, 143, 153, 155, 159, 165, 172, 189, 193, 202, 205, 209, 210, 225, 228, 229, 233, 240, 245, 252, 254, 273, 279, 284, 285, 299, 302, 306, 318, 319, 326, 328, 330, 331, 334, 336, 342, 347, 352, 364, 371, 387, 391, 396, 403, 427, 431, 433, 434, 436, 440, 441, 448, 462, 465, 468, 469, 471, 472, 476, 478, 480, 484, 487, 489, 491, 493, 495, 496, 497, 504], "compos": [3, 4, 20, 52, 320, 330, 336], "multipl": [3, 5, 23, 25, 44, 46, 47, 55, 58, 69, 74, 88, 141, 153, 165, 193, 196, 204, 228, 229, 273, 279, 283, 289, 299, 302, 304, 305, 306, 312, 318, 321, 327, 330, 336, 340, 349, 360, 384, 387, 400, 423, 437, 439, 440, 441, 469, 472, 476, 478, 480, 483, 484, 488, 489, 490, 491, 493, 497, 498], "have": [3, 4, 5, 6, 8, 11, 12, 13, 14, 16, 23, 27, 28, 30, 31, 32, 33, 38, 39, 41, 42, 43, 44, 46, 50, 51, 52, 55, 56, 71, 72, 73, 74, 75, 76, 86, 101, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 141, 142, 145, 147, 148, 149, 150, 151, 152, 155, 156, 157, 159, 165, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 193, 197, 199, 200, 201, 202, 204, 208, 209, 210, 213, 214, 215, 222, 223, 224, 228, 229, 233, 237, 238, 242, 245, 247, 250, 251, 254, 257, 258, 259, 260, 261, 262, 266, 273, 275, 276, 279, 280, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 302, 304, 305, 306, 312, 313, 314, 315, 316, 317, 319, 320, 323, 325, 327, 328, 330, 332, 333, 334, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 357, 359, 360, 367, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 399, 400, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 462, 463, 468, 469, 470, 472, 475, 476, 478, 479, 480, 483, 484, 485, 489, 491, 493, 495, 496, 497, 498, 499, 502, 503, 505], "effici": [3, 8, 53, 142, 152, 189, 229, 302, 320, 328, 332, 336, 388, 448, 469, 472, 476, 484], "mean": [3, 4, 8, 89, 92, 93, 94, 96, 156, 204, 229, 244, 250, 275, 279, 302, 319, 326, 340, 361, 387, 400, 434, 436, 440, 441, 469, 471, 475, 476, 484, 485, 488, 489, 493, 496, 497], "extract": [3, 5, 44, 62, 204, 209, 235, 248, 289, 302, 434, 468, 483, 500], "pathlik": [3, 5, 6], "serial": [3, 4, 5, 8, 141, 156, 226, 229, 274, 275, 281, 282, 283, 302, 330, 332, 333, 366, 367, 471, 472, 475, 499], "push": [3, 5, 225, 340, 436, 440, 441, 471, 489], "aid": [3, 5, 202, 319, 330, 333, 367, 471, 489], "pack": [3, 5, 8, 274, 279, 302, 328, 330, 333, 471, 493], "unpack": [3, 5, 8, 44, 274, 302, 330, 333, 399, 471], "structur": [3, 4, 5, 46, 52, 75, 83, 89, 101, 142, 143, 145, 152, 155, 156, 157, 159, 162, 164, 167, 168, 169, 193, 195, 203, 204, 208, 209, 229, 231, 235, 240, 248, 260, 273, 274, 275, 280, 284, 285, 286, 307, 318, 319, 321, 325, 329, 330, 332, 336, 366, 388, 434, 435, 453, 455, 468, 469, 471, 472, 475, 476, 478, 480, 485, 488, 489, 491, 493, 496, 497, 500], "relationship": [3, 5, 321, 341, 475, 503], "non": [3, 4, 5, 74, 75, 101, 141, 156, 157, 190, 206, 228, 229, 240, 242, 244, 248, 250, 260, 273, 275, 279, 284, 286, 289, 296, 298, 299, 302, 305, 312, 317, 318, 320, 327, 328, 332, 333, 336, 340, 353, 370, 390, 396, 401, 402, 404, 432, 434, 472, 476, 483, 489, 493, 494, 497, 503], "doc": [3, 5, 18, 57, 89, 229, 274, 283, 302, 394, 396, 405, 431, 434, 436, 441, 454, 472, 478, 480, 485, 494], "w": [3, 5, 9, 77, 80, 87, 89, 90, 92, 93, 96, 98, 101, 109, 110, 128, 129, 130, 133, 134, 136, 139, 143, 145, 156, 193, 225, 235, 290, 292, 326, 341, 342, 346, 356, 427, 469, 476, 478, 482, 483, 488, 489, 491], "compil": [3, 5, 280, 332, 334, 431], "d": [3, 5, 16, 40, 76, 90, 136, 139, 143, 152, 153, 154, 157, 165, 209, 210, 273, 274, 275, 279, 280, 283, 284, 290, 299, 302, 303, 319, 321, 322, 323, 326, 327, 328, 329, 336, 337, 338, 341, 342, 346, 350, 426, 427, 429, 432, 434, 437, 440, 448, 449, 456, 457, 459, 469, 470, 475, 476, 478, 480, 484, 489, 493, 494, 496, 505], "n": [3, 5, 73, 75, 80, 87, 89, 90, 110, 122, 132, 133, 143, 145, 153, 156, 161, 165, 166, 168, 189, 193, 201, 225, 226, 240, 244, 245, 279, 280, 288, 290, 291, 292, 294, 297, 298, 299, 301, 302, 306, 318, 322, 323, 326, 328, 329, 333, 336, 341, 342, 346, 356, 381, 387, 399, 404, 426, 433, 440, 453, 454, 460, 461, 465, 469, 471, 476, 478, 482, 483, 484, 489, 491, 493, 497, 499], "try": [3, 5, 101, 159, 189, 209, 240, 275, 276, 279, 285, 290, 320, 330, 350, 361, 372, 381, 400, 403, 405, 411, 434, 437, 440, 462, 469, 475, 478, 480, 482, 493], "local": [3, 5, 12, 69, 74, 204, 240, 279, 321, 327, 328, 350, 437, 471, 472, 480, 483, 489], "git": [3, 5, 431, 440, 441, 469, 470, 472, 480, 505], "commit": [3, 5, 12, 431, 433, 435, 440, 480], "sure": [3, 5, 55, 63, 122, 149, 155, 172, 180, 196, 199, 214, 258, 273, 279, 289, 290, 292, 294, 302, 330, 334, 340, 341, 342, 343, 345, 346, 349, 359, 370, 373, 381, 382, 383, 396, 408, 412, 414, 420, 431, 436, 439, 440, 441, 469, 472, 480, 484, 485, 493, 494, 496], "doesn": [3, 5, 17, 44, 52, 74, 90, 91, 189, 190, 191, 194, 244, 279, 280, 299, 302, 305, 330, 332, 346, 372, 399, 403, 412, 431, 436, 441, 480, 484, 485, 496], "instal": [3, 5, 381, 431, 433, 438, 439, 441, 469, 471, 479, 480, 492], "Or": [3, 5, 350, 433, 441, 470, 496, 505], "simpli": [3, 4, 5, 18, 75, 141, 144, 150, 159, 174, 193, 204, 209, 210, 273, 302, 328, 330, 340, 367, 434, 437, 469, 475, 478, 484, 485, 493, 494, 496], "insid": [3, 5, 18, 48, 209, 216, 229, 273, 279, 296, 297, 302, 305, 327, 328, 386, 388, 424, 426, 468, 480, 484, 489, 493, 500], "repo": [3, 5, 101, 433, 440, 441, 480], "hash": [3, 5, 12, 273, 318, 387, 441, 472, 478], "unknown": [3, 5, 142, 143, 333], "completedsuccessfulli": [3, 5], "cleanup": [3, 5, 17, 74, 145, 302, 472], "convers": [3, 4, 5, 50, 101, 153, 157, 162, 190, 202, 240, 285, 302, 303, 305, 306, 307, 313, 317, 318, 320, 336, 429, 446, 450, 467, 471, 472, 481, 486, 489, 491, 497], "keeptimestep": [3, 5], "tupl": [3, 4, 5, 6, 8, 16, 18, 46, 53, 75, 80, 87, 101, 109, 134, 136, 144, 152, 204, 209, 273, 275, 279, 302, 312, 320, 321, 322, 323, 325, 326, 327, 328, 329, 333, 336, 367, 368, 391, 399, 400, 404, 427, 437, 440, 489, 490, 497, 499], "discard": [3, 5, 191, 228, 305, 436, 472], "except": [3, 5, 74, 141, 145, 149, 156, 165, 168, 189, 193, 273, 274, 279, 312, 319, 330, 332, 333, 367, 368, 380, 390, 392, 394, 396, 405, 410, 412, 427, 435, 441, 462, 469, 471, 475, 484], "step": [3, 4, 5, 6, 12, 16, 42, 43, 141, 162, 167, 168, 169, 193, 201, 204, 208, 240, 242, 279, 286, 290, 302, 312, 318, 321, 323, 325, 326, 328, 333, 336, 339, 387, 400, 426, 431, 434, 436, 460, 469, 470, 471, 472, 476, 478, 480, 483, 484, 488, 489, 496, 497, 500, 504, 505], "retain": [3, 5, 36, 63, 67, 75, 184, 209, 296, 302, 305, 333, 342, 368, 471, 500], "separ": [3, 5, 20, 42, 52, 76, 152, 193, 202, 229, 233, 244, 276, 302, 306, 317, 318, 319, 328, 336, 387, 393, 403, 404, 440, 469, 470, 472, 480, 484, 485, 493, 504, 505], "exot": [3, 5, 44], "analys": [3, 5, 45, 52, 189, 319, 434, 443, 446, 467, 469, 480, 484, 486, 496, 497], "each": [3, 5, 6, 8, 16, 23, 24, 29, 40, 42, 44, 52, 53, 69, 74, 75, 79, 141, 143, 144, 145, 152, 155, 156, 157, 159, 165, 169, 191, 193, 194, 196, 209, 210, 218, 226, 228, 231, 233, 235, 244, 247, 253, 269, 273, 275, 279, 281, 282, 285, 290, 296, 297, 299, 301, 302, 304, 305, 306, 307, 312, 318, 319, 321, 322, 327, 328, 330, 332, 333, 334, 336, 340, 346, 349, 361, 366, 367, 382, 387, 388, 389, 398, 400, 401, 404, 406, 427, 434, 436, 437, 439, 440, 441, 447, 448, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 493, 494, 496, 497, 499, 500, 502, 503], "someth": [3, 5, 18, 29, 30, 43, 76, 141, 150, 180, 190, 193, 279, 302, 306, 319, 325, 330, 336, 345, 361, 372, 427, 433, 434, 437, 439, 441, 475, 480, 484, 485, 493, 494], "nuanc": [3, 5, 441], "equilibrium": [3, 5, 16, 192, 195, 247, 279, 337, 374, 469, 484, 489, 491, 494, 497, 504], "cycl": [3, 5, 6, 13, 16, 17, 18, 24, 25, 29, 75, 128, 129, 130, 131, 154, 165, 192, 193, 201, 202, 205, 207, 208, 209, 211, 214, 226, 228, 233, 240, 242, 247, 250, 333, 336, 337, 360, 361, 374, 381, 386, 387, 391, 400, 404, 406, 426, 427, 434, 437, 439, 441, 456, 463, 464, 468, 469, 472, 476, 478, 484, 485, 488, 489, 491, 493, 494, 495, 497, 499, 500, 501, 502, 504], "converg": [3, 5, 47, 75, 154, 155, 169, 173, 201, 202, 210, 240, 247, 309, 366, 374, 476, 484, 491, 495, 497, 502], "At": [3, 4, 5, 16, 29, 193, 194, 207, 273, 279, 280, 310, 340, 434, 439, 440, 473, 475, 476, 483, 499], "last": [3, 5, 6, 141, 142, 165, 190, 193, 197, 210, 240, 307, 321, 325, 389, 398, 399, 427, 437, 472, 489, 494, 496, 497], "wherea": [3, 5, 323, 328, 475, 493], "constitut": [3, 5, 273, 279, 302, 434, 436], "typic": [3, 4, 5, 17, 75, 79, 101, 143, 159, 189, 190, 208, 209, 216, 228, 229, 231, 233, 235, 240, 244, 273, 279, 285, 298, 299, 302, 304, 323, 330, 333, 360, 367, 380, 394, 434, 436, 468, 469, 475, 476, 478, 480, 484, 488, 493, 494, 497, 500], "back": [3, 5, 36, 44, 45, 52, 75, 155, 204, 210, 231, 240, 262, 266, 302, 306, 312, 318, 319, 330, 332, 333, 336, 349, 361, 367, 370, 392, 400, 401, 412, 437, 469, 471, 472, 480, 484, 493, 494, 499], "like": [3, 4, 5, 6, 8, 16, 17, 18, 25, 30, 43, 44, 46, 66, 74, 75, 76, 101, 142, 144, 150, 152, 155, 159, 190, 191, 193, 195, 196, 204, 205, 209, 228, 229, 233, 235, 240, 244, 245, 273, 275, 276, 279, 280, 283, 284, 286, 301, 302, 303, 305, 306, 318, 320, 323, 325, 326, 327, 330, 334, 336, 340, 344, 352, 357, 360, 361, 368, 387, 388, 394, 399, 400, 401, 405, 419, 427, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 455, 469, 470, 471, 472, 476, 478, 480, 482, 483, 484, 489, 493, 494, 495, 496, 499, 500, 505], "Will": [3, 5, 6, 46, 75, 99, 193, 209, 235, 247, 279, 299, 302, 306, 336, 389, 404, 406, 478, 483, 497], "interpos": [3, 5], "h5": [3, 4, 5, 7, 12, 23, 145, 342, 478, 480, 487, 496, 499], "extens": [3, 5, 23, 40, 42, 273, 275, 306, 389, 396, 404, 406, 471, 472, 475, 489, 497], "guarante": [3, 5, 8, 233, 323, 392, 437, 489], "usabl": [3, 5, 419, 499], "vastli": [3, 5], "futur": [3, 4, 5, 16, 41, 44, 46, 75, 76, 195, 229, 273, 275, 279, 280, 284, 286, 319, 320, 332, 336, 342, 396, 427, 475, 485, 493, 496], "primarili": [3, 5, 101, 157, 209, 469], "replac": [3, 5, 8, 75, 76, 209, 245, 273, 279, 286, 299, 302, 320, 327, 333, 336, 337, 398, 427, 465, 471, 472, 476, 484, 493], "csstring": [3, 5], "geomstr": [3, 5, 320], "bpstring": [3, 5], "goal": [3, 5, 320, 346, 400, 440, 469, 474, 478], "ani": [3, 4, 5, 6, 8, 13, 16, 17, 18, 19, 24, 29, 46, 52, 55, 59, 62, 73, 74, 75, 76, 79, 91, 101, 141, 143, 145, 155, 156, 168, 189, 190, 193, 194, 201, 208, 209, 210, 214, 225, 226, 228, 229, 233, 235, 240, 245, 252, 272, 273, 275, 279, 285, 286, 292, 296, 298, 299, 301, 302, 304, 319, 321, 327, 328, 330, 332, 333, 334, 336, 337, 340, 341, 345, 346, 349, 350, 360, 361, 364, 372, 373, 378, 381, 386, 387, 388, 392, 394, 398, 404, 406, 419, 427, 431, 433, 434, 436, 437, 439, 440, 441, 464, 465, 469, 470, 471, 472, 475, 476, 478, 480, 481, 482, 484, 485, 489, 491, 493, 494, 497, 499, 500, 502, 505], "particular": [3, 5, 20, 29, 43, 44, 75, 76, 86, 113, 144, 152, 153, 191, 193, 194, 204, 209, 225, 226, 228, 229, 279, 285, 296, 302, 327, 330, 336, 349, 364, 367, 433, 441, 470, 475, 476, 478, 482, 485, 505], "veri": [3, 4, 5, 11, 13, 17, 18, 29, 75, 79, 111, 142, 153, 163, 164, 192, 196, 197, 202, 273, 279, 290, 302, 303, 318, 319, 325, 330, 333, 336, 361, 400, 427, 434, 436, 437, 440, 456, 469, 478, 480, 483, 484, 485, 494, 497], "dont": [3, 5], "easi": [3, 5, 16, 240, 275, 327, 328, 400, 427, 436, 439, 441, 469, 475, 484], "hard": [3, 5, 39, 42, 74, 75, 76, 204, 290, 319, 435, 469, 475], "geom": [3, 5, 43, 44, 53, 162, 280, 284, 286, 329, 336, 463, 471, 483, 484, 485, 493], "In": [3, 5, 6, 7, 12, 18, 36, 42, 44, 63, 67, 74, 76, 77, 85, 86, 99, 101, 107, 112, 136, 141, 150, 152, 155, 194, 196, 205, 208, 209, 216, 225, 227, 240, 245, 247, 273, 275, 279, 281, 292, 298, 302, 303, 305, 306, 318, 319, 321, 323, 326, 327, 328, 330, 332, 336, 350, 370, 380, 387, 388, 396, 400, 401, 403, 427, 433, 434, 437, 439, 440, 441, 455, 460, 463, 468, 469, 470, 474, 475, 476, 478, 480, 481, 484, 485, 493, 494, 496, 501, 502, 505], "abl": [3, 4, 5, 42, 44, 273, 334, 352, 355, 388, 414, 440, 470, 476, 493, 497, 499, 505], "reproduc": [3, 5, 117, 120, 127, 499], "confid": [3, 5], "ident": [3, 5, 55, 145, 152, 159, 168, 179, 180, 183, 257, 306, 336, 437, 469, 476], "inputdb": [3, 5], "startcycl": [3, 5, 6, 12, 496, 497], "startnod": [3, 5, 6, 12, 496, 497], "standard": [3, 5, 13, 18, 19, 23, 53, 58, 63, 75, 136, 141, 142, 143, 155, 156, 160, 168, 174, 192, 193, 194, 195, 196, 201, 204, 208, 210, 234, 240, 247, 254, 255, 273, 279, 312, 320, 336, 345, 372, 390, 396, 406, 426, 431, 432, 433, 435, 439, 469, 471, 472, 476, 478, 489, 492, 496, 497, 500, 503], "timestep": [3, 5, 6, 16, 31, 42, 193, 240, 332, 476, 497], "request": [3, 5, 6, 16, 29, 44, 74, 75, 141, 189, 193, 197, 201, 208, 226, 228, 240, 247, 250, 273, 275, 276, 285, 299, 302, 319, 325, 326, 332, 334, 336, 392, 396, 398, 412, 433, 434, 435, 440, 469, 478, 480, 494, 497], "present": [3, 5, 6, 7, 16, 75, 132, 150, 152, 157, 162, 164, 165, 167, 190, 196, 214, 238, 250, 273, 276, 302, 320, 328, 332, 334, 336, 360, 372, 387, 401, 434, 441, 475, 476, 485, 493, 497], "auxiliari": [3, 5, 136, 193, 204, 336], "statepointnam": [3, 5], "h5group": [3, 5, 8, 499], "correct": [3, 5, 20, 44, 188, 196, 199, 225, 229, 240, 242, 250, 257, 260, 279, 292, 299, 302, 312, 314, 327, 340, 341, 350, 370, 440, 470, 476, 505], "timenod": [3, 5, 6, 29, 75, 192, 193, 228, 302, 478, 497, 499, 504], "fuel": [3, 5, 16, 23, 46, 48, 51, 90, 101, 105, 122, 128, 129, 130, 131, 132, 133, 134, 139, 143, 190, 202, 205, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 228, 229, 233, 237, 240, 248, 254, 273, 274, 275, 276, 279, 280, 284, 288, 292, 294, 299, 302, 304, 305, 306, 310, 312, 313, 314, 318, 319, 321, 336, 337, 339, 340, 342, 346, 347, 404, 434, 439, 447, 448, 452, 453, 455, 463, 464, 466, 467, 468, 469, 471, 472, 476, 479, 480, 483, 486, 488, 489, 491, 492, 493, 495, 496, 497, 498, 499], "varieti": [3, 5, 53, 152, 279, 302, 328, 342, 372, 434, 439, 440, 469, 478, 481, 493, 496], "client": [3, 5, 7, 150, 152, 240, 272, 302, 320, 336], "server": [3, 5], "kind": [3, 5, 20, 101, 147, 156, 193, 197, 202, 204, 240, 275, 279, 284, 302, 319, 327, 379, 388, 441, 448, 468, 469, 475, 483, 484, 492, 495], "unnecessari": [3, 5, 53], "bp": [3, 5, 43, 44, 53, 58, 280, 286, 336, 400, 455, 463, 483, 493], "allowmiss": [3, 5, 472], "updateglobalassemnum": [3, 5, 6, 478], "updatemasterc": [3, 5], "continu": [3, 5, 46, 53, 245, 321, 327, 387, 399, 434, 436, 454, 465, 469, 472, 482, 496, 497], "valu": [3, 4, 5, 6, 8, 16, 19, 20, 21, 23, 44, 46, 47, 48, 53, 63, 74, 75, 76, 77, 86, 92, 93, 96, 101, 141, 143, 145, 150, 153, 156, 157, 159, 169, 179, 189, 190, 191, 193, 195, 196, 201, 209, 210, 217, 226, 228, 229, 231, 232, 235, 240, 242, 244, 247, 254, 258, 262, 273, 275, 279, 280, 281, 282, 283, 284, 285, 286, 290, 299, 302, 304, 306, 307, 310, 312, 318, 320, 325, 330, 331, 332, 333, 336, 342, 345, 346, 352, 357, 359, 360, 361, 366, 367, 368, 370, 371, 372, 384, 387, 391, 396, 399, 400, 402, 404, 405, 406, 414, 416, 427, 432, 437, 439, 469, 471, 472, 475, 476, 478, 480, 482, 483, 484, 488, 489, 493, 494, 496, 497, 499, 502], "neg": [3, 5, 196, 240, 275, 279, 296, 302, 304, 312, 313, 326, 333, 340, 400, 489, 496], "index": [3, 4, 5, 8, 40, 53, 142, 143, 153, 156, 165, 191, 193, 231, 235, 240, 244, 274, 275, 279, 282, 302, 304, 321, 323, 325, 326, 327, 328, 336, 387, 388, 391, 400, 404, 431, 465, 469, 471, 472, 478, 489, 496, 497, 499], "eoc": [3, 5, 16, 75, 193, 228, 434, 489, 491], "backward": [3, 5, 101, 168, 209, 280, 351, 404, 475], "arbitrari": [3, 5, 41, 75, 136, 242, 245, 276, 285, 318, 321, 336, 341, 361, 396, 402, 416, 429, 432, 434, 437, 471, 480, 493], "statepoint": [3, 5, 478], "emit": [3, 5, 57, 153, 159, 373, 476], "rather": [3, 5, 8, 16, 42, 44, 75, 101, 116, 136, 143, 144, 156, 168, 193, 204, 209, 228, 229, 240, 245, 273, 275, 285, 302, 319, 323, 326, 328, 329, 330, 334, 336, 354, 361, 367, 388, 404, 436, 455, 463, 465, 469, 471, 478, 480, 484, 485, 488, 493, 497], "crash": [3, 5, 59, 74, 150, 193, 350, 387, 435, 436, 471, 493], "undefin": [3, 5, 6, 13, 16, 17, 18, 24, 29, 55, 75, 201, 208, 214, 228, 233, 240, 252, 296, 297, 298, 319, 378, 381, 386, 475, 496], "deprecationwarn": [3, 5, 209], "unus": [3, 5, 63, 210, 247, 248, 336, 440, 471, 472, 476, 497], "argument": [3, 5, 17, 29, 36, 50, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 101, 141, 144, 196, 201, 228, 230, 244, 273, 284, 297, 299, 302, 305, 312, 325, 327, 328, 330, 333, 336, 361, 371, 372, 378, 381, 386, 394, 432, 433, 434, 436, 439, 440, 441, 469, 471, 472, 478], "basi": [3, 5, 247, 306, 327, 360, 469, 474, 476, 484], "comput": [3, 5, 51, 75, 79, 89, 94, 101, 130, 153, 155, 156, 159, 189, 193, 194, 197, 201, 226, 228, 240, 247, 253, 279, 296, 297, 298, 299, 301, 302, 304, 306, 318, 327, 328, 344, 349, 388, 400, 434, 435, 437, 440, 448, 452, 467, 469, 472, 476, 478, 480, 483, 486, 496, 497, 502], "top": [3, 5, 18, 23, 76, 195, 209, 275, 279, 282, 283, 286, 290, 302, 312, 318, 321, 322, 327, 328, 330, 333, 336, 340, 400, 436, 476, 478, 480, 488, 489, 491, 493, 494, 499, 501], "level": [3, 4, 5, 23, 29, 75, 76, 77, 145, 152, 155, 161, 163, 166, 189, 194, 209, 214, 229, 233, 235, 242, 244, 252, 273, 279, 283, 284, 286, 290, 299, 302, 304, 305, 312, 318, 321, 327, 333, 334, 336, 340, 350, 360, 361, 362, 372, 399, 434, 435, 437, 439, 440, 456, 469, 472, 474, 475, 476, 480, 481, 482, 483, 484, 489, 491, 493, 494, 496, 499], "comp": [3, 5, 6, 8, 22, 279, 499], "param": [3, 5, 6, 8, 16, 41, 75, 209, 240, 242, 275, 279, 302, 306, 318, 333, 336, 340, 345, 375, 391, 404, 437, 456, 464, 471, 472, 478, 480, 483, 488, 489, 494], "too": [3, 5, 41, 74, 163, 302, 333, 336, 340, 387, 437, 472, 475, 476, 483, 484, 496, 497], "must": [3, 5, 6, 12, 13, 16, 17, 18, 24, 29, 46, 52, 55, 63, 73, 74, 75, 141, 149, 152, 153, 156, 159, 160, 162, 190, 193, 196, 201, 208, 209, 210, 214, 228, 229, 233, 240, 245, 251, 252, 273, 275, 279, 285, 296, 299, 302, 305, 310, 318, 319, 325, 327, 328, 330, 332, 333, 334, 336, 343, 345, 353, 378, 381, 386, 391, 394, 404, 405, 427, 431, 432, 433, 434, 437, 440, 441, 448, 469, 470, 472, 475, 476, 480, 484, 487, 493, 496, 497, 502, 505], "indexloc": [3, 5, 274, 321, 325, 326, 327, 328, 434], "make": [3, 5, 13, 16, 23, 24, 46, 47, 52, 53, 55, 58, 63, 75, 76, 122, 141, 142, 149, 150, 153, 155, 156, 159, 162, 172, 180, 196, 199, 202, 204, 208, 209, 210, 214, 228, 235, 240, 244, 245, 252, 258, 272, 273, 275, 279, 280, 284, 285, 286, 289, 290, 292, 294, 299, 302, 304, 305, 306, 309, 319, 320, 321, 327, 328, 330, 332, 333, 334, 336, 340, 341, 342, 343, 345, 346, 349, 352, 359, 370, 372, 373, 381, 382, 383, 387, 388, 396, 400, 403, 404, 406, 408, 412, 414, 420, 427, 431, 432, 433, 434, 435, 437, 439, 440, 441, 449, 452, 463, 465, 466, 467, 468, 469, 471, 472, 475, 476, 478, 479, 481, 483, 484, 485, 486, 488, 492, 494, 495, 496, 497], "sens": [3, 5, 8, 47, 52, 76, 240, 273, 279, 285, 299, 332, 336, 349, 387, 437, 484], "hierarchi": [3, 5, 8, 217, 279, 302, 330, 334, 336, 427, 434, 475, 478, 493, 499], "serv": [3, 5, 24, 75, 273, 276, 320, 332, 333, 399, 471, 480], "anchor": [3, 5, 284, 286, 326, 327, 328, 339, 394, 427, 484, 485, 493], "fulli": [3, 5, 8, 76, 101, 156, 206, 210, 275, 284, 302, 328, 361, 436, 439, 469, 471, 475, 476, 481, 485, 488, 491, 493, 499, 500], "extend": [3, 5, 6, 13, 16, 17, 18, 20, 24, 29, 55, 75, 142, 195, 201, 208, 214, 228, 233, 240, 252, 273, 274, 275, 302, 318, 321, 327, 330, 333, 355, 367, 378, 381, 386, 387, 396, 399, 414, 427, 436, 454, 463, 478, 481, 496, 497], "littl": [3, 4, 5, 8, 30, 31, 55, 156, 273, 290, 386, 388, 396, 440, 455, 475, 478, 480, 485, 499], "complic": [3, 5, 8, 196, 240, 285, 296, 299, 302, 381, 388, 437, 476, 480, 484, 493, 496], "depth": [3, 5, 8, 404, 436, 437, 478], "below": [3, 4, 5, 44, 63, 142, 153, 209, 225, 273, 274, 275, 301, 302, 321, 323, 330, 334, 336, 372, 400, 423, 434, 436, 437, 439, 469, 475, 483, 484, 485, 493, 497, 499, 501], "occupi": [3, 5, 48, 210, 337, 489, 493], "easier": [3, 5, 193, 302, 326, 378, 436, 440], "figur": [3, 5, 7, 23, 29, 40, 75, 84, 122, 138, 189, 193, 210, 245, 279, 318, 319, 329, 336, 391, 394, 404, 406, 434, 438, 441, 454, 458, 459, 461, 469, 475, 478, 482, 484, 485, 493], "pair": [3, 5, 23, 46, 204, 229, 275, 279, 280, 281, 282, 283, 284, 285, 286, 299, 302, 326, 327, 328, 336, 360, 366, 372, 391, 493, 496, 497], "unawar": [3, 5], "outsid": [3, 5, 202, 209, 216, 226, 229, 245, 286, 290, 302, 305, 306, 325, 331, 332, 361, 387, 424, 469, 476, 478, 484, 489, 494], "normal": [3, 4, 5, 101, 136, 155, 159, 168, 174, 191, 193, 229, 240, 252, 273, 279, 305, 326, 336, 350, 366, 381, 391, 427, 434, 447, 465, 469, 478, 480, 484, 494, 497], "know": [3, 4, 5, 6, 91, 142, 143, 152, 155, 202, 273, 275, 279, 285, 294, 296, 302, 319, 330, 333, 334, 336, 361, 388, 391, 399, 401, 405, 439, 480, 482, 484, 496, 498, 499], "about": [3, 4, 5, 16, 18, 25, 43, 52, 74, 75, 80, 87, 101, 109, 134, 136, 141, 142, 155, 156, 159, 174, 184, 189, 193, 209, 273, 275, 279, 284, 285, 302, 305, 319, 320, 325, 330, 332, 333, 334, 361, 427, 436, 437, 439, 441, 457, 458, 459, 462, 469, 472, 478, 480, 482, 484, 485, 488, 489, 493, 494, 496, 499], "histor": [3, 5, 6, 91, 209, 299, 319, 320, 336, 350, 406, 434, 485, 493], "plu": [3, 5, 40, 145, 210, 275, 328, 334, 387, 469, 481, 493, 497], "similar": [3, 5, 16, 44, 52, 57, 76, 141, 142, 145, 153, 155, 157, 159, 163, 164, 165, 229, 275, 276, 302, 325, 327, 328, 332, 336, 372, 396, 404, 437, 469, 476, 480, 485], "omit": [3, 5, 299, 302, 387, 388, 433, 469, 476, 493], "help": [3, 6, 8, 18, 36, 52, 57, 63, 67, 74, 75, 142, 152, 273, 302, 336, 351, 368, 391, 395, 399, 400, 401, 427, 431, 432, 435, 436, 437, 440, 441, 471, 478, 480, 484, 496, 497, 499], "deriv": [3, 6, 17, 29, 40, 53, 55, 75, 136, 152, 184, 201, 204, 228, 240, 245, 272, 273, 279, 296, 302, 318, 319, 328, 334, 340, 367, 368, 378, 381, 386, 396, 400, 469, 476, 483, 489, 493], "overridden": [3, 6, 13, 16, 17, 18, 24, 29, 55, 63, 75, 101, 141, 201, 208, 214, 228, 233, 240, 252, 299, 302, 378, 381, 386, 491, 494], "life": [3, 6, 18, 22, 75, 79, 84, 149, 193, 226, 434, 439, 440, 468, 476, 478, 482, 496, 504], "underli": [3, 5, 6, 44, 143, 145, 302, 325, 327, 330, 333, 396, 441, 478, 483, 499, 503], "earli": [3, 6, 17, 436, 441, 496], "while": [3, 6, 18, 34, 36, 40, 42, 63, 67, 75, 135, 150, 155, 184, 194, 204, 225, 226, 247, 273, 279, 299, 302, 303, 305, 306, 310, 317, 318, 320, 321, 328, 334, 336, 387, 392, 396, 399, 427, 434, 436, 440, 448, 469, 470, 475, 480, 481, 484, 493, 494, 496, 497, 499, 505], "first": [3, 5, 6, 8, 12, 17, 31, 40, 42, 44, 75, 76, 101, 141, 145, 155, 156, 157, 159, 165, 190, 193, 201, 208, 209, 210, 226, 228, 229, 250, 273, 275, 279, 283, 294, 299, 302, 305, 306, 325, 326, 328, 330, 332, 336, 337, 346, 387, 398, 400, 404, 408, 427, 428, 432, 434, 435, 436, 437, 439, 440, 441, 453, 458, 465, 469, 472, 478, 479, 483, 484, 487, 493, 494, 496, 501], "receiv": [3, 6, 75, 141, 290, 334, 380, 437, 476], "tight": [3, 6, 75, 193, 201, 242, 247, 279, 366, 378, 472, 476, 492, 493, 496, 497], "coupl": [3, 6, 8, 13, 29, 40, 75, 193, 201, 216, 226, 228, 233, 240, 242, 244, 247, 273, 279, 336, 366, 434, 436, 472, 475, 476, 482, 489, 491, 492, 493, 496, 497], "_timenodeloop": [3, 6], "via": [3, 6, 73, 90, 101, 132, 159, 192, 240, 273, 279, 285, 299, 302, 304, 312, 434, 437, 462, 465, 469, 472, 476, 480, 484, 493], "anyth": [3, 6, 75, 153, 156, 196, 204, 209, 210, 240, 258, 279, 296, 299, 302, 332, 336, 394, 433, 441, 469, 480, 483, 493, 496], "rxswing": [3, 6, 491], "shutdown": [3, 6, 201, 274, 319, 350, 469, 478, 483, 484, 491, 496, 497], "even": [3, 4, 6, 18, 52, 74, 75, 141, 145, 165, 193, 209, 210, 252, 273, 275, 280, 296, 302, 312, 323, 326, 336, 340, 352, 354, 368, 389, 399, 404, 406, 412, 434, 436, 437, 469, 480, 484, 496], "encount": [3, 4, 5, 6, 16, 52], "reconnect": [3, 6], "pre": [3, 6, 8, 16, 52, 190, 208, 228, 229, 257, 273, 279, 318, 326, 336, 387, 427, 472, 480, 491, 493], "still": [3, 5, 6, 16, 74, 75, 101, 142, 149, 194, 204, 209, 210, 226, 229, 272, 273, 279, 280, 286, 297, 299, 302, 319, 327, 333, 336, 337, 349, 355, 382, 384, 396, 412, 433, 434, 440, 441, 448, 469, 471, 480, 485, 493, 494, 496, 497, 499], "connect": [3, 6, 40, 157, 279, 328, 476, 493], "worker": [3, 6, 18, 75, 141, 190, 193, 194, 209, 302, 381, 393, 437, 483], "reloaddbnam": [3, 6, 12, 434, 496, 497], "put": [3, 6, 101, 156, 204, 206, 228, 273, 275, 276, 279, 302, 336, 354, 394, 400, 406, 472, 480, 494, 495, 496, 497, 499], "prior": [3, 6, 75, 193, 273, 306, 372, 437, 471, 497], "mix": [3, 6, 105, 209, 225, 233, 275, 279, 302, 411, 414, 469, 480, 484, 493], "v": [3, 6, 75, 76, 97, 98, 143, 145, 155, 189, 193, 202, 209, 225, 254, 273, 279, 280, 292, 299, 302, 341, 342, 346, 400, 406, 468, 469, 472, 476, 478, 481, 484], "equival": [3, 6, 101, 105, 159, 165, 173, 179, 305, 306, 327, 399, 437, 448, 470, 476, 497, 505], "timestepnam": [3, 6, 193], "fresh": [3, 6, 193, 302, 336, 468, 469, 481, 484, 494], "preferenti": [3, 6], "doe": [3, 4, 6, 8, 11, 12, 13, 14, 18, 27, 28, 29, 31, 32, 33, 38, 39, 42, 46, 50, 51, 55, 56, 71, 72, 74, 75, 101, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 141, 145, 147, 148, 149, 150, 151, 156, 157, 161, 163, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 193, 196, 199, 200, 201, 204, 209, 210, 213, 214, 215, 222, 223, 224, 228, 229, 231, 237, 238, 240, 242, 250, 251, 252, 257, 258, 259, 260, 261, 262, 266, 273, 279, 281, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 302, 303, 305, 306, 307, 312, 313, 314, 315, 316, 317, 318, 325, 326, 327, 333, 334, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 359, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 396, 400, 403, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 433, 437, 440, 441, 456, 469, 476, 478, 480, 483, 484, 485, 489, 493, 497], "neither": [3, 6, 229, 280], "nor": [3, 6, 280, 476], "mutablesequ": [3, 6], "byloc": [3, 6], "wrapper": [3, 6, 141, 145, 177, 180, 191, 280, 320, 350, 373, 404], "around": [3, 6, 7, 44, 74, 141, 153, 191, 205, 209, 273, 279, 280, 298, 306, 323, 336, 350, 373, 427, 432, 437, 457, 468, 469, 478, 484, 485, 488, 489, 491, 493, 494, 495], "how": [3, 4, 5, 6, 7, 8, 41, 42, 48, 53, 153, 156, 157, 184, 189, 209, 210, 229, 233, 235, 245, 273, 275, 279, 283, 284, 286, 302, 305, 306, 319, 321, 325, 328, 330, 333, 334, 340, 341, 360, 361, 386, 388, 389, 404, 405, 420, 427, 435, 436, 437, 439, 448, 449, 455, 463, 468, 469, 471, 472, 475, 476, 478, 479, 480, 481, 489, 490, 492, 493, 494, 495, 496, 497, 499], "reffilenam": [3, 4], "srcfilenam": [3, 4], "exclus": [3, 4, 44, 52, 209, 229, 280, 284, 320, 328, 336, 346, 349, 472, 476, 478, 494], "toler": [3, 4, 44, 52, 75, 157, 163, 190, 400, 502], "float": [3, 4, 5, 23, 46, 75, 77, 78, 79, 81, 89, 92, 93, 94, 96, 101, 110, 113, 133, 134, 135, 136, 144, 145, 153, 156, 157, 163, 165, 173, 189, 193, 209, 210, 225, 229, 235, 240, 244, 275, 279, 282, 283, 284, 296, 299, 302, 304, 305, 310, 312, 318, 320, 322, 323, 326, 327, 328, 329, 330, 333, 336, 366, 372, 378, 387, 389, 391, 399, 400, 404, 406, 428, 429, 472, 475, 483, 499, 502], "0": [3, 4, 20, 23, 31, 44, 51, 52, 53, 75, 78, 79, 80, 81, 86, 89, 92, 93, 94, 96, 101, 105, 109, 110, 113, 121, 122, 132, 133, 134, 136, 141, 145, 149, 152, 153, 154, 156, 157, 159, 163, 164, 165, 168, 169, 189, 190, 191, 193, 201, 203, 209, 210, 225, 226, 228, 229, 231, 235, 238, 240, 242, 244, 252, 273, 275, 276, 279, 283, 284, 288, 291, 292, 294, 296, 297, 298, 299, 301, 302, 304, 305, 307, 310, 312, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 333, 336, 339, 341, 342, 354, 356, 357, 367, 372, 386, 387, 388, 389, 391, 396, 398, 399, 400, 403, 404, 405, 414, 423, 426, 427, 429, 434, 437, 439, 441, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 475, 478, 480, 481, 482, 483, 484, 485, 488, 489, 491, 493, 494, 496, 497, 499, 501, 502], "timestepcompar": [3, 4, 44, 52], "high": [3, 4, 5, 74, 84, 88, 89, 91, 189, 214, 216, 240, 273, 274, 279, 290, 319, 336, 400, 404, 456, 469, 472, 474, 476, 478, 483, 485, 488, 489, 491, 493, 499], "two": [3, 4, 8, 44, 61, 112, 141, 142, 145, 153, 157, 159, 161, 163, 166, 179, 183, 189, 190, 191, 192, 193, 201, 202, 226, 229, 230, 273, 275, 279, 281, 285, 297, 302, 305, 306, 312, 318, 320, 325, 327, 330, 331, 336, 337, 340, 372, 391, 400, 406, 434, 437, 439, 440, 465, 470, 471, 475, 476, 480, 483, 484, 487, 493, 494, 496, 502, 505], "dbname": [3, 7, 43, 44, 482], "basecas": [3, 7, 43, 53], "bookeep": [3, 7, 31, 193], "proper": [3, 7, 135, 192, 228, 275, 279, 327, 434, 440, 476, 494], "common": [3, 4, 7, 76, 134, 141, 142, 156, 204, 240, 248, 275, 285, 302, 312, 318, 319, 327, 328, 368, 372, 402, 437, 441, 442, 467, 469, 470, 475, 484, 486, 493, 494, 496, 505], "least": [3, 7, 63, 244, 247, 302, 337, 427, 431, 440, 469, 484, 493], "knowledg": [3, 4, 7, 43, 279, 302, 306, 470, 505], "probe": [3, 7, 44], "interrog": [3, 7], "map": [3, 8, 9, 150, 153, 159, 162, 165, 167, 168, 228, 240, 242, 273, 279, 280, 281, 282, 283, 284, 285, 286, 317, 318, 321, 323, 327, 328, 330, 333, 336, 337, 344, 368, 388, 394, 396, 404, 408, 434, 439, 448, 463, 469, 470, 471, 472, 478, 479, 480, 483, 485, 489, 491, 493, 495, 496, 497, 499, 505], "x": [3, 9, 34, 40, 42, 122, 157, 163, 186, 188, 189, 190, 191, 208, 209, 228, 229, 240, 247, 250, 252, 257, 258, 279, 280, 284, 285, 288, 291, 292, 294, 301, 302, 306, 321, 323, 326, 327, 328, 336, 341, 342, 346, 353, 367, 400, 404, 406, 428, 429, 440, 452, 454, 455, 456, 457, 458, 459, 464, 465, 466, 467, 471, 472, 476, 478, 482, 483, 484, 485, 486, 489, 493, 497, 500, 501], "inputdbnam": 3, "outputdbnam": 3, "outputvers": 3, "outputdb": 3, "xtview": [3, 228, 306, 468, 471], "latest": [3, 65, 149, 155, 228, 279, 302, 352, 431, 489], "pathtodb": 3, "loadcycl": 3, "loadnod": 3, "alreadi": [3, 5, 53, 57, 74, 101, 159, 189, 193, 209, 233, 244, 258, 273, 279, 280, 302, 314, 320, 333, 336, 361, 367, 439, 480, 484, 497], "vari": [3, 4, 53, 152, 247, 279, 286, 323, 330, 336, 469, 483, 493, 496, 497], "middl": [3, 45, 193, 274, 319, 326, 387, 465, 478, 483, 484], "attach": [3, 17, 29, 55, 75, 76, 193, 201, 233, 273, 305, 325, 378, 381, 386, 478, 489], "pathtodatabas": 3, "getfpmass": [3, 274, 302], "fission": [3, 82, 145, 149, 153, 157, 159, 163, 166, 174, 189, 190, 216, 226, 228, 229, 232, 233, 234, 235, 237, 238, 240, 244, 245, 248, 252, 285, 299, 302, 318, 319, 336, 404, 460, 465, 468, 469, 472, 476, 478, 482, 484, 485, 489, 491, 497], "product": [3, 41, 53, 147, 153, 166, 177, 180, 189, 190, 226, 228, 229, 232, 233, 234, 235, 237, 238, 240, 245, 248, 285, 299, 302, 328, 336, 440, 458, 459, 465, 469, 472, 476, 478, 489, 497], "12345": 3, "67": [3, 143, 145, 203, 231], "test_comparedb3": [3, 10], "testcomparedb3": [3, 10, 11], "test_database3": [3, 10], "testdatabase3": [3, 10, 12], "test_databaseinterfac": [3, 10], "getsimpledboper": [3, 10, 13], "mockinterfac": [3, 10, 13], "testdatabaseinterfac": [3, 10, 13], "testdatabasewrit": [3, 10, 13], "testdatabaseread": [3, 10, 13], "testbadnam": [3, 10, 13], "teststandardfollowon": [3, 10, 13], "test_layout": [3, 10], "testlocationpack": [3, 10, 14], "writeln": [3, 4], "adddiff": [3, 4], "addstructurediff": [3, 4], "addtimestep": [3, 4], "reportdiff": [3, 4], "ndiff": [3, 4], "h5db": [3, 5, 487], "computeancestor": [3, 8], "allsubclass": [3, 8], "assum": [4, 78, 101, 141, 160, 177, 189, 190, 225, 275, 279, 302, 304, 312, 328, 336, 340, 382, 404, 436, 437, 470, 480, 483, 484, 485, 489, 496, 497, 505], "intim": [4, 327], "h5py": [4, 74, 333, 499], "within": [4, 8, 20, 23, 52, 57, 69, 75, 101, 141, 142, 143, 145, 156, 161, 184, 186, 190, 193, 195, 201, 204, 216, 228, 229, 233, 235, 237, 273, 275, 279, 280, 281, 282, 283, 286, 290, 296, 299, 302, 304, 306, 307, 312, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 333, 336, 339, 340, 341, 349, 392, 394, 427, 428, 434, 435, 436, 439, 453, 469, 472, 473, 474, 476, 480, 484, 485, 488, 489, 493, 496, 497, 499, 502, 503], "correspond": [4, 8, 22, 142, 189, 190, 193, 209, 210, 273, 275, 279, 284, 285, 296, 301, 302, 312, 329, 330, 334, 336, 361, 368, 387, 404, 429, 434, 437, 439, 473, 475, 476, 484, 489, 491, 493, 494, 496, 499], "easili": [4, 8, 196, 240, 302, 321, 380, 387, 389, 398, 400, 440, 469, 475, 476, 483, 485], "pull": [4, 44, 209, 214, 406, 433, 435, 440, 472, 480, 483], "cross": [4, 88, 142, 145, 152, 153, 155, 157, 161, 163, 164, 166, 172, 184, 186, 188, 189, 190, 191, 202, 203, 214, 226, 228, 229, 233, 240, 244, 245, 247, 252, 257, 258, 259, 273, 279, 285, 302, 305, 336, 354, 404, 406, 427, 431, 437, 440, 448, 455, 460, 461, 469, 472, 476, 478, 484, 485, 488, 489, 490, 493, 496, 497, 501, 502], "probabl": [4, 36, 41, 44, 63, 67, 90, 142, 145, 235, 252, 273, 280, 299, 302, 332, 400, 401, 427, 441, 469, 480, 488, 498], "speak": [4, 233], "issu": [4, 18, 42, 74, 132, 153, 155, 190, 228, 229, 273, 279, 305, 319, 330, 340, 373, 396, 427, 433, 439, 440, 469, 471, 472, 475, 476, 480, 501], "aris": [4, 75, 142, 145, 273, 285], "against": [4, 36, 44, 46, 75, 122, 196, 228, 302, 319, 336, 347, 367, 372, 389, 408, 433, 469, 472], "That": [4, 5, 75, 86, 242, 279, 283, 302, 349, 350, 367, 478, 480, 484], "worri": [4, 325, 334, 437, 439, 441, 480], "especi": [4, 233, 403, 440], "temperatur": [4, 8, 76, 77, 78, 79, 80, 84, 87, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 105, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 136, 137, 138, 139, 143, 193, 208, 216, 225, 226, 228, 247, 270, 275, 279, 296, 299, 302, 303, 304, 305, 306, 311, 312, 330, 333, 336, 339, 340, 429, 434, 439, 453, 462, 468, 469, 472, 475, 476, 478, 480, 481, 483, 484, 485, 488, 489, 490, 491, 493, 497, 498, 499, 502, 503], "uniformli": [4, 285, 453, 494], "realli": [4, 28, 41, 101, 187, 191, 197, 244, 284, 286, 323, 336, 350, 436, 437, 439, 469, 485], "line": [4, 23, 36, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 134, 156, 193, 196, 202, 230, 240, 245, 273, 275, 279, 302, 303, 306, 323, 325, 326, 336, 340, 356, 361, 367, 371, 372, 387, 388, 389, 400, 403, 408, 416, 420, 423, 427, 429, 432, 437, 439, 440, 441, 455, 468, 470, 478, 480, 484, 497, 499, 501, 505], "suppos": [4, 284, 439], "volum": [4, 77, 84, 110, 132, 134, 135, 189, 225, 228, 275, 279, 283, 290, 296, 299, 301, 302, 306, 318, 329, 336, 339, 340, 347, 391, 452, 466, 467, 486, 489, 490, 491, 493], "rel": [4, 40, 44, 52, 75, 101, 156, 174, 204, 210, 284, 296, 299, 302, 303, 310, 312, 319, 329, 330, 336, 372, 400, 427, 440, 480, 485, 489, 491, 493, 497, 499, 503], "self": [4, 16, 36, 53, 63, 75, 101, 141, 152, 155, 189, 209, 228, 235, 244, 250, 252, 276, 279, 280, 283, 299, 302, 304, 306, 312, 326, 328, 333, 336, 361, 370, 394, 399, 405, 427, 432, 436, 437, 440, 483, 484, 485, 494, 497, 499], "evid": 4, "resourc": [4, 141, 330, 372, 476], "hasn": [4, 189, 258, 405], "tee": 4, "msg": [4, 345, 350, 373, 390, 427], "ignor": [4, 5, 76, 156, 163, 228, 279, 285, 296, 306, 319, 326, 360, 381, 387, 406, 493, 497], "exce": [4, 307, 380], "organ": [4, 16, 30, 195, 204, 361, 434, 437, 472, 478], "later": [4, 19, 23, 34, 36, 75, 157, 159, 165, 193, 229, 281, 349, 432, 434, 436, 439, 440, 469, 470, 480, 489, 496, 505], "keep": [4, 5, 8, 18, 41, 209, 210, 247, 254, 273, 275, 285, 299, 306, 310, 318, 334, 352, 399, 427, 433, 436, 437, 438, 440, 441, 468, 469, 484, 488, 489, 493, 494, 496], "miss": [4, 86, 229, 285, 302, 475, 478, 481, 483, 493], "incompat": 4, "weird": [4, 328], "strang": [4, 5, 8, 330, 396, 484], "smaller": [4, 23, 229, 302, 336, 346, 388, 396, 441, 480], "zero": [4, 8, 63, 74, 101, 145, 156, 157, 162, 163, 179, 189, 193, 228, 233, 240, 244, 247, 275, 276, 279, 296, 297, 298, 299, 302, 312, 336, 340, 398, 411, 440, 462, 471, 475, 478, 480, 484, 489, 493, 497], "diff": [4, 230, 441], "infinit": [4, 229, 328, 399, 457, 458, 497], "rigor": [4, 469], "manner": [4, 229, 296, 427, 434, 469, 471, 480, 502], "fine": [4, 42, 162, 285, 294, 375, 400, 484], "revisit": [4, 273, 502], "comptyp": [4, 273], "paramnam": [4, 5, 8, 16, 302, 318, 330, 332, 437], "absmean": 4, "absmax": 4, "tsname": 4, "stream": [4, 154, 155, 156, 160, 162, 165, 167, 168, 169, 235, 237, 280, 284, 337, 344, 353, 354, 355, 356, 357, 361, 368, 388, 396, 423, 427], "print": [4, 18, 25, 36, 52, 57, 63, 67, 75, 145, 162, 209, 235, 275, 280, 292, 299, 302, 350, 387, 389, 396, 404, 432, 434, 436, 437, 440, 447, 453, 478, 480, 481, 482, 483, 494, 497, 501], "exceed": [4, 75, 396, 398, 489, 490], "recover": 5, "down": [5, 8, 16, 18, 302, 330, 333, 340, 367, 406, 439, 440, 465, 472, 478, 480, 499], "bound": [5, 46, 53, 56, 152, 159, 190, 209, 210, 231, 260, 275, 296, 299, 301, 302, 304, 307, 319, 321, 322, 323, 326, 328, 329, 339, 428, 457, 458, 459, 462, 485, 497], "hierarch": [5, 8, 273, 302, 476, 493], "furthermor": [5, 52, 301, 323, 330, 440, 478], "dynam": [5, 44, 76, 98, 134, 193, 273, 302, 395, 403, 434, 497, 499], "yet": [5, 16, 190, 194, 209, 225, 229, 240, 279, 283, 302, 304, 318, 355, 387, 439, 469, 478, 488, 493, 496, 497], "undevelop": 5, "most": [5, 13, 40, 42, 46, 52, 75, 76, 101, 110, 136, 141, 152, 153, 155, 209, 217, 229, 273, 279, 296, 299, 302, 323, 325, 328, 330, 332, 334, 336, 340, 350, 361, 373, 388, 396, 431, 434, 437, 439, 440, 441, 468, 469, 471, 475, 476, 480, 484, 485, 488, 491, 493, 494, 496], "dump": [5, 29, 35, 38, 39, 41, 42, 204, 226, 229, 274, 275, 332, 336, 360, 362, 366, 367, 465, 497], "again": [5, 8, 57, 207, 273, 333, 336, 373, 427, 436, 439, 471, 484, 493, 494, 496, 499], "nitti": [5, 441], "gritti": [5, 441], "translat": [5, 273, 280, 317, 318, 328, 439, 469, 476], "flat": [5, 8, 279, 299, 305, 326, 388, 398, 404, 408, 484], "pleas": [5, 101, 275, 336, 392, 432, 433, 434, 441, 470, 505], "convent": [5, 190, 204, 279, 319, 435, 441, 469, 493], "cxxnyi": 5, "simul": [5, 6, 17, 29, 57, 75, 134, 202, 209, 226, 242, 245, 247, 274, 282, 336, 350, 360, 437, 440, 469, 475, 476, 478, 480, 484, 485, 491, 495, 496, 497, 502, 504], "ndarrai": [5, 8, 75, 168, 275, 325, 326, 327, 328, 329, 333, 400], "wouldn": [5, 41, 475], "plai": [5, 273, 334, 434, 485], "nice": [5, 80, 141, 155, 194, 202, 302, 320, 334, 387, 394, 396, 427, 434, 441, 463, 480, 493], "numpi": [5, 8, 40, 75, 156, 189, 275, 279, 292, 302, 304, 327, 330, 333, 378, 400, 440, 455, 459, 462, 472, 478, 481, 483], "arrai": [5, 8, 40, 53, 75, 156, 157, 159, 189, 275, 279, 292, 302, 304, 318, 321, 326, 327, 330, 333, 336, 378, 399, 400, 416, 472, 478, 489, 499, 502], "conform": [5, 142, 273, 283, 299, 304, 323, 440, 471, 491], "both": [5, 44, 46, 52, 55, 75, 141, 144, 150, 155, 156, 165, 190, 194, 202, 209, 275, 279, 285, 302, 305, 312, 317, 318, 319, 320, 332, 334, 336, 352, 354, 372, 394, 404, 426, 432, 436, 448, 463, 469, 472, 474, 476, 478, 480, 493, 496, 497, 503], "fit": [5, 89, 92, 93, 94, 96, 102, 134, 164, 193, 197, 229, 240, 279, 302, 323, 326, 328, 333, 336, 398, 400, 476, 494, 499], "ish": 5, "accomplish": [5, 75, 483, 499], "hand": [5, 23, 62, 155, 209, 312, 334, 361, 367, 372, 404, 431, 434, 436, 439, 469, 479, 483, 493], "known": [5, 53, 134, 142, 145, 240, 247, 273, 299, 336, 391, 408, 434, 468, 494], "offend": 5, "variou": [5, 16, 18, 22, 25, 57, 74, 75, 131, 142, 145, 152, 156, 164, 192, 193, 201, 205, 209, 240, 262, 273, 280, 282, 302, 312, 319, 333, 336, 341, 360, 388, 400, 416, 426, 432, 434, 436, 443, 444, 446, 451, 467, 469, 470, 471, 478, 480, 484, 485, 486, 492, 493, 494, 496, 497, 498, 500, 501, 505], "necessari": [5, 17, 40, 42, 44, 74, 110, 132, 141, 145, 161, 163, 165, 166, 184, 191, 250, 273, 275, 279, 283, 314, 317, 328, 330, 333, 392, 405, 427, 434, 469, 475, 476, 481, 493, 496, 497, 499], "mind": [5, 275, 334], "alwai": [5, 8, 101, 152, 155, 156, 157, 162, 164, 165, 184, 193, 210, 233, 240, 273, 279, 284, 296, 301, 302, 306, 312, 323, 326, 328, 330, 333, 388, 394, 401, 403, 404, 427, 437, 439, 440, 476, 480, 488, 493, 494, 497], "deal": [5, 8, 41, 156, 157, 196, 216, 235, 302, 399, 437, 439, 476, 484], "routin": [5, 330, 400, 434, 469, 472, 476, 494, 497], "find": [5, 8, 16, 18, 44, 52, 76, 80, 92, 93, 96, 101, 142, 145, 163, 189, 190, 209, 233, 254, 273, 275, 279, 296, 299, 302, 304, 306, 319, 330, 334, 336, 350, 360, 387, 398, 400, 404, 427, 440, 469, 470, 471, 472, 478, 480, 483, 484, 493, 497, 503, 505], "themselv": [5, 196, 273, 330, 333, 336, 439, 471, 483], "lack": [5, 439, 469, 473], "nan": [5, 275, 296], "jag": [5, 333, 472, 499], "concaten": [5, 350], "dimension": [5, 157, 228, 279, 301, 305, 306, 479, 499], "describ": [5, 8, 40, 42, 44, 63, 75, 86, 140, 145, 153, 202, 204, 209, 217, 240, 273, 275, 280, 283, 297, 302, 318, 319, 320, 325, 328, 330, 333, 368, 427, 439, 441, 469, 475, 476, 484, 493, 494, 495, 497, 498, 500, 503, 504], "shape": [5, 40, 122, 156, 275, 288, 291, 292, 294, 296, 297, 298, 299, 301, 302, 320, 340, 341, 342, 463, 468, 475, 476, 484, 485, 489, 495, 498], "offset": [5, 40, 305, 321, 322, 323, 326, 328, 329, 336, 339, 388, 389, 455, 458, 465], "them": [5, 8, 12, 16, 34, 42, 43, 44, 45, 52, 57, 75, 101, 105, 145, 152, 155, 156, 163, 191, 193, 194, 197, 228, 235, 240, 245, 247, 273, 275, 276, 279, 285, 286, 299, 302, 303, 304, 305, 306, 319, 320, 327, 328, 330, 332, 333, 336, 341, 342, 350, 367, 368, 373, 381, 382, 387, 388, 398, 401, 431, 434, 436, 437, 439, 440, 441, 468, 469, 475, 478, 480, 483, 484, 485, 490, 493, 494, 496, 497], "magic": [5, 194, 202, 273, 330, 334, 436, 478], "shouldn": [5, 252, 319], "realist": [5, 496], "scenario": [5, 202, 205, 216, 279, 284, 286, 334, 419, 434, 440, 441, 475, 493, 496], "dtype": [5, 302, 330], "diagnost": [5, 8], "invert": 5, "straight": [5, 8], "closest": [5, 209, 312, 400, 494], "represent": [5, 8, 23, 42, 75, 156, 162, 167, 169, 209, 228, 229, 258, 279, 280, 284, 302, 320, 321, 325, 326, 328, 333, 336, 388, 434, 439, 440, 468, 469, 475, 476, 485, 489, 493, 499], "homogen": [5, 103, 157, 189, 190, 206, 229, 252, 279, 302, 305, 306, 330, 340, 471, 472, 489, 493, 499], "densiti": [5, 46, 48, 51, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 120, 122, 130, 131, 133, 134, 135, 136, 138, 139, 142, 143, 145, 155, 167, 189, 193, 228, 229, 233, 235, 240, 245, 247, 252, 257, 274, 279, 280, 283, 285, 292, 296, 299, 302, 304, 310, 312, 316, 317, 318, 330, 336, 340, 341, 377, 391, 434, 448, 468, 469, 471, 472, 476, 479, 481, 484, 485, 488, 489, 490, 491, 493, 497, 499, 504], "ago": [5, 159], "No": [5, 41, 75, 77, 109, 113, 250, 252, 366, 388, 434, 440, 471, 476, 478, 483, 485], "longer": [5, 31, 45, 74, 229, 279, 285, 298, 299, 342, 406, 440, 469, 471, 472, 478, 481, 489, 496], "numberdens": [5, 142, 189, 299, 302, 391, 490], "tool": [5, 8, 14, 18, 34, 42, 52, 201, 213, 215, 240, 273, 350, 384, 402, 404, 406, 417, 420, 435, 436, 438, 468, 469, 470, 472, 475, 476, 480, 484, 499, 505], "slap": 5, "remov": [5, 16, 43, 52, 101, 193, 209, 228, 233, 235, 240, 244, 245, 258, 273, 274, 276, 279, 280, 283, 286, 296, 299, 302, 306, 310, 330, 336, 346, 349, 356, 370, 387, 401, 403, 435, 437, 463, 469, 471, 472, 475, 476, 478, 488, 489, 491, 493, 497], "better": [5, 16, 57, 75, 145, 152, 165, 193, 195, 273, 275, 319, 321, 336, 390, 394, 433, 440, 469, 471, 497], "viz": [5, 41], "view": [5, 23, 24, 306, 326, 404, 439, 470, 476, 478, 480, 494, 499, 505], "_readparam": 5, "groundwork": 8, "datbas": 8, "tree": [8, 23, 66, 195, 302, 327, 328, 334, 368, 372, 392, 431], "recurs": [8, 18, 43, 52, 69, 101, 141, 302, 327, 332, 360, 387, 403, 472], "append": [8, 23, 34, 40, 142, 143, 193, 274, 275, 302, 304, 321, 327, 387, 399, 427, 437, 453, 454, 455, 457, 458, 459, 462, 465, 475, 482, 485], "search": [8, 52, 66, 76, 155, 190, 209, 229, 275, 279, 294, 302, 304, 312, 319, 336, 395, 400, 427, 469, 491, 495, 496, 497], "a1": [8, 78, 209, 302, 336, 494], "a1b1": 8, "a1b1c1": 8, "a1b1c2": 8, "a1b2": 8, "a1b2c1": 8, "a2": [8, 78, 209, 302, 494], "aren": [8, 17, 149, 209, 229, 240, 366, 436, 484, 493], "algorithm": [8, 41, 46, 53, 206, 213, 318, 456, 469, 472, 484, 497], "travers": [8, 302, 328, 434], "region": [8, 154, 157, 162, 164, 172, 184, 189, 190, 229, 275, 286, 306, 307, 340, 404, 475, 476, 489, 491, 496, 504], "indexindata": [8, 499], "increas": [8, 242, 244, 273, 304, 307, 328, 336, 386, 396, 400, 441, 453, 469, 489, 491, 496, 497], "monoton": [8, 400, 496], "children": [8, 101, 275, 279, 286, 302, 330, 333, 342, 395, 439, 499], "parent": [8, 44, 57, 79, 101, 153, 189, 194, 204, 209, 247, 248, 276, 279, 282, 284, 290, 296, 299, 302, 321, 327, 328, 330, 334, 336, 340, 350, 384, 404, 437, 476, 478, 489], "contigu": [8, 484], "interleav": 8, "sibl": [8, 275, 276, 279, 296, 302, 493], "asid": [8, 319], "necessarili": [8, 53, 142, 155, 190, 469, 497], "child": [8, 23, 245, 284, 302, 318, 321, 434, 472, 476, 499], "zeroth": [8, 165], "serialnum": [8, 330, 332, 499], "numchildren": [8, 499], "layer": [8, 282, 319, 327, 468, 480], "reach": [8, 145, 201, 392, 398, 441, 469, 494], "desir": [8, 19, 24, 44, 90, 157, 189, 204, 228, 252, 273, 279, 284, 302, 328, 330, 332, 350, 392, 396, 398, 403, 433, 463, 469, 475, 493, 496, 497, 500], "ancestor": [8, 279, 302, 330, 334], "yield": [8, 23, 101, 157, 228, 233, 235, 238, 302, 336, 399, 472, 482, 497], "direct": [8, 58, 76, 156, 157, 179, 240, 279, 286, 301, 302, 306, 318, 321, 322, 326, 328, 333, 394, 400, 427, 429, 439, 469, 475, 489, 491, 493, 497, 499], "elemen": 8, "subsequ": [8, 165, 226, 276, 305, 332, 333, 398, 476], "form": [8, 24, 75, 134, 136, 155, 196, 201, 228, 229, 240, 245, 247, 273, 279, 283, 284, 290, 296, 302, 306, 320, 330, 334, 366, 378, 387, 429, 471, 476, 480, 483, 484, 489, 493], "lightweight": [8, 80, 240, 476], "stitch": [8, 427], "troubl": [8, 299, 480], "laid": [8, 330], "approach": [8, 18, 193, 209, 210, 273, 275, 304, 330, 336, 337, 400, 440, 469, 472, 484, 494], "reason": [8, 39, 101, 141, 142, 228, 233, 240, 276, 280, 285, 305, 319, 327, 328, 332, 367, 427, 433, 436, 437, 441, 469, 475, 476, 480, 489, 493], "bad": [8, 145, 196, 386, 440, 475], "second": [8, 74, 89, 157, 172, 191, 201, 209, 229, 240, 273, 275, 302, 325, 326, 336, 337, 400, 406, 428, 437, 440, 441, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 482, 493, 494, 497], "pretti": [8, 280, 427, 465], "unwieldi": 8, "consum": [8, 252, 285, 320, 399, 427, 469], "cursor": 8, "slice": [8, 301, 328, 400, 404], "ineffici": [8, 279, 296, 299, 302], "cl": [8, 53, 143, 145, 332, 342, 395, 483, 493], "nonsens": 8, "who": [8, 189, 193, 196, 352, 387, 435, 440, 441, 469, 497], "treat": [8, 225, 228, 233, 302, 318, 319, 336, 361, 372, 427, 475, 493, 496, 497, 503], "might": [8, 44, 57, 142, 184, 193, 194, 240, 275, 279, 299, 400, 404, 427, 434, 436, 440, 441, 472, 476, 478, 480, 493, 496, 497, 499], "valid": [8, 31, 44, 57, 63, 66, 75, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139, 143, 153, 196, 199, 210, 226, 228, 229, 234, 247, 255, 272, 273, 285, 294, 295, 299, 302, 305, 306, 318, 319, 320, 327, 333, 336, 341, 349, 354, 360, 361, 366, 367, 390, 394, 400, 401, 431, 434, 468, 469, 472, 474, 475, 476, 478, 480, 483, 493, 502], "storabl": [8, 396], "numer": [8, 136, 153, 228, 229, 273, 279, 283, 285, 318, 321, 357, 471, 472, 489, 493, 502], "7": [8, 75, 79, 92, 93, 96, 102, 105, 134, 139, 143, 145, 163, 174, 203, 210, 231, 283, 284, 292, 306, 323, 327, 341, 342, 357, 399, 440, 441, 447, 455, 464, 478, 483, 485, 491, 493, 494, 496, 503], "9": [8, 18, 75, 79, 80, 98, 105, 132, 139, 143, 145, 203, 210, 231, 292, 306, 323, 387, 399, 400, 447, 455, 469, 478, 482, 483, 484, 485, 494, 496], "6": [8, 53, 73, 75, 87, 96, 109, 133, 139, 142, 143, 145, 163, 165, 174, 203, 210, 231, 279, 284, 292, 301, 305, 306, 323, 326, 336, 341, 342, 357, 388, 398, 399, 426, 433, 447, 454, 455, 457, 459, 462, 465, 469, 470, 476, 478, 482, 483, 485, 493, 494, 503, 505], "revers": [8, 165, 168, 193, 210, 260, 302, 318, 326, 349, 434, 478], "essenti": [8, 16, 101, 141, 165, 252, 273, 280, 427, 484], "test_outputwrit": [10, 11], "test_compareset": [10, 11], "test_diffresultsbas": [10, 11], "test_comparedatabasedupl": [10, 11], "test_comparedatabasesim": [10, 11], "test_diffspecialdata": [10, 11], "test_diffsimpledata": [10, 11], "test_compareauxdata": [10, 11], "test_writetodb": [10, 12], "test_geth5fil": [10, 12], "makehistori": [10, 12], "makeshufflehistori": [10, 12], "test_preprestartrun": [10, 12], "test_computepar": [10, 12], "test_load": [10, 12], "test_loadsortset": [10, 12], "test_histori": [10, 12], "test_auxdata": [10, 12], "test_replacenon": [10, 12], "test_mergehistori": [10, 12], "test_splitdatabas": [10, 12], "test_grablocalcommithash": [10, 12], "test_filenam": [10, 12], "test_readinputsfromdb": [10, 12], "test_delet": [10, 12], "test_open": [10, 12], "test_loadc": [10, 12], "test_loadblueprint": [10, 12], "test_interacteverynodereturn": [10, 13], "test_interactbol": [10, 13, 249, 250, 256, 257], "test_distribut": [10, 13, 372, 378], "test_timenodeloop_tightcoupl": [10, 13], "test_metadata_endsuccessfulli": [10, 13], "test_metadataendfail": [10, 13], "test_gethistori": [10, 13], "test_gethistorybyloc": [10, 13], "test_growtofullcor": [10, 13, 338, 344, 346], "test_growtofullcorewithc": [10, 13], "test_growtofullcorefromfactori": [10, 13], "test_growtofullcorefromfactorywithc": [10, 13], "test_readwritten": [10, 13], "test_readwithoutinput": [10, 13], "test_varioustypeswork": [10, 13], "test_baddbnam": [10, 13], "test_standardrestart": [10, 13], "test_locationpack": [10, 14], "test_locationpackingoldervers": [10, 14], "test_locationpackingoldvers": [10, 14], "test_clos": [10, 14], "methodnam": [11, 12, 13, 14, 27, 28, 31, 32, 33, 38, 39, 50, 51, 55, 56, 71, 72, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 147, 148, 149, 150, 151, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 199, 200, 201, 213, 214, 215, 222, 223, 224, 237, 238, 242, 250, 251, 257, 258, 259, 260, 261, 262, 266, 288, 289, 290, 291, 292, 293, 294, 295, 312, 313, 314, 315, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 359, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "runtest": [11, 12, 13, 14, 27, 28, 31, 32, 33, 38, 39, 50, 51, 55, 56, 71, 72, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 147, 148, 149, 150, 151, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 199, 200, 201, 213, 214, 215, 222, 223, 224, 237, 238, 242, 250, 251, 257, 258, 259, 260, 261, 262, 266, 288, 289, 290, 291, 292, 293, 294, 295, 311, 312, 313, 314, 315, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 359, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "testcas": [11, 12, 13, 14, 27, 28, 31, 32, 33, 38, 39, 50, 51, 55, 56, 71, 72, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 147, 148, 149, 150, 151, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 199, 200, 201, 214, 222, 224, 237, 238, 242, 250, 251, 257, 258, 259, 260, 261, 262, 266, 288, 289, 290, 291, 292, 293, 294, 295, 312, 313, 314, 315, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 359, 370, 371, 372, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 440], "valueerror": [11, 12, 13, 14, 27, 28, 31, 32, 33, 38, 39, 50, 51, 55, 56, 71, 72, 75, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 147, 148, 149, 150, 151, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 192, 199, 200, 201, 213, 214, 215, 222, 223, 224, 228, 229, 237, 238, 242, 247, 250, 251, 257, 258, 259, 260, 261, 262, 266, 279, 280, 286, 288, 289, 290, 291, 292, 293, 294, 295, 304, 305, 312, 313, 314, 315, 316, 317, 333, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 359, 367, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429], "photocopi": 11, "simlar": 11, "walk": [12, 478, 484], "few": [12, 16, 29, 145, 159, 194, 226, 240, 252, 336, 349, 434, 437, 440, 441, 455, 468, 469, 476, 483, 484, 485, 496], "shuffl": [12, 206, 208, 209, 210, 214, 284, 309, 319, 336, 404, 472, 478, 484, 489, 491, 494, 496, 497], "armirun": [12, 214, 346, 361], "yaml": [12, 43, 44, 66, 71, 149, 153, 214, 233, 258, 273, 280, 281, 282, 283, 284, 286, 290, 312, 320, 337, 344, 346, 354, 360, 361, 367, 368, 379, 427, 432, 440, 456, 465, 471, 472, 475, 478, 480, 483, 484, 485, 487, 493, 496, 497], "setup": [12, 273, 306, 361, 469, 480, 492], "abov": [12, 99, 141, 143, 153, 225, 240, 273, 275, 290, 302, 312, 319, 327, 334, 346, 388, 399, 411, 429, 434, 436, 437, 439, 441, 455, 468, 469, 476, 480, 484, 485, 489, 493, 494, 496, 497, 499, 502], "reloadingdb": 12, "nonexist": [12, 370], "super": [12, 41, 53, 133, 250, 251, 301, 396, 441], "correctli": [12, 155, 201, 257, 258, 266, 275, 301, 312, 317, 340, 346, 347, 386, 420, 424, 441, 472], "cover": [13, 150, 302, 317, 340, 372, 433, 440, 476, 480, 492], "quickli": [13, 16, 193, 346, 372, 431, 438, 465, 469, 480, 483, 485], "NOT": [13, 74, 97, 98, 141, 165, 201, 209, 210, 279, 302, 304, 340], "text": [16, 18, 57, 58, 63, 75, 152, 240, 279, 280, 299, 302, 350, 372, 378, 388, 394, 404, 427, 432, 457, 465, 472, 476, 478, 484, 493, 496, 499, 502], "mechan": [16, 75, 76, 84, 113, 216, 299, 319, 336, 370, 437, 469, 470, 475, 476, 480, 493, 496, 502, 505], "etc": [16, 17, 23, 44, 74, 75, 101, 105, 131, 142, 144, 152, 153, 189, 190, 191, 193, 197, 202, 209, 228, 233, 235, 240, 253, 273, 274, 275, 276, 279, 280, 286, 297, 299, 302, 304, 305, 306, 319, 328, 330, 333, 336, 350, 361, 367, 373, 387, 388, 403, 404, 427, 434, 436, 437, 439, 440, 468, 469, 476, 478, 482, 483, 484, 485, 492, 493, 495, 496, 497], "particularli": [16, 39, 63, 229, 312, 328, 336, 436, 440, 480, 485, 496], "eqhistorytrackerinterfac": 16, "unravel": 16, "interest": [16, 18, 46, 80, 82, 240, 244, 275, 304, 305, 312, 336, 342, 434, 454, 469, 480, 492, 496], "armiblock": 16, "blocknam": 16, "historykei": 16, "paralyzingli": 16, "slow": [16, 240, 302, 318, 427, 438, 472], "To": [16, 23, 42, 74, 79, 144, 189, 209, 273, 275, 279, 306, 319, 336, 353, 372, 381, 382, 387, 427, 431, 432, 433, 434, 436, 437, 439, 469, 470, 475, 476, 480, 481, 483, 484, 493, 494, 496, 499, 502, 505], "def": [16, 53, 273, 333, 389, 399, 405, 432, 436, 437, 453, 455, 463, 465, 475, 478, 480, 483, 484, 494], "percentbu": [16, 209, 456, 489, 490], "your": [16, 18, 43, 46, 74, 79, 101, 189, 196, 204, 209, 229, 235, 240, 303, 336, 361, 387, 389, 392, 404, 406, 431, 432, 433, 434, 437, 440, 441, 442, 448, 449, 462, 467, 469, 470, 478, 479, 483, 484, 486, 493, 494, 495, 496, 497, 505], "assemswithhistori": 16, "timestepsavail": 16, "gettimeindic": 16, "fluxattimestep3": 16, "b1003a": 16, "variabl": [16, 44, 46, 47, 53, 75, 101, 145, 153, 159, 160, 165, 184, 193, 204, 229, 240, 275, 279, 284, 285, 299, 302, 304, 306, 307, 312, 325, 332, 336, 353, 387, 403, 427, 434, 437, 440, 441, 468, 470, 471, 472, 480, 492, 493, 497, 505], "detailassemblynam": 16, "year": [16, 101, 406, 441, 469, 491], "ask": [16, 18, 57, 194, 196, 279, 302, 390, 403, 475], "activ": [16, 29, 44, 57, 69, 75, 141, 145, 153, 190, 193, 196, 245, 273, 275, 283, 285, 299, 336, 368, 404, 431, 433, 434, 436, 440, 441, 469, 470, 472, 480, 489, 493, 494, 495, 496, 497, 505], "treatment": [16, 29, 233, 285, 333, 496, 497], "assem": [16, 209, 214, 276, 304, 306, 317, 318, 336, 387, 404, 478], "bol": [16, 22, 29, 67, 75, 193, 202, 226, 254, 257, 273, 279, 280, 302, 304, 336, 404, 434, 439, 468, 471, 472, 478, 483, 489, 490, 491, 496, 497, 501, 504], "give": [16, 22, 90, 131, 136, 144, 209, 226, 279, 285, 296, 299, 302, 312, 327, 328, 350, 400, 401, 439, 474, 484, 485, 499], "signal": [16, 29, 74, 279, 333, 334], "timeindic": 16, "boc": [16, 75, 193, 202, 226, 240, 250, 257, 279, 387, 434, 468, 489, 497, 501], "moc": [16, 75, 240], "fashion": [16, 440, 475], "inexpens": 16, "simultan": [16, 193, 400], "preload": 16, "keyerror": [16, 52, 76, 319], "found": [16, 23, 39, 55, 76, 157, 202, 204, 209, 273, 275, 279, 302, 304, 312, 319, 320, 323, 325, 334, 336, 390, 395, 400, 401, 423, 427, 434, 439, 469, 473, 475, 480, 494, 496], "manipul": [17, 44, 62, 73, 155, 193, 273, 324, 350, 403, 427, 495, 496, 498, 499], "catch": [17, 153, 414], "admittedli": 17, "_c": [17, 233], "instanti": [17, 74, 122, 145, 152, 191, 192, 193, 207, 209, 273, 330, 332, 334, 349, 361, 434, 436], "databs": [17, 333], "soon": [17, 273, 299, 302, 337, 440, 441, 444, 451, 467, 469, 471, 480, 481, 486], "construct": [17, 29, 53, 55, 67, 75, 76, 86, 142, 160, 172, 189, 196, 201, 245, 247, 253, 273, 276, 280, 281, 282, 283, 284, 286, 289, 290, 295, 299, 302, 304, 319, 320, 323, 327, 328, 329, 330, 336, 378, 381, 386, 399, 456, 463, 464, 471, 476, 478, 483, 493, 497, 499], "delet": [17, 18, 59, 74, 75, 143, 145, 165, 240, 306, 336, 349, 350, 352, 354, 356, 372, 392, 393, 403, 431, 440, 472, 497], "temporari": [17, 59, 74, 240, 392, 406, 412], "clean": [17, 59, 74, 145, 204, 302, 306, 356, 392, 412, 431, 434, 472, 497], "job": [17, 44, 74, 229, 245, 420, 496], "next": [17, 40, 207, 228, 247, 276, 279, 299, 302, 305, 336, 387, 404, 427, 431, 432, 436, 437, 476, 478, 480, 481, 483, 484, 485, 494, 499], "reload": [17, 193, 209, 240, 247, 496], "cours": [17, 209, 303, 435, 469, 483, 484, 485], "diagnos": [18, 380], "psutil": 18, "perspect": [18, 233, 273, 352, 427, 480, 488], "great": [18, 98, 273, 330, 336, 404, 420, 431, 441, 469, 496, 497], "everi": [18, 53, 75, 149, 165, 193, 226, 228, 233, 240, 247, 275, 302, 330, 336, 349, 361, 372, 386, 388, 389, 399, 404, 406, 427, 434, 439, 441, 470, 476, 480, 483, 485, 488, 497, 505], "fast": [18, 74, 166, 174, 204, 210, 231, 233, 240, 303, 321, 336, 427, 436, 448, 468, 469, 471, 475, 476, 478, 479, 483, 485, 489, 491, 493, 497], "gc": 18, "get_object": 18, "garbag": [18, 74], "collector": [18, 74], "count": [18, 19, 20, 155, 156, 228, 274, 276, 279, 323, 336, 373, 379, 387, 406, 472, 485], "size": [18, 23, 53, 155, 156, 191, 209, 275, 302, 318, 328, 336, 346, 388, 396, 404, 476, 484, 485, 493, 497], "note": [18, 91, 142, 290, 396, 399, 406, 422, 433, 437, 441, 453, 465, 469, 475, 478, 485, 488, 489, 493, 496, 497, 499], "sy": [18, 73, 245, 480], "getsizeof": 18, "certainli": [18, 441, 485, 497], "slightli": [18, 62, 209, 272, 279, 285, 328, 471, 480, 484, 493], "seem": [18, 30, 42, 210, 240, 290, 328, 330, 367], "de": [18, 41, 240, 279, 350], "alloc": [18, 157, 228, 229, 497], "got": [18, 352], "2gb": 18, "pythonhost": 18, "summari": [18, 24, 25, 36, 58, 63, 67, 143, 204, 274, 286, 295, 302, 307, 336, 349, 435, 456, 463, 464, 476, 478, 497, 501], "timedescript": 18, "stdout": [18, 204, 295, 350, 480, 500, 501], "debugmem": [18, 497], "turn": [18, 80, 228, 240, 245, 247, 273, 275, 279, 284, 336, 350, 378, 387, 427, 432, 434, 436, 463, 469, 471, 476, 483, 485, 497, 502], "problem": [18, 52, 75, 153, 157, 159, 160, 172, 196, 229, 240, 245, 247, 248, 285, 292, 302, 318, 327, 328, 329, 336, 349, 370, 406, 434, 465, 469, 476, 484, 485, 491, 493, 496, 497], "attrnam": 18, "refobject": 18, "thorugh": 18, "obj": [18, 141, 145, 159, 161, 163, 166, 190, 240, 244, 245, 275, 302, 310, 318, 387], "referr": 18, "oppos": [18, 279, 299, 378, 388], "gigabyt": 18, "reports": 18, "helper": [18, 20, 55, 196, 209, 234, 255, 302, 333, 346, 350, 376, 380, 385, 394, 413], "u": [18, 105, 122, 131, 132, 133, 134, 143, 144, 145, 155, 174, 193, 210, 233, 273, 279, 280, 283, 284, 288, 290, 292, 294, 297, 298, 301, 302, 319, 323, 326, 328, 329, 332, 336, 341, 342, 346, 350, 391, 440, 460, 461, 465, 469, 476, 478, 480, 484, 485], "footprint": 18, "ao": 18, "arbitrarili": [18, 318, 319, 336, 386, 480, 494], "deepli": 18, "nest": [18, 23, 273, 327, 387], "focus": [18, 326, 469, 485, 493], "held": [18, 302, 336], "classtyp": 18, "sys_mem": 18, "hostnam": 18, "14": [18, 109, 133, 143, 145, 210, 231, 323, 437, 455, 478, 482, 484, 496, 497], "ram": [18, 469], "proc": 18, "mem": 18, "mb": [18, 450, 466, 491], "491": [18, 203], "472": 18, "471": 18, "470": [18, 493], "13": [18, 133, 143, 145, 203, 210, 231, 323, 400, 434, 455, 472, 478, 482, 494], "474": 18, "473": [18, 78, 89, 231], "460": 18, "461": [18, 231], "printabl": 19, "test_newreport": [19, 26], "testreportcontentcr": [19, 26, 27], "test_report": [19, 26], "testreport": [19, 26, 28], "testreportinterfac": [19, 26, 28], "groupsorderfirst": [19, 20], "componentwellgroup": [19, 20], "addtoreport": [19, 20], "writehtml": [19, 20], "writegroupshtml": [19, 20], "writeescap": [19, 21], "writereport": [19, 23, 24, 439], "tableofcont": [19, 23], "leveldict": [19, 23], "addchildel": [19, 23, 439], "addrow": [19, 23, 439], "generatedesignreport": [19, 24], "printreport": [19, 24, 28], "writerunsummari": [19, 24], "insert": [20, 23, 62, 101, 193, 273, 274, 275, 276, 279, 302, 394, 406, 434, 439, 488], "datum": 20, "f": [20, 21, 90, 143, 145, 189, 193, 210, 280, 290, 297, 298, 301, 328, 341, 342, 346, 400, 404, 427, 432, 438, 453, 457, 476, 478, 480, 481, 482, 483, 485, 493, 501], "midst": [20, 302], "abstract": [20, 23, 35, 40, 44, 46, 63, 75, 136, 141, 145, 155, 156, 165, 240, 245, 251, 299, 301, 302, 309, 325, 327, 328, 333, 341, 368, 476, 480], "accept": [20, 46, 141, 145, 209, 275, 325, 329, 333, 367, 394, 429, 433, 471, 476, 493], "reportdatum": 20, "arg": [21, 36, 57, 61, 62, 63, 71, 75, 79, 86, 99, 105, 128, 130, 131, 132, 133, 134, 141, 159, 186, 193, 201, 209, 228, 229, 244, 245, 272, 273, 275, 281, 282, 283, 284, 285, 286, 296, 326, 329, 333, 336, 342, 350, 361, 373, 386, 389, 432, 472], "kwd": 21, "alia": [21, 63, 75, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 164, 186, 193, 223, 262, 275, 276, 279, 281, 282, 283, 284, 285, 286, 296, 297, 298, 299, 301, 302, 328, 332, 336, 341, 342, 367, 493], "file_path": [21, 23], "embed": [21, 23, 42, 497], "src": [21, 23, 387, 427, 431, 461], "base64": [21, 23], "casetitl": [21, 204, 240, 360, 361, 463], "comprehens": [22, 254, 319, 439], "summar": [22, 25, 36, 52, 63, 67, 193, 240, 349, 350, 439, 456, 463, 464, 472, 478, 494], "cold": [22, 101, 279, 296, 297, 298, 299, 301, 302, 304, 310, 312, 340, 341, 342, 404, 439, 472, 484, 488, 489, 493, 497, 498], "boolean": [22, 23, 75, 141, 145, 156, 193, 252, 279, 302, 304, 305, 306, 312, 320, 336, 360, 367, 404, 406, 427, 489, 497], "part": [22, 53, 113, 157, 193, 229, 245, 273, 302, 306, 310, 319, 323, 325, 333, 427, 436, 439, 440, 448, 469, 472, 475, 480, 483, 493], "tablesect": [22, 23], "control": [22, 29, 47, 74, 79, 162, 164, 165, 167, 173, 179, 201, 209, 226, 228, 229, 245, 274, 275, 276, 279, 280, 284, 285, 302, 305, 306, 313, 318, 319, 329, 330, 336, 362, 437, 448, 468, 469, 471, 472, 475, 476, 478, 480, 483, 488, 489, 491, 493, 494, 495, 496, 497, 501], "pin": [22, 25, 206, 210, 216, 225, 240, 274, 275, 279, 284, 296, 298, 299, 302, 303, 304, 305, 310, 316, 319, 321, 327, 333, 336, 339, 340, 346, 388, 398, 434, 448, 468, 469, 472, 475, 476, 478, 483, 484, 485, 489, 490, 491, 495, 496, 498], "fraction": [22, 77, 79, 81, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 104, 105, 112, 122, 130, 131, 132, 134, 135, 144, 145, 153, 159, 193, 201, 225, 226, 228, 235, 262, 279, 283, 292, 296, 299, 302, 304, 306, 310, 318, 325, 336, 340, 341, 360, 387, 389, 391, 426, 434, 439, 452, 462, 466, 467, 468, 469, 471, 472, 476, 478, 481, 484, 486, 488, 489, 491, 493, 496, 497, 504], "subsect": [22, 23, 210, 280, 431, 470, 505], "componenet": 22, "generatefullcoremap": [22, 24, 25], "showblockaxmesh": [22, 24, 25, 404, 463], "hold": [23, 75, 155, 168, 169, 192, 229, 275, 281, 296, 299, 302, 306, 328, 330, 332, 367, 398, 468, 494], "abc": [23, 35, 276, 280, 325, 327], "htmltree": [23, 439], "htmlelement": [23, 439], "idprefix": 23, "higher": [23, 165, 209, 273, 275, 299, 312, 434, 475, 484, 499, 501], "font": [23, 404], "rang": [23, 43, 53, 89, 100, 112, 290, 328, 330, 336, 384, 399, 437, 445, 452, 456, 458, 459, 467, 475, 476, 478, 483, 486, 497], "term": [23, 153, 156, 157, 202, 209, 228, 235, 240, 245, 275, 321, 336, 400, 468, 469, 475, 484], "href": 23, "referenc": [23, 152, 155, 361], "left": [23, 145, 152, 208, 240, 245, 273, 299, 302, 323, 325, 327, 328, 367, 388, 400, 439, 475, 499, 502, 503], "either": [23, 41, 44, 53, 55, 75, 76, 101, 154, 157, 159, 165, 168, 189, 193, 194, 196, 204, 209, 229, 233, 240, 247, 252, 273, 279, 283, 284, 285, 290, 302, 306, 319, 321, 325, 327, 328, 350, 367, 372, 388, 389, 391, 404, 427, 436, 437, 441, 463, 469, 476, 480, 484, 485, 493, 496], "subhead": 23, "imagepath": 23, "encod": 23, "hexplot": 23, "premad": 23, "png": [23, 306, 394, 404, 438, 447, 497], "With": [23, 41, 275, 276, 328, 334, 478, 484, 496, 502], "column": [23, 156, 157, 172, 191, 388, 406, 427, 484], "row": [23, 40, 156, 172, 191, 276, 302, 388, 399, 408, 439, 499], "rname": [23, 439], "yaxi": [23, 254, 406, 439], "eventu": [23, 141, 280, 320, 388, 471, 476, 494], "length": [23, 92, 93, 96, 145, 151, 156, 159, 187, 193, 201, 240, 279, 298, 304, 305, 312, 325, 336, 387, 398, 399, 400, 404, 426, 437, 439, 440, 478, 481, 483, 484, 488, 493, 495, 496, 497, 503, 504], "y": [23, 34, 40, 90, 105, 111, 133, 139, 143, 145, 193, 209, 254, 279, 280, 284, 290, 301, 321, 323, 327, 328, 336, 341, 342, 398, 400, 404, 406, 423, 426, 428, 429, 440, 454, 456, 457, 458, 459, 464, 465, 476, 482, 484, 485, 489, 493, 497, 500], "axi": [23, 165, 254, 279, 312, 327, 328, 388, 398, 404, 406, 429, 488, 489, 491], "identifi": [23, 74, 101, 142, 145, 273, 279, 280, 304, 387, 391, 424, 469, 476, 484, 489, 493], "peakdpa": 23, "keff": [23, 201, 240, 242, 336, 366, 400, 406, 434, 439, 478, 489, 491, 494], "seri": [23, 52, 53, 74, 141, 142, 163, 193, 400, 406, 431, 476, 483, 496], "effect": [23, 48, 105, 134, 145, 159, 228, 229, 247, 281, 285, 302, 305, 318, 332, 336, 372, 439, 469, 491, 493, 496, 497, 502], "uncertainti": [23, 439, 476], "keffunc": [23, 406, 439, 491], "uncontrol": [23, 201, 406, 426, 484, 485, 491], "burn": [23, 122, 143, 145, 149, 153, 201, 228, 233, 240, 279, 280, 285, 288, 292, 294, 336, 387, 426, 440, 465, 468, 476, 485, 489, 493, 494, 496, 497], "getassembli": [23, 274, 276, 336, 434, 456, 478, 499], "peakbu": 23, "bu": [23, 206, 209, 210, 228, 439, 440, 478, 483], "maxvalu": 23, "defaultdict": [23, 229, 453, 482], "max": [23, 78, 101, 201, 209, 214, 240, 254, 276, 279, 302, 330, 333, 336, 472, 475, 476, 488, 491, 497, 502, 504], "maxpercentbu": [23, 209, 336, 488, 491, 494], "linetoaddto": 23, "our": [23, 42, 180, 350, 367, 396, 415, 433, 436, 439, 440, 441, 454, 469, 473, 476, 480, 484, 494, 502, 503], "ymin": [23, 406, 457], "ext": [23, 87, 89, 120, 368, 372, 431], "minimum": [23, 101, 229, 302, 305, 318, 323, 326, 328, 391, 404, 406, 489, 491, 497], "enum": [23, 74, 75, 143, 169, 227, 229, 320, 368, 396, 471], "enumer": [23, 143, 226, 320, 368, 437, 447, 462, 465, 471], "pdf": [24, 77, 78, 83, 89, 91, 92, 93, 94, 95, 96, 105, 127, 128, 129, 130, 134, 136, 144, 152, 165, 431, 472, 497], "disabl": [24, 75, 193, 229, 240, 247, 412, 434, 471, 489, 493, 497], "miscellan": 25, "convergencesummari": 25, "weight": [25, 52, 81, 142, 143, 144, 145, 159, 189, 190, 228, 292, 299, 302, 336, 391, 465, 472, 476, 480, 482, 489, 491, 493], "balanc": [25, 169, 189, 229, 240, 380, 437, 440, 489], "duct": [25, 90, 274, 279, 296, 299, 305, 312, 319, 336, 340, 342, 404, 448, 453, 463, 469, 475, 476, 478, 483, 484, 489, 493], "simplist": [25, 497], "averag": [25, 89, 94, 101, 159, 165, 189, 228, 240, 275, 279, 301, 302, 304, 306, 318, 319, 330, 333, 336, 339, 400, 404, 416, 472, 478, 482, 484, 488, 489, 491, 497], "fz": 25, "fxy": 25, "fq": 25, "edit": [25, 53, 283, 432, 434, 470, 476, 484, 493, 496, 499, 505], "test_timeseri": [26, 27], "test_tablecr": [26, 27], "test_reportcont": [26, 27], "test_reportcontentsend": [26, 27], "test_neutronicsplotfunct": [26, 27], "test_writereport": [26, 27, 28], "test_reportbas": [26, 27], "test_reportlog": [26, 27], "test_setdata": [26, 28], "test_getdata": [26, 28], "test_reactorspecificreport": [26, 28], "test_writewelcomehead": [26, 28], "test_printreport": [26, 28], "test_distributablereportint": [26, 28], "test_interactbolreportint": [26, 28], "test_interacteverynod": [26, 28, 30, 33, 249, 250, 256, 257], "test_interactboc": [26, 28, 212, 214, 249, 250, 256, 257], "test_interacteoc": [26, 28], "test_interacteol": [26, 28], "trigger": [29, 141, 152, 156, 209, 226, 273, 334, 456, 463, 464, 468, 469, 478, 488, 501], "folder": [29, 58, 74, 193, 202, 204, 401, 412, 431, 439, 440, 470, 480, 483, 499, 500, 505], "review": [29, 134, 153, 193, 372, 433, 434, 440, 441, 474], "collabor": [29, 273, 469], "dumpsnapshot": [29, 496, 497], "defaultsnapshot": [29, 497], "manageri": 29, "assign": [29, 75, 101, 143, 189, 209, 229, 258, 279, 299, 302, 304, 319, 321, 327, 330, 332, 333, 341, 405, 472, 475, 478, 489, 493], "mol": [29, 79, 105, 130, 134, 497], "stamp": 29, "cccnnn": [29, 496], "opposit": [29, 298, 328, 437], "engin": [30, 44, 80, 107, 153, 217, 435, 475, 476, 480, 481, 482, 483, 497], "world": [30, 240, 387], "test_calcmgflu": [30, 31], "test_historyreport": [30, 31], "test_getblockinassembli": [30, 31], "test_timestepfilt": [30, 31], "test_timestepfilteringwithgap": [30, 31], "test_blocknam": [30, 31], "test_fullbreakdown": [30, 32], "test_displaymemoryusag": [30, 32], "test_printfullmemorybreakdown": [30, 32], "test_getreferr": [30, 32], "test_checkforduplicateobjectsonarmimodel": [30, 32], "test_profilememoryusageact": [30, 32], "get_contain": [30, 32], "test_expandcontain": [30, 32], "test_counthandlesrecurs": [30, 32], "test_interactcoupl": [30, 33], "test_activeatedefaultsnapshots_30cycles2burnstep": [30, 33], "test_activeatedefaultsnapshots_17cycles5burnstep": [30, 33], "confirm": [31, 196], "mg": [31, 143, 145, 342], "hdf": [31, 478], "hdfdb": [31, 74], "readblockshistori": 31, "historical_valu": 31, "historical_indic": 31, "cast": [31, 132], "energi": [31, 144, 148, 157, 159, 165, 168, 169, 172, 182, 189, 190, 231, 240, 244, 260, 279, 299, 302, 336, 401, 404, 434, 460, 468, 469, 472, 480, 489, 491, 497], "preserv": [31, 79, 101, 312, 346, 350, 352, 368, 378, 400, 437, 493], "swap": [31, 209, 352, 356, 406, 456, 478, 494], "5": [31, 51, 53, 75, 77, 80, 90, 93, 94, 98, 109, 117, 133, 136, 137, 139, 141, 143, 145, 153, 157, 158, 163, 165, 179, 201, 203, 209, 210, 225, 226, 231, 235, 240, 245, 275, 279, 288, 292, 306, 312, 323, 328, 339, 341, 387, 399, 423, 426, 439, 441, 454, 455, 456, 458, 459, 463, 465, 478, 482, 483, 484, 485, 489, 493, 494, 496, 497, 499, 503], "loc": [31, 276, 333, 336, 349, 434, 485], "sfp": [31, 209, 273, 275, 276, 280, 284, 286, 336, 472, 488, 493], "mocksnapshotrequest": 33, "amen": 34, "theoret": [34, 79, 101, 472], "sort": [34, 75, 143, 165, 274, 279, 296, 302, 319, 326, 330, 336, 340, 346, 349, 396, 404, 427, 455, 456, 472, 478, 483, 497], "wide": [34, 160, 298, 302, 322, 336, 364, 372, 404, 432, 481, 484, 491], "vi": [34, 35, 36, 480], "qualiti": [34, 90, 110, 132, 441, 462, 469, 481], "pure": [34, 78, 105, 107, 130, 133, 336, 350, 388, 396, 427, 475, 476, 481], "silo": 34, "tend": [34, 40, 299, 319, 333, 432, 481, 501], "binari": [34, 42, 75, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 179, 399, 460, 476, 480, 496, 499], "test_vi": [34, 37, 39], "testvtkmesh": [34, 37, 38], "testvisdump": [34, 37, 38], "test_xdmf": [34, 37], "testxdmf": [34, 37, 39], "dumpstat": [34, 35, 41, 42], "addopt": [34, 36, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 226, 230, 360, 367, 432], "settingsargu": [34, 36, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 226, 230, 369, 371, 432], "empti": [34, 40, 75, 101, 135, 145, 190, 201, 228, 247, 273, 275, 279, 318, 332, 342, 346, 372, 396, 404, 408, 468, 472, 480, 484, 493, 497], "z": [34, 40, 80, 87, 109, 134, 136, 142, 143, 144, 145, 179, 275, 279, 284, 293, 302, 303, 306, 307, 312, 318, 321, 322, 323, 326, 327, 328, 329, 336, 429, 434, 452, 454, 456, 457, 458, 462, 464, 465, 466, 467, 471, 476, 478, 482, 484, 485, 486, 489, 493], "docstr": [36, 63, 67, 155, 405, 431, 435, 436, 439, 441], "decor": [36, 63, 67, 333, 372, 389, 390, 401, 410, 436], "instead": [36, 63, 67, 76, 101, 145, 193, 204, 209, 247, 250, 273, 275, 279, 284, 286, 299, 302, 318, 320, 326, 328, 333, 334, 336, 345, 361, 372, 373, 387, 389, 401, 427, 437, 439, 440, 469, 471, 472, 476, 478, 480, 484, 493, 496], "suffici": [36, 63, 67, 105, 193, 247, 303, 484, 493, 494], "short": [36, 44, 52, 57, 63, 67, 153, 204, 207, 240, 330, 332, 333, 361, 368, 436, 441, 470, 484, 496, 497, 505], "express": [36, 44, 320, 399, 423, 427, 440, 441, 456, 469, 484, 494, 503], "One": [36, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 152, 157, 184, 196, 230, 273, 299, 326, 330, 339, 367, 371, 395, 399, 434, 436, 439, 475, 478, 482, 494], "unspecifi": [36, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 230, 258, 371], "parser": [36, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 156, 230, 371, 432], "posit": [36, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 209, 230, 240, 275, 279, 301, 302, 304, 306, 321, 323, 325, 326, 327, 328, 329, 336, 371, 388, 398, 400, 406, 439, 471, 472, 485, 489, 491, 493, 494, 496, 497, 499], "final": [36, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 101, 216, 230, 233, 336, 371, 404, 405, 432, 441, 456, 472, 480, 484, 493, 497, 502], "test_testvtkmesh": [37, 38], "test_dumpreactorvtk": [37, 38], "test_dumpreactorxdmf": [37, 38], "test_hexmesh": [37, 38], "test_cartesianmesh": [37, 38], "test_deduptim": [37, 39], "whole": [38, 39, 58, 165, 189, 209, 289, 302, 336, 339, 433, 437, 441, 469, 471, 475, 480, 484, 493], "funtion": 39, "vacuum": [39, 165, 336], "resort": 39, "goe": [40, 194, 325, 326, 336, 340, 433, 441, 465], "vertic": [40, 41, 298, 304, 312, 404, 468, 493], "problemat": [40, 286, 469, 493], "primit": [40, 296, 299, 468, 475], "celltyp": 40, "unstructur": [40, 41, 325], "mesh": [40, 41, 42, 47, 122, 155, 160, 162, 167, 168, 173, 229, 240, 275, 279, 280, 282, 288, 291, 292, 294, 301, 302, 304, 306, 307, 312, 315, 317, 318, 321, 322, 323, 326, 327, 328, 329, 333, 336, 342, 400, 404, 456, 463, 464, 471, 472, 475, 476, 478, 484, 485, 488, 489, 490, 491, 493, 497], "vertex": 40, "cell": [40, 279, 321, 323, 325, 327, 328, 336, 382, 388, 398, 431, 484], "onto": [40, 228, 302, 318, 332, 336, 469, 471, 480, 500], "concept": [40, 44, 89, 193, 286, 323, 336, 436, 440, 472, 476, 494], "bunch": [40, 352, 360, 401, 437, 478, 499], "nx3": 40, "per": [40, 41, 47, 73, 122, 145, 149, 153, 155, 159, 193, 203, 247, 279, 296, 302, 306, 307, 317, 323, 336, 361, 387, 406, 434, 437, 440, 468, 469, 472, 484, 489, 491, 493, 497], "belong": [40, 44, 101, 143, 202, 273, 276, 302, 333, 441, 447], "contin": 40, "relev": [40, 75, 150, 193, 209, 217, 247, 281, 304, 319, 334, 336, 396, 433, 442, 467, 476, 485, 486, 496, 500], "writer": [41, 171, 172, 180, 209, 247, 248, 251, 302, 361, 472], "aspect": [41, 214, 434, 476, 483], "export": [41, 74, 208, 470, 480, 505], "total": [41, 52, 79, 105, 130, 155, 157, 168, 172, 186, 189, 202, 214, 225, 235, 244, 275, 279, 299, 302, 305, 307, 312, 336, 340, 361, 380, 388, 389, 391, 400, 404, 437, 439, 441, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 475, 478, 480, 483, 488, 489, 491, 493, 502, 504], "doabl": 41, "visualiz": 41, "fanci": [41, 44, 273, 330], "difficult": [41, 286, 319, 330, 333, 401, 499], "big": [41, 194, 228, 286, 306, 333, 352, 434, 437, 484, 499], "basenam": [41, 42], "inputnam": [41, 42], "finish": [41, 226, 245, 483, 494], "includeparam": [41, 42], "excludeparam": [41, 42], "exclud": [41, 52, 193, 209, 228, 229, 233, 285, 391], "interchang": 42, "interpret": [42, 63, 75, 79, 86, 99, 101, 105, 128, 131, 132, 133, 134, 142, 165, 245, 273, 283, 284, 285, 312, 319, 320, 336, 388, 394, 400, 476, 478, 493, 494, 496, 497, 502], "light": [42, 233, 465, 468, 485], "live": [42, 74, 153, 195, 202, 204, 207, 209, 226, 240, 244, 273, 276, 285, 353, 436, 501], "paraview": [42, 470, 480, 505], "visit": [42, 387, 470, 480, 505], "properli": [42, 55, 159, 179, 303, 312, 314, 336, 341, 381, 383, 388, 411, 434, 471], "polyhedra": 42, "unfortun": [42, 327, 396, 405, 440], "__need__": 42, "prism": [42, 476], "wedg": 42, "defeat": 42, "xmdf": 42, "cartesian": [42, 53, 165, 274, 275, 284, 302, 305, 320, 321, 325, 328, 340, 346, 372, 377, 388, 408, 452, 456, 466, 467, 469, 471, 472, 476, 485, 486, 493, 496], "theta": [42, 76, 134, 136, 279, 293, 301, 302, 306, 307, 329, 336, 347, 429, 452, 466, 467, 471, 476, 486, 493], "1287": [42, 113], "elementtre": 42, "temporalcollect": 42, "analyz": [43, 46, 52, 53, 205, 225, 434, 436, 469, 476, 478, 492, 500], "often": [43, 44, 45, 63, 74, 76, 82, 83, 87, 101, 142, 152, 156, 159, 163, 193, 204, 209, 216, 228, 240, 244, 245, 302, 303, 319, 321, 323, 324, 327, 333, 353, 432, 448, 455, 469, 470, 471, 475, 476, 478, 480, 481, 483, 484, 493, 494, 496, 498, 500, 505], "sweep": [43, 44, 45, 53, 57, 240, 279, 308, 309, 310, 434, 463, 469, 471, 472, 479, 497], "send": [43, 74, 75, 141, 437, 440], "off": [43, 52, 74, 75, 77, 143, 152, 162, 167, 189, 228, 245, 247, 273, 275, 279, 302, 306, 327, 328, 336, 346, 350, 378, 388, 437, 455, 469, 471, 475, 480, 484, 496, 497], "my": [43, 389, 403, 405, 421, 432, 436, 480, 496, 497], "burnstep": [43, 192, 193, 387, 426, 484, 485, 496, 497], "sensit": [43, 47, 189, 273, 275, 332, 333, 336, 469, 471, 483], "studi": [43, 47, 89, 177, 189, 209, 240, 275, 469, 475, 483, 484, 493], "armiloc": 43, "numstep": 43, "11": [43, 75, 79, 89, 98, 113, 134, 143, 145, 165, 176, 181, 210, 231, 323, 400, 434, 455, 463, 471, 472, 478, 482, 483, 484, 485, 494], "Then": [43, 155, 228, 275, 279, 302, 470, 475, 480, 505], "submit": [43, 44, 52, 53, 57, 245, 368, 435, 437, 480, 483, 496, 497], "hpc": [43, 44, 57, 74, 469, 476, 480, 483], "cluster": [43, 44, 52, 57, 74, 194, 245, 361, 403, 437, 483, 496, 497], "samplinginputmodifi": [43, 45, 46, 53, 56], "fullcoremodifi": [43, 45, 46], "settingsmodifi": [43, 45, 46, 303, 308, 309, 472, 483], "multisettingmodifi": [43, 45, 46], "blueprintblockmodifi": [43, 45, 46, 50], "neutronicsmodifi": [43, 45], "neutronicconvergencemodifi": [43, 45, 47, 303, 308, 309], "neutronicmeshssizemodifi": [43, 45, 47], "pintypeinputmodifi": [43, 45], "smeardensitymodifi": [43, 45, 48], "cladthicknessbyodmodifi": [43, 45, 48], "cladthicknessbyidmodifi": [43, 45, 48], "test_cas": [43, 54], "testarmicas": [43, 54, 55], "testcasesuitedepend": [43, 54, 55], "testextrainputwrit": [43, 54, 55], "multifilesinterfac": [43, 54, 55], "testpluginforcopyinterfacesmultiplefil": [43, 54, 55], "testcopyinterfaceinput": [43, 54, 55], "test_suitebuild": [43, 54], "latinhypercubemodifi": [43, 54, 56], "testlatinhypercubesuitebuild": [43, 54, 56], "independentvari": [43, 44, 46, 55, 56, 483, 497], "addexplicitdepend": [43, 44], "getpotentialparentfromsettingvalu": [43, 44], "setuptaskdepend": [43, 44], "initializeoper": [43, 44, 463], "summarizedesign": [43, 44, 55], "buildcommand": [43, 44], "echoconfigur": [43, 52, 483], "writet": [43, 52], "adddegreeoffreedom": [43, 53, 483], "addmodifierset": [43, 53], "buildsuit": [43, 53, 483], "redirect": [44, 52, 350], "post": [44, 52, 74, 304, 432, 478, 479, 497, 499], "reactiv": [44, 101, 155, 202, 216, 228, 233, 240, 304, 333, 336, 469, 476, 478, 488, 489, 491, 493, 496, 497], "coeffici": [44, 76, 78, 80, 89, 92, 93, 94, 96, 101, 102, 130, 133, 134, 157, 164, 197, 202, 216, 228, 240, 247, 296, 304, 333, 336, 340, 400, 429, 476, 478, 481, 489, 491, 493, 497, 503], "complex": [44, 75, 152, 204, 210, 214, 240, 273, 298, 302, 367, 388, 456, 469, 470, 475, 476, 480, 481, 484, 485, 493, 494, 505], "definit": [44, 46, 76, 79, 105, 147, 149, 153, 155, 162, 167, 218, 226, 235, 245, 253, 269, 273, 274, 277, 278, 282, 283, 284, 286, 299, 300, 302, 318, 319, 328, 330, 331, 332, 333, 334, 335, 336, 346, 364, 367, 387, 390, 394, 404, 427, 433, 434, 436, 463, 465, 471, 472, 475, 476, 480, 481, 482, 483, 484, 488, 493, 497], "independentvariabl": 44, "lazi": [44, 440], "demand": [44, 193, 279, 302], "someon": [44, 53, 141, 240, 283, 330, 334, 394, 469], "reflect": [44, 74, 79, 165, 240, 274, 299, 302, 320, 336, 434, 475, 476, 485, 488, 497], "somehow": [44, 150, 349, 436, 437, 441], "ideal": [44, 75, 159, 273, 319, 372, 474, 480], "explicit": [44, 101, 155, 208, 233, 237, 238, 284, 299, 302, 344, 414, 440, 471, 472, 475, 484, 496], "evalu": [44, 90, 101, 132, 143, 149, 152, 156, 189, 194, 210, 233, 247, 284, 302, 310, 340, 396, 399, 400, 434, 440, 455, 469, 470, 475, 485, 489, 497, 505], "impos": [44, 46, 145, 193, 273, 404], "implicitli": [44, 193, 280, 471, 489], "settingvalu": 44, "filepattern": 44, "match": [44, 52, 76, 141, 145, 154, 156, 189, 196, 209, 273, 275, 280, 302, 325, 329, 336, 342, 360, 368, 372, 416, 427, 468, 471, 476, 478, 480, 483, 497, 502], "groupdict": 44, "dirnam": 44, "task": [44, 57, 141, 142, 194, 210, 229, 240, 328, 402, 437, 469, 476, 478, 483, 499], "account": [44, 105, 149, 152, 189, 235, 247, 279, 285, 299, 302, 304, 306, 340, 472, 481, 489, 493], "leftov": [44, 296, 299], "proprietari": [44, 436, 462, 469, 493], "commun": [44, 141, 155, 193, 340, 368, 435, 476, 502], "move": [44, 55, 75, 145, 155, 195, 204, 205, 208, 209, 273, 275, 276, 280, 283, 285, 302, 310, 312, 318, 319, 328, 336, 342, 354, 372, 387, 393, 404, 406, 456, 468, 469, 471, 472, 476, 478, 488, 493, 495, 497], "supervisori": [44, 209], "coverag": [44, 173, 290, 312, 433, 472, 483, 497], "trace": [44, 228, 299, 342, 438, 476, 485, 493, 497], "room": [44, 87, 145, 279, 468, 481, 484, 485], "eleg": 44, "page": [44, 87, 107, 113, 132, 134, 139, 225, 404, 436, 437, 439, 469, 476, 484, 485], "By": [44, 52, 75, 204, 228, 275, 319, 328, 400, 404, 448, 480, 485, 493, 496, 497, 503], "resolv": [44, 76, 192, 196, 199, 302, 304, 313, 387, 427, 472, 475], "target": [44, 75, 233, 274, 279, 302, 303, 304, 312, 319, 336, 372, 400, 401, 406, 433, 469, 470, 472, 489, 491, 493, 494, 497, 505], "additionalfil": 44, "modifiedset": 44, "writestyl": [44, 52], "modif": [44, 46, 53, 79, 86, 99, 101, 105, 128, 131, 132, 133, 134, 162, 231, 273, 274, 279, 280, 281, 282, 285, 288, 294, 306, 361, 405, 453, 456, 463, 464, 471, 472, 478, 480, 484, 485, 495], "safer": [44, 361, 439], "wonder": 44, "medium": [44, 52, 274, 285, 319, 361, 368, 472, 485], "destin": [44, 275, 318, 361, 392, 393, 412], "01": [44, 52, 78, 79, 87, 105, 109, 134, 145, 163, 231, 279, 292, 312, 428, 434, 456, 463, 464, 466, 472, 478, 482, 501], "sourcedir": 44, "forthcom": 44, "baselin": [44, 217, 299, 485], "shufflelog": [44, 75, 209, 214, 478, 484, 494, 497], "loadingfil": [44, 484, 485, 493, 496, 497], "geomfil": [44, 280, 497, 499], "respect": [44, 92, 93, 96, 157, 193, 233, 285, 332, 366, 462, 469, 503], "let": [44, 52, 101, 229, 273, 279, 284, 384, 434, 437, 469, 478, 480, 481, 482, 484, 497, 498], "union": [44, 75, 101, 152, 229, 273, 274, 302, 320, 325, 328, 342, 349, 366, 388, 396, 427], "ping": 44, "modular": [44, 75, 253, 469, 476, 480], "absolut": [44, 75, 302, 321, 328, 361, 403, 427, 475, 496], "wildcard": 44, "glob": [44, 75, 412, 471], "offer": [44, 196, 432, 442, 467, 476, 482, 486], "noth": [44, 189, 206, 214, 276, 290, 336, 340, 380, 404], "inputdirectori": [44, 360, 361, 483], "newset": [44, 53, 361], "regard": [44, 225, 475], "simplifi": [44, 90, 110, 126, 132, 141, 233, 372, 396, 484, 503], "runtim": [45, 74, 76, 191, 193, 252, 273, 310, 434, 471, 472, 480, 496], "test_inputmodifi": [45, 49], "mockgeom": [45, 49, 50, 51], "testsuitebuilderintegr": [45, 49, 50], "testsettingsmodifi": [45, 49, 50], "neutronicskernelopt": [45, 49, 50], "testfullcoremodifi": [45, 49, 50], "test_pintypeinputmodifi": [45, 49], "testblueprintmodifi": [45, 49, 51], "fail_if_aft": [45, 46, 48], "__call__": [46, 53, 483], "fail": [46, 71, 74, 145, 190, 196, 228, 260, 275, 323, 337, 360, 361, 372, 381, 384, 387, 401, 405, 412, 471, 472, 475, 476, 497], "adjust": [46, 47, 48, 51, 53, 75, 101, 225, 238, 240, 275, 279, 285, 299, 302, 304, 309, 310, 340, 341, 434, 465, 470, 472, 483, 484, 485, 488, 493, 496, 497, 505], "smear": [46, 48, 51, 279, 310, 316, 318, 468, 471, 475, 484, 485, 489], "clad": [46, 48, 51, 90, 202, 216, 229, 274, 275, 279, 290, 292, 299, 302, 305, 310, 312, 313, 319, 336, 340, 342, 448, 453, 463, 468, 469, 472, 475, 476, 478, 483, 484, 485, 489, 491, 493, 497, 498], "constuctor": 46, "paramtyp": [46, 53, 56], "space": [46, 48, 53, 74, 101, 135, 156, 193, 204, 279, 284, 296, 302, 321, 322, 327, 328, 336, 387, 388, 404, 458, 468, 469, 484, 489, 493, 496, 497], "sampl": [46, 53, 302, 336, 408, 471, 484], "quasi": [46, 53, 276, 321, 468], "random": [46, 53, 275, 330, 405, 421, 437], "discret": [46, 53, 155, 327, 336], "constructor": [46, 74, 141, 145, 193, 209, 299, 326, 327, 328, 330, 353, 399, 427], "inclus": [46, 152, 427, 476, 496], "grow": [46, 275, 305, 319, 333, 404, 406, 481, 497], "symmetr": [46, 165, 279, 306, 325, 327, 328, 336, 434, 476, 497], "besid": [46, 202], "expans": [46, 58, 76, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 101, 102, 108, 109, 112, 113, 128, 129, 130, 132, 133, 134, 137, 138, 139, 209, 240, 275, 279, 285, 296, 299, 304, 305, 312, 313, 316, 340, 341, 391, 411, 412, 434, 452, 466, 467, 469, 471, 472, 476, 478, 481, 483, 486, 489, 491, 492, 493, 497], "schedul": [46, 75, 192, 210, 440, 480, 493], "expand": [46, 58, 79, 101, 113, 133, 145, 210, 225, 275, 283, 284, 285, 290, 296, 299, 302, 304, 305, 306, 312, 320, 336, 340, 341, 346, 388, 391, 400, 431, 439, 457, 468, 471, 472, 475, 478, 481, 483, 484, 485, 493, 497, 503], "themself": 46, "settingnam": [46, 53, 63, 196, 360, 367], "settingv": 46, "conf_neutronics_typ": [46, 226, 240, 439], "conf_coarse_mesh_rebal": 46, "conf_eps_eig": 47, "conf_eps_fsavg": 47, "conf_eps_fspoint": 47, "100": [47, 77, 79, 92, 93, 96, 130, 143, 145, 203, 209, 231, 275, 279, 312, 405, 427, 440, 449, 453, 483, 484, 485, 491, 493, 496, 497, 504], "criteria": [47, 75, 173, 201, 209, 240, 279, 280, 302, 336, 494, 495, 497, 502], "multfactor": 47, "factor": [47, 101, 157, 173, 190, 193, 201, 209, 240, 275, 279, 298, 299, 302, 304, 312, 330, 336, 387, 426, 472, 478, 481, 484, 489, 491, 493, 494, 496, 497, 504], "switch": [47, 159, 196, 279, 285, 330, 336, 388, 440, 472, 484, 494], "nodal": [47, 165, 168, 240, 279, 306], "finit": [47, 157, 164, 240, 306, 323, 326, 328, 399, 475, 497], "approxim": [47, 130, 136, 226, 228, 229, 245, 296, 302, 306, 360, 406, 434, 448, 469, 483, 484, 489, 495, 496], "multipli": [47, 101, 144, 157, 189, 209, 225, 235, 240, 252, 279, 302, 399, 475, 489, 494, 497], "axial": [47, 101, 122, 165, 173, 209, 240, 274, 275, 279, 280, 282, 288, 291, 292, 294, 298, 299, 301, 304, 306, 307, 312, 317, 318, 319, 321, 323, 325, 326, 327, 328, 336, 340, 342, 400, 404, 406, 449, 471, 472, 476, 478, 484, 485, 488, 489, 491, 492, 493, 497], "_pintypeassemblymodifi": 48, "tube": [48, 279, 468, 484, 485], "fabric": [48, 202, 205, 391, 434, 489, 494], "thick": [48, 51, 301, 305, 310, 478, 484], "inner": [48, 51, 209, 210, 229, 274, 275, 279, 282, 298, 299, 301, 302, 305, 310, 319, 323, 329, 439, 472, 478, 480, 483, 484, 485, 489, 493, 497, 498], "diamet": [48, 51, 279, 298, 305, 310, 478, 483, 484, 489, 493, 498], "outer": [48, 51, 165, 210, 240, 274, 275, 279, 296, 298, 301, 302, 305, 306, 310, 319, 329, 336, 340, 388, 448, 472, 475, 478, 480, 483, 484, 489, 493, 494, 497, 498], "test_smeardensityfail": [49, 50], "test_settingsmodifi": [49, 50], "test_blueprintblockmodifi": [49, 50], "test_neutronicconvergencemodifi": [49, 50], "test_fullcoreconvers": [49, 50], "test_adjustsmeardens": [49, 51, 311, 316], "test_cladthickenessbyodmodifi": [49, 51], "test_cladthickenessbyidmodifi": [49, 51], "hex": [50, 51, 165, 168, 176, 179, 181, 206, 210, 213, 215, 229, 240, 274, 275, 279, 284, 302, 305, 306, 314, 315, 320, 321, 323, 325, 326, 327, 328, 336, 337, 340, 344, 346, 372, 388, 398, 399, 408, 446, 450, 452, 455, 463, 466, 467, 468, 469, 471, 472, 475, 476, 478, 484, 486, 488, 489, 491, 493, 496], "areafuel": 51, "smeardens": [51, 279, 489], "innercladarea": 51, "fuelod": 51, "cladid": 51, "sqrt": [51, 279, 298, 310, 328, 398, 404, 456, 457, 502], "cladthick": [51, 483], "od": [51, 275, 279, 292, 297, 298, 301, 341, 342, 455, 463, 483, 484, 485, 493, 498], "cladthic": 51, "12": [51, 75, 78, 79, 98, 138, 139, 141, 143, 145, 203, 210, 231, 323, 387, 400, 427, 434, 441, 454, 455, 456, 462, 463, 471, 478, 482, 493, 494], "24": [51, 138, 143, 145, 203, 231, 240, 299, 323, 472], "cladod": 51, "025": [51, 231], "05": [51, 78, 81, 139, 145, 231, 235, 292, 366, 405, 434, 447, 456, 463, 464, 465, 466, 472, 478, 482, 483, 493, 497], "conjunct": [52, 493], "facilit": [52, 62, 320, 337, 469, 471, 475, 476, 493], "circumst": [52, 296, 299, 318, 336, 381, 396, 434, 470, 497, 505], "meet": [52, 145, 279, 302, 323, 336, 476, 491], "uniqu": [52, 116, 142, 145, 275, 279, 302, 330, 476, 499], "rootdir": [52, 360], "ignorepattern": [52, 360], "won": [52, 55, 74, 166, 193, 389, 404, 427, 485], "deleg": [52, 208], "oldroot": 52, "thought": [52, 192, 441, 488], "benefici": [52, 63, 436, 439, 469], "person": 52, "consequ": [52, 141, 142, 153, 299, 330, 437, 476], "infer": [52, 97, 98, 279, 370, 493, 496, 499], "mirror": [52, 202, 475, 480], "tableresult": 52, "perturb": [53, 75, 101, 228, 240, 279, 301, 302, 310, 336, 469, 476, 483], "combin": [53, 101, 131, 145, 163, 189, 302, 306, 319, 320, 321, 328, 349, 387, 396, 480, 483, 489, 496], "modifierset": [53, 483], "pop": [53, 196, 321, 327, 456], "degre": [53, 77, 78, 92, 93, 96, 101, 110, 206, 279, 302, 306, 326, 336, 388, 400, 427, 483, 488, 489, 491], "freedom": [53, 483], "sweepbuild": 53, "exact": [53, 143, 172, 202, 233, 275, 297, 299, 302, 326, 336, 342, 401, 434, 493, 496], "callabl": [53, 74, 196, 273, 274, 302, 333, 336, 367], "signatur": [53, 156, 209, 280, 290, 323, 326, 328, 329, 341, 346, 426, 440, 471], "amount": [53, 240, 306, 312, 332, 440, 468, 476, 478, 489, 491, 493], "inputmodifierset": 53, "namingfunc": 53, "meaning": [53, 196, 273, 299, 333, 368, 388, 427, 469, 475, 480], "0000": [53, 153, 483], "four": [53, 302, 323, 476, 493], "digit": [53, 84, 138, 142, 157, 228, 336, 387, 400, 469], "settingmodifi": 53, "settignnam": 53, "builder": [53, 273, 394, 431, 472, 483, 493], "somecas": 53, "settingname1": 53, "settingname2": 53, "noisefract": 53, "nois": 53, "avoid": [53, 75, 209, 225, 228, 229, 305, 318, 340, 387, 401, 404, 435, 437, 471, 472, 485, 493, 497, 502], "statist": [53, 483], "postprocessor": 53, "caution": [53, 275], "ongo": [53, 59, 310, 469], "research": [53, 113, 480], "isol": [53, 476, 483], "latin": [53, 472], "hypercub": [53, 472], "lh": 53, "evenli": [53, 302, 437, 496], "fewer": [53, 276, 336, 433], "randomli": 53, "nonoverlap": 53, "partit": 53, "recommend": [53, 75, 202, 229, 279, 305, 323, 326, 329, 330, 392, 436, 438, 469, 470, 480, 484, 489, 497, 505], "surrog": [53, 281], "unlik": [53, 250, 276, 323, 327, 333, 436], "modfier": 53, "inputparametermodifi": 53, "pararmtyp": 53, "test_summarizedesign": [54, 55], "test_independentvari": [54, 55], "test_setuptaskdepend": [54, 55], "test_getcoveragercfil": [54, 55], "test_startcoverag": [54, 55], "test_endcoverag": [54, 55], "test_startprofil": [54, 55], "test_endprofil": [54, 55], "test_run": [54, 55], "test_clon": [54, 55], "test_dependencieswithobscurepath": [54, 55], "test_dependencyfromdbnam": [54, 55], "test_dependencyfromexplictrepeatshuffl": [54, 55], "test_explicitdepend": [54, 55], "test_titlesettergett": [54, 55], "test_buildcommand": [54, 55], "test_writeinput": [54, 55], "test_copyinputshelp": [54, 55], "test_copyinterfaceinputs_singlefil": [54, 55], "test_copyinterfaceinputs_nonfilepath": [54, 55], "test_copyinterfaceinputs_multiplefil": [54, 55], "test_copyinterfaceinputs_wildcardfil": [54, 55], "test_copyinterfaceinputs_relpath": [54, 55], "test_copyinterfaceinputs_abspath": [54, 55], "test_initi": [54, 56], "test_buildsuit": [54, 56], "test_adddegreeoffreedom": [54, 56], "assert": [55, 122, 196, 201, 242, 312, 346, 422, 440], "bonu": [55, 479, 489], "damag": [55, 144, 203], "pathlib": 55, "event": [57, 233, 456, 463, 464, 472, 476, 478, 497, 501], "submitsuit": 57, "prog": 57, "epilog": 57, "formatter_class": 57, "argpars": [57, 63, 432], "helpformatt": 57, "prefix_char": 57, "fromfile_prefix_char": 57, "argument_default": 57, "conflict_handl": 57, "add_help": 57, "allow_abbrev": 57, "exit_on_error": 57, "argumentpars": [57, 63], "exit": [57, 63, 74, 332, 392, 497], "test_runentrypoint": [57, 70], "testinitializationentrypoint": [57, 70, 71], "testcheckinputentrypoint": [57, 70, 71], "testclonearmiruncommandbatch": [57, 70, 71], "testclonesuitecommand": [57, 70, 71], "testcomparecas": [57, 70, 71], "testcomparesuit": [57, 70, 71], "testconvertdb": [57, 70, 71], "testexpandblueprint": [57, 70, 71], "testextractinput": [57, 70, 71], "testinjectinput": [57, 70, 71], "testmigrateinput": [57, 70, 71], "testmodifycasesettingscommand": [57, 70, 71], "testreportsentrypoint": [57, 70, 71], "testcompareisotxslibsentrypoint": [57, 70, 71], "testrunentrypoint": [57, 70, 71], "testrunsuitecommand": [57, 70, 71], "testvisfileentrypointcommand": [57, 70, 71], "test_runsuit": [57, 70], "testrunsuitesuit": [57, 70, 72], "parse_arg": [57, 62, 63], "createoptionfromset": [57, 63, 432], "needlessli": [58, 63, 488], "clutter": [58, 63], "inconsist": [58, 75, 229, 327, 333, 336], "abil": [58, 101, 209, 214, 275, 279, 328, 339, 404, 427, 439, 471, 472, 475], "occasion": [59, 273, 396], "break": [59, 74, 91, 145, 193, 279, 302, 330, 333, 382, 399, 433, 437, 439, 440, 441, 475], "comparison": [61, 302, 320, 336, 372, 468, 472, 476], "handi": [62, 469, 499], "overwrit": [62, 165, 302, 306, 361, 387, 431, 439, 496], "inject": [62, 283, 285, 386], "overrid": [63, 141, 209, 273, 283, 285, 350, 367, 387, 434, 437, 493, 497], "add_argu": [63, 432], "sub": [63, 141, 156, 193, 204, 279, 334, 469, 493], "exitcod": 63, "success": [63, 75, 193, 229, 366, 403], "additionalalia": 63, "suppresshelp": 63, "additionalalis": 63, "care": [63, 74, 189, 193, 226, 273, 279, 285, 302, 334, 336, 403, 427, 433, 439, 440, 441, 469, 493, 496, 499], "distinct": [63, 193, 333, 439, 485], "supresshelp": 63, "suppress": [63, 360], "messag": [63, 75, 273, 331, 350, 368, 373, 390, 427, 433, 435, 437, 468, 471, 476, 493, 501], "almost": [63, 156, 165, 302, 319, 416, 441, 469], "booldefault": 63, "ep": [63, 201, 307, 372], "editor": [64, 388, 470, 471, 476, 484, 495, 496, 505], "spin": [64, 152, 235], "keyword": [66, 273, 336, 435], "numprocessor": [66, 484, 485, 497], "machin": [69, 194, 209, 214, 404, 406, 469, 470, 478, 505], "mpirun": [69, 345], "mpiexec": [69, 74, 381, 437], "test_entrypointiniti": [70, 71], "test_checkinputentrypointbas": [70, 71], "test_checkinputentrypointinvok": [70, 71], "test_clonearmiruncommandbatchbas": [70, 71], "test_clonearmiruncommandbatchinvokeshort": [70, 71], "test_clonearmiruncommandbatchinvokemedium": [70, 71], "test_clonesuitecommandbas": [70, 71], "test_comparecasesbas": [70, 71], "test_comparesuitesbas": [70, 71], "test_convertdbbas": [70, 71], "test_convertdboutputvers": [70, 71], "test_convertdboutputnod": [70, 71], "test_expandblueprintsbas": [70, 71], "test_extractinputsbas": [70, 71], "test_injectinputsbas": [70, 71], "test_injectinputsinvokeignor": [70, 71], "test_injectinputsinvokenodata": [70, 71], "test_migrateinputsbas": [70, 71], "test_modifycasesettingscommandbas": [70, 71], "test_modifycasesettingscommandinvok": [70, 71], "test_reportsentrypointbas": [70, 71], "test_compareisotxslibsbas": [70, 71], "test_runentrypointbas": [70, 71], "test_runcommandhelp": [70, 71], "test_executecommand": [70, 71], "test_runsuitecommandbas": [70, 71], "test_visfileentrypointbas": [70, 71], "test_listcommand": [70, 72], "test_showvers": [70, 72], "But": [71, 145, 159, 245, 276, 279, 299, 327, 336, 350, 387, 400, 433, 437, 440, 441, 447, 469, 480, 481, 485, 498], "fiction": 71, "pytest": [73, 381, 382, 433, 440, 469, 471], "act": [73, 190, 207, 275, 302, 329, 332, 336, 361, 399, 439, 478, 497], "stop": [73, 327, 389, 427, 462, 469, 475], "shop": 73, "submodul": [73, 351, 430, 431], "larger": [73, 400, 441, 484, 485, 493], "project": [73, 155, 301, 394, 432, 433, 436, 441, 458, 459, 469, 470, 476, 480, 505], "session": [73, 193, 404, 471, 485], "circumstatc": 74, "packag": [74, 75, 190, 193, 195, 273, 302, 328, 333, 396, 427, 430, 434, 435, 436, 440, 469, 470, 475, 476, 478, 479, 480, 499, 505], "termin": [74, 141, 399, 434, 470, 476, 479, 505], "lastli": [74, 484], "forc": [74, 145, 247, 275, 304, 305, 333, 336, 361, 394, 400, 412, 434, 441, 472, 478, 497], "classmethod": [74, 75, 141, 155, 156, 189, 229, 280, 281, 283, 285, 302, 319, 320, 322, 323, 329, 332, 333, 337, 368, 392, 396], "fast_path": [74, 193, 471], "drive": [74, 204, 296, 403, 440, 448, 484, 497], "processor": [74, 141, 194, 229, 247, 352, 378, 427, 437, 476, 478, 484], "mpi_rank": 74, "obliter": 74, "danger": 74, "disconnect": 74, "offici": [74, 150, 164, 333, 441], "olderthandai": 74, "sigbreak": 74, "cancel": [74, 240, 302, 368, 502], "atexit": 74, "notabl": [74, 499], "microsoft": [74, 469], "taskcancelgraceperiod": 74, "sigterm": 74, "sigint": 74, "older": [74, 91, 142, 471], "unrel": [74, 441], "dai": [74, 155, 193, 201, 273, 275, 334, 387, 400, 426, 439, 468, 469, 478, 484, 488, 489, 490, 491, 496, 497, 504], "earlier": [74, 332], "concurr": 74, "forcibli": 74, "hack": [74, 367, 488], "gracefulli": [74, 302], "destroi": [74, 489], "lot": [74, 80, 82, 141, 142, 189, 193, 226, 235, 285, 302, 336, 372, 405, 432, 433, 437, 440, 441, 469, 470, 478, 485, 493, 505], "caus": [74, 163, 190, 196, 299, 302, 305, 318, 334, 336, 355, 393, 433, 440, 470, 472, 489, 493, 505], "why": [74, 174, 275, 279, 427, 436, 485], "never": [74, 153, 202, 226, 247, 279, 284, 285, 296, 326, 437, 439, 440, 497], "appear": [74, 86, 210, 273, 349, 360, 367, 404, 420, 427, 478], "repr": 74, "ing": 74, "manual": [74, 145, 147, 149, 165, 179, 188, 189, 233, 245, 276, 285, 303, 312, 319, 336, 349, 354, 469, 478, 482, 496, 497], "learn": [75, 457, 458, 459, 469, 492], "architectur": [75, 193, 273, 342, 435, 469, 480], "els": [75, 76, 156, 157, 196, 209, 210, 245, 247, 275, 279, 302, 320, 336, 387, 394, 404, 437, 465, 475, 478, 483, 494], "createinterfac": [75, 192, 193, 197, 434], "importerror": 75, "subset": [75, 141, 228, 285, 302, 303, 317, 391, 411, 412, 471, 493], "everyth": [75, 145, 165, 190, 191, 194, 240, 302, 330, 403, 437, 484], "globalflux": [75, 193, 202, 226, 366, 502], "globalfluxinterfac": [75, 226, 239, 242, 472], "10": [75, 79, 87, 90, 102, 110, 111, 122, 132, 133, 138, 143, 144, 145, 152, 155, 156, 157, 161, 163, 165, 166, 201, 209, 210, 231, 240, 279, 284, 288, 292, 294, 299, 302, 306, 312, 323, 333, 341, 372, 399, 400, 404, 426, 427, 434, 437, 440, 455, 458, 459, 460, 463, 465, 469, 471, 472, 478, 481, 482, 483, 484, 485, 493, 494, 496, 497], "maxit": 75, "epsilon": [75, 372, 502], "maximum": [75, 101, 142, 209, 229, 279, 302, 319, 336, 387, 400, 404, 475, 488, 489, 491, 494, 497], "val": [75, 101, 156, 186, 235, 279, 296, 299, 301, 302, 318, 336, 367, 387, 400, 404, 405, 421, 478], "_supported_typ": 75, "commonli": [75, 101, 152, 240, 372, 388, 403, 432, 497], "equal": [75, 141, 149, 155, 157, 159, 161, 163, 166, 190, 193, 209, 247, 279, 296, 298, 302, 307, 327, 340, 367, 372, 387, 388, 400, 404, 405, 437, 457, 465, 475, 484, 496, 503], "typeerror": [75, 367, 370, 429], "met": [75, 279, 502], "recent": [75, 165, 469, 488], "critera": [75, 302], "On": [75, 155, 161, 302, 436, 469, 470, 481, 483, 505], "condit": [75, 141, 145, 153, 196, 204, 216, 226, 240, 247, 273, 275, 279, 320, 323, 325, 347, 393, 399, 468, 469, 475, 483, 484, 485, 497], "stale": [75, 240, 333, 472], "increment": [75, 272, 279, 388, 398, 400, 496], "clear": [75, 101, 145, 154, 189, 228, 275, 279, 299, 302, 306, 317, 318, 333, 336, 431, 440, 472, 484], "2d": [75, 79, 85, 100, 101, 133, 188, 229, 297, 301, 326, 327, 328, 378, 400, 434, 472], "3d": [75, 79, 85, 100, 101, 290, 299, 301, 327, 341, 378, 458, 459, 480], "norm": [75, 478, 502], "listtocheck": 75, "dim": [75, 279, 304, 455, 485], "eponym": 75, "contract": [75, 113, 299, 304, 312, 476, 489, 492], "categori": [75, 201, 216, 240, 247, 274, 319, 330, 333, 336, 378, 456, 463, 464, 472, 475, 478, 500], "driver": [75, 229, 274, 302, 305, 313, 319, 437, 497], "neutronsperfiss": 75, "torestor": 75, "restor": [75, 101, 299, 302, 325, 328, 332, 333, 340, 350, 476], "distributest": [75, 141, 381], "quiet": [75, 101, 302], "callback": 75, "pickl": [75, 275, 302, 325, 332, 380, 387], "detach": [75, 192, 193, 327], "deepcopi": [75, 101, 235, 275, 280, 472], "immedi": [75, 302, 305, 326, 328, 330, 334, 336, 469], "occur": [75, 101, 141, 143, 145, 147, 153, 193, 208, 209, 273, 285, 312, 313, 330, 336, 368, 427, 434, 440, 482, 488, 489, 491, 493], "subcycl": [75, 193], "repeatedli": 75, "retriev": [75, 142, 143, 145, 174, 190, 191, 237, 299, 302, 304, 330, 336, 341, 392, 471, 476, 478, 482, 497], "peripher": [75, 193, 210, 228], "cr": [75, 84, 143, 145, 197, 240, 285, 292, 342, 478, 483, 484, 493], "worth": [75, 155, 197, 209, 240, 427, 439, 440, 441, 469, 489, 491], "theori": [75, 157, 302], "_cmd": 75, "incom": [75, 165, 179, 209, 476], "statu": [75, 304, 330, 368, 431, 470, 476, 497, 505], "statement": [75, 194, 196, 240, 302, 312, 328, 331, 368, 392, 427, 435, 437, 475], "wrong": [75, 279, 292, 302, 404, 436], "innam": [75, 240], "outnam": [75, 240], "interpol": [75, 112, 113, 275, 279, 400], "anywher": [75, 336, 480, 494], "failur": [75, 290, 302, 305, 382, 436, 493], "advent": [75, 275], "perhap": [75, 273, 327, 469, 496], "externalcodeinterfac": [75, 240, 245, 248], "eci": [75, 251], "involv": [75, 204, 336, 469, 475, 493, 502], "klass": [75, 332, 394], "namedtupl": [75, 327], "addinterfac": [75, 192, 193], "ultim": [75, 209, 273, 274, 312, 319, 334, 336, 478, 483, 484, 502], "field": [75, 134, 193, 302, 304, 312, 328, 330, 354, 367, 387, 396, 484, 493, 496], "scope": [76, 209, 233, 303, 372, 436, 469, 472, 478, 480, 483, 485, 496, 497], "thermo": [76, 299, 434, 476, 493], "heat": [76, 77, 89, 92, 93, 96, 97, 98, 101, 109, 117, 133, 134, 202, 270, 321, 340, 434, 469, 476, 480, 481, 485, 488, 489, 495, 497], "capac": [76, 77, 89, 92, 93, 96, 97, 98, 101, 109, 133, 134, 193, 434, 475, 480, 481, 484, 496], "linear": [76, 78, 79, 80, 84, 90, 92, 93, 96, 101, 102, 108, 109, 113, 128, 129, 130, 132, 133, 134, 137, 138, 139, 275, 279, 299, 312, 318, 400, 472, 478, 481, 483, 484, 489, 503], "viscos": [76, 98], "nuclear": [76, 80, 82, 83, 87, 101, 134, 142, 143, 145, 152, 153, 154, 155, 166, 174, 184, 202, 205, 225, 226, 233, 245, 302, 388, 434, 468, 475, 476, 478, 480, 482, 485, 491, 493], "alon": [76, 228, 299, 302, 455], "thermal": [76, 77, 78, 79, 80, 87, 89, 90, 92, 93, 94, 96, 98, 101, 105, 108, 109, 110, 113, 128, 130, 133, 134, 136, 137, 139, 150, 152, 216, 225, 267, 269, 270, 271, 296, 299, 302, 304, 305, 312, 313, 316, 333, 336, 340, 341, 433, 452, 466, 467, 469, 471, 472, 475, 476, 478, 479, 481, 484, 486, 489, 491, 492, 493, 496, 497, 498], "scatter": [76, 80, 87, 101, 109, 134, 136, 141, 150, 152, 157, 163, 172, 186, 188, 189, 190, 191, 240, 252, 452, 454, 458, 459, 466, 467, 471, 482, 485, 486, 489, 497], "law": [76, 150, 152, 433, 469, 484], "macroscop": [76, 157, 189, 190, 240, 252, 472, 485, 497], "highli": [76, 208, 229, 438, 456, 470, 484, 505], "team": [76, 433, 441, 469, 480], "updatesourc": 76, "dev": [76, 384, 469, 470, 505], "resolut": [76, 196, 330, 471], "formal": [76, 319, 332, 471, 473, 480], "registri": [76, 273], "data_sourc": [76, 101], "sai": [76, 159, 187, 189, 196, 273, 319, 350, 360, 398, 433, 437, 439, 441, 469, 484, 494], "namespaceord": 76, "latter": [76, 290], "conf_material_namespace_ord": 76, "kentucki": 76, "transport": [76, 77, 110, 160, 165, 202, 226, 240, 252, 275, 318, 469, 472, 476, 484, 489], "cabinet": 76, "colon": [76, 480], "classnam": [76, 394, 493], "prefer": [76, 153, 273, 302, 304, 328, 336, 352, 367, 389, 435, 470, 480, 494, 505], "material_namespace_ord": 76, "modulepath": [76, 403], "matcl": [76, 462], "test__init__": [76, 115], "bettersubclasscheck": [76, 115, 116], "materials__init__test": [76, 115, 116], "test_air": [76, 115], "test_b4c": [76, 115], "b4c_testcas": [76, 115, 118], "test_be9": [76, 115], "test_graphit": [76, 115], "graphite_testcas": [76, 115, 120], "test_lithium": [76, 115], "lithium_testcas": [76, 115, 121], "test_materi": [76, 115], "materialconstructiontest": [76, 115, 122], "materialfindingtest": [76, 115, 122], "californium_testcas": [76, 115, 122], "cesium_testcas": [76, 115, 122], "magnesium_testcas": [76, 115, 122], "magnesiumoxide_testcas": [76, 115, 122], "molybdenum_testcas": [76, 115, 122], "mox_testcas": [76, 115, 122], "nacl_testcas": [76, 115, 122], "niobiumzirconium_testcas": [76, 115, 122], "potassium_testcas": [76, 115, 122], "scandiumoxide_testcas": [76, 115, 122], "sodium_testcas": [76, 115, 122], "tantalum_testcas": [76, 115, 122], "thoriumuraniummetal_testcas": [76, 115, 122], "uranium_testcas": [76, 115, 122], "uraniumoxide_testcas": [76, 115, 122], "thorium_testcas": [76, 115, 122], "thoriumoxide_testcas": [76, 115, 122, 125], "void_testcas": [76, 115, 122], "mixture_testcas": [76, 115, 122], "lead_testcas": [76, 115, 122], "leadbismuth_testcas": [76, 115, 122], "copper_testcas": [76, 115, 122], "sulfur_testcas": [76, 115, 122, 124], "zr_testcas": [76, 115, 122], "inconel_testcas": [76, 115, 122], "inconel600_testcas": [76, 115, 122], "inconel625_testcas": [76, 115, 122], "inconelx750_testcas": [76, 115, 122], "alloy200_testcas": [76, 115, 122], "cah2_testcas": [76, 115, 122], "hafnium_testcas": [76, 115, 122], "hastelloyn_testcas": [76, 115, 122], "tzm_testcas": [76, 115, 122], "yttriumoxide_testcas": [76, 115, 122], "zincoxide_testcas": [76, 115, 122], "fuelmaterial_testcas": [76, 115, 122], "test_sic": [76, 115], "test_sulfur": [76, 115], "test_thoriumoxid": [76, 115], "test_uzr": [76, 115], "uzr_testcas": [76, 115, 126], "test_wat": [76, 115], "propertyvalidtemperatur": [76, 77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139], "setdefaultmassfrac": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139], "pseudodens": [76, 77, 79, 85, 86, 97, 98, 99, 100, 101, 107, 109, 110, 112, 131, 133, 135, 136, 472], "specificvolumeliquid": [76, 77, 110], "thermalconduct": [76, 77, 89, 90, 92, 93, 96, 98, 99, 101, 109, 110, 128, 129, 130, 133, 134, 139, 498], "heatcapac": [76, 77, 89, 92, 93, 96, 97, 98, 99, 101, 109, 133, 134, 480, 481], "modelconst": [76, 78, 101], "referencemaxpercentimpurit": [76, 78], "linearexpansiontablek": [76, 78, 139], "linearexpansiont": [76, 78, 139], "linearexpans": [76, 78, 92, 93, 96, 101, 128, 129, 130, 133, 134, 139], "enrichednuclid": [76, 79, 86, 99, 101, 105, 128, 131, 132, 133, 134, 299], "applyinputparam": [76, 79, 99, 101, 105, 112, 128, 130, 131, 132, 133, 134], "updatetd": [76, 79, 112], "setnewmassfracsfrommassenrich": [76, 79], "getmassenrichmentfromnumenrich": [76, 79], "linearexpansionperc": [76, 79, 80, 84, 87, 89, 90, 92, 93, 94, 96, 101, 102, 108, 113, 130, 132, 133, 134, 137, 138, 139, 311, 312, 503], "thermalscatteringlaw": [76, 80, 87, 101, 109, 134, 136], "meltingpoint": [76, 85, 99, 105, 109, 128, 129, 130, 133, 134], "setmassfrac": [76, 86, 101, 274, 302], "materialintro": [76, 89, 133], "reftempk": [76, 89, 92, 93, 94, 96, 101, 109, 139], "meancoefficientthermalexpans": [76, 89, 94], "polyfitthermalconduct": [76, 92, 93, 96], "polyfitheatcapac": [76, 92, 93, 96], "polyfitlinearexpansionperc": [76, 92, 93, 96], "volumetricexpans": [76, 97, 98, 101, 112], "dynamicvisc": [76, 98], "boilingpoint": [76, 99], "getchildren": [76, 101, 274, 302, 338, 342, 478], "getchildrenwithflag": [76, 101, 274, 302, 338, 342], "backup": [76, 101, 274, 296, 299, 302, 321, 325, 328, 330, 332, 333], "restorebackup": [76, 101, 274, 296, 299, 302, 321, 325, 328, 330, 332, 333], "clearcach": [76, 101, 274, 296, 299, 302], "linearexpansionfactor": [76, 101, 481, 503], "getthermalexpansiondensityreduct": [76, 101], "adjustmassenrich": [76, 101, 274, 296, 299, 302], "adjustmassfrac": [76, 101, 274, 302], "gettemperatureatdens": [76, 101], "liquidporos": [76, 101, 296, 299, 489], "gasporos": [76, 101, 296, 299, 489], "pseudodensitykgm3": [76, 101], "densitykgm3": [76, 101], "getcorrosionr": [76, 101], "yieldstrength": [76, 101], "getproperti": [76, 101, 296, 299, 498], "getmassfrac": [76, 101, 232, 235, 274, 302], "clearmassfrac": [76, 101], "removenucmassfrac": [76, 101], "getmassfraccopi": [76, 101], "checkpropertytemprang": [76, 101], "checktemprang": [76, 101], "densitytimesheatcapac": [76, 101, 472], "gettempchangefordensitychang": [76, 101], "gettd": [76, 101], "adjusttd": [76, 101], "class1_wt_frac": [76, 101, 391, 493], "class1_custom_isotop": [76, 101, 493], "class2_custom_isotop": [76, 101, 493], "pufrac": [76, 101, 302, 472, 489], "ufrac": [76, 101], "zrfrac": [76, 101, 490], "getmassfracpuo2": [76, 105], "setmassfracpuo2": [76, 105], "getmolfracpuo2": [76, 105], "propertyequ": [76, 109, 133], "propertyunit": [76, 109, 133, 134], "propertynot": [76, 109, 133], "cumulativelinearexpans": [76, 109], "enthalpi": [76, 110, 136], "temperaturec": [76, 113], "percentthermalexpans": [76, 113], "getenrich": [76, 128, 296, 299, 471], "zrfracdefault": [76, 132], "ufracdefault": [76, 132], "propertyrawdata": [76, 133], "refden": [76, 78, 101, 133, 478], "ea": [76, 134], "c1": [76, 134], "c2": [76, 134], "c3": [76, 134], "reference_temperatur": [76, 134], "thermalconductivitytablek": [76, 134], "thermalconductivityt": [76, 134], "temperature_critical_k": [76, 136], "density_critical_kgpercubicmet": [76, 136], "density_critical_gpercubiccentimet": [76, 136], "vapor_pressure_critical_mpa": [76, 136], "vapor_pressure_critical_pa": [76, 136], "alpha_0": [76, 136], "phi_0": [76, 136], "tau": [76, 136], "vaporpressur": [76, 136], "vaporpressureprim": [76, 136], "auxiliaryquantityspecificenthalpi": [76, 136], "auxiliaryquantityspecificentropi": [76, 136], "entropi": [76, 136], "Near": 77, "sea": 77, "correl": [77, 92, 93, 96, 136, 203, 225, 429], "incropera": [77, 117], "frank": [77, 117], "et": [77, 89, 105, 117, 134, 469], "al": [77, 89, 105, 117, 134, 143, 145, 292, 342, 356, 469, 485, 493], "mass": [77, 79, 81, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 110, 112, 117, 122, 130, 131, 132, 134, 142, 143, 144, 145, 202, 205, 209, 225, 235, 275, 279, 285, 292, 296, 299, 302, 303, 304, 306, 312, 316, 318, 333, 336, 340, 341, 342, 391, 411, 434, 448, 449, 453, 462, 468, 471, 472, 475, 476, 478, 480, 481, 482, 488, 489, 490, 491, 493, 497, 504], "transfer": [77, 117, 202, 270, 318, 437, 489, 500], "vol": [77, 107, 109, 117, 139, 225, 279, 302, 453, 478], "york": [77, 107, 117, 139], "wilei": [77, 117], "2002": [77, 117], "pnnl": [77, 117], "15870": [77, 117], "rev": [77, 117], "www": [77, 78, 80, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 110, 127, 128, 129, 130, 136, 174, 333, 469, 484], "gov": [77, 87, 90, 105, 110, 134, 142, 152, 165, 174], "technical_report": 77, "15870rev1": 77, "1300": [77, 89, 98], "2400": [77, 133, 134], "conduct": [77, 89, 90, 92, 93, 96, 98, 101, 105, 109, 110, 128, 130, 133, 134, 139, 225, 434, 478, 481, 493, 498], "200": [77, 78, 122, 145, 231, 400, 483], "850": 77, "temperature_lower_limit": [77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139], "temperature_upper_limit": [77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139], "temperature_unit": [77, 78, 79, 80, 84, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 130, 133, 134, 137, 138, 139], "mcconn": 77, "ronald": 77, "j": [77, 89, 90, 92, 93, 96, 97, 98, 100, 101, 107, 109, 110, 132, 133, 134, 136, 157, 165, 167, 168, 172, 189, 225, 284, 302, 321, 323, 325, 326, 327, 328, 329, 336, 341, 388, 434, 457, 458, 459, 469, 471, 481, 502], "compendium": 77, "radiat": [77, 83, 202, 469], "pacif": 77, "northwest": 77, "nation": [77, 89, 105, 134, 144, 155, 165, 468, 469], "lab": [77, 144, 469], "richland": 77, "2011": [77, 89, 155], "tk": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 312, 429, 481], "tc": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 296, 297, 298, 299, 301, 302, 312, 342, 429, 481, 498], "cc": [77, 81, 97, 98, 99, 101, 107, 110, 131, 133, 134, 136, 155, 240, 299, 302, 391, 481, 489, 499], "dewitt": 77, "kelvin": [77, 78, 92, 93, 96, 101, 110, 136, 299, 429], "celsiu": [77, 78, 92, 93, 96, 101, 110, 299, 429], "liquid": [77, 85, 99, 100, 101, 110, 112, 136, 142, 143, 152, 299, 484, 489], "kg": [77, 89, 92, 93, 96, 97, 98, 101, 109, 110, 133, 134, 136, 481, 488, 489, 490, 504], "alloi": [78, 89, 91, 93, 94, 95, 106, 122, 131, 132, 472], "wrought": 78, "commerci": [78, 468, 469], "nickel": [78, 89, 91, 143], "201": [78, 145], "sheet": [78, 113], "jacquet": 78, "biz": 78, "usa": 78, "jcqusa": 78, "citat": [78, 91, 92, 93, 95, 96, 99, 101, 109, 113, 133, 134, 136, 139], "literatur": [78, 91, 92, 93, 95, 96, 99, 101, 105, 109, 113, 133, 134, 136, 139, 481], "trefa": 78, "20": [78, 81, 89, 92, 94, 143, 145, 153, 157, 231, 257, 292, 299, 323, 341, 399, 455, 463, 466, 478, 483, 484, 493, 494, 497], "a0": 78, "2162e": 78, "3001e": 78, "09": [78, 145, 342, 434, 455, 471, 472, 478, 482, 493], "94985e": 78, "intepol": [78, 101], "lookup": [78, 101, 144, 233, 260, 273, 275, 279, 318, 333, 336, 343, 349, 398, 475, 476], "73": [78, 133, 143, 145, 203, 231], "15": [78, 89, 92, 93, 94, 96, 102, 105, 108, 109, 130, 134, 137, 139, 143, 145, 201, 210, 231, 279, 323, 391, 426, 447, 455, 465, 471, 478, 484, 493, 496, 497], "1273": [78, 102], "mn": [78, 143, 145, 292, 342, 356, 478, 483, 493], "35": [78, 79, 143, 145, 203, 231], "si": [78, 109, 143, 145, 292, 342, 478, 483, 493], "25": [78, 79, 143, 145, 203, 231, 275, 284, 291, 292, 312, 326, 341, 342, 404, 459, 471, 478, 481, 483, 484, 485, 493, 497], "fe": [78, 142, 143, 144, 145, 285, 292, 342, 455, 460, 478, 483, 493], "173": [78, 145], "373": [78, 89, 450], "573": [78, 231], "673": 78, "773": [78, 231], "873": 78, "973": [78, 89], "1073": 78, "1173": [78, 89, 133, 231, 472], "01e": 78, "13e": [78, 139], "33e": [78, 109], "39e": 78, "43e": 78, "48e": 78, "52e": [78, 485], "56e": 78, "58e": 78, "62e": 78, "65e": [78, 485], "67e": 78, "instantan": [78, 92, 93, 96, 101, 468], "half": [78, 149, 153, 164, 209, 275, 306, 328, 339, 340, 476, 482, 491, 493], "impur": [78, 469], "ni": [78, 143, 145, 292, 302, 342, 478, 483, 493], "boron": [79, 118, 143, 279, 299, 302, 482], "carbid": [79, 109, 118], "difficulti": 79, "real": [79, 155, 165, 168, 192, 193, 226, 235, 240, 279, 299, 302, 318, 325, 336, 400, 404, 432, 437, 448, 480, 483, 485, 496, 497], "td_frac": [79, 101, 105, 112, 130, 133, 134, 472, 493], "b10": [79, 145, 285, 342, 460, 478, 489], "enrich": [79, 86, 99, 101, 105, 128, 131, 132, 133, 134, 209, 275, 279, 299, 302, 336, 341, 391, 404, 469, 478, 484, 485, 489, 493, 494], "percent": [79, 80, 81, 84, 90, 92, 93, 96, 101, 102, 108, 113, 130, 131, 133, 134, 137, 138, 139, 159, 189, 304, 312, 336, 453, 468, 469, 472, 478, 483, 489, 491, 497], "500": [79, 139, 231, 341, 342, 453, 472, 478, 481, 483, 484, 498], "b10_wt_frac": [79, 493], "theoretical_dens": [79, 493], "massenrich": [79, 101], "boron10massgram": 79, "boron11massgram": 79, "carbonmassgram": 79, "012": [79, 203, 478], "009": [79, 478], "carbon": [79, 87, 143, 150, 152], "0107": 79, "mole": [79, 105, 130, 144, 279, 299, 302, 480, 489], "gram": [79, 81, 105, 130, 144, 149, 279, 299, 302, 478, 497], "199": [79, 145], "969552": 79, "801": [79, 153], "272836": 79, "mi": [79, 292, 462], "mb10": 79, "nb10": 79, "ab10": 79, "nb11": 79, "ab11": 79, "natur": [79, 97, 101, 134, 142, 143, 144, 145, 147, 233, 273, 285, 292, 302, 323, 336, 354, 391, 433, 434, 454, 469, 471, 475, 476, 478, 481, 482, 483, 493], "19": [79, 105, 113, 133, 143, 145, 203, 231, 292, 323, 472, 478], "80": [79, 143, 145, 231, 497], "811": 79, "96796": 79, "27604": 79, "55": [79, 105, 110, 143, 145, 231], "2547": 79, "naturalb10numberfract": 79, "preliminari": 79, "beryllium": [80, 119, 143], "metal": [80, 84, 90, 94, 113, 128, 129, 131, 133, 139, 143, 145, 152, 225, 279, 302, 336, 342, 391, 468, 478, 482, 484, 489, 490, 491, 493, 497], "2n": [80, 153, 189, 244, 461, 465, 476], "reaction": [80, 153, 166, 177, 189, 190, 226, 240, 242, 244, 302, 318, 404, 452, 466, 467, 469, 471, 486, 489], "inhal": 80, "hazard": 80, "compound": [80, 87, 109, 132, 134, 136, 152, 229, 354, 366], "Be": [80, 152, 302, 433, 441, 469, 471], "frozenset": [80, 87, 109, 134, 136], "BE": [80, 143, 145, 342], "012183e": [80, 145], "00": [80, 136, 145, 434, 450, 466, 482], "50": [80, 143, 145, 231, 275, 341, 394, 399, 441, 449, 469, 493, 496, 497], "1560": 80, "ferp": 80, "ucsd": 80, "edu": [80, 157], "prop": 80, "pano": 80, "fusion": 80, "fedee": 80, "141": [80, 145, 231], "234": [80, 145, 427, 482], "1987": 80, "calcium": [81, 143], "hydrid": 81, "calciumhydrid": 81, "atom": [81, 101, 105, 142, 143, 144, 145, 152, 155, 189, 203, 229, 235, 240, 257, 279, 299, 302, 305, 306, 318, 391, 468, 469, 475, 476, 478, 482, 485, 488, 489, 490, 491, 493, 497], "kaeri": 81, "kr": [81, 143, 145, 342, 404], "ton": 81, "iso": [81, 145, 496], "abund": [81, 142, 144, 145, 159, 174, 292, 454, 476, 482], "ca": [81, 109, 143, 145, 342, 493], "40": [81, 84, 143, 145, 165, 231, 387, 483], "96": [81, 143, 145, 231, 485], "941": [81, 231], "39": [81, 143, 145, 203, 231, 478, 481, 482, 483], "9625912": 81, "42": [81, 105, 143, 145, 231, 405, 485], "647": [81, 127, 136, 203], "41": [81, 143, 145, 203, 231], "9586183": 81, "43": [81, 84, 143, 145, 203, 231, 478], "135": [81, 136, 145, 231], "9587668": 81, "44": [81, 113, 143, 145, 231], "086": 81, "9554811": 81, "46": [81, 143, 145, 203, 225, 231, 496], "004": [81, 83, 478, 496], "45": [81, 143, 145, 231, 496], "9536928": 81, "48": [81, 143, 145, 231, 463, 478], "187": [81, 145, 231], "47": [81, 143, 145, 231], "9525335": 81, "01565": 81, "09367285": 81, "920331558": 81, "006449241": 81, "001377745": 81, "02178264": 81, "3668e": 81, "002130278": 81, "047884869": 81, "en": [81, 82, 85, 428], "wikipedia": [81, 82, 85, 99, 428, 482], "wiki": [81, 82, 85, 428], "calcium_hydrid": 81, "synthet": 82, "spontan": [82, 145, 153, 472, 476, 482, 489, 491], "decai": [82, 142, 145, 147, 149, 153, 154, 159, 174, 191, 193, 226, 243, 245, 262, 285, 452, 466, 467, 469, 476, 486, 488, 489, 491, 493, 496, 497], "equip": [83, 478], "shield": [83, 155, 189, 228, 274, 275, 306, 319, 336, 478, 483, 485, 489, 493, 495], "concreat": 83, "jolissrch": 83, "inter": [83, 273, 302, 400], "tokai": 83, "sc": [83, 143, 145, 342, 405], "jaea": 83, "jp": 83, "pdfdata": 83, "jaeri": 83, "98": [83, 143, 145, 231, 462, 465, 478, 485, 496], "788": 84, "83": [84, 143, 145, 203, 231], "engaug": 84, "21": [84, 92, 93, 96, 113, 133, 143, 145, 231, 323, 405, 472, 478, 485], "thrust": 84, "chamber": [84, 485], "predict": [84, 216, 233, 484, 502], "rocket": 84, "nozzl": [84, 336, 488, 489, 493], "nasa": 84, "134806": 84, "cesium": [85, 143], "caesium": 85, "benchmark": [86, 347, 469, 484, 485, 493], "isotopicopt": [86, 233, 274, 280, 463], "customisotop": [86, 101, 274, 280, 285, 338, 342, 463, 493], "peopl": [86, 441, 469, 470, 493, 505], "overwritten": [86, 199, 204, 235, 299, 301, 346], "u235": [86, 101, 105, 131, 132, 133, 134, 142, 144, 145, 147, 159, 163, 190, 229, 244, 279, 292, 302, 342, 391, 455, 460, 461, 478, 481, 482, 485, 493], "customloc": 86, "matter": [86, 139, 145, 193, 247, 257, 279, 319, 328, 396, 399, 440, 480], "moder": [87, 209, 274, 319, 336, 469], "ga": [87, 101, 142, 143, 145, 225, 228, 235, 238, 319, 342, 469, 489, 497], "cool": [87, 436, 468, 469, 484, 485], "inl": [87, 89, 120], "16": [87, 113, 120, 143, 145, 203, 210, 231, 319, 320, 323, 333, 341, 342, 372, 455, 462, 469, 471, 478, 482, 484, 485, 493], "38241": [87, 120], "mceligot": 87, "donald": 87, "swank": 87, "david": 87, "cottl": 87, "l": [87, 89, 90, 94, 101, 110, 113, 133, 134, 139, 157, 193, 279, 280, 290, 297, 298, 301, 312, 323, 326, 328, 329, 336, 341, 346, 387, 404, 426, 455, 462, 476, 481, 503], "valentin": 87, "francisco": 87, "348": [87, 231, 497], "2016": [87, 161], "web": [87, 90, 110, 133, 155, 161, 165, 166, 431, 437], "doi": [87, 90, 102, 110, 132, 133, 155, 161, 165, 166, 469], "2172": [87, 90, 110, 133, 155, 161, 165, 166], "1330693": 87, "osti": [87, 90, 110, 155, 161, 166], "biblio": [87, 90, 110], "10p": 87, "201114e": [87, 109, 145], "dl": [87, 89, 90, 94, 101, 113, 134, 139], "l0": [87, 90, 304, 312, 481], "captur": [88, 152, 153, 157, 189, 226, 228, 247, 280, 302, 305, 336, 373, 434, 465, 469, 476, 484, 489, 496], "lenntech": 88, "com": [88, 89, 91, 92, 93, 94, 95, 96, 297, 298, 333, 427, 428, 433, 440, 469, 470, 472, 505], "hf": [88, 143, 145, 342], "htm": 88, "hastelloi": [89, 471], "invent": 89, "ornl": [89, 105, 122, 134], "molten": [89, 107, 112, 469], "fluorid": 89, "salt": [89, 111, 202, 469], "un": [89, 94, 204, 489], "n10003": 89, "hayn": 89, "h": [89, 90, 132, 136, 143, 145, 152, 161, 193, 194, 210, 225, 270, 290, 297, 298, 301, 318, 319, 323, 326, 328, 329, 336, 341, 342, 346, 426, 476, 484, 485, 493, 496, 497], "2052d": 89, "2020": [89, 471, 485], "haynesintl": 89, "brochur": 89, "corros": [89, 101, 216, 468, 481, 489], "resist": 89, "sab": 89, "sabharwal": 89, "feasibl": 89, "secondari": [89, 193, 274, 319, 336, 406, 469, 491], "exchang": [89, 155, 321, 434, 468, 485, 495], "23076": 89, "oak": [89, 105, 134], "ridg": [89, 105, 134], "laboratori": [89, 105, 134, 155, 165, 468], "oxid": [89, 102, 105, 108, 130, 134, 137, 138, 481], "hot": [89, 94, 101, 113, 279, 296, 299, 304, 305, 312, 340, 341, 404, 472, 481, 484, 485, 489, 493, 497, 498, 503], "704": 89, "871c": 89, "1600f": 89, "293": [89, 90, 133, 139, 145], "polynomi": [89, 90, 92, 93, 94, 96, 102, 134], "sixth": 89, "97": [89, 110, 143, 145, 231], "dll": [89, 94, 101, 299, 481], "academ": [90, 110, 132, 462, 480, 481], "incomplet": [90, 273, 336, 474, 476, 481], "ferrit": 90, "martensit": 90, "stainless": 90, "steel": [90, 292, 484, 493], "famou": 90, "sfr": [90, 216, 469, 480, 484, 485], "swell": [90, 279, 481, 488, 489], "mfh": 90, "handbook": [90, 98, 107, 133, 139], "hofman": [90, 133], "billon": 90, "koenig": 90, "kramer": 90, "lambert": 90, "leibowitz": [90, 110], "orechwa": 90, "pedersen": 90, "porter": 90, "tsai": 90, "wright": 90, "2019": [90, 157, 469, 471, 484], "1506477": 90, "1050": 90, "ref": [90, 109, 112, 134, 163, 228, 336, 372], "eq": [90, 132, 189], "sped": [90, 472], "austenit": 91, "chromium": [91, 143], "superalloi": 91, "specialmet": [91, 92, 93, 94, 95, 96], "technic": [91, 209, 336, 470, 505], "bulletin": 91, "617": [91, 231, 472], "certainti": 91, "900": [92, 134, 139, 453, 455, 496, 499], "800": [92, 94, 139, 231, 453, 471], "20alloi": [92, 96], "20600": 92, "294": [92, 93, 94, 96, 134, 145, 203, 231], "equat": [92, 93, 96, 111, 159, 225, 252, 318, 400, 429, 440, 465, 481, 503], "thermalcond": [92, 93, 96], "cte": [92, 93, 96], "strain": [92, 93, 96, 216, 468, 469, 489, 497], "linexpperc": [92, 93, 96], "2nd": [92, 93, 96, 456], "divid": [92, 93, 96, 279, 302, 349, 380, 399, 455, 468, 488, 489], "differenti": [92, 93, 96, 240, 301, 437], "722e": 92, "303e": 92, "linexp": [92, 93, 96], "221": [93, 145, 231, 482], "1093": [93, 96], "927": 93, "982": [93, 96, 231], "asset": [93, 94, 95], "625": [93, 231], "083e": 93, "125e": 93, "incoloi": [94, 471], "800h": 94, "n08800": 94, "n08810": 94, "sm": [94, 143, 145, 233, 342], "smc": 94, "pe16": 95, "nimon": 95, "x750": 96, "18": [96, 107, 143, 145, 152, 231, 292, 323, 478, 493], "156": [96, 145, 203, 231], "871": 96, "20x": 96, "750": 96, "8378e": 96, "056e": 96, "600": [97, 122, 128, 129, 134, 139, 231, 288, 291, 292, 294, 330, 453, 455, 493, 498], "1700": 97, "1500": [97, 109, 110, 134], "volumetr": [97, 98, 112, 318, 481, 489, 491], "ON": [97, 98], "measur": [97, 98, 120, 225, 273, 312, 328, 330, 389, 439, 468, 502], "sobolev": [97, 98], "nucl": [97, 98], "mat": [97, 98, 145, 283, 302, 336, 341, 462], "362": [97, 98, 231], "2007": [97, 98], "235": [97, 98, 105, 131, 142, 144, 145, 174, 231, 233, 279, 302, 460, 461, 478, 485], "247": [97, 98, 145, 231], "bismuth": [98, 143], "eutect": 98, "coolant": [98, 101, 248, 274, 279, 296, 299, 302, 305, 319, 336, 340, 342, 404, 448, 453, 455, 463, 469, 475, 478, 480, 481, 484, 488, 489, 491, 493], "superfast": 98, "400": [98, 139, 231, 341, 453], "visc": 98, "1100": [98, 139], "pa": [98, 136, 143, 145, 342, 488, 489, 491], "onlin": [98, 431, 476], "oecd": 98, "nea": [98, 485], "scienc": [98, 153], "nea6195": 98, "ccapac": 98, "accuraci": 98, "whenev": [99, 193, 273, 333, 436, 480], "irradi": [99, 105, 134, 144, 216, 225, 468, 481, 489, 491], "tritium": 99, "li6": [99, 145, 342, 482], "li_wt_frac": [99, 493], "li6_wt_frac": [99, 493], "180c": 99, "923": [100, 472], "1390": 100, "cm3": [100, 302, 391], "mcgonig": 100, "templ": 100, "univers": [100, 157, 240, 302, 388, 469, 497], "1961": 100, "bulk": [101, 285, 336, 476, 488, 489], "massfrac": [101, 235, 302, 391, 462, 481], "theoreticaldensityfrac": 101, "realiti": [101, 468, 469, 493], "solid": [101, 130, 142, 143, 152, 216, 225, 279, 296, 297, 299, 304, 312, 319, 341, 476, 481, 482, 484, 489, 493], "due": [101, 105, 157, 159, 216, 225, 240, 242, 247, 273, 279, 299, 302, 305, 313, 331, 367, 439, 469, 472, 489, 491], "manufactur": 101, "programmat": [101, 204, 240, 283, 414, 452, 466, 467, 480, 486, 498], "getter": [101, 318, 330, 361], "privat": [101, 165, 209, 302, 381, 433, 440, 441, 469], "compat": [101, 165, 209, 233, 275, 280, 299, 333, 351, 475], "deep": [101, 302, 342, 475, 476, 493], "generationnum": [101, 302, 342], "includemateri": [101, 302, 342], "predic": [101, 145, 302, 336, 342], "typespec": [101, 209, 229, 275, 279, 299, 302, 319, 336, 342], "exactmatch": [101, 302, 336, 342], "paramstoappli": [101, 299, 302, 332, 333], "previous": [101, 210, 302, 401, 471, 475, 491, 493], "dt": [101, 136, 489], "t0": [101, 299], "methodologi": [101, 189, 225, 304, 469, 475, 476, 480, 503], "prevtempinc": 101, "newtempinc": 101, "temperatureinc": [101, 296, 299, 304, 453, 490, 499], "temperatureincnew": 101, "nucnam": [101, 144, 145, 186, 189, 190, 228, 235, 244, 245, 299, 302, 391, 404, 447, 455, 462], "thrown": [101, 290, 370], "nuclidenam": [101, 285, 299, 302], "massfract": [101, 299, 302], "u238": [101, 144, 145, 153, 292, 342, 455, 460, 478, 481, 482, 485, 493], "likewis": [101, 142], "accordingli": [101, 299, 328, 469, 493, 494], "achiev": [101, 156, 193, 468, 491, 497], "targetdens": 101, "tempguessinc": 101, "celciu": [101, 136, 225, 299], "unitless": 101, "cm": [101, 143, 167, 168, 189, 209, 225, 235, 240, 275, 279, 284, 296, 297, 298, 299, 301, 302, 304, 318, 321, 322, 323, 325, 326, 327, 328, 336, 347, 391, 439, 440, 457, 458, 478, 481, 483, 484, 488, 489, 490, 491, 493, 497, 498], "agre": [101, 302, 469, 484], "inputheightsconsideredhot": [101, 304, 312, 341, 472, 497], "psuedodens": 101, "driven": [101, 229, 280, 483, 491], "forward": [101, 168, 273, 350, 404], "dep": 101, "dp": [101, 136, 143], "rate": [101, 159, 189, 193, 240, 242, 244, 245, 299, 302, 318, 333, 434, 452, 465, 466, 467, 471, 480, 486, 488, 489, 490, 491, 493, 497, 502], "micron": 101, "strength": 101, "mpa": 101, "propnam": 101, "expandfissionproduct": [101, 302], "pu239": [101, 105, 142, 145, 153, 159, 190, 292, 302, 342, 478, 485, 493], "sum": [101, 145, 153, 159, 186, 189, 191, 228, 235, 238, 279, 292, 302, 340, 387, 404, 416, 437, 478, 483, 493], "frac": [101, 132, 189, 225, 228, 240, 279, 299, 302, 318, 398, 411, 462, 481, 484, 490, 493, 502, 503], "altern": [101, 153, 177, 190, 206, 209, 240, 330, 396, 404, 434, 437, 472, 480, 483, 493], "critic": [101, 136, 155, 229, 279, 297, 469, 488, 491, 496, 497], "million": [101, 399], "nuc": [101, 144, 145, 163, 235, 299, 302, 391, 482], "fall": [101, 216, 304, 433, 441, 469, 476, 500], "min": [101, 214, 302, 328, 472, 476, 491], "mint": 101, "maxt": 101, "convienc": 101, "rhocp": 101, "right": [101, 201, 204, 240, 286, 289, 302, 305, 306, 325, 326, 327, 328, 370, 388, 400, 402, 404, 414, 424, 434, 465, 496, 502, 503], "downstream": [101, 275, 336, 472, 476], "embrac": 101, "deprec": [101, 144, 273, 286, 320, 337, 361, 476, 497], "densityfrac": 101, "fill": [101, 135, 142, 145, 225, 276, 279, 286, 296, 302, 306, 307, 330, 336, 455, 472, 475, 480, 484, 485, 489, 496], "300": [101, 134, 481], "uniti": 101, "parameter": [101, 456, 493], "magnesiumoxid": 102, "273": [102, 108, 134, 137, 145, 231], "milo": 102, "durand": 102, "journal": [102, 132, 225], "297": [102, 231], "1936": 102, "1063": 102, "174539": 102, "3rd": [102, 323, 325, 337, 488], "moli": 104, "ceram": [105, 130, 134], "thermophys": [105, 111, 134, 136, 139, 202], "popov": [105, 134], "tm": [105, 134, 143, 144, 145, 342], "2000": [105, 109, 110, 122, 134, 139, 481], "351": [105, 134], "rsicc": [105, 134], "fmdp": [105, 134], "tm2000": [105, 134], "inherit": [105, 141, 145, 228, 274, 276, 296, 334, 336, 361, 440, 475, 480, 493], "leav": [105, 145, 210, 245, 299, 302, 367, 478, 485, 493], "unchang": [105, 299, 367, 394, 472, 496], "u235_wt_frac": [105, 131, 132, 133, 134, 288, 484, 493], "mass_frac_pu02": 105, "massfracpuo2": 105, "puo2": 105, "pu238": [105, 145, 292, 342, 478, 485, 493], "238": [105, 131, 144, 145, 231, 233, 279, 302, 460, 465, 482, 485], "0495599": 105, "239": [105, 131, 144, 145, 233, 465, 482], "0521634": [105, 144], "pu240": [105, 145, 292, 342, 478, 485, 493], "240": [105, 145, 231, 233, 482], "0538135": 105, "pu241": [105, 145, 292, 342, 478, 485, 493], "241": [105, 145, 231, 233, 482], "0568515": 105, "pu242": [105, 145, 159, 292, 342, 478, 485, 493], "242": [105, 145, 476, 482], "0587426": 105, "am241": [105, 144, 145, 280, 292, 342, 478, 485, 493], "0568291": 105, "0439299": [105, 142, 144], "0507882": [105, 144], "oxygen": [105, 130, 143, 285, 302, 391, 485, 493], "9994": [105, 130, 231], "joyo": [105, 469], "pu": [105, 131, 132, 143, 233, 279, 302, 336, 391, 489], "76": [105, 143, 145, 231], "82": [105, 143, 145, 203, 231, 481], "23": [105, 143, 145, 231, 252, 323, 340, 427, 472, 478], "66": [105, 143, 145, 203, 231], "64": [105, 134, 143, 145, 203, 231, 319, 333, 396, 470, 485, 505], "326469": 105, "22": [105, 109, 113, 136, 143, 145, 231, 292, 323, 472, 478, 482, 497], "99": [105, 122, 143, 145, 191, 203, 231, 233, 400, 497], "77": [105, 143, 145, 156, 231], "237": [105, 145, 203, 231, 482], "359511": 105, "upu": 105, "17": [105, 143, 145, 153, 157, 203, 210, 231, 323, 471, 478, 482, 493], "70766": 105, "31": [105, 130, 143, 145, 203, 231, 471], "9988": [105, 130], "269": [105, 145], "70646": 105, "881357": 105, "177": [105, 145, 203, 231, 478, 480, 483, 484, 487], "156000": 105, "823": 105, "725356": 105, "001": [105, 307, 336, 349, 400, 471, 478, 493], "074256": 105, "000156": 105, "7682": 105, "119839": 105, "1923": 105, "029999": 105, "0266": 105, "004150": 105, "0055": 105, "000858": 105, "0064": 105, "000998": 105, "2299": 105, "195": [105, 145, 231, 464, 466], "633404": 105, "166759": 105, "7701": 105, "558597": 105, "118643": 105, "melt": [105, 109, 128, 129, 130, 133, 134], "liquidu": [105, 481], "tl": [105, 143, 145, 150, 342], "solidu": [105, 481], "3120": [105, 134], "388": 105, "30": [105, 128, 129, 143, 145, 152, 168, 201, 231, 275, 326, 336, 341, 388, 399, 426, 463, 478, 484, 493, 496, 497], "655": [105, 231], "336": [105, 231], "burnup": [105, 153, 164, 202, 209, 210, 216, 228, 229, 233, 240, 247, 279, 302, 387, 400, 406, 456, 468, 472, 476, 488, 489, 490, 491, 493, 494, 496, 497], "niobium": [106, 143], "zirconium": [106, 131, 139, 143, 144, 485, 493], "foust": 107, "nak": 107, "gordon": 107, "breach": 107, "1972": 107, "63": [107, 143, 145, 231], "1250": 107, "scandium": [108, 143], "1573": [108, 137], "scandia": 108, "invers": [108, 137, 400], "rare": [108, 137, 152, 334, 361], "earth": [108, 137], "silicon": [109, 143], "808538e": [109, 145], "cumul": [109, 201, 240, 304, 330, 333, 387, 426, 472, 496, 497], "munro": 109, "phy": 109, "chem": 109, "26": [109, 142, 143, 145, 231, 279, 485], "1997": [109, 231], "51": [109, 143, 145, 231], "math": [109, 157, 192, 209, 398, 400, 416, 424, 428, 440, 449, 456, 457, 465, 472, 480], "exp": 109, "00527": 109, "0e": [109, 455, 485, 502], "rho0": 109, "tc0": 109, "0e3": 109, "1110": 109, "425": [109, 203], "003": [109, 336, 349, 478, 496], "52000": 109, "24e": 109, "437": 109, "298": [109, 130, 133, 134, 139], "bring": [110, 132, 273, 392, 412, 434, 469, 480, 484, 493], "anl": [110, 133, 139, 144, 165, 329, 468, 469, 478, 480, 483, 484, 487], "95": [110, 143, 145, 165, 203, 231, 496], "fink": 110, "thermodynam": 110, "vapor": [110, 136], "1995": [110, 165, 225], "94649": 110, "gxndli": 110, "webview": 110, "85": [110, 143, 145, 231], "2230": [110, 231], "371": [110, 231], "3715": 110, "chlorid": 111, "nabr": 111, "naf": 111, "rai": [111, 388], "attenu": 111, "techniqu": [111, 318, 493], "334": 112, "430": [112, 341], "sulfur_density_frac": [112, 493], "espeau": 112, "ceolin": 112, "508k": 112, "1382": 113, "tungsten": [113, 143, 471], "refractori": 113, "roll": [113, 488], "bureau": 113, "naval": 113, "weapon": 113, "n600": 113, "59530": 113, "southern": 113, "institut": 113, "456": 113, "574": [113, 460, 466], "702": 113, "840": 113, "56": [113, 143, 145, 231, 482], "846": [113, 203, 472], "948": [113, 203], "89": [113, 143, 145, 203, 231, 465], "1023": 113, "1146": 113, "78": [113, 143, 145, 231, 496], "203": [113, 145, 231], "253": [113, 145, 225, 231], "303": 113, "342": [113, 203], "366": 113, "421": [113, 225, 231], "468": [113, 231], "504": [113, 231], "tabular": 113, "21c": 113, "1966": 113, "viii": [113, 152], "appendix": 113, "181": [113, 145, 231], "test_canaccessclassesfrompackag": [115, 116], "test_packageclassesequalmoduleclass": [115, 116], "test_pseudodens": [115, 117, 119, 121, 122, 123], "test_heatcapac": [115, 117, 121, 122, 123], "test_thermalconduct": [115, 117, 122], "test_massfrac": [115, 117, 127], "test_validrang": [115, 117], "mat_class": [115, 118, 119, 120, 121, 122, 123, 124, 125, 126], "test_theoretical_pseudodens": [115, 118, 125], "test_propertyvalidtemperatur": [115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "test_linearexpansionperc": [115, 120, 122, 125], "test_dens": [115, 120, 122, 126, 338, 341], "defaultmassfrac": [115, 121], "test_lithium_material_modif": [115, 121], "test_meltingpoint": [115, 121, 122, 123], "test_boilingpoint": [115, 121], "test_material_initi": [115, 122], "test_findmateri": [115, 122], "test_poros": [115, 122], "test_getcorrosionr": [115, 122], "test_getmassfracpuo2": [115, 122], "test_getmolfracpuo2": [115, 122], "test_getmeltingpoint": [115, 122], "test_applyinputparam": [115, 122], "test_specificvolumeliquid": [115, 122], "test_enthalpi": [115, 122], "test_linearexpans": [115, 122], "test_adjustmassenrich": [115, 122, 338, 341], "test_gettemperatureatdens": [115, 122], "test_getdensityexpansion3d": [115, 122], "test_removenucmassfrac": [115, 122], "test_densitytimesheatcapactii": [115, 122], "test_gettempchangefordensitychang": [115, 122], "test_dupl": [115, 122, 236, 238, 338, 339, 340, 372, 378], "test_setdefaultmassfrac": [115, 122], "test_volumetricexpans": [115, 122], "test_dynamicvisc": [115, 122], "test_densityneverchang": [115, 122], "test_getchildren": [115, 122, 338, 342], "test_getchildrenwithflag": [115, 122], "test_iconel800_linearexpans": [115, 122], "test_00_setdefaultmassfrac": [115, 122], "test_01_linearexpansionperc": [115, 122], "test_02_linearexpans": [115, 122], "test_03_pseudodens": [115, 122], "test_polyfitthermalconduct": [115, 122], "test_polyfitheatcapac": [115, 122], "test_polyfitlinearexpansionperc": [115, 122], "test_nicklecont": [115, 122], "test_linearexpansionhott": [115, 122], "test_meancoefficientthermalexpans": [115, 122], "test_00_applyinputparam": [115, 122], "test_01_pseudodens": [115, 122], "test_02_linearexpansionperc": [115, 122], "baseinput": [115, 122], "loadassembli": [115, 122], "test_class1class2_class1_wt_frac": [115, 122], "test_class1class2_classx_custom_isotop": [115, 122], "test_sulfur_density_frac": [115, 124], "test_water_at_freez": [115, 127], "test_water_at_boil": [115, 127], "test_water_at_critcalpoint": [115, 127], "test_validatenam": [115, 127], "superclass": 116, "verif": [117, 127, 440, 468, 474], "300k": 117, "ratio": [117, 153, 275, 279, 336, 387, 389, 465, 476, 485, 489, 491, 497], "_material_test": [118, 119, 121, 122, 123, 124, 125, 126], "0759": 121, "discover": [122, 472], "1723": 122, "efg": 122, "_mixtur": 122, "nickl": 122, "spec": 122, "nnuclid": [122, 288, 292, 294], "ncustom": [122, 292], "customisotopic1": 122, "customisotopic2": 122, "nblock": [122, 288, 291, 292, 294], "block_fuel": [122, 288, 294, 484, 493], "fuel1": [122, 288, 294, 306, 319, 493], "component_fuel_fuel1": [122, 288, 294, 493], "tinput": [122, 288, 291, 292, 294, 296, 297, 298, 299, 301, 312, 341, 342, 455, 463, 484, 485, 493], "thot": [122, 288, 291, 292, 294, 296, 297, 298, 299, 301, 312, 338, 341, 342, 455, 463, 478, 484, 485, 493], "ip": [122, 288, 291, 292, 294, 297, 299, 341, 342, 455, 463, 484, 493, 498], "mult": [122, 209, 279, 283, 288, 291, 292, 294, 297, 298, 299, 301, 341, 342, 455, 463, 484, 485, 490, 493, 498], "op": [122, 196, 279, 288, 291, 292, 294, 296, 297, 298, 299, 320, 341, 342, 379, 455, 463, 484, 493, 498], "fuel2": [122, 288, 294, 306, 319, 493], "component_fuel_fuel2": [122, 288, 294, 493], "nassembli": [122, 288, 291, 292, 294], "assembly_a": [122, 288, 291, 292, 294, 493], "ic": [122, 284, 288, 291, 292, 294, 463, 484, 493], "height": [122, 164, 214, 275, 279, 280, 282, 288, 290, 291, 292, 294, 297, 299, 301, 302, 304, 312, 318, 323, 328, 336, 340, 341, 342, 386, 394, 400, 463, 471, 472, 475, 478, 484, 485, 489, 493, 497], "materialmodif": [122, 274, 280, 281, 294], "iapw": [127, 136], "if97": [127, 136], "0c": 127, "relguid": [127, 136], "supsat": [127, 136], "100c": 127, "096k": 127, "challeng": [128, 129, 130, 156, 285, 328, 336, 441, 469, 475], "iaea": [128, 129, 130, 202], "tecdoc": [128, 129, 130], "1450": [128, 129, 130], "2005": [128, 129, 130], "pub": [128, 129, 130], "mtcd": [128, 129, 130], "te_1450_web": [128, 129, 130], "u233": [128, 145, 342, 482], "u233_wt_frac": [128, 493], "te": [128, 129, 130, 143, 145, 342, 497], "1223": [130, 231], "232": [130, 131, 145, 482], "030806": 130, "264": [130, 145, 231], "029606": 130, "298k": 130, "zirc": 131, "233": [131, 145, 231, 482], "zr_wt_frac": [131, 132, 294, 493], "notion": [132, 240], "10zr": [132, 302], "chandrabhanu": 132, "incorrect": [132, 330, 472], "basak": 132, "prasad": 132, "kamath": 132, "prabhu": 132, "rich": [132, 196, 431, 469, 499], "480": 132, "2009": [132, 469], "857": 132, "862": [132, 231], "issn": 132, "0925": 132, "8388": 132, "1016": [132, 469], "jallcom": 132, "02": [132, 134, 145, 231, 275, 292, 434, 447, 456, 457, 463, 464, 471, 472, 478, 482, 493, 501], "077": 132, "aaafuel": 133, "kim": 133, "aaa": [133, 139, 491], "2003": [133, 485], "822554": 133, "01591t": 133, "907": 133, "215": [133, 145, 482], "1600": [133, 139], "255": [133, 145, 231], "nse": 133, "gl": 133, "07": [133, 145, 153, 231, 434, 456, 463, 464, 466, 478, 482, 497], "27": [134, 143, 145, 231, 471, 478], "302": 134, "008463": 134, "87410000": 134, "548": 134, "68": [134, 143, 145, 231], "18531": 134, "3100": 134, "3123": 134, "3000": 134, "dioxid": 134, "nonequilibrium": 134, "molecular": [134, 302], "motoyama": 134, "60": [134, 143, 145, 206, 231, 279, 326, 341, 388, 400, 488, 489, 491], "juli": 134, "1999": 134, "92": [134, 142, 143, 145, 203, 231, 482], "380289e": [134, 145, 482], "599930e": [134, 145], "1200": [134, 139, 453], "1800": [134, 139], "2100": 134, "2700": [134, 231], "991": 134, "864": 134, "768": 134, "567": 134, "073": 134, "891": [134, 231], "847": 134, "718": 134, "u234": [134, 145, 285, 292, 342, 478, 482, 493], "curv": [134, 197, 299, 400, 472], "faith": 136, "supplementari": 136, "ordinari": 136, "substanc": 136, "1992": 136, "steam": 136, "satur": 136, "industri": [136, 469, 480], "h2o": [136, 152], "007976e": [136, 145], "sr1": 136, "86": [136, 143, 145, 231, 496], "pressur": [136, 143, 202, 216, 270, 330, 429, 469, 488, 489, 491, 493], "096": 136, "322": [136, 231], "064": 136, "22064000": 136, "1000": [136, 139, 145, 242, 437, 478, 483, 484, 488, 493], "5453657571674064": 136, "65134998e": 136, "08": [136, 145, 231, 434, 455, 456, 463, 464, 471, 472, 478], "2690": 136, "66631": 136, "127": [136, 145, 203, 231, 457, 484], "287297": 136, "003439": 136, "981825814": 136, "alpha": [136, 145, 152, 153, 155, 244, 455, 460, 462, 465, 476, 481, 489, 503], "1135": [136, 231], "905627715": 136, "phi": [136, 240], "2319": 136, "5246": 136, "1e": [136, 139, 157, 201, 240, 366, 391, 404, 449, 455, 464, 497, 502], "06": [136, 139, 145, 231, 235, 292, 434, 447, 450, 456, 463, 464, 472, 478, 482], "wrt": 136, "quantiti": [136, 155, 279, 318, 333, 341, 404, 406, 476, 488], "kgk": 136, "yttrium": [137, 143], "yttria": 137, "zinc": [138, 143], "1491": 138, "28": [138, 143, 145, 203, 231, 478], "polycrystallin": 138, "devic": 138, "technologi": [138, 225, 469, 476], "45803": 139, "touloukian": 139, "kirbi": 139, "taylor": 139, "desai": 139, "ifi": [139, 404], "plenum": [139, 225, 274, 275, 279, 319, 339, 340, 468, 478, 483], "washington": 139, "1975": 139, "700": [139, 231, 453], "1136": [139, 472], "99999": 139, "1137": 139, "1400": 139, "7e": [139, 292, 455], "9e": [139, 455], "6e": [139, 455], "8e": [139, 455], "2e": [139, 149, 455], "5e": [139, 244, 245, 439, 455], "03e": 139, "mk": 139, "metadata": [140, 150, 157, 158, 165, 168, 173, 184, 273, 283, 330, 332, 333, 406, 471, 472, 499], "mpi_comm": [141, 437], "bcast": [141, 194, 387], "wait": [141, 194, 245, 437, 441, 480], "sync": [141, 209, 345, 437], "sit": [141, 153, 194, 210, 336, 437, 465, 468, 475], "someinst": 141, "comm_world": 141, "interestingli": 141, "strong": [141, 216, 233], "discourag": [141, 302], "sign": [141, 193, 302, 433, 439], "allcpuresult": 141, "objectsforallcorestoit": 141, "cpu": [141, 352, 437, 469, 493, 494, 496, 497], "len": [141, 145, 302, 399, 404, 437, 455, 458, 459, 462, 482, 483, 499], "clase": 141, "numpernod": 141, "mpi_siz": [141, 252], "workload": 141, "spawn": [141, 245, 471], "varaibl": 141, "think": [141, 302, 441, 471, 499], "dsitributionact": 141, "amongst": [141, 330, 493], "skipinterfac": 141, "minim": [142, 210, 227, 279, 330, 393, 400, 440, 465, 470, 484, 505], "mainli": [142, 229, 273], "three": [142, 145, 157, 172, 280, 302, 328, 368, 400, 475, 480, 484, 485, 493, 496], "byz": [142, 143, 482], "ironfromz": 142, "ironfromnam": 142, "bynam": [142, 143, 145, 152, 447, 454, 455, 462, 482], "iron": [142, 143, 144, 476, 482, 493], "ironfromsymbol": 142, "bysymbol": [142, 143, 292, 482], "lower": [142, 209, 229, 274, 275, 279, 284, 302, 304, 319, 325, 328, 329, 336, 372, 472, 476, 488], "upper": [142, 143, 159, 190, 209, 231, 240, 274, 275, 279, 304, 319, 325, 328, 329, 388, 497], "truli": [142, 387, 469, 489], "ever": [142, 319, 340, 342, 350, 440, 469, 480, 493], "118": [142, 143, 145, 231], "fe56": [142, 145, 152, 342, 460, 478], "nist": [142, 144, 145], "cgi": 142, "bin": [142, 233, 306, 307, 322, 416, 470, 505], "stand_alon": 142, "pl": 142, "human": [142, 145, 320, 475], "readabl": [142, 145, 273, 440, 475], "capit": [142, 145, 228, 439, 440, 476, 493], "letter": [142, 156, 190, 228, 279, 388, 403, 440, 484, 489, 493], "charact": [142, 145, 156, 229, 279, 281, 427, 440, 441, 471, 476, 488, 493], "fix": [142, 155, 160, 196, 229, 240, 318, 333, 340, 352, 400, 433, 440, 441, 475, 497], "tradition": [142, 208], "legaci": [142, 226, 337, 469], "Of": [142, 153, 209, 303, 469, 478, 483, 485], "reserv": [142, 229, 440], "aa": [142, 154, 163, 190, 228, 229, 247, 336, 342, 460, 461, 476], "ab": [142, 189, 228, 279, 302, 336, 476, 478, 489], "za": 142, "pu39": [142, 279], "along": [142, 145, 156, 202, 229, 240, 272, 279, 302, 303, 304, 312, 318, 319, 325, 354, 366, 367, 387, 400, 434, 436], "bylabel": [142, 145, 482], "softwar": [142, 145, 155, 434, 440, 468, 469, 470, 474, 484, 497, 505], "mcnp": [142, 145, 152, 233, 273, 279, 306, 336, 391, 400, 429, 446, 450, 467, 472, 480, 486, 497], "serpent": [142, 145, 193, 229, 233, 497], "mc2": [142, 144, 145, 149, 159, 161, 163, 166, 189, 193, 233, 237, 247, 279, 401, 434, 469, 497], "incorpor": [142, 273, 496], "94": [142, 143, 144, 145, 203, 231, 472], "tinfromnam": 142, "sn112": [142, 145, 342], "tinfromlabel": 142, "tinfrommcc2id": 142, "sn1125": 142, "tinfrommcc3id": 142, "sn1127": 142, "fulfil": [142, 476], "ll": [142, 244, 245, 275, 328, 329, 437, 470, 478, 480, 483, 484, 494, 505], "test_el": [142, 146], "testel": [142, 146, 147], "test_nucdirectori": [142, 146], "testnucdirectori": [142, 146, 148], "test_nuclidebas": [142, 146], "testnuclid": [142, 146, 149], "test_getaaazzzsid": [142, 146, 149], "test_thermalscatt": [142, 146], "buildblockwithtsl": [142, 146, 150], "testthermalscatt": [142, 146, 150], "getnuclidethermalscatteringdata": [142, 146, 150], "test_transmut": [142, 146], "randomstr": [142, 146, 151], "transmutationtest": [142, 146, 151], "decaymodetest": [142, 146, 151], "alkali_met": [142, 143, 482], "alkaline_earth_met": [142, 143], "nonmet": [142, 143], "transition_met": [142, 143], "post_transition_met": [142, 143], "metalloid": [142, 143], "halogen": [142, 143], "noble_ga": [142, 143], "lanthanid": [142, 143], "actinid": [142, 143, 235, 285, 302, 465, 493], "isnaturallyoccur": [142, 143, 147, 482], "getdatabasenam": [142, 145], "getdecai": [142, 145], "getmcc2id": [142, 145], "getmcc3id": [142, 145], "getserpentid": [142, 145], "fissil": [142, 145, 172, 228, 275, 302, 478, 488, 489, 491, 493, 497, 504], "spontaneous_fiss": [142, 145], "getmcnpid": [142, 145], "getaaazzzsid": [142, 145], "getendfmatnum": [142, 145], "getsubjectnuclidebas": [142, 152], "getpreferredproduct": [142, 153], "outlin": [143, 145, 388, 439, 499], "gaseou": [143, 235, 472, 497], "stp": [143, 238], "hydrogen": [143, 150, 485], "he": [143, 145, 342, 356, 478, 483, 489], "helium": 143, "nitrogen": 143, "fluorin": 143, "ne": [143, 144, 145, 302, 342], "neon": [143, 144], "chlorin": 143, "argon": 143, "36": [143, 145, 231], "krypton": [143, 404], "xe": [143, 145, 233, 342, 404], "54": [143, 145, 231], "xenon": [143, 404, 496], "rn": 143, "radon": 143, "og": 143, "oganesson": 143, "classifi": [143, 302], "ac": [143, 152, 483], "actinium": 143, "90": [143, 145, 231, 279, 302, 388, 399, 456, 469, 484, 485, 496], "91": [143, 145, 203, 231], "protactinium": [143, 147], "np": [143, 153, 244, 245, 252, 302, 400, 455, 459, 462, 465, 478, 481, 483], "93": [143, 145, 231, 496], "neptunium": 143, "plutonium": 143, "am": [143, 233, 476], "americium": 143, "curium": [143, 493], "bk": 143, "berkelium": 143, "cf": 143, "einsteinium": 143, "fm": 143, "fermium": 143, "md": [143, 480], "101": [143, 145, 231, 400], "mendelevium": 143, "NO": 143, "102": [143, 145, 231], "nobelium": 143, "lr": 143, "103": [143, 145, 231], "lawrencium": 143, "num": [143, 201, 279, 339, 434, 456], "na": [143, 145, 244, 245, 252, 285, 302, 340, 342, 356, 455, 478, 483, 493], "aluminium": 143, "phosphoru": 143, "32": [143, 145, 231, 319, 333, 396, 469, 478, 484], "37": [143, 145, 203, 231], "titanium": 143, "ti": [143, 145, 326, 327, 342, 439, 465, 481], "vanadium": 143, "34": [143, 145, 231], "manganes": 143, "38": [143, 145, 231, 478, 484], "cobalt": 143, "co": [143, 145, 342, 456, 470, 493, 505], "29": [143, 145, 231, 361], "zn": [143, 145, 342], "gallium": 143, "germanium": 143, "ge": [143, 145, 342], "33": [143, 145, 168, 203, 231, 242, 455], "arsen": 143, "AS": [143, 145, 156, 342, 469, 484], "selenium": 143, "se": [143, 145, 342], "bromin": 143, "br": [143, 145, 342], "rubidium": 143, "rb": [143, 145, 156, 160, 342], "strontium": 143, "sr": [143, 145, 342, 427], "57": [143, 145, 231], "nb": [143, 145, 152, 342, 447, 462, 465], "mo": [143, 145, 233, 292, 342, 478, 483, 493, 497], "technetium": 143, "ruthenium": 143, "ru": [143, 145, 342], "rhodium": 143, "rh": [143, 145, 342], "palladium": 143, "pd": [143, 145, 254, 342], "53": [143, 145, 231], "silver": 143, "ag": [143, 145, 202, 342], "74": [143, 145, 231, 347, 484], "cadmium": 143, "cd": [143, 145, 342, 469, 470, 480, 505], "49": [143, 145, 231], "indium": 143, "IN": [143, 145, 157, 164, 342], "88": [143, 145, 203, 231], "tin": [143, 497], "sn": [143, 145, 155, 240, 342], "59": [143, 145, 231], "antimoni": 143, "sb": [143, 145, 342], "52": [143, 145, 231], "tellurium": 143, "iodin": 143, "barium": 143, "ba": [143, 145, 228, 342], "lanthanum": 143, "la": [143, 145, 152, 155, 342], "58": [143, 145, 231, 330], "cerium": 143, "ce": [143, 145, 342], "praseodymium": 143, "pr": [143, 145, 342, 433, 440, 472], "neodymium": 143, "nd": [143, 145, 153, 252, 292, 342], "61": [143, 145, 203, 231], "promethium": 143, "pm": [143, 332], "62": [143, 145, 231], "samarium": 143, "europium": 143, "eu": [143, 145, 342], "gadolinium": 143, "gd": [143, 145, 342], "65": [143, 145, 228, 231], "terbium": 143, "tb": [143, 145, 342], "dysprosium": 143, "dy": [143, 145, 342], "holmium": 143, "ho": [143, 145, 342], "erbium": 143, "er": [143, 145, 342], "69": [143, 145, 203, 231], "thulium": 143, "70": [143, 145, 231, 340, 399, 483, 496], "ytterbium": 143, "yb": [143, 145, 342], "71": [143, 145, 231, 478], "lutetium": 143, "lu": [143, 145, 342], "72": [143, 145, 231, 496], "ta": [143, 145, 342], "75": [143, 145, 203, 231, 484], "rhenium": 143, "osmium": 143, "iridium": 143, "ir": [143, 145, 342], "platinum": 143, "pt": [143, 145, 342], "79": [143, 145, 203, 231, 493], "gold": [143, 427], "au": [143, 145, 342], "mercuri": 143, "hg": [143, 145, 342], "81": [143, 145, 231], "thallium": 143, "pb": [143, 145, 273, 338, 342, 345], "bi": [143, 145, 342, 437], "84": [143, 145, 231, 482], "polonium": 143, "po": [143, 279, 322, 323, 326, 328, 329, 336, 346, 471, 499], "astatin": 143, "AT": [143, 162], "87": [143, 145, 231, 482], "francium": 143, "fr": 143, "radium": 143, "ra": [143, 149], "104": [143, 145, 203, 231], "rutherfordium": 143, "rf": 143, "105": [143, 145, 203, 231], "dubnium": 143, "106": [143, 145, 231], "seaborgium": 143, "sg": 143, "107": [143, 145, 231], "bohrium": 143, "bh": 143, "108": [143, 145, 231], "hassium": 143, "109": [143, 145, 231], "meitnerium": 143, "mt": [143, 478, 504], "110": [143, 145, 225, 231, 341, 399], "darmstadtium": 143, "111": [143, 145, 231, 458, 466], "roentgenium": 143, "rg": 143, "112": [143, 145, 231], "copernicium": 143, "cn": 143, "113": [143, 145, 231], "nihonium": 143, "nh": 143, "114": [143, 145, 231], "flevrovium": 143, "fl": 143, "115": [143, 145, 203, 231], "moscovium": 143, "mc": [143, 144, 145, 161, 177, 189, 240, 284, 484, 493, 496], "116": [143, 145, 203, 231], "livermorium": 143, "lv": 143, "117": [143, 145, 231], "tennessin": 143, "119": [143, 145, 231, 459, 466], "dummi": [143, 145, 161, 163, 166, 189, 201, 214, 274, 283, 312, 319, 336, 340, 342, 371, 378, 437, 455, 456, 464, 476, 478, 485], "120": [143, 145, 231, 279, 306, 482], "lumpedfissionproduct": [143, 226, 232, 279, 299, 302], "lp": 143, "proton": [143, 145, 153, 244, 454, 462, 465, 482], "chemic": [143, 216, 238, 245, 302, 391, 468, 489, 491], "cut": [143, 279, 301, 306, 388, 469, 496, 497], "elem": 143, "abbrevi": [143, 144, 440], "getz": 143, "elementzbysymbol": 143, "lose": [143, 145, 469], "elementsymbol": 144, "prefix": [144, 155, 156, 204, 387, 394, 440], "xstype": [144, 226, 229, 233, 245, 279, 282, 463, 489], "suffix": [144, 154, 189, 190, 247, 279, 302, 337], "u235ia": 144, "zircfb": 144, "2355": [144, 145], "ia": 144, "fb": 144, "mc2liblabel": 144, "am242": [144, 228, 292, 342], "a242": 144, "am242m": [144, 145, 342, 478], "adjustnuclid": 144, "amass": 144, "u239": [144, 145, 342, 482], "lindhard": 144, "cutoff": [144, 389, 485, 497], "displac": [144, 148, 203, 225, 240, 469, 489, 493, 497], "specter": 144, "ii": 144, "greenwood": 144, "fpp": 144, "197": [144, 145, 231], "argonn": [144, 157, 165, 468, 469], "1985": 144, "ed": [144, 497], "ev": [144, 159, 189, 231, 460, 489, 491], "350439e": [145, 482], "hl": [145, 482], "22160758861e": [145, 482], "204000e": [145, 482], "03": [145, 231, 292, 434, 447, 456, 463, 464, 466, 472, 478, 482, 493, 497, 501], "bymcc2id": [145, 482], "bymcc3id": [145, 482], "u235_7": 145, "bymcnpid": [145, 482], "92235": [145, 447], "aaazzz": 145, "byaaazzzsid": [145, 482], "2350920": 145, "halflif": [145, 482], "000000e": [145, 482], "inf": [145, 482, 502], "998500e": 145, "007825e": 145, "500000e": 145, "04": [145, 165, 203, 235, 292, 434, 447, 450, 456, 463, 464, 469, 478, 482], "014102e": 145, "016049e": 145, "887813e": 145, "027807e": 145, "035311e": 145, "608259e": 145, "h6": [145, 342], "044943e": 145, "943469e": 145, "h7": [145, 342], "052749e": 145, "069308e": 145, "002602e": 145, "he3": [145, 342], "370000e": 145, "016029e": 145, "he4": [145, 153, 342, 356, 478], "999986e": 145, "002603e": 145, "he5": [145, 342], "012223e": 145, "040705e": 145, "he6": [145, 342], "018889e": 145, "067000e": 145, "he7": [145, 342], "028021e": 145, "041585e": 145, "he8": [145, 342], "033922e": 145, "191000e": 145, "he9": [145, 342], "043950e": 145, "he10": [145, 342], "005240e": 145, "520792e": 145, "940038e": [145, 482], "li3": [145, 342, 482], "030775e": [145, 482], "111100e": 145, "li4": [145, 342, 482], "027185e": [145, 482], "li5": [145, 342, 482], "012538e": [145, 482], "709250e": 145, "590000e": [145, 482], "015123e": [145, 482], "li7": [145, 342, 482], "241000e": [145, 482], "016004e": [145, 482], "li8": [145, 342, 482], "022488e": [145, 482], "399000e": 145, "li9": [145, 342, 482], "026789e": [145, 482], "783000e": 145, "li10": [145, 342, 482], "003548e": [145, 482], "li11": [145, 342, 482], "104380e": [145, 482], "750000e": 145, "li12": [145, 342, 482], "205378e": [145, 482], "li13": [145, 342, 482], "306117e": [145, 482], "be5": [145, 342], "040790e": 145, "be6": [145, 342], "019726e": 145, "959106e": 145, "be7": [145, 342], "016930e": 145, "598208e": 145, "be8": [145, 342], "005305e": 145, "190982e": 145, "be10": [145, 342], "001353e": 145, "765096e": 145, "be11": [145, 342], "102166e": 145, "376000e": 145, "be12": [145, 342], "202692e": 145, "146000e": 145, "be13": [145, 342], "303569e": 145, "700000e": 145, "be14": [145, 342], "404289e": 145, "350000e": 145, "be15": [145, 342], "505346e": 145, "866168e": 145, "be16": [145, 342], "606192e": 145, "702971e": 145, "081202e": 145, "b6": [145, 342], "046810e": 145, "b7": [145, 342], "029918e": 145, "695852e": 145, "b8": [145, 342], "024607e": 145, "b9": [145, 342], "013329e": 145, "448847e": 145, "980000e": 145, "001294e": 145, "b11": [145, 285, 342, 478], "020000e": 145, "100931e": 145, "b12": [145, 342], "201435e": 145, "b13": [145, 342], "301778e": 145, "733000e": 145, "b14": [145, 342], "402540e": 145, "250000e": 145, "b15": [145, 342], "503110e": 145, "930000e": 145, "b16": [145, 342], "603981e": 145, "562377e": 145, "b17": [145, 342], "704699e": 145, "080000e": 145, "b18": [145, 342], "805617e": 145, "b19": [145, 342], "906373e": 145, "920000e": 145, "b20": [145, 342], "007450e": 145, "124754e": 145, "b21": [145, 342], "108417e": 145, "603962e": 145, "c8": [145, 342], "037675e": 145, "509521e": 145, "c9": [145, 342], "031036e": 145, "265000e": 145, "c10": [145, 342], "001685e": 145, "929000e": 145, "c11": [145, 342], "101143e": 145, "221840e": 145, "c12": [145, 152, 342], "889000e": 145, "200000e": 145, "c13": [145, 342], "110000e": 145, "300335e": 145, "c14": [145, 342], "400324e": 145, "798745e": 145, "c15": [145, 342], "501060e": 145, "449000e": 145, "c16": [145, 342], "601470e": 145, "470000e": 145, "c17": [145, 342], "702259e": 145, "c18": [145, 342], "802676e": 145, "c19": [145, 342], "903481e": 145, "630000e": 145, "c20": [145, 342], "004032e": 145, "c21": [145, 342], "104934e": 145, "c22": [145, 342], "205720e": 145, "100000e": 145, "c23": [145, 342], "306892e": 145, "400672e": 145, "n10": [145, 342], "004165e": 145, "824951e": 145, "n11": [145, 342], "102609e": 145, "496840e": 145, "n12": [145, 342], "201861e": 145, "n13": [145, 342], "300574e": 145, "979000e": 145, "n14": [145, 342, 356], "963400e": 145, "400307e": 145, "n15": [145, 342], "660000e": 145, "500011e": 145, "n16": [145, 342], "600610e": 145, "130000e": 145, "n17": [145, 342], "700845e": 145, "173000e": 145, "n18": [145, 342], "801408e": 145, "190000e": 145, "n19": [145, 342], "901703e": 145, "360000e": 145, "n20": [145, 342], "002337e": 145, "344000e": 145, "n21": [145, 342], "102711e": 145, "400000e": [145, 482], "n22": [145, 342], "203440e": 145, "300000e": 145, "n23": [145, 342], "304122e": 145, "410000e": 145, "n24": [145, 342], "405104e": 145, "n25": [145, 342], "506066e": 145, "o11": [145, 342], "105125e": 145, "o12": [145, 342], "336635e": 145, "o13": [145, 342], "302481e": 145, "580000e": 145, "o14": [145, 342], "400860e": 145, "060600e": 145, "o15": [145, 342], "500307e": 145, "222400e": 145, "o16": [145, 285, 342, 356, 485, 493], "976200e": 145, "599491e": 145, "o17": [145, 285, 342, 485, 493], "800000e": 145, "699913e": 145, "o18": [145, 285, 342, 391, 485], "799916e": 145, "o19": [145, 342], "900358e": 145, "688000e": 145, "o20": [145, 342], "000408e": 145, "351000e": 145, "o21": [145, 342], "100866e": 145, "420000e": 145, "o22": [145, 342], "200997e": 145, "o23": [145, 342], "301569e": 145, "o24": [145, 342], "402047e": 145, "o25": [145, 342], "502946e": 145, "o26": [145, 342], "603834e": 145, "o27": [145, 342], "704826e": 145, "o28": [145, 342], "805781e": 145, "899840e": 145, "f13": [145, 342], "304509e": 145, "517205e": 145, "f14": [145, 342], "403506e": 145, "013601e": 145, "f15": [145, 342], "501801e": 145, "912693e": 145, "f16": [145, 342], "601147e": 145, "140594e": 145, "f17": [145, 342], "700210e": 145, "f18": [145, 342], "800094e": 145, "586200e": 145, "f19": [145, 342], "f20": [145, 342], "999998e": 145, "107000e": 145, "f21": [145, 342], "099995e": 145, "158000e": 145, "f22": [145, 342], "200300e": 145, "230000e": 145, "f23": [145, 342], "300357e": 145, "f24": [145, 342], "400812e": 145, "900000e": 145, "f25": [145, 342], "501210e": 145, "f26": [145, 342], "601962e": 145, "f26m": [145, 342], "602031e": 145, "f27": [145, 342], "702676e": 145, "f28": [145, 342], "803567e": 145, "600000e": 145, "f29": [145, 342], "904326e": 145, "f30": [145, 342], "005250e": 145, "f31": [145, 342], "106043e": 145, "018005e": 145, "ne15": [145, 342], "504317e": 145, "732843e": 145, "ne16": [145, 342], "602576e": 145, "ne17": [145, 342], "701767e": 145, "092000e": 145, "ne18": [145, 342], "800571e": 145, "672000e": 145, "ne19": [145, 342], "900188e": 145, "722000e": 145, "ne20": [145, 342], "048000e": 145, "999244e": 145, "ne21": [145, 342], "099385e": 145, "ne22": [145, 342], "199138e": 145, "ne23": [145, 342], "299447e": 145, "725000e": 145, "ne24": [145, 342], "399361e": 145, "028000e": 145, "ne25": [145, 342], "499774e": 145, "ne26": [145, 342], "600046e": 145, "970000e": 145, "ne27": [145, 342], "700759e": 145, "150000e": 145, "ne28": [145, 342], "801207e": 145, "ne29": [145, 342], "901939e": 145, "ne30": [145, 342], "002480e": 145, "ne31": [145, 342], "103311e": 145, "ne32": [145, 342], "204002e": 145, "ne33": [145, 342], "304938e": 145, "ne34": [145, 342], "405703e": 145, "298977e": 145, "na17": [145, 342], "703727e": 145, "na18": [145, 342], "802597e": 145, "281189e": 145, "na19": [145, 342], "901388e": 145, "na20": [145, 342], "000735e": 145, "479000e": 145, "na21": [145, 342], "099766e": 145, "249000e": 145, "na22": [145, 342], "199444e": 145, "210481e": 145, "na23": [145, 342, 356, 455, 469, 478], "na24": [145, 342], "399096e": 145, "398920e": 145, "na24m": [145, 342], "399147e": 145, "018000e": 145, "na25": [145, 342], "498995e": 145, "910000e": 145, "na26": [145, 342], "599263e": 145, "071280e": 145, "na27": [145, 342], "699408e": 145, "010000e": 145, "na28": [145, 342], "799894e": 145, "050000e": 145, "na29": [145, 342], "900286e": 145, "na30": [145, 342], "000898e": 145, "na31": [145, 342], "101359e": 145, "735000e": 145, "na32": [145, 342], "202047e": 145, "320000e": 145, "na33": [145, 342], "302672e": 145, "na34": [145, 342], "403517e": 145, "na35": [145, 342], "504249e": 145, "na36": [145, 342], "605148e": 145, "na37": [145, 342], "705934e": 145, "na38": [145, 342], "806596e": 145, "na39": [145, 342], "907384e": 145, "430505e": 145, "mg19": [145, 342], "903547e": 145, "002085e": 145, "mg20": [145, 342], "001886e": 145, "040000e": 145, "mg21": [145, 342], "101171e": 145, "220000e": 145, "mg22": [145, 342], "199957e": 145, "875500e": 145, "mg23": [145, 342], "299412e": 145, "130460e": 145, "mg24": [145, 342], "899000e": 145, "398504e": 145, "mg25": [145, 342], "498584e": 145, "mg26": [145, 342], "101000e": 145, "598259e": 145, "mg27": [145, 342], "698434e": 145, "674800e": 145, "mg28": [145, 342], "798388e": 145, "529400e": 145, "mg29": [145, 342], "898860e": 145, "mg30": [145, 342], "999043e": 145, "mg31": [145, 342], "099655e": 145, "mg32": [145, 342], "199897e": 145, "mg33": [145, 342], "300525e": 145, "mg34": [145, 342], "400946e": 145, "mg35": [145, 342], "501734e": 145, "mg36": [145, 342], "602300e": 145, "mg37": [145, 342], "703140e": 145, "mg38": [145, 342], "803757e": 145, "mg39": [145, 342], "904677e": 145, "mg40": [145, 342], "005393e": 145, "mg41": [145, 342], "106246e": 145, "698154e": 145, "al21": [145, 342], "102804e": 145, "al22": [145, 342], "201952e": 145, "al23": [145, 342], "300727e": 145, "460000e": 145, "al24": [145, 342], "399994e": 145, "053000e": 145, "al24m": [145, 342], "400040e": 145, "al25": [145, 342], "499043e": 145, "183000e": 145, "al26": [145, 342], "598689e": 145, "262632e": 145, "al26m": [145, 342], "598714e": 145, "346000e": 145, "al27": [145, 152, 342, 356], "al28": [145, 342], "798191e": 145, "347000e": 145, "al29": [145, 342], "898045e": 145, "936000e": 145, "al30": [145, 342], "998296e": 145, "620000e": 145, "al31": [145, 342], "098395e": 145, "440000e": 145, "al32": [145, 342], "198812e": 145, "al33": [145, 342], "299084e": 145, "170000e": 145, "al34": [145, 342], "399685e": 145, "al35": [145, 342], "499986e": 145, "830000e": 145, "al36": [145, 342], "600621e": 145, "al37": [145, 342], "701068e": 145, "070000e": 145, "al38": [145, 342], "801723e": 145, "al39": [145, 342], "902297e": 145, "al40": [145, 342], "003145e": 145, "al41": [145, 342], "103833e": 145, "al42": [145, 342], "204689e": 145, "al43": [145, 342], "305311e": 145, "si22": [145, 342], "203453e": 145, "si23": [145, 342], "302552e": 145, "si24": [145, 342], "401155e": 145, "si25": [145, 342], "500411e": 145, "si26": [145, 342], "599233e": 145, "245300e": 145, "si27": [145, 342], "698671e": 145, "si28": [145, 342, 478], "223000e": 145, "797693e": 145, "si29": [145, 342, 478], "683000e": 145, "897649e": 145, "si30": [145, 342, 478], "087000e": 145, "997377e": 145, "si31": [145, 342], "097536e": 145, "441600e": 145, "si32": [145, 342], "197415e": 145, "954437e": 145, "si33": [145, 342], "297800e": 145, "si34": [145, 342], "397858e": 145, "770000e": 145, "si35": [145, 342], "498458e": 145, "si36": [145, 342], "598660e": 145, "si37": [145, 342], "699294e": 145, "si38": [145, 342], "799563e": 145, "si39": [145, 342], "900207e": 145, "si40": [145, 342], "000587e": 145, "si41": [145, 342], "101456e": 145, "si42": [145, 342], "201979e": 145, "si43": [145, 342], "302866e": 145, "si44": [145, 342], "403526e": 145, "si45": [145, 342], "504127e": 145, "097376e": 145, "p24": [145, 342], "403435e": 145, "p25": [145, 342], "502026e": 145, "p26": [145, 342], "601178e": 145, "p27": [145, 342], "699923e": 145, "p28": [145, 342], "799231e": 145, "703000e": 145, "p29": [145, 342], "898180e": 145, "142000e": 145, "p30": [145, 342], "997831e": 145, "498800e": 145, "p31": [145, 342], "p32": [145, 342], "197391e": 145, "232755e": 145, "p33": [145, 342], "297173e": 145, "190240e": 145, "p34": [145, 342], "397364e": 145, "243000e": 145, "p35": [145, 342], "497331e": 145, "730000e": 145, "p36": [145, 342], "597826e": 145, "p37": [145, 342], "697961e": 145, "310000e": 145, "p38": [145, 342], "798416e": 145, "p39": [145, 342], "898618e": 145, "p40": [145, 342], "999130e": 145, "p41": [145, 342], "099433e": 145, "p42": [145, 342], "200101e": 145, "850000e": 145, "p43": [145, 342], "300619e": 145, "650000e": 145, "p44": [145, 342], "401299e": 145, "p45": [145, 342], "501922e": 145, "p46": [145, 342], "602738e": 145, "p47": [145, 342], "703133e": 145, "206439e": 145, "s26": [145, 342], "602788e": 145, "s27": [145, 342], "701883e": 145, "550000e": 145, "s28": [145, 342], "800437e": 145, "s29": [145, 342], "899661e": 145, "880000e": 145, "s30": [145, 342], "998490e": 145, "178000e": 145, "s31": [145, 342], "097955e": 145, "553400e": 145, "s32": [145, 342], "502000e": 145, "197207e": 145, "s33": [145, 342], "297146e": 145, "s34": [145, 342], "210000e": 145, "396787e": 145, "s35": [145, 342], "496903e": 145, "548768e": 145, "s36": [145, 342], "596708e": 145, "s37": [145, 342], "697113e": 145, "030000e": 145, "s38": [145, 342], "797116e": 145, "021800e": 145, "s39": [145, 342], "897513e": 145, "s40": [145, 342], "997545e": 145, "s41": [145, 342], "097958e": 145, "990000e": 145, "s42": [145, 342], "198102e": 145, "016000e": 145, "s43": [145, 342], "298716e": 145, "s44": [145, 342], "399021e": 145, "s45": [145, 342], "499651e": 145, "s46": [145, 342], "600075e": 145, "s47": [145, 342], "700859e": 145, "s48": [145, 342], "801417e": 145, "s49": [145, 342], "902362e": 145, "545274e": 145, "cl28": [145, 342], "802851e": 145, "cl29": [145, 342], "901411e": 145, "cl30": [145, 342], "000477e": 145, "cl31": [145, 342], "099241e": 145, "cl32": [145, 342], "198569e": 145, "cl33": [145, 342], "297745e": 145, "511000e": 145, "cl34": [145, 342], "397376e": 145, "526600e": 145, "cl34m": [145, 342], "397392e": 145, "919000e": 145, "cl35": [145, 342], "577000e": 145, "496885e": 145, "cl36": [145, 342], "596831e": 145, "508102e": 145, "cl37": [145, 342], "423000e": 145, "696590e": 145, "cl38": [145, 342], "796801e": 145, "233800e": 145, "cl38m": [145, 342], "796873e": 145, "cl39": [145, 342], "896801e": 145, "372000e": 145, "cl40": [145, 342], "997042e": 145, "cl41": [145, 342], "097068e": 145, "840000e": 145, "cl42": [145, 342], "197325e": 145, "cl43": [145, 342], "297405e": 145, "cl44": [145, 342], "397828e": 145, "cl45": [145, 342], "498029e": 145, "cl46": [145, 342], "598421e": 145, "cl47": [145, 342], "698871e": 145, "cl48": [145, 342], "799495e": 145, "cl49": [145, 342], "900032e": 145, "cl50": [145, 342], "000784e": 145, "cl51": [145, 342], "101449e": 145, "cl52": [145, 342], "202529e": 145, "994768e": 145, "ar29": [145, 342], "903801e": 145, "ar30": [145, 342], "002156e": 145, "ar31": [145, 342], "101212e": 145, "ar32": [145, 342], "199764e": 145, "ar33": [145, 342], "298993e": 145, "ar34": [145, 342], "398027e": 145, "438000e": 145, "ar35": [145, 342], "497526e": 145, "775600e": 145, "ar36": [145, 342], "365000e": 145, "596754e": 145, "ar37": [145, 342], "696678e": 145, "024950e": 145, "ar38": [145, 342], "796273e": 145, "ar39": [145, 342], "896431e": 145, "457256e": 145, "ar40": [145, 342], "960030e": 145, "996238e": 145, "ar41": [145, 342], "096450e": 145, "576600e": 145, "ar42": [145, 342], "196305e": 145, "038223e": 145, "ar43": [145, 342], "296564e": 145, "222000e": 145, "ar44": [145, 342], "396492e": 145, "122000e": 145, "ar45": [145, 342], "496804e": 145, "148000e": 145, "ar46": [145, 342], "596809e": 145, "ar47": [145, 342], "697219e": 145, "ar48": [145, 342], "797454e": 145, "160000e": 145, "ar49": [145, 342], "898052e": 145, "ar50": [145, 342], "998443e": 145, "060000e": 145, "ar51": [145, 342], "099163e": 145, "ar52": [145, 342], "199678e": 145, "ar53": [145, 342], "300494e": 145, "ar54": [145, 342], "401381e": 145, "909830e": 145, "k31": [145, 342], "103453e": 145, "k32": [145, 342], "202192e": 145, "k33": [145, 342], "300726e": 145, "k34": [145, 342], "399841e": 145, "k35": [145, 342], "498801e": 145, "780000e": 145, "k36": [145, 342], "598129e": 145, "k37": [145, 342], "697338e": 145, "225000e": 145, "k38": [145, 342], "796908e": 145, "590600e": 145, "k38m": [145, 342], "796922e": 145, "244000e": 145, "k38m2": [145, 342], "797279e": 145, "195000e": 145, "k39": [145, 342], "325810e": 145, "896371e": 145, "k40": [145, 342], "996400e": 145, "938304e": 145, "k41": [145, 342], "730200e": 145, "096183e": 145, "k42": [145, 342], "196240e": 145, "447800e": 145, "k43": [145, 342], "296072e": 145, "k44": [145, 342], "396156e": 145, "327800e": 145, "k45": [145, 342], "496070e": 145, "068600e": 145, "k46": [145, 342], "596198e": 145, "k47": [145, 342], "696168e": 145, "k48": [145, 342], "796551e": 145, "k49": [145, 342], "896745e": 145, "260000e": 145, "k50": [145, 342], "997278e": 145, "720000e": 145, "k51": [145, 342], "097638e": 145, "k52": [145, 342], "198261e": 145, "k53": [145, 342], "298712e": 145, "k54": [145, 342], "399420e": 145, "k55": [145, 342], "499971e": 145, "k56": [145, 342], "600958e": 145, "k57": [145, 342], "701515e": 145, "k58": [145, 342], "802354e": 145, "k59": [145, 342], "902900e": 145, "007938e": 145, "ca33": [145, 342], "303090e": 145, "ca34": [145, 342], "401412e": 145, "ca35": [145, 342], "500494e": 145, "570000e": 145, "ca36": [145, 342], "599309e": 145, "012000e": 145, "ca37": [145, 342], "698587e": 145, "811000e": 145, "ca38": [145, 342], "797632e": 145, "437600e": 145, "ca39": [145, 342], "897072e": 145, "603000e": 145, "ca40": [145, 342], "694000e": 145, "996259e": 145, "ca41": [145, 342], "096228e": 145, "136758e": 145, "ca42": [145, 342], "195862e": 145, "ca43": [145, 342], "295877e": 145, "ca44": [145, 342], "090000e": 145, "395548e": 145, "ca45": [145, 342], "495619e": 145, "404950e": 145, "ca46": [145, 342], "595369e": 145, "ca47": [145, 342], "695455e": 145, "919104e": 145, "ca48": [145, 342], "870000e": 145, "795253e": 145, "151509e": 145, "ca49": [145, 342], "895567e": 145, "230800e": 145, "ca50": [145, 342], "995752e": 145, "345000e": 145, "ca51": [145, 342], "096150e": 145, "ca52": [145, 342], "196510e": 145, "ca53": [145, 342], "297005e": 145, "610000e": 145, "ca54": [145, 342], "397435e": 145, "ca55": [145, 342], "498055e": 145, "ca56": [145, 342], "598557e": 145, "ca57": [145, 342], "699236e": 145, "ca58": [145, 342], "799786e": 145, "ca59": [145, 342], "900600e": 145, "ca60": [145, 342], "001124e": 145, "ca61": [145, 342], "101909e": 145, "495591e": 145, "sc35": [145, 342], "502689e": 145, "sc36": [145, 342], "601492e": 145, "sc37": [145, 342], "700305e": 145, "sc38": [145, 342], "799470e": 145, "sc39": [145, 342], "898479e": 145, "sc40": [145, 342], "997797e": 145, "823000e": 145, "sc41": [145, 342], "096925e": 145, "963000e": 145, "sc42": [145, 342], "196552e": 145, "807900e": 145, "sc42m": [145, 342], "196618e": 145, "sc43": [145, 342], "296115e": 145, "400760e": 145, "sc43m": [145, 342], "296131e": 145, "380000e": 145, "sc44": [145, 342], "395940e": 145, "429200e": 145, "sc44m": [145, 342], "395969e": 145, "sc45": [145, 342], "sc45m": [145, 342], "495593e": 145, "258000e": 145, "sc46": [145, 342], "595517e": 145, "239456e": 145, "sc46m": [145, 342], "595533e": 145, "875000e": 145, "sc47": [145, 342], "695241e": 145, "893709e": 145, "sc48": [145, 342], "795223e": 145, "573560e": 145, "sc49": [145, 342], "895002e": 145, "430800e": 145, "sc50": [145, 342], "995219e": 145, "025000e": 145, "sc50m": [145, 342], "995246e": 145, "sc51": [145, 342], "095360e": 145, "240000e": 145, "sc52": [145, 342], "195667e": 145, "sc53": [145, 342], "295961e": 145, "sc54": [145, 342], "396326e": 145, "sc55": [145, 342], "496824e": 145, "sc56": [145, 342], "597287e": 145, "sc56m": [145, 342], "597292e": 145, "sc57": [145, 342], "697779e": 145, "sc58": [145, 342], "798371e": 145, "sc59": [145, 342], "898922e": 145, "sc60": [145, 342], "999571e": 145, "sc61": [145, 342], "099890e": 145, "sc62": [145, 342], "200716e": 145, "sc63": [145, 342], "301254e": 145, "786675e": 145, "ti37": [145, 342], "702429e": 145, "ti38": [145, 342], "800977e": 145, "ti39": [145, 342], "900161e": 145, "ti40": [145, 342], "999050e": 145, "ti41": [145, 342], "098315e": 145, "ti42": [145, 342], "197303e": 145, "086500e": 145, "ti43": [145, 342], "296852e": 145, "ti44": [145, 342], "865014e": 145, "ti45": [145, 342], "495813e": 145, "108800e": 145, "ti46": [145, 342], "595263e": 145, "ti47": [145, 342], "695176e": 145, "ti48": [145, 342], "794795e": 145, "ti48m": [145, 342], "795184e": 145, "ti49": [145, 342], "894787e": 145, "ti50": [145, 342], "180000e": 145, "994479e": 145, "ti51": [145, 342], "094661e": 145, "456000e": 145, "ti52": [145, 342], "194690e": 145, "ti53": [145, 342], "294973e": 145, "270000e": 145, "ti54": [145, 342], "395105e": 145, "ti55": [145, 342], "495527e": 145, "ti56": [145, 342], "595820e": 145, "ti57": [145, 342], "696399e": 145, "ti58": [145, 342], "796697e": 145, "ti59": [145, 342], "897293e": 145, "ti60": [145, 342], "997676e": 145, "ti61": [145, 342], "098320e": 145, "ti62": [145, 342], "198749e": 145, "ti63": [145, 342], "299442e": 145, "ti64": [145, 342], "399563e": 145, "ti65": [145, 342], "500385e": 145, "ti66": [145, 342], "599398e": 145, "094147e": 145, "v39": [145, 342], "902132e": 145, "v40": [145, 342], "001109e": 145, "v41": [145, 342], "099978e": 145, "v42": [145, 342], "199123e": 145, "v43": [145, 342], "298065e": 145, "v44": [145, 342], "397411e": 145, "v44m": [145, 342], "397440e": 145, "v45": [145, 342], "496578e": 145, "v46": [145, 342], "596020e": 145, "v46m": [145, 342], "596106e": 145, "v47": [145, 342], "695491e": 145, "956000e": 145, "v48": [145, 342], "795225e": 145, "380154e": 145, "v49": [145, 342], "894852e": 145, "851200e": 145, "v50": [145, 342], "994716e": 145, "362585e": 145, "v51": [145, 342], "975000e": 145, "094396e": 145, "v52": [145, 342], "194478e": 145, "245800e": 145, "v53": [145, 342], "294434e": 145, "v54": [145, 342], "394644e": 145, "v55": [145, 342], "494723e": 145, "540000e": 145, "v56": [145, 342], "595053e": 145, "v57": [145, 342], "695256e": 145, "v58": [145, 342], "795683e": 145, "v59": [145, 342], "896021e": 145, "v60": [145, 342], "996503e": 145, "v60m": [145, 342], "996511e": 145, "v61": [145, 342], "096848e": 145, "v62": [145, 342], "197378e": 145, "v63": [145, 342], "297755e": 145, "v64": [145, 342], "398347e": 145, "v65": [145, 342], "498792e": 145, "v66": [145, 342], "599160e": 145, "v67": [145, 342], "699669e": 145, "v68": [145, 342], "798403e": 145, "v69": [145, 342], "897366e": 145, "199613e": 145, "cr41": [145, 342], "101900e": 145, "cr42": [145, 342], "200643e": 145, "330000e": 145, "cr43": [145, 342], "299771e": 145, "120000e": 145, "cr44": [145, 342], "398555e": 145, "280000e": 145, "cr45": [145, 342], "497964e": 145, "cr46": [145, 342], "596836e": 145, "cr47": [145, 342], "696290e": 145, "cr48": [145, 342], "795403e": 145, "761600e": 145, "cr49": [145, 342], "895134e": 145, "538000e": 145, "cr50": [145, 342, 478], "994604e": 145, "102400e": 145, "cr51": [145, 342], "094477e": 145, "393626e": 145, "cr52": [145, 342, 478], "378900e": 145, "194051e": 145, "cr53": [145, 342, 478], "501000e": 145, "294065e": 145, "cr54": [145, 342, 478], "393888e": 145, "cr55": [145, 342], "494084e": 145, "098200e": 145, "cr56": [145, 342], "594065e": 145, "564000e": 145, "cr57": [145, 342], "694361e": 145, "cr58": [145, 342], "794435e": 145, "cr59": [145, 342], "894859e": 145, "cr59m": [145, 342], "894913e": 145, "cr60": [145, 342], "995008e": 145, "cr61": [145, 342], "095472e": 145, "340000e": 145, "cr62": [145, 342], "195661e": 145, "cr63": [145, 342], "296186e": 145, "290000e": 145, "cr64": [145, 342], "396441e": 145, "cr65": [145, 342], "497016e": 145, "cr66": [145, 342], "597338e": 145, "cr67": [145, 342], "697955e": 145, "cr68": [145, 342], "798138e": 145, "cr69": [145, 342], "898809e": 145, "cr70": [145, 342], "999210e": 145, "cr71": [145, 342], "098368e": 145, "cr72": [145, 342], "196983e": 145, "493804e": 145, "mn43": [145, 342], "301612e": 145, "mn44": [145, 342], "400687e": 145, "mn45": [145, 342], "499451e": 145, "mn46": [145, 342], "598672e": 145, "mn47": [145, 342], "697610e": 145, "mn48": [145, 342], "796852e": 145, "mn49": [145, 342], "895962e": 145, "820000e": 145, "mn50": [145, 342], "995424e": 145, "831900e": 145, "mn50m": [145, 342], "995448e": 145, "mn51": [145, 342], "094821e": 145, "772000e": 145, "mn52": [145, 342], "194557e": 145, "830624e": 145, "mn52m": [145, 342], "194597e": 145, "266000e": 145, "mn53": [145, 342], "294129e": 145, "167606e": 145, "mn54": [145, 342], "394036e": 145, "697408e": 145, "mn55": [145, 342, 356, 478], "mn56": [145, 342], "593890e": 145, "284040e": 145, "mn57": [145, 342], "693829e": 145, "mn58": [145, 342], "793998e": 145, "mn58m": [145, 342], "794006e": 145, "mn59": [145, 342], "894044e": 145, "mn60": [145, 342], "994291e": 145, "mn60m": [145, 342], "994320e": 145, "mn61": [145, 342], "094465e": 145, "mn62": [145, 342], "194843e": 145, "mn62m": [145, 342], "194880e": 145, "710000e": 145, "mn63": [145, 342], "295024e": 145, "mn64": [145, 342], "395425e": 145, "mn64m": [145, 342], "395444e": 145, "mn65": [145, 342], "495634e": 145, "mn66": [145, 342], "596108e": 145, "mn67": [145, 342], "696414e": 145, "mn68": [145, 342], "796930e": 145, "mn69": [145, 342], "897284e": 145, "mn70": [145, 342], "997752e": 145, "mn71": [145, 342], "098128e": 145, "mn72": [145, 342], "198763e": 145, "mn73": [145, 342], "299208e": 145, "mn74": [145, 342], "397935e": 145, "584514e": 145, "fe45": [145, 342], "501458e": 145, "890000e": 145, "fe46": [145, 342], "600081e": 145, "fe47": [145, 342], "699289e": 145, "fe48": [145, 342], "798050e": 145, "fe49": [145, 342], "897361e": 145, "fe50": [145, 342], "996299e": 145, "520000e": 145, "fe51": [145, 342], "095682e": 145, "fe52": [145, 342], "194811e": 145, "fe52m": [145, 342], "195558e": 145, "fe53": [145, 342], "294531e": 145, "106000e": 145, "fe53m": [145, 342], "294857e": 145, "524000e": 145, "fe54": [145, 292, 342, 478], "845000e": 145, "393961e": 145, "fe55": [145, 342], "493829e": 145, "659220e": 145, "175400e": 145, "593494e": 145, "fe57": [145, 342, 478], "119000e": 145, "693539e": 145, "fe58": [145, 342, 478], "793328e": 145, "fe59": [145, 342], "893488e": 145, "843936e": 145, "fe60": [145, 342], "993407e": 145, "267915e": 145, "fe61": [145, 342], "093675e": 145, "588000e": 145, "fe62": [145, 342], "193677e": 145, "fe63": [145, 342], "294037e": 145, "fe64": [145, 342], "394120e": 145, "fe65": [145, 342], "494538e": 145, "fe65m": [145, 342], "494581e": 145, "fe66": [145, 342], "594678e": 145, "fe67": [145, 342], "695095e": 145, "fe67m": [145, 342], "695136e": 145, "fe68": [145, 342], "795370e": 145, "fe69": [145, 342], "895878e": 145, "fe70": [145, 342], "996146e": 145, "fe71": [145, 342], "096672e": 145, "fe72": [145, 342], "196962e": 145, "fe73": [145, 342], "297344e": 145, "fe74": [145, 342], "397680e": 145, "fe75": [145, 342], "498326e": 145, "fe76": [145, 342], "fe77": [145, 342], "696055e": 145, "893320e": 145, "co47": [145, 342], "701149e": 145, "co48": [145, 342], "800176e": 145, "co49": [145, 342], "898972e": 145, "co50": [145, 342], "998154e": 145, "co51": [145, 342], "097072e": 145, "co52": [145, 342], "196359e": 145, "co53": [145, 342], "295422e": 145, "co53m": [145, 342], "295765e": 145, "co54": [145, 342], "394846e": 145, "932800e": 145, "co54m": [145, 342], "394867e": 145, "co55": [145, 342], "494200e": 145, "310800e": 145, "co56": [145, 342], "593984e": 145, "673190e": 145, "co57": [145, 342], "693629e": 145, "347834e": 145, "co58": [145, 342], "793575e": 145, "122304e": 145, "co58m": [145, 342], "793578e": 145, "276000e": 145, "co58m2": [145, 342], "793581e": 145, "co59": [145, 342], "co60": [145, 342], "993382e": 145, "663442e": 145, "co60m": [145, 342], "993388e": 145, "co61": [145, 342], "093248e": 145, "936400e": 145, "co62": [145, 342], "193405e": 145, "co62m": [145, 342], "193407e": 145, "316000e": 145, "co63": [145, 342], "293361e": 145, "740000e": 145, "co64": [145, 342], "393581e": 145, "co65": [145, 342], "493648e": 145, "co66": [145, 342], "593976e": 145, "co67": [145, 342], "694089e": 145, "co68": [145, 342], "794487e": 145, "co68m": [145, 342], "794503e": 145, "co69": [145, 342], "894632e": 145, "co70": [145, 342], "995121e": 145, "co71": [145, 342], "095290e": 145, "co72": [145, 342], "195781e": 145, "co73": [145, 342], "296024e": 145, "co74": [145, 342], "396538e": 145, "co75": [145, 342], "496833e": 145, "co76": [145, 342], "597201e": 145, "co77": [145, 342], "697587e": 145, "co78": [145, 342], "798351e": 145, "co79": [145, 342], "897025e": 145, "869336e": 145, "ni48": [145, 342], "801975e": 145, "ni49": [145, 342], "900966e": 145, "ni50": [145, 342], "999593e": 145, "ni51": [145, 342], "098772e": 145, "ni52": [145, 342], "197568e": 145, "ni53": [145, 342], "296847e": 145, "ni54": [145, 342], "395791e": 145, "ni55": [145, 342], "495133e": 145, "047000e": 145, "ni56": [145, 342], "594213e": 145, "248800e": 145, "ni57": [145, 342], "693979e": 145, "281600e": 145, "ni58": [145, 342, 478], "807700e": 145, "793534e": 145, "ni59": [145, 342], "893435e": 145, "398326e": 145, "ni60": [145, 342, 478], "622300e": 145, "993079e": 145, "ni61": [145, 342, 478], "140000e": 145, "093106e": 145, "ni62": [145, 342, 478], "634000e": 145, "192835e": 145, "ni63": [145, 342], "292967e": 145, "193561e": 145, "ni64": [145, 342, 478], "392797e": 145, "ni65": [145, 342], "493008e": 145, "063000e": 145, "ni66": [145, 342], "592914e": 145, "965600e": 145, "ni67": [145, 342], "693157e": 145, "ni68": [145, 342], "793187e": 145, "ni68m": [145, 342], "793493e": 145, "ni69": [145, 342], "893561e": 145, "ni69m": [145, 342], "893595e": 145, "ni70": [145, 342], "993650e": 145, "ni71": [145, 342], "094074e": 145, "560000e": 145, "ni71m": [145, 342], "094127e": 145, "ni72": [145, 342], "194209e": 145, "ni73": [145, 342], "294647e": 145, "ni74": [145, 342], "394807e": 145, "077000e": 145, "ni75": [145, 342], "495287e": 145, "ni76": [145, 342], "ni77": [145, 342], "589000e": 145, "ni78": [145, 342], "796318e": 145, "ni79": [145, 342], "896941e": 145, "ni80": [145, 342], "997411e": 145, "ni81": [145, 342], "098259e": 145, "ni82": [145, 342], "198802e": 145, "354564e": 145, "cu52": [145, 342], "199718e": 145, "cu53": [145, 342], "298555e": 145, "cu54": [145, 342], "397671e": 145, "cu55": [145, 342], "496605e": 145, "cu56": [145, 342], "595856e": 145, "cu57": [145, 342], "694921e": 145, "cu58": [145, 342], "794454e": 145, "cu59": [145, 342], "893950e": 145, "cu60": [145, 342], "993737e": 145, "422000e": 145, "cu61": [145, 342], "093346e": 145, "202040e": 145, "cu62": [145, 342], "193258e": 145, "802000e": 145, "cu63": [145, 342], "917000e": 145, "292960e": 145, "cu64": [145, 342], "392976e": 145, "572216e": 145, "cu65": [145, 342], "083000e": 145, "492779e": 145, "cu66": [145, 342], "592887e": 145, "072000e": 145, "cu67": [145, 342], "692773e": 145, "225880e": 145, "cu68": [145, 342], "792961e": 145, "cu68m": [145, 342], "793039e": 145, "cu69": [145, 342], "892943e": 145, "cu70": [145, 342], "993239e": 145, "450000e": 145, "cu70m": [145, 342], "993250e": 145, "cu70m2": [145, 342], "993265e": 145, "cu71": [145, 342], "093268e": 145, "940000e": 145, "cu72": [145, 342], "193582e": 145, "cu73": [145, 342], "293667e": 145, "cu74": [145, 342], "393988e": 145, "cu75": [145, 342], "494190e": 145, "224000e": 145, "cu76": [145, 342], "594528e": 145, "cu76m": [145, 342], "594570e": 145, "cu77": [145, 342], "694785e": 145, "698000e": 145, "cu78": [145, 342], "795196e": 145, "cu79": [145, 342], "895456e": 145, "cu80": [145, 342], "996087e": 145, "136000e": 145, "cu81": [145, 342], "096550e": 145, "cu82": [145, 342], "197285e": 145, "cu83": [145, 342], "297817e": 145, "cu84": [145, 342], "398593e": 145, "539556e": 145, "zn54": [145, 342], "399295e": 145, "zn55": [145, 342], "498398e": 145, "zn56": [145, 342], "597238e": 145, "zn57": [145, 342], "696479e": 145, "zn58": [145, 342], "795459e": 145, "670000e": 145, "zn59": [145, 342], "894926e": 145, "786000e": 145, "zn60": [145, 342], "994183e": 145, "428000e": 145, "zn61": [145, 342], "093951e": 145, "zn61m": [145, 342], "093960e": 145, "zn61m2": [145, 342], "093996e": 145, "zn61m3": [145, 342], "094032e": 145, "zn62": [145, 342], "193433e": 145, "309480e": 145, "zn63": [145, 342], "293321e": 145, "308200e": 145, "zn64": [145, 342], "863000e": 145, "392914e": 145, "zn65": [145, 342], "492924e": 145, "107555e": 145, "zn66": [145, 342], "790000e": 145, "592603e": 145, "zn67": [145, 342], "692713e": 145, "zn68": [145, 342], "792484e": 145, "zn69": [145, 342], "892655e": 145, "384000e": 145, "zn69m": [145, 342], "892702e": 145, "952000e": 145, "zn70": [145, 342], "992532e": 145, "199163e": 145, "zn71": [145, 342], "092772e": 145, "zn71m": [145, 342], "092789e": 145, "426000e": 145, "zn72": [145, 342], "192686e": 145, "674000e": 145, "zn73": [145, 342], "292978e": 145, "zn73m": [145, 342], "292999e": 145, "zn74": [145, 342], "392946e": 145, "zn75": [145, 342], "493294e": 145, "zn76": [145, 342], "593329e": 145, "zn77": [145, 342], "693696e": 145, "zn77m": [145, 342], "693779e": 145, "zn78": [145, 342], "793844e": 145, "zn79": [145, 342], "894265e": 145, "zn80": [145, 342], "994434e": 145, "619000e": 145, "zn81": [145, 342], "095048e": 145, "zn82": [145, 342], "195442e": 145, "zn83": [145, 342], "296103e": 145, "zn84": [145, 342], "396545e": 145, "zn85": [145, 342], "497287e": 145, "zn86": [145, 342], "597776e": 145, "zn87": [145, 342], "696824e": 145, "972307e": 145, "ga56": [145, 342], "ga57": [145, 342], "698293e": 145, "ga58": [145, 342], "797425e": 145, "ga59": [145, 342], "896337e": 145, "ga60": [145, 342], "995706e": 145, "ga61": [145, 342], "094945e": 145, "ga62": [145, 342], "194418e": 145, "161210e": 145, "ga63": [145, 342], "293929e": 145, "ga64": [145, 342], "393684e": 145, "576200e": 145, "ga65": [145, 342], "493273e": 145, "ga66": [145, 342], "593159e": 145, "416400e": 145, "ga67": [145, 342], "692820e": 145, "818109e": 145, "ga68": [145, 342], "792798e": 145, "062600e": 145, "ga69": [145, 342], "010800e": 145, "892557e": 145, "ga70": [145, 342], "992602e": 145, "268400e": 145, "ga71": [145, 342], "989200e": 145, "092470e": 145, "ga72": [145, 342], "192637e": 145, "076000e": 145, "ga72m": [145, 342], "192650e": 145, "968000e": 145, "ga73": [145, 342], "292518e": 145, "749600e": 145, "ga74": [145, 342], "392695e": 145, "872000e": 145, "ga74m": [145, 342], "392701e": 145, "ga75": [145, 342], "492650e": 145, "ga76": [145, 342], "592883e": 145, "ga77": [145, 342], "692915e": 145, "ga78": [145, 342], "793161e": 145, "ga79": [145, 342], "893289e": 145, "848000e": 145, "ga80": [145, 342], "993652e": 145, "ga80m": [145, 342], "993654e": 145, "ga81": [145, 342], "093775e": 145, "217000e": 145, "ga82": [145, 342], "194299e": 145, "ga83": [145, 342], "294698e": 145, "081000e": 145, "ga84": [145, 342], "395265e": 145, "ga85": [145, 342], "495700e": 145, "ga86": [145, 342], "596312e": 145, "ga87": [145, 342], "696892e": 145, "ga88": [145, 342], "797607e": 145, "ga89": [145, 342], "896379e": 145, "264024e": 145, "ge58": [145, 342], "799101e": 145, "ge59": [145, 342], "898175e": 145, "ge60": [145, 342], "997019e": 145, "ge61": [145, 342], "096379e": 145, "ge62": [145, 342], "195465e": 145, "ge63": [145, 342], "294964e": 145, "ge64": [145, 342], "394165e": 145, "ge65": [145, 342], "493944e": 145, "ge66": [145, 342], "593384e": 145, "ge67": [145, 342], "693273e": 145, "134000e": 145, "ge68": [145, 342], "792809e": 145, "340835e": 145, "ge69": [145, 342], "892796e": 145, "405800e": 145, "ge70": [145, 342], "037000e": 145, "992425e": 145, "ge71": [145, 342], "092495e": 145, "875520e": 145, "ge71m": [145, 342], "092516e": 145, "041000e": 145, "ge72": [145, 342], "731000e": 145, "192208e": 145, "ge73": [145, 235, 342], "760000e": 145, "292346e": 145, "ge73m": [145, 342], "292353e": 145, "ge74": [145, 235, 342], "673000e": 145, "392118e": 145, "ge75": [145, 342], "492286e": 145, "966800e": 145, "ge75m": [145, 342], "492301e": 145, "ge76": [145, 235, 342], "592140e": 145, "ge77": [145, 342], "692355e": 145, "035960e": 145, "ge77m": [145, 342], "692372e": 145, "ge78": [145, 342], "792285e": 145, "ge79": [145, 342], "892540e": 145, "898000e": 145, "ge79m": [145, 342], "892560e": 145, "ge80": [145, 342], "992537e": 145, "950000e": 145, "ge81": [145, 342], "092882e": 145, "ge81m": [145, 342], "092955e": 145, "ge82": [145, 342], "192955e": 145, "ge83": [145, 342], "293462e": 145, "ge84": [145, 342], "393747e": 145, "ge85": [145, 342], "494303e": 145, "ge86": [145, 342], "594649e": 145, "ge87": [145, 342], "695251e": 145, "ge88": [145, 342], "795691e": 145, "ge89": [145, 342], "896383e": 145, "ge90": [145, 342], "996879e": 145, "ge91": [145, 342], "096039e": 145, "ge92": [145, 342], "196674e": 145, "492160e": 145, "as60": [145, 342], "999313e": 145, "as61": [145, 342], "098062e": 145, "as62": [145, 342], "197320e": 145, "as63": [145, 342], "296369e": 145, "as64": [145, 342], "395757e": 145, "as65": [145, 342], "494956e": 145, "as66": [145, 342], "594471e": 145, "as67": [145, 342], "693919e": 145, "as68": [145, 342], "793677e": 145, "516000e": 145, "as69": [145, 342], "893227e": 145, "as70": [145, 342], "993092e": 145, "156000e": 145, "as71": [145, 342], "092711e": 145, "350800e": 145, "as72": [145, 342], "192675e": 145, "as73": [145, 342], "292382e": 145, "937920e": 145, "as74": [145, 342], "392393e": 145, "535328e": 145, "as74m": [145, 342], "as75": [145, 235, 342], "as75m": [145, 342], "492192e": 145, "762000e": 145, "as76": [145, 342], "592239e": 145, "446400e": 145, "as77": [145, 342], "692065e": 145, "396440e": 145, "as77m": [145, 342], "692116e": 145, "as78": [145, 342], "792183e": 145, "442000e": 145, "as79": [145, 342], "892095e": 145, "406000e": 145, "as80": [145, 342], "992253e": 145, "as81": [145, 342], "092213e": 145, "as82": [145, 342], "192450e": 145, "as82m": [145, 342], "192465e": 145, "as83": [145, 342], "292498e": 145, "as84": [145, 342], "392906e": 145, "as84m": [145, 342], "392930e": 145, "as85": [145, 342], "493202e": 145, "021000e": 145, "as86": [145, 342], "593650e": 145, "as87": [145, 342], "693990e": 145, "as88": [145, 342], "794494e": 145, "as89": [145, 342], "894939e": 145, "as90": [145, 342], "995550e": 145, "as91": [145, 342], "096043e": 145, "as92": [145, 342], "196680e": 145, "as93": [145, 342], "295629e": 145, "as94": [145, 342], "396049e": 145, "895939e": 145, "se63": [145, 342], "298182e": 145, "se64": [145, 342], "397139e": 145, "se65": [145, 342], "496466e": 145, "se66": [145, 342], "595521e": 145, "se67": [145, 342], "695009e": 145, "se68": [145, 342], "794180e": 145, "se69": [145, 342], "893956e": 145, "se70": [145, 342], "993339e": 145, "466000e": 145, "se71": [145, 342], "093224e": 145, "844000e": 145, "se72": [145, 342], "192711e": 145, "257600e": 145, "se73": [145, 342], "292676e": 145, "574000e": 145, "se73m": [145, 342], "292679e": 145, "388000e": 145, "se74": [145, 342], "392248e": 145, "se75": [145, 342], "492252e": 145, "034899e": 145, "se76": [145, 342], "591921e": 145, "se77": [145, 342], "691991e": 145, "se77m": [145, 342], "692009e": 145, "736000e": 145, "se78": [145, 342], "377000e": 145, "791731e": 145, "se79": [145, 342], "891850e": 145, "031911e": 145, "se79m": [145, 342], "891860e": 145, "352000e": 145, "se80": [145, 342], "961000e": 145, "991652e": 145, "se81": [145, 342], "091799e": 145, "se81m": [145, 342], "091810e": 145, "437000e": 145, "se82": [145, 342], "191670e": 145, "029465e": 145, "se83": [145, 342], "291912e": 145, "338000e": 145, "se83m": [145, 342], "291936e": 145, "se84": [145, 342], "391846e": 145, "se85": [145, 342], "492225e": 145, "se85m": [145, 342], "492226e": 145, "se86": [145, 342], "592427e": 145, "430000e": 145, "se87": [145, 342], "692852e": 145, "se88": [145, 342], "793142e": 145, "530000e": 145, "se89": [145, 342], "893645e": 145, "se90": [145, 342], "993996e": 145, "se91": [145, 342], "094596e": 145, "se92": [145, 342], "194992e": 145, "se93": [145, 342], "se94": [145, 342], "se95": [145, 342], "496617e": 145, "se96": [145, 342], "595903e": 145, "se97": [145, 342], "696344e": 145, "990353e": 145, "br65": [145, 342], "498206e": 145, "br66": [145, 342], "597469e": 145, "br67": [145, 342], "br68": [145, 342], "795852e": 145, "br69": [145, 342], "895011e": 145, "br70": [145, 342], "br70m": [145, 342], "994725e": 145, "br71": [145, 342], "093874e": 145, "br72": [145, 342], "193664e": 145, "860000e": 145, "br72m": [145, 342], "193675e": 145, "br73": [145, 342], "293169e": 145, "br74": [145, 342], "392989e": 145, "br74m": [145, 342], "392991e": 145, "br75": [145, 342], "492578e": 145, "br76": [145, 342], "592454e": 145, "832000e": 145, "br76m": [145, 342], "592465e": 145, "br77": [145, 342], "692138e": 145, "053440e": 145, "br77m": [145, 342], "692149e": 145, "568000e": 145, "br78": [145, 342], "792115e": 145, "br78m": [145, 342], "792134e": 145, "194000e": 145, "br79": [145, 342], "069000e": 145, "891834e": 145, "br79m": [145, 342], "891856e": 145, "br80": [145, 342], "991853e": 145, "060800e": 145, "br80m": [145, 342], "991862e": 145, "591000e": 145, "br81": [145, 342], "931000e": 145, "091629e": 145, "br82": [145, 342], "191680e": 145, "270152e": 145, "br82m": [145, 342], "191685e": 145, "678000e": 145, "br83": [145, 342], "291518e": 145, "546400e": 145, "br84": [145, 342], "391648e": 145, "905600e": 145, "br84m": [145, 342], "391682e": 145, "br85": [145, 342], "491561e": 145, "br86": [145, 342], "591880e": 145, "510000e": 145, "br86m": [145, 342], "591881e": 145, "br87": [145, 342], "692071e": 145, "br88": [145, 342], "792407e": 145, "br89": [145, 342], "892638e": 145, "357000e": 145, "br90": [145, 342], "993063e": 145, "br91": [145, 342], "093397e": 145, "br92": [145, 342], "193926e": 145, "br93": [145, 342], "294305e": 145, "br94": [145, 342], "394868e": 145, "br95": [145, 342], "br96": [145, 342], "595853e": 145, "br97": [145, 342], "696280e": 145, "br98": [145, 342], "796798e": 145, "br99": [145, 342], "895839e": 145, "br100": [145, 342], "996237e": 145, "379932e": 145, "kr67": [145, 342], "698235e": 145, "kr68": [145, 342], "797167e": 145, "kr69": [145, 342], "896518e": 145, "kr70": [145, 342], "995526e": 145, "kr71": [145, 342], "094963e": 145, "kr72": [145, 342], "kr73": [145, 342], "kr74": [145, 342], "393308e": 145, "kr75": [145, 342], "493095e": 145, "kr76": [145, 342], "592591e": 145, "328000e": 145, "kr77": [145, 342], "692467e": 145, "275000e": 145, "kr78": [145, 342], "792036e": 145, "kr79": [145, 342], "892008e": 145, "261440e": 145, "kr79m": [145, 342], "892022e": 145, "kr80": [145, 342], "991638e": 145, "kr81": [145, 342], "091659e": 145, "226536e": 145, "kr81m": [145, 342], "091680e": 145, "kr82": [145, 342], "191348e": 145, "kr83": [145, 342], "149000e": 145, "291414e": 145, "kr83m": [145, 342], "291418e": 145, "kr84": [145, 342], "391151e": 145, "kr85": [145, 342], "491253e": 145, "388898e": 145, "kr85m": [145, 342], "491285e": 145, "613000e": 145, "kr86": [145, 342], "591061e": 145, "kr87": [145, 342], "691336e": 145, "578000e": 145, "kr88": [145, 342], "791445e": 145, "017000e": 145, "kr89": [145, 342], "891763e": 145, "kr90": [145, 342], "991952e": 145, "232000e": 145, "kr91": [145, 342], "092345e": 145, "kr92": [145, 342], "192616e": 145, "kr93": [145, 342], "293127e": 145, "286000e": 145, "kr94": [145, 342], "393436e": 145, "kr95": [145, 342], "493984e": 145, "kr96": [145, 342], "594307e": 145, "kr97": [145, 342], "694856e": 145, "kr98": [145, 342], "795191e": 145, "kr99": [145, 342], "895760e": 145, "kr100": [145, 342], "996114e": 145, "kr101": [145, 342], "009670e": 145, "kr102": [145, 342], "019595e": 145, "kr103": [145, 342], "029639e": 145, "546766e": 145, "rb71": [145, 342], "096532e": 145, "rb72": [145, 342], "195908e": 145, "rb73": [145, 342], "295056e": 145, "rb74": [145, 342], "394426e": 145, "477600e": 145, "rb75": [145, 342], "493857e": 145, "rb76": [145, 342], "593507e": 145, "rb77": [145, 342], "693041e": 145, "268000e": 145, "rb78": [145, 342], "792814e": 145, "059600e": 145, "rb78m": [145, 342], "792826e": 145, "444000e": 145, "rb79": [145, 342], "892399e": 145, "374000e": 145, "rb80": [145, 342], "992252e": 145, "rb81": [145, 342], "091900e": 145, "645920e": 145, "rb81m": [145, 342], "091909e": 145, "rb82": [145, 342], "191821e": 145, "545000e": 145, "rb82m": [145, 342], "191828e": 145, "rb83": [145, 342], "291511e": 145, "447680e": 145, "rb84": [145, 342], "391438e": 145, "835648e": 145, "rb84m": [145, 342], "391488e": 145, "216000e": 145, "rb85": [145, 342], "491179e": 145, "rb86": [145, 342], "591117e": 145, "610669e": 145, "rb86m": [145, 342], "591176e": 145, "102000e": 145, "rb87": [145, 342], "690918e": 145, "568379e": 145, "rb88": [145, 342], "791132e": 145, "066380e": 145, "rb89": [145, 342], "891228e": 145, "192000e": 145, "rb90": [145, 342], "991480e": 145, "rb90m": [145, 342], "991492e": 145, "rb91": [145, 342], "091654e": 145, "rb92": [145, 342], "191973e": 145, "480000e": 145, "rb93": [145, 342], "292204e": 145, "rb94": [145, 342], "392641e": 145, "702000e": 145, "rb95": [145, 342], "492930e": 145, "777000e": 145, "rb96": [145, 342], "593427e": 145, "rb97": [145, 342], "693735e": 145, "691000e": 145, "rb98": [145, 342], "794179e": 145, "rb98m": [145, 342], "794208e": 145, "rb99": [145, 342], "894538e": 145, "rb100": [145, 342], "994987e": 145, "rb101": [145, 342], "009532e": 145, "rb102": [145, 342], "019589e": 145, "rb103": [145, 342], "029623e": 145, "rb104": [145, 342], "039683e": 145, "rb105": [145, 342], "049586e": 145, "rb106": [145, 342], "059627e": 145, "761665e": 145, "sr73": [145, 342], "296597e": 145, "sr74": [145, 342], "395631e": 145, "sr75": [145, 342], "494995e": 145, "sr76": [145, 342], "594177e": 145, "sr77": [145, 342], "693794e": 145, "sr78": [145, 342], "793218e": 145, "sr79": [145, 342], "892971e": 145, "sr80": [145, 342], "992452e": 145, "378000e": 145, "sr81": [145, 342], "092321e": 145, "sr82": [145, 342], "191840e": 145, "sr83": [145, 342], "291756e": 145, "166760e": 145, "sr83m": [145, 342], "291784e": 145, "sr84": [145, 342], "391343e": 145, "sr85": [145, 342], "491293e": 145, "602954e": 145, "sr85m": [145, 342], "491319e": 145, "058000e": 145, "sr86": [145, 342], "590926e": 145, "sr87": [145, 342], "690888e": 145, "sr87m": [145, 342], "690929e": 145, "013000e": 145, "sr88": [145, 342], "790561e": 145, "sr89": [145, 342], "890745e": 145, "368643e": 145, "sr90": [145, 342], "990774e": 145, "123107e": 145, "sr91": [145, 342], "091020e": 145, "474000e": 145, "sr92": [145, 342], "191104e": 145, "399600e": 145, "sr93": [145, 342], "291403e": 145, "458000e": 145, "sr94": [145, 342], "391536e": 145, "sr95": [145, 342], "491936e": 145, "390000e": 145, "sr96": [145, 342], "592170e": 145, "sr97": [145, 342], "692615e": 145, "sr98": [145, 342], "792845e": 145, "sr99": [145, 342], "893324e": 145, "690000e": 145, "sr100": [145, 342], "993535e": 145, "sr101": [145, 342], "009405e": 145, "sr102": [145, 342], "019430e": 145, "sr103": [145, 342], "029489e": 145, "sr104": [145, 342], "039523e": 145, "sr105": [145, 342], "sr106": [145, 342], "059606e": 145, "sr107": [145, 342], "069669e": 145, "sr108": [145, 342], "079600e": 145, "sr109": [145, 342], "089644e": 145, "890585e": 145, "y75": [145, 342], "496482e": 145, "y76": [145, 342], "595845e": 145, "y77": [145, 342], "694965e": 145, "y78": [145, 342], "794361e": 145, "y78m": [145, 342], "794388e": 145, "y79": [145, 342], "893735e": 145, "y80": [145, 342], "993428e": 145, "y80m": [145, 342], "993453e": 145, "y81": [145, 342], "092913e": 145, "y82": [145, 342], "192679e": 145, "y83": [145, 342], "292235e": 145, "248000e": 145, "y83m": [145, 342], "292242e": 145, "y84": [145, 342], "392039e": 145, "y84m": [145, 342], "392046e": 145, "y85": [145, 342], "491643e": 145, "648000e": 145, "y85m": [145, 342], "491645e": 145, "y86": [145, 342], "591489e": 145, "306400e": 145, "y86m": [145, 342], "591512e": 145, "y87": [145, 342], "691088e": 145, "872800e": 145, "y87m": [145, 342], "691128e": 145, "813000e": 145, "y88": [145, 342], "790950e": 145, "212486e": 145, "y88m": [145, 342], "790992e": 145, "y88m2": [145, 342], "791023e": 145, "398000e": 145, "y89": [145, 342], "y89m": [145, 342], "890682e": 145, "566000e": 145, "y90": [145, 342], "990715e": 145, "305800e": 145, "y90m": [145, 342], "990788e": 145, "y91": [145, 342], "090730e": 145, "055264e": 145, "y91m": [145, 342], "090790e": 145, "983000e": 145, "y92": [145, 342], "190895e": 145, "274400e": 145, "y93": [145, 342], "290958e": 145, "664800e": 145, "y93m": [145, 342], "291040e": 145, "y94": [145, 342], "391159e": 145, "y95": [145, 342], "491282e": 145, "y96": [145, 342], "591589e": 145, "y96m": [145, 342], "591711e": 145, "y97": [145, 342], "691813e": 145, "y97m": [145, 342], "691885e": 145, "y97m2": [145, 342], "692192e": 145, "y98": [145, 342], "792220e": 145, "y98m": [145, 342], "792270e": 145, "y99": [145, 342], "892464e": 145, "484000e": 145, "y100": [145, 342], "992776e": 145, "y100m": [145, 342], "992791e": 145, "y101": [145, 342], "009303e": 145, "y102": [145, 342], "019336e": 145, "y102m": [145, 342], "019337e": 145, "y103": [145, 342], "029367e": 145, "y104": [145, 342], "039410e": 145, "y105": [145, 342], "049449e": 145, "y106": [145, 342], "059498e": 145, "y107": [145, 342], "069541e": 145, "y108": [145, 342], "079595e": 145, "y109": [145, 342], "089626e": 145, "y110": [145, 342], "099540e": 145, "y111": [145, 342], "109597e": 145, "122365e": 145, "zr77": [145, 342], "696491e": 145, "zr78": [145, 342], "795523e": 145, "zr79": [145, 342], "894916e": 145, "zr80": [145, 342], "994040e": 145, "zr81": [145, 342], "093721e": 145, "zr82": [145, 342], "193109e": 145, "zr83": [145, 342], "292865e": 145, "zr84": [145, 342], "392325e": 145, "548000e": 145, "zr85": [145, 342], "492147e": 145, "716000e": 145, "zr85m": [145, 342], "492179e": 145, "zr86": [145, 342], "591647e": 145, "zr87": [145, 342], "691482e": 145, "zr87m": [145, 342], "691518e": 145, "zr88": [145, 342], "205760e": 145, "zr89": [145, 342], "890889e": 145, "822760e": 145, "zr89m": [145, 342], "890952e": 145, "497000e": 145, "zr90": [145, 342, 478], "145000e": 145, "990470e": 145, "zr90m": [145, 342], "990719e": 145, "zr91": [145, 342, 478], "090565e": 145, "zr92": [145, 342, 478], "715000e": 145, "190504e": 145, "zr93": [145, 342], "290648e": 145, "080665e": 145, "zr94": [145, 342, 478], "738000e": 145, "390632e": 145, "zr95": [145, 342], "490804e": 145, "532365e": 145, "zr96": [145, 342, 478], "590827e": 145, "311385e": 145, "zr97": [145, 342], "691095e": 145, "029640e": 145, "zr98": [145, 342], "791273e": 145, "zr99": [145, 342], "891651e": 145, "zr100": [145, 342], "991776e": 145, "zr101": [145, 342], "009211e": 145, "zr102": [145, 342], "019230e": 145, "zr103": [145, 342], "029266e": 145, "zr104": [145, 342], "039288e": 145, "zr105": [145, 342], "049330e": 145, "zr106": [145, 342], "059359e": 145, "zr107": [145, 342], "069408e": 145, "zr108": [145, 342], "079440e": 145, "zr109": [145, 342], "089492e": 145, "zr110": [145, 342], "099529e": 145, "zr111": [145, 342], "109583e": 145, "zr112": [145, 342], "119626e": 145, "zr113": [145, 342], "129698e": 145, "zr114": [145, 342], "139620e": 145, "290638e": 145, "nb79": [145, 342], "896521e": 145, "nb80": [145, 342], "995844e": 145, "nb81": [145, 342], "094903e": 145, "nb82": [145, 342], "194313e": 145, "nb83": [145, 342], "293670e": 145, "nb84": [145, 342], "393357e": 145, "nb85": [145, 342], "492791e": 145, "nb86": [145, 342], "592504e": 145, "nb86m": [145, 342], "592637e": 145, "nb87": [145, 342], "692036e": 145, "nb87m": [145, 342], "692037e": 145, "nb88": [145, 342], "791833e": 145, "nb88m": [145, 342], "791847e": 145, "nb89": [145, 342], "891342e": 145, "308000e": 145, "nb89m": [145, 342], "891346e": 145, "960000e": 145, "nb90": [145, 342], "991127e": 145, "256000e": 145, "nb90m": [145, 342], "991140e": 145, "nb90m2": [145, 342], "891000e": 145, "nb91": [145, 342], "090700e": 145, "145871e": 145, "nb91m": [145, 342], "090711e": 145, "nb92": [145, 342], "190719e": 145, "095025e": 145, "nb92m": [145, 342], "190734e": 145, "nb93": [145, 342], "nb93m": [145, 342], "290641e": 145, "nb94": [145, 342], "390728e": 145, "406056e": 145, "nb94m": [145, 342], "390733e": 145, "758000e": 145, "nb95": [145, 342], "490684e": 145, "023222e": 145, "nb95m": [145, 342], "490709e": 145, "nb96": [145, 342], "590810e": 145, "nb97": [145, 342], "690810e": 145, "326000e": 145, "nb97m": [145, 342], "690890e": 145, "nb98": [145, 342], "791033e": 145, "nb98m": [145, 342], "791042e": 145, "066000e": 145, "nb99": [145, 342], "891162e": 145, "nb99m": [145, 342], "891201e": 145, "nb100": [145, 342], "991418e": 145, "nb100m": [145, 342], "991452e": 145, "nb100m2": [145, 342], "991497e": 145, "nb101": [145, 342], "009153e": 145, "nb102": [145, 342], "019180e": 145, "nb102m": [145, 342], "019181e": 145, "nb103": [145, 342], "029191e": 145, "nb104": [145, 342], "039225e": 145, "nb104m": [145, 342], "039227e": 145, "nb105": [145, 342], "049239e": 145, "nb106": [145, 342], "059280e": 145, "nb107": [145, 342], "069303e": 145, "nb108": [145, 342], "079348e": 145, "nb109": [145, 342], "089376e": 145, "nb110": [145, 342], "099424e": 145, "nb111": [145, 342], "109456e": 145, "nb112": [145, 342], "119508e": 145, "nb113": [145, 342], "129547e": 145, "nb114": [145, 342], "139615e": 145, "nb115": [145, 342], "149654e": 145, "nb116": [145, 342], "159710e": 145, "593129e": 145, "mo81": [145, 342], "096590e": 145, "mo82": [145, 342], "195750e": 145, "mo83": [145, 342], "294874e": 145, "mo84": [145, 342], "394009e": 145, "mo85": [145, 342], "493655e": 145, "mo86": [145, 342], "593070e": 145, "mo87": [145, 342], "692733e": 145, "mo88": [145, 342], "792195e": 145, "mo89": [145, 342], "891948e": 145, "mo89m": [145, 342], "891990e": 145, "mo90": [145, 342], "991394e": 145, "001600e": 145, "mo91": [145, 342], "091175e": 145, "294000e": 145, "mo91m": [145, 342], "091245e": 145, "mo92": [145, 342, 478], "190681e": 145, "mo93": [145, 342], "290681e": 145, "262277e": 145, "mo93m": [145, 342], "290942e": 145, "mo94": [145, 342, 478], "390509e": 145, "mo95": [145, 342, 478], "592000e": 145, "490584e": 145, "mo96": [145, 342, 478], "668000e": 145, "590468e": 145, "mo97": [145, 342, 478], "690602e": 145, "mo98": [145, 342, 478], "413000e": 145, "790541e": 145, "mo99": [145, 238, 342, 497], "890771e": 145, "373264e": 145, "mo100": [145, 342, 478], "990748e": 145, "212141e": 145, "mo101": [145, 342], "009103e": 145, "766000e": 145, "mo102": [145, 342], "019103e": 145, "mo103": [145, 342], "029132e": 145, "mo104": [145, 342], "039138e": 145, "mo105": [145, 342], "049170e": 145, "mo106": [145, 342], "059181e": 145, "mo107": [145, 342], "069217e": 145, "mo108": [145, 342], "079235e": 145, "mo109": [145, 342], "089278e": 145, "mo110": [145, 342], "099297e": 145, "mo111": [145, 342], "109344e": 145, "mo111m": [145, 342], "109345e": 145, "mo112": [145, 342], "119368e": 145, "mo113": [145, 342], "129419e": 145, "mo114": [145, 342], "139449e": 145, "mo115": [145, 342], "149503e": 145, "mo116": [145, 342], "159543e": 145, "mo117": [145, 342], "169598e": 145, "mo118": [145, 342], "179634e": 145, "mo119": [145, 342], "189690e": 145, "tc83": [145, 342], "296710e": 145, "tc84": [145, 342], "396033e": 145, "tc85": [145, 342], "494883e": 145, "tc86": [145, 342], "594288e": 145, "tc87": [145, 342], "693653e": 145, "tc88": [145, 342], "793268e": 145, "tc88m": [145, 342], "793275e": 145, "tc89": [145, 342], "892717e": 145, "tc89m": [145, 342], "892723e": 145, "tc90": [145, 342], "992356e": 145, "tc90m": [145, 342], "992371e": 145, "tc90m2": [145, 342], "992498e": 145, "tc91": [145, 342], "091843e": 145, "884000e": 145, "tc91m": [145, 342], "091858e": 145, "tc92": [145, 342], "191526e": 145, "tc93": [145, 342], "291025e": 145, "tc93m": [145, 342], "291067e": 145, "tc93m2": [145, 342], "291259e": 145, "tc94": [145, 342], "390966e": 145, "tc94m": [145, 342], "390974e": 145, "tc95": [145, 342], "490766e": 145, "tc95m": [145, 342], "490770e": 145, "tc96": [145, 342], "590787e": 145, "697920e": 145, "tc96m": [145, 342], "590791e": 145, "tc97": [145, 342], "690637e": 145, "328547e": 145, "tc97m": [145, 342], "690647e": 145, "862000e": 145, "tc98": [145, 342], "790722e": 145, "325391e": 145, "tc98m": [145, 342], "790731e": 145, "tc99": [145, 342], "890625e": 145, "661667e": 145, "tc99m": [145, 342], "890641e": 145, "163000e": 145, "tc100": [145, 342], "990766e": 145, "565000e": 145, "tc101": [145, 342], "009073e": 145, "532000e": 145, "tc101m": [145, 342], "009075e": 145, "tc102": [145, 342], "019092e": 145, "tc102m": [145, 342], "019093e": 145, "tc103": [145, 342], "029092e": 145, "tc104": [145, 342], "039114e": 145, "098000e": 145, "tc105": [145, 342], "049117e": 145, "584000e": 145, "tc106": [145, 342], "059144e": 145, "tc107": [145, 342], "069151e": 145, "tc108": [145, 342], "079185e": 145, "tc109": [145, 342], "089200e": 145, "tc110": [145, 342], "099238e": 145, "tc111": [145, 342], "109257e": 145, "tc112": [145, 342], "119291e": 145, "tc113": [145, 342], "129316e": 145, "tc114": [145, 342], "139359e": 145, "tc114m": [145, 342], "139361e": 145, "tc115": [145, 342], "149387e": 145, "tc116": [145, 342], "159434e": 145, "tc117": [145, 342], "169465e": 145, "tc118": [145, 342], "179515e": 145, "tc119": [145, 342], "189556e": 145, "tc120": [145, 342], "199606e": 145, "tc121": [145, 342], "121": [145, 231], "209644e": 145, "tc122": [145, 342], "122": [145, 203, 231], "219698e": 145, "010649e": 145, "ru85": [145, 342], "496895e": 145, "ru86": [145, 342], "595873e": 145, "ru87": [145, 342], "694918e": 145, "ru88": [145, 342], "794026e": 145, "ru89": [145, 342], "893611e": 145, "ru90": [145, 342], "992989e": 145, "ru91": [145, 342], "092629e": 145, "ru92": [145, 342], "192012e": 145, "ru93": [145, 342], "291705e": 145, "ru93m": [145, 342], "ru94": [145, 342], "391136e": 145, "108000e": 145, "ru94m": [145, 342], "391420e": 145, "ru95": [145, 342], "491041e": 145, "914800e": 145, "ru96": [145, 342], "590760e": 145, "ru97": [145, 342], "690755e": 145, "445120e": 145, "ru98": [145, 342], "790529e": 145, "ru99": [145, 342], "890594e": 145, "ru100": [145, 342], "990422e": 145, "ru101": [145, 342], "706000e": 145, "009056e": 145, "ru101m": [145, 342], "009061e": 145, "ru102": [145, 342], "155000e": 145, "019043e": 145, "ru103": [145, 342], "029063e": 145, "390941e": 145, "ru103m": [145, 342], "029066e": 145, "ru104": [145, 342], "039054e": 145, "ru105": [145, 342], "049078e": 145, "598040e": 145, "ru106": [145, 342], "059073e": 145, "212352e": 145, "ru107": [145, 342], "069099e": 145, "ru108": [145, 342], "079102e": 145, "ru109": [145, 342], "089132e": 145, "ru109m": [145, 342], "089133e": 145, "ru110": [145, 342], "099141e": 145, "ru111": [145, 342], "109177e": 145, "ru112": [145, 342], "119190e": 145, "ru113": [145, 342], "129225e": 145, "ru113m": [145, 342], "129226e": 145, "ru114": [145, 342], "139243e": 145, "ru115": [145, 342], "149287e": 145, "ru116": [145, 342], "159308e": 145, "ru117": [145, 342], "169356e": 145, "ru118": [145, 342], "179378e": 145, "ru119": [145, 342], "189428e": 145, "ru120": [145, 342], "199453e": 145, "ru121": [145, 342], "209503e": 145, "ru122": [145, 342], "219534e": 145, "ru123": [145, 342], "123": [145, 231, 441], "229587e": 145, "ru124": [145, 342], "124": [145, 231], "239616e": 145, "ru125": [145, 342], "125": [145, 231], "249660e": 145, "029055e": 145, "rh88": [145, 342], "796123e": 145, "rh89": [145, 342], "894884e": 145, "rh90": [145, 342], "994287e": 145, "rh90m": [145, 342], "994314e": 145, "rh91": [145, 342], "093655e": 145, "rh91m": [145, 342], "093707e": 145, "rh92": [145, 342], "193198e": 145, "rh92m": [145, 342], "193203e": 145, "rh93": [145, 342], "292574e": 145, "rh94": [145, 342], "392170e": 145, "rh94m": [145, 342], "392202e": 145, "rh95": [145, 342], "491590e": 145, "rh95m": [145, 342], "491648e": 145, "176000e": 145, "rh96": [145, 342], "591446e": 145, "rh96m": [145, 342], "591452e": 145, "rh97": [145, 342], "691134e": 145, "842000e": 145, "rh97m": [145, 342], "691161e": 145, "rh98": [145, 342], "791071e": 145, "rh98m": [145, 342], "791077e": 145, "rh99": [145, 342], "890813e": 145, "391040e": 145, "rh99m": [145, 342], "890820e": 145, "692000e": 145, "rh100": [145, 342], "990812e": 145, "rh100m": [145, 342], "990824e": 145, "rh101": [145, 342], "009062e": 145, "041379e": 145, "rh101m": [145, 342], "009063e": 145, "rh102": [145, 342], "019068e": 145, "791072e": 145, "rh102m": [145, 342], "019070e": 145, "181000e": 145, "rh103": [145, 342], "rh103m": [145, 342], "367000e": 145, "rh104": [145, 342], "039067e": 145, "rh104m": [145, 342], "039068e": 145, "604000e": 145, "rh105": [145, 342], "049057e": 145, "272276e": 145, "rh105m": [145, 342], "049058e": 145, "rh106": [145, 342], "007000e": 145, "rh106m": [145, 342], "059074e": 145, "rh107": [145, 342], "069067e": 145, "302000e": 145, "rh108": [145, 342], "079087e": 145, "680000e": 145, "rh108m": [145, 342], "079089e": 145, "rh109": [145, 342], "089087e": 145, "rh109m": [145, 342], "rh110": [145, 342], "099111e": 145, "rh110m": [145, 342], "099114e": 145, "rh111": [145, 342], "109116e": 145, "rh112": [145, 342], "119144e": 145, "rh112m": [145, 342], "119148e": 145, "rh113": [145, 342], "129155e": 145, "rh114": [145, 342], "139188e": 145, "rh114m": [145, 342], "139190e": 145, "rh115": [145, 342], "149203e": 145, "rh116": [145, 342], "159241e": 145, "rh116m": [145, 342], "159242e": 145, "rh117": [145, 342], "169260e": 145, "rh118": [145, 342], "179301e": 145, "rh119": [145, 342], "189321e": 145, "rh120": [145, 342], "199364e": 145, "rh121": [145, 342], "209387e": 145, "rh122": [145, 342], "219432e": 145, "rh123": [145, 342], "229463e": 145, "rh124": [145, 342], "239509e": 145, "rh125": [145, 342], "249537e": 145, "rh126": [145, 342], "126": [145, 231], "259575e": 145, "rh127": [145, 342], "269608e": 145, "rh128": [145, 342], "128": [145, 203, 231, 319, 333, 469], "279682e": 145, "064153e": 145, "pd90": [145, 342], "995788e": 145, "pd91": [145, 342], "094911e": 145, "pd92": [145, 342], "194042e": 145, "pd93": [145, 342], "293591e": 145, "pd94": [145, 342], "392877e": 145, "pd95": [145, 342], "492469e": 145, "pd95m": [145, 342], "492670e": 145, "pd96": [145, 342], "591816e": 145, "pd97": [145, 342], "691648e": 145, "pd98": [145, 342], "791272e": 145, "062000e": 145, "pd99": [145, 342], "891177e": 145, "284000e": 145, "pd100": [145, 342], "990851e": 145, "136320e": 145, "pd101": [145, 342], "009083e": 145, "049200e": 145, "pd102": [145, 342], "019056e": 145, "pd103": [145, 342], "029061e": 145, "468022e": 145, "pd104": [145, 342], "114000e": 145, "039040e": 145, "pd105": [145, 342], "233000e": 145, "049051e": 145, "pd105m": [145, 342], "049056e": 145, "pd106": [145, 342], "059035e": 145, "pd107": [145, 342], "069051e": 145, "051200e": 145, "pd107m": [145, 342], "069054e": 145, "pd108": [145, 342], "646000e": 145, "079039e": 145, "pd109": [145, 342], "089060e": 145, "892400e": 145, "pd109m": [145, 342], "089062e": 145, "822000e": 145, "pd110": [145, 342], "172000e": 145, "099052e": 145, "pd111": [145, 342], "109077e": 145, "404000e": 145, "pd111m": [145, 342], "109079e": 145, "pd112": [145, 342], "119073e": 145, "574400e": 145, "pd113": [145, 342], "129102e": 145, "pd113m": [145, 342], "pd114": [145, 342], "139104e": 145, "452000e": 145, "pd115": [145, 342], "149137e": 145, "pd115m": [145, 342], "149138e": 145, "pd116": [145, 342], "159142e": 145, "pd117": [145, 342], "169178e": 145, "pd117m": [145, 342], "169181e": 145, "pd118": [145, 342], "179190e": 145, "pd119": [145, 342], "189231e": 145, "pd120": [145, 342], "199247e": 145, "pd121": [145, 342], "209289e": 145, "pd122": [145, 342], "219306e": 145, "pd123": [145, 342], "229349e": 145, "pd124": [145, 342], "239369e": 145, "pd124m": [145, 342], "239380e": 145, "pd125": [145, 342], "249408e": 145, "pd126": [145, 342], "259427e": 145, "pd126m": [145, 342], "259453e": 145, "pd127": [145, 342], "269469e": 145, "pd128": [145, 342], "279497e": 145, "pd129": [145, 342], "129": 145, "289568e": 145, "pd130": [145, 342], "130": [145, 231, 399], "299622e": 145, "pd131": [145, 342], "131": [145, 203, 231], "309700e": 145, "078682e": 145, "ag92": [145, 342], "196006e": 145, "ag93": [145, 342], "294978e": 145, "ag94": [145, 342], "394278e": 145, "ag94m": [145, 342], "394423e": 145, "ag94m2": [145, 342], "394994e": 145, "ag95": [145, 342], "493548e": 145, "ag95m": [145, 342], "493585e": 145, "ag95m2": [145, 342], "493820e": 145, "ag96": [145, 342], "593068e": 145, "ag96m": [145, 342], "593071e": 145, "ag97": [145, 342], "692397e": 145, "ag98": [145, 342], "792157e": 145, "ag99": [145, 342], "891760e": 145, "ag99m": [145, 342], "891814e": 145, "ag100": [145, 342], "991610e": 145, "206000e": 145, "ag100m": [145, 342], "991613e": 145, "ag101": [145, 342], "009128e": 145, "ag101m": [145, 342], "009131e": 145, "ag102": [145, 342], "019117e": 145, "ag102m": [145, 342], "ag103": [145, 342], "029090e": 145, "942000e": 145, "ag103m": [145, 342], "029091e": 145, "ag104": [145, 342], "039086e": 145, "152000e": 145, "ag104m": [145, 342], "ag105": [145, 342], "049065e": 145, "567456e": 145, "ag105m": [145, 342], "049066e": 145, "ag106": [145, 342], "059067e": 145, "ag106m": [145, 342], "059068e": 145, "154000e": 145, "ag107": [145, 342], "183900e": 145, "ag107m": [145, 342], "069052e": 145, "ag108": [145, 342], "079060e": 145, "ag108m": [145, 342], "079061e": 145, "382000e": 145, "ag109": [145, 342], "816100e": 145, "089048e": 145, "ag109m": [145, 342], "ag110": [145, 342], "099061e": 145, "ag110m": [145, 342], "099062e": 145, "159000e": 145, "ag111": [145, 342], "109053e": 145, "436800e": 145, "ag111m": [145, 342], "109054e": 145, "ag112": [145, 342], "119070e": 145, "126800e": 145, "ag113": [145, 342], "129066e": 145, "933200e": 145, "ag113m": [145, 342], "ag114": [145, 342], "139088e": 145, "ag114m": [145, 342], "139090e": 145, "ag115": [145, 342], "149088e": 145, "ag115m": [145, 342], "ag116": [145, 342], "159114e": 145, "ag116m": [145, 342], "ag116m2": [145, 342], "159115e": 145, "ag117": [145, 342], "169117e": 145, "ag117m": [145, 342], "ag118": [145, 342], "179146e": 145, "ag118m": [145, 342], "179147e": 145, "ag119": [145, 342], "189157e": 145, "ag119m": [145, 342], "ag120": [145, 342], "199188e": 145, "ag120m": [145, 342], "199190e": 145, "ag121": [145, 342], "209198e": 145, "ag122": [145, 342], "219235e": 145, "ag122m": [145, 342], "219238e": 145, "ag123": [145, 342], "229249e": 145, "ag124": [145, 342], "239286e": 145, "ag124m": [145, 342], "239287e": 145, "ag125": [145, 342], "249304e": 145, "ag126": [145, 342], "259345e": 145, "ag126m": [145, 342], "259346e": 145, "ag126m2": [145, 342], "259348e": 145, "ag127": [145, 342], "269368e": 145, "ag128": [145, 342], "279412e": 145, "ag129": [145, 342], "289437e": 145, "ag130": [145, 342], "299504e": 145, "ag131": [145, 342], "309541e": 145, "ag132": [145, 342], "132": [145, 203, 231], "319613e": 145, "ag133": [145, 342], "133": [145, 231], "329671e": 145, "124116e": 145, "cd94": [145, 342], "395659e": 145, "cd95": [145, 342], "494987e": 145, "cd96": [145, 342], "593977e": 145, "cd97": [145, 342], "693494e": 145, "cd98": [145, 342], "792740e": 145, "cd99": [145, 342], "892501e": 145, "cd100": [145, 342], "992029e": 145, "cd101": [145, 342], "009187e": 145, "cd102": [145, 342], "019145e": 145, "cd103": [145, 342], "029134e": 145, "cd104": [145, 342], "039098e": 145, "462000e": 145, "cd105": [145, 342], "049095e": 145, "cd106": [145, 342], "059065e": 145, "cd107": [145, 342], "069066e": 145, "cd108": [145, 342], "079042e": 145, "cd109": [145, 342], "089050e": 145, "990816e": 145, "cd109m": [145, 342], "cd109m2": [145, 342], "089055e": 145, "cd110": [145, 342], "099030e": 145, "cd111": [145, 342], "109042e": 145, "cd111m": [145, 342], "109046e": 145, "cd112": [145, 342], "119028e": 145, "cd113": [145, 342], "129044e": 145, "537177e": 145, "cd113m": [145, 342], "129047e": 145, "cd114": [145, 342], "873000e": 145, "139034e": 145, "cd115": [145, 342], "149054e": 145, "924560e": 145, "cd115m": [145, 342], "149056e": 145, "cd116": [145, 342], "490000e": 145, "159048e": 145, "cd117": [145, 342], "169072e": 145, "964000e": 145, "cd117m": [145, 342], "169074e": 145, "cd118": [145, 342], "179069e": 145, "cd119": [145, 342], "189099e": 145, "614000e": 145, "cd119m": [145, 342], "189101e": 145, "cd120": [145, 342], "199099e": 145, "cd121": [145, 342], "209130e": 145, "cd121m": [145, 342], "209132e": 145, "cd122": [145, 342], "219133e": 145, "cd123": [145, 342], "229170e": 145, "cd123m": [145, 342], "229172e": 145, "cd124": [145, 342], "239176e": 145, "cd125": [145, 342], "249212e": 145, "cd125m": [145, 342], "249214e": 145, "cd126": [145, 342], "259224e": 145, "cd127": [145, 342], "269264e": 145, "cd128": [145, 342], "279278e": 145, "cd129": [145, 342], "289321e": 145, "cd129m": [145, 342], "289325e": 145, "cd129m2": [145, 342], "289342e": 145, "cd130": [145, 342], "299339e": 145, "cd131": [145, 342], "309407e": 145, "cd132": [145, 342], "319455e": 145, "cd133": [145, 342], "329507e": 145, "cd134": [145, 342], "134": [145, 231], "339560e": 145, "cd135": [145, 342], "349635e": 145, "cd136": [145, 342], "136": [145, 231], "359400e": 145, "148181e": 145, "in96": [145, 342], "595812e": 145, "in97": [145, 342], "694954e": 145, "in98": [145, 342], "794214e": 145, "in98m": [145, 342], "794302e": 145, "in99": [145, 342], "893422e": 145, "in100": [145, 342], "993111e": 145, "in101": [145, 342], "009263e": 145, "in102": [145, 342], "019241e": 145, "in103": [145, 342], "029199e": 145, "in103m": [145, 342], "029206e": 145, "in104": [145, 342], "039183e": 145, "in104m": [145, 342], "039184e": 145, "in105": [145, 342], "049147e": 145, "042000e": 145, "in105m": [145, 342], "049154e": 145, "in106": [145, 342], "059135e": 145, "in106m": [145, 342], "in107": [145, 342], "069103e": 145, "944000e": 145, "in107m": [145, 342], "069110e": 145, "in108": [145, 342], "079097e": 145, "in108m": [145, 342], "in109": [145, 342], "089072e": 145, "497240e": 145, "in109m": [145, 342], "089078e": 145, "in109m2": [145, 342], "089094e": 145, "in110": [145, 342], "099072e": 145, "771200e": 145, "in110m": [145, 342], "in111": [145, 342], "109051e": 145, "423261e": 145, "in111m": [145, 342], "109057e": 145, "in112": [145, 342], "119055e": 145, "928000e": 145, "in112m": [145, 342], "119057e": 145, "in113": [145, 342], "129041e": 145, "in113m": [145, 342], "129045e": 145, "969000e": 145, "in114": [145, 342], "139049e": 145, "in114m": [145, 342], "139051e": 145, "278000e": 145, "in114m2": [145, 342], "139055e": 145, "in115": [145, 342], "571000e": 145, "149039e": 145, "391660e": 145, "in115m": [145, 342], "149042e": 145, "615000e": 145, "in116": [145, 342], "159053e": 145, "in116m": [145, 342], "159054e": 145, "257000e": 145, "in116m2": [145, 342], "159056e": 145, "in117": [145, 342], "169045e": 145, "in117m": [145, 342], "169049e": 145, "972000e": 145, "in118": [145, 342], "179064e": 145, "in118m": [145, 342], "in118m2": [145, 342], "179066e": 145, "in119": [145, 342], "189058e": 145, "in119m": [145, 342], "189062e": 145, "in120": [145, 342], "199080e": 145, "in120m": [145, 342], "in120m2": [145, 342], "199083e": 145, "in121": [145, 342], "209078e": 145, "in121m": [145, 342], "209082e": 145, "in122": [145, 342], "219103e": 145, "in122m": [145, 342], "in122m2": [145, 342], "219106e": 145, "in123": [145, 342], "229104e": 145, "in123m": [145, 342], "229108e": 145, "in123m2": [145, 342], "229127e": 145, "in124": [145, 342], "239132e": 145, "in124m": [145, 342], "in125": [145, 342], "249136e": 145, "in125m": [145, 342], "249140e": 145, "in125m2": [145, 342], "249159e": 145, "in126": [145, 342], "259165e": 145, "in126m": [145, 342], "259166e": 145, "640000e": 145, "in127": [145, 342], "269174e": 145, "in127m": [145, 342], "269178e": 145, "in127m2": [145, 342], "269194e": 145, "in128": [145, 342], "279202e": 145, "in128m": [145, 342], "279205e": 145, "in129": [145, 342], "289217e": 145, "in129m": [145, 342], "289222e": 145, "in129m2": [145, 342], "289234e": 145, "in130": [145, 342], "299250e": 145, "in130m": [145, 342], "in130m2": [145, 342], "299254e": 145, "in131": [145, 342], "309269e": 145, "in131m": [145, 342], "309272e": 145, "in131m2": [145, 342], "309309e": 145, "in132": [145, 342], "319330e": 145, "in133": [145, 342], "329378e": 145, "in133m": [145, 342], "329387e": 145, "in134": [145, 342], "339441e": 145, "in135": [145, 342], "349493e": 145, "in136": [145, 342], "359556e": 145, "in137": [145, 342], "137": [145, 231], "369611e": 145, "in138": [145, 342], "138": 145, "379518e": 145, "in139": [145, 342], "139": [145, 203, 231, 465], "389466e": 145, "187101e": 145, "sn99": [145, 342], "894933e": 145, "sn100": [145, 342], "993904e": 145, "sn101": [145, 342], "009361e": 145, "sn102": [145, 342], "019303e": 145, "sn103": [145, 342], "029281e": 145, "sn104": [145, 342], "039231e": 145, "sn105": [145, 342], "049213e": 145, "sn106": [145, 342], "059169e": 145, "sn107": [145, 342], "069156e": 145, "sn108": [145, 342], "079119e": 145, "sn109": [145, 342], "089113e": 145, "086000e": 145, "sn110": [145, 342], "099078e": 145, "495440e": 145, "sn111": [145, 342], "118000e": 145, "sn111m": [145, 342], "109080e": 145, "119048e": 145, "sn113": [145, 342], "129052e": 145, "943776e": 145, "sn113m": [145, 342], "129053e": 145, "sn114": [145, 342], "139028e": 145, "sn115": [145, 342], "149033e": 145, "sn115m": [145, 342], "149041e": 145, "sn116": [145, 342], "454000e": 145, "159017e": 145, "sn117": [145, 342], "169030e": 145, "sn117m": [145, 342], "169033e": 145, "sn118": [145, 342], "179016e": 145, "sn119": [145, 342], "189033e": 145, "sn119m": [145, 342], "189034e": 145, "sn120": [145, 342], "199022e": 145, "sn121": [145, 342], "209042e": 145, "730800e": 145, "sn121m": [145, 342], "385000e": 145, "sn122": [145, 342], "219034e": 145, "sn122m": [145, 342], "219064e": 145, "sn123": [145, 342], "229057e": 145, "116288e": 145, "sn123m": [145, 342], "sn124": [145, 342], "239053e": 145, "sn124m": [145, 342], "239081e": 145, "sn125": [145, 342], "249078e": 145, "328960e": 145, "sn125m": [145, 342], "712000e": 145, "sn126": [145, 342], "259077e": 145, "879410e": 145, "sn127": [145, 342], "269104e": 145, "sn127m": [145, 342], "478000e": 145, "sn128": [145, 342], "279105e": 145, "544200e": 145, "sn128m": [145, 342], "279128e": 145, "sn129": [145, 342], "289135e": 145, "sn129m": [145, 342], "sn130": [145, 342], "299140e": 145, "sn130m": [145, 342], "299161e": 145, "sn131": [145, 342], "309170e": 145, "sn131m": [145, 342], "309171e": 145, "sn132": [145, 342], "319178e": 145, "sn133": [145, 342], "329238e": 145, "sn134": [145, 342], "339283e": 145, "sn135": [145, 342], "349347e": 145, "sn136": [145, 342], "359393e": 145, "sn137": [145, 342], "369460e": 145, "sn138": [145, 342], "379509e": 145, "sn139": [145, 342], "389582e": 145, "sn140": [145, 342], "140": [145, 153, 231], "399633e": 145, "sn141": [145, 342], "409458e": 145, "217598e": 145, "sb102": [145, 342], "019456e": 145, "sb103": [145, 342], "029397e": 145, "sb104": [145, 342], "039365e": 145, "sb105": [145, 342], "049315e": 145, "sb106": [145, 342], "059288e": 145, "sb107": [145, 342], "069241e": 145, "sb108": [145, 342], "079222e": 145, "sb109": [145, 342], "089181e": 145, "sb110": [145, 342], "099168e": 145, "sb111": [145, 342], "109132e": 145, "sb112": [145, 342], "119124e": 145, "sb113": [145, 342], "129094e": 145, "002000e": 145, "sb114": [145, 342], "139093e": 145, "094000e": 145, "sb114m": [145, 342], "139098e": 145, "sb115": [145, 342], "149066e": 145, "926000e": 145, "sb116": [145, 342], "159068e": 145, "sb116m": [145, 342], "159072e": 145, "618000e": 145, "sb117": [145, 342], "169048e": 145, "008000e": 145, "sb117m": [145, 342], "169082e": 145, "sb118": [145, 342], "179055e": 145, "sb118m": [145, 342], "179058e": 145, "sb119": [145, 342], "189039e": 145, "374840e": 145, "sb119m": [145, 342], "189070e": 145, "sb120": [145, 342], "199051e": 145, "534000e": 145, "sb120m": [145, 342], "977000e": 145, "sb121": [145, 342], "721000e": 145, "209038e": 145, "sb121m": [145, 342], "209067e": 145, "sb122": [145, 342], "219052e": 145, "353363e": 145, "sb122m": [145, 342], "219053e": 145, "sb122m2": [145, 342], "515000e": 145, "sb123": [145, 342], "279000e": 145, "229042e": 145, "sb123m": [145, 342], "229070e": 145, "sb124": [145, 342], "239059e": 145, "201280e": 145, "sb124m": [145, 342], "sb124m2": [145, 342], "239060e": 145, "212000e": 145, "sb125": [145, 342], "249053e": 145, "705167e": 145, "sb126": [145, 342], "259072e": 145, "067040e": 145, "sb126m": [145, 342], "259073e": 145, "sb126m2": [145, 342], "sb127": [145, 342], "269069e": 145, "326400e": 145, "sb128": [145, 342], "279092e": 145, "sb128m": [145, 342], "246000e": 145, "sb129": [145, 342], "289091e": 145, "571760e": 145, "sb129m": [145, 342], "289111e": 145, "sb130": [145, 342], "299117e": 145, "sb130m": [145, 342], "sb131": [145, 342], "309120e": 145, "381800e": 145, "sb132": [145, 342], "319145e": 145, "sb132m": [145, 342], "319146e": 145, "sb133": [145, 342], "329153e": 145, "sb134": [145, 342], "339204e": 145, "sb134m": [145, 342], "339207e": 145, "sb135": [145, 342], "349252e": 145, "679000e": 145, "sb136": [145, 342], "359303e": 145, "sb137": [145, 342], "369353e": 145, "sb138": [145, 342], "379408e": 145, "sb139": [145, 342], "389460e": 145, "sb140": [145, 342], "399531e": 145, "sb140m": [145, 342], "399534e": 145, "sb141": [145, 342], "409579e": 145, "sb142": [145, 342], "142": [145, 203, 231, 478, 484], "419653e": 145, "sb143": [145, 342], "143": [145, 231], "429568e": 145, "sb144": [145, 342], "144": [145, 231], "439514e": 145, "276031e": 145, "te104": [145, 342], "039470e": 145, "te105": [145, 342], "049436e": 145, "te106": [145, 342], "059375e": 145, "te107": [145, 342], "069350e": 145, "te108": [145, 342], "079294e": 145, "te109": [145, 342], "089274e": 145, "te110": [145, 342], "099224e": 145, "te111": [145, 342], "109211e": 145, "te112": [145, 342], "119170e": 145, "te113": [145, 342], "129159e": 145, "te114": [145, 342], "139121e": 145, "te115": [145, 342], "149119e": 145, "te115m": [145, 342], "te116": [145, 342], "159085e": 145, "te117": [145, 342], "169086e": 145, "te117m": [145, 342], "169090e": 145, "te118": [145, 342], "184000e": 145, "te119": [145, 342], "189064e": 145, "778000e": 145, "te119m": [145, 342], "189067e": 145, "061000e": 145, "te120": [145, 342], "199040e": 145, "te121": [145, 342], "209049e": 145, "656288e": 145, "te121m": [145, 342], "209053e": 145, "419000e": 145, "te122": [145, 342], "219030e": 145, "te123": [145, 342], "229043e": 145, "903237e": 145, "te123m": [145, 342], "229045e": 145, "te124": [145, 342], "239028e": 145, "te125": [145, 342], "249044e": 145, "te125m": [145, 342], "249046e": 145, "959000e": 145, "te126": [145, 342], "259033e": 145, "te127": [145, 342], "269052e": 145, "366000e": 145, "te127m": [145, 342], "269053e": 145, "167000e": 145, "te128": [145, 342], "174000e": 145, "279045e": 145, "429883e": 145, "te129": [145, 342], "289066e": 145, "te129m": [145, 342], "289067e": 145, "903000e": 145, "te130": [145, 342], "408000e": 145, "299062e": 145, "492997e": 145, "te131": [145, 342], "309085e": 145, "te131m": [145, 342], "309087e": 145, "197000e": 145, "te131m2": [145, 342], "309106e": 145, "te132": [145, 342], "319086e": 145, "768256e": 145, "te132m": [145, 342], "319106e": 145, "810000e": 145, "te133": [145, 342], "329110e": 145, "te133m": [145, 342], "329113e": 145, "324000e": 145, "te134": [145, 342], "339114e": 145, "508000e": 145, "te135": [145, 342], "349164e": 145, "te136": [145, 342], "359201e": 145, "763000e": 145, "te137": [145, 342], "369253e": 145, "te138": [145, 342], "379292e": 145, "te139": [145, 342], "389347e": 145, "te140": [145, 342], "399388e": 145, "te141": [145, 342], "409447e": 145, "te142": [145, 342], "419491e": 145, "te143": [145, 342], "429566e": 145, "te144": [145, 342], "439608e": 145, "te145": [145, 342], "145": [145, 493], "449673e": 145, "te146": [145, 342], "146": [145, 203, 231], "459485e": 145, "269045e": 145, "i106": [145, 342], "059544e": 145, "i107": [145, 342], "069479e": 145, "i108": [145, 342], "079435e": 145, "i109": [145, 342], "089381e": 145, "i110": [145, 342], "099352e": 145, "i111": [145, 342], "109303e": 145, "i112": [145, 342], "119280e": 145, "i113": [145, 342], "129236e": 145, "i114": [145, 342], "139219e": 145, "i114m": [145, 342], "139221e": 145, "i115": [145, 342], "149180e": 145, "i116": [145, 342], "159168e": 145, "i117": [145, 342], "169136e": 145, "332000e": 145, "i118": [145, 342], "179131e": 145, "i118m": [145, 342], "179133e": 145, "i119": [145, 342], "i120": [145, 342], "199100e": 145, "896000e": 145, "i120m": [145, 342], "199104e": 145, "i121": [145, 342], "209074e": 145, "632000e": 145, "i122": [145, 342], "219076e": 145, "i123": [145, 342], "229056e": 145, "760280e": 145, "i124": [145, 342], "239062e": 145, "608064e": 145, "i125": [145, 342], "132765e": 145, "i126": [145, 342], "259056e": 145, "117152e": 145, "i127": [145, 342], "i128": [145, 342], "279058e": 145, "499400e": 145, "i129": [145, 342], "289050e": 145, "i130": [145, 342], "299067e": 145, "449600e": 145, "i130m": [145, 342], "304000e": 145, "i131": [145, 342], "309061e": 145, "933773e": 145, "i132": [145, 342], "319080e": 145, "262000e": 145, "i132m": [145, 342], "319081e": 145, "993000e": 145, "i133": [145, 342], "329078e": 145, "i133m": [145, 342], "329096e": 145, "i134": [145, 342], "339097e": 145, "i134m": [145, 342], "339101e": 145, "112000e": 145, "i135": [145, 342], "349100e": 145, "368800e": 145, "i136": [145, 342], "359147e": 145, "i136m": [145, 342], "359149e": 145, "i137": [145, 342], "369179e": 145, "i138": [145, 342], "379223e": 145, "i139": [145, 342], "389261e": 145, "i140": [145, 342], "399310e": 145, "i141": [145, 342], "409350e": 145, "i142": [145, 342], "419402e": 145, "i143": [145, 342], "429446e": 145, "i144": [145, 342], "439500e": 145, "i145": [145, 342], "449554e": 145, "i146": [145, 342], "459612e": 145, "i147": [145, 342], "147": [145, 231], "469657e": 145, "i148": [145, 342], "148": [145, 231], "479581e": 145, "i149": [145, 342], "149": [145, 203, 231], "489530e": 145, "312928e": 145, "xe108": [145, 342], "079556e": 145, "xe109": [145, 342], "089517e": 145, "xe110": [145, 342], "099443e": 145, "xe111": [145, 342], "109416e": 145, "xe112": [145, 342], "119356e": 145, "xe113": [145, 342], "129333e": 145, "xe114": [145, 342], "139280e": 145, "xe115": [145, 342], "149263e": 145, "xe116": [145, 342], "159216e": 145, "xe117": [145, 342], "169204e": 145, "xe118": [145, 342], "179162e": 145, "xe119": [145, 342], "189154e": 145, "xe120": [145, 342], "199118e": 145, "xe121": [145, 342], "209115e": 145, "xe122": [145, 342], "219084e": 145, "236000e": 145, "xe123": [145, 342], "229085e": 145, "xe124": [145, 342], "049108e": 145, "xe125": [145, 342], "249064e": 145, "084000e": 145, "xe125m": [145, 342], "249067e": 145, "xe126": [145, 342], "259043e": 145, "xe127": [145, 342], "140294e": 145, "xe127m": [145, 342], "269055e": 145, "xe128": [145, 342], "910200e": 145, "279035e": 145, "xe129": [145, 342], "640060e": 145, "289048e": 145, "xe129m": [145, 342], "xe130": [145, 342], "071000e": 145, "299035e": 145, "xe131": [145, 342], "123240e": 145, "309051e": 145, "xe131m": [145, 342], "309053e": 145, "023000e": 145, "xe132": [145, 342], "690860e": 145, "319042e": 145, "xe132m": [145, 342], "319071e": 145, "xe133": [145, 342], "329059e": 145, "533840e": 145, "xe133m": [145, 342], "329062e": 145, "xe134": [145, 342], "043570e": 145, "339054e": 145, "830302e": 145, "xe134m": [145, 342], "339075e": 145, "xe135": [145, 342], "349072e": 145, "290400e": 145, "xe135m": [145, 342], "349078e": 145, "xe136": [145, 342], "857300e": 145, "359072e": 145, "832074e": 145, "xe137": [145, 342], "369116e": 145, "290800e": 145, "xe138": [145, 342], "379140e": 145, "xe139": [145, 342], "389188e": 145, "xe140": [145, 342], "399216e": 145, "xe141": [145, 342], "409266e": 145, "xe142": [145, 342], "419297e": 145, "xe143": [145, 342], "429351e": 145, "xe143m": [145, 342], "429354e": 145, "xe144": [145, 342], "439385e": 145, "xe145": [145, 342], "449441e": 145, "xe146": [145, 342], "459477e": 145, "xe147": [145, 342], "469536e": 145, "xe148": [145, 342], "479573e": 145, "xe149": [145, 342], "489633e": 145, "xe150": [145, 342], "150": [145, 153, 399, 400, 449, 497], "499675e": 145, "xe151": [145, 342], "151": [145, 231], "509626e": 145, "329055e": 145, "cs111": [145, 342], "109547e": 145, "cs112": [145, 342], "119503e": 145, "cs113": [145, 342], "129445e": 145, "cs114": [145, 342], "139414e": 145, "cs115": [145, 342], "149359e": 145, "cs116": [145, 342], "159334e": 145, "cs116m": [145, 342], "159335e": 145, "cs117": [145, 342], "169287e": 145, "cs117m": [145, 342], "169291e": 145, "cs118": [145, 342], "179266e": 145, "cs118m": [145, 342], "179267e": 145, "cs119": [145, 342], "189224e": 145, "cs119m": [145, 342], "cs120": [145, 342], "199207e": 145, "cs120m": [145, 342], "199208e": 145, "cs121": [145, 342], "209172e": 145, "cs121m": [145, 342], "209173e": 145, "cs122": [145, 342], "219161e": 145, "cs122m": [145, 342], "219162e": 145, "cs122m2": [145, 342], "219163e": 145, "cs123": [145, 342], "229130e": 145, "cs123m": [145, 342], "229132e": 145, "cs124": [145, 342], "239123e": 145, "cs124m": [145, 342], "239128e": 145, "cs125": [145, 342], "249097e": 145, "cs125m": [145, 342], "249100e": 145, "cs126": [145, 342], "259095e": 145, "858000e": 145, "cs127": [145, 342], "269074e": 145, "cs127m": [145, 342], "269079e": 145, "cs128": [145, 342], "279077e": 145, "cs129": [145, 342], "289061e": 145, "154160e": 145, "cs130": [145, 342], "752600e": 145, "cs130m": [145, 342], "299069e": 145, "cs131": [145, 342], "309055e": 145, "371296e": 145, "cs132": [145, 342], "319064e": 145, "598720e": 145, "cs133": [145, 342], "cs134": [145, 342], "339067e": 145, "517136e": 145, "cs134m": [145, 342], "339069e": 145, "cs135": [145, 342], "349060e": 145, "258093e": 145, "cs135m": [145, 342], "349077e": 145, "cs136": [145, 342], "359073e": 145, "124064e": 145, "cs136m": [145, 342], "359080e": 145, "cs137": [145, 342], "369071e": 145, "492323e": 145, "cs138": [145, 342], "379110e": 145, "cs138m": [145, 342], "379111e": 145, "746000e": 145, "cs139": [145, 342], "389134e": 145, "562000e": 145, "cs140": [145, 342], "399173e": 145, "cs141": [145, 342], "409200e": 145, "cs142": [145, 342], "419243e": 145, "684000e": 145, "cs143": [145, 342], "429274e": 145, "791000e": 145, "cs144": [145, 342], "439321e": 145, "cs144m": [145, 342], "439326e": 145, "cs145": [145, 342], "449355e": 145, "cs146": [145, 342], "459403e": 145, "cs147": [145, 342], "469442e": 145, "295000e": 145, "cs148": [145, 342], "479492e": 145, "cs149": [145, 342], "489529e": 145, "cs150": [145, 342], "499582e": 145, "cs151": [145, 342], "509622e": 145, "cs152": [145, 342], "152": [145, 231], "519676e": 145, "cs153": [145, 342], "153": [145, 203, 231, 484], "529604e": 145, "cs154": [145, 342], "154": [145, 231, 465], "539552e": 145, "373269e": 145, "ba113": [145, 342], "129586e": 145, "ba114": [145, 342], "139507e": 145, "ba115": [145, 342], "149474e": 145, "ba116": [145, 342], "159414e": 145, "ba117": [145, 342], "169385e": 145, "ba118": [145, 342], "179330e": 145, "ba119": [145, 342], "189307e": 145, "ba120": [145, 342], "199260e": 145, "ba121": [145, 342], "209241e": 145, "ba122": [145, 342], "219199e": 145, "ba123": [145, 342], "229188e": 145, "ba124": [145, 342], "239151e": 145, "ba125": [145, 342], "249145e": 145, "ba126": [145, 342], "259113e": 145, "ba127": [145, 342], "269111e": 145, "ba127m": [145, 342], "269112e": 145, "ba128": [145, 342], "279083e": 145, "099520e": 145, "ba129": [145, 342], "289087e": 145, "ba129m": [145, 342], "686000e": 145, "ba130": [145, 342], "299063e": 145, "ba130m": [145, 342], "299090e": 145, "ba131": [145, 342], "309069e": 145, "ba131m": [145, 342], "309071e": 145, "ba132": [145, 342], "319051e": 145, "467078e": 145, "ba133": [145, 342], "329060e": 145, "329571e": 145, "ba133m": [145, 342], "329063e": 145, "401000e": 145, "ba134": [145, 342], "417000e": 145, "339045e": 145, "ba135": [145, 342], "349057e": 145, "ba135m": [145, 342], "033000e": 145, "ba136": [145, 342], "854000e": 145, "359046e": 145, "ba136m": [145, 342], "359068e": 145, "ba137": [145, 342], "123200e": 145, "369058e": 145, "ba137m": [145, 342], "369065e": 145, "531000e": 145, "ba138": [145, 342], "169800e": 145, "379052e": 145, "ba139": [145, 342], "389088e": 145, "975800e": 145, "ba140": [145, 342], "399106e": 145, "101686e": 145, "ba141": [145, 342], "409144e": 145, "096200e": 145, "ba142": [145, 342], "419165e": 145, "ba143": [145, 342], "429206e": 145, "ba144": [145, 342], "439230e": 145, "ba145": [145, 342], "449276e": 145, "ba146": [145, 342], "459302e": 145, "ba147": [145, 342], "469349e": 145, "ba148": [145, 342], "479377e": 145, "ba149": [145, 342], "489426e": 145, "ba150": [145, 342], "499457e": 145, "ba151": [145, 342], "509508e": 145, "ba152": [145, 342], "519543e": 145, "ba153": [145, 342], "529596e": 145, "ba154": [145, 342], "539636e": 145, "ba155": [145, 342], "155": [145, 203], "549590e": 145, "ba156": [145, 342], "559518e": 145, "389055e": 145, "la116": [145, 342], "159565e": 145, "la117": [145, 342], "169501e": 145, "la117m": [145, 342], "169502e": 145, "la118": [145, 342], "179467e": 145, "la119": [145, 342], "189410e": 145, "la120": [145, 342], "199381e": 145, "la121": [145, 342], "209330e": 145, "la122": [145, 342], "219307e": 145, "la123": [145, 342], "229262e": 145, "la124": [145, 342], "239246e": 145, "la124m": [145, 342], "239247e": 145, "la125": [145, 342], "249208e": 145, "la125m": [145, 342], "249209e": 145, "la126": [145, 342], "259195e": 145, "la126m": [145, 342], "259201e": 145, "la127": [145, 342], "269164e": 145, "la127m": [145, 342], "la128": [145, 342], "279156e": 145, "la128m": [145, 342], "279157e": 145, "la129": [145, 342], "289127e": 145, "la129m": [145, 342], "289129e": 145, "la130": [145, 342], "299124e": 145, "la131": [145, 342], "309101e": 145, "la131m": [145, 342], "309104e": 145, "la132": [145, 342], "319101e": 145, "728000e": 145, "la132m": [145, 342], "319103e": 145, "la133": [145, 342], "329082e": 145, "408320e": 145, "la134": [145, 342], "339085e": 145, "la134m": [145, 342], "339090e": 145, "la135": [145, 342], "349070e": 145, "la136": [145, 342], "359076e": 145, "922000e": 145, "la136m": [145, 342], "359079e": 145, "la137": [145, 342], "893416e": 145, "la138": [145, 342], "379071e": 145, "250363e": 145, "la139": [145, 342], "991000e": 145, "389064e": 145, "la140": [145, 342], "399095e": 145, "450293e": 145, "la141": [145, 342], "409110e": 145, "411200e": 145, "la142": [145, 342], "419141e": 145, "la143": [145, 342], "429161e": 145, "la144": [145, 342], "439196e": 145, "la145": [145, 342], "449216e": 145, "la146": [145, 342], "459258e": 145, "la146m": [145, 342], "la147": [145, 342], "469282e": 145, "la148": [145, 342], "479322e": 145, "la149": [145, 342], "489347e": 145, "la150": [145, 342], "499388e": 145, "la151": [145, 342], "509417e": 145, "la152": [145, 342], "519462e": 145, "la153": [145, 342], "529496e": 145, "la154": [145, 342], "539545e": 145, "la155": [145, 342], "549583e": 145, "la156": [145, 342], "559638e": 145, "la157": [145, 342], "157": [145, 231, 361], "569678e": 145, "la158": [145, 342], "158": [145, 231], "579524e": 145, "la159": [145, 342], "159": 145, "589559e": 145, "401157e": 145, "ce119": [145, 342], "189528e": 145, "ce120": [145, 342], "199466e": 145, "ce121": [145, 342], "209434e": 145, "ce122": [145, 342], "219379e": 145, "ce123": [145, 342], "229354e": 145, "ce124": [145, 342], "239304e": 145, "ce125": [145, 342], "249284e": 145, "ce126": [145, 342], "259240e": 145, "ce127": [145, 342], "269227e": 145, "ce127m": [145, 342], "ce128": [145, 342], "279189e": 145, "358000e": 145, "ce129": [145, 342], "289181e": 145, "ce130": [145, 342], "299147e": 145, "ce131": [145, 342], "309144e": 145, "ce131m": [145, 342], "309145e": 145, "ce132": [145, 342], "319115e": 145, "263600e": 145, "ce132m": [145, 342], "319140e": 145, "ce133": [145, 342], "329115e": 145, "ce133m": [145, 342], "329116e": 145, "836000e": 145, "ce134": [145, 342], "339089e": 145, "730240e": 145, "ce135": [145, 342], "349092e": 145, "ce135m": [145, 342], "349096e": 145, "ce136": [145, 342], "ce137": [145, 342], "369078e": 145, "ce137m": [145, 342], "369081e": 145, "238000e": 145, "ce138": [145, 342], "379060e": 145, "388505e": 145, "ce138m": [145, 342], "379083e": 145, "ce139": [145, 342], "389067e": 145, "189123e": 145, "ce139m": [145, 342], "389075e": 145, "ce140": [145, 342], "399054e": 145, "ce141": [145, 342], "409083e": 145, "808950e": 145, "ce142": [145, 342], "111400e": 145, "419092e": 145, "577846e": 145, "ce143": [145, 342], "429124e": 145, "189404e": 145, "ce144": [145, 342], "439136e": 145, "461622e": 145, "ce145": [145, 342], "449172e": 145, "806000e": 145, "ce146": [145, 342], "459188e": 145, "ce147": [145, 342], "469227e": 145, "ce148": [145, 342], "479244e": 145, "ce149": [145, 342], "489284e": 145, "ce150": [145, 342], "499304e": 145, "ce151": [145, 342], "509340e": 145, "ce152": [145, 342], "519365e": 145, "ce153": [145, 342], "529406e": 145, "ce154": [145, 342], "539434e": 145, "ce155": [145, 342], "549480e": 145, "ce156": [145, 342], "559513e": 145, "ce157": [145, 342], "569563e": 145, "ce158": [145, 342], "579600e": 145, "ce159": [145, 342], "589653e": 145, "ce160": [145, 342], "160": [145, 231, 341], "599494e": 145, "ce161": [145, 342], "161": [145, 231], "609543e": 145, "ce162": [145, 342], "162": [145, 231], "619502e": 145, "409077e": 145, "pr121": [145, 342], "209554e": 145, "pr122": [145, 342], "219518e": 145, "pr123": [145, 342], "229460e": 145, "pr124": [145, 342], "239430e": 145, "pr125": [145, 342], "249378e": 145, "pr126": [145, 342], "259353e": 145, "pr127": [145, 342], "269308e": 145, "pr128": [145, 342], "279288e": 145, "pr129": [145, 342], "289251e": 145, "pr130": [145, 342], "299236e": 145, "pr131": [145, 342], "309203e": 145, "pr131m": [145, 342], "309204e": 145, "pr132": [145, 342], "319193e": 145, "pr133": [145, 342], "329163e": 145, "pr133m": [145, 342], "329165e": 145, "pr134": [145, 342], "339157e": 145, "pr134m": [145, 342], "339158e": 145, "pr135": [145, 342], "349131e": 145, "pr135m": [145, 342], "349135e": 145, "pr136": [145, 342], "359127e": 145, "pr137": [145, 342], "369107e": 145, "608000e": 145, "pr138": [145, 342], "379108e": 145, "pr138m": [145, 342], "pr139": [145, 342], "389089e": 145, "587600e": 145, "pr140": [145, 342], "399091e": 145, "034000e": 145, "pr141": [145, 342], "pr142": [145, 342], "419100e": 145, "883200e": 145, "pr142m": [145, 342], "pr143": [145, 342], "429108e": 145, "172448e": 145, "pr144": [145, 342], "439133e": 145, "036800e": 145, "pr144m": [145, 342], "439134e": 145, "pr145": [145, 342], "449145e": 145, "154240e": 145, "pr146": [145, 342], "459176e": 145, "445400e": 145, "pr147": [145, 342], "469190e": 145, "064000e": 145, "pr148": [145, 342], "479221e": 145, "pr148m": [145, 342], "479222e": 145, "pr149": [145, 342], "489237e": 145, "356000e": 145, "pr150": [145, 342], "499267e": 145, "pr151": [145, 342], "509283e": 145, "pr152": [145, 342], "519315e": 145, "pr153": [145, 342], "529338e": 145, "pr154": [145, 342], "539375e": 145, "pr155": [145, 342], "549401e": 145, "pr156": [145, 342], "559443e": 145, "pr157": [145, 342], "569474e": 145, "pr158": [145, 342], "579520e": 145, "pr159": [145, 342], "589555e": 145, "pr160": [145, 342], "599604e": 145, "pr161": [145, 342], "609642e": 145, "pr162": [145, 342], "pr163": [145, 342], "163": [145, 231], "629536e": 145, "pr164": [145, 342], "164": [145, 153, 231], "639484e": 145, "442361e": 145, "nd124": [145, 342], "239522e": 145, "nd125": [145, 342], "249489e": 145, "nd126": [145, 342], "259432e": 145, "nd127": [145, 342], "269405e": 145, "nd128": [145, 342], "279354e": 145, "nd129": [145, 342], "289332e": 145, "nd130": [145, 342], "299285e": 145, "nd131": [145, 342], "nd132": [145, 342], "319233e": 145, "nd133": [145, 342], "329223e": 145, "nd133m": [145, 342], "329225e": 145, "nd134": [145, 342], "339188e": 145, "nd134m": [145, 342], "339213e": 145, "nd135": [145, 342], "349182e": 145, "nd136": [145, 342], "359150e": 145, "039000e": 145, "nd137": [145, 342], "369146e": 145, "nd137m": [145, 342], "369151e": 145, "nd138": [145, 342], "379120e": 145, "814400e": 145, "nd139": [145, 342], "389120e": 145, "782000e": 145, "nd139m": [145, 342], "389122e": 145, "nd140": [145, 342], "911680e": 145, "nd140m": [145, 342], "399119e": 145, "nd141": [145, 342], "409096e": 145, "nd141m": [145, 342], "409104e": 145, "nd142": [145, 342], "419077e": 145, "nd143": [145, 342], "429098e": 145, "nd144": [145, 342], "439101e": 145, "nd145": [145, 342], "449126e": 145, "nd146": [145, 342], "459131e": 145, "nd147": [145, 342], "469161e": 145, "529920e": 145, "nd148": [145, 342], "479169e": 145, "nd149": [145, 342], "489201e": 145, "220800e": 145, "nd150": [145, 342], "499209e": 145, "871680e": 145, "nd151": [145, 342], "509238e": 145, "464000e": 145, "nd152": [145, 342], "519247e": 145, "nd153": [145, 342], "529277e": 145, "nd154": [145, 342], "539295e": 145, "nd155": [145, 342], "549329e": 145, "nd156": [145, 342], "559350e": 145, "nd157": [145, 342], "569390e": 145, "nd158": [145, 342], "579416e": 145, "nd159": [145, 342], "589461e": 145, "nd160": [145, 342], "nd161": [145, 342], "609539e": 145, "nd162": [145, 342], "619569e": 145, "nd163": [145, 342], "629622e": 145, "nd164": [145, 342], "nd165": [145, 342], "165": [145, 231, 340], "649530e": 145, "nd166": [145, 342], "166": 145, "659496e": 145, "nd167": [145, 342], "167": [145, 231], "669529e": 145, "pm126": [145, 342], "pm127": [145, 342], "269516e": 145, "pm128": [145, 342], "279484e": 145, "pm129": [145, 342], "289432e": 145, "pm130": [145, 342], "299405e": 145, "pm131": [145, 342], "309359e": 145, "pm132": [145, 342], "319338e": 145, "pm133": [145, 342], "329298e": 145, "pm133m": [145, 342], "329299e": 145, "pm134": [145, 342], "339284e": 145, "pm134m": [145, 342], "pm135": [145, 342], "349249e": 145, "pm135m": [145, 342], "349251e": 145, "pm136": [145, 342], "359236e": 145, "pm136m": [145, 342], "359237e": 145, "pm137": [145, 342], "369205e": 145, "pm138": [145, 342], "379195e": 145, "pm138m": [145, 342], "379196e": 145, "pm139": [145, 342], "389168e": 145, "pm139m": [145, 342], "389170e": 145, "pm140": [145, 342], "399160e": 145, "pm140m": [145, 342], "399165e": 145, "pm141": [145, 342], "409136e": 145, "254000e": 145, "pm142": [145, 342], "419129e": 145, "pm142m": [145, 342], "419138e": 145, "pm143": [145, 342], "429109e": 145, "289600e": 145, "pm144": [145, 342], "439126e": 145, "pm145": [145, 342], "449127e": 145, "585576e": 145, "pm146": [145, 342], "459147e": 145, "745098e": 145, "pm147": [145, 342], "469151e": 145, "278644e": 145, "pm148": [145, 342], "479175e": 145, "637952e": 145, "pm148m": [145, 342], "479176e": 145, "567000e": 145, "pm149": [145, 342], "489183e": 145, "910880e": 145, "pm150": [145, 342], "499210e": 145, "712800e": 145, "pm151": [145, 342], "509212e": 145, "022400e": 145, "pm152": [145, 342], "519235e": 145, "472000e": 145, "pm152m": [145, 342], "519237e": 145, "512000e": 145, "pm152m2": [145, 342], "519239e": 145, "pm153": [145, 342], "529241e": 145, "pm154": [145, 342], "539265e": 145, "pm154m": [145, 342], "539266e": 145, "pm155": [145, 342], "549281e": 145, "pm156": [145, 342], "559311e": 145, "pm156m": [145, 342], "559312e": 145, "pm157": [145, 342], "569330e": 145, "056000e": 145, "pm158": [145, 342], "579366e": 145, "pm159": [145, 342], "589390e": 145, "pm160": [145, 342], "599430e": 145, "pm161": [145, 342], "609459e": 145, "pm162": [145, 342], "619503e": 145, "pm163": [145, 342], "629537e": 145, "pm164": [145, 342], "639578e": 145, "pm165": [145, 342], "649616e": 145, "pm166": [145, 342], "pm167": [145, 342], "pm168": [145, 342], "168": [145, 231], "679481e": 145, "pm169": [145, 342], "169": [145, 203, 231, 279, 291, 292, 493], "689526e": 145, "503663e": 145, "sm128": [145, 342], "279581e": 145, "sm129": [145, 342], "289546e": 145, "sm130": [145, 342], "299489e": 145, "sm131": [145, 342], "309461e": 145, "sm132": [145, 342], "319407e": 145, "sm133": [145, 342], "sm133m": [145, 342], "329389e": 145, "sm134": [145, 342], "339340e": 145, "sm135": [145, 342], "349325e": 145, "sm136": [145, 342], "359283e": 145, "sm137": [145, 342], "369270e": 145, "sm138": [145, 342], "379232e": 145, "sm139": [145, 342], "389223e": 145, "542000e": 145, "sm139m": [145, 342], "389228e": 145, "sm140": [145, 342], "399190e": 145, "892000e": 145, "sm141": [145, 342], "409185e": 145, "sm141m": [145, 342], "409187e": 145, "sm142": [145, 342], "419152e": 145, "349400e": 145, "sm143": [145, 342], "429146e": 145, "sm143m": [145, 342], "429154e": 145, "sm143m2": [145, 342], "429176e": 145, "sm144": [145, 342], "439120e": 145, "sm145": [145, 342], "449134e": 145, "937600e": 145, "sm146": [145, 342], "459130e": 145, "sm147": [145, 342], "499000e": 145, "469149e": 145, "386058e": 145, "sm148": [145, 342], "124000e": 145, "479148e": 145, "208985e": 145, "sm149": [145, 342], "489172e": 145, "sm150": [145, 342], "499173e": 145, "sm151": [145, 342], "509199e": 145, "840123e": 145, "sm152": [145, 342], "675000e": 145, "519197e": 145, "sm153": [145, 342], "529221e": 145, "666224e": 145, "sm153m": [145, 342], "529222e": 145, "sm154": [145, 342], "539222e": 145, "sm155": [145, 342], "549246e": 145, "330800e": 145, "sm156": [145, 342], "559255e": 145, "sm157": [145, 342], "569284e": 145, "818000e": 145, "sm158": [145, 342], "579300e": 145, "sm159": [145, 342], "589332e": 145, "137000e": 145, "sm160": [145, 342], "599351e": 145, "sm161": [145, 342], "609388e": 145, "sm162": [145, 342], "619412e": 145, "sm163": [145, 342], "629454e": 145, "sm164": [145, 342], "639483e": 145, "sm165": [145, 342], "sm166": [145, 342], "659556e": 145, "sm167": [145, 342], "669610e": 145, "sm168": [145, 342], "679646e": 145, "sm169": [145, 342], "sm170": [145, 342], "170": [145, 341, 399], "699498e": 145, "sm171": [145, 342], "171": [145, 203, 231], "709527e": 145, "sm172": [145, 342], "172": [145, 231, 461, 466], "719485e": 145, "519644e": 145, "eu130": [145, 342], "299636e": 145, "eu131": [145, 342], "309578e": 145, "eu132": [145, 342], "319544e": 145, "eu133": [145, 342], "329492e": 145, "eu134": [145, 342], "339465e": 145, "eu135": [145, 342], "349418e": 145, "eu136": [145, 342], "359396e": 145, "eu136m": [145, 342], "359397e": 145, "eu137": [145, 342], "369356e": 145, "eu138": [145, 342], "379338e": 145, "eu139": [145, 342], "389298e": 145, "eu139m": [145, 342], "389300e": 145, "eu140": [145, 342], "399281e": 145, "eu140m": [145, 342], "399283e": 145, "eu141": [145, 342], "409249e": 145, "eu141m": [145, 342], "409250e": 145, "eu142": [145, 342], "419234e": 145, "eu142m": [145, 342], "419239e": 145, "eu143": [145, 342], "429203e": 145, "554000e": 145, "eu144": [145, 342], "439188e": 145, "eu145": [145, 342], "449163e": 145, "123520e": 145, "eu146": [145, 342], "459172e": 145, "983040e": 145, "eu146m": [145, 342], "459179e": 145, "eu147": [145, 342], "469167e": 145, "082240e": 145, "eu148": [145, 342], "479181e": 145, "708800e": 145, "eu149": [145, 342], "489179e": 145, "043840e": 145, "eu150": [145, 342], "499197e": 145, "164451e": 145, "eu150m": [145, 342], "eu151": [145, 235, 342], "781000e": 145, "364677e": 145, "eu151m": [145, 342], "509201e": 145, "eu152": [145, 342], "519217e": 145, "265550e": 145, "eu152m": [145, 342], "519218e": 145, "eu152m2": [145, 342], "519219e": 145, "eu153": [145, 342], "219000e": 145, "529212e": 145, "eu154": [145, 342], "539230e": 145, "714211e": 145, "eu154m": [145, 342], "539231e": 145, "eu155": [145, 342], "549229e": 145, "499901e": 145, "eu156": [145, 342], "559248e": 145, "312416e": 145, "eu157": [145, 342], "569254e": 145, "464800e": 145, "eu158": [145, 342], "579278e": 145, "754000e": 145, "eu159": [145, 342], "589291e": 145, "eu160": [145, 342], "599320e": 145, "eu160m": [145, 342], "599321e": 145, "eu161": [145, 342], "609337e": 145, "eu162": [145, 342], "619370e": 145, "eu163": [145, 342], "629392e": 145, "eu164": [145, 342], "639430e": 145, "eu165": [145, 342], "649457e": 145, "eu166": [145, 342], "659500e": 145, "eu167": [145, 342], "669532e": 145, "eu168": [145, 342], "679572e": 145, "eu169": [145, 342], "689609e": 145, "eu170": [145, 342], "699659e": 145, "eu171": [145, 342], "eu172": [145, 342], "572521e": 145, "gd133": [145, 342], "329606e": 145, "gd134": [145, 342], "339554e": 145, "gd135": [145, 342], "349526e": 145, "gd136": [145, 342], "359473e": 145, "gd137": [145, 342], "369450e": 145, "gd138": [145, 342], "379401e": 145, "gd139": [145, 342], "389382e": 145, "gd139m": [145, 342], "389385e": 145, "gd140": [145, 342], "399337e": 145, "gd141": [145, 342], "409321e": 145, "gd141m": [145, 342], "409325e": 145, "gd142": [145, 342], "419281e": 145, "gd143": [145, 342], "429267e": 145, "gd143m": [145, 342], "429269e": 145, "gd144": [145, 342], "682000e": 145, "gd145": [145, 342], "449217e": 145, "gd145m": [145, 342], "449225e": 145, "gd146": [145, 342], "459183e": 145, "170528e": 145, "gd147": [145, 342], "469191e": 145, "370160e": 145, "gd148": [145, 342], "243697e": 145, "gd149": [145, 342], "489193e": 145, "017920e": 145, "gd150": [145, 342], "499187e": 145, "648690e": 145, "gd151": [145, 342], "509203e": 145, "070496e": 145, "gd152": [145, 342], "519198e": 145, "408148e": 145, "gd153": [145, 342], "529217e": 145, "077056e": 145, "gd153m": [145, 342], "529219e": 145, "gd154": [145, 342], "539209e": 145, "gd155": [145, 342], "549226e": 145, "gd155m": [145, 342], "549228e": 145, "gd156": [145, 342], "559221e": 145, "gd157": [145, 342], "569240e": 145, "gd157m": [145, 342], "569244e": 145, "gd158": [145, 342], "579241e": 145, "gd159": [145, 342], "589264e": 145, "652440e": 145, "gd160": [145, 342], "186000e": 145, "599271e": 145, "gd161": [145, 342], "609297e": 145, "196000e": 145, "gd162": [145, 342], "619310e": 145, "gd163": [145, 342], "629340e": 145, "gd164": [145, 342], "639359e": 145, "gd165": [145, 342], "649394e": 145, "gd166": [145, 342], "659416e": 145, "gd167": [145, 342], "669456e": 145, "gd168": [145, 342], "679484e": 145, "gd169": [145, 342], "689529e": 145, "gd170": [145, 342], "699552e": 145, "gd171": [145, 342], "709602e": 145, "gd172": [145, 342], "719634e": 145, "589253e": 145, "tb135": [145, 342], "349638e": 145, "tb136": [145, 342], "359614e": 145, "tb137": [145, 342], "369560e": 145, "tb138": [145, 342], "379532e": 145, "tb139": [145, 342], "389483e": 145, "tb140": [145, 342], "399458e": 145, "tb141": [145, 342], "409414e": 145, "tb141m": [145, 342], "409418e": 145, "tb142": [145, 342], "419387e": 145, "tb142m": [145, 342], "419390e": 145, "tb142m2": [145, 342], "419394e": 145, "tb143": [145, 342], "tb143m": [145, 342], "tb144": [145, 342], "439330e": 145, "tb144m": [145, 342], "439335e": 145, "tb145": [145, 342], "449293e": 145, "tb146": [145, 342], "459272e": 145, "tb146m": [145, 342], "459274e": 145, "tb146m2": [145, 342], "459282e": 145, "tb147": [145, 342], "469240e": 145, "904000e": 145, "tb147m": [145, 342], "469241e": 145, "tb148": [145, 342], "479243e": 145, "tb148m": [145, 342], "tb149": [145, 342], "489232e": 145, "482480e": 145, "tb149m": [145, 342], "489233e": 145, "496000e": 145, "tb150": [145, 342], "499237e": 145, "252800e": 145, "tb150m": [145, 342], "499242e": 145, "tb151": [145, 342], "509231e": 145, "339240e": 145, "tb151m": [145, 342], "509232e": 145, "tb152": [145, 342], "519241e": 145, "tb152m": [145, 342], "519246e": 145, "tb153": [145, 342], "529234e": 145, "021760e": 145, "tb153m": [145, 342], "529236e": 145, "tb154": [145, 342], "539247e": 145, "tb154m": [145, 342], "539249e": 145, "tb154m2": [145, 342], "539251e": 145, "tb155": [145, 342], "549235e": 145, "596480e": 145, "tb156": [145, 342], "559247e": 145, "622400e": 145, "tb156m": [145, 342], "908000e": 145, "tb156m2": [145, 342], "559249e": 145, "784000e": 145, "tb157": [145, 342], "240542e": 145, "tb158": [145, 342], "579254e": 145, "680247e": 145, "tb158m": [145, 342], "579255e": 145, "tb158m2": [145, 342], "579258e": 145, "tb159": [145, 342], "tb160": [145, 342], "599272e": 145, "246720e": 145, "tb161": [145, 342], "609276e": 145, "952960e": 145, "tb162": [145, 342], "619295e": 145, "tb162m": [145, 342], "tb163": [145, 342], "629306e": 145, "tb164": [145, 342], "639334e": 145, "tb165": [145, 342], "649349e": 145, "tb166": [145, 342], "659380e": 145, "tb167": [145, 342], "669401e": 145, "tb168": [145, 342], "679436e": 145, "tb169": [145, 342], "689462e": 145, "tb170": [145, 342], "699502e": 145, "tb171": [145, 342], "709533e": 145, "tb172": [145, 342], "719570e": 145, "tb173": [145, 342], "729602e": 145, "tb174": [145, 342], "174": [145, 231], "739649e": 145, "624970e": 145, "dy138": [145, 342], "379625e": 145, "dy139": [145, 342], "389595e": 145, "dy140": [145, 342], "399540e": 145, "dy141": [145, 342], "409514e": 145, "dy142": [145, 342], "419464e": 145, "dy143": [145, 342], "429438e": 145, "dy143m": [145, 342], "429442e": 145, "dy144": [145, 342], "439393e": 145, "dy145": [145, 342], "449374e": 145, "dy145m": [145, 342], "449376e": 145, "dy146": [145, 342], "459328e": 145, "dy146m": [145, 342], "459360e": 145, "dy147": [145, 342], "469311e": 145, "dy147m": [145, 342], "469319e": 145, "dy148": [145, 342], "479272e": 145, "dy149": [145, 342], "489273e": 145, "dy149m": [145, 342], "489302e": 145, "dy150": [145, 342], "499256e": 145, "dy151": [145, 342], "509262e": 145, "074000e": 145, "dy152": [145, 342], "dy153": [145, 342], "529258e": 145, "dy154": [145, 342], "539244e": 145, "dy155": [145, 342], "549258e": 145, "dy156": [145, 342], "559243e": 145, "dy157": [145, 342], "569255e": 145, "930400e": 145, "dy157m": [145, 342], "569257e": 145, "dy158": [145, 342], "579244e": 145, "dy159": [145, 342], "589257e": 145, "247616e": 145, "dy159m": [145, 342], "589261e": 145, "dy160": [145, 342], "599252e": 145, "dy161": [145, 342], "609269e": 145, "dy162": [145, 342], "551000e": 145, "619268e": 145, "dy163": [145, 342], "629287e": 145, "dy164": [145, 342], "639292e": 145, "dy165": [145, 342], "649317e": 145, "395200e": 145, "dy165m": [145, 342], "649318e": 145, "dy166": [145, 342], "659328e": 145, "dy167": [145, 342], "669357e": 145, "dy168": [145, 342], "679371e": 145, "dy169": [145, 342], "689403e": 145, "dy170": [145, 342], "699424e": 145, "dy171": [145, 342], "709462e": 145, "dy172": [145, 342], "719488e": 145, "dy173": [145, 342], "729530e": 145, "dy174": [145, 342], "739551e": 145, "dy175": [145, 342], "175": [145, 231, 449], "749598e": 145, "dy176": [145, 342], "176": [145, 231], "759628e": 145, "649303e": 145, "ho140": [145, 342], "ho141": [145, 342], "409631e": 145, "ho142": [145, 342], "419598e": 145, "ho143": [145, 342], "429546e": 145, "ho144": [145, 342], "439515e": 145, "ho145": [145, 342], "449472e": 145, "ho146": [145, 342], "459446e": 145, "ho147": [145, 342], "469401e": 145, "ho148": [145, 342], "ho148m": [145, 342], "479380e": 145, "ho148m2": [145, 342], "479387e": 145, "ho149": [145, 342], "489338e": 145, "ho149m": [145, 342], "ho150": [145, 342], "499335e": 145, "ho150m": [145, 342], "ho151": [145, 342], "509317e": 145, "ho151m": [145, 342], "ho152": [145, 342], "519317e": 145, "ho152m": [145, 342], "519319e": 145, "ho153": [145, 342], "529302e": 145, "ho153m": [145, 342], "529303e": 145, "ho154": [145, 342], "539306e": 145, "ho154m": [145, 342], "539309e": 145, "ho155": [145, 342], "549291e": 145, "ho155m": [145, 342], "549293e": 145, "ho156": [145, 342], "559298e": 145, "ho156m": [145, 342], "559299e": 145, "ho156m2": [145, 342], "559300e": 145, "ho157": [145, 342], "569283e": 145, "ho158": [145, 342], "579289e": 145, "ho158m": [145, 342], "579290e": 145, "ho158m2": [145, 342], "579291e": 145, "ho159": [145, 342], "589277e": 145, "ho159m": [145, 342], "589279e": 145, "ho160": [145, 342], "599287e": 145, "536000e": 145, "ho160m": [145, 342], "599288e": 145, "807000e": 145, "ho160m2": [145, 342], "599289e": 145, "ho161": [145, 342], "609279e": 145, "ho161m": [145, 342], "609281e": 145, "ho162": [145, 342], "619291e": 145, "ho162m": [145, 342], "619292e": 145, "ho163": [145, 342], "442152e": 145, "ho163m": [145, 342], "629291e": 145, "ho164": [145, 342], "639302e": 145, "ho164m": [145, 342], "639304e": 145, "ho165": [145, 342], "ho166": [145, 342], "659323e": 145, "656640e": 145, "ho166m": [145, 342], "787000e": 145, "ho166m2": [145, 342], "659325e": 145, "ho167": [145, 342], "669331e": 145, "116000e": 145, "ho168": [145, 342], "679355e": 145, "794000e": 145, "ho168m": [145, 342], "679356e": 145, "ho169": [145, 342], "689369e": 145, "ho170": [145, 342], "699396e": 145, "656000e": 145, "ho170m": [145, 342], "699397e": 145, "ho171": [145, 342], "709415e": 145, "ho172": [145, 342], "719448e": 145, "ho173": [145, 342], "729473e": 145, "ho174": [145, 342], "739512e": 145, "ho175": [145, 342], "749541e": 145, "ho176": [145, 342], "759571e": 145, "ho177": [145, 342], "769601e": 145, "ho178": [145, 342], "178": [145, 203, 231], "779646e": 145, "672591e": 145, "er142": [145, 342], "419690e": 145, "er143": [145, 342], "429663e": 145, "er144": [145, 342], "439604e": 145, "er145": [145, 342], "449574e": 145, "er145m": [145, 342], "449577e": 145, "er146": [145, 342], "459520e": 145, "er147": [145, 342], "469495e": 145, "er147m": [145, 342], "469496e": 145, "er148": [145, 342], "479446e": 145, "er148m": [145, 342], "479477e": 145, "er149": [145, 342], "489423e": 145, "er149m": [145, 342], "489431e": 145, "er150": [145, 342], "499379e": 145, "er151": [145, 342], "509374e": 145, "er151m": [145, 342], "509402e": 145, "er152": [145, 342], "519351e": 145, "er153": [145, 342], "529351e": 145, "er154": [145, 342], "539328e": 145, "er155": [145, 342], "549332e": 145, "er156": [145, 342], "er157": [145, 342], "569319e": 145, "er157m": [145, 342], "569321e": 145, "er158": [145, 342], "579299e": 145, "er159": [145, 342], "589307e": 145, "er160": [145, 342], "599291e": 145, "028880e": 145, "er161": [145, 342], "609300e": 145, "155600e": 145, "er162": [145, 342], "619288e": 145, "er163": [145, 342], "629300e": 145, "er164": [145, 342], "601000e": 145, "er165": [145, 342], "649307e": 145, "729600e": 145, "er166": [145, 342], "350300e": 145, "659303e": 145, "er167": [145, 342], "286900e": 145, "669320e": 145, "er167m": [145, 342], "669323e": 145, "269000e": 145, "er168": [145, 342], "697800e": 145, "679324e": 145, "er169": [145, 342], "689346e": 145, "114688e": 145, "er170": [145, 342], "491000e": 145, "699355e": 145, "er171": [145, 342], "709380e": 145, "705760e": 145, "er172": [145, 342], "719394e": 145, "774800e": 145, "er173": [145, 342], "729424e": 145, "er174": [145, 342], "739442e": 145, "er175": [145, 342], "749478e": 145, "er176": [145, 342], "759501e": 145, "er177": [145, 342], "769541e": 145, "er178": [145, 342], "779557e": 145, "er179": [145, 342], "179": 145, "789600e": 145, "er180": [145, 342], "180": [145, 231, 465, 484], "799628e": 145, "689342e": 145, "tm144": [145, 342], "439747e": 145, "tm145": [145, 342], "449701e": 145, "tm146": [145, 342], "459664e": 145, "tm147": [145, 342], "469610e": 145, "tm147m": [145, 342], "tm148": [145, 342], "479578e": 145, "tm149": [145, 342], "489527e": 145, "tm150": [145, 342], "499500e": 145, "tm150m": [145, 342], "499507e": 145, "tm151": [145, 342], "509455e": 145, "tm151m": [145, 342], "509456e": 145, "tm152": [145, 342], "519444e": 145, "tm152m": [145, 342], "519445e": 145, "tm153": [145, 342], "529420e": 145, "tm153m": [145, 342], "529421e": 145, "tm154": [145, 342], "539416e": 145, "tm154m": [145, 342], "tm155": [145, 342], "549392e": 145, "tm155m": [145, 342], "tm156": [145, 342], "559390e": 145, "tm157": [145, 342], "569370e": 145, "tm158": [145, 342], "579370e": 145, "tm158m": [145, 342], "579371e": 145, "tm159": [145, 342], "589350e": 145, "tm160": [145, 342], "599353e": 145, "tm160m": [145, 342], "tm161": [145, 342], "609335e": 145, "812000e": 145, "tm162": [145, 342], "619340e": 145, "tm162m": [145, 342], "619341e": 145, "tm163": [145, 342], "629327e": 145, "tm164": [145, 342], "639336e": 145, "tm164m": [145, 342], "tm165": [145, 342], "649324e": 145, "082160e": 145, "tm166": [145, 342], "659336e": 145, "tm166m": [145, 342], "659337e": 145, "tm167": [145, 342], "669329e": 145, "992000e": 145, "tm168": [145, 342], "679342e": 145, "tm169": [145, 342], "tm170": [145, 342], "699358e": 145, "111104e": 145, "tm171": [145, 342], "709364e": 145, "058930e": 145, "tm172": [145, 342], "719384e": 145, "tm172m": [145, 342], "719389e": 145, "tm173": [145, 342], "729396e": 145, "966400e": 145, "tm174": [145, 342], "739422e": 145, "tm175": [145, 342], "749438e": 145, "tm176": [145, 342], "759470e": 145, "tm177": [145, 342], "769490e": 145, "tm177m": [145, 342], "769491e": 145, "tm178": [145, 342], "779526e": 145, "tm179": [145, 342], "789553e": 145, "tm180": [145, 342], "799580e": 145, "tm181": [145, 342], "809608e": 145, "tm182": [145, 342], "182": [145, 457, 466], "819649e": 145, "tm183": [145, 342], "183": [145, 231], "829574e": 145, "730377e": 145, "yb148": [145, 342], "479674e": 145, "yb149": [145, 342], "489640e": 145, "yb150": [145, 342], "499584e": 145, "yb151": [145, 342], "509554e": 145, "yb151m": [145, 342], "509562e": 145, "yb152": [145, 342], "519503e": 145, "yb152m": [145, 342], "519532e": 145, "yb153": [145, 342], "529495e": 145, "yb153m": [145, 342], "529523e": 145, "yb154": [145, 342], "539464e": 145, "yb155": [145, 342], "549458e": 145, "793000e": 145, "yb156": [145, 342], "559428e": 145, "yb157": [145, 342], "569426e": 145, "yb158": [145, 342], "579399e": 145, "yb159": [145, 342], "589401e": 145, "yb160": [145, 342], "599376e": 145, "yb161": [145, 342], "609379e": 145, "yb162": [145, 342], "619358e": 145, "132200e": 145, "yb163": [145, 342], "629363e": 145, "yb164": [145, 342], "639345e": 145, "yb165": [145, 342], "649353e": 145, "yb166": [145, 342], "659339e": 145, "041200e": 145, "yb167": [145, 342], "669349e": 145, "yb168": [145, 342], "679339e": 145, "yb169": [145, 342], "689352e": 145, "766355e": 145, "yb169m": [145, 342], "yb170": [145, 342], "699348e": 145, "yb171": [145, 342], "709363e": 145, "yb171m": [145, 342], "yb172": [145, 342], "719364e": 145, "yb173": [145, 342], "729382e": 145, "yb174": [145, 342], "739389e": 145, "yb174m": [145, 342], "739405e": 145, "yb175": [145, 342], "749413e": 145, "615840e": 145, "yb176": [145, 342], "759426e": 145, "yb176m": [145, 342], "759437e": 145, "yb177": [145, 342], "769453e": 145, "879600e": 145, "yb177m": [145, 342], "769456e": 145, "yb178": [145, 342], "779466e": 145, "yb179": [145, 342], "789502e": 145, "yb180": [145, 342], "799523e": 145, "yb181": [145, 342], "809562e": 145, "yb182": [145, 342], "819570e": 145, "yb183": [145, 342], "829611e": 145, "yb184": [145, 342], "184": [145, 231, 478], "839635e": 145, "yb185": [145, 342], "185": 145, "849679e": 145, "yb186": [145, 342], "186": [145, 231], "859609e": 145, "yb187": [145, 342], "869648e": 145, "749667e": 145, "lu150": [145, 342], "499732e": 145, "lu150m": [145, 342], "499733e": 145, "lu151": [145, 342], "509676e": 145, "lu151m": [145, 342], "509677e": 145, "lu152": [145, 342], "519641e": 145, "lu153": [145, 342], "529588e": 145, "lu153m": [145, 342], "529616e": 145, "lu154": [145, 342], "539575e": 145, "lu154m": [145, 342], "539576e": 145, "lu154m2": [145, 342], "539604e": 145, "lu155": [145, 342], "549543e": 145, "lu155m": [145, 342], "lu155m2": [145, 342], "549562e": 145, "lu156": [145, 342], "559530e": 145, "lu156m": [145, 342], "lu157": [145, 342], "569501e": 145, "lu157m": [145, 342], "lu158": [145, 342], "579493e": 145, "lu159": [145, 342], "589466e": 145, "lu160": [145, 342], "599460e": 145, "lu160m": [145, 342], "599461e": 145, "lu161": [145, 342], "609436e": 145, "lu161m": [145, 342], "609438e": 145, "lu162": [145, 342], "619433e": 145, "lu162m": [145, 342], "619434e": 145, "lu162m2": [145, 342], "619436e": 145, "lu163": [145, 342], "629412e": 145, "lu164": [145, 342], "639413e": 145, "lu165": [145, 342], "lu166": [145, 342], "659399e": 145, "lu166m": [145, 342], "lu166m2": [145, 342], "272000e": 145, "lu167": [145, 342], "669383e": 145, "lu167m": [145, 342], "669384e": 145, "lu168": [145, 342], "679387e": 145, "lu168m": [145, 342], "679390e": 145, "lu169": [145, 342], "689377e": 145, "226160e": 145, "lu169m": [145, 342], "lu170": [145, 342], "699385e": 145, "738368e": 145, "lu170m": [145, 342], "699386e": 145, "lu171": [145, 342], "709379e": 145, "125408e": 145, "lu171m": [145, 342], "lu172": [145, 342], "719391e": 145, "788800e": 145, "lu172m": [145, 342], "lu172m2": [145, 342], "719392e": 145, "lu173": [145, 342], "729389e": 145, "323299e": 145, "lu174": [145, 342], "739403e": 145, "044534e": 145, "lu174m": [145, 342], "227000e": 145, "lu175": [145, 342], "741000e": 145, "749408e": 145, "lu176": [145, 342], "759427e": 145, "186540e": 145, "lu176m": [145, 342], "759428e": 145, "319000e": 145, "lu177": [145, 342], "769438e": 145, "740675e": 145, "lu177m": [145, 342], "769448e": 145, "386000e": 145, "lu178": [145, 342], "779460e": 145, "704000e": 145, "lu178m": [145, 342], "779461e": 145, "lu179": [145, 342], "789473e": 145, "652400e": 145, "lu179m": [145, 342], "789480e": 145, "lu180": [145, 342], "799499e": 145, "lu181": [145, 342], "809520e": 145, "lu182": [145, 342], "819550e": 145, "lu183": [145, 342], "829576e": 145, "lu184": [145, 342], "839609e": 145, "lu185": [145, 342], "849622e": 145, "lu186": [145, 342], "859660e": 145, "lu187": [145, 342], "869689e": 145, "lu188": [145, 342], "188": [145, 203, 231], "879732e": 145, "lu189": [145, 342], "189": [145, 203, 231, 454, 466], "889708e": 145, "lu190": [145, 342], "190": [145, 231, 399], "899694e": 145, "784850e": 145, "hf153": [145, 342], "529707e": 145, "hf154": [145, 342], "539649e": 145, "hf155": [145, 342], "549634e": 145, "hf156": [145, 342], "559594e": 145, "hf156m": [145, 342], "559615e": 145, "hf157": [145, 342], "569584e": 145, "hf158": [145, 342], "579548e": 145, "hf159": [145, 342], "589540e": 145, "hf160": [145, 342], "599507e": 145, "hf161": [145, 342], "609503e": 145, "hf162": [145, 342], "619472e": 145, "hf163": [145, 342], "629471e": 145, "hf164": [145, 342], "639444e": 145, "hf165": [145, 342], "649446e": 145, "hf166": [145, 342], "659422e": 145, "hf167": [145, 342], "669426e": 145, "hf168": [145, 342], "679406e": 145, "557000e": 145, "hf169": [145, 342], "689413e": 145, "hf170": [145, 342], "763600e": 145, "hf171": [145, 342], "709405e": 145, "hf171m": [145, 342], "hf172": [145, 342], "901145e": 145, "hf173": [145, 342], "729405e": 145, "hf174": [145, 342], "739400e": 145, "hf175": [145, 342], "749415e": 145, "hf176": [145, 342], "759414e": 145, "hf177": [145, 342], "769432e": 145, "hf177m": [145, 342], "769446e": 145, "hf177m2": [145, 342], "769462e": 145, "hf178": [145, 342], "779437e": 145, "hf178m": [145, 342], "779449e": 145, "hf178m2": [145, 342], "779463e": 145, "hf179": [145, 342], "362000e": 145, "789458e": 145, "hf179m": [145, 342], "789462e": 145, "867000e": 145, "hf179m2": [145, 342], "789470e": 145, "164000e": 145, "hf180": [145, 342], "799466e": 145, "hf180m": [145, 342], "799478e": 145, "hf181": [145, 342], "809491e": 145, "662496e": 145, "hf181m": [145, 342], "809510e": 145, "hf182": [145, 342], "819506e": 145, "808566e": 145, "hf182m": [145, 342], "819518e": 145, "hf182m2": [145, 342], "819533e": 145, "hf183": [145, 342], "829535e": 145, "hf184": [145, 342], "839554e": 145, "483200e": 145, "hf184m": [145, 342], "839568e": 145, "hf185": [145, 342], "849588e": 145, "hf186": [145, 342], "hf187": [145, 342], "869646e": 145, "hf188": [145, 342], "879669e": 145, "hf189": [145, 342], "889696e": 145, "hf190": [145, 342], "899721e": 145, "hf191": [145, 342], "191": [145, 484], "909716e": 145, "hf192": [145, 342], "192": [145, 231], "919751e": 145, "809479e": 145, "ta155": [145, 342], "549746e": 145, "ta156": [145, 342], "559723e": 145, "ta156m": [145, 342], "559724e": 145, "ta157": [145, 342], "569682e": 145, "ta157m": [145, 342], "ta157m2": [145, 342], "569699e": 145, "ta158": [145, 342], "579667e": 145, "ta158m": [145, 342], "579669e": 145, "ta159": [145, 342], "589630e": 145, "ta159m": [145, 342], "589631e": 145, "ta160": [145, 342], "599616e": 145, "ta160m": [145, 342], "599618e": 145, "ta161": [145, 342], "609584e": 145, "ta161m": [145, 342], "609586e": 145, "ta162": [145, 342], "619573e": 145, "ta163": [145, 342], "629543e": 145, "ta164": [145, 342], "639535e": 145, "ta165": [145, 342], "649508e": 145, "ta166": [145, 342], "659505e": 145, "ta167": [145, 342], "669481e": 145, "ta168": [145, 342], "679480e": 145, "ta169": [145, 342], "689460e": 145, "ta170": [145, 342], "699462e": 145, "ta171": [145, 342], "709445e": 145, "ta172": [145, 342], "719449e": 145, "208000e": 145, "ta173": [145, 342], "729437e": 145, "130400e": 145, "ta174": [145, 342], "739445e": 145, "104000e": 145, "ta175": [145, 342], "749437e": 145, "ta176": [145, 342], "759449e": 145, "912400e": 145, "ta177": [145, 342], "769445e": 145, "028960e": 145, "ta178": [145, 342], "779458e": 145, "ta178m": [145, 342], "779474e": 145, "ta178m2": [145, 342], "779489e": 145, "ta179": [145, 342], "789459e": 145, "743361e": 145, "ta179m": [145, 342], "ta179m2": [145, 342], "789488e": 145, "ta180": [145, 342], "799475e": 145, "935440e": 145, "ta180m": [145, 342], "ta181": [145, 342], "998800e": 145, "809480e": 145, "ta181m": [145, 342], "809487e": 145, "ta182": [145, 342], "819502e": 145, "913536e": 145, "ta182m": [145, 342], "ta182m2": [145, 342], "819507e": 145, "504000e": 145, "ta183": [145, 342], "829514e": 145, "406400e": 145, "ta184": [145, 342], "839540e": 145, "132000e": 145, "ta185": [145, 342], "849556e": 145, "ta186": [145, 342], "859586e": 145, "ta187": [145, 342], "869605e": 145, "ta188": [145, 342], "879637e": 145, "ta189": [145, 342], "889658e": 145, "ta190": [145, 342], "899692e": 145, "ta191": [145, 342], "909705e": 145, "ta192": [145, 342], "ta193": [145, 342], "193": [145, 231], "929774e": 145, "ta194": [145, 342], "194": [145, 231], "939813e": 145, "838418e": 145, "w157": [145, 342], "569784e": 145, "w158": [145, 342], "579746e": 145, "w158m": [145, 342], "579766e": 145, "w159": [145, 342], "589729e": 145, "w160": [145, 342], "599685e": 145, "w161": [145, 342], "609674e": 145, "w162": [145, 342], "619635e": 145, "w163": [145, 342], "629625e": 145, "w164": [145, 342], "639590e": 145, "w165": [145, 342], "649583e": 145, "w166": [145, 342], "659550e": 145, "w167": [145, 342], "669548e": 145, "w168": [145, 342], "679518e": 145, "w169": [145, 342], "689518e": 145, "w170": [145, 342], "699492e": 145, "w171": [145, 342], "709495e": 145, "w172": [145, 342], "719473e": 145, "w173": [145, 342], "729477e": 145, "w174": [145, 342], "739461e": 145, "w175": [145, 342], "749467e": 145, "w176": [145, 342], "759456e": 145, "w177": [145, 342], "769466e": 145, "w178": [145, 342], "779459e": 145, "866240e": 145, "w179": [145, 342], "789471e": 145, "w179m": [145, 342], "w180": [145, 342], "799467e": 145, "w180m": [145, 342], "799483e": 145, "w181": [145, 342], "809482e": 145, "047168e": 145, "w182": [145, 292, 342, 356, 478], "819482e": 145, "w183": [145, 292, 342, 356, 478], "431000e": 145, "829502e": 145, "114314e": 145, "w183m": [145, 342], "829506e": 145, "w184": [145, 292, 342, 356, 478], "839509e": 145, "w185": [145, 342], "849534e": 145, "488640e": 145, "w185m": [145, 342], "849536e": 145, "w186": [145, 292, 342, 356, 478], "843000e": 145, "859544e": 145, "w187": [145, 342], "869572e": 145, "w188": [145, 342], "879585e": 145, "028992e": 145, "w189": [145, 342], "889619e": 145, "w190": [145, 342], "899632e": 145, "w190m": [145, 342], "899652e": 145, "w191": [145, 342], "909666e": 145, "w192": [145, 342], "919682e": 145, "w193": [145, 342], "929719e": 145, "w194": [145, 342], "939736e": 145, "w195": [145, 342], "949774e": 145, "w196": [145, 342], "196": 145, "959794e": 145, "w197": [145, 342], "969832e": 145, "w198": [145, 342], "198": [145, 231], "979816e": 145, "w199": [145, 342], "989780e": 145, "862067e": 145, "re159": [145, 342], "589831e": 145, "re159m": [145, 342], "589834e": 145, "re160": [145, 342], "599821e": 145, "re161": [145, 342], "609776e": 145, "re161m": [145, 342], "609777e": 145, "re162": [145, 342], "619760e": 145, "re162m": [145, 342], "619762e": 145, "re163": [145, 342], "629721e": 145, "re163m": [145, 342], "629722e": 145, "re164": [145, 342], "639703e": 145, "re164m": [145, 342], "639704e": 145, "re165": [145, 342], "649671e": 145, "re165m": [145, 342], "re166": [145, 342], "659658e": 145, "re167": [145, 342], "669626e": 145, "re167m": [145, 342], "669627e": 145, "re168": [145, 342], "679616e": 145, "re169": [145, 342], "689588e": 145, "re169m": [145, 342], "689590e": 145, "re170": [145, 342], "699582e": 145, "re171": [145, 342], "709557e": 145, "re172": [145, 342], "719554e": 145, "re172m": [145, 342], "re173": [145, 342], "729532e": 145, "188000e": 145, "re174": [145, 342], "739531e": 145, "re175": [145, 342], "749514e": 145, "re176": [145, 342], "759516e": 145, "re177": [145, 342], "769503e": 145, "re178": [145, 342], "779510e": 145, "re179": [145, 342], "789500e": 145, "re179m": [145, 342], "789558e": 145, "re180": [145, 342], "799508e": 145, "476000e": 145, "re181": [145, 342], "809501e": 145, "re182": [145, 342], "819512e": 145, "311200e": 145, "re182m": [145, 342], "819513e": 145, "re183": [145, 342], "829508e": 145, "re183m": [145, 342], "829529e": 145, "re184": [145, 342], "839525e": 145, "058560e": 145, "re184m": [145, 342], "839527e": 145, "re185": [145, 342], "849530e": 145, "re186": [145, 342], "859550e": 145, "212611e": 145, "re186m": [145, 342], "859551e": 145, "311000e": 145, "re187": [145, 342], "869558e": 145, "366415e": 145, "re188": [145, 342], "879581e": 145, "121800e": 145, "re188m": [145, 342], "879583e": 145, "115000e": 145, "re189": [145, 342], "889592e": 145, "748000e": 145, "re189m": [145, 342], "889611e": 145, "re190": [145, 342], "899618e": 145, "re190m": [145, 342], "899620e": 145, "re191": [145, 342], "909631e": 145, "re192": [145, 342], "919660e": 145, "re192m": [145, 342], "919661e": 145, "re192m2": [145, 342], "919662e": 145, "re193": [145, 342], "929675e": 145, "re194": [145, 342], "939704e": 145, "re194m": [145, 342], "939706e": 145, "re194m2": [145, 342], "939707e": 145, "re195": [145, 342], "949727e": 145, "re196": [145, 342], "959760e": 145, "re197": [145, 342], "969778e": 145, "re198": [145, 342], "979812e": 145, "re199": [145, 342], "989834e": 145, "re200": [145, 342], "999798e": 145, "re201": [145, 342], "009836e": 145, "902371e": 145, "os161": [145, 342], "609885e": 145, "os162": [145, 342], "619844e": 145, "os163": [145, 342], "629827e": 145, "os164": [145, 342], "639780e": 145, "os165": [145, 342], "649768e": 145, "os166": [145, 342], "659727e": 145, "os167": [145, 342], "669715e": 145, "os168": [145, 342], "679678e": 145, "os169": [145, 342], "689670e": 145, "os170": [145, 342], "699636e": 145, "os171": [145, 342], "709632e": 145, "os172": [145, 342], "719600e": 145, "os173": [145, 342], "729598e": 145, "os174": [145, 342], "739571e": 145, "os175": [145, 342], "749569e": 145, "os176": [145, 342], "759548e": 145, "os177": [145, 342], "769550e": 145, "os178": [145, 342], "779533e": 145, "os179": [145, 342], "789538e": 145, "os180": [145, 342], "799524e": 145, "os181": [145, 342], "809532e": 145, "os181m": [145, 342], "809533e": 145, "os182": [145, 342], "819521e": 145, "862400e": 145, "os182m": [145, 342], "819541e": 145, "os183": [145, 342], "829531e": 145, "os183m": [145, 342], "829533e": 145, "os184": [145, 342], "767188e": 145, "os185": [145, 342], "849540e": 145, "087040e": 145, "os186": [145, 342], "859538e": 145, "os187": [145, 342], "os188": [145, 342], "329000e": 145, "879558e": 145, "os189": [145, 342], "621000e": 145, "889581e": 145, "os189m": [145, 342], "889582e": 145, "os190": [145, 342], "636000e": 145, "899584e": 145, "os190m": [145, 342], "899603e": 145, "916000e": 145, "os191": [145, 342], "909609e": 145, "330560e": 145, "os191m": [145, 342], "909610e": 145, "os192": [145, 342], "093000e": 145, "919615e": 145, "os192m": [145, 342], "919636e": 145, "os193": [145, 342], "929642e": 145, "073880e": 145, "os194": [145, 342], "939652e": 145, "os195": [145, 342], "949681e": 145, "os196": [145, 342], "959696e": 145, "os197": [145, 342], "969731e": 145, "os198": [145, 342], "979743e": 145, "os199": [145, 342], "989776e": 145, "os200": [145, 342], "999793e": 145, "os201": [145, 342], "009827e": 145, "os202": [145, 342], "202": [145, 231], "019851e": 145, "os203": [145, 342], "029907e": 145, "os204": [145, 342], "204": [145, 231], "039896e": 145, "922161e": 145, "ir163": [145, 342], "629934e": 145, "ir164": [145, 342], "639922e": 145, "ir164m": [145, 342], "639925e": 145, "ir165": [145, 342], "649875e": 145, "ir165m": [145, 342], "649877e": 145, "ir166": [145, 342], "659858e": 145, "ir166m": [145, 342], "659860e": 145, "ir167": [145, 342], "669817e": 145, "ir167m": [145, 342], "669819e": 145, "ir168": [145, 342], "679799e": 145, "ir168m": [145, 342], "ir169": [145, 342], "689763e": 145, "ir169m": [145, 342], "689765e": 145, "ir170": [145, 342], "699750e": 145, "ir170m": [145, 342], "ir171": [145, 342], "709716e": 145, "ir171m": [145, 342], "709718e": 145, "ir172": [145, 342], "719705e": 145, "ir172m": [145, 342], "719706e": 145, "ir173": [145, 342], "729675e": 145, "ir173m": [145, 342], "729677e": 145, "ir174": [145, 342], "739669e": 145, "ir174m": [145, 342], "739671e": 145, "ir175": [145, 342], "749641e": 145, "ir176": [145, 342], "759636e": 145, "ir177": [145, 342], "769613e": 145, "ir178": [145, 342], "779611e": 145, "ir179": [145, 342], "789591e": 145, "ir180": [145, 342], "799592e": 145, "ir181": [145, 342], "809576e": 145, "ir182": [145, 342], "819581e": 145, "ir183": [145, 342], "829568e": 145, "ir184": [145, 342], "839575e": 145, "112400e": 145, "ir184m": [145, 342], "839577e": 145, "ir185": [145, 342], "849567e": 145, "ir186": [145, 342], "859579e": 145, "990400e": 145, "ir186m": [145, 342], "ir187": [145, 342], "869574e": 145, "ir187m": [145, 342], "869576e": 145, "ir188": [145, 342], "879589e": 145, "494000e": 145, "ir189": [145, 342], "889587e": 145, "140480e": 145, "ir189m": [145, 342], "889591e": 145, "ir189m2": [145, 342], "889612e": 145, "ir190": [145, 342], "899605e": 145, "017792e": 145, "ir190m": [145, 342], "899606e": 145, "032000e": 145, "ir190m2": [145, 342], "899610e": 145, "111000e": 145, "ir191": [145, 342], "909606e": 145, "ir191m": [145, 342], "909608e": 145, "ir191m2": [145, 342], "909629e": 145, "ir192": [145, 342], "919626e": 145, "378826e": 145, "ir192m": [145, 342], "919627e": 145, "ir192m2": [145, 342], "919628e": 145, "605000e": 145, "ir193": [145, 342], "929629e": 145, "ir193m": [145, 342], "929630e": 145, "ir193m2": [145, 342], "929654e": 145, "ir194": [145, 342], "939651e": 145, "904800e": 145, "ir194m": [145, 342], "185000e": 145, "ir194m2": [145, 342], "939655e": 145, "477000e": 145, "ir195": [145, 342], "949660e": 145, "ir195m": [145, 342], "949661e": 145, "321000e": 145, "ir196": [145, 342], "959684e": 145, "ir196m": [145, 342], "959688e": 145, "ir197": [145, 342], "969697e": 145, "ir197m": [145, 342], "969698e": 145, "ir198": [145, 342], "979723e": 145, "ir199": [145, 342], "989738e": 145, "ir200": [145, 342], "999765e": 145, "ir201": [145, 342], "009781e": 145, "ir202": [145, 342], "019811e": 145, "ir203": [145, 342], "029834e": 145, "ir204": [145, 342], "039888e": 145, "ir205": [145, 342], "205": [145, 231], "049926e": 145, "ir206": [145, 342], "206": [145, 203], "059897e": 145, "ir207": [145, 342], "207": [145, 231], "069884e": 145, "ir208": [145, 342], "208": [145, 203], "079935e": 145, "950778e": 145, "pt165": [145, 342], "649991e": 145, "pt166": [145, 342], "659949e": 145, "pt167": [145, 342], "669930e": 145, "pt168": [145, 342], "679882e": 145, "pt169": [145, 342], "689867e": 145, "pt170": [145, 342], "699825e": 145, "pt171": [145, 342], "709812e": 145, "pt172": [145, 342], "719773e": 145, "pt173": [145, 342], "729764e": 145, "pt174": [145, 342], "739728e": 145, "pt175": [145, 342], "749724e": 145, "pt176": [145, 342], "759689e": 145, "pt177": [145, 342], "769685e": 145, "pt178": [145, 342], "779656e": 145, "pt179": [145, 342], "789654e": 145, "pt180": [145, 342], "799630e": 145, "pt181": [145, 342], "809631e": 145, "pt182": [145, 342], "819612e": 145, "602000e": 145, "pt183": [145, 342], "829616e": 145, "pt183m": [145, 342], "pt184": [145, 342], "839599e": 145, "038000e": 145, "pt184m": [145, 342], "839619e": 145, "pt185": [145, 342], "849606e": 145, "pt185m": [145, 342], "849607e": 145, "pt186": [145, 342], "859594e": 145, "488000e": 145, "pt187": [145, 342], "869606e": 145, "pt188": [145, 342], "879594e": 145, "778240e": 145, "pt189": [145, 342], "889608e": 145, "913200e": 145, "pt189m": [145, 342], "889610e": 145, "pt190": [145, 342], "899599e": 145, "pt191": [145, 342], "909617e": 145, "pt191m": [145, 342], "909618e": 145, "pt192": [145, 342], "919610e": 145, "pt193": [145, 342], "pt193m": [145, 342], "929631e": 145, "pt194": [145, 342], "296700e": 145, "939627e": 145, "pt195": [145, 342], "383200e": 145, "949648e": 145, "pt195m": [145, 342], "949651e": 145, "465000e": 145, "pt196": [145, 342], "524200e": 145, "959650e": 145, "pt197": [145, 342], "969673e": 145, "160940e": 145, "pt197m": [145, 342], "969678e": 145, "pt198": [145, 342], "979679e": 145, "pt199": [145, 342], "989706e": 145, "pt199m": [145, 342], "989710e": 145, "pt200": [145, 342], "999714e": 145, "pt201": [145, 342], "009745e": 145, "pt202": [145, 342], "019757e": 145, "pt202m": [145, 342], "019777e": 145, "pt203": [145, 342], "029782e": 145, "pt204": [145, 342], "039801e": 145, "pt205": [145, 342], "049853e": 145, "pt206": [145, 342], "059888e": 145, "pt207": [145, 342], "069948e": 145, "pt208": [145, 342], "079988e": 145, "pt209": [145, 342], "209": [145, 231], "089974e": 145, "pt210": [145, 342], "210": [145, 231], "100025e": 145, "pt211": [145, 342], "211": 145, "109993e": 145, "pt212": [145, 342], "212": [145, 231], "120030e": 145, "pt213": [145, 342], "213": 145, "130082e": 145, "969666e": 145, "au168": [145, 342], "680016e": 145, "au169": [145, 342], "689981e": 145, "au170": [145, 342], "699961e": 145, "au170m": [145, 342], "699964e": 145, "au171": [145, 342], "709919e": 145, "au171m": [145, 342], "709922e": 145, "au172": [145, 342], "719900e": 145, "au172m": [145, 342], "719902e": 145, "au173": [145, 342], "729862e": 145, "au173m": [145, 342], "729865e": 145, "au174": [145, 342], "739848e": 145, "au175": [145, 342], "749813e": 145, "au175m": [145, 342], "749815e": 145, "au176": [145, 342], "759801e": 145, "au176m": [145, 342], "759802e": 145, "au177": [145, 342], "769769e": 145, "au177m": [145, 342], "769771e": 145, "193000e": 145, "au178": [145, 342], "779760e": 145, "au179": [145, 342], "789732e": 145, "au180": [145, 342], "799725e": 145, "au181": [145, 342], "809701e": 145, "au182": [145, 342], "819696e": 145, "au183": [145, 342], "829676e": 145, "au184": [145, 342], "839675e": 145, "au184m": [145, 342], "au185": [145, 342], "849658e": 145, "au185m": [145, 342], "au186": [145, 342], "au187": [145, 342], "au187m": [145, 342], "869647e": 145, "au188": [145, 342], "879653e": 145, "au189": [145, 342], "889639e": 145, "au189m": [145, 342], "889642e": 145, "au190": [145, 342], "899647e": 145, "au190m": [145, 342], "899649e": 145, "au191": [145, 342], "909637e": 145, "144800e": 145, "au191m": [145, 342], "909640e": 145, "au192": [145, 342], "919648e": 145, "778400e": 145, "au192m": [145, 342], "919650e": 145, "au192m2": [145, 342], "919653e": 145, "au193": [145, 342], "354000e": 145, "au193m": [145, 342], "929645e": 145, "au194": [145, 342], "939654e": 145, "368720e": 145, "au194m": [145, 342], "au194m2": [145, 342], "939659e": 145, "au195": [145, 342], "949650e": 145, "607126e": 145, "au195m": [145, 342], "949654e": 145, "au196": [145, 342], "959666e": 145, "328202e": 145, "au196m": [145, 342], "959667e": 145, "au196m2": [145, 342], "959672e": 145, "au197": [145, 342], "au197m": [145, 342], "969670e": 145, "au198": [145, 342], "979682e": 145, "327702e": 145, "au198m": [145, 342], "979691e": 145, "au199": [145, 342], "989688e": 145, "712096e": 145, "au199m": [145, 342], "989694e": 145, "au200": [145, 342], "999707e": 145, "au200m": [145, 342], "999718e": 145, "732000e": 145, "au201": [145, 342], "009717e": 145, "au202": [145, 342], "019738e": 145, "au203": [145, 342], "029752e": 145, "au204": [145, 342], "039777e": 145, "au205": [145, 342], "049799e": 145, "au205m": [145, 342], "049808e": 145, "au206": [145, 342], "059843e": 145, "au207": [145, 342], "069877e": 145, "au208": [145, 342], "079931e": 145, "au209": [145, 342], "089972e": 145, "au210": [145, 342], "100029e": 145, "au211": [145, 342], "au212": [145, 342], "au213": [145, 342], "au214": [145, 342], "214": [145, 231], "140120e": 145, "au215": [145, 342], "150174e": 145, "005992e": 145, "hg170": [145, 342], "700052e": 145, "hg171": [145, 342], "710038e": 145, "hg172": [145, 342], "719988e": 145, "hg173": [145, 342], "729972e": 145, "hg174": [145, 342], "739929e": 145, "hg175": [145, 342], "749914e": 145, "hg176": [145, 342], "759874e": 145, "hg177": [145, 342], "769863e": 145, "hg178": [145, 342], "779825e": 145, "665000e": 145, "hg179": [145, 342], "789818e": 145, "hg180": [145, 342], "799783e": 145, "hg181": [145, 342], "809778e": 145, "hg182": [145, 342], "819747e": 145, "hg183": [145, 342], "829744e": 145, "hg184": [145, 342], "839717e": 145, "hg185": [145, 342], "849719e": 145, "hg185m": [145, 342], "849720e": 145, "hg186": [145, 342], "859694e": 145, "hg187": [145, 342], "869698e": 145, "hg187m": [145, 342], "869699e": 145, "hg188": [145, 342], "879676e": 145, "hg189": [145, 342], "889682e": 145, "hg189m": [145, 342], "889683e": 145, "hg190": [145, 342], "899663e": 145, "hg191": [145, 342], "909672e": 145, "hg191m": [145, 342], "909673e": 145, "hg192": [145, 342], "919656e": 145, "hg193": [145, 342], "929667e": 145, "368000e": 145, "hg193m": [145, 342], "929668e": 145, "hg194": [145, 342], "410595e": 145, "hg195": [145, 342], "949667e": 145, "790800e": 145, "hg195m": [145, 342], "949669e": 145, "498000e": 145, "hg196": [145, 342], "959658e": 145, "hg197": [145, 342], "969672e": 145, "309040e": 145, "hg197m": [145, 342], "969675e": 145, "hg198": [145, 342], "979668e": 145, "hg199": [145, 342], "687000e": 145, "989683e": 145, "hg199m": [145, 342], "989689e": 145, "hg200": [145, 342], "999683e": 145, "hg201": [145, 342], "318000e": 145, "009703e": 145, "hg201m": [145, 342], "009711e": 145, "hg202": [145, 342], "986000e": 145, "019706e": 145, "hg203": [145, 342], "029729e": 145, "027104e": 145, "hg203m": [145, 342], "029739e": 145, "hg204": [145, 342], "039735e": 145, "hg205": [145, 342], "049761e": 145, "hg205m": [145, 342], "049777e": 145, "hg206": [145, 342], "059775e": 145, "hg207": [145, 342], "069826e": 145, "hg208": [145, 342], "079859e": 145, "hg209": [145, 342], "089910e": 145, "hg210": [145, 342], "099945e": 145, "hg211": [145, 342], "109997e": 145, "hg212": [145, 342], "120034e": 145, "hg213": [145, 342], "130091e": 145, "hg214": [145, 342], "140129e": 145, "hg215": [145, 342], "150189e": 145, "hg216": [145, 342], "216": [145, 231, 482], "160229e": 145, "hg217": [145, 342], "217": [145, 330, 463, 482], "170197e": 145, "hg218": [145, 342], "218": [145, 231, 482], "180248e": 145, "043833e": 145, "tl176": [145, 342], "760006e": 145, "tl177": [145, 342], "769964e": 145, "tl177m": [145, 342], "769973e": 145, "tl178": [145, 342], "779949e": 145, "tl179": [145, 342], "789911e": 145, "tl179m": [145, 342], "789920e": 145, "tl180": [145, 342], "799899e": 145, "tl181": [145, 342], "809863e": 145, "tl181m": [145, 342], "809872e": 145, "tl182": [145, 342], "819857e": 145, "tl183": [145, 342], "829822e": 145, "tl183m": [145, 342], "829829e": 145, "tl184": [145, 342], "839819e": 145, "tl185": [145, 342], "849788e": 145, "tl185m": [145, 342], "849793e": 145, "tl186": [145, 342], "859783e": 145, "tl186m": [145, 342], "tl186m2": [145, 342], "859787e": 145, "tl187": [145, 342], "869759e": 145, "tl187m": [145, 342], "869763e": 145, "tl188": [145, 342], "879760e": 145, "tl188m": [145, 342], "tl188m2": [145, 342], "879763e": 145, "tl189": [145, 342], "889736e": 145, "tl189m": [145, 342], "889739e": 145, "tl190": [145, 342], "899739e": 145, "tl190m": [145, 342], "899740e": 145, "tl191": [145, 342], "909718e": 145, "tl191m": [145, 342], "909722e": 145, "tl192": [145, 342], "919722e": 145, "tl192m": [145, 342], "919724e": 145, "tl193": [145, 342], "929707e": 145, "296000e": 145, "tl193m": [145, 342], "929711e": 145, "tl194": [145, 342], "939712e": 145, "tl194m": [145, 342], "939715e": 145, "tl195": [145, 342], "949698e": 145, "tl195m": [145, 342], "949703e": 145, "tl196": [145, 342], "959705e": 145, "624000e": 145, "tl196m": [145, 342], "959709e": 145, "tl197": [145, 342], "969696e": 145, "tl197m": [145, 342], "969702e": 145, "tl198": [145, 342], "979705e": 145, "tl198m": [145, 342], "979711e": 145, "tl198m2": [145, 342], "979713e": 145, "tl199": [145, 342], "989699e": 145, "671200e": 145, "tl199m": [145, 342], "989707e": 145, "tl200": [145, 342], "999710e": 145, "396000e": 145, "tl200m": [145, 342], "tl201": [145, 342], "009708e": 145, "628374e": 145, "tl201m": [145, 342], "009718e": 145, "tl202": [145, 342], "019721e": 145, "063584e": 145, "tl202m": [145, 342], "019731e": 145, "tl203": [145, 342], "952400e": 145, "029723e": 145, "tl204": [145, 342], "039739e": 145, "193799e": 145, "tl204m": [145, 342], "039750e": 145, "tl205": [145, 342], "047600e": 145, "049744e": 145, "tl206": [145, 342], "059761e": 145, "521200e": 145, "tl206m": [145, 342], "059789e": 145, "tl207": [145, 342], "069774e": 145, "tl207m": [145, 342], "069789e": 145, "tl208": [145, 342], "079820e": 145, "831800e": 145, "tl209": [145, 342], "089854e": 145, "297200e": 145, "tl210": [145, 342], "099901e": 145, "tl211": [145, 342], "109935e": 145, "tl212": [145, 342], "119982e": 145, "tl213": [145, 342], "130024e": 145, "tl214": [145, 342], "140077e": 145, "tl215": [145, 342], "150116e": 145, "tl216": [145, 342], "160172e": 145, "tl217": [145, 342], "170210e": 145, "tl218": [145, 342], "180263e": 145, "tl219": [145, 342], "219": [145, 203, 231, 482], "190218e": 145, "tl220": [145, 342], "220": [145, 482], "200254e": 145, "tl221": [145, 342], "210259e": 145, "072169e": 145, "pb178": [145, 342], "780038e": 145, "pb179": [145, 342], "790022e": 145, "pb180": [145, 342], "799979e": 145, "pb181": [145, 342], "809966e": 145, "pb182": [145, 342], "819927e": 145, "pb183": [145, 342], "829919e": 145, "pb183m": [145, 342], "829920e": 145, "pb184": [145, 342], "839881e": 145, "pb185": [145, 342], "849876e": 145, "pb185m": [145, 342], "849877e": 145, "pb186": [145, 342], "859842e": 145, "pb187": [145, 342], "869839e": 145, "pb187m": [145, 342], "869840e": 145, "pb188": [145, 342], "879809e": 145, "pb189": [145, 342], "889808e": 145, "pb189m": [145, 342], "889809e": 145, "pb189m2": [145, 342], "889835e": 145, "pb190": [145, 342], "899781e": 145, "pb191": [145, 342], "909783e": 145, "pb191m": [145, 342], "pb192": [145, 342], "919758e": 145, "pb193": [145, 342], "929762e": 145, "pb193m": [145, 342], "929763e": 145, "pb194": [145, 342], "939740e": 145, "pb195": [145, 342], "949745e": 145, "pb195m": [145, 342], "949748e": 145, "pb196": [145, 342], "959728e": 145, "pb197": [145, 342], "969734e": 145, "pb197m": [145, 342], "969738e": 145, "pb198": [145, 342], "979720e": 145, "pb199": [145, 342], "989729e": 145, "pb199m": [145, 342], "989734e": 145, "pb200": [145, 342], "pb201": [145, 342], "009729e": 145, "358800e": 145, "pb201m": [145, 342], "009736e": 145, "pb202": [145, 342], "019722e": 145, "656739e": 145, "pb202m": [145, 342], "019745e": 145, "274000e": 145, "pb203": [145, 342], "029734e": 145, "869120e": 145, "pb203m": [145, 342], "029743e": 145, "pb203m2": [145, 342], "029766e": 145, "pb204": [145, 342], "039730e": 145, "417970e": 145, "pb204m": [145, 342], "039754e": 145, "pb205": [145, 342], "049745e": 145, "pb205m": [145, 342], "049756e": 145, "pb206": [145, 342], "059745e": 145, "pb206m": [145, 342], "059768e": 145, "pb207": [145, 342], "069759e": 145, "pb207m": [145, 342], "069777e": 145, "pb208": [145, 342], "079767e": 145, "pb209": [145, 342], "089811e": 145, "164240e": 145, "pb210": [145, 342], "099842e": 145, "005638e": 145, "pb211": [145, 342], "109887e": 145, "166000e": 145, "pb212": [145, 342], "119919e": 145, "823920e": 145, "pb213": [145, 342], "129966e": 145, "pb214": [145, 342], "139998e": 145, "623600e": 145, "pb215": [145, 342], "150048e": 145, "pb216": [145, 342], "160090e": 145, "pb217": [145, 342], "170142e": 145, "pb218": [145, 342], "180177e": 145, "pb219": [145, 342], "190232e": 145, "pb220": [145, 342], "200268e": 145, "pb221": [145, 342], "pb222": [145, 342], "222": [145, 482], "220308e": 145, "pb223": [145, 342], "223": [145, 231, 482], "230345e": 145, "pb224": [145, 342], "224": [145, 231, 482], "240395e": 145, "pb225": [145, 342], "225": [145, 231, 482], "250371e": 145, "089804e": 145, "bi184": [145, 342], "840011e": 145, "bi184m": [145, 342], "840013e": 145, "bi185": [145, 342], "849976e": 145, "bi186": [145, 342], "859966e": 145, "bi186m": [145, 342], "859968e": 145, "bi187": [145, 342], "869932e": 145, "bi187m": [145, 342], "869933e": 145, "bi188": [145, 342], "879923e": 145, "bi188m": [145, 342], "879924e": 145, "bi189": [145, 342], "889892e": 145, "bi189m": [145, 342], "889894e": 145, "bi190": [145, 342], "899883e": 145, "bi190m": [145, 342], "899885e": 145, "bi191": [145, 342], "909858e": 145, "bi191m": [145, 342], "909860e": 145, "bi192": [145, 342], "919855e": 145, "bi192m": [145, 342], "919856e": 145, "bi193": [145, 342], "929830e": 145, "bi193m": [145, 342], "929833e": 145, "bi193m2": [145, 342], "929855e": 145, "bi194": [145, 342], "939828e": 145, "bi194m": [145, 342], "939830e": 145, "bi194m2": [145, 342], "bi195": [145, 342], "949807e": 145, "bi195m": [145, 342], "949811e": 145, "bi196": [145, 342], "959807e": 145, "bi196m": [145, 342], "959810e": 145, "bi196m2": [145, 342], "bi197": [145, 342], "969789e": 145, "598000e": 145, "bi197m": [145, 342], "969794e": 145, "024000e": 145, "bi198": [145, 342], "979792e": 145, "bi198m": [145, 342], "979795e": 145, "bi198m2": [145, 342], "979798e": 145, "bi199": [145, 342], "989777e": 145, "bi199m": [145, 342], "989784e": 145, "482000e": 145, "bi200": [145, 342], "999781e": 145, "bi200m": [145, 342], "999782e": 145, "bi200m2": [145, 342], "999786e": 145, "bi201": [145, 342], "009770e": 145, "bi201m": [145, 342], "009779e": 145, "bi202": [145, 342], "bi203": [145, 342], "029769e": 145, "233600e": 145, "bi203m": [145, 342], "029781e": 145, "bi204": [145, 342], "039778e": 145, "039200e": 145, "bi204m": [145, 342], "039787e": 145, "bi204m2": [145, 342], "039809e": 145, "bi205": [145, 342], "049774e": 145, "288224e": 145, "bi206": [145, 342], "059785e": 145, "393952e": 145, "bi206m": [145, 342], "059796e": 145, "bi207": [145, 342], "069785e": 145, "956210e": 145, "bi207m": [145, 342], "069807e": 145, "bi208": [145, 342], "079797e": 145, "161295e": 145, "bi208m": [145, 342], "079814e": 145, "bi209": [145, 342], "342942e": 145, "bi210": [145, 342], "099841e": 145, "330368e": 145, "bi210m": [145, 342], "099844e": 145, "593000e": 145, "bi211": [145, 342], "109873e": 145, "bi212": [145, 342], "119913e": 145, "633000e": 145, "bi212m": [145, 342], "119915e": 145, "bi212m2": [145, 342], "119929e": 145, "bi213": [145, 342], "129944e": 145, "735400e": 145, "bi214": [145, 342], "139987e": 145, "182600e": 145, "bi215": [145, 342], "150018e": 145, "bi215m": [145, 342], "150032e": 145, "bi216": [145, 342], "160063e": 145, "bi216m": [145, 342], "bi217": [145, 342], "170095e": 145, "bi218": [145, 342], "180143e": 145, "bi219": [145, 342], "190184e": 145, "bi220": [145, 342], "200234e": 145, "bi221": [145, 342], "210269e": 145, "bi222": [145, 342], "220321e": 145, "bi223": [145, 342], "230356e": 145, "bi224": [145, 342], "240405e": 145, "bi225": [145, 342], "bi226": [145, 342], "226": [145, 149, 482], "260403e": 145, "bi227": [145, 342], "227": [145, 231, 482], "270454e": 145, "po186": [145, 342], "860039e": 145, "po187": [145, 342], "870024e": 145, "po188": [145, 342], "879994e": 145, "po189": [145, 342], "889985e": 145, "po190": [145, 342], "899951e": 145, "po191": [145, 342], "909946e": 145, "po191m": [145, 342], "po192": [145, 342], "919913e": 145, "po193": [145, 342], "929910e": 145, "po193m": [145, 342], "929911e": 145, "po194": [145, 342], "939882e": 145, "po194m": [145, 342], "939907e": 145, "po195": [145, 342], "949881e": 145, "po195m": [145, 342], "949884e": 145, "po196": [145, 342], "959855e": 145, "po197": [145, 342], "969857e": 145, "po197m": [145, 342], "969859e": 145, "po198": [145, 342], "979834e": 145, "po199": [145, 342], "989837e": 145, "282000e": 145, "po199m": [145, 342], "989840e": 145, "po200": [145, 342], "999818e": 145, "906000e": 145, "po201": [145, 342], "009823e": 145, "po201m": [145, 342], "po202": [145, 342], "019808e": 145, "676000e": 145, "po203": [145, 342], "029814e": 145, "202000e": 145, "po203m": [145, 342], "029821e": 145, "po204": [145, 342], "039803e": 145, "266840e": 145, "po205": [145, 342], "049812e": 145, "264000e": 145, "po205m": [145, 342], "049821e": 145, "po205m2": [145, 342], "049828e": 145, "po206": [145, 342], "059805e": 145, "603200e": 145, "po207": [145, 342], "069816e": 145, "088000e": 145, "po207m": [145, 342], "069831e": 145, "po208": [145, 342], "079812e": 145, "145197e": 145, "po209": [145, 342], "089824e": 145, "913059e": 145, "po210": [145, 342], "099829e": 145, "195569e": 145, "po211": [145, 342], "109867e": 145, "po211m": [145, 342], "109882e": 145, "po212": [145, 342], "119889e": 145, "943000e": 145, "po212m": [145, 342], "119920e": 145, "po213": [145, 342], "129929e": 145, "po214": [145, 342], "139952e": 145, "634600e": 145, "po215": [145, 342], "149994e": 145, "po216": [145, 342], "160019e": 145, "po217": [145, 342], "170063e": 145, "po218": [145, 342], "180090e": 145, "858200e": 145, "po219": [145, 342], "190137e": 145, "po220": [145, 342], "200166e": 145, "po221": [145, 342], "210223e": 145, "po222": [145, 342], "220253e": 145, "po223": [145, 342], "230300e": 145, "po224": [145, 342], "240332e": 145, "po225": [145, 342], "250379e": 145, "po226": [145, 342], "260413e": 145, "po227": [145, 342], "270463e": 145, "po228": [145, 342], "228": [145, 482], "280447e": 145, "po229": [145, 342], "229": [145, 231, 482], "290481e": 145, "at191": [145, 342], "910039e": 145, "at191m": [145, 342], "at192": [145, 342], "920024e": 145, "at192m": [145, 342], "920025e": 145, "at193": [145, 342], "929998e": 145, "at193m": [145, 342], "at193m2": [145, 342], "929999e": 145, "at194": [145, 342], "939987e": 145, "at194m": [145, 342], "at195": [145, 342], "949963e": 145, "at195m": [145, 342], "at196": [145, 342], "959958e": 145, "at197": [145, 342], "969932e": 145, "at197m": [145, 342], "at198": [145, 342], "979928e": 145, "at198m": [145, 342], "979931e": 145, "at199": [145, 342], "989905e": 145, "at200": [145, 342], "999904e": 145, "at200m": [145, 342], "999905e": 145, "at200m2": [145, 342], "999907e": 145, "at201": [145, 342], "009884e": 145, "at202": [145, 342], "019886e": 145, "at202m": [145, 342], "019888e": 145, "at202m2": [145, 342], "019893e": 145, "at203": [145, 342], "029869e": 145, "at204": [145, 342], "039873e": 145, "at204m": [145, 342], "039879e": 145, "at205": [145, 342], "049861e": 145, "at206": [145, 342], "059867e": 145, "at207": [145, 342], "069858e": 145, "at208": [145, 342], "079866e": 145, "868000e": 145, "at209": [145, 342], "089862e": 145, "951200e": 145, "at210": [145, 342], "099871e": 145, "at211": [145, 342], "109875e": 145, "597040e": 145, "at212": [145, 342], "119907e": 145, "at212m": [145, 342], "119910e": 145, "at212m2": [145, 342], "119959e": 145, "at213": [145, 342], "at214": [145, 342], "139964e": 145, "at215": [145, 342], "149987e": 145, "at216": [145, 342], "160024e": 145, "at216m": [145, 342], "160029e": 145, "at217": [145, 342], "170047e": 145, "at218": [145, 342], "180087e": 145, "at219": [145, 342], "190112e": 145, "at220": [145, 342], "200154e": 145, "226000e": 145, "at221": [145, 342], "210180e": 145, "at222": [145, 342], "220223e": 145, "at223": [145, 342], "230252e": 145, "at224": [145, 342], "240302e": 145, "at225": [145, 342], "250332e": 145, "at226": [145, 342], "260375e": 145, "at227": [145, 342], "270408e": 145, "at228": [145, 342], "280454e": 145, "at229": [145, 342], "290487e": 145, "at230": [145, 342], "230": [145, 482], "300451e": 145, "at231": [145, 342], "231": [145, 231, 482], "310499e": 145, "rn193": [145, 342], "930093e": 145, "rn194": [145, 342], "940062e": 145, "rn195": [145, 342], "950054e": 145, "rn195m": [145, 342], "950055e": 145, "rn196": [145, 342], "960021e": 145, "rn197": [145, 342], "970016e": 145, "rn197m": [145, 342], "970018e": 145, "rn198": [145, 342], "979987e": 145, "rn199": [145, 342], "989984e": 145, "rn199m": [145, 342], "989986e": 145, "rn200": [145, 342], "999957e": 145, "rn201": [145, 342], "009956e": 145, "rn201m": [145, 342], "009960e": 145, "rn202": [145, 342], "019933e": 145, "rn203": [145, 342], "029934e": 145, "rn203m": [145, 342], "029938e": 145, "rn204": [145, 342], "039914e": 145, "rn205": [145, 342], "049917e": 145, "rn206": [145, 342], "059902e": 145, "402000e": 145, "rn207": [145, 342], "069907e": 145, "rn207m": [145, 342], "069917e": 145, "rn208": [145, 342], "079896e": 145, "461000e": 145, "rn209": [145, 342], "089904e": 145, "rn210": [145, 342], "099897e": 145, "rn211": [145, 342], "109906e": 145, "rn212": [145, 342], "434000e": 145, "rn213": [145, 342], "129939e": 145, "rn214": [145, 342], "139954e": 145, "rn215": [145, 342], "rn216": [145, 342], "160003e": 145, "rn217": [145, 342], "170039e": 145, "rn218": [145, 342], "180056e": 145, "375000e": 145, "rn219": [145, 342], "190095e": 145, "rn220": [145, 342], "200114e": 145, "rn221": [145, 342], "210155e": 145, "rn222": [145, 342], "220176e": 145, "303504e": 145, "rn223": [145, 342], "230218e": 145, "rn224": [145, 342], "240241e": 145, "rn225": [145, 342], "250284e": 145, "796000e": 145, "rn226": [145, 342], "260309e": 145, "rn227": [145, 342], "270354e": 145, "rn228": [145, 342], "280380e": 145, "rn229": [145, 342], "290431e": 145, "rn230": [145, 342], "300460e": 145, "rn231": [145, 342], "310506e": 145, "rn232": [145, 342], "320494e": 145, "rn233": [145, 342], "330526e": 145, "rn234": [145, 342], "340503e": 145, "fr197": [145, 342], "970109e": 145, "fr198": [145, 342], "980097e": 145, "fr198m": [145, 342], "fr199": [145, 342], "990073e": 145, "fr200": [145, 342], "000066e": 145, "fr201": [145, 342], "010039e": 145, "fr201m": [145, 342], "010040e": 145, "fr202": [145, 342], "020034e": 145, "fr202m": [145, 342], "020036e": 145, "fr203": [145, 342], "030009e": 145, "fr203m": [145, 342], "030013e": 145, "fr204": [145, 342], "040007e": 145, "fr204m": [145, 342], "fr204m2": [145, 342], "040010e": 145, "fr205": [145, 342], "049986e": 145, "fr205m": [145, 342], "049992e": 145, "fr206": [145, 342], "059987e": 145, "fr206m": [145, 342], "059989e": 145, "fr206m2": [145, 342], "059995e": 145, "fr207": [145, 342], "069969e": 145, "fr208": [145, 342], "079971e": 145, "fr209": [145, 342], "089960e": 145, "fr210": [145, 342], "099964e": 145, "fr211": [145, 342], "109955e": 145, "fr212": [145, 342], "119962e": 145, "fr213": [145, 342], "129962e": 145, "fr214": [145, 342], "139990e": 145, "fr214m": [145, 342], "139991e": 145, "fr215": [145, 342], "150003e": 145, "fr216": [145, 342], "160032e": 145, "fr217": [145, 342], "170046e": 145, "fr218": [145, 342], "180076e": 145, "fr218m": [145, 342], "180077e": 145, "fr219": [145, 342], "190093e": 145, "fr220": [145, 342], "200123e": 145, "fr221": [145, 342], "210143e": 145, "fr222": [145, 342], "fr223": [145, 342], "230197e": 145, "fr224": [145, 342], "240232e": 145, "998000e": 145, "fr225": [145, 342], "250256e": 145, "fr226": [145, 342], "260294e": 145, "fr227": [145, 342], "270318e": 145, "fr228": [145, 342], "280357e": 145, "fr229": [145, 342], "290385e": 145, "fr230": [145, 342], "300425e": 145, "fr231": [145, 342], "310454e": 145, "fr232": [145, 342], "320498e": 145, "fr233": [145, 342], "330533e": 145, "fr234": [145, 342], "fr235": [145, 342], "350550e": 145, "ra201": [145, 342], "010128e": 145, "ra202": [145, 342], "020099e": 145, "ra203": [145, 342], "030093e": 145, "ra203m": [145, 342], "030095e": 145, "ra204": [145, 342], "040065e": 145, "ra205": [145, 342], "050063e": 145, "ra205m": [145, 342], "050066e": 145, "ra206": [145, 342], "060038e": 145, "ra207": [145, 342], "070038e": 145, "ra207m": [145, 342], "070044e": 145, "ra208": [145, 342], "080018e": 145, "ra209": [145, 342], "090020e": 145, "ra210": [145, 342], "100005e": 145, "ra211": [145, 342], "110009e": 145, "ra212": [145, 342], "119998e": 145, "ra213": [145, 342], "130004e": 145, "638000e": 145, "ra213m": [145, 342], "130023e": 145, "ra214": [145, 342], "140001e": 145, "ra214m": [145, 342], "140021e": 145, "ra215": [145, 342], "150027e": 145, "ra216": [145, 342], "160035e": 145, "ra217": [145, 342], "ra218": [145, 342], "180071e": 145, "ra219": [145, 342], "190101e": 145, "ra219m": [145, 342], "ra220": [145, 342], "200110e": 145, "ra221": [145, 342], "210139e": 145, "ra222": [145, 342], "220154e": 145, "ra223": [145, 342], "230185e": 145, "ra224": [145, 342], "240202e": 145, "137962e": 145, "ra225": [145, 342], "250236e": 145, "287360e": 145, "ra226": [145, 342], "260254e": 145, "ra227": [145, 342], "270292e": 145, "ra228": [145, 342], "280311e": 145, "814523e": 145, "ra229": [145, 342], "290350e": 145, "ra230": [145, 342], "300371e": 145, "ra231": [145, 342], "310412e": 145, "ra232": [145, 342], "320436e": 145, "ra233": [145, 342], "330481e": 145, "ra234": [145, 342], "340507e": 145, "ra235": [145, 342], "350554e": 145, "ra236": [145, 342], "236": [145, 482], "360550e": 145, "ra237": [145, 342], "370583e": 145, "ra238": [145, 342], "380565e": 145, "ac205": [145, 342], "050151e": 145, "ac206": [145, 342], "060145e": 145, "ac206m": [145, 342], "060147e": 145, "ac207": [145, 342], "070119e": 145, "ac208": [145, 342], "080116e": 145, "ac208m": [145, 342], "080121e": 145, "ac209": [145, 342], "090095e": 145, "ac210": [145, 342], "100094e": 145, "ac211": [145, 342], "110077e": 145, "ac212": [145, 342], "120078e": 145, "ac213": [145, 342], "130066e": 145, "ac214": [145, 342], "140069e": 145, "ac215": [145, 342], "150065e": 145, "ac216": [145, 342], "160087e": 145, "ac216m": [145, 342], "160088e": 145, "ac217": [145, 342], "170093e": 145, "ac218": [145, 342], "180116e": 145, "ac219": [145, 342], "190124e": 145, "ac220": [145, 342], "200148e": 145, "ac221": [145, 342], "210156e": 145, "ac222": [145, 342], "220178e": 145, "ac222m": [145, 342], "220179e": 145, "ac223": [145, 342], "230191e": 145, "ac224": [145, 342], "240217e": 145, "000800e": 145, "ac225": [145, 342], "250232e": 145, "570880e": 145, "ac226": [145, 342], "260261e": 145, "057320e": 145, "ac227": [145, 342], "270278e": 145, "870574e": 145, "ac228": [145, 342], "280310e": 145, "214000e": 145, "ac229": [145, 342], "290330e": 145, "ac230": [145, 342], "300363e": 145, "ac231": [145, 342], "310386e": 145, "ac232": [145, 342], "320420e": 145, "ac233": [145, 342], "330445e": 145, "ac234": [145, 342], "340484e": 145, "ac235": [145, 342], "350512e": 145, "ac236": [145, 342], "360553e": 145, "ac237": [145, 342], "370585e": 145, "ac238": [145, 342], "ac239": [145, 342], "390608e": 145, "ac240": [145, 342], "400610e": 145, "320381e": 145, "th208": [145, 342], "080178e": 145, "th209": [145, 342], "090177e": 145, "th210": [145, 342], "100151e": 145, "th211": [145, 342], "110149e": 145, "th212": [145, 342], "120130e": 145, "th213": [145, 342], "130130e": 145, "th214": [145, 342], "140115e": 145, "th215": [145, 342], "150117e": 145, "th216": [145, 342], "160111e": 145, "th216m": [145, 342], "160133e": 145, "th217": [145, 342], "170131e": 145, "th217m": [145, 342], "170156e": 145, "th218": [145, 342], "180133e": 145, "th219": [145, 342], "190155e": 145, "th220": [145, 342], "200157e": 145, "th221": [145, 342], "210182e": 145, "th222": [145, 342], "220185e": 145, "th223": [145, 342], "230208e": 145, "th224": [145, 342], "240215e": 145, "th225": [145, 342], "250240e": 145, "th226": [145, 342], "260249e": 145, "834200e": 145, "th227": [145, 342], "270277e": 145, "615421e": 145, "th228": [145, 342], "280287e": 145, "032422e": 145, "th229": [145, 342], "290318e": 145, "486686e": 145, "th230": [145, 342], "300331e": 145, "379392e": 145, "th231": [145, 342], "310363e": [145, 482], "187200e": 145, "th232": [145, 342], "th233": [145, 342], "330416e": 145, "309800e": 145, "th234": [145, 342], "340436e": 145, "th235": [145, 342], "350475e": 145, "th236": [145, 342], "360499e": 145, "th237": [145, 342], "370539e": 145, "th238": [145, 342], "th239": [145, 342], "390610e": 145, "th240": [145, 342], "th241": [145, 342], "410641e": 145, "th242": [145, 342], "420629e": [145, 482], "310359e": 145, "pa211": [145, 342], "110229e": 145, "pa212": [145, 342], "120232e": 145, "pa213": [145, 342], "130211e": 145, "pa214": [145, 342], "140209e": 145, "pa215": [145, 342], "150192e": 145, "pa216": [145, 342], "160191e": 145, "pa217": [145, 342], "170183e": 145, "pa217m": [145, 342], "170203e": 145, "pa218": [145, 342], "180200e": 145, "pa218m": [145, 342], "180201e": 145, "pa219": [145, 342], "190199e": 145, "pa220": [145, 342], "200219e": 145, "pa221": [145, 342], "210219e": 145, "pa222": [145, 342], "220237e": 145, "pa223": [145, 342], "230240e": 145, "pa224": [145, 342], "240256e": 145, "pa225": [145, 342], "250261e": 145, "pa226": [145, 342], "260279e": 145, "pa227": [145, 342], "270288e": 145, "298000e": 145, "pa228": [145, 342], "pa229": [145, 342], "290321e": 145, "pa230": [145, 342], "300345e": 145, "503360e": 145, "pa231": [145, 342], "033805e": 145, "pa232": [145, 342], "320386e": 145, "pa233": [145, 342], "330402e": 145, "330640e": 145, "pa234": [145, 342], "340433e": 145, "412000e": 145, "pa234m": [145, 342], "340434e": 145, "954000e": 145, "pa235": [145, 342], "350454e": 145, "pa236": [145, 342], "360487e": 145, "pa237": [145, 342], "370511e": 145, "pa238": [145, 342], "380545e": 145, "pa239": [145, 342], "390573e": 145, "pa240": [145, 342], "pa241": [145, 342], "410644e": 145, "pa242": [145, 342], "pa243": [145, 342], "243": [145, 231, 482], "430670e": 145, "pa244": [145, 342], "244": [145, 482], "440679e": [145, 482], "u215": [145, 342, 482], "150262e": [145, 482], "u216": [145, 342, 482], "160240e": [145, 482], "u217": [145, 342, 482], "170244e": [145, 482], "u218": [145, 342, 482], "180235e": [145, 482], "u219": [145, 342, 482], "190249e": [145, 482], "u220": [145, 342, 482], "200247e": [145, 482], "u221": [145, 342, 482], "210264e": [145, 482], "u222": [145, 342, 482], "220261e": [145, 482], "u223": [145, 342, 482], "230277e": [145, 482], "u224": [145, 342, 482], "240276e": [145, 482], "u225": [145, 342, 482], "250294e": [145, 482], "u226": [145, 342, 482], "260293e": [145, 482], "u227": [145, 342, 482], "270312e": [145, 482], "u228": [145, 342, 482], "280314e": [145, 482], "u229": [145, 342, 482], "290335e": [145, 482], "u230": [145, 342, 482], "300339e": [145, 482], "747872e": 145, "u231": [145, 342, 482], "628800e": 145, "u232": [145, 342, 482], "320372e": [145, 482], "174272e": 145, "330396e": [145, 482], "023547e": 145, "340410e": [145, 482], "747225e": 145, "221608e": 145, "u235m": [145, 342, 482], "u236": [145, 292, 342, 478, 482, 493], "360456e": [145, 482], "u237": [145, 342, 482], "370487e": [145, 482], "833728e": 145, "927420e": [145, 482], "380508e": [145, 482], "409963e": 145, "390543e": [145, 482], "407000e": 145, "u240": [145, 342, 482], "400566e": [145, 482], "u241": [145, 342, 482], "410603e": [145, 482], "u242": [145, 342, 482], "u243": [145, 342, 482], "430674e": [145, 482], "u244": [145, 342, 482], "u245": [145, 342, 482], "245": [145, 231, 482], "450708e": [145, 482], "u246": [145, 342, 482], "246": [145, 482], "460702e": [145, 482], "np219": [145, 342], "190304e": 145, "np220": [145, 342], "200319e": 145, "np221": [145, 342], "210316e": 145, "np222": [145, 342], "220338e": 145, "np223": [145, 342], "230320e": 145, "np224": [145, 342], "240334e": 145, "np225": [145, 342], "250339e": 145, "np226": [145, 342], "260351e": 145, "np227": [145, 342], "270350e": 145, "np228": [145, 342], "280362e": 145, "np229": [145, 342], "290363e": 145, "np230": [145, 342], "300378e": 145, "np231": [145, 342], "310382e": 145, "np232": [145, 342], "320401e": 145, "np233": [145, 342], "330407e": 145, "np234": [145, 342], "340429e": 145, "801600e": 145, "np235": [145, 342], "350441e": 145, "422304e": 145, "np236": [145, 342], "360466e": 145, "828210e": 145, "np236m": [145, 342], "np237": [145, 153, 292, 342, 478], "370482e": 145, "765805e": 145, "np238": [145, 292, 342, 478], "380509e": 145, "813536e": 145, "np239": [145, 153, 342], "390529e": 145, "035584e": 145, "np240": [145, 342], "400562e": 145, "714000e": 145, "np240m": [145, 342], "np241": [145, 342], "410583e": 145, "np242": [145, 342], "420616e": 145, "np242m": [145, 342], "420617e": 145, "np243": [145, 342], "430643e": 145, "np244": [145, 342], "np245": [145, 342], "450709e": 145, "np246": [145, 342], "np247": [145, 342], "470742e": 145, "np248": [145, 342], "248": [145, 203], "480758e": 145, "pu221": [145, 342], "210376e": 145, "pu222": [145, 342], "220370e": 145, "pu223": [145, 342], "230377e": 145, "pu224": [145, 342], "240370e": 145, "pu225": [145, 342], "250382e": 145, "pu226": [145, 342], "260378e": 145, "pu227": [145, 342], "270392e": 145, "pu228": [145, 342], "280387e": 145, "pu229": [145, 342], "290402e": 145, "pu230": [145, 342], "300397e": 145, "pu231": [145, 342], "310411e": 145, "pu232": [145, 342], "320412e": 145, "pu232m": [145, 342], "pu233": [145, 342], "330430e": 145, "pu234": [145, 342], "168000e": 145, "pu235": [145, 342], "350453e": 145, "518000e": 145, "pu236": [145, 292, 342, 478], "360461e": 145, "018969e": 145, "pu237": [145, 342], "370484e": 145, "943296e": 145, "pu237m": [145, 342], "370486e": 145, "380496e": 145, "767542e": 145, "390522e": 145, "608375e": 145, "400538e": 145, "070450e": 145, "410569e": 145, "521792e": 145, "pu241m": [145, 342], "410592e": 145, "420587e": 145, "183385e": 145, "pu243": [145, 342], "430620e": 145, "784160e": 145, "pu244": [145, 342], "440642e": 145, "565578e": 145, "pu245": [145, 342], "450677e": 145, "pu246": [145, 342], "365760e": 145, "pu247": [145, 342], "470741e": 145, "961280e": 145, "pu248": [145, 342], "pu249": [145, 342], "249": [145, 203, 231], "490785e": 145, "pu250": [145, 342], "250": 145, "500784e": 145, "pu251": [145, 342], "251": [145, 231], "510823e": 145, "am223": [145, 342], "230452e": 145, "am224": [145, 342], "240468e": 145, "am225": [145, 342], "250448e": 145, "am226": [145, 342], "260456e": 145, "am227": [145, 342], "270448e": 145, "am228": [145, 342], "280455e": 145, "am229": [145, 342], "290447e": 145, "am230": [145, 342], "300456e": 145, "am231": [145, 342], "310456e": 145, "am232": [145, 342], "320466e": 145, "am233": [145, 342], "330463e": 145, "am234": [145, 342], "340478e": 145, "392000e": 145, "am235": [145, 342], "350479e": 145, "am236": [145, 342], "360496e": 145, "am236m": [145, 342], "am237": [145, 342], "370500e": 145, "416000e": 145, "am238": [145, 342], "380520e": 145, "am238m": [145, 342], "380547e": 145, "am239": [145, 342], "390530e": 145, "am240": [145, 342], "400553e": 145, "828800e": 145, "am240m": [145, 342], "400585e": 145, "410568e": 145, "365153e": 145, "am242g": [145, 342], "420595e": 145, "767200e": 145, "420596e": 145, "am242m2": [145, 342], "420619e": 145, "am243": [145, 292, 342, 478], "430614e": 145, "323852e": 145, "am244": [145, 342], "440643e": 145, "am244m": [145, 342], "440644e": 145, "am244m2": [145, 342], "440664e": 145, "am245": [145, 342], "450665e": 145, "am246": [145, 342], "460698e": 145, "am246m": [145, 342], "am246m2": [145, 342], "460719e": 145, "am247": [145, 342], "470721e": 145, "am248": [145, 342], "am249": [145, 342], "am250": [145, 342], "am251": [145, 342], "am252": [145, 342], "252": 145, "520849e": 145, "am253": [145, 342], "530869e": 145, "cm231": [145, 342], "310504e": 145, "cm232": [145, 342], "320496e": 145, "cm233": [145, 342], "330508e": 145, "cm234": [145, 342], "340502e": 145, "cm235": [145, 342], "350514e": 145, "cm236": [145, 342], "360514e": 145, "cm237": [145, 342], "370529e": 145, "cm238": [145, 342], "380530e": 145, "cm239": [145, 342], "390550e": 145, "cm240": [145, 342], "400555e": 145, "332800e": 145, "cm241": [145, 342], "410577e": 145, "833920e": 145, "cm242": [145, 292, 342, 478], "420588e": 145, "406592e": 145, "cm243": [145, 292, 342, 478], "183065e": 145, "cm244": [145, 292, 342, 478], "440628e": 145, "714959e": 145, "cm244m": [145, 342], "440639e": 145, "cm245": [145, 292, 342, 478], "450655e": 145, "658040e": 145, "cm246": [145, 292, 342, 478], "460672e": 145, "485069e": 145, "cm247": [145, 285, 292, 342, 478], "470704e": 145, "922880e": 145, "cm248": [145, 342], "480723e": 145, "098181e": 145, "cm249": [145, 342], "490760e": 145, "849000e": 145, "cm250": [145, 342], "619225e": 145, "cm251": [145, 342], "cm252": [145, 342], "cm253": [145, 342], "cm254": [145, 342], "254": 145, "540906e": 145, "cm255": [145, 342], "550910e": 145, "bk233": [145, 342], "330562e": 145, "bk234": [145, 342], "340569e": 145, "bk235": [145, 342], "350566e": 145, "bk236": [145, 342], "360573e": 145, "bk237": [145, 342], "370570e": 145, "bk238": [145, 342], "380583e": 145, "bk239": [145, 342], "390583e": 145, "bk240": [145, 342], "400598e": 145, "bk241": [145, 342], "410602e": 145, "bk242": [145, 342], "420620e": 145, "bk243": [145, 342], "430630e": 145, "bk244": [145, 342], "440652e": 145, "807200e": 145, "bk245": [145, 342], "450664e": 145, "276800e": 145, "bk246": [145, 342], "460687e": 145, "555200e": 145, "bk247": [145, 342], "470703e": 145, "354856e": 145, "bk248": [145, 342], "480731e": 145, "bk248m": [145, 342], "bk249": [145, 342], "490750e": 145, "bk250": [145, 342], "500783e": 145, "156320e": 145, "bk251": [145, 342], "510808e": 145, "336000e": 145, "bk252": [145, 342], "520843e": 145, "bk253": [145, 342], "bk254": [145, 342], "bk255": [145, 342], "bk256": [145, 342], "256": [145, 231, 319, 333], "560934e": 145, "bk257": [145, 342], "257": [145, 231], "570895e": 145, "cf236": [145, 342], "360524e": 145, "cf237": [145, 342], "370621e": 145, "cf238": [145, 342], "380614e": 145, "cf239": [145, 342], "390624e": 145, "cf240": [145, 342], "400623e": 145, "cf241": [145, 342], "410637e": 145, "cf242": [145, 342], "420637e": 145, "cf243": [145, 342], "430654e": 145, "cf244": [145, 342], "440660e": 145, "cf245": [145, 342], "450680e": 145, "cf246": [145, 342], "460688e": 145, "285200e": 145, "cf246m": [145, 342], "cf247": [145, 342], "470710e": 145, "119600e": 145, "cf248": [145, 342], "480722e": 145, "881440e": 145, "cf249": [145, 342], "490749e": 145, "107648e": 145, "cf250": [145, 342], "500764e": 145, "127646e": 145, "cf251": [145, 342], "510796e": 145, "833812e": 145, "cf252": [145, 342], "520816e": 145, "353118e": 145, "cf253": [145, 342], "530851e": 145, "538784e": 145, "cf254": [145, 342], "540873e": 145, "227200e": 145, "cf255": [145, 342], "cf256": [145, 342], "cf257": [145, 342], "cf258": [145, 342], "258": [145, 225], "580932e": 145, "cf259": [145, 342], "259": [145, 231], "590937e": 145, "es238": [145, 342], "380599e": 145, "es239": [145, 342], "390679e": 145, "es240": [145, 342], "400689e": 145, "es241": [145, 342], "410685e": 145, "es242": [145, 342], "420697e": 145, "es243": [145, 342], "430695e": 145, "es244": [145, 342], "440709e": 145, "es245": [145, 342], "450713e": 145, "es246": [145, 342], "460729e": 145, "es247": [145, 342], "470737e": 145, "es247m": [145, 342], "es248": [145, 342], "480755e": 145, "es249": [145, 342], "490764e": 145, "es250": [145, 342], "500786e": 145, "096000e": 145, "es250m": [145, 342], "500788e": 145, "es251": [145, 342], "510800e": 145, "es252": [145, 342], "520830e": 145, "075488e": 145, "es253": [145, 342], "530848e": 145, "768608e": 145, "es254": [145, 342], "540880e": 145, "382048e": 145, "es254m": [145, 342], "540881e": 145, "415000e": 145, "es255": [145, 342], "550903e": 145, "438720e": 145, "es256": [145, 342], "560937e": 145, "es256m": [145, 342], "560938e": 145, "es257": [145, 342], "570960e": 145, "652800e": 145, "es258": [145, 342], "580995e": 145, "es259": [145, 342], "es260": [145, 342], "260": 145, "600960e": 145, "es261": [145, 342], "261": [145, 231], "610921e": 145, "fm241": [145, 342], "410739e": 145, "fm242": [145, 342], "420734e": 145, "fm243": [145, 342], "430744e": 145, "fm244": [145, 342], "440741e": 145, "fm245": [145, 342], "450754e": 145, "fm246": [145, 342], "460753e": 145, "fm247": [145, 342], "470768e": 145, "fm247m": [145, 342], "470769e": 145, "fm248": [145, 342], "480772e": 145, "fm249": [145, 342], "490790e": 145, "fm250": [145, 342], "500795e": 145, "fm250m": [145, 342], "500808e": 145, "fm251": [145, 342], "510816e": 145, "fm252": [145, 342], "520825e": 145, "140400e": 145, "fm253": [145, 342], "530852e": 145, "fm254": [145, 342], "540869e": 145, "166400e": 145, "fm254m": [145, 342], "fm255": [145, 342], "550900e": 145, "225200e": 145, "fm256": [145, 342], "560918e": 145, "fm257": [145, 342], "570951e": 145, "683200e": 145, "fm258": [145, 342], "580971e": 145, "fm259": [145, 342], "591006e": 145, "fm260": [145, 342], "601027e": 145, "fm261": [145, 342], "fm262": [145, 342], "262": 145, "620958e": 145, "fm263": [145, 342], "263": 145, "630963e": 145, "md244": [145, 342], "440810e": 145, "md245": [145, 342], "450808e": 145, "md246": [145, 342], "460819e": 145, "md246m": [145, 342], "460820e": 145, "md247": [145, 342], "470816e": 145, "md247m": [145, 342], "470819e": 145, "md248": [145, 342], "480828e": 145, "md249": [145, 342], "490830e": 145, "md249m": [145, 342], "490831e": 145, "md250": [145, 342], "500844e": 145, "md251": [145, 342], "510848e": 145, "md252": [145, 342], "520866e": 145, "md253": [145, 342], "530873e": 145, "md254": [145, 342], "540897e": 145, "md254m": [145, 342], "md255": [145, 342], "550911e": 145, "md256": [145, 342], "560941e": 145, "662000e": 145, "md257": [145, 342], "570955e": 145, "987200e": 145, "md258": [145, 342], "580984e": 145, "md258m": [145, 342], "580985e": 145, "md259": [145, 342], "591005e": 145, "md260": [145, 342], "601037e": 145, "747520e": 145, "md261": [145, 342], "611057e": 145, "md262": [145, 342], "621089e": 145, "md263": [145, 342], "md264": [145, 342], "640986e": 145, "md265": [145, 342], "265": 145, "650947e": 145, "no248": [145, 342], "480866e": 145, "no249": [145, 342], "490878e": 145, "no250": [145, 342], "500875e": 145, "no250m": [145, 342], "500886e": 145, "no251": [145, 342], "510890e": 145, "no251m": [145, 342], "510891e": 145, "no252": [145, 342], "520890e": 145, "no252m": [145, 342], "520903e": 145, "no253": [145, 342], "530907e": 145, "no254": [145, 342], "540910e": 145, "no254m": [145, 342], "540923e": 145, "no254m2": [145, 342], "540944e": 145, "no255": [145, 342], "550932e": 145, "no256": [145, 342], "560943e": 145, "no257": [145, 342], "570969e": 145, "no258": [145, 342], "580982e": 145, "no259": [145, 342], "591010e": 145, "no260": [145, 342], "601026e": 145, "no261": [145, 342], "no262": [145, 342], "621073e": 145, "no263": [145, 342], "631106e": 145, "no264": [145, 342], "641123e": 145, "no265": [145, 342], "no266": [145, 342], "266": [145, 231], "660984e": 145, "no267": [145, 342], "267": 145, "670989e": 145, "lr249": [145, 342], "490834e": 145, "lr250": [145, 342], "500843e": 145, "lr251": [145, 342], "510944e": 145, "lr252": [145, 342], "520954e": 145, "lr253": [145, 342], "530952e": 145, "lr253m": [145, 342], "lr254": [145, 342], "540965e": 145, "lr255": [145, 342], "550967e": 145, "lr255m": [145, 342], "lr255m2": [145, 342], "550983e": 145, "lr256": [145, 342], "560986e": 145, "lr257": [145, 342], "570996e": 145, "lr258": [145, 342], "581018e": 145, "lr259": [145, 342], "591029e": 145, "lr260": [145, 342], "601055e": 145, "lr261": [145, 342], "611069e": 145, "lr262": [145, 342], "621096e": 145, "lr263": [145, 342], "631113e": 145, "lr264": [145, 342], "641140e": 145, "lr265": [145, 342], "651158e": 145, "lr266": [145, 342], "661193e": 145, "lr267": [145, 342], "lr268": [145, 342], "268": [145, 231], "681013e": 145, "lr269": [145, 342], "690973e": 145, "rf252": [145, 342], "rf253": [145, 342], "531007e": 145, "rf253m": [145, 342], "531009e": 145, "rf254": [145, 342], "541002e": 145, "rf254m": [145, 342], "541023e": 145, "rf255": [145, 342], "551013e": 145, "rf256": [145, 342], "561012e": 145, "rf257": [145, 342], "571030e": 145, "rf257m": [145, 342], "571031e": 145, "rf258": [145, 342], "581035e": 145, "rf259": [145, 342], "591056e": 145, "rf260": [145, 342], "601064e": 145, "rf261": [145, 342], "611088e": 145, "rf261m": [145, 342], "rf262": [145, 342], "621099e": 145, "rf263": [145, 342], "631125e": 145, "rf264": [145, 342], "rf265": [145, 342], "651167e": 145, "rf266": [145, 342], "661180e": 145, "rf267": [145, 342], "671215e": 145, "rf268": [145, 342], "681236e": 145, "rf269": [145, 342], "rf270": [145, 342], "270": [145, 231], "701010e": 145, "rf271": [145, 342], "271": [145, 478, 484], "711015e": 145, "db254": [145, 342], "db255": [145, 342], "551074e": 145, "db256": [145, 342], "561081e": 145, "db257": [145, 342], "571077e": 145, "db257m": [145, 342], "571081e": 145, "db258": [145, 342], "581093e": 145, "db258m": [145, 342], "581096e": 145, "db259": [145, 342], "591096e": 145, "db260": [145, 342], "601113e": 145, "db261": [145, 342], "611121e": 145, "db262": [145, 342], "621141e": 145, "db263": [145, 342], "631150e": 145, "db264": [145, 342], "641174e": 145, "db265": [145, 342], "651186e": 145, "db266": [145, 342], "661210e": 145, "db267": [145, 342], "671224e": 145, "db268": [145, 342], "681254e": 145, "db269": [145, 342], "691275e": 145, "db270": [145, 342], "701307e": 145, "db271": [145, 342], "db272": [145, 342], "272": 145, "721039e": 145, "db273": [145, 342], "730999e": 145, "sg258": [145, 342], "581132e": 145, "sg259": [145, 342], "591145e": 145, "sg260": [145, 342], "601144e": 145, "sg261": [145, 342], "611161e": 145, "sg262": [145, 342], "621164e": 145, "sg263": [145, 342], "631183e": 145, "sg264": [145, 342], "641189e": 145, "sg265": [145, 342], "651211e": 145, "sg265m": [145, 342], "651213e": 145, "sg266": [145, 342], "661221e": 145, "sg267": [145, 342], "671244e": 145, "sg268": [145, 342], "681256e": 145, "sg269": [145, 342], "691288e": 145, "sg270": [145, 342], "701303e": 145, "sg271": [145, 342], "711335e": 145, "sg272": [145, 342], "721352e": 145, "sg273": [145, 342], "731382e": 145, "sg274": [145, 342], "274": [145, 203], "741036e": 145, "sg275": [145, 342], "275": [145, 231], "751041e": 145, "bh260": [145, 342], "601220e": 145, "bh261": [145, 342], "611217e": 145, "bh262": [145, 342], "621229e": 145, "bh262m": [145, 342], "621231e": 145, "bh263": [145, 342], "631230e": 145, "bh264": [145, 342], "641246e": 145, "bh265": [145, 342], "651251e": 145, "bh266": [145, 342], "661269e": 145, "bh267": [145, 342], "671277e": 145, "bh268": [145, 342], "681298e": 145, "bh269": [145, 342], "691307e": 145, "bh270": [145, 342], "701336e": 145, "bh271": [145, 342], "711352e": 145, "bh272": [145, 342], "721380e": 145, "bh273": [145, 342], "731396e": 145, "bh274": [145, 342], "741424e": 145, "bh275": [145, 342], "751442e": 145, "bh276": [145, 342], "276": [145, 231], "761467e": 145, "bh277": [145, 342], "277": [145, 231], "771488e": 145, "bh278": [145, 342], "278": 145, "781527e": 145, "hs263": [145, 342], "631286e": 145, "hs264": [145, 342], "641284e": 145, "hs265": [145, 342], "651301e": 145, "hs265m": [145, 342], "651304e": 145, "hs266": [145, 342], "661301e": 145, "hs266m": [145, 342], "661314e": 145, "hs267": [145, 342], "671318e": 145, "hs268": [145, 342], "681322e": 145, "hs269": [145, 342], "691341e": 145, "hs270": [145, 342], "701347e": 145, "hs271": [145, 342], "711377e": 145, "hs272": [145, 342], "721391e": 145, "hs273": [145, 342], "731420e": 145, "hs274": [145, 342], "741431e": 145, "hs275": [145, 342], "751460e": 145, "hs276": [145, 342], "761472e": 145, "hs277": [145, 342], "771498e": 145, "hs277m": [145, 342], "771499e": 145, "hs278": [145, 342], "781515e": 145, "hs279": [145, 342], "279": [145, 231], "791545e": 145, "hs280": [145, 342], "280": [145, 465, 466], "801562e": 145, "mt265": [145, 342], "651362e": 145, "mt266": [145, 342], "661373e": 145, "mt267": [145, 342], "671373e": 145, "mt268": [145, 342], "681387e": 145, "mt269": [145, 342], "691391e": 145, "mt270": [145, 342], "701407e": 145, "mt271": [145, 342], "711411e": 145, "mt272": [145, 342], "721437e": 145, "mt273": [145, 342], "731449e": 145, "mt274": [145, 342], "741475e": 145, "mt275": [145, 342], "751486e": 145, "mt276": [145, 342], "761512e": 145, "mt276m": [145, 342], "761514e": 145, "mt277": [145, 342], "771524e": 145, "mt278": [145, 342], "781548e": 145, "mt279": [145, 342], "791562e": 145, "mt280": [145, 342], "801584e": 145, "mt281": [145, 342], "281": [145, 203], "811601e": 145, "mt282": [145, 342], "282": [145, 231], "821630e": 145, "ds267": [145, 342], "671443e": 145, "ds268": [145, 342], "681438e": 145, "ds269": [145, 342], "691451e": 145, "ds270": [145, 342], "701447e": 145, "ds270m": [145, 342], "701459e": 145, "ds271": [145, 342], "711461e": 145, "ds271m": [145, 342], "ds272": [145, 342], "721463e": 145, "ds273": [145, 342], "731489e": 145, "ds274": [145, 342], "741495e": 145, "ds275": [145, 342], "751522e": 145, "ds276": [145, 342], "761530e": 145, "ds277": [145, 342], "771556e": 145, "ds278": [145, 342], "781565e": 145, "ds279": [145, 342], "791589e": 145, "ds280": [145, 342], "801598e": 145, "ds281": [145, 342], "811621e": 145, "ds282": [145, 342], "821624e": 145, "ds283": [145, 342], "283": 145, "831653e": 145, "ds284": [145, 342], "284": [145, 231], "841669e": 145, "rg272": [145, 342], "721536e": 145, "rg273": [145, 342], "731537e": 145, "rg274": [145, 342], "741557e": 145, "rg275": [145, 342], "751561e": 145, "rg276": [145, 342], "761585e": 145, "rg277": [145, 342], "771595e": 145, "rg278": [145, 342], "781616e": 145, "rg279": [145, 342], "791625e": 145, "rg280": [145, 342], "801645e": 145, "rg281": [145, 342], "811654e": 145, "rg282": [145, 342], "821675e": 145, "rg283": [145, 342], "831684e": 145, "rg284": [145, 342], "841696e": 145, "rg285": [145, 342], "285": 145, "851712e": 145, "rg286": [145, 342], "286": 145, "861740e": 145, "cn276": [145, 342], "761590e": 145, "cn277": [145, 342], "771639e": 145, "cn278": [145, 342], "781643e": 145, "cn279": [145, 342], "791665e": 145, "cn280": [145, 342], "801670e": 145, "cn281": [145, 342], "811693e": 145, "cn282": [145, 342], "821698e": 145, "cn283": [145, 342], "831718e": 145, "cn284": [145, 342], "841724e": 145, "cn285": [145, 342], "851741e": 145, "cn286": [145, 342], "861742e": 145, "cn287": [145, 342], "287": [145, 231], "871769e": 145, "cn288": [145, 342], "288": [145, 203, 231], "881785e": 145, "nh278": [145, 342], "781687e": 145, "nh279": [145, 342], "791694e": 145, "nh280": [145, 342], "801704e": 145, "nh281": [145, 342], "811707e": 145, "nh282": [145, 342], "821723e": 145, "nh283": [145, 342], "831765e": 145, "nh284": [145, 342], "841781e": 145, "nh285": [145, 342], "851787e": 145, "nh286": [145, 342], "861805e": 145, "nh287": [145, 342], "871810e": 145, "nh288": [145, 342], "881816e": 145, "nh289": [145, 342], "289": [145, 203, 231], "891828e": 145, "nh290": [145, 342], "290": 145, "901856e": 145, "fl284": [145, 342], "841774e": 145, "fl285": [145, 342], "851837e": 145, "fl286": [145, 342], "861839e": 145, "fl287": [145, 342], "871856e": 145, "fl288": [145, 342], "881857e": 145, "fl289": [145, 342], "891873e": 145, "fl290": [145, 342], "901859e": 145, "fl291": [145, 342], "291": [145, 231], "911886e": 145, "mc287": [145, 342], "871912e": 145, "mc288": [145, 342], "881925e": 145, "mc289": [145, 342], "891927e": 145, "mc290": [145, 342], "901941e": 145, "mc291": [145, 342], "911944e": 145, "mc292": [145, 342], "292": 145, "921945e": 145, "lv289": [145, 342], "891989e": 145, "lv290": [145, 342], "901986e": 145, "lv291": [145, 342], "912000e": 145, "lv292": [145, 342], "921998e": 145, "lv293": [145, 342], "931994e": 145, "ts291": [145, 342], "912066e": 145, "ts292": [145, 342], "922075e": 145, "ts293": [145, 342], "932043e": 145, "ts294": [145, 342], "942064e": 145, "og293": [145, 342], "932147e": 145, "og294": [145, 342], "942103e": 145, "og295": [145, 342], "295": [145, 231], "952123e": 145, "dump1": [145, 292, 342, 478], "dump2": [145, 292, 342, 478], "lregn": [145, 342], "lfp35": [145, 233, 235, 292, 342, 478], "332730e": 145, "lfp38": [145, 153, 233, 292, 342, 478], "357800e": 145, "lfp39": [145, 233, 235, 292, 342, 478], "368980e": 145, "lfp40": [145, 233, 292, 342, 478], "lfp41": [145, 233, 292, 342, 478], "388120e": 145, "npu239": 145, "decaytyp": 145, "dectyp": 145, "sf": [145, 153], "identif": [145, 164, 173], "endf": [145, 152, 174, 233, 285], "vii": [145, 152, 174], "fissl": 145, "mcc2id": 145, "mcc3id": 145, "nucleon": 145, "excit": [145, 480, 485], "pad": [145, 240, 312, 399, 475, 491, 497], "nusf": [145, 153, 482], "answer": [145, 196, 328, 408, 468, 469, 475, 478, 482], "card": [145, 189, 244, 245, 391, 446, 450, 467, 472, 486], "isomer": 145, "94239": [145, 447], "6000": [145, 447], "eg": [145, 190, 302], "129m": 145, "njoi": [145, 233], "lightest": 145, "9228": 145, "9237": 145, "92000": 145, "Not": [145, 189, 229, 302, 323, 387, 390, 489, 499], "nat": 145, "placehold": [145, 275, 350, 388, 484], "chain": [145, 149, 153, 209, 226, 233, 285, 302, 321, 327, 355, 387, 399, 406, 465, 469, 476, 493, 494, 497], "truncat": [145, 387, 476], "lump": [145, 153, 228, 233, 235, 237, 238, 245, 299, 302, 465, 472, 476, 497], "fissionproduct": [145, 233, 456, 463, 464, 478, 501], "expend": 145, "numberdensitydict": 145, "activenuclid": [145, 245, 338, 342], "march": [145, 434, 494], "smallest": [145, 279, 296, 305, 400], "orderedset": 145, "lambda": [145, 302, 394, 399, 404, 456, 483, 491], "nn": [145, 499], "isomers90": 145, "isom": [145, 152], "mo2n": 145, "nb2n": 145, "zr2n": 145, "0107358968": 145, "am4c": 145, "newlabel": 145, "burnchainstream": [145, 465], "twice": [145, 327, 476, 484], "rebuild": 145, "orphan": 145, "mid": [145, 361], "burnchain": 145, "believ": [145, 469], "henc": [145, 299, 436], "ecosystem": [145, 273, 433, 435, 440, 441, 469, 481], "test_elements_elementbulkproperti": [146, 147], "test_element_elementbynamereturnsel": [146, 147], "test_element_elementbyzreturnsel": [146, 147], "test_element_elementbysymbolreturnsel": [146, 147], "test_element_addexistingelementfail": [146, 147], "test_element_addedelementappearsinelementlist": [146, 147], "test_element_getnatrualisotpicsonlyretrievesabundacegt0": [146, 147], "test_element_isnaturallyoccur": [146, 147], "test_abundancesaddtoon": [146, 147], "test_isheavymet": [146, 147], "test_nucdir_getnameforolddashednam": [146, 148], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclid": [146, 148], "test_nucdir_getnuclidesfromforbadnam": [146, 148], "test_getdisplacementenergi": [146, 148], "test_nucbases_fromnamebadnameraisesexcept": [146, 149], "test_nucbase_allabundancesaddtoon": [146, 149], "test_nucbases_alllabelsareuniqu": [146, 149], "test_nucbases_negativezraisesexcept": [146, 149], "test_nucbases_z295raisesexcept": [146, 149], "test_nucbases_mc2element": [146, 149], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail": [146, 149], "test_naturalnuclidebase_getnatrualisotp": [146, 149], "test_nucbases_singlefailswithmultiplematch": [146, 149], "test_nucbases_singlefailswithnomatch": [146, 149], "test_nucbases_singleisprettyspecif": [146, 149], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotop": [146, 149], "test_nucbases_labelandnamecollsionsareforsamenuclid": [146, 149], "test_nucbases_imposeburnchaindecaybulkstatist": [146, 149], "test_nucbases_imposeburnchaintransmutationbulkstatist": [146, 149], "test_nucbases_imposeburn_nusf": [146, 149], "test_nucbases_databasenamesstartwith_n": [146, 149], "test_nucbases_alldatabasenamesareuniqu": [146, 149], "test_nucbases_am242m": [146, 149], "test_nucbases_isheavymet": [146, 149], "test_getdecai": [146, 149], "test_getendfmatnum": [146, 149], "test_nonmc2nuclid": [146, 149], "test_kryptondecayconst": [146, 149], "test_curiedefinitionwithra226": [146, 149], "test_loadmcc2data": [146, 149], "test_loadmcc3data": [146, 149], "test_aaazzzsnamegener": [146, 149], "test_graphiteonreactor": [146, 150], "test_endf8compound": [146, 150], "test_endf8elementincompound": [146, 150], "test_endf8isotop": [146, 150], "test_acecompound": [146, 150], "test_aceelementincompound": [146, 150], "test_aceisotop": [146, 150], "test_failonmultipl": [146, 150], "test_transmutation_validreactiontyp": [146, 151], "test_transmutation_productparticl": [146, 151], "test_transmutation_invalidreactiontyp": [146, 151], "test_decaymode_validreactiontyp": [146, 151], "test_decaymode_invalidreactiontyp": [146, 151], "ripl": [147, 471, 472], "debat": 147, "yeah": [147, 202], "pseudo": [147, 437, 472, 499], "branch": [149, 153, 209, 247, 433, 465, 472, 476, 495, 496, 497], "3e": [149, 455], "threshold": [149, 231], "ternari": [149, 339], "ci": [149, 302, 447, 472], "988": 149, "mcc": [149, 163, 476], "tsl": [150, 152], "armiobj": [150, 245], "conceptu": [150, 245, 299, 349, 469, 493], "tslbynuclidebas": 150, "subject": [150, 152, 273, 440, 469], "tslinfo": 150, "nucbas": 150, "acelabel": [150, 152], "awar": [152, 194, 304, 469, 476], "characterist": [152, 330], "significantli": [152, 155, 302, 434, 493], "molecul": [152, 302], "beta": [152, 153, 159, 225, 465, 476, 489, 491, 496, 497], "solver": [152, 153, 159, 163, 165, 193, 233, 239, 240, 245, 273, 318, 448, 456, 465, 475, 476, 480, 484, 485, 493, 496, 497], "parson": 152, "ur": 152, "25096": 152, "lanl": 152, "pdf_file": 152, "classif": 152, "beo": 152, "crystallin": 152, "porou": [152, 225], "para": 152, "ortho": 152, "ch4": 152, "sio2": 152, "benzen": 152, "iii": 152, "kernel": [152, 204, 228, 240, 245, 273, 282, 283, 400, 469, 472, 478, 479, 484, 493, 497, 500], "bynbandcompound": 152, "thousand": [152, 336, 352, 434, 469, 488, 489], "compoundnam": 152, "endf8label": 152, "whose": [152, 279, 304, 330, 387, 399], "methan": 152, "endf8": 152, "rebuilt": 152, "burnchainfilenam": [153, 497], "n2n": [153, 177, 186, 189, 240, 244, 245, 252, 302, 489], "ngamma": [153, 252, 404, 460, 465], "45000e": 153, "halflifeinsecond": 153, "4099935680e": 153, "gamma": [153, 155, 160, 161, 166, 180, 189, 190, 191, 226, 240, 244, 252, 279, 299, 302, 317, 318, 330, 333, 404, 460, 465, 472, 476, 489, 497], "low": [153, 228, 229, 274, 319, 387, 404, 456, 476, 478, 485, 488, 489, 491, 493], "explicitli": [153, 209, 233, 245, 273, 286, 319, 336, 437, 458, 459, 471, 480, 484, 493, 497], "matrix": [153, 156, 157, 159, 162, 163, 172, 180, 186, 189, 191, 252, 387, 452, 465, 466, 467, 476, 483, 486, 489, 499], "ill": 153, "exponenti": [153, 400, 465], "cram": 153, "adequ": [153, 440, 476], "solut": [153, 161, 193, 228, 229, 233, 303, 305, 333, 400, 493, 497], "intrins": [153, 468, 489, 491], "pusa": 153, "maria": 153, "jaakko": 153, "leppanen": 153, "2010": 153, "moler": 153, "cleve": 153, "charl": 153, "van": 153, "loan": 153, "nineteen": 153, "dubiou": 153, "siam": 153, "1978": 153, "836": 153, "datadict": 153, "productnuclid": [153, 465], "fallback": [153, 209, 374], "productparticl": 153, "outgo": [153, 165, 179, 193, 209, 280, 290, 297, 298, 301, 323, 326, 328, 329, 336, 341, 346, 426, 494], "particl": [153, 489, 497], "scale": [153, 157, 279, 285, 302, 306, 323, 391, 404, 406, 481, 489, 502], "doubl": [153, 156, 282, 499], "librarynucnam": 153, "daughter": [153, 476, 491], "circuit": [153, 332, 333], "shorter": [153, 367, 435, 441, 485], "nalph": [153, 252, 404, 460, 465], "deuteron": 153, "triton": 153, "nt": [153, 252, 497], "bmd": [153, 465], "bpd": [153, 465], "electron": [153, 476], "ec": [153, 457], "xsid": [154, 190, 228, 229, 258, 476], "isotx": [154, 155, 157, 159, 177, 184, 189, 190, 191, 230, 244, 245, 250, 252, 279, 299, 302, 336, 404, 452, 455, 461, 466, 467, 471, 472, 476, 486, 497], "compx": [154, 155, 164, 172, 184, 190], "gamiso": [154, 155, 163, 175, 190, 191, 471, 472, 476], "cycle0": 154, "pmatrx": [154, 155, 180, 189, 190, 191, 471, 472, 476], "implicit_int": [154, 155, 156], "iorecord": [154, 155, 156], "binaryrecordread": [154, 155, 156], "binaryrecordwrit": [154, 155, 156], "asciirecordread": [154, 155, 156], "asciirecordwrit": [154, 155, 156], "datacontain": [154, 155, 156, 158, 162, 164, 165, 167, 168, 169], "streamwithdatacontain": [154, 155, 156, 158, 162, 164, 165, 167, 168, 169], "getblockbandwidth": [154, 155, 156], "compxsregion": [154, 155, 157], "dif3d": [154, 155, 157, 159, 160, 161, 163, 164, 165, 168, 173, 176, 178, 181, 189, 193, 210, 275, 279, 306, 318, 321, 329, 404, 434, 468, 475, 476, 484, 489, 493], "dif3ddata": [154, 155, 158], "dif3dstream": [154, 155, 158], "dlayx": [154, 155, 476], "delayedneutrondata": [154, 155, 159], "readbinari": [154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 190, 404, 455, 460, 461], "readascii": [154, 155, 156, 159, 166, 387, 388], "writebinari": [154, 155, 156, 157, 159, 160, 162, 163, 166, 167, 168, 169], "writeascii": [154, 155, 156, 159, 165, 166, 169, 387, 388], "fixsrc": [154, 155, 404, 497], "comparenuclidex": [154, 155, 161, 163, 166], "adddummynuclidestolibrari": [154, 155, 161, 163, 166], "geodst": [154, 155, 165, 167, 176, 279, 336, 472], "geodstdata": [154, 155, 162], "geodststream": [154, 155, 162], "compareset": [154, 155, 163], "labelsdata": [154, 155, 164], "labelsstream": [154, 155, 164], "nhflux": [154, 155, 168, 179, 472], "nhfluxstream": [154, 155, 165], "nafluxstream": [154, 155, 165], "nhfluxstreamvari": [154, 155, 165], "nafluxstreamvari": [154, 155, 165], "getnhfluxread": [154, 155, 165], "pwdint": [154, 155, 181], "pwdintdata": [154, 155, 167], "pwdintstream": [154, 155, 167], "rtflux": [154, 155, 160, 182, 404], "rtfluxdata": [154, 155, 168, 404], "rtfluxstream": [154, 155, 168, 404], "atfluxstream": [154, 155, 168], "getfdfluxread": [154, 155, 168], "rzflux": [154, 155, 168, 183], "rzfluxdata": [154, 155, 169], "rzfluxstream": [154, 155, 169], "test_xscollect": [154, 185, 302], "testxscollect": [154, 185, 186], "mockblueprint": [154, 185, 186], "mockblock": [154, 185, 186, 302], "test_xslibrari": [154, 185], "tempfilemixin": [154, 185, 187], "testxslibrari": [154, 185, 187], "test_getisotxsfilesinworkingdirectori": [154, 185, 187], "pmatrx_merge_test": [154, 185, 187], "isotxs_merge_test": [154, 155, 170, 177, 185, 187], "gamiso_merge_test": [154, 185, 187], "combined_merge_test": [154, 185, 187], "test_xsnuclid": [154, 185], "nuclidetest": [154, 185, 188], "getdefaultx": [154, 189], "getabsorptionx": [154, 189], "gettotalscattermatrix": [154, 189], "collapsecrosssect": [154, 189], "createmacrosonblocklist": [154, 189], "createmacrosfrommicro": [154, 189], "gammaenergyupperbound": [154, 190], "neutrondoseconversionfactor": [154, 190], "gammadoseconversionfactor": [154, 190], "numgroup": [154, 157, 189, 190], "numgroupsgamma": [154, 190], "nuclidelabel": [154, 190], "resetscatterweight": [154, 190], "getscatterweight": [154, 190], "purgefissionproduct": [154, 190], "regionlabel": [154, 190], "updatebasenuclid": [154, 191], "getmicrox": [154, 188, 191], "getx": [154, 155, 157, 191], "buildnormalizedscattercolumn": [154, 191], "tran": [154, 191, 465], "late": 155, "1960": [155, 469], "recogn": [155, 273, 469], "establish": [155, 304, 392, 393, 440, 469], "committe": 155, "coordin": [155, 165, 188, 204, 209, 233, 240, 275, 279, 284, 302, 306, 307, 315, 318, 321, 323, 326, 327, 328, 336, 339, 388, 398, 400, 428, 429, 449, 458, 476, 480, 485], "1977": 155, "iv": [155, 159, 160, 162, 163, 167, 168, 169, 286], "partisn": [155, 497], "multigroup": [155, 157, 159, 160, 161, 163, 166, 168, 169, 189, 203, 231, 240, 247, 279, 299, 302, 318, 336, 404, 455, 489, 496, 497], "grupx": 155, "brkox": 155, "bondarenko": 155, "russian": 155, "delai": [155, 157, 159, 174, 226, 229, 262, 476, 489, 491, 496, 497], "precursor": [155, 159, 226, 262, 476, 491, 496, 497], "isogx": 155, "ndxsrf": 155, "znatdn": 155, "subzon": 155, "sncon": 155, "ordin": [155, 406], "surfac": [155, 165, 179, 489], "scalar": [155, 336, 406, 483, 489, 499], "atflux": [155, 160, 168, 404], "adjoint": [155, 165, 168, 182, 226, 240, 279, 299, 302, 318, 336, 404, 489, 491, 497], "rcurnt": 155, "acurnt": 155, "raflux": 155, "angular": [155, 301, 329], "aaflux": 155, "avearg": 155, "densitii": 155, "interv": [155, 167, 400, 416], "dougla": 155, "dell": 155, "procedur": 155, "6941": 155, "lo": 155, "alamo": 155, "septemb": 155, "5369298": 155, "ascii": [155, 156, 159, 162, 165, 166, 167, 168, 169, 171, 172, 180, 182, 183, 209, 284, 344, 388, 408, 471, 476, 484, 493, 497], "confus": [155, 156, 285, 299, 302, 319, 440, 472, 493, 494], "rw": [155, 156], "talk": [155, 156, 496], "hide": [155, 432, 440, 471, 475], "record": [155, 156, 157, 158, 162, 164, 167, 350], "integ": [155, 156, 209, 210, 228, 275, 279, 302, 312, 319, 333, 384, 388, 396, 404, 434, 475, 489, 491, 499, 504], "byte": [155, 156, 302, 396, 399], "fortran": [155, 156, 400, 469], "unformat": 155, "sequenti": [155, 156, 427, 434], "gcc": [155, 478], "gnu": [155, 372], "onlinedoc": 155, "gfortran": 155, "pyne": 155, "terrapow": [155, 229, 401, 431, 436, 441, 468, 469, 470, 472, 484, 505], "author": 155, "era": 155, "inspir": 155, "prof": 155, "jame": 155, "paul": 155, "hollowai": 155, "ccccutil": 155, "2001": [155, 231], "test_cccc": [155, 170], "cccciostreamtest": [155, 170, 171], "ccccbinaryrecordtest": [155, 170, 171], "ccccasciirecordtest": [155, 170, 171], "test_compx": [155, 170], "testcompx": [155, 170, 172], "test_dif3d": [155, 170], "testdif3dsimplehexz": [155, 170, 173], "testdif3demptyrecord": [155, 170, 173], "test_dlayx": [155, 170], "dlayxstest": [155, 170, 174], "test_gamiso": [155, 170], "testgamiso": [155, 170, 175], "test_geodst": [155, 170], "testgeodst": [155, 170, 176, 181], "test_isotx": [155, 170], "testisotx": [155, 170, 177], "test_label": [155, 170, 338, 344], "testlabel": [155, 170, 178], "test_nhflux": [155, 170], "testnhflux": [155, 170, 179], "testnhfluxvari": [155, 170, 179], "test_pmatrx": [155, 170], "testpmatrxnuclid": [155, 170, 180], "testpmatrx": [155, 170, 180], "testproductionmatrix_fromwritten": [155, 170, 180], "testproductionmatrix_fromwrittenascii": [155, 170, 180], "test_pwdint": [155, 170], "test_rtflux": [155, 170], "testrtflux": [155, 170, 182], "test_rzflux": [155, 170], "testrzflux": [155, 170, 183], "binaryfilesequ": [155, 170, 183], "maxsiz": [155, 156], "rwint": [155, 156], "rwbool": [155, 156], "rwfloat": [155, 156], "rwdoubl": [155, 156], "rwstring": [155, 156], "rwlist": [155, 156], "rwmatrix": [155, 156], "rwdoublematrix": [155, 156], "rwintmatrix": [155, 156], "rwimplicitlytypedmap": [155, 156], "rwlong": [155, 156], "readwrit": [155, 156, 157, 158, 160, 162, 164, 165, 167, 168, 169], "createrecord": [155, 156], "initmetadata": [155, 157], "allocatex": [155, 157], "makescatteringmatric": [155, 157], "generateaveragedelayedneutronconst": [155, 159], "fluxmoment": [155, 165], "partialcurrentshex": [155, 165], "partialcurrentshex_ext": [155, 165], "partialcurrentsz": [155, 165], "groupflux": [155, 168, 169], "getenergygroupindex": [155, 168], "no_iter": [155, 169], "diverg": [155, 169, 210, 374, 495], "ijklmn": 156, "implicit": [156, 431, 484], "hasrecordboundari": 156, "signific": [156, 216, 299, 391, 469, 476], "enforc": [156, 273, 320, 333, 367, 372, 434, 497], "tradeoff": [156, 493], "comprehend": 156, "885": [156, 472], "seemingli": 156, "odd": [156, 165, 323, 326, 336, 440], "precis": [156, 276, 318, 333, 336, 427, 471, 472, 484, 493], "containedtyp": [156, 360, 367], "strlength": 156, "fortran77": 156, "roughli": [156, 302, 456, 484], "front": [156, 319, 496], "newlin": [156, 193], "concert": [156, 469], "streamwithdatastructur": 156, "filemod": [156, 158, 160, 162, 164, 165, 167, 168, 169], "io": [156, 302, 387, 394, 427, 431, 469], "wb": [156, 160], "nintj": 156, "nblok": 156, "bandwidth": 156, "jl": 156, "ju": 156, "WITH": 156, "THE": [156, 157], "AND": [156, 164, 279, 336], "min0": 156, "jup": 156, "matric": [156, 157, 172, 186, 189, 191, 252, 461], "spars": [156, 157, 172, 191, 371], "jh": 156, "jmax": 156, "band": 156, "derstin": [157, 329], "solv": [157, 159, 193, 217, 240, 305, 318, 327, 333, 398, 400, 465, 484, 497], "diffus": [157, 240, 252, 306, 318, 468, 469, 471, 472], "april": 157, "1984": [157, 231, 329], "illinoi": 157, "unt": 157, "ark": 157, "67531": 157, "metadc283553": 157, "octob": [157, 165], "north": 157, "texa": 157, "credit": 157, "govern": [157, 276, 469, 484], "depart": 157, "IF": [157, 164, 361], "FOR": [157, 164], "OF": [157, 469, 484], "decreas": [157, 307, 400, 485], "r0": 157, "macro": [157, 189, 252, 279, 485], "higherorderscatt": 157, "p1": [157, 400], "p5": 157, "compxs2": 157, "watt": [157, 167, 279, 491], "powerconvmult": 157, "integr": [157, 279, 296, 302, 318, 435, 440, 469, 476, 489, 491, 502], "absorpt": [157, 189, 240, 485, 489, 491], "similari": 157, "lib1": [157, 159, 161, 163, 166, 190], "lib2": [157, 159, 161, 163, 166, 190], "verbos": [157, 163, 189, 361, 384, 387, 483, 497, 501], "disregard": [157, 279], "regionnumb": 157, "filewidechi": 157, "reg00": 157, "reg01": 157, "reg02": 157, "regnn": 157, "r10": 157, "01147095": 157, "01006284": 157, "0065597": 157, "00660079": 157, "005587": 157, "08920149": 157, "13035864": 157, "16192732": 157, "sigma_": [157, 189, 279], "rem": 157, "cdot": [157, 240, 299], "reconstruct": [157, 179, 184, 191, 240, 489, 497, 499], "s_": 157, "rightarrow": 157, "segment": [157, 301, 468, 496], "xscatu_j": 157, "lbrace": [157, 502], "vert": 157, "nup": 157, "rbrace": [157, 502], "xscatj_j": 157, "xscatd_j": 157, "j_ndn": 157, "ndn": 157, "upscatt": 157, "downscatt": [157, 231], "scipi": [157, 172, 275, 400], "csc_matrix": [157, 172], "emiss": [159, 174], "spectra": [159, 203], "lattic": [159, 163, 189, 208, 214, 226, 228, 229, 240, 246, 247, 248, 250, 251, 257, 279, 284, 285, 289, 293, 297, 302, 305, 328, 388, 398, 434, 448, 472, 476, 484, 485, 495, 496, 497], "numenergygroup": 159, "numprecursorgroup": 159, "kinet": [159, 174, 202, 333, 489, 495], "precursordecayconst": 159, "character": [159, 247, 328, 329, 468], "delayemissionspectrum": [159, 174], "famili": [159, 279, 390, 496], "pxg": 159, "spectrum": [159, 174, 203, 228, 229, 240, 404, 465, 489], "aka": 159, "chi": [159, 189, 225, 252, 489], "delayneutronsperfiss": 159, "nubar": 159, "ordereddict": [159, 244, 281, 282, 283, 284, 285, 286], "contribut": [159, 189, 318, 433, 469, 470, 476, 505], "nuclidefamili": 159, "numfamili": 159, "numnuclid": 159, "neutronenergyupperbound": 159, "nuclidecontributionfract": 159, "perturbationtheori": 159, "perturbationtheoryinterfac": 159, "calculatebeta": 159, "had": [159, 209, 330, 395, 396, 427, 472, 485, 496], "took": 159, "paper": [159, 484], "tuttl": 159, "1974": 159, "insensit": [159, 302, 328], "twr": [159, 336, 468, 469], "beta_eff_nuclid": 159, "triangular": [160, 404], "photon": [160, 189, 240, 472, 476], "fixsrcarrai": 160, "intent": [160, 275, 469, 476], "preexist": 160, "v3": [161, 437, 476], "microscop": [161, 163, 189, 191, 228, 240, 252, 279, 336, 461, 476, 481], "gamsor": [161, 166], "smith": [161, 165], "lee": [161, 166], "hill": 161, "1343095": 161, "nuc1": [161, 163, 166], "nuc2": [161, 163, 166], "dummynuclid": [161, 163, 166], "coars": [162, 173, 210], "geo": 162, "xmesh": 162, "zmesh": 162, "geodst2": 162, "rememb": [162, 209, 302, 334, 427, 437, 440, 493], "analog": [162, 169, 193, 312, 434, 499], "istox": [162, 169, 191], "stand": [163, 290], "dragon": 163, "mylib": [163, 189], "fis5": 163, "micro": [163, 189, 244, 252, 460, 461], "scat": 163, "1st": 163, "elast": [163, 186, 189], "captureenergi": 163, "isotxsmetadata": 163, "ecapt": 163, "cacluat": 163, "closer": 163, "shown": [163, 274, 404, 437, 469, 475, 484, 493], "variant": [164, 165, 178, 194, 472], "transvers": 164, "nhts1": 164, "gt": [164, 478, 482, 483, 485], "OR": [164, 469, 484], "distanc": [164, 209, 279, 298, 305, 323, 326, 327, 328, 480, 484, 497], "ngts2": 164, "nset": [164, 201, 426], "nalia": 164, "rod": [164, 245, 275, 279, 280, 305, 318, 469, 472, 484, 488, 491], "nbank": 164, "bank": 164, "channel": [164, 489, 493], "llchn": 164, "llrod": 164, "mmesh": 164, "nvari": 164, "maxbrn": 164, "maxord": 164, "labeldata": 164, "labelstream": 164, "moment": [165, 168, 179, 310, 473], "partial": [165, 179, 240, 273, 279, 284, 326, 336, 350, 399, 497], "nhfluxdata": 165, "nfluxstream": 165, "numdatasetstoread": 165, "reader": [165, 168, 171, 172, 302, 361, 390, 427, 439, 440, 472], "v11": [165, 437], "rebu": [165, 469, 484], "2014": [165, 428], "palmiotti": 165, "lewi": 165, "carrico": 165, "variat": [165, 250, 273, 440], "anisotrop": 165, "multidimension": 165, "il": 165, "shemon": 165, "decad": [165, 469], "1127298": 165, "anlpub": 165, "78313": 165, "1d": [165, 228, 229, 257, 304, 305, 327, 333, 378, 472], "incomingpointerstoallassembli": 165, "geodstcoordmap": 165, "externalcurrentpoint": 165, "boundari": [165, 173, 240, 275, 284, 306, 318, 320, 321, 322, 325, 328, 336, 347, 427, 475, 484, 491, 497], "outgoingpcsymsecpoint": 165, "outpgo": 165, "sector": 165, "ingoingpcsymsecpoint": 165, "ingo": 165, "fluxmomentsal": 165, "jth": 165, "planar": [165, 491, 497], "pariti": 165, "partialcurrentshexal": 165, "partialcurrentshex_extal": 165, "adjac": [165, 179, 484], "partialcurrentszal": 165, "upward": [165, 472], "downward": 165, "naflux": 165, "setter": [165, 318, 330, 333, 367], "radial": [165, 240, 274, 275, 280, 301, 306, 307, 318, 319, 321, 329, 336, 476, 478, 480, 483, 485, 488, 489, 491, 492, 493], "conflict": [165, 469, 470, 480, 493, 505], "_readwrit": 165, "sassi": [165, 336, 489], "adjointflag": [165, 168], "variantflag": 165, "mc23": 166, "changho": 166, "jung": 166, "yeon": 166, "sang": 166, "yang": 166, "sik": 166, "2018": [166, 401], "1483949": 166, "pwr": 167, "pwdint2": 167, "rtflux2": 168, "adjointflux": 168, "ng": [168, 242, 244, 245, 252, 302, 489], "fd": [168, 279], "rzflux2": 169, "itp": 169, "test_initwithfilemod": [170, 171], "test_writeandreadsimpleintegerrecord": [170, 171], "test_writeandreadsimplefloatrecord": [170, 171], "test_writeandreadsimplestringrecord": [170, 171], "test_notreadinganentirerecordraisesexcept": [170, 171], "test_readingbeyondrecordraisesexcept": [170, 171], "binarywritepath": [170, 172], "asciiwritepath": [170, 172], "test_librarydata": [170, 172], "test_regionprimaryx": [170, 172], "test_totalscattermatrix": [170, 172], "test_binaryrw": [170, 172], "test_asciirw": [170, 172], "test_mergecompxslibrari": [170, 172], "test_getcompxsfilenam": [170, 172], "test__rwfileid": [170, 173], "test__rwfile1drecord": [170, 173], "test__rw2drecord": [170, 173], "test__rw3drecord": [170, 173], "test__rw4drecord": [170, 173], "test__rw5drecord": [170, 173], "test_writebinari": [170, 173], "test_empty4and5record": [170, 173], "test_decayconst": [170, 174], "test_chi_delai": [170, 174], "test_chi_delaysumsto1": [170, 174], "test_nudelai": [170, 174], "test_endfvii1decayconst": [170, 174], "test_endfvii1neutronsperfiss": [170, 174], "test_compar": [170, 174, 175], "test_writebinary_mcc3": [170, 174], "test_nuclid": [170, 174, 287, 290], "test_avg": [170, 174], "test_adddummynuclidestolibrari": [170, 175], "test_readgeodst": [170, 176, 181], "test_writegeodst": [170, 176, 181], "test_isotxsgeneraldata": [170, 177], "test_isotxsdetaileddata": [170, 177], "test_getscatteringweight": [170, 177], "test_getnuclid": [170, 177, 338, 342], "test_n2nisreactionbas": [170, 177], "test_getscatterweight": [170, 177], "test_getisotxsfilenam": [170, 177], "test_getgamisofilenam": [170, 177], "test_mergemccv2filesremovesthefilewidechi": [170, 177], "test_readlabelsbinari": [170, 178], "test_writelabelsascii": [170, 178], "test_fc": [170, 179], "test_fluxmo": [170, 179], "test_xypartialcurr": [170, 179], "test_zpartialcurr": [170, 179], "test_writ": [170, 179, 372, 384], "test_pmatrxnuclidedataaa": [170, 180], "test_pmatrxnuclidedataab": [170, 180], "test_nuclidedataisdiffer": [170, 180], "test_getpmatrxfilenam": [170, 180], "test_pmatrxgammaenergi": [170, 180], "test_pmatrxneutroneneri": [170, 180], "test_pmatrxnuclidenam": [170, 180], "test_pmatrxdoesnthavedoseconversionfactor": [170, 180], "test_writtenisidenticaltoorigin": [170, 180], "test_readrtflux": [170, 182], "test_writertflux": [170, 182], "test_rwascii": [170, 182, 183], "test_adjoint": [170, 182], "test_readrzflux": [170, 183], "test_writerzflux": [170, 183], "vector": [172, 189, 191, 235, 245, 252, 302, 328, 336, 391, 471, 488, 489, 491, 499], "indptr": 172, "correspons": 172, "verifi": [172, 173, 179, 196, 250, 266, 273, 302, 312, 316, 340, 347, 372, 456, 463, 464, 478, 483], "optimum": 173, "overrelax": 173, "rebal": 173, "delayx": 174, "nu": [174, 489], "nndc": 174, "bnl": 174, "robert": 174, "keepin": 174, "comment": [174, 433, 435, 441, 484, 485, 493, 496, 497], "subtract": [179, 279, 296, 327, 340, 341, 490, 493], "xy": [179, 240, 404, 429, 488, 489, 497], "fn1": 183, "fn2": 183, "bytewis": 183, "assist": [184, 355, 372, 469, 470, 471, 483, 505], "rewrit": 184, "scaffold": 184, "overal": [184, 194, 439, 440, 469, 478], "_metadata": 184, "nucld": 184, "test_generatetotalscatteringmatrix": [185, 186], "test_generatetotalscatteringmatrixwithmissingdata": [185, 186], "test_plotnucx": [185, 186], "test_createmacrosfrommicro": [185, 186], "test_collapsecrosssect": [185, 186], "getvolum": [185, 186, 274, 275, 279, 296, 299, 302, 453, 478], "getnuclidenumberdens": [185, 186, 189, 274, 296, 299, 302], "paramcollectiontyp": [185, 186, 274, 275, 276, 279, 296, 297, 298, 299, 301, 302, 334, 336, 338, 342], "setnumberdens": [185, 186, 274, 296, 299, 302, 469, 478], "testfilenam": [185, 187], "test_canpickleandunpickleisotx": [185, 187], "test_canpickleandunpicklegamiso": [185, 187], "test_canpickleandunpicklepmatrx": [185, 187], "test_comparework": [185, 187], "test_comparedifferentcomponentsofanxslibrari": [185, 187], "test_mergefailswithnonisotxsfil": [185, 187], "test_isotxslibraryattribut": [185, 187], "test_gamisolibraryattribut": [185, 187], "test_pmatrxlibraryattribut": [185, 187], "test_mergexslibrarieswithdifferentdatawork": [185, 187], "test_canwriteisotxsfromcombinedxslibrari": [185, 187], "test_canwritegamisofromcombinedxslibrari": [185, 187], "test_canwritepmatrxfromcombinedxslibrari": [185, 187], "test_getisotxsfileswithoutlibrarysuffix": [185, 187], "test_getisotxsfileswithlibrarysuffix": [185, 187], "assert_contains_onli": [185, 187], "geterrortyp": [185, 187], "getreadfunc": [185, 187], "getwritefunc": [185, 187], "getlibaapath": [185, 187], "getlibabpath": [185, 187], "getlibaa_abpath": [185, 187], "getliblumpedpath": [185, 187], "test_canremoveisotop": [185, 187], "test_cannotmergexslibswithdifferentgammagroupstructur": [185, 187], "test_mergeallxslibfil": [185, 187], "test_nuclide_createfromlabelfailsonbadnam": [185, 188], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict": [185, 188], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclid": [185, 188], "test_nuclide_newlabelsdontcausewarn": [185, 188], "test_nuclide_oldlabelscausewarn": [185, 188], "test_nuclide_nuclidebasemethodsshouldnotfail": [185, 188], "test_nuclide_isoaadetail": [185, 188], "test_nuclide_2dxsarrangementiscorrect": [185, 188], "test_nuclide_scatterxsarrangementiscorrect": [185, 188], "test_getmicrox": [185, 188], "test_getx": [185, 188], "inelast": [186, 189, 461], "collaps": [186, 189, 203, 233, 244], "blockparametercollect": [186, 279, 334], "shouldbether": 187, "shouldnotbether": 187, "nicer": 187, "testxslibrarymerg": 187, "microscopicxscollect": 189, "microlib": 189, "u235aa": [189, 190], "macrocollect": 189, "blockswithmacro": 189, "nuclidecollect": 189, "displai": [189, 302, 404, 427, 468], "crosssect": 189, "extrem": [189, 401, 440, 483], "efficaci": 189, "survei": 189, "bar": [189, 304, 396, 404, 406, 407, 414, 429, 439, 455, 475], "sigma": [189, 240, 279, 329, 489, 491], "sum_g": 189, "sigma_g": [189, 240], "phi_g": [189, 279], "onegroupx": 189, "relativetoler": [189, 405], "overlap": [189, 225, 279, 302, 305, 318, 340, 465, 469, 495], "attributestoignor": 189, "buildscattermatrix": [189, 252], "buildonlycool": [189, 252], "minimumnuclidedens": [189, 252, 472, 497], "creation": [189, 229, 238, 302, 318, 330, 334, 345, 346, 412, 439, 469, 472], "microlibrari": 189, "blocklist": [189, 228, 240, 247, 274, 280, 282, 336, 463], "libtyp": [189, 252], "gammax": [189, 252], "isotxslib": 189, "4b": 189, "hmg4c": 189, "chi_g": 189, "sum_": [189, 240, 279, 302, 502], "chi_": 189, "n_n": 189, "nu_": [189, 476], "sum_n": 189, "microsuffix": 189, "deposit": [189, 302, 489], "obtain": [189, 228, 244, 279, 302, 306, 334, 336, 360, 387, 469, 476, 484, 489, 502, 503], "bn": [189, 235, 240, 299, 302, 391, 478, 488, 489, 490], "getmicrosuffix": [189, 274, 279, 296, 299, 302], "energydepositionconst": 189, "e_": [189, 240], "generation_fiss": 189, "kappa_f": 189, "sigma_f": 189, "fissionenergyfactor": 189, "joul": [189, 302], "kappa_c": 189, "sigma_c": 189, "getnumberdens": [189, 232, 235, 274, 296, 299, 302, 447, 475, 478], "captureenergyfactor": 189, "constantnam": 189, "multconst": 189, "multlib": 189, "macrogroupconst": 189, "attributenam": 190, "veloc": [190, 247, 480, 489], "nuclabel": 190, "xslibrarysuffix": [190, 247, 248], "xslibfilenam": 190, "doppler": [190, 193, 216, 228, 247, 336, 345, 489, 491, 502], "isoaa": 190, "isoba": 190, "isoca": 190, "n1": 190, "isoab": 190, "n2": [190, 387], "isoda": 190, "mergegammalib": 190, "alternatedirectori": 190, "alphabet": [190, 228, 336, 349], "referencedummynuclid": 190, "_xslibrari": 190, "libisotx": 190, "dose": [190, 202, 240, 468, 469, 489, 491, 497], "scattermatrixkei": [190, 191], "elasticscatt": 190, "_buildscatterweight": 190, "purg": 190, "pu39aa": 191, "xscollectionkei": 191, "containerkei": 191, "homogregion": 191, "scatterweight": 191, "fromg": 191, "gx1": 191, "cannib": 191, "newli": [191, 273, 361, 389, 494], "scattermatrix": 191, "scattertypelabel": 191, "scattermatrix1": 191, "scattermatrix2": 191, "graphic": [191, 389, 468, 470, 480, 495, 496, 497, 505], "chosen": [192, 302, 434, 476, 480, 485, 494, 496], "introduc": [192, 226, 330, 382, 436, 472, 475, 476, 485, 491], "test_inspector": [192, 198], "testinspector": [192, 198, 199], "test_operatorsnapshot": [192, 198], "testoperatorsnapshot": [192, 198, 200], "testoperatorsnapshotsset": [192, 198, 200], "test_oper": [192, 198], "interfacea": [192, 198, 201], "interfaceb": [192, 198, 201], "interfacec": [192, 198, 201], "operatortest": [192, 198, 201], "cyclessettingstest": [192, 198, 201, 387, 407, 426], "testinterfaceandeventhead": [192, 198, 201], "maxburnstep": [192, 193], "steplength": [192, 193, 387, 504], "cyclelength": [192, 193, 330, 387, 426, 439, 483, 484, 485, 496, 497, 504], "powerfract": [192, 193, 387, 426, 496, 497], "availabilityfactor": [192, 193, 387, 426, 484, 485, 496, 497, 504], "cyclenam": [192, 193, 387], "ateol": [192, 193, 197], "initializeinterfac": [192, 193], "printinterfacesummari": [192, 193], "interactallinit": [192, 193], "interactallbol": [192, 193, 434], "interactallboc": [192, 193], "interactalleverynod": [192, 193], "interactalleoc": [192, 193], "interactalleol": [192, 193], "interactallcoupl": [192, 193], "interactallerror": [192, 193], "removeallinterfac": [192, 193], "removeinterfac": [192, 193], "interfaceisact": [192, 193], "reattach": [192, 193], "snapshotrequest": [192, 193], "setstatetodefault": [192, 193, 197], "couplingisact": [192, 193, 201], "workerquit": [192, 194], "collapseallstderr": [192, 194], "iscorrect": [192, 196], "no_act": [192, 196], "addqueri": [192, 196], "addquerybadlocationwilllikelyfail": [192, 196], "addquerycurrentsettingmaynotsupportfeatur": [192, 196], "plant": [193, 336, 468, 469, 476, 483, 497, 504], "q": [193, 341, 476, 480], "impl_evolving_state_0": 193, "has_dead_link": 193, "has_forbidden_dead_link": 193, "req_evolving_st": 193, "orchestr": 193, "piec": [193, 302, 434, 476, 478, 481, 493], "flow": [193, 202, 205, 226, 247, 270, 279, 333, 434, 469, 475, 480, 488, 489, 491, 493], "narr": [193, 442, 467, 486], "topic": [193, 427, 439, 495], "tier": 193, "intra": [193, 387], "durat": [193, 489, 497], "outag": [193, 205, 206, 209, 213, 406, 468, 475, 494, 497, 504], "oserror": 193, "unabl": 193, "ncycl": [193, 201, 387, 426, 484, 485, 496, 497], "mainoper": [193, 434], "interactionnam": 193, "statepointindex": 193, "grep": [193, 483], "leverag": [193, 469], "banner": 193, "excludedinterfacenam": 193, "tn": [193, 228], "couplediter": [193, 491], "impli": [193, 275, 336, 350, 382, 398, 469, 484, 485, 497], "loos": [193, 475, 476, 492], "lie": [193, 323], "reverseateol": 193, "question": [193, 196, 226, 302, 323, 328, 368, 403, 404, 406, 427, 433, 469, 475, 482, 493], "ephemer": [193, 240], "interfacenam": 193, "wasn": 193, "___": [193, 196, 470, 478, 483, 505], "opportun": [193, 336, 439], "weakref": 193, "network": [193, 204, 302, 468, 497], "updatemassfract": 193, "rerout": 193, "didn": 193, "evolv": [193, 469, 476], "subchannel": [194, 279, 469, 484, 496], "pool": [194, 209, 214, 276, 321, 336, 434, 464, 471, 472, 478, 485, 488, 493, 497], "hundr": [194, 361, 469], "speed": [194, 244, 336, 472, 493], "manyfold": 194, "smart": [194, 312, 399, 427], "optim": [194, 210, 244, 247, 276, 279, 301, 310, 336, 469, 483, 494, 497], "_mainoper": 194, "rank": [194, 437, 494], "instruct": [194, 437, 441, 470, 505], "understand": [194, 326, 333, 432, 436, 437, 439, 441, 469, 475, 476], "devis": 194, "stderr": [194, 350, 501], "arrang": [194, 286, 321, 434, 468, 469, 476, 493, 496], "suggest": [196, 330, 368, 431, 493], "rule": [196, 273, 320, 333, 334, 350, 368, 436, 440, 441, 475, 493], "dialogu": 196, "imposs": [196, 400, 440], "propos": [196, 202], "affirm": 196, "interplai": [196, 475], "correctionsmad": 196, "featur": [196, 272, 273, 280, 318, 330, 367, 396, 406, 411, 412, 431, 434, 436, 456, 465, 469, 471, 475, 480, 482, 484, 485, 496, 497, 499], "initiallambda": 196, "revert": [196, 302, 367, 493], "inspect": [196, 205, 219, 226, 270, 273, 476, 483], "versionthi": 196, "versionrequir": 196, "rx": [197, 242, 367, 465], "behav": [197, 305, 326, 332, 334, 336, 400, 475, 493], "chrolog": 197, "test_queri": [198, 199], "test_overwritesettingscorrectivequeri": [198, 199], "test_changeofc": [198, 199], "test_noncorrectivequeri": [198, 199], "test_callablecorrectioncheck": [198, 199], "test_assignc": [198, 199], "test_createqueryrevertbadpathtodefault": [198, 199], "test_correctcyclestozeroburnup": [198, 199], "test_checkforbothsimpleanddetailedcyclesinput": [198, 199], "test_ateol": [198, 200], "test_setstatetodefault": [198, 200, 201], "test_mainoper": [198, 200], "test_createinterfac": [198, 200], "test_createinterfacesdis": [198, 200], "test_getoperatorclassfromset": [198, 200], "test_addinterfacesubclasscollis": [198, 201], "test_checkcsconsist": [198, 201], "test_interfaceisact": [198, 201], "test_loadstateerror": [198, 201], "test_snapshotrequest": [198, 201], "test_couplingisact": [198, 201], "test_performtightcoupling_inact": [198, 201], "test_performtightcoupling_skip": [198, 201], "test_performtightcoupling_notconverg": [198, 201], "test_performtightcoupling_writedb": [198, 201], "test_performtightcoupling_nowritedb": [198, 201], "dbwriteforcoupl": [198, 201], "test_computetightcouplingconverg": [198, 201], "detailedcyclesset": [198, 201, 407, 426], "powerfractionssolut": [198, 201], "cyclenamessolut": [198, 201], "availabilityfactorssolut": [198, 201], "steplengthssolut": [198, 201], "cyclelengthssolut": [198, 201], "burnstepssolut": [198, 201], "maxburnstepssolut": [198, 201], "test_getpowerfract": [198, 201, 407, 426], "test_getcyclenam": [198, 201, 407, 426], "test_getavailabilityfactor": [198, 201, 407, 426], "test_getsteplength": [198, 201, 407, 426], "test_getcyclelength": [198, 201, 407, 426], "test_getburnstep": [198, 201, 407, 426], "test_getmaxburnstep": [198, 201, 407, 426], "test_expandcycleandtimenodeargs_empti": [198, 201], "test_expandcycleandtimenodeargs_onearg": [198, 201], "test_expandcycleandtimenodeargs_twoarg": [198, 201], "loadtestreactor": [201, 274, 338, 346, 447, 448, 449, 456, 464], "fakedirlist": 201, "fakecopi": 201, "conf_tight_coupl": 201, "_performtightcoupl": 201, "conf_cycles_skip_tight_coupling_interact": 201, "address": [201, 216, 280, 330, 435], "accour": 201, "WILL": [201, 310], "writedb": 201, "greater": [201, 296], "prescrib": [201, 304, 429, 485, 502], "previterkeff": 201, "curriterkeff": 201, "nmetadata": [201, 426], "1000000000": [201, 426, 484, 485], "r4": [201, 426, 437], "cyclenodeinfo": 201, "vast": [202, 475], "fairli": [202, 204, 485, 493], "ve": [202, 276, 469, 478, 480, 494], "reprocess": [202, 468], "accid": [202, 216, 469, 476], "drop": [202, 302, 367, 387, 399, 439, 476], "econom": [202, 434, 469, 504], "cost": [202, 440, 469, 476, 504], "estim": [202, 210, 489, 490], "stretch": 202, "supersourceterm": 202, "magwoodsbrain": 202, "And": [202, 205, 275, 328, 350, 432, 433, 437, 441, 480, 484], "ticket": [202, 433, 440], "began": 202, "matur": [202, 481], "assemblyrotationalgorithm": [202, 205, 213, 497], "bureducingassemblyrot": [202, 205, 206], "simpleassemblyrot": [202, 205, 206, 497], "fuelhandlerfactori": [202, 205, 478], "fuelhandlerinterfac": [202, 205, 209, 273], "fuelhandl": [202, 205, 206, 207, 208, 213, 273, 336, 374, 406, 434, 456, 464, 472, 478, 484, 494, 497], "hexassemblyfuelmgmtutil": [202, 205], "getoptimalassemblyorient": [202, 205, 210], "buildringschedul": [202, 205, 210], "buildconvergentringschedul": [202, 205, 210], "buildeqringschedul": [202, 205, 210], "getfuelcycleset": [202, 205, 211], "getfuelcyclesettingvalid": [202, 205, 211], "fuelperformanceopt": [202, 216, 217], "fuelperformanceexecut": [202, 216, 217], "getfuelperformanceparameterdefinit": [202, 216, 218], "fuelperformanceplugin": [202, 216, 219, 223], "definevalid": [202, 216, 220, 267, 271], "applyfueldisplac": [202, 216, 225], "gasconductivitycorrect": [202, 216, 225], "everynod": [202, 226, 247, 257, 434, 497], "firstcouplediter": [202, 226, 250, 257, 497], "fissionproductmodel": [202, 226, 279, 299, 302, 476, 478], "isotopicdeplet": [202, 226, 233, 283], "latticephys": [202, 226, 229], "const": [202, 226, 267], "crosssectiongroupmanag": [202, 214, 226, 229, 233, 257, 478], "getxstypenumberfromlabel": [202, 226, 228], "getxstypelabelfromnumb": [202, 226, 228], "blockcollect": [202, 226, 228, 472], "medianblockcollect": [202, 226, 228], "averageblockcollect": [202, 226, 228], "getblocknuclidetemperatureavgterm": [202, 226, 228], "cylindricalcomponentsaverageblockcollect": [202, 226, 228], "slabcomponentsaverageblockcollect": [202, 226, 228], "fluxweightedaverageblockcollect": [202, 226, 228], "blockcollectionfactori": [202, 226, 228], "crosssectionset": [202, 226], "xsgeometrytyp": [202, 226, 229], "xsset": [202, 226, 228, 229, 497], "xsmodelingopt": [202, 226, 229, 258], "serializexsset": [202, 226, 229], "xssettingdef": [202, 226, 229], "xssettingsvalid": [202, 226, 229], "diffisotx": [202, 226], "compareisotxslibrari": [202, 226, 230], "energygroup": [202, 203, 226, 404, 460], "getfastfluxgroupcutoff": [202, 226, 231], "getgroupstructur": [202, 226, 231, 460], "getgroupstructuretyp": [202, 226, 231], "group_structur": [202, 203, 226, 231], "macroxsgenerationinterfac": [202, 226, 261], "macroxsgener": [202, 226, 252], "getneutronicsparameterdefinit": [202, 226, 253], "insertneutronicsreport": [202, 226, 254], "insertneutronicsbolcont": [202, 226, 254], "neutronicsplot": [202, 226, 254, 439], "insertinitialcorefuelassem": [202, 226, 254], "generatelineplot": [202, 226, 254], "pd_plot": [202, 226, 254], "getneutronicssettingvalid": [202, 226, 255], "test_execut": [202, 216, 221, 265], "mockcoreparam": [202, 239, 241, 242, 265, 266], "mockcor": [202, 239, 241, 242, 265, 266], "testexecutionopt": [202, 265, 266], "testexecut": [202, 265, 266], "getparameterdefinit": [202, 267, 269], "thermalhydraulicsplugin": [202, 267, 270], "fromuserset": [202, 204, 216, 217, 239, 240], "fromreactor": [202, 204, 216, 217, 239, 240, 274, 337, 387, 388], "resolvederivedopt": [202, 204], "setrundirfromcasetitl": [202, 204], "dpa_ebrii_ht9": [203, 497], "2345": 203, "1920": 203, "1586": [203, 231], "1256": [203, 472], "824": 203, "006": [203, 478, 483], "520": 203, "396": 203, "328": [203, 231], "749": 203, "452": 203, "0183": 203, "3281": 203, "1771": 203, "4552": 203, "3861": 203, "7099": 203, "2051": [203, 231], "58651": 203, "7408": 203, "452607": 203, "16265": 203, "124318": 203, "15621": 203, "189583": 203, "236694": 203, "297445": 203, "392136": 203, "50732": 203, "681782": 203, "07978": 203, "43258": 203, "35563": 203, "dpa_ebrii_inc600": [203, 497], "2572": 203, "2116": 203, "1640": 203, "1215": 203, "869": [203, 231], "816": 203, "359": [203, 231], "778": 203, "443": 203, "667": 203, "5721": 203, "026": 203, "051": [203, 478], "2252": 203, "3504": 203, "34915": 203, "67409": 203, "13557": 203, "595081": 203, "195832": 203, "193791": 203, "252465": 203, "311159": 203, "371897": 203, "495951": 203, "650177": 203, "839344": 203, "12626": 203, "785": 203, "02021": 203, "19616": 203, "dpa_ebrii_inc625": [203, 497], "2497": 203, "2058": 203, "1604": 203, "1202": 203, "868": 203, "639": 203, "416": 203, "975": 203, "350": [203, 231, 330], "379": 203, "5708": 203, "6142": 203, "8537": 203, "1218": [203, 472], "44318": 203, "16493": 203, "566731": 203, "220242": 203, "192435": 203, "331226": 203, "369475": 203, "524326": 203, "47812": 203, "622211": 203, "815999": 203, "07725": 203, "70732": 203, "8454": 203, "88285": 203, "dpa_ebrii_incx750": [203, 497], "2592": 203, "2133": 203, "1658": 203, "1237": [203, 472], "886": 203, "458": 203, "651": 203, "427": 203, "358": 203, "449": 203, "428": [203, 231], "9576": 203, "703": [203, 231], "5248": 203, "7532": 203, "43101": 203, "60558": 203, "06838": 203, "585632": 203, "190347": 203, "189737": 203, "25007": 203, "308765": 203, "369079": 203, "492257": 203, "645369": 203, "833181": 203, "11802": 203, "77196": 203, "98945": 203, "13947": 203, "dpa_ebrii_pe16": [203, 497], "2478": 203, "2035": [203, 231], "1619": 203, "1238": [203, 472], "858": 203, "439": [203, 231], "595": 203, "879": 203, "410": [203, 231], "632": 203, "919": 203, "511": 203, "1254": [203, 231], "4117": 203, "3353": 203, "4413": 203, "1127": 203, "13145": 203, "59314": 203, "12973": 203, "517916": 203, "15156": 203, "156357": 203, "237675": 203, "281173": 203, "365433": 203, "412907": 203, "540601": 203, "703084": 203, "937963": 203, "48726": 203, "34954": 203, "99536": 203, "dpa": [203, 240, 275, 406, 439, 472, 488, 489, 491, 497], "gendpax": 203, "spectr": 203, "t92": 203, "ss316": [203, 491], "anl33": [203, 231, 460, 497], "join": [203, 447, 465], "dpaxsdirectorypath": 203, "twr_bol": 203, "ht9collaps": 203, "dpacrosssectioncollaps": 203, "coarseenergyupperboundsev": 203, "detailedspectrum": 203, "endfdatapath": 203, "t92collaps": 203, "ss316collaps": 203, "executor": 204, "pathwai": [204, 465, 476], "inputfil": 204, "stdin": 204, "outputfil": [204, 401], "extrainputfil": 204, "sourcenam": 204, "destnam": 204, "brought": [204, 209, 273, 279], "rundir": [204, 266], "transit": [204, 320, 436, 469, 473, 480], "extraoutputfil": 204, "executablepath": [204, 401], "workingdir": 204, "savephysicsfil": [204, 240, 472, 497], "dedic": [204, 280], "copyoutput": [204, 472], "applyresultstoreactor": 204, "deliber": [204, 240, 273, 330, 427], "paralleliz": 204, "maxim": [204, 284], "reusabl": [204, 284, 440], "dictat": [204, 336, 436], "transform": [204, 240, 306, 327, 328, 387, 399, 448, 465], "executeropt": [204, 242], "mine": 205, "dispos": 205, "ex": [205, 336, 381, 401, 434, 471, 495], "chemistri": 205, "handler": [205, 208, 209, 214, 273, 478, 484, 494], "hookspec": [205, 273, 436], "test_assemblyrotationalgorithm": [205, 212], "testfuelhandlermgmttool": [205, 212, 213], "test_fuelhandl": [205, 212], "fuelhandlertesthelp": [205, 212, 213, 214], "mocklatticephysicsinterfac": [205, 212, 214], "mockxsgm": [205, 212, 214], "testfuelhandl": [205, 212, 214], "testfuelplugin": [205, 212, 214], "addsomedetailassembli": [205, 212, 214], "test_hexassemblyfuelmgmtutil": [205, 212], "testhexassemmgmttool": [205, 212, 215], "managefuel": [205, 208], "makeshufflereport": [205, 208, 209], "chooseswap": [205, 209, 372, 374, 484, 494], "prepcor": [205, 209], "prepsearch": [205, 209], "findassembli": [205, 209, 214, 478, 494], "swapassembli": [205, 209, 456, 478, 495], "dischargeswap": [205, 209, 214, 484, 495], "swapcascad": [205, 209, 495], "repeatshufflepattern": [205, 209], "readmov": [205, 208, 209], "trackchain": [205, 209], "processmovelist": [205, 209], "dorepeatshuffl": [205, 209, 336], "prepshufflemap": [205, 209], "makeshufflearrow": [205, 209], "rotat": [206, 209, 210, 213, 240, 274, 275, 279, 298, 326, 339, 398, 400, 465, 488, 489, 491, 496, 497], "fh": [206, 214, 478], "highest": [206, 209, 210, 231, 240, 275, 336, 387, 456, 478, 489, 491, 494], "lowest": [206, 210, 231, 275, 336, 387, 456, 478, 494], "orient": [206, 210, 279, 304, 388, 440, 457, 468, 475, 478, 488, 489, 491], "stationari": [206, 214, 319, 493], "obvious": [206, 273, 336], "isotrop": 206, "txt": [208, 209, 214, 336, 431, 433, 469, 470, 496, 505], "movelist": [208, 209], "fuelhandlernam": [209, 484, 494, 497], "decis": [209, 233, 327, 439], "shufflefactor": 209, "aux": 209, "remain": [209, 228, 275, 279, 302, 306, 320, 328, 391, 431, 456, 469, 475, 493, 496], "_prepsearch": 209, "targetr": [209, 336], "width": [209, 210, 214, 273, 323, 328, 387, 394, 396, 455, 465, 491], "compareto": [209, 478, 494], "forcesid": 209, "mandatoryloc": 209, "zonelist": 209, "excludedloc": 209, "minparam": 209, "minval": [209, 307, 400], "maxparam": 209, "maxval": [209, 302, 307], "findmani": [209, 214], "coord": [209, 274, 275, 279, 346, 478], "exacttyp": [209, 336], "acceptfirstcandidat": 209, "blocklevelmax": [209, 478], "findfromsfp": 209, "maxnumassem": 209, "circularringflag": 209, "criterion": [209, 456], "ring": [209, 210, 229, 279, 297, 301, 305, 306, 313, 321, 322, 323, 326, 327, 328, 329, 336, 346, 349, 357, 398, 448, 449, 471, 491, 494, 496, 497, 499], "bob": [209, 437], "ye": [209, 434, 440, 478], "fun": 209, "timetolimit": [209, 488, 489], "pick": [209, 336, 406, 432, 469, 478, 497], "assembi": [209, 286], "center": [209, 210, 275, 279, 298, 301, 302, 305, 306, 323, 326, 327, 328, 336, 339, 356, 387, 388, 398, 457, 465, 472, 478, 485, 489, 494], "exactli": [209, 279, 302, 334, 336, 398, 405, 437, 471, 476, 478, 493, 497], "ignit": [209, 274, 279, 319, 491, 494, 497], "earliest": 209, "maxbu": 209, "candid": [209, 228, 302, 368, 456], "maxburnup": 209, "spent": [209, 214, 276, 321, 336, 434, 464, 469, 471, 472, 478, 485, 488, 491, 493, 497], "toggl": [209, 330, 497], "gotten": 209, "valuabl": [209, 441, 491], "reconsid": [209, 217], "assemlist": 209, "feed": [209, 274, 279, 319, 336, 391, 469, 491, 493, 494, 497, 504], "goingout": 209, "inter1": 209, "inter2": 209, "goingin": 209, "art": 209, "explicitrepeatshuffl": [209, 497], "casenam": 209, "oldloc": [209, 336], "newloc": [209, 336], "enrichlist": [209, 336], "assemtyp": [209, 273, 275, 306, 336], "bottom": [209, 240, 275, 279, 312, 322, 323, 327, 328, 330, 333, 336, 388, 478, 480, 484, 485, 488, 489, 491, 493, 497], "startingat": 209, "alreadydon": 209, "touch": [209, 290], "mont": [209, 233, 469], "carlo": [209, 233, 469], "fromloc": 209, "toloc": 209, "assemnam": [209, 329, 336], "discharg": [209, 210, 276, 336, 488, 494], "loadnam": 209, "charg": [209, 210, 472, 488], "movingassemnam": 209, "loadchain": 209, "loadqueu": [209, 275], "loopchain": 209, "loadchargetyp": 209, "round": [209, 280, 292, 336, 354], "movement": [209, 336], "maneuv": [209, 404], "arrow": [209, 404, 465, 497], "currentcoord": 209, "oldcoord": 209, "aprev": 210, "peak": [210, 240, 254, 275, 279, 404, 439, 469, 472, 484, 489, 491, 497], "rot": [210, 279], "pi": [210, 279, 298, 305, 429, 449, 456, 457, 459, 465, 484], "counterclockwis": [210, 279, 326, 336, 488, 489, 491], "rotateassembli": 210, "maxringincor": 210, "charger": 210, "jumpringfrom": 210, "jumpringto": 210, "coarsefactor": 210, "combo": [210, 285, 437], "jumpr": [210, 491, 494], "scheme": [210, 441, 496], "jump": [210, 440, 491, 494], "sublist": [210, 399], "subcas": 210, "baselist": [210, 247], "enter": [210, 296, 302, 484, 488, 493, 496, 497], "outermost": [210, 279], "hit": [210, 312, 469], "rj": 210, "rd": 210, "ringschedul": 210, "ringwidth": 210, "getnumr": [210, 274, 336], "innermost": [210, 279, 478], "conwidth": 210, "circularringord": [210, 497], "angl": [210, 275, 279, 297, 388, 429, 497], "distancesmart": [210, 497], "test_bureducingassemblyrot": [212, 213], "test_simpleassemblyrot": [212, 213], "test_findhighbu": [212, 214], "test_width": [212, 214], "test_findmani": [212, 214], "test_findinsfp": [212, 214], "test_findbycoord": [212, 214], "test_findwithminmax": [212, 214], "runshuffl": [212, 214], "test_repeatshuffl": [212, 214], "test_readmov": [212, 214], "test_processmovelist": [212, 214], "test_getfactorlist": [212, 214], "test_linpowbypin": [212, 214], "test_linpowbypinneutron": [212, 214], "test_linpowbypingamma": [212, 214], "test_transferstationaryblock": [212, 214], "test_transferdifferentnumberstationaryblock": [212, 214], "test_transferunalignedlocationstationaryblock": [212, 214], "test_transferincompatibleheightstationaryblock": [212, 214], "test_dischargeswap": [212, 214], "test_dischargeswapincompatiblestationaryblock": [212, 214], "test_settingsarediscov": [212, 214], "test_buildeqringschedulehelp": [212, 215], "test_buildeqringschedul": [212, 215], "test_buildconvergentringschedul": [212, 215], "test_buildringschedul": [212, 215], "latticephysicsinterfac": [214, 226, 229, 233, 246, 250, 496], "mock": [214, 242, 373], "perfect": [214, 469], "meantim": 214, "repeatshuffl": 214, "_transferstationaryblock": 214, "unalign": [214, 318], "unequ": 214, "hist": 214, "phenomena": [216, 503], "lwr": [216, 452, 466, 467, 468, 471, 472, 484, 485, 486, 493], "triso": [216, 283], "degrad": 216, "fcci": [216, 491], "eros": 216, "fcmi": 216, "stress": [216, 468], "gase": 216, "feedback": [216, 336, 469, 472, 476, 489, 502], "absorb": [216, 318, 484, 489, 491], "influenc": [216, 328], "bond": [216, 225, 274, 299, 313, 319, 342, 478, 484, 489, 491, 493, 497], "squeez": 216, "impact": [216, 233, 275, 302, 474], "testfuelperformanceopt": [216, 221, 222], "test_fuelperformanceplugin": [216, 221], "testfuelperformanceplugin": [216, 221, 223], "test_fuelperformanceutil": [216, 221], "testfuelperformanceutil": [216, 221, 224], "subpackag": [217, 297, 372, 430, 434, 465, 475, 480], "prep": [217, 240], "hope": [217, 253, 320, 469, 481], "parameterdefinitioncollect": [218, 253, 269, 273, 274, 275, 279, 296, 297, 298, 299, 301, 302, 318, 330, 332, 333, 334, 336, 342, 345, 394], "test_fuelperformanceopt": [221, 222], "test_applyfueldisplac": [221, 224], "test_gasconductivitycorrection_morph0": [221, 224], "test_gasconductivitycorrection_morph1": [221, 224], "test_gasconductivitycorrection_morph2": [221, 224], "test_gasconductivitycorrection_morph3": [221, 224], "test_gasconductivitycorrection_morph4": [221, 224], "displacementincm": 225, "radiu": [225, 279, 296, 301, 305, 329, 336, 340, 347, 457], "conserv": [225, 240, 275, 279, 299, 303, 304, 305, 306, 312, 316, 318, 340, 341, 449, 472, 475, 480, 491, 493], "buffer": [225, 283], "prime": [225, 299, 318, 475], "tempinc": [225, 453], "poros": [225, 481], "morphologi": 225, "pore": [225, 489], "irregular": [225, 325, 497], "conservat": 225, "bauer": 225, "spheric": [225, 301, 478], "660": [225, 231], "maxwel": 225, "eucken": 225, "source1": 225, "pile": 225, "holland": 225, "407": [225, 231], "source2": 225, "ondracek": 225, "schulz": 225, "1973": 225, "encompass": [226, 298, 475], "temporarili": [226, 302, 406, 499], "untangl": 226, "dbload": [226, 273, 336, 386, 480], "intenum": 226, "frequenc": [226, 247, 250, 257, 469, 496, 497], "c0n0": 226, "n0": 226, "fissionproductmodelset": [226, 232], "getfissionproductmodelsettingvalid": [226, 232, 234], "lumpedfissionproductcollect": [226, 232, 235], "fissionproductdefinitionfil": [226, 232, 235], "lumpedfissionproductfactori": [226, 232, 235], "isga": [226, 232, 235], "globalfluxinterfaceusingexecut": [226, 239, 240, 242], "globalfluxopt": [226, 239, 240, 242, 318], "globalfluxexecut": [226, 239, 240, 242], "globalfluxresultmapp": [226, 239, 240], "doseresultsmapp": [226, 239, 240], "computedpar": [226, 239, 240], "calcreactionr": [226, 239, 240, 318], "crosssectiont": [226, 243, 245], "makereactionratet": [226, 243, 244], "isotopicdepletioninterfac": [226, 243, 244, 283], "isdeplet": [226, 243, 245, 283], "abstractisotopicdeplet": [226, 243, 245], "makexsect": [226, 243, 245], "abstractisotopicdepletionread": [226, 243, 245], "csrc": [226, 243, 245], "setblockneutronveloc": [226, 246, 247], "latticephysicswrit": [226, 246, 251], "test_crosssectionmanag": [226, 256], "testblockcollect": [226, 256, 257], "testblockcollectionmedian": [226, 256, 257], "testblockcollectionaverag": [226, 256, 257], "testblockcollectioncomponentaverag": [226, 256, 257], "testblockcollectioncomponentaverage1dcylind": [226, 256, 257], "testblockcollectionfluxweightedaverag": [226, 256, 257], "test_crosssectiongroupmanag": [226, 256, 257], "testxsnumberconvert": [226, 256, 257], "makeblock": [226, 256, 257], "test_crosssectionset": [226, 256], "testcrosssectionset": [226, 256, 258], "test_xsset": [226, 256, 258], "test_crosssectiont": [226, 256], "testcrosssectiont": [226, 256, 259], "test_energygroup": [226, 256], "testenergygroup": [226, 256, 260], "test_macroxsgenerationinterfac": [226, 256], "testmacroxsgenerationinterfac": [226, 256, 261], "test_neutronicsplugin": [226, 256], "neutronicsreactortest": [226, 256, 262], "createrepresentativeblock": [226, 228], "calcavgnuclidetemperatur": [226, 228], "getweight": [226, 228], "getcandidateblock": [226, 228], "clearrepresentativeblock": [226, 228], "xstypeispregener": [226, 228], "fluxsolutionispregener": [226, 228], "createrepresentativeblocksusingexistingblock": [226, 228], "getnextavailablexstyp": [226, 228], "makecrosssectiongroup": [226, 228], "disablebugroupupd": [226, 228], "enablebugroupupd": [226, 228], "getnuctemperatur": [226, 228], "updatenuclidetemperatur": [226, 228], "zero_dimension": [226, 229], "one_dimensional_slab": [226, 229], "one_dimensional_cylind": [226, 229], "two_dimensional_hex": [226, 229], "getstr": [226, 229], "setdefault": [226, 229, 258], "bugroup": [226, 228, 229, 279, 406, 439, 484, 485, 489, 496, 497], "xsispregener": [226, 229], "fluxispregener": [226, 229], "buildmacro": [226, 252], "circular": [227, 279, 296, 298, 336, 471, 472, 497], "sent": [228, 273, 437, 494], "csm": 228, "_setbugroupbound": 228, "_addxsgroupsfromblock": 228, "representativeblocklist": 228, "representativeblock": [228, 247, 248, 472], "blockthatrepresentsba": 228, "xsgm": 228, "xstypelabel": 228, "xstypenumb": 228, "allnuclidesinproblem": [228, 233, 338, 342], "validblocktyp": [228, 229], "best": [228, 240, 279, 303, 336, 400, 433, 436, 437, 438, 439, 441, 469, 481, 489, 491, 493, 494, 496], "n_i": [228, 252, 299, 302, 318, 475], "v_i": [228, 475], "t_i": 228, "reflector": [228, 274, 275, 306, 319, 434, 463, 478, 483, 485], "leakag": [228, 491], "median": [228, 489, 491, 496, 497], "accur": [228, 233, 247, 275, 302, 406, 428, 448, 471], "allnucnam": [228, 336], "denomin": 228, "cylindr": [228, 229, 305, 448, 472, 476], "opinion": [228, 305], "geometr": [228, 280, 299, 325, 468, 469, 471, 478, 484, 493, 498], "assumpt": [228, 247, 275, 279, 305, 310, 336, 472, 474, 497, 503], "slab": [228, 279], "forese": 228, "xsgroup": [228, 456, 463, 464, 478, 501], "date": [228, 240, 273, 328, 336, 367, 431, 441, 471, 472, 476, 478, 480, 494], "originalrepresentativeblock": 228, "unperturb": [228, 491], "blockcollectionbyxsgroup": 228, "modifiedreprblock": 228, "origxsidsfromnew": 228, "howmani": [228, 257], "excludedxstyp": 228, "unrepres": [228, 246, 248], "avgnuctemperatur": 228, "arug": 228, "carri": [229, 366, 427, 469], "0d": [229, 496], "blockrepresent": [229, 258, 496], "past": [229, 306, 330, 349, 370, 427, 434, 440, 469, 480, 493], "block_collect": 229, "xsfileloc": [229, 258], "fluxfileloc": 229, "driverid": 229, "criticalbuckl": [229, 496], "nuclidereactiondriv": 229, "externaldriv": 229, "usehomogenizedblockcomposit": 229, "numinternalr": [229, 305], "numexternalr": [229, 305, 448], "mergeintoclad": [229, 305], "meshsubdivisionspercm": 229, "xsexecuteexclus": 229, "xsprioriti": 229, "xsmaxatomnumb": 229, "mindriverdens": 229, "subcrit": 229, "buckl": [229, 497], "spatial": [229, 275, 276, 279, 284, 302, 305, 321, 325, 328, 339, 404, 434, 469, 471, 472, 478, 484, 488, 489, 491, 493, 497], "gap": [229, 274, 279, 302, 319, 340, 448, 463, 475, 478, 483, 484, 485, 489, 493], "subregion": 229, "prioriti": [229, 308, 309, 469], "dilut": [229, 497], "templat": 229, "char": [229, 400], "conf_xsid": 229, "mutual": [229, 284, 320, 349, 469], "tune": [229, 400], "xssettingsdict": 229, "coerc": [229, 366, 370], "egrpstruc": 231, "descend": 231, "propag": [231, 367, 476], "neutronenergyboundsinev": 231, "15000000": 231, "14190675": 231, "13498587": 231, "61352667": 231, "12840253": 231, "727187442": 231, "12214027": 231, "163355658": 231, "11618342": 231, "029434891": 231, "11051708": 231, "80231181": 231, "10512710": 231, "603772538": 231, "9999999": 231, "657569105": 231, "9512293": 231, "919276796": 231, "9048373": 231, "870515307": 231, "8607079": 231, "469517574": 231, "8187307": 231, "250421112": 231, "7788007": 231, "564028598": 231, "7408181": 231, "953138132": 231, "7046880": 231, "655880161": 231, "6703200": 231, "230818099": 231, "6376281": 231, "297874154": 231, "6065306": 231, "389431497": 231, "5769497": 231, "906239427": 231, "5488116": 231, "173010204": 231, "5220457": 231, "5888455575": 231, "4965852": 231, "867867945": 231, "4723665": 231, "365657246": 231, "4493289": 231, "487308097": 231, "4274149": 231, "173127189": 231, "4065696": 231, "458183979": 231, "3867410": 231, "1021129377": 231, "3678794": 231, "2857411373": 231, "3499377": 231, "3712820574": 231, "3328710": 231, "722995453": 231, "3166367": 231, "5853643203": 231, "3011942": 231, "015983818": 231, "2865047": 231, "870493808": 231, "2725317": 231, "837016821": 231, "2592402": 231, "5176870413": 231, "2465969": 231, "5549736465": 231, "2345702": 231, "800613864": 231, "2231301": 231, "5250776387": 231, "2122479": 231, "6655871677": 231, "2018965": 231, "1108109495": 231, "1920499": 231, "0204437198": 231, "1826835": 231, "1779708646": 231, "1737739": 231, "374998885": 231, "1652988": 231, "8256124198": 231, "1572371": 231, "609293413": 231, "1495686": 231, "1410094348": 231, "1422740": 231, "6671460986": 231, "1353352": 231, "7860231453": 231, "1287348": 231, "9917952344": 231, "1224564": 231, "2405969552": 231, "1164841": 231, "5378471955": 231, "1108031": 231, "5456809145": 231, "1053992": 231, "209526693": 231, "1002588": 231, "4028963122": 231, "953691": 231, "589498149": 231, "907179": 231, "5018294954": 231, "862935": 231, "8354441153": 231, "820849": 231, "9581305487": 231, "780816": 231, "6332739571": 231, "742735": 231, "7567097712": 231, "706512": 231, "1064111381": 231, "672055": 231, "1043842541": 231, "639278": 231, "5901762013": 231, "608100": 231, "6054289357": 231, "578443": 231, "1889407024": 231, "550232": 231, "1817224221": 231, "523397": 231, "0415615919": 231, "497870": 231, "66663000936": 231, "473589": 231, "22769425064": 231, "450492": 231, "00850933965": 231, "428521": 231, "25399650994": 231, "407622": 231, "02582542447": 231, "387742": 231, "0650397337": 231, "368831": 231, "66138246434": 231, "350843": 231, "52899448376": 231, "333732": 231, "68817522237": 231, "317456": 231, "35290999303": 231, "301973": 231, "8238826682": 231, "287246": 231, "3867061905": 231, "273237": 231, "2151164391": 231, "259911": 231, "27888738815": 231, "247235": 231, "25623729482": 231, "235177": 231, "4505068885": 231, "223707": 231, "7109012127": 231, "212797": 231, "35709693265": 231, "202419": 231, "10752658817": 231, "192547": 231, "0111604646": 231, "183156": 231, "3826155013": 231, "174223": 231, "74042897587": 231, "165726": 231, "7483426165": 231, "157644": 231, "15945032178": 231, "149955": 231, "7630698284": 231, "142642": 231, "33420547828": 231, "135685": 231, "58547571563": 231, "129068": 231, "12138510743": 231, "122773": 231, "39482654404": 231, "116785": 231, "66570485242": 231, "111089": 231, "96157835954": 231, "105672": 231, "04021998937": 231, "100518": 231, "3540042768": 231, "95616": 231, "01603124726": 231, "90952": 231, "76790245438": 231, "86516": 231, "9490685987": 231, "82297": 231, "46767208072": 231, "78283": 231, "77281157946": 231, "74465": 231, "82815930338": 231, "70834": 231, "08686494321": 231, "67379": 231, "46768357352": 231, "64093": 231, "332267810096": 231, "60967": 231, "46356744204": 231, "57994": 231, "045282526145": 231, "55165": 231, "6423185657": 231, "52475": 231, "182194901485": 231, "49915": 231, "937359826254": 231, "47481": 231, "50836820122": 231, "45165": 231, "807879509885": 231, "42963": 231, "045436336004": 231, "40867": 231, "71298520392": 231, "38874": 231, "57110357589": 231, "36978": 231, "63589856658": 231, "35175": 231, "166544614935": 231, "33459": 231, "653428950834": 231, "31827": 231, "806875214246": 231, "30275": 231, "546417029916": 231, "28798": 231, "990594716022": 231, "27394": 231, "447249613197": 231, "26058": [231, 447], "404291764728": 231, "24787": 231, "520917862297": 231, "23578": 231, "619257497565": 231, "22428": 231, "67642683086": 231, "21334": 231, "816969807052": 231, "20294": 231, "30566801763": 231, "19304": 231, "540701229987": 231, "18363": 231, "047141481613": 231, "17467": 231, "470764471036": 231, "16615": 231, "57216277083": 231, "15805": 231, "221146142581": 231, "15034": 231, "391414951724": 231, "14301": 231, "155493363003": 231, "13603": 231, "679909646915": 231, "12940": 231, "220611545361": 231, "12309": 231, "118605232572": 231, "11708": 231, "795806966411": 231, "11137": 231, "751097057033": 231, "10594": 231, "556566285757": 231, "10077": 231, "853945388262": 231, "9586": 231, "351208673927": 231, "9118": 231, "819343288624": 231, "8674": 231, "089276042416": 231, "8251": 231, "048950117642": 231, "7848": 231, "640544347625": 231, "7465": 231, "857828112762": 231, "7101": 231, "743645239853": 231, "6755": 231, "387520613109": 231, "6425": 231, "923383512113": 231, "6112": 231, "527401983908": 231, "5814": 231, "415922833998": 231, "5530": 231, "843512085172": 231, "5261": 231, "101091004286": 231, "5004": 231, "514163036086": 231, "4760": 231, "441127210488": 231, "4528": 231, "271673805963": 231, "4307": 231, "425258257331": 231, "4097": 231, "34964949196": 231, "3897": 231, "5195490644396": 231, "3707": 231, "435277636849": 231, "3526": 231, "621525520145": 231, "3354": 231, "626164152358": 231, "3191": 231, "019115541685": 231, "3035": 231, "3912768474947": 231, "2887": 231, "35349741013": 231, "2746": 231, "535605671562": 231, "2612": 231, "5854835536798": 231, "2485": 231, "1681859796863": 231, "2363": 231, "9651033369405": 231, "2248": 231, "6731647869688": 231, "2139": 231, "0040804305077": 231, "2034": 231, "6836204325907": 231, "1935": 231, "4509293051226": 231, "1841": 231, "0578736322839": 231, "1751": 231, "2684216077457": 231, "1665": 231, "8580528322098": 231, "1584": 231, "613196895463": 231, "1507": 231, "330699339108": 231, "1433": 231, "8173136645985": 231, "1363": 231, "8892181163358": 231, "1297": 231, "3715560315309": 231, "1234": 231, "097998607469": 231, "9103289928657": 231, "1116": 231, "6580466633275": 231, "1062": [231, 472], "1979910916484": 231, "1010": 231, "3939837719233": 231, "961": 231, "1164877023504": 231, "914": 231, "2422834752543": 231, "6541611643848": 231, "827": 231, "240627239049": 231, "786": 231, "8956257722102": 231, "748": 231, "5182732454288": 231, "712": 231, "0126062875174": 231, "677": 231, "2873417161287": 231, "644": 231, "2556482822515": 231, "612": 231, "8349295468605": 231, "582": 231, "9466173467957": 231, "554": 231, "5159753334304": 231, "527": 231, "4719120928712": 231, "501": 231, "7468033803931": 231, "477": 231, "2763230246042": 231, "453": 231, "99928207851116": 231, "431": 231, "8574758152795": 231, "79553818609935": 231, "390": 231, "7608033762244": 231, "7031741130026": 231, "353": 231, "57499639660017": 231, "33094034018": 231, "319": 231, "9278868215734": 231, "304": 231, "3248196630148": 231, "48272306933313": 231, "36448406814134": 231, "93479970807414": 231, "16008878302117": 231, "00840786162004": 231, "44937141203934": 231, "4540758223219": 231, "99502712629976": 231, "04607225435765": 231, "5823336371366": 231, "58014699865222": 231, "01700218327872": 231, "87148686863472": 231, "12323302362415": 231, "7528659777493": 231, "74195597434274": 231, "07297208657602": 231, "72923838101114": 231, "69489221908088": 231, "95484459222988": 231, "4947423915337": 231, "3009325174504": 231, "36042773996002": 231, "6608742237248": 231, "19052063706607": 231, "93818876751399": 231, "89324557045391": 231, "04557658097639": 231, "38556062244643": 231, "90404574855056": 231, "59232635866391": 231, "44212142931417": 231, "44555380730951": 231, "59513051275254": 231, "883724002687686": 231, "304554348531205": 231, "85117228271823": 231, "51744307217458": 231, "29753117828864": 231, "185885665025225": 231, "17722631869415": 231, "26653044466567": 231, "449020308017666": 231, "72015118670977": 231, "075600007411005": 231, "511254535564667": 231, "02320309265998": 231, "607724774998296": 231, "261280149495732": 231, "98050240325685": 231, "762188924788717": 231, "60329329580401": 231, "500917673588496": 231, "452305544884815": 231, "454834833173546": 231, "506011342116118": 231, "6034625187648": 231, "74493152094453": 231, "92827157397193": 231, "1514406026004": 231, "41249612476833": 231, "709590394382149": 231, "040965780988648": 231, "404950374783336": 231, "79995380596507": 231, "224463267983163": 231, "677039734733027": 231, "156314362241353": 231, "660985065843178": 231, "189813264291999": 231, "741620782661506": 231, "315286906294586": 231, "909745578432922": 231, "523982734519816": 231, "157033766510593": 231, "807981110850049": 231, "475951954085624": 231, "160116050379142": 231, "8596836454597625": 231, "573903501826936": 231, "302061020265351": 231, "043476452974678": 231, "797503203846006": 231, "563526211634768": 231, "340960411987264": 231, "129249274475027": 231, "9278634109788713": 231, "7362992519428433": 231, "554077787188039": 231, "3807433681376495": 231, "215862568458182": 231, "0590231002678645": 231, "909832783202191": 231, "767918563758731": 231, "6329255824690607": 231, "5045162865652517": 231, "3823695859221297": 231, "266180050164712": 231, "155657144933178": 231, "0505245053956394": 231, "9505192451921052": 231, "8553912990816532": 231, "7649027976490732": 231, "678827472507428": 231, "5969500905092289": 231, "519065915551457": 231, "4449801966286626": 231, "3745076808540113": 231, "3074721502305722": 231, "2437059810145383": 231, "1830497245685552": 231, "125351708657075": 231, "0704676581867647": 231, "0182603344436232": 231, "9685991919247122": 231, "9213600519064007": 231, "8764247919328735": 231, "8336810504484653": 231, "7930219458352443": 231, "7543458091532959": 231, "7175559299154151": 231, "682560314260515": 231, "6492714549210562": 231, "6176061124092975": 231, "5874851068752194": 231, "5588331201156554": 231, "5315785072395534": 231, "505653117518429": 231, "4809921239740471": 231, "4575338612772089": 231, "43521967155230895": 231, "41745812047947667": 231, "4gglasstonesesonsk": 231, "50000": 231, "anl1041": [231, 497], "13956123": 231, "772960082": 231, "13725449": 231, "33670749": 231, "13275475": 231, "584813552": 231, "13056051": 231, "273569971": 231, "72718744": 231, "12628023": 231, "000515474": 231, "12419300": 231, "139209777": 231, "163355656": 231, "12012147": 231, "051362114": 231, "11813603": 231, "724122154": 231, "02943489": 231, "11426307": 231, "726685133": 231, "11237447": 231, "471776208": 231, "802311808": 231, "10869040": 231, "123022761": 231, "10689390": 231, "691434687": 231, "603772536": 231, "10338950": 231, "78109811": 231, "10168062": 231, "955676707": 231, "657569103": 231, "9834714": 231, "201445162": 231, "9672160": 231, "673615381": 231, "919276794": 231, "9355069": 231, "529969681": 231, "9200443": 231, "831241598": 231, "8898817": 231, "405157225": 231, "8751732": 231, "89074309": 231, "8464816": 231, "959044645": 231, "8324905": 231, "84104552": 231, "250421113": 231, "8051982": 231, "964455922": 231, "7918895": 231, "392200363": 231, "7659283": 231, "12136896": 231, "7532686": 231, "306604107": 231, "7285735": 231, "475627828": 231, "7165312": 231, "860375434": 231, "6930405": 231, "963545895": 231, "6815856": 231, "428542489": 231, "6592406": 231, "076260078": 231, "6483443": 231, "188001963": 231, "6270890": 231, "637995884": 231, "6167241": 231, "932506182": 231, "5965055": 231, "692687741": 231, "5866461": 231, "994214527": 231, "5674136": 231, "493670067": 231, "5580351": 231, "266611996": 231, "5397405": 231, "591412277": 231, "5308194": 231, "323851159": 231, "588845557": 231, "5134171": 231, "014516035": 231, "5049310": 231, "631814894": 231, "867867944": 231, "4883774": 231, "539426335": 231, "4803052": 231, "846426618": 231, "365657245": 231, "4645590": 231, "044529753": 231, "4568805": 231, "194952909": 231, "487308096": 231, "4419021": 231, "9445242835": 231, "4345981": 231, "936250928": 231, "173127188": 231, "4203503": 231, "70114586": 231, "4134025": 231, "896110469": 231, "458183978": 231, "3998496": 231, "406527598": 231, "3932407": 231, "07402821": 231, "1021129363": 231, "3803487": 231, "4356494197": 231, "3740621": 231, "3179303906": 231, "285741136": 231, "3617989": 231, "164508494": 231, "3558189": 231, "063530028": 231, "371282056": 231, "3441537": 231, "7508052336": 231, "3384654": 231, "1351664024": 231, "722995451": 231, "3273691": 231, "974095944": 231, "3219582": 231, "605128299": 231, "585364319": 231, "3114032": 231, "1325118914": 231, "3062561": 231, "708608702": 231, "0159838167": 231, "2962158": 231, "993286018": 231, "2913198": 231, "811577779": 231, "8704938064": 231, "2817692": 231, "794463073": 231, "2771120": 231, "4289932945": 231, "8370168195": 231, "2680272": 231, "2952969177": 231, "2635971": 231, "2908934634": 231, "5176870404": 231, "2549553": 231, "872960495": 231, "2507413": 231, "4540369934": 231, "5549736456": 231, "2425210": 231, "6633097786": 231, "2385125": 231, "4568689573": 231, "800613863": 231, "2306931": 231, "7435531556": 231, "2268801": 231, "5156994606": 231, "5250776378": 231, "2194421": 231, "3547824966": 231, "2158150": 231, "7600851455": 231, "665587167": 231, "2087398": 231, "1624218314": 231, "2052896": 231, "5055015713": 231, "1108109485": 231, "1985594": 231, "5527443667": 231, "1952775": 231, "5614877867": 231, "0204437189": 231, "1888755": 231, "9636987764": 231, "1857537": 231, "5735330859": 231, "1779708636": 231, "1796640": 231, "2483714786": 231, "1766944": 231, "39706033": 231, "374998884": 231, "1709017": 231, "0694932214": 231, "1680769": 231, "5019404588": 231, "825612419": 231, "1625667": 231, "3234759339": 231, "1598797": 231, "4060491745": 231, "6092934127": 231, "1546382": 231, "592539629": 231, "1520823": 231, "1364493908": 231, "1410094346": 231, "1470964": 231, "6235593935": 231, "1446651": 231, "716852125": 231, "6671460983": 231, "1399224": 231, "8323293114": 231, "1376097": 231, "6800742168": 231, "786023145": 231, "1330983": 231, "832003719": 231, "1308984": 231, "6042737649": 231, "9917952341": 231, "1266070": 231, "9845366525": 231, "1245144": 231, "671803628": 231, "240596955": 231, "1204323": 231, "9739978523": 231, "1184418": 231, "2495798958": 231, "1145588": 231, "40069839": 231, "1126653": 231, "4899160273": 231, "5456809143": 231, "1089717": 231, "3951110227": 231, "1071705": 231, "9508245436": 231, "2095266927": 231, "1036571": 231, "2506198754": 231, "1019438": 231, "2348368211": 231, "402896312": 231, "986017": 231, "0741811295": 231, "969719": 231, "6454378531": 231, "5894981488": 231, "937928": 231, "4540211936": 231, "922425": 231, "8602568853": 231, "5018294952": 231, "892185": 231, "1435414243": 231, "877438": 231, "620196733": 231, "8354441151": 231, "848672": 231, "7606389959": 231, "834645": 231, "4337244389": 231, "9581305484": 231, "807282": 231, "5016920642": 231, "793939": 231, "2955838467": 231, "6332739566": 231, "767910": 231, "8694940389": 231, "755218": 231, "4192267248": 231, "7567097708": 231, "730459": 231, "4144566575": 231, "718385": 231, "9822933763": 231, "1064111376": 231, "694834": 231, "4884347349": 231, "683349": 231, "8845063086": 231, "1043842537": 231, "660947": 231, "0105570209": 231, "650022": 231, "5173715653": 231, "590176201": 231, "628712": 231, "2444776223": 231, "618320": 231, "5451118595": 231, "6054289355": 231, "598049": 231, "586491001": 231, "588164": 231, "6962837218": 231, "188940702": 231, "568882": 231, "3639807248": 231, "559479": 231, "565557602": 231, "1817224218": 231, "541137": 231, "6436979906": 231, "532193": 231, "4251652672": 231, "0415615915": 231, "514746": 231, "04939051194": 231, "506238": 231, "0455430209": 231, "66663000896": 231, "489641": 231, "58832575276": 231, "481548": 231, "524722254": 231, "2276942503": 231, "465761": 231, "4862747214": 231, "458063": 231, "1260407176": 231, "00850933936": 231, "443046": 231, "03054370044": 231, "435723": 231, "12376870983": 231, "25399650965": 231, "421438": 231, "42066140997": 231, "414472": 231, "65626416326": 231, "0258254242": 231, "400884": 231, "6263482428": 231, "394258": 231, "58628944226": 231, "0650397334": 231, "381333": 231, "2524124228": 231, "375030": 231, "3681405713": 231, "66138246405": 231, "362735": 231, "41023525444": 231, "356739": 231, "9212566465": 231, "52899448347": 231, "345044": 231, "5955241115": 231, "339341": 231, "5099933899": 231, "6881752221": 231, "328216": 231, "5720274822": 231, "322791": 231, "62926021556": 231, "35290999274": 231, "312209": 231, "26092129905": 231, "307048": 231, "8957348427": 231, "823882668": 231, "296982": 231, "63558996056": 231, "292073": 231, "94438343414": 231, "38670619024": 231, "282498": 231, "62153894344": 231, "277829": 231, "3300275076": 231, "21511643886": 231, "268721": 231, "0011887342": 231, "264279": 231, "433711485": 231, "27888738795": 231, "255615": 231, "3233120153": 231, "251390": 231, "37363675048": 231, "2562372946": 231, "243148": 231, "81688765227": 231, "239129": 231, "92043950563": 231, "45050688833": 231, "231290": 231, "30915607096": 231, "227467": 231, "41660057247": 231, "71090121253": 231, "220010": 231, "14767112158": 231, "216373": 231, "6997856267": 231, "35709693248": 231, "209280": 231, "12615351807": 231, "205821": 231, "02992417192": 231, "107526588": 231, "199073": 231, "4139604478": 231, "195783": 231, "0198449143": 231, "01116046443": 231, "189364": 231, "48899498917": 231, "186234": 231, "56929408968": 231, "38261550115": 231, "180129": 231, "07388757533": 231, "177151": 231, "80217175526": 231, "74042897573": 231, "171344": 231, "07528992486": 231, "168512": 231, "00682910308": 231, "74834261634": 231, "162987": 231, "52612964224": 231, "160293": 231, "57927750814": 231, "15945032163": 231, "155038": 231, "5306810947": 231, "152475": 231, "96916730367": 231, "76306982827": 231, "147477": 231, "21231521404": 231, "145039": 231, "6284012029": 231, "3342054782": 231, "140284": 231, "66379757068": 231, "137965": 231, "96225387367": 231, "58547571555": 231, "133442": 231, "9000104393": 231, "131237": 231, "28287543947": 231, "12138510733": 231, "126934": 231, "8129806365": 231, "124836": 231, "7650626417": 231, "39482654394": 231, "120744": 231, "12910067663": 231, "118748": 231, "40418706751": 231, "66570485233": 231, "114855": 231, "36843627653": 231, "112956": 231, "9761752424": 231, "96157835945": 231, "109253": 231, "8060184568": 231, "107447": 231, "9994405167": 231, "0402199893": 231, "103925": 231, "43502344932": 231, "102207": 231, "69867155574": 231, "35400427673": 231, "98856": 231, "93174834205": 231, "97222": 231, "97038688637": 231, "0160312472": 231, "94035": 231, "62229488177": 231, "92481": 231, "35016936788": 231, "76790245432": 231, "89449": 231, "4508781269": 231, "87970": 231, "98149865682": 231, "94906859864": 231, "85086": 231, "94968070554": 231, "83680": 231, "5861037303": 231, "46767208067": 231, "80937": 231, "21017729875": 231, "79599": 231, "43576133382": 231, "77281157943": 231, "76989": 231, "85585764523": 231, "75717": 231, "32546983514": 231, "82815930335": 231, "73235": 231, "0162798608": 231, "72024": 231, "54793140454": 231, "0868649432": 231, "69663": 231, "30238919242": 231, "68511": 231, "86927871403": 231, "4676835735": 231, "66265": 231, "78304049073": 231, "65170": 231, "5059854593": 231, "33226781008": 231, "63033": 231, "962665695166": 231, "61992": 231, "102902968785": 231, "46356744203": 231, "59959": 231, "76003048871": 231, "58968": 231, "71236798004": 231, "04528252613": 231, "57035": 231, "48802700269": 231, "56092": 231, "774329341795": 231, "64231856568": 231, "54253": 231, "834452043135": 231, "53357": 231, "09744394822": 231, "18219490147": 231, "51607": 231, "84372277401": 231, "50754": 231, "84109463539": 231, "93735982625": 231, "49090": 231, "89948413711": 231, "48279": 231, "49828507521": 231, "50836820121": 231, "46696": 231, "70806451814": 231, "45924": 231, "87936889531": 231, "80787950988": 231, "44419": 231, "28273828945": 231, "43685": 231, "096572339": 231, "045436336": 231, "42252": 231, "92875587757": 231, "41554": 231, "54927176414": 231, "712985203914": 231, "40192": 231, "22910392309": 231, "39527": 231, "90998916677": 231, "57110357588": 231, "38232": 231, "030959925614": 231, "37600": 231, "11107071114": 231, "36367": 231, "43280750353": 231, "35766": 231, "332014955486": 231, "34593": 231, "77218004997": 231, "34021": 231, "98741908757": 231, "32906": 231, "61400213774": 231, "32362": 231, "7155130292": 231, "806875214243": 231, "31301": 231, "739499520623": 231, "30784": 231, "367252739095": 231, "54641702991": 231, "29775": 231, "135650000266": 231, "29282": 231, "995945441635": 231, "990594716015": 231, "28322": 231, "985148780448": 231, "27854": 231, "84738083919": 231, "447249613193": 231, "26941": 231, "656863216696": 231, "26496": 231, "350443630883": 231, "404291764724": 231, "25627": 231, "69675309333": 231, "25204": 231, "108183864242": 231, "520917862294": 231, "24377": 231, "819233723785": 231, "23974": 231, "88932279092": 231, "61925749756": 231, "23188": 231, "898960277515": 231, "22805": 231, "62017298672": 231, "676426830858": 231, "22057": 231, "963012789984": 231, "21693": 231, "37695253203": 231, "816969807045": 231, "20982": 231, "18346231425": 231, "20635": 231, "378474034096": 231, "305668017623": 231, "19958": 231, "870299625585": 231, "19628": 231, "979190209877": 231, "540701229984": 231, "18985": 231, "46470879724": 231, "18671": 231, "662578639833": 231, "04714148161": 231, "18059": 231, "532668827815": 231, "17761": 231, "034849151085": 231, "47076447103": 231, "17178": 231, "758867320925": 231, "16894": 231, "81895809511": 231, "572162770823": 231, "16340": 231, "940910998219": 231, "16070": 231, "848914552565": 231, "221146142576": 231, "15543": 231, "983818569011": 231, "15287": 231, "064364227763": 231, "391414951719": 231, "14785": 231, "894782185811": 231, "14541": 231, "505437489748": 231, "155493362998": 231, "14064": 231, "778184386718": 231, "13832": 231, "307848677376": 231, "67990964691": 231, "13378": 231, "830858064375": 231, "13157": 231, "698234414089": 231, "220611545354": 231, "12726": 231, "337577608969": 231, "12515": 231, "989719275774": 231, "118605232565": 231, "12105": 231, "66676995079": 231, "11905": 231, "57769772355": 231, "795806966404": 231, "11515": 231, "266434777708": 231, "11324": 231, "935821754107": 231, "751097057026": 231, "10953": 231, "660263725988": 231, "10772": 231, "612184234678": 231, "55656628575": 231, "10419": 231, "44394884041": 231, "10247": 231, "225688378932": 231, "853945388253": 231, "9911": 231, "28167107291": 231, "9747": 231, "462594285626": 231, "35120867392": 231, "9427": 231, "90276003916": 231, "9272": 231, "073233904553": 231, "819343288618": 231, "8968": 231, "098516680744": 231, "8819": 231, "868886215503": 231, "08927604241": 231, "8530": 231, "71919088793": 231, "8389": 231, "718804806525": 231, "048950117636": 231, "8114": 231, "671106525522": 231, "7980": 231, "547390418928": 231, "640544347619": 231, "7718": 231, "913926672843": 231, "7591": 231, "331501388871": 231, "857828112756": 231, "7342": 231, "458052239555": 231, "7221": 231, "097895260277": 231, "743645239847": 231, "6984": 231, "362147452465": 231, "6868": 231, "920795171751": 231, "387520613102": 231, "6643": 231, "73078602578": 231, "6533": 231, "919574932211": 231, "923383512106": 231, "6319": 231, "712212128978": 231, "6215": 231, "2565569967155": 231, "527401983901": 231, "6011": 231, "4962105535815": 231, "5912": 231, "134917836275": 231, "41592283399": 231, "5718": 231, "312080753106": 231, "5623": 231, "796695463976": 231, "843512085165": 231, "5439": 231, "426709690258": 231, "5349": 231, "520894135215": 231, "101091004279": 231, "5174": 231, "142738672476": 231, "5088": 231, "621681482786": 231, "5141630360795": 231, "4921": 231, "796819591968": 231, "4840": 231, "446673578726": 231, "441127210483": 231, "4681": 231, "757956209913": 231, "4604": 231, "375303634687": 231, "271673805957": 231, "4453": 231, "425926337194": 231, "4379": 231, "817270261724": 231, "425258257325": 231, "4236": 231, "229780966288": 231, "4166": 231, "211061409347": 231, "349649491955": 231, "4029": 231, "6264166013475": 231, "3963": 231, "022550292922": 231, "519549064434": 231, "3833": 231, "0992172165743": 231, "3769": 231, "7436597984884": 231, "435277636844": 231, "3646": 231, "156762447059": 231, "3585": 231, "891092025331": 231, "62152552014": 231, "3468": 231, "331598781903": 231, "3411": 231, "0051197894927": 231, "626164152353": 231, "3299": 231, "1790706869506": 231, "3244": 231, "6484370663484": 231, "0191155416805": 231, "3138": 231, "2762087343485": 231, "3086": 231, "4050654977636": 231, "39127684749": 231, "2985": 231, "220671958657": 231, "2935": 231, "8793142295262": 231, "3534974101253": 231, "2839": 231, "6297417948676": 231, "2792": 231, "6947904781027": 231, "5356056715573": 231, "2701": 231, "139365082643": 231, "2656": 231, "493458352628": 231, "585483553675": 231, "2569": 231, "4032437437863": 231, "2526": 231, "9347435786813": 231, "1681859796818": 231, "2444": 231, "0919688566696": 231, "2403": 231, "6946818852084": 231, "9651033369364": 231, "2324": 231, "892196962347": 231, "2286": 231, "465108925094": 231, "673164786965": 231, "2211": 231, "505866542694": 231, "2174": 231, "9528897037794": 231, "004080430504": 231, "2103": 231, "64945271136": 231, "2068": 231, "8791855890913": 231, "6836204325875": 231, "053258253869": 231, "1967": 231, "978757069417": 231, "4509293051194": 231, "1903": 231, "4607392441064": 231, "1871": 231, "999300516772": 231, "057873632281": 231, "1810": 231, "627863550875": 231, "1780": 231, "7008172963083": 231, "2684216077428": 231, "1722": 231, "322500630456": 231, "1693": 231, "8550136447184": 231, "858052832207": 231, "1638": 231, "3238410793394": 231, "1611": 231, "2447298169145": 231, "6131968954603": 231, "1558": 231, "4218444956994": 231, "1532": 231, "6633970735522": 231, "3306993391054": 231, "1482": 231, "4167142689855": 231, "1457": 231, "9145211515845": 231, "8173136645962": 231, "1410": 231, "1183979843265": 231, "1386": 231, "811190926256": 231, "8892181163337": 231, "1341": [231, 472], "3461121925": 231, "1319": 231, "1756110359324": 231, "371556031529": 231, "1275": [231, 472], "927890357142": 231, "8386573010878": 231, "0979986074672": 231, "1213": [231, 472], "7001528488343": 231, "1193": 231, "6394538257623": 231, "910328992864": 231, "1154": 231, "5072979108252": 231, "4249707240265": 231, "6580466633259": 231, "1098": [231, 472], "2013125735887": 231, "1080": 231, "0496414655559": 231, "1979910916468": 231, "1044": 231, "6414025453034": 231, "1027": 231, "3749988834832": 231, "3939837719219": 231, "993": 231, "6936401527878": 231, "977": 231, "2693289343574": 231, "116487702349": 231, "945": [231, 449, 450], "230629452556": 231, "929": 231, "6073413444278": 231, "2422834752531": 231, "899": 231, "1311876746025": 231, "884": 231, "269856318699": 231, "6541611643837": 231, "855": [231, 472], "2800422023557": 231, "841": 231, "1435065293651": 231, "240627239048": 231, "813": 231, "5675423310933": 231, "1204536384406": 231, "8956257722093": 231, "8893850840661": 231, "761": 231, "0981186457441": 231, "5182732454278": 231, "736": 231, "1463544007277": 231, "723": 231, "9789253879673": 231, "0126062875165": 231, "2440730449028": 231, "688": 231, "6700565474415": 231, "2873417161278": 231, "666": 231, "0927666125389": 231, "083221560497": 231, "2556482822507": 231, "633": 231, "6070390489338": 231, "623": 231, "1344358450652": 231, "8349295468597": 231, "602": 231, "7056591141187": 231, "592": 231, "7438107954786": 231, "946617346795": 231, "3113572624467": 231, "563": 231, "8353540193432": 231, "5159753334299": 231, "545": 231, "3506324284805": 231, "536": 231, "3367793169763": 231, "4719120928706": 231, "518": [231, 469], "7535682360439": 231, "510": [231, 480, 497], "1793259282537": 231, "7468033803925": 231, "493": 231, "4536581708639": 231, "485": 231, "297586594895": 231, "2763230246037": 231, "469": 231, "38763927964294": 231, "6293440082474": 231, "99928207851065": 231, "446": 231, "49533397972345": 231, "1154152336073": 231, "857475815279": 231, "424": 231, "71949958378644": 231, "417": 231, "6995037220563": 231, "79553818609884": 231, "404": 231, "0056851633164": 231, "397": 231, "32805853976544": 231, "76080337622386": 231, "384": 231, "3020953929181": 231, "377": 231, "9501404627671": 231, "7031741130021": 231, "365": [231, 496, 497], "55946103502396": 231, "5172946023619": 231, "5749963965996": 231, "347": 231, "730915741137": 231, "341": 231, "98342924265836": 231, "3309403401795": 231, "330": 231, "77187886154803": 231, "325": 231, "30470058727457": 231, "9278868215729": 231, "314": 231, "6399439704902": 231, "309": 231, "4394031270103": 231, "32481966301435": 231, "299": 231, "29477282798626": 231, "3478653543504": 231, "4827230693327": 231, "6979945132373": 231, "99235056403234": 231, "3644840681409": 231, "81310947733414": 231, "33696249162665": 231, "9347997080737": 231, "60539827537343": 231, "3475555541783": 231, "16008878302074": 231, "04183474976068": 231, "9916494684637": 231, "00840786161962": 231, "09100344761393": 231, "23834803336453": 231, "44937141203894": 231, "72302106576774": 231, "05826187327173": 231, "45407582232153": 231, "90946172694996": 231, "42343494933826": 231, "9950271262994": 231, "62328590028196": 231, "3072746548203": 231, "0460722543573": 231, "8387727883674": 231, "68448531970904": 231, "5823336371363": 231, "53145601190127": 231, "53100495837955": 231, "58014699865194": 231, "67806243097752": 231, "8239451020935": 231, "01700218327844": 231, "2564539501171": 231, "54153356590524": 231, "87148686863443": 231, "24557216149793": 231, "6630600068588": 231, "1232330236239": 231, "62538568796646": 231, "168824137343": 231, "75286597774905": 231, "376840094161": 231, "04008646411086": 231, "74195597434252": 231, "48181024049825": 231, "2590214297857": 231, "0729720865758": 231, "92305496088336": 231, "80867283968264": 231, "72923838101093": 231, "6841739508143": 231, "67291146248994": 231, "69489221908069": 231, "74956675807786": 231, "8363946987892": 231, "95484459222969": 231, "10439377349338": 231, "28452821656539": 231, "49474239153352": 231, "73453912416011": 231, "00342945777481": 231, "30093251745022": 231, "62657537642234": 231, "97989292471904": 231, "36042773995985": 231, "76772996029123": 231, "20135715942207": 231, "66087422372465": 231, "1458532313669": 231, "65587333344256": 231, "19052063706592": 231, "74938809039895": 231, "33207536957875": 231, "93818876751384": 231, "56734108451857": 231, "21915152075523": 231, "89324557045377": 231, "58925491788006": 231, "30681733502358": 231, "04557658097625": 231, "80518230297425": 231, "5852899390756": 231, "3855606224463": 231, "20566108722848": 231, "04526357596436": 231, "90404574855043": 231, "78169059269652": 231, "67788633586468": 231, "59232635866378": 231, "524709109675456": 231, "47473802168787": 231, "44212142931405": 231, "426572487971846": 231, "42780909420303": 231, "445553807309395": 231, "47953377228414": 231, "52948064401705": 231, "595130512752434": 231, "6762238307792": 231, "772505340332586": 231, "88372400268758": 231, "009632928424324": 231, "14998930884614": 231, "304554348531106": 231, "473093198998455": 231, "65537489347139": 231, "85117228271813": 231, "06026197195349": 231, "28242425878327": 231, "51744307217448": 231, "765105912434144": 231, "02520379218029": 231, "29753117828854": 231, "58188593479824": 231, "87806926676231": 231, "185885665025125": 231, "50514285191318": 231, "835651727823354": 231, "17722631869406": 231, "529683724344586": 231, "892844067668285": 231, "266530444665584": 231, "65056887530283": 231, "0447882551834": 231, "44902030801758": 231, "86309953887809": 231, "286863188228196": 231, "720151186709685": 231, "16280611067811": 231, "61467313847302": 231, "07560000741092": 231, "545436971489103": 231, "02403675978859": 231, "51125453556459": 231, "006947856013127": 231, "510976632702697": 231, "0232030926599": 231, "543491740098297": 231, "071709318779803": 231, "60772477499822": 231, "15140922117459": 231, "702635900054243": 231, "26128014949566": 231, "827219367841284": 231, "400332979860703": 231, "980502403256782": 231, "567611015725358": 231, "161544122559402": 231, "762188924788653": 231, "369434487845833": 231, "98317171075079": 231, "60329329580395": 231, "22969371878073": 231, "862269199618563": 231, "50091767358844": 231, "145538762942934": 231, "796033749032855": 231, "452305544884766": 231, "11425866823175": 231, "78179921498995": 231, "454834833173496": 231, "133274697240584": 231, "817029482863564": 231, "506011342116068": 231, "200133879070233": 231, "899312125797277": 231, "603462518764754": 231, "312502875623924": 231, "026352372380792": 231, "744931520944483": 231, "468162147046698": 231, "195967368526144": 231, "928271573971884": 231, "665000401719672": 231, "406080719195467": 231, "151440602600356": 231, "901009316931257": 231, "65471729633185": 231, "412496124768287": 231, "174278517024296": 231, "939998300010405": 231, "70959039438211": 231, "482990796461856": 231, "260136560459829": 231, "04096578098861": 231, "825417575866835": 231, "61343206920708": 231, "4049503747833": 231, "199914579673152": 231, "998267728170703": 231, "799953805965037": 231, "604917724580364": 231, "413105306073309": 231, "224463267983134": 231, "038939208530717": 231, "85648159206216": 231, "677039734733": 231, "500563790429041": 231, "327004736919884": 231, "156314362241329": 231, "988445251302853": 231, "823350772716449": 231, "660985065843155": 231, "501303028053703": 231, "344260302199713": 231, "189813264291978": 231, "037919011382415": 231, "8885353496463": 231, "741620782661487": 231, "597134499881358": 231, "455036365298303": 231, "315286906294567": 231, "177847302677378": 231, "042679375895315": 231, "909745578432904": 231, "779008983380519": 231, "650433274176662": 231, "523982734519799": 231, "399622238446936": 231, "2773172405761795": 231, "157033766510577": 231, "038738403400564": 231, "922398290662404": 231, "807981110850034": 231, "695455080677793": 231, "584788942191524": 231, "475951954085609": 231, "368913883163518": 231, "263644995939509": 231, "160116050379128": 231, "058298287776241": 231, "958163424764315": 231, "859683645459748": 231, "762831593735054": 231, "667580365619763": 231, "573903501826923": 231, "481774980403128": 231, "391169209500033": 231, "302061020265338": 231, "214425659851281": 231, "128238784538686": 231, "043476452974666": 231, "960115119522089": 231, "878131627718975": 231, "797503203845994": 231, "718207450600287": 231, "640222340873852": 231, "563526211634756": 231, "488097757909492": 231, "41391602686479": 231, "340960411987252": 231, "26921064735919": 231, "198646802029072": 231, "129249274475016": 231, "060998787159803": 231, "9938763811758764": 231, "9278634109788597": 231, "8629415392081166": 231, "799092731592923": 231, "736299251942832": 231, "674543657220839": 231, "6138087926979816": 231, "5540777871880285": 231, "4953340483609274": 231, "437561258133721": 231, "3807433681376393": 231, "324864595260116": 231, "2699094172604903": 231, "2158625684581725": 231, "16270903549208": 231, "1104340531501613": 231, "059023100267855": 231, "008461895694339": 231, "958736394325451": 231, "909832783202182": 231, "8617374776736533": 231, "8144371176235166": 231, "7679185637587227": 231, "7221688939596342": 231, "677175399690466": 231, "6329255824690527": 231, "5894071503949685": 231, "5466080147350314": 231, "5045162865652446": 231, "46312027346824": 231, "42240847628531": 231, "3823695859221234": 231, "3429924802072355": 231, "304266220802527": 231, "2661800501647056": 231, "2287233885570292": 231, "1918858311104232": 231, "1556571449331723": 231, "120027266268384": 231, "0849862976984372": 231, "050524505395634": 231, "0166323164182973": 231, "983300316051559": 231, "9505192451921": 231, "9182799977761187": 231, "8865736182498085": 231, "8553912990816483": 231, "8247243783158082": 231, "7945643371659952": 231, "7649027976490685": 231, "7357315202577694": 231, "7070424016719148": 231, "6788274725074235": 231, "6510788951025472": 231, "623788961340692": 231, "5969500905092247": 231, "570554827193671": 231, "5445958392067187": 231, "519065915551453": 231, "493957964418254": 231, "4692650112148045": 231, "4449801966286588": 231, "4210967747218337": 231, "3976081110568934": 231, "3745076808540075": 231, "3517890671784707": 231, "3294459591581786": 231, "3074721502305686": 231, "2858615364185335": 231, "2646081146348338": 231, "2437059810145348": 231, "2231493292750055": 231, "202932449103026": 231, "1830497245685518": 231, "163495632564698": 231, "1442647412735059": 231, "125351708657072": 231, "1067512809736118": 231, "0884582913180554": 231, "0704676581867616": 231, "0527743840659567": 231, "0353735540435043": 231, "0182603344436203": 231, "0014299714841537": 231, "9848777899560616": 231, "9685991919247094": 231, "9525896554526379": 231, "9368447333434394": 231, "9213600519063979": 231, "9061313097415461": 231, "8911542765448047": 231, "8764247919328708": 231, "8619387642875291": 231, "8476921696190648": 231, "8336810504484629": 231, "819901514708083": 231, "8063497346605047": 231, "7930219458352421": 231, "7799144459830335": 231, "7670235940474153": 231, "7543458091532936": 231, "7418775696122341": 231, "7296154119441921": 231, "717555929915413": 231, "7056957735922338": 231, "6940316484105252": 231, "6825603142605129": 231, "6712785845867267": 231, "6601833255028258": 231, "6492714549210542": 231, "638539941696086": 231, "6279858047830206": 231, "6176061124092957": 231, "6073979812602874": 231, "5973585756783705": 231, "5874851068752177": 231, "5777748321571187": 231, "5682250541631025": 231, "5588331201156538": 231, "5495964210838126": 231, "540512391258455": 231, "5315785072395516": 231, "522792287335207": 231, "5141512908722848": 231, "5056531175184273": 231, "49729540661528093": 231, "4890758365227428": 231, "48099212397404556": 231, "47304202344150226": 231, "4652233265127339": 231, "45753386127720747": 231, "4499714917229135": 231, "44253411714301566": 231, "43521967155230756": 231, "4280261231133148": 231, "42095147357188234": 231, "anl116": [231, 472, 497], "6537697": 231, "6274275": 231, "6218850": 231, "351697544": 231, "5915553": 231, "441101317": 231, "906239426": 231, "2857411364": 231, "7229954517": 231, "554973645": 231, "4568689563": 231, "5156994597": 231, "525077637": 231, "1108109476": 231, "020443718": 231, "1779708627": 231, "8256124181": 231, "6092934117": 231, "1410094337": 231, "786023144": 231, "240596954": 231, "5378471944": 231, "2095266918": 231, "402896311": 231, "589498148": 231, "8354441144": 231, "6332739561": 231, "1064111372": 231, "5901762004": 231, "1889407014": 231, "041561591": 231, "6666300085": 231, "00850933883": 231, "02582542365": 231, "6613824635": 231, "6881752216": 231, "3529099923": 231, "8238826675": 231, "3867061898": 231, "21511643846": 231, "25623729423": 231, "71090121218": 231, "1075265877": 231, "3826155009": 231, "74834261613": 231, "1594503214": 231, "33420547794": 231, "12138510708": 231, "6657048521": 231, "96157835923": 231, "94906859845": 231, "46768357333": 231, "59462": 231, "17152855231": 231, "18219490133": 231, "7129852038": 231, "36065": 231, "630125158605": 231, "806875214144": 231, "28087": 231, "940983437173": 231, "52091786222": 231, "816969806983": 231, "540701229926": 231, "391414951673": 231, "79580696637": 231, "819343288591": 231, "743645239829": 231, "843512085152": 231, "271673805946": 231, "3496494919455": 231, "626164152345": 231, "2863": 231, "3921956869945": 231, "5854835536697": 231, "67316478696": 231, "0578736322766": 231, "6131968954567": 231, "8892181163303": 231, "910328992861": 231, "197991091644": 231, "1164877023464": 231, "9466173467932": 231, "5749963965986": 231, "45407582232093": 231, "07297208657542": 231, "89324557045354": 231, "85117228271798": 231, "023203092659816": 231, "6034625187647": 231, "67703973473297": 231, "4759519540855885": 231, "9278634109788495": 231, "3823695859221163": 231, "4449801966286546": 231, "8764247919328687": 231, "6825603142605112": 231, "5315785072395504": 231, "4174581204794743": 231, "anl2082": [231, 497], "14072910": 231, "740918182": 231, "13840305": 231, "98587266": 231, "13611545": 231, "84926222": 231, "13386566": 231, "785133518": 231, "13165306": 231, "297855437": 231, "12947702": 231, "924758783": 231, "12733696": 231, "21906293": 231, "000515476": 231, "12523226": 231, "733084654": 231, "139209779": 231, "12316236": 231, "00172451": 231, "12112666": 231, "52622615": 231, "051362116": 231, "11912461": 231, "758204073": 231, "724122155": 231, "11715566": 231, "08393538": 231, "11521924": 231, "808911161": 231, "11331484": 231, "142643223": 231, "47177621": 231, "11144191": 231, "183721935": 231, "10959993": 231, "905121064": 231, "10778841": 231, "13974548": 231, "10600682": 231, "566217747": 231, "10425468": 231, "694899643": 231, "10253150": 231, "854144713": 231, "10083681": 231, "17677806": 231, "9917012": 231, "586799596": 231, "9753098": 231, "786307078": 231, "9591894": 231, "242635274": 231, "9433354": 231, "175707716": 231, "9277434": 231, "545597494": 231, "831241596": 231, "9124092": 231, "040293664": 231, "870515306": 231, "8973284": 231, "063669859": 231, "8824968": 231, "723651748": 231, "8679104": 231, "82058009": 231, "8535651": 231, "835766109": 231, "8394569": 231, "920236053": 231, "841045519": 231, "8255819": 231, "88366177": 231, "8119363": 231, "1834742585": 231, "964455921": 231, "7985161": 231, "914157146": 231, "7853178": 231, "796717139": 231, "564028599": 231, "7723377": 231, "168328506": 231, "1213689605": 231, "7595720": 231, "972148723": 231, "306604108": 231, "7470174": 231, "747302454": 231, "953138133": 231, "7346703": 231, "619031079": 231, "475627829": 231, "7225273": 231, "289005034": 231, "860375435": 231, "7105850": 231, "025796281": 231, "6558801625": 231, "6988400": 231, "655508247": 231, "963545897": 231, "6872892": 231, "5525606405": 231, "428542491": 231, "6759293": 231, "630626581": 231, "230818101": 231, "6647572": 231, "333719523": 231, "07626008": 231, "627427502": 231, "188001966": 231, "6429638": 231, "990292265": 231, "297874156": 231, "6323366": 231, "405330891": 231, "637995887": 231, "351697546": 231, "932506185": 231, "6116061": 231, "796483063": 231, "3894315": 231, "6014972": 231, "186650052": 231, "692687742": 231, "44110132": 231, "99421453": 231, "5817777": 231, "942879387": 231, "906239429": 231, "5721618": 231, "531494929": 231, "493670069": 231, "5627048": 231, "495382027": 231, "266611998": 231, "5534041": 231, "564478107": 231, "173010206": 231, "5442571": 231, "902926542": 231, "591412279": 231, "5352614": 231, "101899854": 231, "323851162": 231, "5264143": 231, "172541541": 231, "588845559": 231, "5177134": 231, "539024571": 231, "014516038": 231, "5091564": 231, "031724604": 231, "631814896": 231, "5007407": 231, "880506052": 231, "867867946": 231, "4924642": 231, "708119111": 231, "539426337": 231, "4843245": 231, "5237059295": 231, "84642662": 231, "4763193": 231, "716414112": 231, "4684465": 231, "049115779": 231, "044529754": 231, "4607037": 231, "65223045": 231, "19495291": 231, "4530890": 231, "017650012": 231, "4456000": 231, "992764112": 231, "944524284": 231, "4382349": 231, "774584292": 231, "93625093": 231, "4309915": 231, "903965252": 231, "17312719": 231, "4238679": 231, "259921618": 231, "701145862": 231, "4168620": 231, "054038651": 231, "896110471": 231, "4099718": 231, "8249753416": 231, "45818398": 231, "4031956": 231, "4330583527": 231, "4065276": 231, "3965314": 231, "054965321": 231, "0740282116": 231, "3899773": 231, "1784960376": 231, "1021129386": 231, "3835315": 231, "5974300485": 231, "435649422": 231, "3771923": 231, "406469255": 231, "317930393": 231, "3709578": 231, "9962641066": 231, "2857411387": 231, "3648265": 231, "048521998": 231, "164508497": 231, "3587964": 231, "531196523": 231, "0635300307": 231, "3528660": 231, "6937562427": 231, "371282059": 231, "3470337": 231, "0625316496": 231, "750805237": 231, "3412977": 231, "4361390434": 231, "135166406": 231, "3356565": 231, "880980042": 231, "722995455": 231, "3301086": 231, "72681548": 231, "974095947": 231, "3246524": 231, "5624124645": 231, "6051283022": 231, "3192864": 231, "2312633772": 231, "585364322": 231, "3140090": 231, "8273756346": 231, "132511894": 231, "3088189": 231, "691131041": 231, "7086087046": 231, "3037146": 231, "4052135767": 231, "0159838195": 231, "2986946": 231, "790604496": 231, "9932860206": 231, "2937576": 231, "902643618": 231, "8115777816": 231, "2889023": 231, "0271557234": 231, "870493809": 231, "2841271": 231, "6766409697": 231, "794463076": 231, "2794309": 231, "5865282794": 231, "4289932977": 231, "2748123": 231, "7114906497": 231, "837016823": 231, "2702701": 231, "2218213687": 231, "295296921": 231, "2658029": 231, "4998701233": 231, "290893466": 231, "2614096": 231, "136538017": 231, "517687043": 231, "2570888": 231, "9278305173": 231, "872960498": 231, "2528395": 231, "8714673785": 231, "4540369967": 231, "2486605": 231, "1635485985": 231, "554973649": 231, "2445505": 231, "1952754813": 231, "663309782": 231, "2405084": 231, "549725896": 231, "45686896": 231, "2365331": 231, "9986828375": 231, "800613866": 231, "2326236": 231, "4995154026": 231, "743553159": 231, "2287787": 231, "1921113236": 231, "515699464": 231, "2249973": 231, "3958601994": 231, "525077641": 231, "2212784": 231, "606686592": 231, "3547825003": 231, "2176210": 231, "494132159": 231, "7600851487": 231, "2140240": 231, "8984860145": 231, "66558717": 231, "2104865": 231, "8279625257": 231, "1624218347": 231, "2070075": 231, "4559257478": 231, "5055015746": 231, "2035860": 231, "1181597428": 231, "1108109518": 231, "2002210": 231, "3101840124": 231, "55274437": 231, "1969116": 231, "6846133024": 231, "5614877897": 231, "1936570": 231, "048561048": 231, "0204437221": 231, "1904561": 231, "3610857343": 231, "9636987797": 231, "1873081": 231, "7306794657": 231, "5735330891": 231, "1842122": 231, "4127980457": 231, "177970867": 231, "1811674": 231, "8074318797": 231, "2483714817": 231, "1781730": 231, "4567170294": 231, "397060333": 231, "1752281": 231, "0425857515": 231, "374998887": 231, "1723318": 231, "3844558687": 231, "0694932244": 231, "1694834": 231, "4369583344": 231, "5019404618": 231, "1666821": 231, "2877023558": 231, "825612422": 231, "1639271": 231, "1550774565": 231, "323475937": 231, "1612176": 231, "3860918684": 231, "4060491775": 231, "1585529": 231, "4542466511": 231, "6092934154": 231, "1559322": 231, "9574449498": 231, "5925396318": 231, "1533549": 231, "615935809": 231, "1364493936": 231, "1508202": 231, "2702919734": 231, "1410094374": 231, "1483273": 231, "8794211112": 231, "6235593962": 231, "1458757": 231, "5186099107": 231, "7168521276": 231, "1434646": 231, "377600504": 231, "667146101": 231, "1410933": 231, "758698685": 231, "832329314": 231, "1387613": 231, "074913395": 231, "6800742194": 231, "1364677": 231, "8481269616": 231, "7860231474": 231, "1342121": 231, "7072955794": 231, "8320037213": 231, "1319938": 231, "3866795348": 231, "6042737672": 231, "1298121": 231, "7241026824": 231, "9917952365": 231, "1276665": 231, "6592406898": 231, "9845366548": 231, "1255564": 231, "231937575": 231, "6718036304": 231, "1234811": 231, "5805500692": 231, "2405969573": 231, "1214401": 231, "940319346": 231, "9739978546": 231, "1194329": 231, "6417696604": 231, "2495798978": 231, "1174589": 231, "1091334594": 231, "5378471974": 231, "1155174": 231, "8588025218": 231, "400698392": 231, "1136081": 231, "4978046978": 231, "4899160292": 231, "1117303": 231, "7223058268": 231, "5456809162": 231, "1098836": 231, "3161364163": 231, "3951110246": 231, "1080674": 231, "1493426717": 231, "9508245452": 231, "1062812": 231, "1767614773": 231, "2095266946": 231, "1045245": 231, "4366189281": 231, "2506198772": 231, "1027969": 231, "0491520285": 231, "2348368228": 231, "1010978": 231, "2152531712": 231, "4028963136": 231, "994268": 231, "2151370203": 231, "0741811311": 231, "977834": 231, "4070294301": 231, "6454378547": 231, "961672": 231, "225878033": 231, "5894981504": 231, "945777": 231, "18208414": 231, "4540211952": 231, "930144": 231, "8602556018": 231, "8602568869": 231, "914770": 231, "9179802819": 231, "5018294967": 231, "899651": 231, "0846198035": 231, "1435414259": 231, "884781": 231, "1601232332": 231, "6201967347": 231, "870157": 231, "0138603735": 231, "8354441167": 231, "855774": 231, "5834743389": 231, "7606389975": 231, "841629": 231, "8737530973": 231, "4337244405": 231, "827718": 231, "9555196629": 231, "95813055": 231, "814037": 231, "9645406336": 231, "5016920659": 231, "800583": 231, "1004527673": 231, "2955838485": 231, "787350": 231, "6257073012": 231, "6332739583": 231, "774336": 231, "8645317197": 231, "8694940406": 231, "761538": 231, "2019086833": 231, "4192267265": 231, "748951": 231, "0825718333": 231, "7567097726": 231, "736572": 231, "0100181953": 231, "4144566593": 231, "724397": 231, "5455369055": 231, "9822933782": 231, "712424": 231, "3072539918": 231, "1064111395": 231, "700648": 231, "9691929421": 231, "4884347367": 231, "689068": 231, "2603508006": 231, "8845063105": 231, "677678": 231, "9637895346": 231, "1043842555": 231, "666477": 231, "9157424208": 231, "0105570226": 231, "655462": 231, "0047352002": 231, "5173715671": 231, "644628": 231, "1707217593": 231, "5901762027": 231, "633973": 231, "4042340985": 231, "2444776241": 231, "623494": 231, "7455463487": 231, "5451118611": 231, "613189": 231, "283852607": 231, "605428937": 231, "603054": 231, "1564583599": 231, "5864910025": 231, "593086": 231, "5479852724": 231, "6962837233": 231, "583283": 231, "6895891203": 231, "1889407035": 231, "573642": 231, "8581906492": 231, "3639807262": 231, "564161": 231, "3757191458": 231, "5655576034": 231, "554836": 231, "608368512": 231, "1817224232": 231, "545665": 231, "965865636": 231, "643697992": 231, "536646": 231, "9007508542": 231, "4251652687": 231, "527776": 231, "9076703079": 231, "04156159307": 231, "519053": 231, "52267999534": 231, "0493905135": 231, "510474": 231, "32256132696": 231, "04554302245": 231, "502036": 231, "9241479935": 231, "66663001047": 231, "493738": 231, "98366396024": 231, "5883257542": 231, "485578": 231, "1960724028": 231, "5247222554": 231, "477552": 231, "2944354044": 231, "22769425163": 231, "469659": 231, "0492842363": 231, "4862747227": 231, "461896": 231, "26800004655": 231, "12604071887": 231, "454261": 231, "79420478526": 231, "0085093406": 231, "446753": 231, "50716219656": 231, "03054370167": 231, "439369": 231, "32118871185": 231, "123768711": 231, "432107": 231, "1850740796": 231, "25399651076": 231, "424965": 231, "0815115718": 231, "4206614111": 231, "417941": 231, "0265376077": 231, "6562641643": 231, "411033": 231, "06898064027": 231, "0258254252": 231, "404239": 231, "28991915146": 231, "62634824385": 231, "397557": 231, "8021486062": 231, "5862894433": 231, "390986": 231, "7496572168": 231, "0650397345": 231, "384524": 231, "30711037177": 231, "2524124238": 231, "378168": 231, "6793435874": 231, "3681405722": 231, "371918": 231, "100863839": 231, "661382465": 231, "365770": 231, "8353591347": 231, "4102352554": 231, "359725": 231, "1752161957": 231, "92125664745": 231, "353779": 231, "4410461081": 231, "5289944844": 231, "347931": 231, "98121781513": 231, "5955241124": 231, "342181": 231, "17139932036": 231, "50999339076": 231, "336525": 231, "4141064737": 231, "68817522295": 231, "330963": 231, "1382592155": 231, "572027483": 231, "325492": 231, "7987451556": 231, "6292602163": 231, "320112": 231, "87599036534": 231, "3529099935": 231, "314821": 231, "87553726375": 231, "2609212998": 231, "309618": 231, "3276294811": 231, "8957348434": 231, "304500": 231, "7868035836": 231, "8238826686": 231, "299467": 231, "83148754673": 231, "6355899612": 231, "294518": 231, "06360586477": 231, "9443834348": 231, "289650": 231, "10819118744": 231, "3867061909": 231, "284862": 231, "61300237593": 231, "6215389441": 231, "280154": 231, "24814887147": 231, "33002750826": 231, "275523": 231, "7057212728": 231, "2151164395": 231, "270969": 231, "6994280197": 231, "00118873484": 231, "266490": 231, "96423808124": 231, "43371148565": 231, "262086": 231, "25602955045": 231, "2788873886": 231, "257754": 231, "35124404664": 231, "3233120159": 231, "253494": 231, "0465468304": 231, "3736367511": 231, "249304": 231, "15849253605": 231, "25623729522": 231, "245183": 231, "5231964294": 231, "81688765285": 231, "241130": 231, "99601109867": 231, "9204395062": 231, "237145": 231, "4512084899": 231, "4505068889": 231, "233225": 231, "781667197": 231, "30915607154": 231, "229370": 231, "8985649214": 231, "41660057305": 231, "225579": 231, "731076014": 231, "7109012131": 231, "221851": 231, "226074017": 231, "14767112216": 231, "218184": 231, "34783912182": 231, "69978562725": 231, "214578": 231, "0777704626": 231, "35709693303": 231, "211031": 231, "41410316498": 231, "12615351862": 231, "207543": 231, "37163007146": 231, "02992417247": 231, "204112": 231, "98142806662": 231, "10752658854": 231, "200739": 231, "29058892548": 231, "41396044835": 231, "197421": 231, "36195461068": 231, "01984491482": 231, "194158": 231, "27385694472": 231, "01116046496": 231, "190949": 231, "11986158518": 231, "4889949897": 231, "187793": 231, "00851623146": 231, "56929409018": 231, "184689": 231, "06310299356": 231, "38261550164": 231, "181636": 231, "42139485353": 231, "07388757583": 231, "178634": 231, "23541615254": 231, "80217175576": 231, "175681": 231, "67120703662": 231, "74042897622": 231, "172777": 231, "9085917957": 231, "07528992536": 231, "169922": 231, "14095103185": 231, "00682910357": 231, "167113": 231, "5749975931": 231, "7483426168": 231, "164351": 231, "43055621078": 231, "52612964268": 231, "161634": 231, "9403467792": 231, "57927750854": 231, "158963": 231, "34977121736": 231, "159450322": 231, "156335": 231, "9167038534": 231, "53068109506": 231, "153751": 231, "911285274": 231, "969167304": 231, "151210": 231, "61571958076": 231, "76306982856": 231, "148711": 231, "324074998": 231, "2123152143": 231, "146253": 231, "342087776": 231, "62840120317": 231, "143835": 231, "9869693354": 231, "33420547846": 231, "141458": 231, "58721659955": 231, "66379757095": 231, "139120": 231, "48242546123": 231, "96225387393": 231, "136821": 231, "02310733314": 231, "58547571578": 231, "134559": 231, "57050873004": 231, "90001043957": 231, "132335": 231, "4964338332": 231, "28287543976": 231, "130148": 231, "18306998744": 231, "12138510762": 231, "127997": 231, "02281608258": 231, "8129806368": 231, "125881": 231, "41811377148": 231, "76506264199": 231, "123800": 231, "78128147773": 231, "39482654422": 231, "121754": 231, "53435114698": 231, "12910067689": 231, "119742": 231, "10890769659": 231, "40418706778": 231, "117762": 231, "94593111883": 231, "6657048526": 231, "115816": 231, "49564119396": 231, "3684362768": 231, "113902": 231, "21734477005": 231, "97617524266": 231, "112019": 231, "57928556686": 231, "96157835971": 231, "110168": 231, "05849646238": 231, "80601845705": 231, "108347": 231, "14065422086": 231, "99944051693": 231, "106556": 231, "31993662186": 231, "04021998953": 231, "104795": 231, "09888195091": 231, "43502344954": 231, "103062": 231, "98825081241": 231, "69867155596": 231, "101359": 231, "50689022677": 231, "35400427695": 231, "99684": 231, "18159997358": 231, "93174834226": 231, "98036": 231, "54700114416": 231, "97038688659": 231, "96416": 231, "14540686659": 231, "01603124742": 231, "94822": 231, "52669516756": 231, "62229488199": 231, "93255": 231, "24818393558": 231, "3501693681": 231, "91713": 231, "87450795088": 231, "76790245454": 231, "90197": 231, "97749794782": 231, "4508781271": 231, "88707": 231, "13606167628": 231, "98149865701": 231, "87240": 231, "9360669288": 231, "94906859883": 231, "85798": 231, "97022650126": 231, "94968070573": 231, "84380": 231, "83798505487": 231, "58610373047": 231, "82986": 231, "14540784826": 231, "46767208085": 231, "81614": 231, "50507130868": 231, "21017729891": 231, "80265": 231, "53595541172": 231, "43576133398": 231, "78938": 231, "86333784008": 231, "77281157959": 231, "77634": 231, "11868989158": 231, "8558576454": 231, "76350": 231, "93957410767": 231, "32546983528": 231, "75088": 231, "96954359414": 231, "82815930349": 231, "73847": 231, "85804300568": 231, "01627986094": 231, "72627": 231, "26031116722": 231, "54793140467": 231, "71426": 231, "83728530469": 231, "08686494333": 231, "70246": 231, "25550685872": 231, "30238919255": 231, "69085": 231, "18702885516": 231, "86927871416": 231, "67943": 231, "30932480653": 231, "46768357363": 231, "66820": 231, "30519911934": 231, "78304049085": 231, "65715": 231, "86269898208": 231, "505985459415": 231, "64629": 231, "6750277097": 231, "33226781019": 231, "63561": 231, "440459520345": 231, "962665695275": 231, "62510": 231, "862255720655": 231, "102902968894": 231, "61477": 231, "648582276466": 231, "46356744213": 231, "60461": 231, "51242874593": 231, "760030488804": 231, "17152855256": 231, "71236798014": 231, "58479": 231, "34828057598": 231, "045282526225": 231, "57512": 231, "76967203876": 231, "48802700278": 231, "56562": 231, "16720266779": 231, "77432934188": 231, "55627": 231, "276810109106": 231, "64231856577": 231, "54707": 231, "838796575554": 231, "83445204322": 231, "53803": 231, "59775670685": 231, "09744394831": 231, "52914": 231, "30250662201": 231, "18219490156": 231, "52039": 231, "7060141444": 231, "843722774094": 231, "51179": 231, "56533018017": 231, "84109463548": 231, "50333": 231, "64152123075": 231, "937359826334": 231, "49501": 231, "699603020934": 231, "8994841372": 231, "48683": 231, "508475223985": 231, "4982850753": 231, "47878": 231, "84085726557": 231, "50836820129": 231, "47087": 231, "47322518883": 231, "70806451822": 231, "46309": 231, "185749562945": 231, "87936889539": 231, "45543": 231, "762234418005": 231, "80787950996": 231, "44790": 231, "990057189156": 231, "28273828953": 231, "44050": 231, "660109653436": 231, "096572339084": 231, "43322": 231, "5667398428": 231, "04543633608": 231, "42606": 231, "50769491725": 231, "928755877656": 231, "41902": 231, "2840649822": 231, "54927176423": 231, "41209": 231, "700227834444": 231, "712985204": 231, "40528": 231, "56379462138": 231, "22910392317": 231, "39858": 231, "68555639846": 231, "909989166845": 231, "39199": 231, "8794315699": 231, "57110357595": 231, "38551": 231, "96241419817": 231, "03095992569": 231, "37914": 231, "75452316783": 231, "11107071121": 231, "37288": 231, "07875218962": 231, "63589856665": 231, "36671": 231, "76102063089": 231, "432807503596": 231, "63012515878": 231, "332014955544": 231, "35469": 231, "51769218263": 231, "16654461499": 231, "34883": 231, "25813108243": 231, "77218005003": 231, "34306": 231, "6885882104": 231, "98741908763": 231, "33739": 231, "64890165278": 231, "65342895089": 231, "33181": 231, "981556739396": 231, "6140021378": 231, "32633": 231, "53164228859": 231, "715513029256": 231, "32094": 231, "14680757532": 231, "806875214297": 231, "31563": 231, "677220010522": 231, "739499520678": 231, "31041": 231, "975523520017": 231, "36725273915": 231, "30528": 231, "896797611298": 231, "546417029964": 231, "30024": 231, "298517116906": 231, "135650000324": 231, "29528": 231, "0405126032": 231, "99594544169": 231, "29039": 231, "984931433486": 231, "99059471607": 231, "28559": 231, "996199474757": 231, "985148780503": 231, "94098343731": 231, "84738083924": 231, "27623": 231, "688153836883": 231, "447249613244": 231, "27167": 231, "108748568953": 231, "656863216747": 231, "26718": 231, "075937085094": 231, "350443630934": 231, "26276": 231, "464985161452": 231, "404291764775": 231, "25842": 231, "153220249562": 231, "69675309338": 231, "25415": 231, "019997399828": 231, "108183864293": 231, "24994": 231, "94666574829": 231, "520917862345": 231, "24581": 231, "816535557264": 231, "819233723832": 231, "24175": 231, "51484580078": 231, "88932279097": 231, "23775": 231, "92873228579": 231, "61925749761": 231, "23382": 231, "947196300272": 231, "898960277562": 231, "22996": 231, "461073779545": 231, "620172986768": 231, "22616": 231, "363004982202": 231, "6764268309": 231, "22242": 231, "54740466729": 231, "963012790027": 231, "21874": 231, "910432764384": 231, "37695253207": 231, "21513": 231, "349965528454": 231, "816969807085": 231, "21157": 231, "765567171515": 231, "183462314293": 231, "20808": 231, "05846196313": 231, "378474034136": 231, "20464": 231, "131506792088": 231, "305668017663": 231, "20125": 231, "889164181583": 231, "87029962562": 231, "19793": 231, "2374757504": 231, "979190209913": 231, "19466": 231, "084036112767": 231, "54070123002": 231, "19144": 231, "337967209605": 231, "464708797277": 231, "18827": 231, "90989306402": 231, "66257863987": 231, "18516": 231, "711914954085": 231, "047141481642": 231, "18210": 231, "65758699596": 231, "532668827847": 231, "17909": 231, "661892130585": 231, "034849151118": 231, "17613": 231, "641218507288": 231, "470764471065": 231, "17322": 231, "51333625773": 231, "758867320958": 231, "17036": 231, "197374653748": 231, "818958095148": 231, "16754": 231, "613799642746": 231, "57216277086": 231, "16477": 231, "684391754385": 231, "940910998253": 231, "16205": 231, "33222437246": 231, "8489145526": 231, "15937": 231, "48164236589": 231, "221146142609": 231, "15674": 231, "058241072922": 231, "983818569044": 231, "15414": 231, "988845632692": 231, "064364227796": 231, "15160": 231, "2014906584": 231, "39141495175": 231, "14909": 231, "62540024647": 231, "894782185844": 231, "14663": 231, "190968316112": 231, "505437489779": 231, "14420": 231, "829739273857": 231, "155493363029": 231, "14182": 231, "474388997678": 231, "77818438675": 231, "13948": 231, "058706135404": 231, "307848677407": 231, "13717": 231, "517573712254": 231, "679909646939": 231, "13490": 231, "786951042377": 231, "830858064406": 231, "13267": 231, "803855939354": 231, "69823441412": 231, "13048": 231, "506347220738": 231, "220611545385": 231, "12832": 231, "833507501784": 231, "337577609": 231, "12620": 231, "725426273546": 231, "989719275804": 231, "12412": 231, "123183260697": 231, "118605232594": 231, "12206": 231, "968832054401": 231, "66676995082": 231, "12005": 231, "205384015715": 231, "577697723578": 231, "11806": 231, "776792445045": 231, "795806966433": 231, "11611": 231, "627937013262": 231, "266434777735": 231, "11419": 231, "704608450142": 231, "935821754134": 231, "11230": 231, "953493485886": 231, "751097057053": 231, "11045": 231, "322160041538": 231, "660263726015": 231, "10862": 231, "75904266418": 231, "612184234706": 231, "10683": 231, "213428202862": 231, "556566285775": 231, "10506": 231, "635441721295": 231, "443948840435": 231, "10332": 231, "976032643373": 231, "225688378958": 231, "10162": 231, "186961127709": 231, "85394538828": 231, "220784667354": 231, "281671072937": 231, "9829": 231, "03084491103": 231, "462594285653": 231, "9666": 231, "571254702174": 231, "351208673947": 231, "9506": 231, "796885332204": 231, "902760039186": 231, "9349": 231, "663354004486": 231, "073233904577": 231, "9195": 231, "127011505492": 231, "819343288642": 231, "9043": 231, "144930079732": 231, "098516680768": 231, "8893": 231, "674891505103": 231, "868886215525": 231, "8746": 231, "67537536534": 231, "089276042432": 231, "8602": 231, "105547516292": 231, "719190887952": 231, "8459": 231, "925248742848": 231, "718804806545": 231, "8320": 231, "094983603336": 231, "048950117656": 231, "8182": 231, "57590945832": 231, "671106525542": 231, "8047": 231, "329825680718": 231, "547390418948": 231, "7914": 231, "31916304428": 231, "640544347639": 231, "7783": 231, "506973287444": 231, "913926672863": 231, "7654": 231, "8569188497": 231, "331501388891": 231, "7528": 231, "333262777583": 231, "857828112776": 231, "7403": 231, "90085879751": 231, "4580522395745": 231, "7281": 231, "525141552709": 231, "097895260295": 231, "7161": 231, "172117001502": 231, "743645239865": 231, "7042": 231, "808352974297": 231, "362147452483": 231, "6926": 231, "400969886663": 231, "920795171768": 231, "6811": 231, "917631605898": 231, "38752061312": 231, "6699": 231, "326536468562": 231, "730786025797": 231, "6588": 231, "596408446479": 231, "919574932228": 231, "6479": 231, "696488458745": 231, "923383512123": 231, "6372": 231, "596525827352": 231, "712212128995": 231, "6267": 231, "266769874014": 231, "256556996733": 231, "6163": 231, "67796165591": 231, "527401983918": 231, "6061": 231, "8013258380015": 231, "496210553598": 231, "5961": 231, "608562699707": 231, "134917836292": 231, "5863": 231, "071840273685": 231, "415922834007": 231, "5766": 231, "1637866145475": 231, "312080753122": 231, "5670": 231, "857482195372": 231, "796695463991": 231, "5577": 231, "1264524298795": 231, "84351208518": 231, "5484": 231, "944660318213": 231, "426709690272": 231, "5394": 231, "286499214271": 231, "52089413523": 231, "5305": 231, "126785712583": 231, "101091004294": 231, "5217": 231, "440752652759": 231, "142738672492": 231, "5131": 231, "204042239564": 231, "621681482801": 231, "5046": 231, "392699276705": 231, "514163036094": 231, "4962": 231, "983164512457": 231, "796819591983": 231, "4880": 231, "952268095278": 231, "44667357874": 231, "4800": 231, "277223137584": 231, "441127210496": 231, "4720": 231, "935619385917": 231, "757956209926": 231, "4642": 231, "905416995726": 231, "375303634701": 231, "4566": 231, "164940409049": 231, "271673805971": 231, "4490": 231, "692872333388": 231, "425926337207": 231, "4416": 231, "468247820092": 231, "817270261737": 231, "4343": 231, "4704484406375": 231, "425258257338": 231, "4271": 231, "6791965591465": 231, "2297809663005": 231, "4201": 231, "074549699582": 231, "21106140936": 231, "4131": 231, "636895006046": 231, "349649491967": 231, "4063": 231, "346943794629": 231, "62641660136": 231, "3996": 231, "18572619533": 231, "0225502929343": 231, "3930": 231, "134585882518": 231, "5195490644464": 231, "3865": 231, "1751748925003": 231, "099217216586": 231, "3801": 231, "289448526752": 231, "7436597985": 231, "3738": 231, "4596603393798": 231, "435277636856": 231, "3676": 231, "66835720744": 231, "156762447071": 231, "3615": 231, "898374482739": 231, "891092025343": 231, "3556": 231, "132831223763": 231, "6215255201514": 231, "3497": 231, "355125506419": 231, "331598781914": 231, "3439": 231, "5489298122834": 231, "005119789504": 231, "3382": 231, "6981864930754": 231, "6261641523643": 231, "3326": 231, "7871033100937": 231, "1790706869615": 231, "3271": 231, "8001490473853": 231, "648437066359": 231, "3217": 231, "7220491974167": 231, "019115541691": 231, "3164": 231, "537781718058": 231, "276208734359": 231, "3112": 231, "2325728596948": 231, "405065497774": 231, "3060": 231, "7918930613173": 231, "3912768475006": 231, "3010": 231, "2014529144344": 231, "220671958667": 231, "2960": 231, "447199193704": 231, "8793142295362": 231, "2911": 231, "515310953168": 231, "353497410136": 231, "3921956870113": 231, "6297417948786": 231, "2816": 231, "0644855537785": 231, "694790478113": 231, "2769": 231, "519033663": 231, "5356056715677": 231, "2723": 231, "742910423192": 231, "1393650826535": 231, "2678": 231, "72339995022": 231, "493458352638": 231, "2634": 231, "447996535029": 231, "585483553685": 231, "2590": 231, "9044011697524": 231, "4032437437963": 231, "2548": 231, "080518131244": 231, "9347435786913": 231, "2505": 231, "9644516210747": 231, "1681859796918": 231, "2464": 231, "544502461071": 231, "091968856679": 231, "2423": 231, "8091648434643": 231, "694681885218": 231, "2383": 231, "747123134762": 231, "9651033369455": 231, "2344": 231, "347248732443": 231, "892196962356": 231, "2305": 231, "598596973605": 231, "465108925103": 231, "2267": 231, "4904040947126": 231, "6731647869738": 231, "012084241594": 231, "5058665427027": 231, "2193": 231, "1532265288556": 231, "9528897037876": 231, "2156": 231, "903592147905": 231, "004080430512": 231, "2121": 231, "2531115227694": 231, "649452711368": 231, "2086": 231, "191881512928": 231, "8791855890995": 231, "710162662375": 231, "6836204325955": 231, "2017": [231, 469], "798376494153": 231, "0532582538767": 231, "447102849604": 231, "9787570694248": 231, "1951": 231, "647077271597": 231, "450929305127": 231, "1919": 231, "389188431008": 231, "4607392441137": 231, "1887": 231, "664475595738": 231, "9993005167792": 231, "1856": 231, "4641261415616": 231, "057873632288": 231, "1825": 231, "7794731041204": 231, "627863550882": 231, "1795": 231, "601992771376": 231, "700817296315": 231, "1765": 231, "9233023158586": 231, "2684216077496": 231, "1736": 231, "7351574660493": 231, "3225006304629": 231, "1708": 231, "0294502162512": 231, "855013644725": 231, "1679": 231, "7982065743147": 231, "8580528322134": 231, "1652": 231, "0335843465868": 231, "3238410793458": 231, "1624": 231, "7278709594757": 231, "2447298169209": 231, "1597": 231, "873481317017": 231, "6131968954664": 231, "1571": 231, "4629556938557": 231, "4218444957055": 231, "1545": 231, "4889576630526": 231, "6633970735584": 231, "1519": 231, "9442720581387": 231, "3306993391116": 231, "1494": 231, "8218029688578": 231, "4167142689914": 231, "1470": 231, "114571770034": 231, "9145211515904": 231, "1445": 231, "81571518302": 231, "817313664602": 231, "1421": 231, "9184833691863": 231, "1183979843322": 231, "1398": 231, "4162380549233": 231, "8111909262616": 231, "1375": 231, "3024506876327": 231, "8892181163394": 231, "1352": 231, "5707006221996": 231, "3461121925054": 231, "1330": 231, "2146733374384": 231, "175611035938": 231, "1308": 231, "2281586820186": 231, "3715560315343": 231, "1286": 231, "6050491493825": 231, "9278903571471": 231, "1265": [231, 472], "3393381811768": 231, "8386573010928": 231, "1244": 231, "4251184987252": 231, "0979986074722": 231, "8565804620798": 231, "700152848839": 231, "1203": 231, "628010456195": 231, "639453825767": 231, "1183": [231, 472], "7337893037752": 231, "9103289928687": 231, "1164": 231, "168390704356": 231, "5072979108297": 231, "1144": 231, "9263796991856": 231, "424970724031": 231, "1126": [231, 472], "0024111614794": 231, "6580466633302": 231, "1107": 231, "3912283116267": 231, "2013125735928": 231, "1089": 231, "0876612569423": 231, "04964146556": 231, "1071": 231, "0866255555504": 231, "1979910916511": 231, "1053": 231, "3831208040076": 231, "6414025453075": 231, "1035": [231, 472], "9722292482697": 231, "374998883487": 231, "1018": 231, "8491144176178": 231, "3939837719256": 231, "1002": 231, "0090197811621": 231, "6936401527915": 231, "985": 231, "4472674265535": 231, "2693289343612": 231, "969": 231, "1592567605328": 231, "1164877023526": 231, "953": 231, "1404632309594": 231, "2306294525595": 231, "937": 231, "3864370699616": 231, "6073413444313": 231, "921": 231, "8928020578613": 231, "2422834752565": 231, "906": 231, "6552543075295": 231, "1311876746058": 231, "6695610688344": 231, "2698563187022": 231, "876": 231, "9315595528501": 231, "6541611643869": 231, "4371557754998": 231, "2800422023588": 231, "848": 231, "1823234203116": 231, "1435065293682": 231, "834": 231, "1631027199712": 231, "2406272390509": 231, "820": 231, "3755993563614": 231, "5675423310962": 231, "806": 231, "8159833787815": 231, "1204536384436": 231, "793": 231, "4804881400484": 231, "8956257722123": 231, "780": 231, "3654092501802": 231, "8893850840691": 231, "767": 231, "4671035473762": 231, "098118645747": 231, "754": 231, "7819880860039": 231, "5182732454308": 231, "742": 231, "3065391413131": 231, "1463544007306": 231, "730": 231, "0372912306007": 231, "9789253879702": 231, "717": 231, "9708361505544": 231, "0126062875195": 231, "706": 231, "1038220305081": 231, "2440730449057": 231, "694": 231, "4329524013444": 231, "6700565474443": 231, "682": 231, "9549852797884": 231, "2873417161306": 231, "671": 231, "6667322678348": 231, "0927666125416": 231, "5650576670627": 231, "0832215604997": 231, "649": 231, "6468776075868": 231, "2556482822534": 231, "638": 231, "9091591914078": 231, "6070390489365": 231, "628": 231, "3489196499211": 231, "134435845068": 231, "9632255153506": 231, "8349295468624": 231, "607": 231, "749191805878": 231, "7056591141214": 231, "597": [231, 478, 483, 484], "70398122424": 231, "7438107954813": 231, "587": 231, "8248033695721": 231, "9466173467978": 231, "578": 231, "1089139622795": 231, "3113572624493": 231, "568": 231, "5536140817194": 231, "8353540193458": 231, "559": 231, "1562494164834": 231, "5159753334324": 231, "549": 231, "914209527072": 231, "350632428483": 231, "540": [231, 472], "8249271207551": 231, "3367793169787": 231, "531": 231, "8858773384193": 231, "471912092873": 231, "523": 231, "0945770532018": 231, "7535682360462": 231, "514": 231, "4485841807165": 231, "1793259282561": 231, "505": 231, "945497000682": 231, "74680338039485": 231, "497": 231, "5829534897615": 231, "45365817086616": 231, "489": 231, "35863066543": 231, "2975865948972": 231, "481": 231, "2702439406864": 231, "27632302460586": 231, "31554648943137": 231, "3876392796451": 231, "465": 231, "49232862233447": 231, "6293440082495": 231, "457": 231, "7984171730174": 231, "99928207851275": 231, "450": [231, 342, 453, 463, 478, 484, 485, 493], "23167489438276": 231, "49533397972556": 231, "442": 231, "7899998649205": 231, "1154152336094": 231, "435": 231, "4713249048272": 231, "8574758152811": 231, "27361700177636": 231, "7194995837885": 231, "1948767461796": 231, "69950372205835": 231, "414": 231, "23313777578227": 231, "7955381861009": 231, "38646622943895": 231, "0056851633184": 231, "6529602099176": 231, "3280585397674": 231, "394": 231, "03074925558235": 231, "76080337622585": 231, "387": 231, "51799382080884": 231, "3020953929201": 231, "381": 231, "1128847649875": 231, "95014046276907": 231, "374": 231, "81364284997284": 231, "703174113004": 231, "368": 231, "61851824583925": 231, "5594610350259": 231, "525790044806": 231, "51729460236385": 231, "356": 231, "5337657831958": 231, "57499639660153": 231, "64078097129567": 231, "7309157411389": 231, "344": 231, "8451986309875": 231, "98342924266024": 231, "339": 231, "1454088410217": 231, "3309403401813": 231, "333": 231, "5398282898065": 231, "77187886154985": 231, "02689983558867": 231, "3047005872764": 231, "60509207390453": 231, "9278868215747": 231, "317": 231, "27289891217964": 231, "63994397049197": 231, "312": 231, "0288391513604": 231, "439403127012": 231, "306": 231, "87145607446": 231, "32481966301606": 231, "301": 231, "79931704190585": 231, "29477282798797": 231, "296": 231, "8110130935744": 231, "34786535435205": 231, "9051585574047": 231, "4827230693343": 231, "0803906644806": 231, "69799451323894": 231, "3353691704747": 231, "992350564034": 231, "6687759833498": 231, "3644840681425": 231, "07931479721407": 231, "81310947733573": 231, "5657107322273": 231, "33696249162824": 231, "12670998045957": 231, "9347997080753": 231, "76107945760333": 231, "60539827537497": 231, "46760646044183": 231, "34755555417982": 231, "24509832997956": 231, "16008878302222": 231, "09238212014023": 231, "04183474976216": 231, "00830427194097": 231, "99164946846514": 231, "99173029305177": 231, "00840786162107": 231, "04154444265154": 231, "09100344761535": 231, "15664942149283": 231, "23834803336592": 231, "33596606708952": 231, "4493714120403": 231, "57843305394243": 231, "7230210657691": 231, "88300659871996": 231, "05826187327307": 231, "2486601703114": 231, "45407582232284": 231, "67438420467306": 231, "9094617269512": 231, "15918582438704": 231, "42343494933948": 231, "70208856285578": 231, "9950271263006": 231, "3021320930549": 231, "62328590028318": 231, "9583719607696": 231, "3072746548215": 231, "6698793222402": 231, "04607225435848": 231, "43574068614402": 231, "83877278836854": 231, "25505765984184": 231, "68448531971015": 231, "1269466998187": 231, "58233363713737": 231, "0505388662494": 231, "53145601190235": 231, "0249795816208": 231, "5310049583806": 231, "04942839334362": 231, "58014699865296": 231, "123058740288": 231, "67806243097854": 231, "24505772317795": 231, "8239451020945": 231, "41462587878064": 231, "01700218327946": 231, "6309769578282": 231, "25645395011813": 231, "89333770661014": 231, "54153356590624": 231, "20094765217559": 231, "87148686863543": 231, "55305889108595": 231, "2455721614989": 231, "94893588165922": 231, "66306000685975": 231, "387855239648": 231, "1232330236248": 231, "8691055372948": 231, "62538568796737": 231, "39198710570872": 231, "16882413734388": 231, "95581184050846": 231, "75286597774993": 231, "55990301067771": 231, "37684009416188": 231, "20359507058": 231, "04008646411174": 231, "8862334750807": 231, "74195597434337": 231, "6071744977246": 231, "4818102404991": 231, "36578505191898": 231, "25902142978654": 231, "1614425150721": 231, "07297208657664": 231, "9935345556385": 231, "9230549608842": 231, "86145896302284": 231, "80867283968347": 231, "76462348029554": 231, "72923838101174": 231, "70244563967297": 231, "6841739508151": 231, "67435260071717": 231, "67291146249072": 231, "6797809912098": 231, "69489221908145": 231, "71817675065626": 231, "74956675807861": 231, "78899497637643": 231, "83639469878995": 231, "89169977213928": 231, "95484459223042": 231, "02576409929938": 231, "10439377349411": 231, "19066963039391": 231, "2845282165661": 231, "38590660515945": 231, "49474239153423": 231, "6109736889286": 231, "7345391241608": 231, "86537783336719": 231, "0034294577755": 231, "14863413951323": 231, "30093251745089": 231, "46026572307959": 231, "62657537642299": 231, "79980358198308": 231, "97989292471968": 231, "16678646606316": 231, "36042773996047": 231, "5607607489538": 231, "76772996029185": 231, "98128030207336": 231, "20135715942268": 231, "42790637069703": 231, "66087422372524": 231, "90020745207775": 231, "1458532313675": 231, "39775917558154": 231, "65587333344315": 231, "92014418480403": 231, "19052063706651": 231, "46695202163545": 231, "74938809039955": 231, "03777901224187": 231, "33207536957934": 231, "63222815493094": 231, "93818876751442": 231, "24990900987115": 231, "56734108451914": 231, "89043759063372": 231, "21915152075579": 231, "55343625752737": 231, "89324557045431": 231, "23853361269582": 231, "5892549178806": 231, "94536439694944": 231, "3068173350241": 231, "673569388302": 231, "04557658097677": 231, "42279530218443": 231, "80518230297476": 231, "19269469330796": 231, "58528993907609": 231, "98292585914936": 231, "38556062244679": 231, "79315274503132": 231, "20566108722895": 231, "62304485077178": 231, "04526357596481": 231, "47227713887621": 231, "90404574855089": 231, "34052994424728": 231, "78169059269696": 231, "22748888538703": 231, "67788633586511": 231, "1328447770666": 231, "59232635866421": 231, "05629354443944": 231, "52470910967588": 231, "997536138574155": 231, "47473802168829": 231, "95627845338341": 231, "44212142931447": 231, "93223124392594": 231, "42657248797226": 231, "925110046058826": 231, "42780909420343": 231, "934635097417896": 231, "44555380730979": 231, "9605312597041": 231, "47953377228453": 231, "002527942254495": 231, "52948064401743": 231, "060359026876405": 231, "59513051275281": 231, "13376279392398": 231, "67622383077958": 231, "22248184959662": 231, "772505340332955": 231, "32626305443905": 231, "88372400268794": 231, "44485745302318": 231, "00963292842468": 231, "5780202047922": 231, "14998930884649": 231, "725510516047756": 231, "304554348531454": 231, "887091573061234": 231, "473093198998804": 231, "062530476290696": 231, "65537489347173": 231, "251598175685025": 231, "851172282718466": 231, "45406940705745": 231, "060261971953814": 231, "66972262951074": 231, "2824242587836": 231, "89833996389657": 231, "51744307217481": 231, "13970713229221": 231, "76510591243447": 231, "393613398477456": 231, "02520379218062": 231, "659851509395466": 231, "297531178288864": 231, "9382176375811": 231, "58188593479856": 231, "2285113245409": 231, "87806926676262": 231, "53053542506888": 231, "18588566502544": 231, "844096052482676": 231, "50514285191348": 231, "16900252476493": 231, "83565172782365": 231, "505067311594786": 231, "17722631869435": 231, "85210598225498": 231, "52968372434487": 231, "20993715439987": 231, "89284406766856": 231, "57838244367028": 231, "26653044466586": 231, "95726641414116": 231, "6505688753031": 231, "34641652958824": 231, "04478825518367": 231, "74566310556022": 231, "44902030801784": 231, "15483926224306": 231, "86309953887835": 231, "57378087810346": 231, "28686318822846": 231, "002326544298455": 231, "72015118670994": 231, "44031751983858": 231, "16280611067837": 231, "88759768749215": 231, "61467313847328": 231, "34401351041838": 231, "075600007411175": 231, "809413989517203": 231, "545436971489355": 231, "28365062148418": 231, "02403675978884": 231, "766577357558596": 231, "51125453556483": 231, "25805056295341": 231, "006947856013365": 231, "757928976955803": 231, "510976632702935": 231, "266073673687163": 231, "023203092660136": 231, "78234802351168": 231, "54349174009853": 231, "306617655082793": 231, "071709318780034": 231, "83875041801694": 231, "60772477499845": 231, "378616346184284": 231, "151409221174813": 231, "926087621606158": 231, "702635900054464": 231, "481038538949267": 231, "261280149495878": 231, "043345470606717": 231, "827219367841497": 231, "612886832356224": 231, "400332979860913": 231, "18954304958594": 231, "98050240325699": 231, "773196524078504": 231, "56761101572556": 231, "363731601344128": 231, "161544122559604": 231, "961034538493596": 231, "762188924788852": 231, "564993472642286": 231, "36943448784603": 231, "175498389836434": 231, "98317171075098": 231, "792441094492993": 231, "60329329580414": 231, "415715179344605": 231, "22969371878092": 231, "04521599588134": 231, "862269199618748": 231, "680840625280997": 231, "50091767358862": 231, "32248784981989": 231, "14553876294311": 231, "970058124756143": 231, "79603374903303": 231, "623453550677745": 231, "452305544884936": 231, "282577846307642": 231, "11425866823192": 231, "94733632175831": 231, "78179921499012": 231, "617635852228403": 231, "454834833173663": 231, "293384852134153": 231, "133274697240747": 231, "974493249668345": 231, "817029482863724": 231, "660872461779796": 231, "506011342116228": 231, "35243536956636": 231, "20013387907039": 231, "049096294074705": 231, "89931212579743": 231, "750770972500018": 231, "603462518764903": 231, "457376534779158": 231, "312502875624073": 231, "16883148057065": 231, "026352372380938": 231, "88505565661517": 231, "74493152094463": 231, "60597023447025": 231, "468162147046844": 231, "331497688612963": 231, "19596736852629": 231, "061561774904575": 231, "928271573972026": 231, "796087509411121": 231, "665000401719812": 231, "535001147574048": 231, "406080719195606": 231, "278230163725146": 231, "151440602600493": 231, "025703230940058": 231, "901009316931392": 231, "777350201224795": 231, "654717296331983": 231, "533102086029722": 231, "41249612476842": 231, "292891037085633": 231, "174278517024426": 231, "056650327556573": 231, "939998300010533": 231, "824314333504178": 231, "709590394382234": 231, "59581851565838": 231, "482990796461978": 231, "371099401489412": 231, "26013656045995": 231, "15009456757615": 231, "04096578098873": 231, "932742622265872": 231, "825417575866952": 231, "718983188620616": 231, "613432069207198": 231, "50875688764543": 231, "404950374783414": 231, "302005321793821": 231, "199914579673264": 231, "098671058745845": 231, "998267728170813": 231, "898697615454305": 231, "799953805965146": 231, "70202944245466": 231, "60491772458047": 231, "508611908434256": 231, "413105306073414": 231, "318391285056618": 231, "224463267983237": 231, "131314732036559": 231, "038939208530818": 231, "947330282461984": 231, "856481592062261": 231, "766386828358307": 231, "677039734733102": 231, "588434106491459": 231, "50056379042914": 231, "413422684405553": 231, "327004736919982": 231, "24130394669134": 231, "156314362241424": 231, "072030081481602": 231, "988445251302947": 231, "905554067169774": 231, "823350772716541": 231, "741829659348095": 231, "660985065843247": 231, "580811377961625": 231, "501303028053794": 231, "422454494674614": 231, "344260302199801": 231, "266715020445677": 231, "189813264292065": 231, "113549693308329": 231, "0379190113825": 231, "962915966353497": 231, "888535349646384": 231, "814771995910663": 231, "741620782661569": 231, "66907662992434": 231, "59713449988144": 231, "5257893965227": 231, "455036365298385": 231, "384870492775113": 231, "315286906294649": 231, "246280773635522": 231, "177847302677458": 231, "10998174106858": 231, "042679375895393": 231, "975935533355489": 231, "9097455784329815": 231, "844104914576621": 231, "779008983380595": 231, "714453264267965": 231, "650433274176737": 231, "586944567248538": 231, "523982734519873": 231, "461543403615942": 231, "399622238447008": 231, "338214938907271": 231, "2773172405762505": 231, "216924914422646": 231, "157033766510647": 231, "097639637708692": 231, "038738403400633": 231, "980325973199306": 231, "922398290662471": 231, "864951333011118": 231, "8079811108501005": 231, "751483667891096": 231, "695455080677859": 231, "6398914583137625": 231, "584788942191589": 231, "530143705725576": 231, "475951954085673": 231, "422209923934017": 231, "368913883163581": 231, "3160601306390065": 231, "26364499593957": 231, "211664839104299": 231, "160116050379188": 231, "108995049966528": 231, "0582982877763": 231, "008022243179646": 231, "958163424764374": 231, "908718370092502": 231, "859683645459806": 231, "81105584565737": 231, "762831593735111": 231, "715007540767264": 231, "667580365619819": 231, "620546774719887": 231, "573903501826978": 231, "527647307806172": 231, "481774980403183": 231, "436283334021286": 231, "391169209500087": 231, "346429473896143": 231, "302061020265391": 231, "258060767447386": 231, "214425659851333": 231, "1711526672438906": 231, "128238784538738": 231, "085681031587884": 231, "043476452974717": 231, "00162211780876": 231, "96011511952214": 231, "918952575667738": 231, "878131627719024": 231, "83764944087154": 231, "797503203846042": 231, "757690128693269": 231, "718207450600334": 231, "6790524276987275": 231, "6402223408738985": 231, "601714493576436": 231, "563526211634802": 231, "525654843069625": 231, "488097757909537": 231, "450852348008529": 231, "413916026864834": 231, "3772862294413075": 231, "340960411987296": 231, "304936051861989": 231, "269210647359234": 231, "233781717533804": 231, "198646802029114": 231, "1638034609063554": 231, "129249274475058": 231, "094981843125056": 231, "0609987871598445": 231, "027297746631326": 231, "993876381175918": 231, "960732369852034": 231, "9278634109789006": 231, "89526722197672": 231, "862941539208157": 231, "8308841178211384": 231, "799092731592963": 231, "7675651727757": 231, "7362992519428717": 231, "7052927978374113": 231, "674543657220878": 231, "6440496947239276": 231, "6138087926980202": 231, "5838188510683624": 231, "554077787188066": 231, "5245835356935213": 231, "4953340483609647": 231, "466327293964244": 231, "437561258133758": 231, "4090339432165684": 231, "3807433681376753": 231, "3526875682624397": 231, "324864595260151": 231, "297272516968725": 231, "269909417260525": 231, "242773395909296": 231, "2158625684582063": 231, "189175066088979": 231, "162709035492113": 231, "136462638738181": 231, "1104340531501937": 231, "0846214711770252": 231, "059023100267887": 231, "0336371627478456": 231, "0084618956943707": 231, "9834955508149106": 231, "958736394325482": 231, "9341827068302675": 231, "909832783202212": 231, "885684932464612": 231, "8617374776736835": 231, "837988755802108": 231, "814437117623546": 231, "791080927598103": 231, "7679185637587516": 231, "744948417598695": 231, "722168893959663": 231, "6995784109211374": 231, "6771753996904946": 231, "654958304494063": 231, "6329255824690807": 231, "6110757035565526": 231, "5894071503949956": 231, "5679184182150654": 231, "546608014735058": 231, "525474460057279": 231, "504516286565271": 231, "4837320388218966": 231, "463120273468266": 231, "442679559123501": 231, "4224084762853355": 231, "402305617231537": 231, "3823695859221483": 231, "362598997902538": 231, "34299248020726": 231, "3235486712647058": 231, "3042662208025515": 231, "2851437897539877": 231, "2661800501647296": 231, "2473736851007953": 231, "2287233885570528": 231, "210227865366525": 231, "1918858311104463": 231, "1736960120290667": 231, "155657144933195": 231, "137767977116478": 231, "1200272662684063": 231, "102433780388041": 231, "084986297698459": 231, "067683606561906": 231, "0505245053956553": 231, "0335078025885633": 231, "0166323164183186": 231, "9998968749693773": 231, "9833003160515799": 231, "966841487119443": 231, "9505192451921207": 231, "9343324567740308": 231, "918279997776139": 231, "902360753437897": 231, "8865736182498285": 231, "8709174958767563": 231, "855391299081668": 231, "8399939496502136": 231, "8247243783158276": 231, "8095815246854756": 231, "7945643371660143": 231, "779671772891164": 231, "7649027976490874": 231, "7502563858105686": 231, "735731520257788": 231, "7213271923136897": 231, "707042401671933": 231, "6928761563274273": 231, "6788274725074415": 231, "6648953746032866": 231, "651078895102565": 231, "637377074521981": 231, "6237889613407095": 231, "6103136119343193": 231, "5969500905092417": 231, "583697469037785": 231, "5705548271936876": 231, "5575212522882065": 231, "5445958392067352": 231, "5317776903459486": 231, "519065915551469": 231, "5064596320560493": 231, "4939579644182694": 231, "4815600444617416": 231, "4692650112148198": 231, "4570720108508093": 231, "444980196628674": 231, "4329887288342331": 231, "4210967747218486": 231, "4093035084565948": 231, "397608111056908": 231, "3860097703377134": 231, "374507680854022": 231, "363101043844997": 231, "3517890671784847": 231, "3405709652960036": 231, "3294459591581924": 231, "3184132761907097": 231, "3074721502305822": 231, "296621821472999": 231, "285861536418547": 231, "2751905478208843": 231, "2646081146348473": 231, "25411350196499": 231, "243705981014548": 231, "2333848290348286": 231, "2231493292750186": 231, "2129987709324102": 231, "2029324491030389": 231, "1929496647327325": 231, "1830497245685645": 231, "1732319411107115": 231, "1634956325647101": 231, "1538401227941097": 231, "144264741273518": 231, "1347688230420367": 231, "1253517086570837": 231, "1160127441485976": 231, "1067512809736235": 231, "0975666759712743": 231, "0884582913180672": 231, "0794254944836295": 231, "0704676581867731": 231, "0615841603519334": 231, "052774384065968": 231, "044037717535317": 231, "0353735540435156": 231, "0267812919090615": 231, "0182603344436314": 231, "0098100899106435": 231, "0014299714841648": 231, "9931193972081589": 231, "9848777899560724": 231, "9767045773907564": 231, "9685991919247202": 231, "9605610706807157": 231, "9525896554526485": 231, "944684392666813": 231, "93684473334345": 231, "9290701330586224": 231, "9213600519064084": 231, "913713954461407": 231, "9061313097415564": 231, "8986115911712592": 231, "8911542765448149": 231, "8837588479901554": 231, "8764247919328809": 231, "8691515990605959": 231, "861938764287539": 231, "8547857867195079": 231, "8476921696190746": 231, "8406574203710896": 231, "8336810504484725": 231, "8267625753782861": 231, "8199015147080925": 231, "8130973919725877": 231, "806349734660514": 231, "7996580741818463": 231, "7930219458352512": 231, "7864408887758153": 231, "7799144459830425": 231, "773442164229116": 231, "7670235940474242": 231, "760658289701347": 231, "7543458091533024": 231, "7480857140340488": 231, "7418775696122427": 231, "7357209447642488": 231, "7296154119442005": 231, "7235605471543096": 231, "7175559299154212": 231, "7116011432378139": 231, "7056957735922419": 231, "6998394108812178": 231, "6940316484105331": 231, "6882720828610156": 231, "6825603142605207": 231, "6768959459561558": 231, "6712785845867344": 231, "6657078400554596": 231, "6601833255028333": 231, "6547046572797917": 231, "6492714549210616": 231, "6438833411187405": 231, "6385399416960932": 231, "6332408855815681": 231, "6279858047830277": 231, "6227743343621933": 231, "6176061124093026": 231, "6124807800179763": 231, "6073979812602942": 231, "6023573631620776": 231, "5973585756783771": 231, "5924012716691645": 231, "5874851068752244": 231, "5826097398942482": 231, "5777748321571253": 231, "5729800479044308": 231, "5682250541631091": 231, "5635095207233506": 231, "5588331201156602": 231, "5541955275881165": 231, "549596421083819": 231, "5450354812185233": 231, "5405123912584614": 231, "5360268370983461": 231, "531578507239558": 231, "5271670927685138": 231, "5227922873352134": 231, "5184537871319659": 231, "5141512908722912": 231, "5098844997699978": 231, "5056531175184336": 231, "501456850269908": 231, "4972954066152871": 231, "49316849756375564": 231, "48907583652274883": 231, "4850171392780496": 231, "48099212397405156": 231, "4770005110941854": 231, "47304202344150814": 231, "4691163861194531": 231, "4652233265127397": 231, "4613625742684418": 231, "4575338612772131": 231, "4537369216546684": 231, "44997149172291906": 231, "44623730999226213": 231, "44253411714302116": 231, "43886165600753785": 231, "435219671552313": 231, "4316079108602958": 231, "4280261231133201": 231, "4244740595746862": 231, "42095147357188756": 231, "4174581204794805": 231, "anl21g": 231, "20000000": 231, "10000000": [231, 483], "8000000": 231, "7000000": 231, "6000000": 231, "5000000": 231, "4000000": 231, "3000000": 231, "2500000": 231, "2000000": 231, "1500000": 231, "1000000": [231, 399, 496], "700000": 231, "450000": 231, "300000": 231, "150000": 231, "100000": 231, "75000": 231, "45000": 231, "30000": 231, "20000": 231, "anl230": [231, 497], "613526668": 231, "297855435": 231, "727187438": 231, "73308465": 231, "163355654": 231, "758204067": 231, "029434886": 231, "142643217": 231, "802311802": 231, "139745474": 231, "60377253": 231, "854144705": 231, "657569095": 231, "78630707": 231, "919276787": 231, "545597486": 231, "870515298": 231, "723651739": 231, "469517564": 231, "920236044": 231, "250421103": 231, "914157135": 231, "564028588": 231, "972148711": 231, "9531381205": 231, "289005022": 231, "655880149": 231, "552560627": 231, "230818088": 231, "33371951": 231, "0762600675": 231, "6274274895": 231, "297874143": 231, "351697533": 231, "389431487": 231, "441101307": 231, "906239416": 231, "173010195": 231, "588845548": 231, "867867936": 231, "52370592": 231, "365657236": 231, "652230441": 231, "487308087": 231, "17312718": 231, "4581839703": 231, "1021129293": 231, "2857411294": 231, "37128205": 231, "7229954456": 231, "5624124557": 231, "5853643133": 231, "6911310325": 231, "015983811": 231, "870493801": 231, "8370168144": 231, "5176870353": 231, "5549736405": 231, "6633097734": 231, "456868952": 231, "9986828296": 231, "8006138583": 231, "743553151": 231, "515699456": 231, "525077633": 231, "6655871626": 231, "1108109446": 231, "6846132951": 231, "020443715": 231, "7306794585": 231, "1779708597": 231, "3749988803": 231, "8256124153": 231, "3860918616": 231, "6092934087": 231, "6159358022": 231, "1410094306": 231, "6671460946": 231, "7860231416": 231, "991795231": 231, "240596952": 231, "641769655": 231, "5378471923": 231, "5456809113": 231, "20952669": 231, "4028963093": 231, "4070294258": 231, "2258780287": 231, "5894981461": 231, "5018294927": 231, "8354441128": 231, "9581305463": 231, "6332739547": 231, "756709769": 231, "1064111359": 231, "104384252": 231, "5901761993": 231, "6054289339": 231, "1889407005": 231, "1817224203": 231, "9007508513": 231, "0415615901": 231, "322561324": 231, "6666300076": 231, "227694249": 231, "0085093381": 231, "2539965084": 231, "025825423": 231, "0650397323": 231, "661382463": 231, "52899448253": 231, "6881752212": 231, "3529099919": 231, "3276294795": 231, "8238826671": 231, "06360586325": 231, "38670618937": 231, "24814886996": 231, "21511643805": 231, "27888738716": 231, "25623729388": 231, "45050688763": 231, "7109012119": 231, "3570969319": 231, "10752658747": 231, "01116046394": 231, "38261550068": 231, "7404289753": 231, "14095103095": 231, "74834261593": 231, "94034677837": 231, "1594503212": 231, "76306982784": 231, "33420547776": 231, "5854757151": 231, "12138510692": 231, "39482654356": 231, "66570485197": 231, "96157835911": 231, "54700114364": 231, "94906859838": 231, "93957410727": 231, "46768357327": 231, "86225572033": 231, "17152855225": 231, "1672026675": 231, "182194901274": 231, "18574956269": 231, "71298520376": 231, "63012515857": 231, "16654461479": 231, "6885882102": 231, "806875214108": 231, "940983437144": 231, "40429176462": 231, "520917862195": 231, "514845800633": 231, "619257497467": 231, "910432764253": 231, "816969806958": 231, "5407012299": 231, "197374653642": 231, "391414951657": 231, "80385593927": 231, "795806966358": 231, "97603264331": 231, "819343288582": 231, "329825680668": 231, "743645239822": 231, "266769873977": 231, "843512085147": 231, "514163036063": 231, "271673805943": 231, "425258257312": 231, "349649491942": 231, "4352776368323": 231, "626164152342": 231, "39127684748": 231, "3921956869917": 231, "5356056715486": 231, "585483553667": 231, "1681859796745": 231, "673164786958": 231, "6836204325807": 231, "0578736322745": 231, "858052832201": 231, "6131968954546": 231, "3306993391": 231, "8892181163285": 231, "0979986074624": 231, "9103289928594": 231, "6580466633216": 231, "1979910916427": 231, "3939837719179": 231, "1164877023452": 231, "5182732454248": 231, "9466173467927": 231, "9992820785087": 231, "57499639659824": 231, "36448406813986": 231, "4540758223207": 231, "0170021832778": 231, "0729720865753": 231, "30093251744984": 231, "89324557045347": 231, "44212142931381": 231, "85117228271794": 231, "266530444665435": 231, "02320309265979": 231, "603293295803866": 231, "603462518764687": 231, "709590394382063": 231, "677039734732961": 231, "315286906294535": 231, "475951954085583": 231, "043476452974647": 231, "927863410978847": 231, "0590231002678454": 231, "3823695859221146": 231, "8553912990816415": 231, "4449801966286535": 231, "125351708657068": 231, "8764247919328679": 231, "83368105044846": 231, "6825603142605106": 231, "6279858047830184": 231, "5315785072395498": 231, "41745812047947384": 231, "389431496": 231, "5250776373": 231, "7860231444": 231, "9581305481": 231, "6666300089": 231, "8238826679": 231, "38261550112": 231, "96157835939": 231, "46768357343": 231, "712985203856": 231, "52091786225": 231, "391414951691": 231, "819343288602": 231, "843512085158": 231, "6261641523492": 231, "6836204325853": 231, "0979986074653": 231, "5182732454265": 231, "99928207850974": 231, "3644840681405": 231, "01700218327818": 231, "30093251745005": 231, "442121429313936": 231, "26653044466551": 231, "603293295803912": 231, "70959039438209": 231, "315286906294551": 231, "9278634109788544": 231, "5315785072395509": 231, "4174581204794747": 231, "anl70": [231, 497], "285741137": 231, "870493807": 231, "3749988843": 231, "7860231448": 231, "9581305486": 231, "5901762012": 231, "6666300092": 231, "06503973354": 231, "8238826681": 231, "45050688842": 231, "38261550126": 231, "33420547823": 231, "96157835948": 231, "46768357347": 231, "18219490144": 231, "712985203885": 231, "806875214206": 231, "520917862268": 231, "540701229962": 231, "391414951702": 231, "795806966393": 231, "81934328861": 231, "743645239842": 231, "843512085163": 231, "425258257324": 231, "626164152352": 231, "5854835536747": 231, "6836204325868": 231, "6131968954599": 231, "0979986074665": 231, "1164877023484": 231, "5182732454273": 231, "9466173467946": 231, "99928207851025": 231, "57499639659943": 231, "36448406814077": 231, "4540758223214": 231, "01700218327835": 231, "07297208657573": 231, "30093251745016": 231, "89324557045373": 231, "44212142931401": 231, "851172282718096": 231, "266530444665555": 231, "023203092659884": 231, "603293295803937": 231, "603462518764744": 231, "709590394382108": 231, "677039734732997": 231, "315286906294563": 231, "475951954085605": 231, "043476452974664": 231, "382369585922122": 231, "8553912990816472": 231, "444980196628658": 231, "1253517086570715": 231, "8764247919328707": 231, "6825603142605128": 231, "4174581204794752": 231, "anl703": [231, 497], "495382015": 231, "173010194": 231, "101899842": 231, "588845547": 231, "031724592": 231, "8678679345": 231, "523705918": 231, "365657235": 231, "652230439": 231, "487308085": 231, "77458428": 231, "173127178": 231, "0540386387": 231, "458183968": 231, "0549653093": 231, "1021129265": 231, "406469243": 231, "285741126": 231, "5311965104": 231, "371282046": 231, "4361390304": 231, "722995442": 231, "562412452": 231, "5853643096": 231, "691131029": 231, "0159838074": 231, "902643606": 231, "870493797": 231, "586528267": 231, "83701681": 231, "499870111": 231, "5176870306": 231, "871467366": 231, "554973636": 231, "663309769": 231, "4568689475": 231, "998682825": 231, "8006138536": 231, "7435531463": 231, "515699452": 231, "5250776294": 231, "494132147": 231, "665587159": 231, "4559257368": 231, "1108109409": 231, "6846132916": 231, "0204437114": 231, "7306794552": 231, "1779708564": 231, "4567170194": 231, "374998877": 231, "4369583244": 231, "825612412": 231, "3860918584": 231, "6092934057": 231, "6159357992": 231, "1410094276": 231, "5186099012": 231, "6671460916": 231, "0749133858": 231, "7860231383": 231, "386679526": 231, "9917952276": 231, "231937566": 231, "2405969487": 231, "641769652": 231, "5378471892": 231, "49780469": 231, "5456809085": 231, "1493426643": 231, "2095266872": 231, "0491520212": 231, "4028963065": 231, "4070294232": 231, "2258780261": 231, "5894981436": 231, "8602555952": 231, "5018294903": 231, "1601232268": 231, "8354441104": 231, "8737530911": 231, "9581305439": 231, "1004527613": 231, "6332739524": 231, "2019086774": 231, "7567097667": 231, "5455368996": 231, "1064111337": 231, "2603507948": 231, "1043842499": 231, "0047351946": 231, "5901761972": 231, "7455463434": 231, "6054289318": 231, "5479852672": 231, "1889406985": 231, "3757191409": 231, "1817224184": 231, "9007508494": 231, "0415615883": 231, "32256132225": 231, "6666300059": 231, "19607239834": 231, "22769424727": 231, "2680000423": 231, "0085093364": 231, "3211887077": 231, "25399650674": 231, "02653760376": 231, "0258254213": 231, "8021486024": 231, "06503973063": 231, "6793435837": 231, "6613824614": 231, "17521619215": 231, "5289944809": 231, "1713993169": 231, "6881752196": 231, "79874515237": 231, "35290999035": 231, "327629478": 231, "82388266566": 231, "06360586185": 231, "386706188": 231, "2481488686": 231, "2151164367": 231, "9642380785": 231, "27888738588": 231, "04654682774": 231, "2562372926": 231, "9960110961": 231, "45050688638": 231, "8985649189": 231, "71090121067": 231, "34783911944": 231, "3570969307": 231, "37163006916": 231, "1075265863": 231, "3619546085": 231, "01116046283": 231, "0085162294": 231, "3826154996": 231, "23541615054": 231, "74042897424": 231, "14095102993": 231, "74834261494": 231, "9403467774": 231, "15945032027": 231, "9112852723": 231, "76306982693": 231, "3420877744": 231, "3342054769": 231, "4824254597": 231, "5854757143": 231, "49643383172": 231, "12138510615": 231, "41811377004": 231, "3948265428": 231, "1089076952": 231, "66570485123": 231, "21734476871": 231, "96157835839": 231, "14065421956": 231, "04021998827": 231, "98825081118": 231, "35400427572": 231, "54700114296": 231, "01603124624": 231, "24818393441": 231, "7679024534": 231, "13606167518": 231, "94906859775": 231, "8379850538": 231, "46767207982": 231, "53595541071": 231, "77281157859": 231, "93957410668": 231, "82815930253": 231, "26031116629": 231, "08686494241": 231, "18702885426": 231, "46768357274": 231, "86269898122": 231, "332267809354": 231, "86225571983": 231, "46356744133": 231, "17152855178": 231, "04528252546": 231, "16720266705": 231, "64231856504": 231, "597756706135": 231, "18219490085": 231, "565330179474": 231, "93735982564": 231, "50847522331": 231, "50836820063": 231, "1857495623": 231, "80787950932": 231, "6601096528": 231, "04543633546": 231, "28406498159": 231, "7129852034": 231, "685556397875": 231, "571103575385": 231, "75452316727": 231, "6358985661": 231, "63012515824": 231, "16654461447": 231, "68858820989": 231, "65342895039": 231, "531642288104": 231, "80687521382": 231, "97552351955": 231, "54641702951": 231, "04051260275": 231, "99059471563": 231, "940983436878": 231, "44724961282": 231, "075937084675": 231, "404291764364": 231, "019997399428": 231, "52091786195": 231, "514845800393": 231, "61925749723": 231, "461073779174": 231, "67642683054": 231, "910432764034": 231, "816969806747": 231, "058461962795": 231, "305668017336": 231, "23747575008": 231, "540701229707": 231, "909893063712": 231, "047141481344": 231, "661892130294": 231, "470764470778": 231, "197374653468": 231, "572162770586": 231, "332224372192": 231, "221146142347": 231, "988845632435": 231, "391414951499": 231, "190968315865": 231, "155493362787": 231, "058706135165": 231, "679909646708": 231, "803855939126": 231, "22061154516": 231, "725426273328": 231, "11860523238": 231, "205384015504": 231, "795806966225": 231, "70460844994": 231, "751097056855": 231, "759042663985": 231, "556566285586": 231, "976032643188": 231, "853945388097": 231, "030844910849": 231, "351208673768": 231, "663354004313": 231, "819343288473": 231, "674891504937": 231, "08927604227": 231, "92524874269": 231, "048950117502": 231, "3298256805665": 231, "6405443474905": 231, "856918849556": 231, "857828112634": 231, "525141552571": 231, "74364523973": 231, "400969886531": 231, "387520612991": 231, "596408446352": 231, "923383512": 231, "266769873894": 231, "5274019838": 231, "608562699592": 231, "415922833893": 231, "857482195261": 231, "843512085072": 231, "286499214166": 231, "1010910041905": 231, "204042239462": 231, "514163035995": 231, "95226809518": 231, "441127210401": 231, "905416995633": 231, "271673805879": 231, "468247820002": 231, "425258257251": 231, "074549699497": 231, "349649491884": 231, "1857261952487": 231, "5195490643664": 231, "289448526674": 231, "435277636779": 231, "898374482664": 231, "621525520078": 231, "5489298122116": 231, "6261641522938": 231, "8001490473166": 231, "0191155416237": 231, "232572859629": 231, "391276847436": 231, "447199193641": 231, "353497410074": 231, "39219568695": 231, "694790478053": 231, "5356056715086": 231, "7233999501623": 231, "585483553629": 231, "0805181311885": 231, "1681859796377": 231, "8091648434115": 231, "965103336894": 231, "5985969735543": 231, "673164786924": 231, "1532265288074": 231, "004080430465": 231, "191881512881": 231, "6836204325498": 231, "4471028495595": 231, "4509293050835": 231, "6644755956956": 231, "0578736322466": 231, "6019927713355": 231, "26842160771": 231, "0294502162126": 231, "8580528321756": 231, "7278709594386": 231, "6131968954303": 231, "4889576630171": 231, "3306993390768": 231, "11457177": 231, "8173136645687": 231, "4162380548908": 231, "8892181163073": 231, "214673337407": 231, "3715560315036": 231, "3393381811468": 231, "0979986074428": 231, "6280104561665": 231, "9103289928407": 231, "9263796991586": 231, "6580466633036": 231, "0876612569164": 231, "1979910916257": 231, "9722292482452": 231, "3939837719016": 231, "44726742653": 231, "1164877023297": 231, "3864370699391": 231, "2422834752344": 231, "6695610688129": 231, "6541611643659": 231, "182323420291": 231, "2406272390308": 231, "8159833787619": 231, "895625772193": 231, "4671035473573": 231, "5182732454123": 231, "0372912305825": 231, "0126062875016": 231, "432952401327": 231, "2873417161136": 231, "565057667046": 231, "2556482822371": 231, "348919649905": 231, "8349295468468": 231, "7039812242245": 231, "9466173467827": 231, "5536140817047": 231, "515975333418": 231, "824927120741": 231, "4719120928593": 231, "4485841807029": 231, "74680338038166": 231, "35863066541714": 231, "2763230245933": 231, "49232862232213": 231, "9992820785007": 231, "7899998649087": 231, "8574758152695": 231, "19487674616823": 231, "79553818608974": 231, "6529602099067": 231, "76080337621516": 231, "11288476497697": 231, "70317411299374": 231, "52579004479594": 231, "5749963965917": 231, "84519863097785": 231, "3309403401719": 231, "0268998355794": 231, "9278868215656": 231, "0288391513515": 231, "3248196630074": 231, "811013093566": 231, "4827230693261": 231, "3353691704666": 231, "3644840681346": 231, "56571073221954": 231, "93479970806766": 231, "46760646043438": 231, "16008878301494": 231, "00830427193384": 231, "00840786161407": 231, "156649421486": 231, "44937141203366": 231, "88300659871342": 231, "45407582231647": 231, "15918582438084": 231, "99502712629456": 231, "95837196076369": 231, "0460722543527": 231, "2550576598362": 231, "58233363713188": 231, "02497958161544": 231, "58014699864773": 231, "24505772317283": 231, "01700218327443": 231, "89333770660522": 231, "87148686863063": 231, "94893588165453": 231, "12323302362023": 231, "39198710570426": 231, "75286597774556": 231, "20359507057572": 231, "74195597433916": 231, "36578505191486": 231, "0729720865726": 231, "86145896301889": 231, "72923838100789": 231, "6743526007134": 231, "69489221907779": 231, "78899497637285": 231, "95484459222692": 231, "19066963039049": 231, "49474239153088": 231, "86537783336392": 231, "30093251744769": 231, "79980358197997": 231, "36042773995743": 231, "98128030207039": 231, "66087422372235": 231, "3977591755787": 231, "19052063706373": 231, "03777901223914": 231, "93818876751175": 231, "89043759063112": 231, "89324557045177": 231, "94536439694696": 231, "04557658097433": 231, "19269469330557": 231, "38556062244446": 231, "6230448507695": 231, "90404574854865": 231, "22748888538486": 231, "59232635866208": 231, "99753613857206": 231, "44212142931242": 231, "92511004605683": 231, "44555380730784": 231, "00252794225259": 231, "59513051275095": 231, "2224818495948": 231, "883724002686165": 231, "57802020479046": 231, "30455434852975": 231, "06253047628903": 231, "85117228271684": 231, "669722629509145": 231, "51744307217325": 231, "39361339847593": 231, "297531178287365": 231, "22851132453944": 231, "18588566502401": 231, "169002524763535": 231, "177226318692995": 231, "20993715439854": 231, "266530444664554": 231, "34641652958697": 231, "4490203080166": 231, "57378087810225": 231, "720151186708755": 231, "88759768749099": 231, "07560000741003": 231, "283650621483062": 231, "511254535563737": 231, "757928976954734": 231, "02320309265909": 231, "30661765508177": 231, "607724774997447": 231, "926087621605177": 231, "261280149494922": 231, "61288683235529": 231, "980502403256075": 231, "363731601343233": 231, "762188924787974": 231, "175498389835578": 231, "6032932958033": 231, "04521599588052": 231, "500917673587818": 231, "970058124755358": 231, "45230554488417": 231, "947336321757557": 231, "454834833172928": 231, "974493249667628": 231, "506011342115524": 231, "04909629407402": 231, "603462518764236": 231, "168831480569995": 231, "74493152094399": 231, "331497688612338": 231, "928271573971417": 231, "535001147573453": 231, "15144060259991": 231, "777350201224225": 231, "412496124767863": 231, "05665032755603": 231, "709590394381705": 231, "371099401488895": 231, "040965780988225": 231, "718983188620122": 231, "404950374782933": 231, "098671058745374": 231, "799953805964686": 231, "508611908433807": 231, "224463267982797": 231, "947330282461552": 231, "677039734732677": 231, "41342268440514": 231, "15631436224102": 231, "90555406716938": 231, "66098506584286": 231, "422454494674236": 231, "189813264291697": 231, "962915966353139": 231, "741620782661217": 231, "525789396522356": 231, "31528690629431": 231, "10998174106825": 231, "909745578432658": 231, "714453264267648": 231, "523982734519564": 231, "338214938906969": 231, "157033766510352": 231, "980325973199018": 231, "80798111084982": 231, "639891458313488": 231, "475951954085406": 231, "316060130638745": 231, "160116050378933": 231, "008022243179397": 231, "8596836454595636": 231, "715007540767027": 231, "573903501826746": 231, "436283334021058": 231, "302061020265169": 231, "171152667243674": 231, "043476452974505": 231, "918952575667531": 231, "7975032038458405": 231, "67905242769853": 231, "56352621163461": 231, "4508523480083415": 231, "340960411987113": 231, "233781717533626": 231, "129249274474883": 231, "027297746631155": 231, "927863410978734": 231, "8308841178209754": 231, "7362992519427123": 231, "6440496947237717": 231, "554077787187914": 231, "4663272939640954": 231, "38074336813753": 231, "2972725169685835": 231, "215862568458068": 231, "1364626387380463": 231, "059023100267756": 231, "9834955508147827": 231, "9098327832020874": 231, "837988755801986": 231, "767918563758632": 231, "69957841092102": 231, "632925582468966": 231, "567918418214954": 231, "5045162865651616": 231, "442679559123394": 231, "3823695859220435": 231, "3235486712646036": 231, "2661800501646296": 231, "210227865366427": 231, "1556571449330995": 231, "102433780387948": 231, "0505245053955643": 231, "999896874969288": 231, "9505192451920337": 231, "9023607534378122": 231, "855391299081585": 231, "8095815246853946": 231, "7649027976490081": 231, "7213271923136122": 231, "678827472507366": 231, "6373770745219072": 231, "5969500905091698": 231, "5575212522881363": 231, "5190659155514006": 231, "481560044461675": 231, "4449801966286089": 231, "4093035084565313": 231, "37450768085396": 231, "3405709652959432": 231, "3074721502305233": 231, "2751905478208265": 231, "2437059810144917": 231, "212998770932355": 231, "1830497245685108": 231, "1538401227940573": 231, "1253517086570326": 231, "0975666759712244": 231, "0704676581867243": 231, "0440377175352693": 231, "0182603344435848": 231, "9931193972081133": 231, "9685991919246757": 231, "9446843926667695": 231, "9213600519063658": 231, "8986115911712176": 231, "8764247919328402": 231, "854785786719468": 231, "8336810504484334": 231, "8130973919725495": 231, "7930219458352139": 231, "7734421642290796": 231, "7543458091532669": 231, "7357209447642141": 231, "7175559299153874": 231, "699839410881185": 231, "6825603142604886": 231, "6657078400554282": 231, "649271454921031": 231, "6332408855815382": 231, "627985804782998": 231, "6124807800179475": 231, "5973585756783489": 231, "5826097398942206": 231, "568225054163082": 231, "55419552758809": 231, "5405123912584354": 231, "5315785072395324": 231, "5184537871319407": 231, "5056531175184089": 231, "49316849756373154": 231, "48099212397402796": 231, "4691163861194301": 231, "45753386127719065": 231, "44623730999224015": 231, "4352196715522915": 231, "4244740595746653": 231, "4174581204794599": 231, "anl9": [231, 497], "525077638": 231, "38261550124": 231, "6836204325873": 231, "anl94g": 231, "14000000": 231, "12000000": 231, "11000000": 231, "10600000": 231, "9500000": 231, "9000000": 231, "8500000": 231, "7750000": 231, "7500000": 231, "7250000": 231, "6750000": 231, "6500000": 231, "6250000": 231, "5750000": 231, "5500000": 231, "5400000": 231, "5200000": 231, "4700000": 231, "4500000": 231, "4400000": 231, "4200000": 231, "3900000": 231, "3800000": 231, "3650000": 231, "3500000": 231, "3333000": 231, "3166000": 231, "2833000": 231, "2666000": 231, "2333000": 231, "2166000": 231, "1875000": 231, "1750000": 231, "1660000": 231, "1600000": 231, "1420000": 231, "1330000": 231, "1250000": 231, "1200000": 231, "1125000": 231, "900000": 231, "865000": 231, "825000": 231, "800000": 231, "750000": 231, "675000": 231, "650000": 231, "625000": 231, "600000": 231, "575000": 231, "550000": 231, "525000": 231, "500000": 231, "425000": 231, "400000": 231, "375000": 231, "350000": 231, "325000": 231, "260000": 231, "220000": 231, "190000": 231, "160000": 231, "140000": 231, "120000": 231, "90000": 231, "80000": 231, "65000": 231, "60000": 231, "55000": 231, "40000": 231, "35000": 231, "15000": 231, "10000": 231, "armi33": [231, 497], "armi45": [231, 497], "casmo12": 231, "2230000": 231, "821000": 231, "058": [231, 478], "casmo4": 231, "cinder63": [231, 497], "25000000": 231, "16905000": 231, "14918000": 231, "6065000": 231, "4965800": 231, "3678800": 231, "2865100": 231, "2231300": 231, "1737700": 231, "1353400": 231, "1108000": 231, "820850": 231, "639280": 231, "497900": 231, "388700": 231, "302000": 231, "183200": 231, "111100": 231, "67380": 231, "40870": 231, "25540": 231, "19890": 231, "15030": 231, "9119": 231, "5531": 231, "3355": 231, "2840": 231, "2404": 231, "454": 231, "315": 231, "043": 231, "059": [231, 478], "683": 231, "067": 231, "042": [231, 478], "035": [231, 478], "015": 231, "005": [231, 279, 336, 471, 478, 497], "shem33_361": 231, "19640300": 231, "9999990": 231, "6065300": 231, "1336940": 231, "860006": 231, "494002": 231, "320646": 231, "195008": 231, "115624": 231, "24999": 231, "14899": 231, "3481": 231, "2084": 231, "1134": 231, "517": 231, "999": 231, "519": 231, "098": 231, "3083": 231, "3038": 231, "5356": 231, "546": [231, 472], "30032": 231, "88217": 231, "520011": 231, "431579": 231, "shem361": 231, "14918200": 231, "13840300": 231, "11618300": 231, "9048360": 231, "8187300": 231, "7408170": 231, "6703190": 231, "4965850": 231, "4065690": 231, "2725310": 231, "1901390": 231, "1636540": 231, "1405770": 231, "1286960": 231, "1162050": 231, "1051150": 231, "951119": 231, "706511": 231, "456021": 231, "412501": 231, "383884": 231, "267826": 231, "230014": 231, "164999": 231, "94664": 231, "29281": 231, "26100": 231, "22699": 231, "18584": 231, "16200": 231, "2996": 231, "2397": 231, "1811": 231, "1343": 231, "1064": 231, "494": 231, "909": 231, "681": 231, "832": 231, "646": 231, "837": 231, "099": 231, "577": 231, "539": 231, "746": 231, "419": 231, "094": 231, "575": 231, "335": 231, "323": 231, "928": 231, "922": [231, 472, 478, 484], "327": 231, "888": 231, "796": 231, "958": 231, "996": 231, "078": 231, "877": 231, "952": [231, 472], "056": [231, 478], "657": 231, "701": 231, "524": 231, "854": 231, "038": 231, "605": 231, "594": 231, "3287": 231, "3256": 231, "7741": 231, "9393": 231, "3679": 231, "3322": 231, "5595": 231, "8869": 231, "0682": 231, "8261": 231, "4929": 231, "1612": 231, "8312": 231, "5029": 231, "046": [231, 478], "5923": 231, "6306": 231, "925": 231, "0595": 231, "9895": 231, "7847": 231, "2591": 231, "5173": 231, "2053": 231, "2904": 231, "1721": 231, "1246": 231, "1441": 231, "7295": 231, "7874": 231, "7919": 231, "8588": 231, "4191": 231, "0568": 231, "698": 231, "5392": 231, "0855": 231, "693": 231, "8852": 231, "6578": 231, "3788": 231, "1557": 231, "0011": 231, "7018": 231, "4859": 231, "2296": 231, "1448": 231, "0604": 231, "9763": 231, "7676": 231, "6847": 231, "6021": 231, "5199": 231, "4175": 231, "2751": 231, "0734": 231, "5974": 231, "3927": 231, "0848": 231, "9591": 231, "759": [231, 448, 450], "5648": 231, "4457": 231, "8305": 231, "5501": 231, "0498": 231, "7792": 231, "8662": 231, "7301": 231, "5952": 231, "4702": 231, "0496": 231, "3297": 231, "4721": 231, "1302": 231, "9795": 231, "8153": 231, "7094": 231, "5894": 231, "2694": 231, "0529": 231, "8038": 231, "5793": 231, "50002": 231, "14031": 231, "97995": 231, "80038": 231, "67369": 231, "52407": 231, "13027": 231, "97008": 231, "83965": 231, "73994": 231, "60035": 231, "38015": 231, "13987": 231, "99429": 231, "91778": 231, "87021": 231, "83526": 231, "8107": 231, "79165": 231, "77605": 231, "75981": 231, "74225": 231, "71668": 231, "63126": 231, "60611": 231, "58829": 231, "57184": 231, "55609": 231, "53907": 231, "51492": 231, "48178": 231, "43206": 231, "35978": 231, "28016": 231, "16011": 231, "05991": 231, "96014": 231, "80021": 231, "72015": 231, "61979": 231, "53004": 231, "48817": 231, "41025": 231, "38003": 231, "32011": 231, "21008": 231, "10997": 231, "93323": 231, "76785": 231, "4198": 231, "30981": 231, "21983": 231, "71209": 231, "54307": 231, "14211": 231, "88405": 231, "77512": 231, "74092": 231, "7199": 231, "70012": 231, "64004": 231, "62005": 231, "59009": 231, "46994": 231, "33006": 231, "27299": 231, "21709": 231, "15695": 231, "0701": 231, "98992": 231, "90008": 231, "77997": 231, "66895": 231, "58803": 231, "51998": 231, "44397": 231, "41001": 231, "38098": 231, "33095": 231, "29304": 231, "25094": 231, "21397": 231, "16999": 231, "14797": 231, "12997": 231, "11605": 231, "10395": 231, "09198": 231, "07799": 231, "03499": 231, "02101": 231, "00904": 231, "996501": 231, "981959": 231, "96396": 231, "944022": 231, "919978": 231, "880024": 231, "800371": 231, "719999": 231, "624999": 231, "594993": 231, "55499": 231, "475017": 231, "390001": 231, "352994": 231, "325008": 231, "305012": 231, "279989": 231, "254997": 231, "231192": 231, "20961": 231, "190005": 231, "161895": 231, "137999": 231, "119995": 231, "104298": 231, "0897968": 231, "0764969": 231, "0651999": 231, "0554982": 231, "0473019": 231, "0402999": 231, "0343998": 231, "0292989": 231, "0249394": 231, "0200104": 231, "01483": 231, "0104505": 231, "00714526": 231, "00455602": 231, "0024999": 231, "test_fissionproductmodel": [232, 236], "testfissionproductmodellumpedfissionproduct": [232, 236, 237], "testfissionproductmodelexplicitmc2librari": [232, 236, 237], "test_lumpedfissionproduct": [232, 236], "getdummylfpfil": [232, 236, 238], "testfissionproductdefinitionfil": [232, 236, 238], "testlumpedfissionproduct": [232, 236, 238], "testlumpedfissionproductcollect": [232, 236, 238], "testlumpedfissionproductsfromreferencefil": [232, 236, 238], "testlumpedfissionproductsexplicit": [232, 236, 238], "testmo99lfp": [232, 236, 238], "setallcomponentfissionproduct": [232, 233], "setallblocklfp": [232, 233], "getgloballumpedfissionproduct": [232, 233], "setgloballumpedfissionproduct": [232, 233], "getallfissionproductnam": [232, 233, 235], "removefissiongasesfromblock": [232, 233], "getgaseousyieldfract": [232, 235], "gettotalyield": [232, 235], "getmassfracdenom": [232, 235], "printdens": [232, 235, 274, 302], "getlumpedfissionproductnam": [232, 235], "getallfissionproductnuclidebas": [232, 235], "createlfpsfromfil": [232, 235], "createsinglelfpfromfil": [232, 235], "inventori": [233, 276, 391], "fidel": [233, 279, 290, 469, 476, 488, 489], "substanti": [233, 279, 476], "fpmodel": [233, 497], "lfp": [233, 235, 279, 285, 299, 302, 336], "casmo": 233, "referencefissionproduct": [233, 238], "dat": [233, 238, 496, 497], "nuclideflag": [233, 274, 280, 285, 463, 497], "quick": [233, 240, 433, 442, 467, 470, 480, 486, 495, 496, 497, 505], "aim": [233, 388, 469], "fpmodellibrari": [233, 497], "autoupdatenuclideflag": [233, 274, 280, 285], "vision": 233, "multi": [233, 247, 279, 318, 327, 333, 441, 452, 466, 467, 468, 471, 476, 478, 483, 486, 497, 501], "origen": [233, 497], "caveat": [233, 395, 440, 496], "box": [233, 273, 457], "getallnuclidebasesbylibrari": [233, 274, 280, 285], "setlumpedfissionproduct": [233, 274, 296, 299, 302], "depletioninterfac": 233, "buildfissionproduct": 233, "getlumpedfissionproductcollect": [233, 235, 274, 279, 296, 299, 302], "fp": [235, 237, 238], "yld": 235, "fpd": 235, "9773e": 235, "lfpden": 235, "objectwithparentdens": 235, "densfunc": 235, "fpdensiti": 235, "oldmassfrac": 235, "9000e": 235, "4000e": 235, "6000e": 235, "lfpcompositionfilepath": [235, 497], "test_loadgloballfpsfromfil": [236, 237], "test_getallfissionproductnam": [236, 237, 238], "test_fpappl": [236, 237], "test_nuclideflag": [236, 237, 287, 290], "test_nuclidesinmodelfuel": [236, 237], "test_nuclidesinmodelalldepletableblock": [236, 237], "test_createlfp": [236, 238], "test_createreferencelfp": [236, 238], "test_getyield": [236, 238], "test_gaseousyieldfract": [236, 238], "test_printdens": [236, 238, 338, 342], "test_isga": [236, 238], "test_getallfissionproductnuclidebas": [236, 238], "test_getnumberdens": [236, 238, 338, 340, 341], "test_getmassfrac": [236, 238], "test_fissionproductyield": [236, 238], "test_explicitfissionproduct": [236, 238], "lumpedfissionproduc": 238, "explicitfissionproduct": [238, 472, 497], "test_globalfluxinterfac": [239, 241], "mockglobalfluxinterfac": [239, 241, 242], "mockglobalfluxwithexecut": [239, 241, 242], "mockglobalfluxwithexecutersnonuniform": [239, 241, 242], "mockglobalfluxexecut": [239, 241, 242], "testglobalfluxopt": [239, 241, 242], "testglobalfluxinterfac": [239, 241, 242], "testglobalfluxinterfacewithexecut": [239, 241, 242], "testglobalfluxinterfacewithexecutersnonuniform": [239, 241, 242], "testglobalfluxresultmapp": [239, 241, 242], "testglobalfluxutil": [239, 241, 242], "applydummyflux": [239, 241, 242], "getiofilenam": [239, 240], "calculatekeff": [239, 240], "getoptionscl": [239, 240], "getexecutercl": [239, 240, 241, 242], "getexecuteropt": [239, 240, 241, 242], "getexecut": [239, 240], "getlabel": [239, 240, 321, 325, 326], "edgeassembliesareneed": [239, 240], "getkeff": [239, 240], "clearflux": [239, 240], "getdpax": [239, 240], "getburnuppeakingfactor": [239, 240], "updatedpar": [239, 240], "updatemaxdpaparam": [239, 240], "updatefluenceanddpa": [239, 240], "updatecycledoseparam": [239, 240], "updateloadpaddos": [239, 240], "versu": 240, "tightli": [240, 491], "coupledit": 240, "additionallabel": 240, "stdname": 240, "eigenvalu": [240, 318, 491, 497], "interoper": [240, 367], "myriad": 240, "blank": [240, 367, 388, 441, 484, 489], "calc": [240, 242, 318, 401], "calcreactionratesonmeshconvers": 240, "recalcul": [240, 279], "remap": [240, 318], "eigenvalueproblem": 240, "includefixedsourc": 240, "eig": 240, "fredholm": 240, "satisfi": [240, 273, 302, 320, 321, 468, 474, 475], "uniform": [240, 242, 275, 280, 284, 298, 304, 306, 307, 312, 317, 318, 328, 333, 336, 453, 471, 472, 475, 489, 491, 493, 497], "aclpdoselimit": [240, 497], "detailedaxialexpans": [240, 304, 312, 317, 318, 330, 333, 336, 472, 497], "dpaperflu": [240, 489, 497], "dirti": [240, 497], "dpapeak": [240, 497], "fastfluencepeak": [240, 489, 497], "energydepocalcmethodstep": 240, "epseigenvalu": 240, "epsfissionsourceavg": 240, "epsfissionsourcepoint": 240, "rz": [240, 274, 275, 306, 315, 320, 347, 446, 450, 467, 469, 471, 486], "rzt": [240, 274, 306, 320, 321, 328, 336, 347, 476], "hasnonuniformassem": 240, "isrestart": 240, "guess": [240, 400, 427, 485, 497], "kernelnam": 240, "loadpadelev": [240, 497], "elev": [240, 275, 404, 485, 488, 497], "aclp": [240, 274, 312, 319, 491, 497], "plate": [240, 275, 321, 336, 468, 475, 480, 484, 491, 493, 497], "loadpadlength": [240, 497], "maxout": 240, "savephysicsfileslist": 240, "timestamp": 240, "symmetri": [240, 274, 275, 279, 284, 302, 320, 321, 322, 323, 325, 326, 327, 328, 329, 336, 388, 455, 463, 469, 471, 472, 476, 484, 485, 488, 493], "xskernel": [240, 497], "pn": 240, "edg": [240, 279, 302, 306, 314, 318, 330, 333, 336, 388, 404, 469, 489, 497], "unifi": [240, 312, 328], "pipe": [240, 350, 480], "delta": [240, 346, 480, 481, 488, 489, 503], "burnuppeakingfactor": [240, 497], "avg": [240, 336, 400, 491], "depletionsecond": 240, "fluenc": [240, 484, 489], "shift": [240, 336, 471, 494], "stateless": [240, 273, 436], "mapper": [240, 472], "getblock": [240, 274, 275, 279, 336, 437, 447, 448, 456, 464, 478, 480], "steptimeinsecond": 240, "detaileddpa": [240, 489, 491], "detaileddpapeak": [240, 489], "dpapeakfromflu": [240, 489], "inaccur": [240, 476], "ran": [240, 483], "mgflux": [240, 244, 245, 253, 279, 302, 318, 455, 478, 489], "accru": [240, 489], "maxdetaileddpathiscycl": [240, 491], "dpafullwidthhalfmax": [240, 491], "elevationofaclp3cycl": [240, 491], "elevationofaclp7cycl": [240, 491], "accumul": [240, 333, 336, 484, 489, 490], "loadpaddpapeak": [240, 491], "loadpaddpaavg": [240, 491], "_calcloadpaddos": 240, "dpax": 240, "incur": 240, "exposur": 240, "barn": [240, 244, 302, 460, 493], "convolut": 240, "dpapersecond": 240, "n_": 240, "dr": 240, "nht9": 240, "upgrad": [240, 279, 352, 472, 485, 493], "nusigf": 240, "nufiss": 240, "uncommonli": 240, "int_": [240, 318], "e_g": 240, "test_readfromset": [241, 242], "test_readfromreactor": [241, 242], "test_savephysicsfil": [241, 242], "test_interact": [241, 242], "test_getiofilenam": [241, 242], "test_gethistoryparam": [241, 242], "test_checkenergybal": [241, 242], "test_executerinteract": [241, 242], "test_calculatekeff": [241, 242], "test_getexecutercl": [241, 242], "test_settightcouplingdefault": [241, 242], "test_gettightcouplingvalu": [241, 242], "test_executerinteractionnonuniformassem": [241, 242], "test_mapp": [241, 242], "test_getdpax": [241, 242], "test_getburnuppeakingfactor": [241, 242], "test_getburnuppeakingfactorzero": [241, 242], "test_calcreactionr": [241, 242], "fake": [242, 312, 478], "gf": 242, "pcm": [242, 488, 489, 491, 496], "reli": [242, 296, 325, 328, 455, 485], "swing": [242, 491], "observ": 242, "ratetyp": [243, 244], "setnam": [243, 244, 274, 296, 299, 302], "addmultigroupx": [243, 244], "hasvalu": [243, 244], "getxsect": [243, 244], "addtodeplet": [243, 245], "settodeplet": [243, 245], "gettodeplet": [243, 245], "setchemicalvector": [243, 245], "getchemicalvector": [243, 245], "alongsid": [244, 485], "prove": [244, 290, 294, 349, 370, 386, 439, 441, 469], "unpleas": 244, "therein": 244, "xstabl": 244, "nf": [244, 245, 302], "n3n": [244, 245, 302], "3n": 244, "micromultigroupx": 244, "totalflux": 244, "headerformat": [244, 245], "xsec": [244, 245], "tableformat": [244, 245], "mcnpid": [244, 245], "deck": [244, 245], "absent": 244, "analyst": [245, 303, 352, 436, 469, 476, 478, 497], "silent": 245, "componentblueprint": [245, 274, 280, 282, 290, 291, 463], "insertdepletablenuclidekei": [245, 274, 280, 283, 290], "countinu": 245, "loss": [245, 304, 488, 489, 493], "_depletebynam": 245, "oject": 245, "waitforjob": 245, "comm": [245, 437], "comm_self": 245, "cpi": 245, "maxproc": 245, "compositenam": 245, "getmgflux": [245, 274, 279, 302], "makecrosssectiont": 245, "todeplet": 245, "chemicalvector": 245, "test_latticeinterfac": [246, 249], "latticeinterfacetest": [246, 249, 250], "latticeinterfacetesterlibfals": [246, 249, 250], "testlatticephysicsinterfacebas": [246, 249, 250], "testlatticephysicsinterfac": [246, 249, 250], "testlatticephysicslibrarycr": [246, 249, 250], "test_latticewrit": [246, 249], "fakelatticephysicswrit": [246, 249, 251], "testlatticephysicswrit": [246, 249, 251], "updatexslibrari": [246, 247], "readexistingxslibrari": [246, 247, 249, 250], "makecyclexsfilesasbasefil": [246, 247], "clearx": [246, 247, 497], "computecrosssect": [246, 247], "generatelatticephysicsinput": [246, 247], "getwrit": [246, 247], "getread": [246, 247], "getrepresentativeblock": [246, 247], "unused_categori": [246, 248], "fuel_categori": [246, 248], "structure_categori": [246, 248], "coolant_categori": [246, 248], "fission_product_categori": [246, 248], "undeplet": [246, 248], "broad": [247, 472, 480, 496, 497, 499], "neutronveloc": 247, "mgneutronveloc": [247, 489], "weather": 247, "genx": [247, 484, 485, 497], "reson": 247, "lifetim": [247, 491, 502], "forceseri": 247, "book": [247, 441], "xswriter": 247, "bc": 247, "returnedfromwrit": 247, "agent": 247, "cyclic": [247, 393, 491], "seek": [248, 387, 427], "generateexclusivegammax": 248, "test_latticephysicsinterfac": [249, 250], "test_interacteverynodefirstcoupl": [249, 250], "test_interacteverynodeal": [249, 250], "test_interactfirstcouplediter": [249, 250, 256, 257], "test_interactal": [249, 250], "test_libcreation_nogenx": [249, 250], "test_libcreation_genx": [249, 250], "test_libcreation_nogenxs_2": [249, 250], "test_libcreation_genxs_2": [249, 250], "test_libcreation_genxs_3": [249, 250], "test_latticephysicswrit": [249, 251], "test_writetitl": [249, 251], "test_issourcedriven": [249, 251], "test_isgammaxsgenerationen": [249, 251], "test_getallnuclidesbytemperatureincnon": [249, 251], "test_getallnuclidesbytemperatureinc": [249, 251], "test_getallnuclidesbytemperatureincexplicitfissionproduct": [249, 251], "test_getavgnuclidetemperatureinc": [249, 251], "test_getfueltemperatur": [249, 251], "test_getdetailedfissionproduct": [249, 251], "test_getdetailedfissionproductspass": [249, 251], "test_getdetailedfpdens": [249, 251], "test_iscriticalbucklingsearchact": [249, 251], "test_getdriverblock": [249, 251], "_newlibraryshouldbecr": 250, "testverif": 250, "gen": [250, 257], "sigma_i": 252, "interactxyz": 252, "macroxsgen": 252, "blistsom": 252, "gxg": 252, "fluxrecon": [252, 279, 497], "computepinmgfluxandpow": 252, "huge": [252, 427], "denot": [254, 439], "addtion": 254, "subsectionhead": 254, "areal": [254, 491, 499], "test_add": [256, 257, 338, 339, 340], "test_getblocksingroup": [256, 257], "test_is_pickl": [256, 257], "test_createrepresentativeblock": [256, 257], "test_componentaveragerepblock": [256, 257], "test_componentaverage1dcylind": [256, 257], "test_checkcomponentconsist": [256, 257], "test_invalidweight": [256, 257], "test_updateburnupgroup": [256, 257], "test_setbugroupbound": [256, 257], "test_addxsgroupsfromblock": [256, 257], "test_calcweightedburnup": [256, 257], "test_getnextavailablexstyp": [256, 257], "test_getrepresentativeblock": [256, 257], "test_createrepresentativeblocksusingexistingblock": [256, 257], "test_interactallcoupl": [256, 257], "test_copypregeneratedfil": [256, 257], "test_convers": [256, 257], "test_conversion_2digit": [256, 257], "test_crosssect": [256, 258], "test_pregeneratedcrosssect": [256, 258], "test_pregeneratedfluxinput": [256, 258], "test_priorit": [256, 258], "test_homogeneousxsdefaultsettingassign": [256, 258], "test_setdefaultsettingsbylowestbugrouphomogen": [256, 258], "test_setdefaultsettingsbylowestbugrouponedimension": [256, 258], "test_optionalkei": [256, 258], "test_badcrosssect": [256, 258], "test_yamlio": [256, 258, 338, 344], "test_caseset": [256, 258], "test_csblockrepresent": [256, 258], "test_csblockrepresentationfileloc": [256, 258], "test_xssettingssetdefault": [256, 258], "test_maket": [256, 259], "test_isotopicdepletioninterfac": [256, 259], "test_invalidgroupstructuretyp": [256, 260], "test_consistenciesbetweengroupstructureandgroupstructuretyp": [256, 260], "test_customsettingobjectio": [256, 262], "test_customsettingroundtrip": [256, 262], "test_neutronicssettingsload": [256, 262], "test_kineticsparameterassign": [256, 262], "test_neutronicssettingsvalid": [256, 262], "zppr": [257, 279, 469], "cylind": 257, "whip": [258, 327, 471], "forth": 262, "test_runningdirectorypath": [265, 266], "test_collectinputsandoutput": [265, 266], "test_updaterundir": [265, 266], "hydraul": [267, 269, 270, 271, 279, 333, 336, 469, 472, 476, 481, 484, 493, 496, 497], "concern": [270, 475, 493], "stock": 272, "mutat": [272, 370], "cheapli": 272, "altitud": 273, "subtl": [273, 476], "exercis": 273, "forget": [273, 478, 499], "ergonom": [273, 320], "lest": 273, "endeavor": 273, "redesign": 273, "parametercollect": [273, 274, 302, 330, 333, 334, 345], "yamliz": [273, 280, 281, 282, 283, 284, 285, 286, 427, 475], "metaclass": [273, 299, 302, 330, 334], "pluginmagag": 273, "notic": [273, 323, 327, 436, 437, 440, 441, 484], "staticmethod": [273, 318, 328, 436, 480], "preclud": 273, "componenttyp": [273, 274, 296, 299], "registr": [273, 299, 480], "surpris": [273, 302, 319, 475, 496], "ersatz": 273, "favor": [273, 337], "predat": 273, "unstabl": [273, 302, 471], "peramet": 273, "pluginblockparam": 273, "createbuild": [273, 330, 333], "defparam": [273, 330, 333], "plugblkp1": 273, "pluginassemparam": 273, "plugasmp1": 273, "constraint": [273, 404, 434, 474, 489], "alter": [273, 361, 396, 475, 476, 496], "novel": 273, "bitfield": [273, 319], "blocktyp": [273, 275, 336], "largest": [273, 279, 302, 305, 388, 475], "rtype": 273, "suspect": 273, "ceas": 273, "beyond": [273, 296, 436, 469, 476, 478, 484], "elsewher": [273, 302, 336, 440, 476], "elimin": [273, 330, 463, 469, 471], "altogeth": [273, 494], "resolutionmethod": 273, "unbound": 273, "enhanc": [273, 435, 469], "t1671": 273, "particip": [273, 302, 471, 493], "neutronicskernel": [273, 478, 497], "among": [273, 279, 296, 302, 437, 469, 493, 499], "tell": [273, 276, 392, 441, 456, 480, 484, 495], "misbehav": 273, "declar": [273, 302, 304, 493], "member": [273, 302, 387, 400, 441, 475], "widget": [273, 367], "tab": [273, 434, 478, 495, 497], "widgetdata": 273, "submitt": [273, 361], "abstracttab": 273, "addsectionsfromplugin": 273, "mcnpaddtal": 273, "usesrctp": 273, "frustrat": 273, "intact": 273, "collid": [273, 330, 375], "superoldparam": 273, "oldparam": 273, "currentparam": 273, "newer": [273, 336, 355, 403], "arguabl": 273, "suboptim": 273, "mod": [273, 431, 485], "adapt": [273, 286, 436], "stapl": 273, "programm": [273, 494], "improperli": [273, 330], "collis": [273, 414], "hous": [274, 475, 478], "constructassem": [274, 280], "adddefaultsfp": [274, 280], "assemblyblueprint": [274, 280, 463], "bycomponentmodif": [274, 280, 281], "assemblykeyedlist": [274, 280, 281, 463], "blockblueprint": [274, 280, 283, 463], "blockkeyedlist": [274, 280, 282, 463], "componentdimens": [274, 280, 283], "expandelement": [274, 280, 283], "componentkeyedlist": [274, 280, 283], "groupedcompon": [274, 280, 283], "componentgroup": [274, 280, 283], "gridblueprint": [274, 280, 286, 337, 463], "triplet": [274, 280, 284, 463], "savetostream": [274, 280, 284], "getdefaultnuclideflag": [274, 280, 285], "eleexpandinfobasedoncodeendf": [274, 280, 285], "gendefaultnucflag": [274, 280, 285, 463], "reactorblueprint": [274, 280, 337, 463], "systemblueprint": [274, 280, 286, 463], "summarizematerialdata": [274, 280, 286], "getboundingcircleouterdiamet": [274, 296, 297, 298, 299, 301, 302, 338, 342], "getdimens": [274, 279, 296, 299, 498], "dimension_nam": [274, 296, 297, 298, 299, 301], "init_signatur": [274, 296, 297, 298, 299, 301], "pdef": [274, 275, 279, 296, 297, 298, 299, 301, 302, 330, 332, 334, 336, 338, 342, 345], "getcomponentarea": [274, 296, 297, 298, 299, 301], "fromcompon": [274, 296], "is3d": [274, 296, 297, 298, 299, 301], "getcomponentvolum": [274, 296, 299, 301], "setvolum": [274, 296, 299], "computevolum": [274, 296, 299], "basicshap": [274, 279, 296, 299, 302], "circl": [274, 279, 292, 296, 297, 298, 299, 300, 301, 302, 305, 341, 342, 404, 453, 455, 463, 468, 478, 484, 485, 493], "rectangl": [274, 279, 296, 297, 298, 299, 300, 302, 323, 328, 341, 465, 471, 493], "solidrectangl": [274, 296, 297, 299, 302, 341, 493], "squar": [274, 296, 297, 298, 299, 302, 321, 336, 340, 341, 454, 458, 465, 471, 485, 493], "complexshap": [274, 296, 299, 302, 472], "holedhexagon": [274, 296, 298, 299, 300, 302, 341, 493], "hexholedcircl": [274, 296, 298, 299, 300, 302, 341, 493], "holedrectangl": [274, 296, 298, 299, 300, 302, 341, 493], "holedsquar": [274, 296, 298, 299, 302, 341, 493], "helix": [274, 296, 298, 299, 300, 302, 341, 463, 468, 472, 476, 478, 484, 493], "componenttypeisvalid": [274, 296, 299], "shapedcompon": [274, 296, 297, 298, 299, 301, 302, 493], "componentparamet": [274, 296], "getcomponentparameterdefinit": [274, 296, 300], "getcircleparameterdefinit": [274, 296, 300], "gethexagonparameterdefinit": [274, 296, 300], "getholedhexagonparameterdefinit": [274, 296, 300], "gethexholedcircleparameterdefinit": [274, 296, 300], "getholedrectangleparameterdefinit": [274, 296, 300], "gethelixparameterdefinit": [274, 296, 300], "getrectangleparameterdefinit": [274, 296, 300], "getcubeparameterdefinit": [274, 296, 300], "gettriangleparameterdefinit": [274, 296, 300], "getunshapedparameterdefinit": [274, 296, 300], "getradialsegmentparameterdefinit": [274, 296, 300], "volumetricshap": [274, 296, 299, 302], "sphere": [274, 290, 296, 299, 301, 302, 341, 347, 493], "cube": [274, 296, 299, 300, 301, 302, 341, 493], "radialseg": [274, 296, 299, 300, 301, 302, 341, 493], "differentialradialseg": [274, 279, 296, 299, 301, 302, 341, 493], "parametersweep": [274, 303], "axialexpansionchang": [274, 279, 299, 303, 312], "getdefaultreferenceassem": [274, 303, 304], "makeassemsabletosnaptouniformmesh": [274, 303, 304], "expandcolddimstohot": [274, 303, 304], "getsolidcompon": [274, 303, 304, 312], "assemblyaxiallinkag": [274, 303, 304], "expansiondata": [274, 279, 303, 304, 312], "blockconvert": [274, 303, 448], "componentmerg": [274, 303, 305], "multiplecomponentmerg": [274, 303, 305], "blockavgtocylconvert": [274, 303, 305], "hexcomponentstocylconvert": [274, 303, 305, 448], "getouterdiamfromidandarea": [274, 303, 305], "radiifromhexpitch": [274, 303, 305], "radiifromhexsid": [274, 303, 305], "radiifromringofrod": [274, 303, 305], "geometryconvert": [274, 279, 303, 309, 318, 336, 449], "geometrychang": [274, 303, 306], "fuelassemnummodifi": [274, 303, 306], "hextorzthetaconvert": [274, 303, 306], "hextorzconvert": [274, 303, 306, 449], "thirdcorehextofullcorechang": [274, 303, 306], "edgeassemblychang": [274, 279, 303, 306, 478], "meshconvert": [274, 303, 306], "rzthetareactormeshconvert": [274, 303, 307], "rzthetareactormeshconverterbyringcompositionaxialbin": [274, 303, 307], "rzthetareactormeshconverterbyringcompositionaxialcoordin": [274, 303, 307], "rzthetareactormeshconverterbyringcompositionaxialflag": [274, 303, 307], "checklastvalueinlist": [274, 303, 307], "checklistbound": [274, 303, 307], "generatebin": [274, 303, 307], "pintypeblockconvert": [274, 303], "adjustsmeardens": [274, 303, 310], "adjustcladthicknessbyod": [274, 303, 310], "adjustcladthicknessbyid": [274, 303, 310], "uniformmesh": [274, 303, 304, 472], "converterfactori": [274, 303, 318], "uniformmeshgener": [274, 303, 318], "uniformmeshgeometryconvert": [274, 286, 303, 318, 472], "neutronicsuniformmeshconvert": [274, 303, 318], "gammauniformmeshconvert": [274, 303, 318], "parammapp": [274, 303, 318], "setnumberdensitiesfromoverlap": [274, 303, 318], "axialgrid": [274, 321, 322], "axialunitgrid": [274, 321, 322, 455], "cartesiangrid": [274, 305, 321, 323, 458, 471], "hexgrid": [274, 305, 321, 326, 339, 455, 457], "locationbas": [274, 276, 302, 321, 322, 325, 327], "multiindexloc": [274, 279, 284, 321, 327], "coordinateloc": [274, 321, 327], "addingisvalid": [274, 321, 327], "structuredgrid": [274, 321, 322, 323, 326, 329], "gridparamet": [274, 321, 328], "thetarz": [274, 275, 279, 321, 328, 340], "thetarzgrid": [274, 307, 321, 329, 459], "parameterdefinitionerror": [274, 330, 331], "parametererror": [274, 330, 331], "unknownparametererror": [274, 330, 331], "global_serial_num": [274, 330, 332], "collectpluginparamet": [274, 330, 332], "applyallparamet": [274, 330, 332], "parameterdefinit": [274, 275, 279, 296, 297, 298, 299, 301, 302, 330, 332, 336, 342, 345], "paramloc": [274, 279, 330, 333], "nodefault": [274, 330, 333], "isnumpyarrai": [274, 330, 333], "parameterbuild": [274, 330, 333, 345], "resolvecollect": [274, 330], "resolveparametersmeta": [274, 302, 330, 332, 334], "test_assembli": [274, 338], "buildtestassembli": [274, 338, 339], "materialinassembly_testcas": [274, 338, 339], "maketestassembli": [274, 338, 339], "assembly_testcas": [274, 338, 339], "assemblyinreactor_testcas": [274, 338, 339], "annularfueltestcas": [274, 338, 339], "test_block": [274, 302, 338, 348, 453], "buildsimplefuelblock": [274, 338, 340, 453], "loadtestblock": [274, 338, 340], "applydummydata": [274, 338, 340], "getcomponentdata": [274, 338, 340], "block_testcas": [274, 302, 338, 340], "test_negativevolum": [274, 338, 340, 341], "hexblock_testcas": [274, 338, 340], "thrzblock_testcas": [274, 338, 340], "cartesianblock_testcas": [274, 338, 340], "massconservationtest": [274, 303, 311, 316, 338, 340], "test_compon": [274, 287, 290, 338], "testcomponentfactori": [274, 338, 341], "testgeneralcompon": [274, 338, 341], "testcompon": [274, 338, 341], "testnullcompon": [274, 338, 341], "testunshapedcompon": [274, 338, 341], "testshapedcompon": [274, 338, 341], "testderivedshap": [274, 338, 341], "testcircl": [274, 338, 341], "testcomponentexpans": [274, 338, 341], "testtriangl": [274, 338, 341, 387, 407, 424], "testrectangl": [274, 338, 341], "testsolidrectangl": [274, 338, 341], "testsquar": [274, 338, 341], "testcub": [274, 338, 341], "testhexagon": [274, 338, 341], "testholedhexagon": [274, 338, 341], "testhexholedcircl": [274, 338, 341], "testholedrectangl": [274, 338, 341], "testholedsquar": [274, 338, 341], "testhelix": [274, 338, 341], "testspher": [274, 338, 341], "testradialseg": [274, 338, 341], "testdifferentialradialseg": [274, 338, 341], "testmaterialadjust": [274, 338, 341], "test_composit": [274, 338], "mockbp": [274, 338, 342], "getdummyparamdef": [274, 338, 342], "dummycomposit": [274, 338, 342], "dummyleaf": [274, 338, 342], "testcompositepattern": [274, 338, 342], "testcompositetre": [274, 338, 342], "testflagseri": [274, 338, 342], "testmiscmethod": [274, 338, 342], "testgetreactionratedict": [274, 338, 342], "test_flag": [274, 338, 387, 407], "testflag": [274, 338, 343, 387, 407, 414], "test_geometri": [274, 338], "testgeomtyp": [274, 338, 344], "testsymmetrytyp": [274, 338, 344], "testsystemlayoutinput": [274, 338, 344], "testsystemlayoutinputtrz": [274, 338, 344], "test_paramet": [274, 338], "mockcomposit": [274, 338, 345], "mockcompositegrandpar": [274, 338, 345], "mockcompositepar": [274, 338, 345], "mockcompositechild": [274, 338, 345], "parametertest": [274, 338, 345], "mocksyncpc": [274, 338, 345], "makecomp": [274, 338, 345], "synchronizationtest": [274, 338, 345], "test_reactor": [274, 338, 447, 448, 449, 456, 464], "buildoperatorofemptyhexblock": [274, 338, 346], "buildoperatorofemptycartesianblock": [274, 338, 346], "reducetestreactor": [274, 338, 346], "reactortest": [274, 338, 346], "hexreactortest": [274, 338, 346], "test_rz_reactor": [274, 338], "test_rzt_reactor": [274, 338, 347], "test_rzt_reactor_modern": [274, 338, 347], "test_zon": [274, 338], "testzon": [274, 338, 348], "load_queu": [274, 275], "spent_fuel_pool": [274, 275], "not_in_cor": [274, 275], "renameblocksaccordingtoassemblynum": [274, 275], "makenamefromassemnum": [274, 275], "renumb": [274, 275, 276, 336], "makeuniqu": [274, 275], "moveto": [274, 275, 302], "getnum": [274, 275], "getloc": [274, 275, 279, 280, 284], "getarea": [274, 275, 279, 296, 299, 302, 490], "getpinplenumvolumeincubicmet": [274, 275], "getaverageplenumtemperatur": [274, 275], "rotatepin": [274, 275, 279, 472], "doubleresolut": [274, 275], "adjustresolut": [274, 275], "getaxialmesh": [274, 275, 336, 472], "calculatezcoord": [274, 275, 279], "gettotalheight": [274, 275], "getheight": [274, 275, 279, 478], "getreactiveheight": [274, 275], "getelevationboundariesbyblocktyp": [274, 275], "getelevationsmatchingparamvalu": [274, 275], "getag": [274, 275], "makeaxialsnaplist": [274, 275, 489], "setblockmesh": [274, 275, 489], "setblockheight": [274, 275], "getblocksandz": [274, 275], "hascontinuouscoolantchannel": [274, 275], "getfirstblock": [274, 275, 336, 455, 478, 485, 498], "getfirstblockbytyp": [274, 275], "getblockatelev": [274, 275], "getbindexfromzindex": [274, 275], "getblocksbetweenelev": [274, 275], "getparamvaluesatz": [274, 275], "getparamofzfunct": [274, 275], "reestablishblockord": [274, 275], "countblockswithflag": [274, 275, 336], "getdim": [274, 275, 279], "getsymmetryfactor": [274, 275, 279, 302, 306], "radialout": [274, 275, 279], "radialinn": [274, 275, 279], "thetaout": [274, 275, 279], "thetainn": [274, 275, 279], "getnextloc": [274, 276], "assemblyad": [274, 276], "normalizenam": [274, 276, 336], "uniqid": [274, 279], "pitch_dimens": [274, 279], "pitch_component_typ": [274, 279], "makenam": [274, 279], "getsmeardens": [274, 279], "autocreatespatialgrid": [274, 279], "setpinmgflux": [274, 279], "setheight": [274, 279], "getwettedperimet": [274, 279, 472], "getflowareaperpin": [274, 279], "gethydraulicdiamet": [274, 279], "adjustuenrich": [274, 279], "setbulimitinfo": [274, 279], "getmaxarea": [274, 279, 302], "getmaxvolum": [274, 279, 302], "isonwhichsymmetrylin": [274, 279, 302], "adjustdens": [274, 279, 336], "completeinitialload": [274, 279, 310], "setb10volparam": [274, 279], "replaceblockwithblock": [274, 279, 340], "plotflux": [274, 279], "removeal": [274, 279, 302], "getcomponentsthatarelinkedto": [274, 279], "getcomponentsinlinkedord": [274, 279], "getsortedcomponentsinsideofcompon": [274, 279], "getnumpin": [274, 279, 472], "mergewithblock": [274, 279], "getcomponentareafrac": [274, 279], "verifyblockdim": [274, 279], "getpincenterflattoflat": [274, 279], "getwirewrapcladgap": [274, 279], "getplenumpin": [274, 279], "isplenumpin": [274, 279], "getpitch": [274, 279], "haspinpitch": [274, 279], "getpinpitch": [274, 279], "getlargestcompon": [274, 279], "setpitch": [274, 279], "getmfp": [274, 279], "setareafractionsreport": [274, 279], "updatecomponentdim": [274, 279, 301], "breakfuelcomponentsintoindividu": [274, 279], "getintegratedmgflux": [274, 279, 296, 299, 302], "setaxialexptargetcomp": [274, 279], "getpincoordin": [274, 279], "getductip": [274, 279], "getductop": [274, 279], "initializepinloc": [274, 279], "setpinpow": [274, 279], "getpintoductgap": [274, 279], "getrotationnum": [274, 279], "setrotationnum": [274, 279], "getflowarea": [274, 279], "axialinn": [274, 279], "axialout": [274, 279], "copyparamsfrom": [274, 302], "updateparamsfrom": [274, 302], "getcompon": [274, 302, 305, 319, 453, 485, 498], "itercompon": [274, 296, 299, 302, 338, 342], "dochildrenhaveflag": [274, 302], "containsatleastonechildwithflag": [274, 302], "containsonlychildrenwithflag": [274, 302], "copyparamstochildren": [274, 302], "getparametercollect": [274, 302], "getparamnam": [274, 302], "hasflag": [274, 275, 302, 305, 319], "gettyp": [274, 302, 478, 484], "settyp": [274, 302, 455], "getvolumefract": [274, 299, 302, 340, 453], "getmass": [274, 296, 299, 302, 342, 475, 478], "getneutronenergydepositionconst": [274, 302], "getgammaenergydepositionconst": [274, 302], "gettotalenergygenerationconst": [274, 302], "getfissionenergygenerationconst": [274, 302], "getcaptureenergygenerationconst": [274, 302], "getchildrenwithnuclid": [274, 302], "getancestor": [274, 302], "getancestoranddist": [274, 302], "getancestorwithflag": [274, 302], "gettotalnden": [274, 302], "updatenumberdens": [274, 296, 299, 302], "changendensbyfactor": [274, 302], "clearnumberdens": [274, 302], "getnumberofatom": [274, 302, 475], "setchildrenlumpedfissionproduct": [274, 302], "getfissilemassenrich": [274, 302], "getboronmassenrich": [274, 302], "geturaniummassenrich": [274, 302], "geturaniumnumenrich": [274, 302], "getpun": [274, 302], "getpumol": [274, 302], "calctotalparam": [274, 302], "calcavgparam": [274, 302], "getmaxparam": [274, 302, 456, 469, 484], "getminparam": [274, 302], "getchildparamvalu": [274, 302, 478], "isfuel": [274, 302, 478], "containsheavymet": [274, 302], "getfissilemass": [274, 302, 478], "gethmmass": [274, 302, 449], "gethmmol": [274, 302], "gethmden": [274, 302], "getpumass": [274, 302], "getpufrac": [274, 302], "getzrfrac": [274, 302], "getmaxuraniummassenrich": [274, 302], "getfuelmass": [274, 296, 299, 302, 342], "constituentreport": [274, 302], "removemass": [274, 302], "addmass": [274, 302], "setmass": [274, 302, 391], "getboundingindic": [274, 302], "getcomponentnam": [274, 302], "getcomponentsofshap": [274, 302], "getcomponentsofmateri": [274, 302], "hascompon": [274, 302], "getcomponentbynam": [274, 302], "getnumcompon": [274, 302], "setcomponentdimensionsreport": [274, 302], "expandallelementalstoisotop": [274, 302], "expandelementaltoisotop": [274, 302, 455], "getaveragetempinc": [274, 302], "resolvelinkeddim": [274, 296, 299, 302, 341], "setchildren": [274, 302], "getchildrenoftyp": [274, 302], "syncmpist": [274, 302, 332, 343, 437], "retainst": [274, 302, 328, 332, 340], "getlumpedfissionproductsifnecessari": [274, 302], "requireslumpedfissionproduct": [274, 302], "getreactionr": [274, 302, 455, 472], "printcont": [274, 296, 299, 302, 478], "tertiari": [274, 319], "annular": [274, 298, 299, 319, 340], "shield_block": [274, 319], "slug": [274, 319, 484], "starter": [274, 319, 480], "blanket": [274, 281, 319], "booster": [274, 319, 336], "grid_plat": [274, 312, 319, 493], "handling_socket": [274, 312, 319], "inlet_nozzl": [274, 312, 319], "liner": [274, 302, 305, 312, 319, 323, 468, 469], "wire": [274, 275, 279, 298, 299, 312, 319, 336, 340, 404, 463, 472, 475, 476, 478, 483, 484, 493], "intercool": [274, 302, 305, 319, 340, 453, 463, 478, 484, 493], "load_pad": [274, 319], "skid": [274, 319, 493], "interductcool": [274, 319], "dspacerinsid": [274, 319], "guide_tub": [274, 312, 319, 485], "fission_chamb": [274, 319, 485], "core_barrel": [274, 319], "batchmassaddit": [274, 319], "poison": [274, 275, 319, 493], "moveabl": [274, 319, 488], "fromstringignoreerror": [274, 319], "fromstr": [274, 319, 320], "tostr": [274, 319], "fromani": [274, 320], "null": [274, 320, 340, 350], "full_cor": [274, 320], "third_cor": [274, 320, 455], "quarter_cor": [274, 320], "eighth_cor": [274, 320], "sixteenth_cor": [274, 320], "symmetryfactor": [274, 279, 320], "no_symmetri": [274, 320], "hassymmetri": [274, 320], "valid_symmetri": [274, 320], "createvalidsymmetrystr": [274, 320], "checkvalidsymmetri": [274, 320], "incrementassemnum": [274, 336], "setoptionsfromc": [274, 336, 455], "powermultipli": [274, 336, 488], "isfullcor": [274, 336], "refassem": [274, 275, 336, 472], "sortassemsbyr": [274, 336, 472, 478], "summarizereactorstat": [274, 336], "setpowerfromdens": [274, 336], "setpowerifnecessari": [274, 336], "setblockmassparam": [274, 336], "getscalarevolut": [274, 336], "locateallassembli": [274, 336], "removeassembli": [274, 336], "removeassembliesinr": [274, 336], "removeallassembli": [274, 336], "normalizeinternalbookeep": [274, 336], "genassembliesaddedthiscycl": [274, 336], "getnumhexr": [274, 336], "getnumassemblieswithallringsfilledout": [274, 336], "getnumenergygroup": [274, 336], "countfuelaxialblock": [274, 336], "getfirstfuelblockaxialnod": [274, 336], "getassembliesinr": [274, 336], "getmaxassembliesinhexr": [274, 336], "getassembliesinsquareorhexr": [274, 336], "getassembliesincircular": [274, 336], "buildcircularringdictionari": [274, 336], "getassemblybynam": [274, 336], "getnozzletyp": [274, 336], "getblockbynam": [274, 336], "getblocksbyindic": [274, 336], "genblocksbylocnam": [274, 336], "getfirstassembli": [274, 336], "regenassemblylist": [274, 275, 336], "getallxssuffix": [274, 336], "getnuclidecategori": [274, 336, 346], "summarizenuclidecategori": [274, 336], "getlocationcont": [274, 336], "makelocationlookup": [274, 336], "getfluxvector": [274, 336], "getassembliesoftyp": [274, 336], "getassemblywithassemnum": [274, 336], "getassemblywithstringloc": [274, 336], "getassemblypitch": [274, 336], "findneighbor": [274, 336], "setmovelist": [274, 336], "createfreshfe": [274, 336], "createassemblyoftyp": [274, 336, 484], "saveallflux": [274, 336], "getassembliesonsymmetrylin": [274, 336], "getcoreradiu": [274, 336], "findallmeshpoint": [274, 336], "findallaxialmeshpoint": [274, 275, 336], "updateaxialmesh": [274, 279, 304, 336], "findaxialmeshindexof": [274, 336], "addmorenod": [274, 336], "findallazimeshpoint": [274, 336], "findallradmeshpoint": [274, 336], "getmaxblockparam": [274, 336], "gettotalblockparam": [274, 336], "getmaxnumpin": [274, 336], "getminimumpercentfluxinfuel": [274, 336], "getavgtemp": [274, 336], "getallnuclidesin": [274, 336], "growtofullcor": [274, 314, 336, 337, 464, 472], "setpitchuniform": [274, 336], "calcblockmax": [274, 336], "getfuelbottomheight": [274, 336], "processload": [274, 304, 336, 472], "buildmanualzon": [274, 336], "root_tag": [274, 337], "readgeomfromfil": [274, 337], "readgeomfromstream": [274, 337], "togridblueprint": [274, 337], "modifyeqpath": [274, 337], "writegeom": [274, 337], "valid_typ": [274, 349], "addloc": [274, 349], "removeloc": [274, 349], "additem": [274, 349], "removeitem": [274, 349], "addzon": [274, 349], "removezon": [274, 349], "checkdupl": [274, 349], "getzoneloc": [274, 349], "getallloc": [274, 349], "findzoneitisin": [274, 349], "sortzon": [274, 349], "typ": [275, 302, 482], "assemnum": [275, 279, 336, 339, 471, 488, 489, 496], "pinnum": [275, 490], "pinpeakingfactor": 275, "compli": [275, 433], "newnum": 275, "somewher": [275, 279, 327, 395, 404, 434, 475], "friend": 275, "spatialloc": [275, 279, 284, 302, 321, 326, 327, 328, 336, 455, 456, 464, 478, 485, 499], "plane": [275, 323, 326, 328, 429, 476, 478, 493], "outlet": [275, 339, 480, 488, 489, 491, 497], "refa": 275, "zeroatfuel": 275, "zeroesatfuel": 275, "enrichthresh": 275, "zbottom": [275, 279, 489], "resid": [275, 327, 349, 489, 494], "refmesh": 275, "stick": 275, "topindex": [275, 489], "snap": [275, 336], "rebusoutput": 275, "blockmesh": 275, "conservemassflag": 275, "adjustlist": [275, 279], "depict": [275, 469], "slide": 275, "blockheight": 275, "returnbottomz": 275, "returntopz": 275, "zcoord": [275, 458], "blocksandcoord": 275, "bottomz": 275, "typenam": [275, 302], "mergeblock": 275, "targetblock": 275, "zindex": [275, 336], "bindex": 275, "zlower": 275, "zupper": 275, "blockinfo": 275, "blockobj": 275, "overlapheightincm": 275, "block3": 275, "block2": 275, "block1": 275, "interptyp": 275, "fillvalu": 275, "thoutlettemperatur": 275, "paramdefinedat": 275, "extrapol": [275, 400, 497], "spline": 275, "interp1d": 275, "nearest": [275, 336], "slinear": 275, "quadrat": 275, "cubic": 275, "rough": 275, "valatz": 275, "extrapolol": 275, "nonphys": 275, "ztop": [275, 279, 489], "reorder": 275, "blocktypespec": [275, 336], "blockcount": 275, "dimnam": [275, 279], "compnam": [275, 279], "rad": [275, 279, 305, 459], "radian": [275, 279, 307, 329, 400, 429], "clockwis": [275, 279, 323, 326, 489], "assemblyparametercollect": [275, 327], "subdivid": 275, "axialmesh": [275, 449, 472, 491], "azimuth": [275, 280, 301, 329, 336, 488], "promot": 276, "notifi": 276, "alist": [276, 336], "nmajor": 276, "rectangular": [276, 297, 301, 328, 340, 476, 493], "_a": 276, "far": [276, 302, 388, 470, 474, 480, 483, 491, 504, 505], "looser": 276, "spatialgrid": [276, 279, 284, 302, 323, 328, 336, 339, 340, 434, 455, 471, 478, 483], "armiobjectparametercollect": [276, 302, 334], "stat": [276, 438], "startindex": [276, 336], "classvar": 279, "axialindex": [279, 282, 471], "inher": [279, 388, 439, 475, 483, 502], "b0120": 279, "negativearea": 279, "multiplicti": 279, "ringnumb": 279, "fastest": [279, 299, 302], "transpos": 279, "clock": [279, 489], "pinmgflux": [279, 489], "5th": 279, "6th": [279, 488, 489, 491], "modifiedheight": 279, "conservemass": 279, "bottleneck": 279, "fly": [279, 304, 326, 327, 471], "numpin": 279, "newenrich": [279, 302], "rotationdegreesccw": 279, "central": [279, 323, 325, 336, 361, 434, 469, 475, 476], "bisect": 279, "trisect": 279, "overhang": 279, "scaleparamsrelatedtosymmetri": [279, 303, 306], "returnmass": 279, "bolblock": [279, 310], "hm": [279, 302, 471, 489], "initialload": 279, "ecpt": [279, 310], "hmden": [279, 302], "importgeom": [279, 301, 336], "_updateblockparametersafterdeplet": 279, "heighthot": 279, "initialb10componentvol": [279, 346, 489], "breplac": 279, "replacementblock": 279, "blist": [279, 404], "blist2": [279, 404], "recomputeareafract": 279, "stai": [279, 302, 304, 340, 350, 431], "linkedcomp": 279, "componentlist": [279, 304], "otherblock": 279, "dimval": 279, "betwen": 279, "returncomp": 279, "largestcompon": 279, "updatebolparam": 279, "settingpitch": 279, "setdimens": [279, 296, 299], "034": [279, 478], "phi_e": 279, "mfp": 279, "mfpab": 279, "diffusionlength": 279, "thrz": [279, 301], "updatedim": [279, 296, 299, 301], "optimizationinterfac": [279, 301, 336], "modifycas": [279, 301], "fuel001": 279, "fuel169": 279, "tracklength": [279, 299, 302], "integratedflux": [279, 299, 302], "lfpname": [279, 299, 302], "targetcompon": 279, "changer": [279, 306, 314, 393, 412, 471, 472], "_settargetcompon": 279, "centroid": [279, 327, 330, 333, 336, 428], "localcoordin": 279, "powerkeysuffix": 279, "linpowbypin": [279, 489], "pinloc": [279, 472, 489], "elig": 279, "rotnum": 279, "justcomput": 279, "rotateindexlookup": 279, "consecut": 279, "i_after_rot": 279, "i_before_rot": 279, "assembl": [279, 437, 494], "pintoductgap": 279, "diameter": 279, "face": [279, 284, 286, 326, 404, 469, 472], "contact": [279, 400, 469, 493], "spacer": [279, 484], "pinpitch": 279, "wet": 279, "perimet": [279, 297], "4a": 279, "minu": [279, 484, 488], "widthout": [279, 297, 298, 301, 341, 485, 493], "pertain": 280, "loader": [280, 283, 285], "rigidli": 280, "adher": 280, "mymaterialmodification1": 280, "mymaterialmodification2": 280, "hotchannelfactor": [280, 488, 493], "twrpclad": [280, 493], "yamlstr": [280, 287, 292], "griddesign": [280, 463], "trip": 280, "roundtrip": 280, "blueprintsobject": 280, "impl_reactor_0": [280, 476], "req_reactor": [280, 290, 346, 476], "closur": 280, "faster": [280, 302, 330, 336, 346], "irrelev": [280, 372], "inp": [280, 306, 372, 401], "textio": [280, 427], "attribute_collect": [280, 281, 282, 283, 284, 285, 286], "attributecollect": [280, 281, 283, 284, 285, 286], "cloader": 280, "10x": [280, 427], "roundtripload": 280, "submesh": [280, 317, 336, 472], "sophist": [280, 284, 427], "stabil": [280, 469, 493], "portion": [280, 496, 497], "test_assemblyblueprint": [280, 287], "testmaterialmodif": [280, 287, 288, 294], "test_blockblueprint": [280, 287], "testgriddedblock": [280, 287, 289], "test_blueprint": [280, 287], "testblueprint": [280, 287, 290], "testblueprintsschema": [280, 287, 290], "test_componentblueprint": [280, 287], "testcomponentblueprint": [280, 287, 291], "test_customisotop": [280, 287, 290], "testcustomisotop": [280, 287, 292], "testcustomisotopics_errorcondit": [280, 287, 292], "testnuclideflagsexpans": [280, 287, 292], "test_gridblueprint": [280, 287], "testroundtrip": [280, 287, 293], "testgridblueprintssect": [280, 287, 293], "testrztgridblueprint": [280, 287, 293], "test_materialmodif": [280, 287], "test_reactorblueprint": [280, 286, 287], "testreactorblueprint": [280, 287, 295], "key_typ": [280, 281, 285], "value_typ": [280, 281, 285], "getassemclass": [280, 281], "item_typ": [280, 281, 282, 283, 284, 285, 286], "byspecifi": [280, 281], "from_yaml": [280, 283, 285], "to_yaml": [280, 283], "readfromlatticemap": [280, 284], "expandtoful": [280, 284], "getmultiloc": [280, 284], "fileasactiveorinert": [280, 285], "from_yaml_key_v": [280, 285], "decoupl": [281, 472], "yamlizablestr": [281, 285], "mapattributecollect": [281, 285], "underneath": 281, "keyedlist": [281, 282, 283, 284, 285, 286], "_loadassembliesintocor": 281, "keyedlistattributecollect": [281, 282, 283, 284, 285, 286], "axialmeshpoint": [282, 463], "materialinput": 282, "byblock": 282, "_rtd": 283, "matmod": 283, "_resolvenuclid": 283, "pointer": [283, 480], "subassembli": [284, 471], "sh": [284, 484, 493], "rr": [284, 463, 484], "oc": [284, 484], "pc": [284, 465, 484], "latticemap": [284, 463], "latticedimens": 284, "gridbound": 284, "gridcont": 284, "__new__": [284, 286, 327], "setattr": [284, 286], "lazili": [284, 396], "unfold": 284, "domain": [284, 320, 325, 336, 388, 488], "latticeid": [284, 485, 493], "bluep": 284, "trymap": 284, "cobbl": 284, "regardless": [284, 302, 306, 328, 368, 496, 497], "prettier": 284, "oftentim": [285, 352, 355, 496], "creator": 285, "reachabl": 285, "expandto": [285, 292, 471, 485, 493], "activeset": 285, "inertset": 285, "inert": 285, "yamlizablefloat": 285, "rtd": 285, "key_nod": 285, "val_nod": 285, "key_attr": 285, "customisotopicsnam": [285, 490], "customisotopicnam": 285, "customisoptop": 285, "infrequ": 285, "intellig": 285, "elementalstokeep": 285, "oxygen16": 285, "examin": [285, 306, 336, 496], "conf_fission_product_library_nam": 285, "proven": 286, "loadassem": 286, "evst": 286, "initnewreactor": [286, 303, 314, 318], "twoblockinput_correct": [287, 288], "twoblockinput_wrongmeshpoint": [287, 288], "twoblockinput_wrongheight": [287, 288], "twoblockinput_wrongxstyp": [287, 288], "twoblockinput_wrongmatmod": [287, 288], "loadcustomassembli": [287, 288], "test_checkparamconsist": [287, 288], "test_constructspatialgrid": [287, 289], "test_getlocatorsatlatticeposit": [287, 289], "test_blocklattic": [287, 289], "test_nonlatticecomponenthasrightmult": [287, 289], "test_explicitflag": [287, 289], "test_densityconsistentwithcomponentconstructor": [287, 289], "test_getassemblytypebyspecifi": [287, 290], "test_specialisotopicvector": [287, 290], "test_componentdimens": [287, 290], "test_tracenuclid": [287, 290], "test_noduplicatekeysinyamlblueprint": [287, 290], "test_assemblyparamet": [287, 290], "test_nuclidesmc2v2": [287, 290], "test_nuclidesmc2v3": [287, 290], "test_merg": [287, 290], "test_cladding_invalid": [287, 290], "test_withoutblock": [287, 290], "test_toplevelcomponentinput": [287, 290], "test_componentgroupinput": [287, 290], "componentstr": [287, 291], "test_componentinitializationincompleteburnchain": [287, 291], "test_componentinitializationcontrolcustomisotop": [287, 291], "test_autodeplet": [287, 291], "test_componentinitializationamericiumcustomisotop": [287, 291], "test_componentinitializationthoriumburncustomisotop": [287, 291], "test_componentinitializationthoriumnoburncustomisotop": [287, 291], "test_unmodifi": [287, 292], "test_massfractionsareappli": [287, 292], "test_numberfract": [287, 292], "test_numberdens": [287, 292], "test_numberdensitiesanchor": [287, 292], "test_expandednatur": [287, 292], "test_unrepresentedareonlynatur": [287, 292], "test_densitymustbeposit": [287, 292], "test_nonconformantelementnam": [287, 292], "test_numberdensitiescannotspecifydens": [287, 292], "test_cont": [287, 293], "test_roundtrip": [287, 293], "test_tiny_map": [287, 293], "test_simpleread": [287, 293], "test_simplereadlatticemap": [287, 293], "test_simplereadnolatticemap": [287, 293], "test_construct": [287, 293, 295], "test_geomfil": [287, 293], "uzrinput": [287, 294], "boroninput": [287, 294], "loaduzrassembli": [287, 294], "test_nomaterialmodif": [287, 294], "test_u235_wt_frac_modif": [287, 294], "test_u235_wt_frac_bycomponent_modification1": [287, 294], "test_u235_wt_frac_bycomponent_modification2": [287, 294], "test_invalid_component_modif": [287, 294], "test_zr_wt_frac_modif": [287, 294], "test_both_u235_zr_wt_frac_modif": [287, 294], "test_checkbycomponentmaterialinput": [287, 294], "test_filtermaterialinput": [287, 294], "test_invalidmatmodnam": [287, 294], "test_matmodsupthemro": [287, 294], "test_simple_read": [287, 295], "test_materialdatasummari": [287, 295], "assemblyinput": 288, "intermedi": [289, 497, 500], "faithfulli": [290, 318, 476, 499], "hopefulli": [290, 478], "hardcod": 290, "saniti": [290, 314, 383, 475], "mess": 290, "incident": 290, "granular": [290, 390], "todo": [290, 327, 440, 475, 476], "wider": 290, "test_reactor_0": [290, 476], "_": [290, 341, 346, 426, 440, 470, 478, 483, 502, 505], "specifii": 290, "arbitrai": 290, "test_reactor_1": [290, 476], "mc2v3": [290, 497], "86602": [291, 292, 493], "992742": 292, "007204": [292, 482], "000054": 292, "w_i": [292, 302], "0221e23": 292, "n_norm": 292, "50000000e": 292, "29500000e": 292, "92650000e": 292, "992650": 292, "007295": 292, "000055": 292, "65398007e": 292, "52549755e": 292, "79692055e": 292, "zip": [292, 454, 455, 458, 459, 470, 482, 485, 505], "decim": [292, 387, 427], "u_isotop": 292, "6539102e": 292, "5254048e": 292, "7967943e": 292, "block_0": 292, "basic_fuel": 292, "block_1": 292, "block_2": 292, "block_3": 292, "block_4": 292, "block_5": 292, "block_6": 292, "unmodifi": 292, "mro": 294, "bcomp": 296, "lowercas": 296, "mergewith": [296, 297, 298, 299, 301, 490], "componentparametercollect": [296, 299], "modarea": [296, 297, 298, 301, 490, 493], "othercompon": [296, 299], "freez": 296, "unshapedcomponentparametercollect": 296, "makemgfluxblock": 296, "makemassadditioncompon": 296, "dh": 296, "pai": [296, 493], "attent": [296, 493], "companion": [296, 480], "thermal_expansion_dim": [296, 297, 298, 299, 301], "getcircleinnerdiamet": [296, 297, 298, 299, 472], "isencapsulatedbi": [296, 297], "getperimet": [296, 297], "getpitchdata": [296, 297, 299], "islatticecompon": [296, 297], "non_dimension_nam": [296, 299], "temperatureink": [296, 299], "setlink": [296, 299], "setproperti": [296, 299], "applymaterialmassfracstonumberdens": [296, 299, 304], "adjustdensityforheightexpans": [296, 299], "getheightfactor": [296, 299], "containsvoidmateri": [296, 299], "containssolidmateri": [296, 299], "setarea": [296, 299], "settemperatur": [296, 299, 453], "getmassenrich": [296, 299], "dimensionislink": [296, 299], "getdimensionnameslinkedto": [296, 299], "clearlinkedcach": [296, 299], "getlinkedcompon": [296, 299], "getthermalexpansionfactor": [296, 299], "setdimensionreport": [296, 299], "mergenuclidesinto": [296, 299], "impl_reactor_shapes_0": [297, 476], "req_reactor_shap": [297, 298, 301, 476], "circleparametercollect": 297, "www3": 297, "wolframalpha": 297, "hexagonparametercollect": 297, "lengthout": [297, 298, 301, 341, 493], "lengthinn": [297, 301, 341, 493], "widthinn": [297, 301, 341, 485, 493], "rectangleparametercollect": 297, "hollow": [297, 298, 484], "lenth": 297, "triangleparametercollect": 297, "impl_reactor_shapes_1": [298, 476], "hole": [298, 341, 408, 471, 484, 493], "holeod": [298, 341, 493], "nhole": [298, 341, 493], "holedhexagonparametercollect": 298, "holeop": [298, 341, 493], "hexholedcircleparametercollect": 298, "holedrectangleparametercollect": 298, "holedsquareparametercollect": 298, "axialpitch": [298, 341, 463, 484, 493], "helixdiamet": [298, 341, 463, 484, 493], "spiral": 298, "mathworld": 298, "wolfram": 298, "climb": 298, "exterior": 298, "interior": [298, 472], "helixparametercollect": 298, "specfi": 299, "componettyp": 299, "eas": [299, 352, 469, 471], "addition": [299, 305, 437, 469, 476, 493, 496], "inputtemperatureinc": [299, 304, 499], "impl": [299, 372], "impl_reactor_thermal_expansion_0": 299, "req_reactor_thermal_expans": [299, 341, 476], "othercomp": 299, "othercompkei": 299, "newhot": 299, "accommod": [299, 404, 434], "lfpcollect": [299, 302], "proport": [299, 448], "rho": [299, 302, 391], "f_n": 299, "dn": 299, "sim": 299, "heterogen": [299, 305, 475, 493], "nden": [299, 302, 447, 478, 489], "unlist": [299, 302], "ambigu": 299, "blend": [299, 493], "sum_i": [299, 302, 318, 475], "a_i": [299, 302, 502], "n_a": [299, 302], "avogadro": 299, "retainlink": 299, "indirectli": [299, 391], "intersect": 299, "percentag": [299, 304, 336, 440, 489, 490], "includenuclid": [299, 302, 478], "comptomergewith": 299, "pervious": 299, "whichev": [299, 336, 434, 436, 469], "weigh": [299, 336], "impl_reactor_shapes_2": [301, 476], "sphereparametercollect": 301, "heightout": [301, 341, 493], "heightinn": [301, 341, 493], "cuboid": 301, "centric": 301, "cubeparametercollect": 301, "inner_radiu": [301, 341, 493], "outer_radiu": [301, 341, 493], "inner_theta": [301, 493], "outer_theta": [301, 493], "283185307179586": 301, "xxxx": 301, "xxxxxxx": 301, "refvolum": 301, "refheight": 301, "radialsegmentparametercollect": 301, "radius_differenti": [301, 341, 493], "inner_axi": [301, 341, 493], "azimuthal_differenti": [301, 493], "thrzactiveheight": 301, "thrzactiveradiu": 301, "outer_axi": 301, "principl": [302, 475], "everywher": 302, "analogi": [302, 475], "unsaf": 302, "unexpect": [302, 394, 440], "uint64": 302, "uint8": 302, "unsign": 302, "hood": [302, 484], "gang": 302, "word": [302, 303, 321, 328, 342, 352, 372, 406, 440, 475], "rapidli": [302, 469], "weak": 302, "complabel": 302, "unpickl": [302, 327, 387], "dig": 302, "__reduce__": [302, 325], "testfuel": [302, 336], "typeid": 302, "bitwis": [302, 333, 396, 414], "qualifi": [302, 436, 471], "robust": 302, "strongli": [302, 352, 433, 499], "disallow": 302, "volfrac": [302, 453], "test_consistentareawithoverlappingcompon": [302, 338, 340], "insur": 302, "ai": 302, "m_i": 302, "sum_j": 302, "m_j": 302, "m_": 302, "nuclidetoadjust": 302, "elementtoadjust": 302, "nuclidetoholdconst": 302, "elementtoholdconst": 302, "5zr": 302, "oi": 302, "f1": 302, "f2": 302, "frequent": [302, 388, 433, 475, 478, 484], "energydepconst": 302, "totalenergygenconst": 302, "fissionenergygenconst": 302, "fn": 302, "caller": 302, "_distanc": 302, "ntot": 302, "unnatur": 302, "anticip": 302, "dealt": 302, "therebi": 302, "nearli": [302, 471, 480, 499, 500], "volumeintegr": [302, 336], "addsymmetricposit": 302, "calcbasedonfullobj": 302, "postion": 302, "weightingparam": 302, "volumeaverag": 302, "grandchildren": 302, "x_i": 302, "unset": 302, "returnobj": 302, "sought": 302, "magnitud": [302, 304, 328], "pertin": [302, 439], "constitu": 302, "formula": [302, 318, 428, 472, 475, 481], "mini": [302, 400], "maxi": 302, "minj": 302, "maxj": 302, "mink": 302, "maxk": 302, "shapeclass": 302, "materialnam": [302, 462], "selector": 302, "componentswiththismat": 302, "npin": [302, 489], "elementalnuclid": 302, "naturalnuclid": 302, "domin": 302, "tripl": [302, 327, 488, 489, 491], "pump": [302, 469, 485, 488, 491, 493], "apart": 302, "spatialoc": 302, "seq": [302, 399], "unari": 302, "getattr": 302, "child1": 302, "child2": 302, "child3": 302, "grandchild1": 302, "grandchild2": 302, "grandchild3": 302, "isinst": [302, 320], "synchron": [302, 332, 437, 476], "parmeterdefinit": [302, 332], "ndensiti": 302, "rxnrate": 302, "compris": [302, 493], "rabc": 302, "implic": [302, 327], "unclear": 302, "__exit__": 302, "xssuffix": 302, "_label_": 302, "narrai": 302, "rxn": 302, "tediou": [303, 469], "autom": [303, 436, 448, 468, 474, 483, 496], "generalparametersweepconvert": [303, 308], "parametersweepconvert": [303, 308, 309], "custommodifi": [303, 308, 309], "test_axialexpansionchang": [303, 311, 472], "axialexpansiontestbas": [303, 311, 312], "testaxialexpansionheight": [303, 311, 312], "testconserv": [303, 311, 312], "testmanagecoremesh": [303, 311, 312], "testexcept": [303, 311, 312], "testdeterminetargetcompon": [303, 311, 312], "testgetsolidcompon": [303, 311, 312], "testinputheightsconsideredhot": [303, 311, 312], "checkcoldblockheight": [303, 311, 312], "testlinkag": [303, 311, 312], "buildtestassemblywithfakemateri": [303, 311, 312], "fakemat": [303, 311, 312], "fakematexcept": [303, 311, 312], "test_blockconvert": [303, 311], "testblockconvert": [303, 311, 313], "testtocircl": [303, 311, 313], "buildcontrolblockwithlinkednegativeareacompon": [303, 311, 313], "test_geometryconvert": [303, 311], "testgeometryconvert": [303, 311, 314], "testhextorzconvert": [303, 311, 314], "testedgeassemblychang": [303, 311, 314], "testthirdcorehextofullcorechang": [303, 311, 314], "test_meshconvert": [303, 311], "testrzreactormeshconvert": [303, 311, 315], "test_pintypeblockconvert": [303, 311], "testpintypeconvert": [303, 311, 316], "test_uniformmesh": [303, 311], "dummyfluxopt": [303, 311, 317], "testconverterfactori": [303, 311, 317], "testassemblyuniformmesh": [303, 311, 317], "testuniformmeshgener": [303, 311, 317], "testuniformmeshcompon": [303, 311, 317], "applynonuniformheightdistribut": [303, 311, 317], "testuniformmesh": [303, 311, 317], "testgammauniformmesh": [303, 311, 317], "testparamconvers": [303, 311, 317], "testuniformmeshnonuniformassemflag": [303, 311, 317], "performprescribedaxialexpans": [303, 304], "performthermalaxialexpans": [303, 304], "setassembli": [303, 304], "applycoldheightmassincreas": [303, 304], "axiallyexpandassembli": [303, 304], "managecoremesh": [303, 304], "setexpansionfactor": [303, 304], "updatecomponenttempsby1dtempfield": [303, 304], "updatecomponenttemp": [303, 304], "computethermalexpansionfactor": [303, 304], "getexpansionfactor": [303, 304], "determinetargetcompon": [303, 304, 312], "istargetcompon": [303, 304], "dissolvecomponentintocompon": [303, 305], "restablishlink": [303, 305], "plotconvertedblock": [303, 305, 448], "addr": [303, 306, 314], "createhomogenizedrztblock": [303, 306], "plotconvertedreactor": [303, 306, 318, 449], "expected_input_symmetri": [303, 306], "restorepreviousgeometri": [303, 306], "addedgeassembli": [303, 306], "removeedgeassembli": [303, 306], "generatemesh": [303, 307], "writemeshdata": [303, 307], "setringstoconvert": [303, 307], "setaxialmesh": [303, 307], "setthetamesh": [303, 307], "generatecommonmesh": [303, 317, 318], "reactorparammappingcategori": [303, 318], "blockparammappingcategori": [303, 318], "applystatetoorigin": [303, 318], "makeassemwithuniformmesh": [303, 318], "setassemblystatefromoverlap": [303, 318], "clearstateonassembli": [303, 318], "updatereactionr": [303, 318], "paramsett": [303, 318], "paramgett": [303, 318], "wise": [304, 340, 491, 496], "nonuniformassemflag": [304, 497], "referenceassembli": 304, "isdetailedaxialexpans": 304, "disjoint": 304, "finest": 304, "linkag": [304, 312], "componentlst": 304, "setfuel": 304, "tempgrid": [304, 312], "tempfield": 304, "expandfromtinputtothot": 304, "perfectli": [304, 380, 439], "presev": 304, "gradient": 304, "tall": [304, 322, 484], "cheap": [304, 469], "oldmesh": 304, "stdassem": 304, "linkedblock": 304, "_getlinkedblock": 304, "linkedcompon": 304, "_getlinkedcompon": 304, "_isfuellock": [304, 312], "expfrac": 304, "l1": [304, 312], "retriv": 304, "flagofinterest": 304, "_componentdeterminesblockheight": [304, 312], "sourceblock": [305, 448], "solutenam": 305, "solventnam": 305, "minid": 305, "_sourceblock": 305, "solvent": 305, "dissolv": 305, "solutelink": 305, "specifiedminid": 305, "_verifyexpans": 305, "farthest": 305, "driverfuelblock": [305, 448], "concentr": 305, "surround": [305, 468, 475, 493], "mcc3": 305, "pincomponentsring1": 305, "pincomponentsring2": 305, "nonpin": 305, "annulu": [305, 484, 493], "radii": 305, "sidelength": 305, "disttorodcent": 305, "numrod": 305, "rodradii": 305, "radiilist": 305, "radtorodcent": 305, "thicknessoneachsid": 305, "r1": [305, 426, 437], "r2": [305, 426, 437, 496], "geomconv": 306, "reactorconvert": 306, "usemostcommonxsid": 306, "expandreactor": 306, "newr": 306, "convreactor": [306, 318, 449], "dif3dinterfac": 306, "dif3drz": 306, "rzgeom_actu": 306, "overwritelist": 306, "ringstoadd": 306, "furthest": [306, 488], "converterset": [306, 307, 449], "stricthomogen": 306, "rztheta": [306, 315, 328, 469], "uniformthetamesh": [306, 307, 449], "thetabin": [306, 307, 449], "radialconversiontyp": [306, 449], "axialconversiontyp": [306, 449], "_rzthetareactormeshconverterbyaxialcoordin": [306, 307], "_rzthetareactormeshconverterbyaxialbin": [306, 307], "homogenizeaxiallybyflag": 306, "dissimilar": 306, "byringcomposit": 306, "radialmesh": 306, "homblock": 306, "loweraxialz": 306, "upperaxialz": 306, "radialthetazoneassem": 306, "fnamebas": 306, "coremap": [306, 478, 484], "explan": 306, "myreactor": 306, "sourcereactor": [306, 318], "undo": 306, "edgechang": 306, "difnt": 306, "paramstoscalesubset": 306, "_rzthetareactormeshconverterbyringcomposit": 307, "_rzthetareactormeshconverterbyaxialflag": 307, "inputlist": 307, "listnam": 307, "expectedvalu": 307, "adjustlastvalu": 307, "totalnumdatapoint": 307, "numperbin": 307, "minnum": 307, "settingtomodifi": 309, "applycustomperturb": 309, "sd": 310, "fuel_r": 310, "clad_ir": 310, "fuel_od": 310, "clad_id": 310, "steel_component_lst": [311, 312], "test_assemblyaxialexpansionheight": [311, 312], "expandassemformassconservationtest": [311, 312], "test_thermalexpansioncontractionconservation_simpl": [311, 312], "test_thermalexpansioncontractionconservation_complex": [311, 312], "complexconservationtest": [311, 312], "test_prescribedexpansioncontractionconserv": [311, 312], "test_targetcomponentmassconserv": [311, 312], "test_nomovementaclp": [311, 312], "test_reset": [311, 312], "test_computethermalexpansionfactor": [311, 312], "test_managecoremesh": [311, 312], "test_istopdummyblockpres": [311, 312], "test_setexpansionfactor": [311, 312], "test_updatecomponenttempsby1dtempfieldvalueerror": [311, 312], "test_updatecomponenttempsby1dtempfieldruntimeerror": [311, 312], "test_assemblyaxialexpansionexcept": [311, 312], "test_isfuellock": [311, 312], "test_determinelink": [311, 312], "test_getlinkedcompon": [311, 312], "test_determinetargetcompon": [311, 312], "test_determinetargetcomponentblockwithmultipleflag": [311, 312], "test_specifytargetcomponent_notfound": [311, 312], "test_specifytargetcomponent_singlesolid": [311, 312], "test_specifytargetcomponet_multiplefound": [311, 312], "test_manuallysettargetcompon": [311, 312], "test_getsolidcompon": [311, 312], "test_coldassemblyexpans": [311, 312], "checkcoldheightblockmass": [311, 312], "test_overlappingsolidpin": [311, 312], "test_differentmultnotoverlap": [311, 312], "test_solidpinnotoverlappingannulu": [311, 312], "test_solidpinoverlappingwithannulu": [311, 312], "test_annularpinnotoverlappingwithannulu": [311, 312], "test_annularpinoverlappingwithannul": [311, 312], "test_thinannularpinoverlappingwiththickannulu": [311, 312], "test_annularhexoverlappingthickannularhex": [311, 312], "test_liquid": [311, 312], "test_unshapedcomponentandcircl": [311, 312], "test_dissolvewireintocool": [311, 313], "test_dissolvelinerintoclad": [311, 313], "test_build_nthr": [311, 313], "test_convert": [311, 313, 314], "test_converthexwithfueldriv": [311, 313], "test_converthexwithfueldriveronnegativecomponentareablock": [311, 313], "test_convertcartesianlatticewithfueldriv": [311, 313], "test_fromhex": [311, 313], "test_fromringofrod": [311, 313], "test_addr": [311, 314], "test_setnumberoffuelassem": [311, 314], "test_getassembliesinsector": [311, 314], "test_createhomogenizedrztblock": [311, 314], "test_edgeassembli": [311, 314], "test_growtofullcorefromthirdcor": [311, 314], "test_initnewfullreactor": [311, 314], "test_skipgrowtofullcorewhenalreadyfullcor": [311, 314], "test_meshbyringcompositionaxialbinssmallcor": [311, 315], "test_meshbyringcompositionaxialcoordinatessmallcor": [311, 315], "test_meshbyringcompositionaxialflagssmallcor": [311, 315], "test_meshbyringcompositionaxialbinslargecor": [311, 315], "test_meshbyringcompositionaxialcoordinateslargecor": [311, 315], "test_meshbyringcompositionaxialflagslargecor": [311, 315], "test_adjustcladthicknessbyod": [311, 316], "test_adjustcladthicknessbyid": [311, 316], "test_converterfactori": [311, 317], "test_makeassemwithuniformmesh": [311, 317], "test_makeassemwithuniformmeshsubmesh": [311, 317], "test_makeassemuniformmeshparammappingsamemesh": [311, 317], "test_clearassemblyst": [311, 317], "test_computeaverageaxialmesh": [311, 317], "test_filtermesh": [311, 317], "test_filteredtopandbottom": [311, 317], "test_generatecommonmesh": [311, 317], "test_blueprintcopi": [311, 317], "test_convertnumberdens": [311, 317], "test_applystatetoorigin": [311, 317], "test_setstatefromoverlap": [311, 317], "test_reactorconvers": [311, 317], "549755813888": [312, 319], "1099511627776": [312, 319], "2199023255552": [312, 319], "4398046511104": [312, 319], "70368744177664": [312, 319], "562949953421312": [312, 319], "9007199254740992": [312, 319], "288230376151711744": [312, 319], "coldtemp": 312, "hotinlettemp": 312, "360": [312, 480, 497], "numtempgridpt": 312, "tempstep": 312, "inlet": [312, 480, 488, 489, 493, 497], "nomin": [312, 469, 488, 489], "metric": [312, 469], "isotherm": [312, 475], "caught": 312, "target_flags_in_preferred_ord": 312, "specifytargetcompon": 312, "refsmallreactorbas": 312, "deltat": 312, "bstd": 312, "bexp": 312, "flagtyp": 312, "underpredict": 312, "asserttyp": 312, "strforassert": 312, "componentstotest": 312, "assertionbool": 312, "commonarg": 312, "truth": [312, 336], "typea": 312, "typeb": 312, "annuli": 312, "setnumberoffuelassem": 314, "sourceassem": [317, 318], "newassem": [317, 484], "_decuspaxialmesh": 317, "dest": [317, 387], "pden": [317, 404, 464, 469, 478, 489], "align": [318, 394, 398, 404, 469, 493, 503], "uniformreactor": 318, "minimummeshs": 318, "decusp": [318, 472], "uniformmeshminimums": [318, 497], "_computeaverageaxialmesh": 318, "miminmum": 318, "cusp": 318, "reactorparamstomap": 318, "blockparamstomap": 318, "_setparamstoupd": 318, "reactorparamnam": 318, "blockparamnam": 318, "lost": [318, 437], "newmesh": 318, "mapnumberdens": 318, "includepincoordin": 318, "sourceassembli": 318, "destinationassembli": 318, "z_1": 318, "z_2": 318, "dz": 318, "piecewis": [318, 400], "smarter": 318, "param1": 318, "val1": [318, 405], "param2": 318, "val2": [318, 405], "b2": 318, "pinquant": [318, 330, 333, 472], "powergener": [318, 489], "powerneutron": [318, 489], "powergamma": [318, 489], "paramdef": [318, 330, 332, 333], "overlappingblockinfo": 318, "h_i": 318, "bind": [319, 332, 434, 493], "categor": [319, 336, 346, 367, 478], "noun": 319, "adject": 319, "disambigu": 319, "widen": 319, "led": [319, 493], "clearli": [319, 349, 496], "stori": 319, "substr": 319, "decid": [319, 334, 441], "canon": [319, 384], "mention": [319, 439, 475], "plenti": 319, "lta": 319, "distinguish": [319, 485], "circul": 319, "bundl": [319, 484, 488, 489, 491], "512": 319, "1024": 319, "2048": 319, "4096": 319, "8192": 319, "16384": 319, "32768": 319, "65536": 319, "131072": 319, "262144": 319, "524288": 319, "1048576": 319, "2097152": 319, "4194304": 319, "8388608": 319, "16777216": 319, "33554432": 319, "67108864": 319, "134217728": 319, "268435456": 319, "536870912": 319, "1073741824": 319, "2147483648": 319, "4294967296": 319, "8589934592": 319, "17179869184": 319, "34359738368": 319, "68719476736": 319, "137438953472": 319, "274877906944": 319, "8796093022208": 319, "17592186044416": 319, "35184372088832": 319, "140737488355328": 319, "281474976710656": 319, "1125899906842624": 319, "2251799813685248": 319, "4503599627370496": 319, "18014398509481984": 319, "36028797018963968": 319, "72057594037927936": 319, "144115188075855872": 319, "576460752303423488": 319, "1152921504606846976": 319, "2305843009213693952": 319, "4611686018427387904": 319, "9223372036854775808": 319, "18446744073709551616": 319, "36893488147419103232": 319, "73786976294838206464": 319, "147573952589676412928": 319, "straightforward": [320, 333, 484, 485], "quarter": [320, 328, 485, 493], "harder": [320, 440], "proceed": [320, 470, 494, 505], "reliev": 320, "elif": [320, 439], "instrument": 320, "forbid": 320, "shapestr": 320, "symmetrystr": 320, "throughcenterassembli": 320, "symmetryinput": 320, "outcom": [320, 476], "fromrectangl": [321, 323], "getglobalcoordin": [321, 327, 456, 457, 458, 459, 464, 478, 485], "test_grid": 321, "testspatialloc": 321, "test_recurs": 321, "getringpo": [321, 323, 326, 327, 328, 329], "indicestoringpo": [321, 326], "fromncel": [321, 322], "getsymmetricequival": [321, 322, 323, 325, 326, 327, 329, 336], "locatorindomain": [321, 322, 323, 325, 326, 329], "getindicesfromringandpo": [321, 322, 323, 326, 328, 329], "getminimumr": [321, 322, 323, 326, 328, 329], "getpositionsinr": [321, 322, 323, 326, 328, 329], "overlapswhichsymmetrylin": [321, 322, 323, 325, 326, 329], "changepitch": [321, 323, 326], "isaxialonli": [321, 325, 328], "getcoordin": [321, 325, 328, 329], "getcellbas": [321, 325, 328], "getcelltop": [321, 325, 328], "frompitch": [321, 326, 455, 457], "getneighboringcellindic": [321, 326, 328], "trianglecoord": [321, 326], "isinfirstthird": [321, 326], "generatesortedhexlocationlist": [321, 326, 457], "allpositionsinthird": [321, 326], "detachedcopi": [321, 327], "parentloc": [321, 327], "getcompleteindic": [321, 327], "getlocalcoordin": [321, 327], "getglobalcellbas": [321, 327], "getglobalcelltop": [321, 327], "distanceto": [321, 327], "unitsteplimit": [321, 322, 323, 326, 328, 329], "unitstep": [321, 322, 323, 326, 328, 329, 458], "getaboveandbelowcellindic": [321, 328], "getindexbound": [321, 328], "getbound": [321, 328], "getlocatorfromringandpo": [321, 328], "getallindic": [321, 328], "fromgeom": [321, 329], "indicesofbound": [321, 329], "numcel": [322, 398], "symmetryoverlap": [322, 323, 325, 326], "noreturn": [322, 323, 329], "1cm": 322, "tricker": 323, "lai": 323, "illustr": 323, "draw": [323, 394, 465], "ax": [323, 327, 328, 400, 404, 453, 455, 457, 458, 459, 462, 465], "impl_reactor_mesh_1": [323, 476], "req_reactor_mesh": [323, 326, 328, 329, 476], "numr": [323, 326, 398], "isoffset": 323, "manhattan": 323, "quadrant": [323, 328], "diagon": 323, "childrenbyloc": [323, 434], "_isthroughcent": 323, "xw": 323, "yw": 323, "dx": 325, "boundary_cent": [325, 326], "nativecoord": [325, 327, 328, 329], "hashabl": 325, "happi": [325, 436, 493], "__getstate__": [325, 332, 345, 370], "__setstate__": 325, "neighbor": [326, 328, 336], "pointedendup": 326, "impl_reactor_mesh_2": [326, 476], "Being": [326, 469], "newpitchcm": 326, "includetopedg": 326, "nloc": 326, "a3001": 326, "a3003": 326, "includeedgeassem": 326, "immut": [327, 333, 361, 405, 471, 472], "unbeliev": 327, "inexplic": [327, 404, 406], "strip": 327, "annoi": 327, "tagalong": 327, "rack": 327, "awkward": 327, "ok": [327, 479], "__getitem__": [327, 333], "mygrid": 327, "parentgrid": 327, "vice": 328, "versa": 328, "dxi": 328, "dxj": 328, "jxk": 328, "dyi": 328, "dyj": 328, "dyk": 328, "dzi": 328, "dzj": 328, "dzk": 328, "dmn": 328, "repetit": [328, 336, 427, 489, 497], "endpoint": [328, 336], "constrain": [328, 336, 448, 449, 471, 484], "0th": 328, "settl": [328, 394, 488], "struggl": [328, 502], "orthogon": 328, "wast": 328, "compact": 328, "intuit": [328, 334, 493, 494], "phantom": 328, "2x": 328, "backrefer": 328, "cleaner": [328, 333, 412], "disadvantag": 328, "pollut": [328, 475], "impl_reactor_mesh_0": [328, 476], "recreat": 328, "exsist": 328, "dens": [328, 499], "unphys": [328, 476], "zeta": [329, 476], "2pi": [329, 429], "impl_reactor_mesh_3": [329, 476], "geominfo": 329, "readgeomxml": 329, "rad0": 329, "rad1": 329, "theta0": 329, "theta1": 329, "0001": [329, 483], "hidden": [330, 332, 475], "_p_": 330, "_p_cyclelength": 330, "circumv": 330, "rational": 330, "behind": [330, 439, 471, 475, 481, 484], "5e13": 330, "fueltemp": 330, "experi": [330, 468, 469, 494], "thefreedictionari": 330, "atmospher": 330, "meriam": 330, "webster": 330, "descriptor": [330, 332], "protocol": [330, 332, 387, 468], "all_definit": 330, "secret": 330, "pep": 330, "412": 330, "protect": [330, 440, 472, 475], "__slots__": 330, "lite": 330, "roundabout": 330, "consumpt": 330, "pylint": [330, 472], "overwhelm": 330, "unsustain": 330, "languag": [330, 456, 469, 484], "__dict__": 330, "slot": 330, "becam": [330, 396, 475], "oner": [330, 334], "tradit": [330, 333, 469], "__something__": 330, "applyparamet": [330, 332], "definint": 330, "getsyncdata": [330, 332], "cumulativeovercycl": [330, 333], "assigninblueprint": [330, 333], "retainonreplac": [330, 333], "fluxquant": [330, 333], "multigroupquant": [330, 333], "reactivitycoeffici": [330, 333], "volume_integr": [330, 333], "collectiontyp": [330, 333], "fieldnam": [330, 333], "savetodb": [330, 333, 497], "atloc": [330, 333], "incategori": [330, 333], "unchanged_sinc": [330, 333], "fortyp": [330, 333], "resetassignmentflag": [330, 333], "setassignmentflag": [330, 333], "bynameandtyp": [330, 333], "bynameandcollectiontyp": [330, 333], "lock": [330, 332, 333, 334, 405, 431, 472, 489], "towritetodb": [330, 333], "associateparameterdefinitioncollect": [330, 333], "parameterfactori": 331, "setparam": 331, "27977": 332, "thread": [332, 387, 480], "gil": 332, "_state": [332, 345], "illeg": [332, 405], "redefin": 332, "_backup": 332, "_hist": 332, "transmit": [332, 437], "_allfield": [332, 345], "accessor": 332, "proactiv": 332, "similarli": [332, 336, 475, 485, 493, 494], "somedict": 332, "paramt": 332, "applydefinit": 332, "since_last_distribute_st": 332, "parmatercollect": 332, "proxi": 332, "mark": [333, 436, 440, 493], "deseri": [333, 367, 475], "datatyp": [333, 475], "nativ": [333, 354, 396, 437, 503], "wrote": 333, "dillig": 333, "paramstr": 333, "reassign": [333, 475], "myparametercollect": 333, "diet": 333, "_p_speed": 333, "_representedtyp": 333, "categorynam": 333, "mask": 333, "complementari": 333, "compositetyp": 333, "vipan": 333, "htdoc": 333, "bitwisehelp": 333, "assignedmask": 333, "bitmask": 333, "syntax": [333, 494], "brief": [333, 478], "mutabl": [333, 396, 437, 475], "engag": [333, 334, 433], "mimic": [334, 345, 396], "blindli": 334, "parametercollectionclass": 334, "bparametercollect": 334, "needn": 334, "ourselv": 334, "sausag": 334, "profici": 334, "calss": 334, "refin": [336, 472, 497], "owner": 336, "impl_reactor_hierarchy_0": [336, 476], "req_reactor_hierarchi": [336, 426, 476], "heirach": 336, "reactorparametercollect": 336, "powerdens": [336, 472, 491, 497], "kghm": [336, 468, 472, 489], "kgfi": [336, 449, 472, 489], "trackassem": [336, 472, 497], "spend": [336, 441, 469], "fact": [336, 437, 484], "ringnum": 336, "overridecircularringmod": [336, 346], "regener": [336, 485, 497], "unoccupi": 336, "chargecycl": [336, 488], "indexbas": 336, "maxr": 336, "nring": 336, "nassmwithblank": 336, "read1d": 336, "assemtypespec": 336, "maxblock": 336, "circularringmod": [336, 497], "fullcor": 336, "numedgeassem": 336, "_modifygeometryafterload": 336, "ringpitch": 336, "a0001": [336, 478], "sortkei": 336, "includebolassem": 336, "includesfp": 336, "includeal": 336, "_children": 336, "nozzletyp": [336, 488, 493], "nozzleid": 336, "a0001a": 336, "blocksbynam": 336, "blocksbylocnam": 336, "btype": 336, "slipperi": 336, "detachallassembli": 336, "regrow": 336, "suffic": 336, "broaden": [336, 502], "coolantnuclid": 336, "fuelnuclid": 336, "structurenuclid": 336, "assemblylevel": 336, "loccont": 336, "speedup": [336, 427, 433], "energyord": 336, "extsrc": [336, 489], "nxg": 336, "locationstr": 336, "assemblynam": 336, "foundassembli": 336, "b0014": 336, "showblank": 336, "duplicateassembliesonreflectiveboundari": 336, "border": [336, 455], "asymmetr": 336, "assemblytyp": 336, "allflux": 336, "symmetrylineid": 336, "applysubmesh": 336, "meshval": 336, "imbalanc": 336, "trz": [336, 344], "xyz": [336, 458, 459], "float_dimension_decim": [336, 472], "divis": [336, 469, 475, 478], "9th": 336, "10th": 336, "heightcm": 336, "meshlist": 336, "extraassem": 336, "mcpnxt": 336, "breed": [336, 468, 489, 491], "flux2weight": 336, "avgtemp": 336, "preval": 336, "pitchincm": 336, "lowestfuelheightincm": 336, "coreparametercollect": 336, "zonedefinit": [336, 349, 497], "002": [336, 349, 471, 478, 493], "defunct": 337, "tri": [337, 402, 494], "modifiedpath": 337, "eqpathindex": 337, "eqpathcycl": 337, "outputfilenam": [337, 401], "geoemtri": 337, "test_sortnoloc": [338, 339], "test_uthzrmateri": [338, 339], "test_notesparamet": [338, 339], "test_it": [338, 339], "test_len": [338, 339], "test_append": [338, 339], "test_extend": [338, 339, 407, 414], "test_moveto": [338, 339], "test_getnam": [338, 339], "test_getnum": [338, 339], "test_getloc": [338, 339], "test_getarea": [338, 339, 340, 341], "test_getvolum": [338, 339, 341], "test_doubleresolut": [338, 339], "test_adjustresolut": [338, 339], "test_getaxialmesh": [338, 339], "test_calculatezcoord": [338, 339], "test_gettotalheight": [338, 339], "test_getheight": [338, 339], "test_getreactiveheight": [338, 339], "test_getfissilemass": [338, 339, 342], "test_getpufrac": [338, 339], "test_getmass": [338, 339, 340, 346], "test_getzrfrac": [338, 339], "test_getmaxuraniummassenrich": [338, 339], "test_getag": [338, 339], "test_makeaxialsnaplist": [338, 339], "test_snapaxialmeshtorefer": [338, 339], "test_updatefromassembli": [338, 339], "test_hasflag": [338, 339, 340, 342], "test_renameblocksaccordingtoassemblynum": [338, 339], "test_getblock": [338, 339], "test_getfirstblock": [338, 339], "test_getfirstblockbytyp": [338, 339], "test_getblockdata": [338, 339], "test_getmaxparam": [338, 339, 342], "test_getelevationsmatchingparamvalu": [338, 339], "test_calcavgparam": [338, 339], "test_calctotalparam": [338, 339], "test_reattach": [338, 339], "test_reestablishblockord": [338, 339], "test_countblocksoftyp": [338, 339, 346], "test_getdim": [338, 339], "test_getdominantmateri": [338, 339, 346], "test_iter": [338, 339, 348, 387, 407, 414], "test_getblocksandz": [338, 339], "test_getblocksbetweenelev": [338, 339], "test_getparamvaluesatz": [338, 339], "test_hascontinuouscoolantchannel": [338, 339], "test_carestiancoordin": [338, 339], "test_pinplenumvolum": [338, 339], "test_averageplenumtemperatur": [338, 339], "test_rot": [338, 339], "test_snapaxialmeshtoreferenceconservingmassbasedonblockignit": [338, 339], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield": [338, 339], "test_areacheck": [338, 339], "test_getsmeardens": [338, 340], "test_getsmeardensitymultiplelin": [338, 340], "test_timenodeparam": [338, 340], "test_gettyp": [338, 340], "test_settyp": [338, 340], "test_homogenizedmixtur": [338, 340], "test_getxstyp": [338, 340], "test_27b_setbugroup": [338, 340], "test_setzeroheight": [338, 340], "test_getvolumefractionswithzeroheight": [338, 340], "test_getvolumefractionwithoutpar": [338, 340], "test_cleardens": [338, 340], "test_removemass": [338, 340], "test_setnumberdens": [338, 340], "test_setmass": [338, 340, 342], "test_gettotalmass": [338, 340], "test_replaceblockwithblock": [338, 340], "test_getwettedperimet": [338, 340], "test_getflowareaperpin": [338, 340], "test_getflowarea": [338, 340], "test_gethydraulicdiamet": [338, 340], "test_adjustuenrich": [338, 340], "test_setloc": [338, 340], "test_setbulimitinfo": [338, 340], "test_gettotalnden": [338, 340], "test_gethmden": [338, 340], "test_getfissilemassenrich": [338, 340], "test_getmicrosuffix": [338, 340], "test_geturaniummassenrich": [338, 340], "test_geturaniumnumenrich": [338, 340], "test_getnumberofatom": [338, 340], "test_getpu": [338, 340], "test_adjustdens": [338, 340], "test_completeinitialload": [338, 340], "test_hascompon": [338, 340], "test_getcomponentnam": [338, 340], "test_getcompon": [338, 340], "test_getcomponentsofshap": [338, 340], "test_getcomponentsofmateri": [338, 340], "test_getcomponentbynam": [338, 340], "test_getsortedcomponentsinsideofcompon": [338, 340], "test_getsortedcomponentsinsideofcomponentspecifiedtyp": [338, 340], "test_getnumcompon": [338, 340], "test_getnumpin": [338, 340], "test_setlinpowbypin": [338, 340], "test_getcomponentareafrac": [338, 340], "test_100_getpinpitch": [338, 340], "test_101_getpitch": [338, 340], "test_102_setpitch": [338, 340], "test_106_getareafract": [338, 340], "test_rotatepin": [338, 340], "test_expandelementaltoisotop": [338, 340], "test_expandallelementalstoisotop": [338, 340], "test_setpitch": [338, 340], "test_getmfp": [338, 340], "test_consistentmassdensityvolumebetweencoldblockandcoldcompon": [338, 340], "test_consistentmassdensityvolumebetweenhotblockandhotcompon": [338, 340], "test_breakfuelcomponentsintoindividu": [338, 340], "test_pinmgflux": [338, 340], "test_getcomponentsinlinkedord": [338, 340], "test_mergewithblock": [338, 340], "test_getdimens": [338, 340, 341], "test_getplenumpin": [338, 340], "test_haspinpitch": [338, 340], "test_getreactionr": [338, 340, 342], "test_coord": [338, 340], "test_symmetryfactor": [338, 340, 344], "test_retainst": [338, 340], "test_getpincoord": [338, 340], "test_getpitchhomogeneousblock": [338, 340], "test_getductpitch": [338, 340], "test_getpincenterflattoflat": [338, 340], "test_gridcr": [338, 340], "test_gridnumpinsandloc": [338, 340], "test_gridnotcreatedmultiplemultipl": [338, 340], "test_radii": [338, 340], "test_theta": [338, 340], "test_axi": [338, 340], "test_verifyblockdim": [338, 340], "test_getthetarzgrid": [338, 340], "test_getpitchsquar": [338, 340], "test_getcartesiangrid": [338, 340], "test_heightexpansiondiffer": [338, 340], "test_massfuelheatup": [338, 340], "test_masscladheatup": [338, 340], "test_massductheatup": [338, 340], "test_masscoolheatup": [338, 340], "test_dimensionductheatup": [338, 340], "test_coldmass": [338, 340], "test_massconsist": [338, 340], "getcirclevoiddict": [338, 341], "getcirclefueldict": [338, 341], "test_factori": [338, 341], "test_componentinitializationanddupl": [338, 341], "test_factorybadshapenam": [338, 341], "test_invalidcoolantcomponentassign": [338, 341], "componentcl": [338, 341], "componentmateri": [338, 341], "componentdim": [338, 341], "test_initializecompon": [338, 341], "test_cmp": [338, 341], "test_nonzero": [338, 341], "test_getcomponentarea": [338, 341], "test_getboundingcircleouterdiamet": [338, 341], "test_fromcompon": [338, 341], "test_preservemassduringthermalexpans": [338, 341], "test_volumeafterclearcach": [338, 341], "test_densityconsist": [338, 341], "test_getthermalexpansionfactorconservedmassbylinearexpansionperc": [338, 341], "test_thermallyexpand": [338, 341], "test_getcircleinnerdiamet": [338, 341], "test_dimensionthermallyexpand": [338, 341], "test_componentinteractionslinkingbydimens": [338, 341], "test_badcomponentnam": [338, 341], "test_componentinteractionslinkingbysubtract": [338, 341], "test_changenumberdens": [338, 341], "test_fuelmass": [338, 341], "tcold": [338, 341, 478], "twarm": [338, 341], "coldouterdiamet": [338, 341], "test_ht9expans": [338, 341], "test_uzrexpans": [338, 341], "test_b4cexpans": [338, 341], "runexpansiontest": [338, 341], "componentmassindependentofinputtemp": [338, 341], "expansionconservationhotheightdefin": [338, 341], "expansionconservationcoldheightdefin": [338, 341], "test_negativearea": [338, 341], "test_getperimet": [338, 341], "dimstotestexpans": [338, 341], "setclassdim": [338, 341], "test_validparamet": [338, 341], "test_updatedim": [338, 341], "test_setmassfrac": [338, 341], "test_setmassfraconcomponentmateri": [338, 341], "test_adjustmassfrac_invalid": [338, 341], "test_adjustmassfrac_u235": [338, 341], "test_adjustmassfrac_u": [338, 341], "test_adjustmassfrac_clear_zr": [338, 341], "test_adjustmassfrac_set_zr": [338, 341], "test_adjustmassfrac_leave_sam": [338, 341], "test_getenrich": [338, 341], "inactivenuclid": [338, 342], "elementstoexpand": [338, 342], "test_itercompon": [338, 342], "test_sort": [338, 342], "test_arechildernoftyp": [338, 342], "test_containsatleastonechildoftyp": [338, 342], "test_containsonlychildrenoftyp": [338, 342], "test_namecontain": [338, 342, 372, 378], "test_nucspec": [338, 342], "test_hasflagssubstr": [338, 342], "test_hasflagsnotypespecifi": [338, 342], "test_getboundingcirlceouterdiamet": [338, 342], "test_getparamnam": [338, 342], "test_updatevolum": [338, 342], "test_expandlfp": [338, 342], "test_getintegratedmgflux": [338, 342], "test_syncparamet": [338, 342], "blueprintyaml": [338, 342], "test_ord": [338, 342], "test_sum": [338, 342], "test_constituentreport": [338, 342], "test_getfuelmass": [338, 342], "test_getneutronenergydepositionconst": [338, 342], "test_getgammaenergydepositionconst": [338, 342], "test_getchildrenincludemateri": [338, 342], "test_gethmmass": [338, 342], "test_getfpmass": [338, 342], "test_getminparam": [338, 342], "testflagsa": [338, 342], "testflagsb": [338, 342], "bprime": [338, 342], "test_flagseri": [338, 342], "test_flagconvers": [338, 342], "test_dimensionreport": [338, 342], "test_getatomicweight": [338, 342], "test_containsheavymet": [338, 342], "test_copyparamstochildren": [338, 342], "test_copyparamsfrom": [338, 342], "test_getreactionratedict": [338, 342], "test_fromstr": [338, 343, 344], "test_tostr": [338, 343], "test_fromstringstrict": [338, 343], "test_lookup": [338, 343], "test_convertsstringswithnonflag": [338, 343], "test_defaultisfals": [338, 343], "test_ispickl": [338, 343, 346], "test_str": [338, 344], "test_fromani": [338, 344], "test_baseconstructor": [338, 344], "test_domaintypenul": [338, 344], "test_checkvalidgeomsymmetrycombo": [338, 344], "test_readhexgeomxml": [338, 344], "test_readreactor": [338, 344], "test_asciimap": [338, 344, 387, 407], "test_readasciimap": [338, 344], "test_readtrzgeomxml": [338, 344], "test_trzyamlio": [338, 344], "test_mutabledefaultsnotsupport": [338, 345], "test_parampropertydoesnotconflict": [338, 345], "test_parampropertydoesnotconflictwithnonedefault": [338, 345], "test_getwithoutdefaultraisesparametererror": [338, 345], "test_attemptingtosetparamwithoutsetterfail": [338, 345], "test_sett": [338, 345], "test_settergetterbas": [338, 345], "test_cannotdefineparameterwithsamenam": [338, 345], "test_paramdefinitionscompos": [338, 345], "test_cannotdefineparameterwithsamenameforcollectionsubclass": [338, 345], "test_cannotcreateattrbuteonparametercollectionsubclass": [338, 345], "test_cannotcreateinstanceof_nodefault": [338, 345], "test_cannotcreateinstanceof_undefin": [338, 345], "test_defaultloc": [338, 345], "test_categori": [338, 345], "test_parametercollectionshave__slots__": [338, 345], "assertrais": [338, 345], "assertequ": [338, 345], "assertnotequ": [338, 345], "mpitest_noconflict": [338, 345], "mpitest_noconflicts_setbystr": [338, 345], "mpitest_withconflict": [338, 345], "mpitest_withconflictsbutsamevalu": [338, 345], "mpitest_noconflictsmaintainwithstateretain": [338, 345], "mpitest_conflictsmaintainwithstateretain": [338, 345], "mpitest_rxcoeffsprocess": [338, 345], "test_factorysortset": [338, 346], "test_sortchildren": [338, 346], "test_sortassembyr": [338, 346], "test_gettotalparam": [338, 346], "test_geomtyp": [338, 346], "test_getblocksbyindic": [338, 346], "test_getallxssuffix": [338, 346], "test_normalizenam": [338, 346], "test_setb10voloncr": [338, 346], "test_countfuelaxialblock": [338, 346], "test_getfirstfuelblockaxialnod": [338, 346], "test_getmaxassembliesinhexr": [338, 346], "test_getmaxnumpin": [338, 346], "test_addmorenod": [338, 346], "test_findaxialmeshindexof": [338, 346], "test_findallaxialmeshpoint": [338, 346], "test_findallaxialmeshpoints_wsubmesh": [338, 346], "test_findallazimeshpoint": [338, 346], "test_findallradmeshpoint": [338, 346], "test_findneighbor": [338, 346], "test_getassembliesincircular": [338, 346], "test_getassembliesinhexr": [338, 346], "test_genassembliesaddedthiscycl": [338, 346], "test_getassemblypitch": [338, 346], "test_getnumassemblieswithallringsfilledout": [338, 346], "test_getnumenergygroup": [338, 346], "test_getminimumpercentfluxinfuel": [338, 346], "test_getassembli": [338, 346], "test_restorereactor": [338, 346], "test_differentnuclidemodel": [338, 346], "test_getsymmetryfactor": [338, 346], "test_getassembliesonsymmetrylin": [338, 346], "test_saveallflux": [338, 346], "test_getfluxvector": [338, 346], "test_getfuelbottomheight": [338, 346], "test_getgridbound": [338, 346], "test_loc": [338, 346], "test_removeassembli": [338, 346], "test_removeassemblynosfp": [338, 346], "test_removeassembliesinr": [338, 346], "test_removeassembliesinringbycount": [338, 346], "test_removeassembliesinringhex": [338, 346], "test_getnozzletyp": [338, 346], "test_createassemblyoftyp": [338, 346], "test_createfreshfe": [338, 346], "test_createassemblyoftypeexpandedcor": [338, 346], "test_getavgtemp": [338, 346], "test_getscalarevolut": [338, 346], "test_ifmissingspatialgrid": [338, 346], "test_removeallassembli": [338, 346], "test_pincoordsallblock": [338, 346], "test_nonuniformassem": [338, 346], "test_applythermalexpansion_coreconstruct": [338, 346], "test_updateblockbolheights_dbload": [338, 346], "test_buildmanualzon": [338, 346], "test_buildmanualzonesempti": [338, 346], "test_getnuclidecategori": [338, 346], "test_setpowerifnecessari": [338, 346], "test_getassembliesinsquar": [338, 346], "test_getnuclidecategorieslog": [338, 346], "test_loadrzt": [338, 347], "test_findallmeshpoint": [338, 347], "test_loadrzt_reactor": [338, 347], "test_additem": [338, 348], "test_removeitem": [338, 348], "test_addloc": [338, 348], "test_removeloc": [338, 348], "test_repr": [338, 348], "test_dictionaryinterfac": [338, 348], "test_findzoneitisin": [338, 348], "test_getzoneloc": [338, 348], "test_getallloc": [338, 348], "test_summari": [338, 348], "test_sortzon": [338, 348], "uth": 339, "numblock": 339, "139876893132784": 339, "8660254": 339, "2500": 339, "doubli": 339, "carestiangrid": 339, "simlutan": 340, "evacu": 340, "unshap": [340, 495], "neutronical": 340, "grown": [340, 469], "excess": [340, 404, 406], "141592653589793": 341, "test_reactor_thermal_expansion_0": [341, 476], "test_reactor_thermal_expansion_1": [341, 476], "test_reactor_thermal_expansion_2": [341, 476], "demonst": 341, "tutori": [341, 431, 436, 442, 454, 467, 469, 471, 472, 478, 480, 484, 485, 486, 495], "test_reactor_thermal_expansion_3": [341, 476], "test_reactor_thermal_expansion_4": [341, 476], "test_reactor_thermal_expansion_5": [341, 476], "test_reactor_thermal_expansion_6": [341, 476], "test_reactor_thermal_expansion_7": [341, 476], "test_reactor_thermal_expansion_8": [341, 476], "test_reactor_thermal_expansion_9": [341, 476], "test_reactor_thermal_expansion_10": [341, 476], "dummycompositeparametercollect": 342, "dummyleafparametercollect": 342, "block_metal_fuel": 342, "component_metal_fuel_fuel": 342, "component_metal_fuel_clad": 342, "component_metal_fuel_bond": 342, "component_metal_fuel_cool": 342, "component_metal_fuel_duct": 342, "block_oxide_fuel": 342, "compost": 342, "pickleabl": 343, "accident": [345, 384, 403, 469], "unittest": [345, 415, 440], "testnameprefix": 345, "mpitest_": 345, "exceptiontyp": 345, "rxcoeff": 345, "customset": 346, "inputfilepath": 346, "home": [346, 469, 478], "runner": [346, 478], "inputfilenam": [346, 456], "test_root": 346, "maxnumr": 346, "neeed": 346, "test_reactor_2": [346, 476], "simplest": [346, 483, 494], "godiva": 347, "heu": 347, "zonetyp": 349, "heavier": 349, "chicken": 349, "egg": 349, "zonenam": [349, 497], "zoneloc": 349, "defint": 349, "consol": 350, "logger": [350, 361, 373, 441, 497, 501], "getlogg": [350, 441, 501], "__name__": [350, 441, 463, 465, 499, 501], "someexcept": 350, "mpirank": [350, 403], "logdir": 350, "indent": [350, 427, 493], "levelnam": 350, "msgtype": [350, 373], "mangl": 350, "dedupl": 350, "stub": 350, "intlevel": 350, "isstderr": 350, "blueprintsmigr": [351, 352, 353, 356], "settingsmigr": [351, 352, 353, 354, 357], "geommigr": [351, 352, 353], "databasemigr": [351, 352, 353, 355], "crosssectionblueprintstoset": [351, 352], "movecrosssectionsfromblueprint": [351, 352, 354], "migratecrosssectionsfromblueprint": [351, 352, 354], "m0_1_0_newdbformat": [351, 352], "convertdb2todb3": [351, 352, 355], "m0_1_3": [351, 352], "removecentersfromblueprint": [351, 352, 356], "updateelementalnuclid": [351, 352, 356], "m0_1_6_locationlabel": [351, 352], "convertalphanumlocationsettingstonum": [351, 352, 357], "getindicesfromdif3dstylelocatorlabel": [351, 352, 357], "invest": [352, 469], "seriou": [352, 469, 480, 496], "gb": [352, 469], "week": [352, 469], "monetari": 352, "tempor": 352, "meanwhil": [352, 469], "train": 352, "cognit": 352, "burden": [352, 372, 476, 493], "background": 352, "mainstream": 352, "spreadsheet": [352, 469], "test_m0_1_6_locationlabel": [352, 358], "testmigr": [352, 358, 359], "fromvers": [352, 353, 354, 356, 357], "tovers": [352, 353, 354, 356, 357], "classic": [353, 484], "_applytostream": 353, "conduc": 354, "trippi": 354, "settingsobj": 354, "alphanumer": [357, 471], "a2003b": 357, "test_locationlabelmigr": [358, 359], "locationlabel": 359, "handleinvalid": [360, 361, 368], "csfile": 360, "multiprocess": 360, "pid": 360, "databaseset": [360, 362], "globalset": [360, 362], "reportset": [360, 362], "tightcouplingset": [360, 362, 497, 502], "serializetightcouplingset": [360, 362, 366], "tightcouplingsettingdef": [360, 362, 366], "tightcouplingsettingsvalid": [360, 362, 366], "test_set": [360, 367, 369], "dummyplugin1": [360, 369, 370], "dummyplugin2": [360, 369, 370], "pluginaddsopt": [360, 369, 370], "testcaseset": [360, 369, 370], "testaddingopt": [360, 369, 370], "testsettings2": [360, 369, 370], "testsettingsutil": [360, 369, 370], "testflaglistset": [360, 369, 370], "testsettingsvalidationutil": [360, 369, 370], "test_settingsio": [360, 369], "settingsfailuretest": [360, 369, 371], "settingsreadertest": [360, 369, 371], "settingsrenametest": [360, 369, 371], "settingswritertest": [360, 369, 371], "mockentrypoint": [360, 369, 371], "settingargstest": [360, 369, 371], "defaultcasetitl": [360, 361], "environmentset": [360, 361], "reverttodefault": [360, 361, 367], "failonload": [360, 361], "loadfrominputfil": [360, 361], "loadfromstr": [360, 361], "initlogverbos": [360, 361], "writetoyamlfil": [360, 361], "getsettingssetbyus": [360, 361], "writetoyamlstream": [360, 361], "updateenvironmentsettingsfrom": [360, 361], "setmoduleverbos": [360, 361], "underlyingtyp": [360, 367], "setvalu": [360, 367], "changedefault": [360, 367], "isdefault": [360, 367], "offdefault": [360, 367], "getcustomattribut": [360, 367], "getdefaultattribut": [360, 367], "renameset": [360, 368], "settingsinputformat": [360, 368], "fromext": [360, 368], "readfromfil": [360, 368], "readfromstream": [360, 368], "writeyaml": [360, 368], "singleton": 361, "masterc": [361, 463], "begun": [361, 496], "setpath": 361, "went": 361, "hoc": [361, 479], "fromfil": 361, "fpath": 361, "usersettingsnam": 361, "settingssetbyus": [361, 368], "writabl": 361, "otherc": 361, "couplingset": 366, "tightcouplingsettingsdict": 366, "subclas": 367, "coeff": 367, "enforcedopt": 367, "sublabel": 367, "isenviron": 367, "oldnam": [367, 368], "settingadapt": 367, "unseri": 367, "legal": 367, "expir": [367, 368], "subtyp": 367, "serializ": 367, "newdefault": 367, "compund": 367, "gone": [367, 489, 493], "residu": 367, "settings_inst": 368, "test_updateenvironmentsettingsfrom": [369, 370], "test_addingopt": [369, 370], "test_schemacheckstyp": [369, 370], "test_listsmut": [369, 370], "test_listcoercion": [369, 370], "test_typedetect": [369, 370], "test_cswork": [369, 370], "test_pluginvalidatorsarediscov": [369, 370], "test_pluginset": [369, 370], "test_default": [369, 370], "test_getsettingssetbyus": [369, 370], "test_setmoduleverbos": [369, 370], "test_getfailur": [369, 370], "test_settingisokaytograb": [369, 370], "test_modifi": [369, 370], "test_copyset": [369, 370], "test_copysettingnotdefault": [369, 370], "test_empti": [369, 370], "test_recursivescan": [369, 370], "test_prompt": [369, 370], "test_flaglistset": [369, 370], "test_invalidflaglisttypeerror": [369, 370], "test_validatevers": [369, 370], "test_settingsobjset": [369, 371], "test_loadfromyamlfailsonbadnam": [369, 371], "test_invalidfil": [369, 371], "test_basicsettingsread": [369, 371], "test_readfromfil": [369, 371], "testset": [369, 371], "test_renam": [369, 371], "test_collidingrenam": [369, 371], "test_writeshort": [369, 371], "test_writemedium": [369, 371], "test_writeful": [369, 371], "test_writeyaml": [369, 371], "test_errorsettingswrit": [369, 371], "test_commandlineset": [369, 371], "test_cannotloadsettingsafterparsingcommandlineset": [369, 371], "sound": 370, "particuar": 370, "_customschema": 370, "testsetting1": 371, "testsetting2": 371, "testsetting3": 371, "refdirectori": 372, "abspath": 372, "fixturefunct": 372, "expectedfilepath": 372, "actualfilepath": 372, "falseneglist": 372, "mainten": 372, "rebaselin": 372, "accomod": [372, 476], "rstrip": 372, "whitespac": [372, 440], "parsabl": 372, "presenc": 372, "approv": 372, "clearsinglewarn": [372, 373], "getstdout": [372, 373], "emptystdout": [372, 373], "getstderrvalu": [372, 373], "test_getparamrenam": [372, 375], "test_registerpluginflag": [372, 375], "test_getparamrenamesinvalid": [372, 375], "test_vers": [372, 375], "test_getset": [372, 375], "test_splashtext": [372, 375], "test_splashtextdifferentapp": [372, 375], "test_isstablereleasevers": [372, 375], "test_disablefutureconfigur": [372, 375], "test_getdefaultplugman": [372, 375], "test_overconfigur": [372, 375], "test_main": [372, 375], "test_comparefilessucess": [372, 376], "test_comparefilesfail": [372, 376], "test_comparefilessucceedfalseneg": [372, 376], "test_custom": [372, 377], "test_isrequesteddetailpoint": [372, 378], "test_en": [372, 378], "test_predistributest": [372, 378], "test_fsearch": [372, 378], "test_fsearch_text": [372, 378], "test_coupleract": [372, 378], "test_storepreviousiterationvalu": [372, 378], "test_storepreviousiterationvalueexcept": [372, 378], "test_isconvergedvalueerror": [372, 378], "test_isconverg": [372, 378], "test_isconvergedruntimeerror": [372, 378], "test_getlistdimens": [372, 378], "test_loadc5g7": [372, 379], "test_runandloadc5g7": [372, 379], "test_parallel": [372, 380], "test_serialgath": [372, 380], "test_mpiit": [372, 380], "test_perfectbalanc": [372, 380], "test_excessprocess": [372, 380], "test_typicalbalanc": [372, 380], "test_runactionsdistributionact": [372, 380], "test_runactionsdistributestateact": [372, 380], "test_diagnosepickleerrortestreactor": [372, 380], "test_disableforexclusivetask": [372, 380], "test_makequeu": [372, 380], "test_basicoperatormpi": [372, 381], "test_primaryexcept": [372, 381], "test_primarycrit": [372, 381], "test_distributeset": [372, 381], "test_distributereactor": [372, 381], "test_distributeinterfac": [372, 381], "test_distributest": [372, 381], "test_compileresult": [372, 381], "test_cleanpathmpi": [372, 381], "test_runparamsweep": [372, 382], "test_rundatamodel": [372, 382], "test_defineblueprintssect": [372, 383], "test_exposeinterfac": [372, 383], "test_setverbosityfrominteg": [372, 384], "test_setverbosityfromstr": [372, 384], "test_verbosityoutofrang": [372, 384], "test_invalidsetverbositybystr": [372, 384], "test_parentrunlog": [372, 384], "test_getwhitespac": [372, 384], "test_warningreport": [372, 384], "test_warningreportinvalid": [372, 384], "test_closelog": [372, 384], "test_setverbos": [372, 384], "test_setverbositybeforestartlog": [372, 384], "test_callingstartlogmultipletim": [372, 384], "test_concatenatelog": [372, 384], "test_createlogdir": [372, 384], "test_getduplicatesfilt": [372, 384], "test_allowstopdupl": [372, 384], "test_comparefilelin": [372, 385], "test_userpluginsflag": [372, 386], "test_validateuserpluginlimit": [372, 386], "test_registeruserplugin": [372, 386], "test_registeruserpluginsabspath": [372, 386], "test_registeruserpluginsfromset": [372, 386], "test_userpluginonprocesscoreload": [372, 386], "test_userpluginwithinterfac": [372, 386], "test_registerrepeateduserplugin": [372, 386], "_runlog": 373, "shuffler": 374, "factorlist": 374, "coexist": 375, "plugin1": 375, "dummyact": 378, "notif": 378, "fsearch": [378, 387, 427], "coupler": 378, "rag": 378, "c5g7": [379, 471, 472, 484, 485], "numproc": 380, "numobject": 380, "numobj": 380, "imbal": 380, "_diagnosepickleerror": 380, "picklabl": 380, "featurest": 381, "commandlin": [381, 440], "mpi4pi": [381, 437, 469, 470, 471, 505], "failer": 381, "ipynb": [382, 431, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "inadvert": [382, 476], "carefulli": 384, "startlog": 384, "concat": 384, "flex": [386, 480], "meaningless": 386, "filepath": [387, 427], "sha": [387, 478], "timestepnum": 387, "timenodenum": 387, "picklechain": 387, "a101": 387, "fix_import": 387, "buffer_callback": 387, "pickler": 387, "testpickl": 387, "sob": 387, "classcount": 387, "heirarchi": 387, "trend": 387, "linearli": 387, "originallist": 387, "listtoprepend": 387, "beginn": 387, "prepend": [387, 388], "cap": 387, "prestr": 387, "4d": 387, "4e": [387, 455, 478], "datalist": 387, "maxnumberofvaluesbeforedelimit": 387, "delimit": 387, "hello": 387, "n4": 387, "minv": 387, "maxv": 387, "xlabel": [387, 406, 454, 455, 460, 465, 481, 482], "ylabel": [387, 406, 454, 455, 460, 465, 481, 482], "xtick": 387, "ytick": 387, "cmap": [387, 462], "figsiz": [387, 454, 462, 465, 482], "friendli": [387, 389], "hyphen": 387, "otherdictionari": 387, "dst": 387, "shutil": [387, 403], "testasciimap": [387, 407, 408], "test_codetim": [387, 407], "codetimingtest": [387, 407, 409], "test_custom_except": [387, 407], "customexceptiontest": [387, 407, 410], "test_densitytool": [387, 407], "test_directorychang": [387, 407], "expectedexcept": [387, 407, 412], "testdirectorychang": [387, 407, 412], "test_dochelp": [387, 407], "testdochelp": [387, 407, 413], "exampleflag": [387, 407, 414], "testiter": [387, 407, 415], "test_mathemat": [387, 407], "testmath": [387, 407, 416], "test_outputcach": [387, 407], "testoutputcach": [387, 407, 417], "test_pars": [387, 407], "literalevaltest": [387, 407, 418], "test_pathtool": [387, 407], "pathtoolstest": [387, 407, 419], "test_plot": [387, 407], "testplot": [387, 407, 420], "test_properti": [387, 407], "immutableclass": [387, 407, 421], "immutablepropertytest": [387, 407, 421], "test_reportplot": [387, 407], "testradar": [387, 407, 422], "test_textprocessor": [387, 407], "yamlincludetest": [387, 407, 423], "sequentialreadertest": [387, 407, 423], "test_triangl": [387, 407], "test_unit": [387, 407], "testunit": [387, 407, 425], "test_util": [387, 407], "testgeneralutil": [387, 407, 426], "asciilin": [387, 388], "asciioffset": [387, 388], "asciilabelbyindic": [387, 388], "gridcontentstoascii": [387, 388], "gettim": [387, 389], "starttim": [387, 389], "endtim": [387, 389], "startal": [387, 389], "stopal": [387, 389], "getactivetim": [387, 389], "timelin": [387, 389, 497], "movefil": [387, 392], "retrievefil": [387, 392], "getrandomdirectori": [387, 392], "has_cont": [387, 394], "required_argu": [387, 394], "optional_argu": [387, 394], "option_spec": [387, 394], "sortedfield": [387, 396], "to_byt": [387, 396], "from_byt": [387, 396], "set_val": [387, 404], "updatepagedepthcolor": [387, 404], "issuewarningonfindingtext": [387, 427], "raiseerroronfindingtext": [387, 427], "raiseerroronfindingpattern": [387, 427], "searchfortext": [387, 427], "searchforpattern": [387, 427], "searchforpatternonnextlin": [387, 427], "consumelin": [387, 427], "scipat": [387, 427], "errorcheck": [387, 427], "checkerror": [387, 427], "reimplement": 388, "simplic": [388, 475, 484], "vocabulari": 388, "nestabl": 388, "latticeblueprint": 388, "programat": [388, 483, 493], "linenum": 388, "colnum": 388, "ij": 388, "col": 388, "decrement": [388, 400], "tip": [388, 436, 472, 488, 495], "jaggedli": 388, "ridicul": 388, "horizont": [388, 404], "_ijmax": 388, "ijmax": 388, "toward": [388, 465, 469], "timer": [389, 497], "mymethod": 389, "mymethod2": 389, "event_nam": 389, "unfriendli": 389, "unstart": 389, "master": [389, 478], "kill": 389, "inclusion_cutoff": 389, "total_tim": 389, "_timer": 389, "__str__": 389, "base_file_nam": 389, "func": [390, 399, 400, 437], "inport": 390, "abort": 390, "uninteract": 390, "custommsgend": 390, "assort": 391, "matnum": [391, 447], "minden": 391, "sigfig": 391, "mcnp6compat": 391, "mcnplibrari": 391, "mcard": 391, "nuclidevector": 391, "elementexpansionpair": 391, "nuclidbas": 391, "isotopicsubset": 391, "nuclideinventori": 391, "enrichedmassfrac": 391, "fertilemassfrac": 391, "remix": 391, "filestomov": [392, 393], "filestoretriev": [392, 393], "dumponexcept": 392, "outputpath": [392, 393], "cwd": 392, "stall": [392, 437], "chdir": 392, "race": 393, "sphinx": [394, 431, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 480, 486], "alt": 394, "exec": 394, "rst_tabl": 394, "lineno": 394, "content_offset": 394, "block_text": 394, "state_machin": 394, "restructuredtext": 394, "docutil": 394, "sourceforg": 394, "howto": 394, "rst": 394, "doctre": 394, "uml": [394, 472], "burnmatrix": [394, 437, 489], "gitignor": 394, "pyrev_": 394, "length_or_percentage_or_unitless": 394, "fwparam": 394, "restructur": 394, "withing": 394, "hyperlink": [394, 431], "pluginnam": 394, "importentirepackag": 395, "aenum": 396, "bitbucket": 396, "site": 396, "provis": [396, 493], "arithmet": 396, "emul": 396, "unlimit": 396, "myflag": 396, "foo": [396, 407, 414], "baz": [396, 407, 414], "byteord": 396, "compatibilii": 396, "snake_cas": [396, 440], "pythagorean": 398, "theorem": 398, "lst": 399, "lenght": 399, "padwith": [399, 437], "padwithnon": 399, "binaryrow": 399, "valuedict": 399, "hexrow": 399, "0x": 399, "although": [399, 433, 496], "forev": 399, "remedi": 399, "dropwhil": 399, "takewhil": 399, "itertool": [399, 404, 458, 459], "pred": 399, "newseq": 399, "expon": 400, "repeatedlist": 400, "9r": [400, 497], "listtosearch": 400, "indx": 400, "minindex": 400, "searchlist": 400, "searchvalu": 400, "strtofloat": 400, "03231714805651": 400, "03231714805651e": 400, "notat": [400, 485, 496], "scientif": [400, 480], "prevvalu": 400, "inputit": 400, "x0": 400, "y0": 400, "x1": [400, 428], "y1": [400, 428], "targetx": 400, "targeti": 400, "interpi": 400, "interpx": 400, "maxiter": 400, "positiveguess": 400, "tol": 400, "newton": 400, "p2": 400, "p3": 400, "parabola": 400, "x2": [400, 428], "x3": [400, 428], "y2": [400, 428], "y3": [400, 428], "bx": 400, "ap": 400, "cp": 400, "targetk": [400, 494, 497], "bt": 400, "2at": 400, "2a": 400, "slope": [400, 491], "realroot": 400, "newtim": 400, "v1": [400, 437, 441], "v2": [400, 437], "xin": 400, "yin": 400, "xout": 400, "resampl": 400, "realloc": 400, "resmampl": 400, "summat": [400, 496, 499], "degreescounterclockwis": 400, "radianscounterclockwis": 400, "array_lik": 400, "ccw": 400, "xr": 400, "yr": [400, 488, 491, 504], "crc": 401, "instantli": [401, 476], "blah": 401, "inpfil": 401, "mccaa": 401, "rmzflx": 401, "outputfound": 401, "outfil": 401, "subprocess": 401, "exepath": 401, "inputpath": 401, "cachedir": 401, "loctoretrieveto": 401, "greedi": 401, "cachedfold": 401, "safeword": 401, "destruct": [401, 489], "teardown": 401, "requestedtyp": 402, "allownon": 402, "matchingnonetyp": 402, "datetim": 402, "pathpart": 403, "unc": 403, "filedescript": 403, "sourcepath": 403, "destinationpath": 403, "path1": 403, "path2": 403, "ioerror": 403, "pathattr": 403, "myclass": 403, "userspecifiedmodul": 403, "copiou": 403, "everyon": [403, 440, 441], "misplac": 403, "net": [403, 489], "rmtree": 403, "matplotlib": [404, 406, 440, 449, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 478, 481, 482, 485], "bewar": [404, 406], "gobbl": [404, 406], "judici": [404, 406], "advis": [404, 406, 496], "skippedcolor": 404, "color": [404, 448, 454, 455, 465, 482, 485], "css": 404, "indefinit": 404, "bare": [404, 441], "cmapnam": 404, "jet": 404, "labelfmt": [404, 449, 464], "3f": 404, "legendmap": 404, "fontsiz": [404, 457, 462, 465], "minscal": 404, "maxscal": 404, "axisequ": 404, "makecolorbar": 404, "cbarlabel": 404, "shufflearrow": 404, "titles": 404, "depthindex": [404, 478], "viewabl": 404, "referencestokeep": 404, "colormap": 404, "pylab_exampl": 404, "show_colormap": 404, "labl": 404, "decript": 404, "legend": [404, 406, 453, 455, 460], "autoscal": 404, "ellips": 404, "patch": [404, 427, 457, 465], "facemap": [404, 452, 466, 467, 472, 486], "typenumassem": 404, "rdylbu": 404, "fig": [404, 449, 453, 455, 457, 458, 459, 462, 463, 465, 485], "galleri": [404, 435, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469], "sliderlabel": 404, "updatefunc": 404, "selecteddepthcolor": 404, "valinit": 404, "slider": 404, "valmin": 404, "valmax": 404, "_event": 404, "newval": 404, "maxassem": 404, "yaxislabel": 404, "plt": [404, 449, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 478, 481, 482, 485], "cleand": 404, "histogram": 404, "materiallist": 404, "axialz": 404, "hexpitch": 404, "7320508075688772": 404, "hexsidesubdivis": 404, "imgfileext": 404, "triangleflux": 404, "xsname": 404, "noshow": 404, "ipython": [404, 485], "u238na": 404, "dependencyact": 405, "properrti": 405, "attributeerror": [405, 440], "esenti": 405, "someclass": 405, "mynum": [405, 407, 421], "__doc__": 405, "unlock": [405, 436], "unassign": 405, "dbi": [406, 478], "extent": 406, "abscissa": 406, "maxdpa": [406, 491], "chart": [406, 434, 452, 466, 467, 479, 486], "reactornam": 406, "radar": [406, 422], "spider": 406, "xmajortick": 406, "ymajortick": 406, "legendlabel": 406, "tick": 406, "legendslabel": 406, "zval": [406, 462], "datav": 406, "nplot": 406, "ylog": 406, "test_hexthird": [407, 408], "test_hexwithhol": [407, 408], "test_hexwithemptyrow": [407, 408], "test_troublesomehexthird": [407, 408], "test_hexful": [407, 408], "test_hexfullflat": [407, 408], "test_hexsmallflat": [407, 408], "test_flathexbas": [407, 408], "test_method_definit": [407, 409], "test_alternate_usag": [407, 409], "test_property_access": [407, 409], "test_mast": [407, 409], "test_messy_starts_and_stop": [407, 409], "exampleinfomessag": [407, 410], "test_info_decor": [407, 410], "exampleimportantmessag": [407, 410], "test_important_decor": [407, 410], "examplewarnmessag": [407, 410], "test_warn_decor": [407, 410], "examplewarnwhenrootmessag": [407, 410], "test_warn_when_root_decor": [407, 410], "test_expandelementalmassfracstonuclid": [407, 411], "test_expandelementalzeromassfrac": [407, 411], "test_getchem": [407, 411], "test_expandel": [407, 411], "test_applyisotopicsmix": [407, 411], "test_getmassfract": [407, 411], "test_calculatenumberdens": [407, 411], "test_getmassingram": [407, 411], "test_normalizenuclidelist": [407, 411], "test_formatmaterialcard": [407, 411], "test_mpiactionfailsonnonexistentpath": [407, 412], "test_except": [407, 412], "test_exception_dis": [407, 412], "test_change_to_nonexisting_fail": [407, 412], "test_change_to_nonexisting_works_forc": [407, 412], "test_temporary_clean": [407, 412], "test_file_retriev": [407, 412], "test_file_retrieval_missing_fil": [407, 412], "test_paramt": [407, 413], "test_settingst": [407, 413], "test_createfigur": [407, 413], "test_createt": [407, 413], "test_auto": [407, 414], "test_collis": [407, 414], "test_bool": [407, 414], "test_inclus": [407, 414], "test_bitwis": [407, 414], "test_hash": [407, 414], "test_getitem": [407, 414], "test_flatten": [407, 415], "test_chunk": [407, 415], "test_split": [407, 415], "test_packingandunpackingbinarystr": [407, 415], "test_packingandunpackinghexstr": [407, 415], "test_sequenceinit": [407, 415], "test_sequ": [407, 415], "test_copysequ": [407, 415], "test_extendsequ": [407, 415], "test_appendsequ": [407, 415], "test_addingsequ": [407, 415], "test_average1dwithintoler": [407, 416], "test_average1dwithintoleranceinvalid": [407, 416], "test_converttoslic": [407, 416], "test_efmt": [407, 416], "test_expandrepeatedfloat": [407, 416], "test_findclosest": [407, 416], "test_findnearestvalu": [407, 416], "test_fixthreedigitexp": [407, 416], "test_getfloat": [407, 416], "test_getstepsfromvalu": [407, 416], "test_ismonoton": [407, 416], "test_linearinterpol": [407, 416], "test_minimizescalarfunc": [407, 416], "test_newtonsmethod": [407, 416], "test_parabola": [407, 416], "test_parabolicinterpol": [407, 416], "test_relerr": [407, 416], "test_resamplestepwiseavg0": [407, 416], "test_resamplestepwiseavg1": [407, 416], "test_resamplestepwiseavg2": [407, 416], "test_resamplestepwiseavg3": [407, 416], "test_resamplestepwiseavg4": [407, 416], "test_resamplestepwiseavg5": [407, 416], "test_resamplestepwiseavg6": [407, 416], "test_resamplestepwiseavg7": [407, 416], "test_resamplestepwisesum0": [407, 416], "test_resamplestepwisesum1": [407, 416], "test_resamplestepwisesum2": [407, 416], "test_resamplestepwisesum3": [407, 416], "test_resamplestepwisesum4": [407, 416], "test_resamplestepwisesum5": [407, 416], "test_resamplestepwisesum6": [407, 416], "test_resamplestepwisesum7": [407, 416], "test_resamplestepwiseavgallnon": [407, 416], "test_resamplestepwiseavgonenon": [407, 416], "test_resamplestepwisesumallnon": [407, 416], "test_resamplestepwisesumonenon": [407, 416], "test_resamplestepwiseavgcomplicatednon": [407, 416], "test_resamplestepwiseavgnparrai": [407, 416], "test_resamplestepwiseavgnparrayaverag": [407, 416], "test_rotatexi": [407, 416], "test_hashfil": [407, 417], "test_deletecach": [407, 417], "test_getcachedfold": [407, 417], "test_makeoutputmanifest": [407, 417], "test_retrieveoutput": [407, 417], "test_tryliteralev": [407, 418], "test_parsevalu": [407, 418], "test_separatemoduleandattribut": [407, 419], "test_importcustommodul": [407, 419], "test_moduleandattributeexist": [407, 419], "test_cleanpathnompi": [407, 419], "test_isfilepathnew": [407, 419], "test_isaccess": [407, 419], "test_plotdepthmap": [407, 420], "test_plotassemblytyp": [407, 420], "test_plotblockflux": [407, 420], "test_plothexblock": [407, 420], "test_plotcartesianblock": [407, 420], "test_retreivingunassignedvalueraiseserror": [407, 421], "test_cannotassignvaluetoimmutableproperti": [407, 421], "test_unlockdoesnotpermitsreassignmentofanimmutableproperti": [407, 421], "test_radar": [407, 422], "test_createplotmetadata": [407, 422], "test_plotaxialprofil": [407, 422], "test_keffvstim": [407, 422], "test_valuevstim": [407, 422], "test_buvstim": [407, 422], "test_movesvscycl": [407, 422], "test_xshistoryvstim": [407, 422], "test_resolveinclud": [407, 423], "test_resolveincludes_stringio": [407, 423], "test_findinclud": [407, 423], "textstream": [407, 423], "test_readfil": [407, 423], "test_readfilewithpattern": [407, 423], "test_gettrianglearea": [407, 424], "test_checkifpointisintriangl": [407, 424], "test_checkifpointisintriangle2": [407, 424], "test_gettc": [407, 425], "test_gettk": [407, 425], "test_gettf": [407, 425], "test_pressure_convert": [407, 425], "test_gettmev": [407, 425], "test_gettemperatur": [407, 425], "test_convertxtopasc": [407, 425], "test_sanitizeangl": [407, 425], "test_getxylineparamet": [407, 425], "test_mergeabledictionari": [407, 426], "test_createformattedstrwithdelimit": [407, 426], "test_capstrlen": [407, 426], "test_list2str": [407, 426], "test_slantsplit": [407, 426], "test_prependtolist": [407, 426], "test_plotmatrix": [407, 426], "test_classesinhierarchi": [407, 426], "simplecyclesset": [407, 426], "powerfractionsdetailedsolut": [407, 426], "powerfractionssimplesolut": [407, 426], "cyclenamesdetailedsolut": [407, 426], "cyclenamessimplesolut": [407, 426], "availabilityfactorsdetailedsolut": [407, 426], "availabilityfactorssimplesolut": [407, 426], "steplengthsdetailedsolut": [407, 426], "steplengthssimplesolut": [407, 426], "cyclelengthsdetailedsolut": [407, 426], "cyclelengthssimplesolut": [407, 426], "burnstepsdetailedsolut": [407, 426], "burnstepssimplesolut": [407, 426], "nodespercycledetailedsolut": [407, 426], "nodespercyclesimplesolut": [407, 426], "maxburnstepsdetailedsolut": [407, 426], "maxburnstepssimplesolut": [407, 426], "test_hasburnup": [407, 426], "test_getnodespercycl": [407, 426], "test_getcyclenodefromcumulativestep": [407, 426], "test_getcyclenodefromcumulativenod": [407, 426], "test_getprevioustimenod": [407, 426], "test_getcumulativenodenum": [407, 426], "chop": 408, "isotopc": 411, "succe": 412, "cohort": 414, "doesnt": 414, "uneven": 416, "propereti": 421, "smoke": 422, "stringio": [423, 427, 472], "nthi": 423, "ncan": 423, "nfile": 423, "nx": 423, "checkifpointisintrinagl": 424, "barycentriccheckifpointisintriangl": 424, "pascal": [425, 429], "test_reactor_hierarchy_0": [426, 476], "heirarch": 426, "dog": 426, "ferret": 426, "03333333333333333": 426, "06666666666666667": 426, "10000000000000002": 426, "eedd": 427, "23e10": 427, "23ee10": 427, "23d10": 427, "23e": 427, "213423": 427, "2342": 427, "023": [427, 478], "relativeto": 427, "textiobas": 427, "ruamel": 427, "prohibit": 427, "drawback": 427, "underpin": 427, "alias": 427, "monkei": [427, 436], "stackoverflow": 427, "44910886": 427, "pyyaml": [427, 472], "chunck": 427, "somefil": 427, "occurr": 427, "_searchfor": 427, "inidc": 427, "occurec": 427, "highmem": 427, "rewind": 427, "checkforerror": 427, "killon": 427, "textflag": 427, "vertici": 428, "heron": 428, "coordind": 428, "27s_formula": 428, "barycentr": 428, "totolog": 428, "blogspot": 428, "fahrenheit": 429, "tempunit": 429, "mmhg": 429, "pbar": 429, "patm": 429, "atomspher": 429, "restructedtext": 431, "repositori": [431, 441, 474], "virtual": [431, 469, 492], "pip3": [431, 433, 469, 470, 505], "graphviz": 431, "pandoc": 431, "latex": [431, 465], "miktex": 431, "imagemagick": 431, "_build": 431, "host": 431, "github": [431, 433, 440, 441, 469, 470, 472, 480, 505], "rsync": 431, "ahv": 431, "intersphinx": 431, "intersphinx_map": 431, "sphinxcontrib": 431, "workflow": [431, 435, 439, 480], "apidoc_extra_arg": 431, "highlight": 431, "neat": 431, "nbsphinx": 431, "nbconvert": 431, "clearoutputpreprocessor": 431, "inplac": 431, "mynotebook": 431, "verb": 432, "joi": 432, "armi": [432, 433, 434, 435, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 470, 473, 474, 475, 476, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 499, 500, 501, 502, 503, 504, 505], "invoc": 432, "sampleentrypoint": 432, "conf_cycle_length": 432, "conf_burn_step": 432, "store_tru": 432, "inputcas": 432, "post_process": 432, "settingsfil": 432, "pythonpath": [432, 470, 480, 505], "simpler": 432, "encourag": 433, "codebas": [433, 496], "publicli": 433, "regul": [433, 474], "annot": [433, 465], "tox": [433, 469], "fork": 433, "guidanc": [433, 436], "bot": 433, "agreement": 433, "publish": 433, "synopsi": 433, "superce": [433, 441, 469], "apach": [433, 441, 469, 484], "gpl": [433, 441, 469], "mit": [433, 441, 469], "bsd": [433, 441, 469], "pictur": 434, "restraint": [434, 475], "explor": [434, 445, 452, 467, 479, 481, 483, 486], "spectral": 434, "heavili": 434, "seen": [434, 469, 480, 491, 493, 496, 498], "guid": [434, 435, 469, 484, 485, 505], "environment": [434, 440, 470, 505], "former": 434, "quasistat": 434, "promin": [434, 480], "softwaretest": 434, "orificedoptim": 434, "orific": [434, 488], "alchemylit": 434, "alchemi": 434, "subchan": 434, "launch": 434, "fire": [434, 437, 469], "teach": 435, "audienc": 435, "scientist": 435, "contributor": [435, 469], "licens": [435, 480, 484], "black": [435, 465, 472], "nake": 435, "ruff": [435, 436, 453, 463, 472], "envelop": 436, "ship": 436, "perus": 436, "deeper": 436, "overli": [436, 484], "familiar": [436, 440, 470, 505], "chose": 436, "complain": [436, 472], "hookimpl": [436, 480], "guidelin": [436, 440], "iceberg": 436, "accompani": 436, "cohes": 436, "plug": [436, 469], "Such": [436, 475, 494, 496], "_pm": 436, "plugina": 436, "pluginb": 436, "fear": 437, "sam": 437, "farm": 437, "worklist": 437, "_i": 437, "unchunk": 437, "reassembl": 437, "worklistloadbalanc": 437, "ncpu": 437, "v4": 437, "v5": 437, "v6": 437, "v7": 437, "v8": 437, "myvalstoadd": 437, "v9": 437, "v10": 437, "v12": 437, "recal": [437, 482, 485], "vn": 437, "randomnum": 437, "num1": 437, "num2": 437, "r3": 437, "allresultsloadbalanc": 437, "r5": [437, 496], "r6": 437, "r7": 437, "r8": 437, "allresult": 437, "5f": [437, 439], "twr_shuffl": 437, "hint": [437, 472], "transmiss": 437, "surviv": [437, 497], "someinterfac": 437, "interactevernod": 437, "bcastact": 437, "aresult": 437, "someparam": 437, "somefunct": 437, "opt": 437, "someset": 437, "distrib": 437, "extractblockresult": 437, "whatact": 437, "approachi": 437, "generatemyobject": 437, "depletionmatrix": [437, 489], "computation": 437, "reasonbli": 438, "gprof2dot": 438, "invalu": 438, "graphvi": 438, "pstat": 438, "mystatsfil": 438, "tpng": 438, "mydesiredimagenam": 438, "cornerston": 439, "creategeneralreportcont": 439, "blueprintcont": 439, "getendoflifecont": 439, "imagin": 439, "dicionari": 439, "scene": [439, 475, 481, 484], "__get__": 439, "childcont": 439, "prose": 439, "enclos": 439, "bdesign": 439, "combat": 439, "currentt": 439, "overview": [439, 469, 474, 495], "comprehensive_report": 439, "tablelist": 439, "outputfileextens": [439, 497], "mwt": [439, 484], "0e6": [439, 478], "similarili": 439, "conf_boundari": 439, "conf_neutronics_kernel": 439, "conf_fp_model": 439, "assembly_area": 439, "sup": 439, "beg": 439, "mayb": [439, 480], "overdo": 439, "sole": 439, "neutronicssect": 439, "reportconst": 439, "neutronics_sect": 439, "keff_plot": 439, "plain": [439, 476], "paragraph": [439, 441], "thier": 439, "reportsoutputfil": [439, 487], "subpart": 440, "402": 440, "nqa": 440, "shall": [440, 476], "clariti": [440, 455, 478], "theme": 440, "concis": [440, 442, 467, 486], "deviat": [440, 493], "justifi": 440, "justif": 440, "consult": 440, "formatt": 440, "trail": 440, "setabl": 440, "password": 440, "fragil": 440, "nigh": [440, 476], "debugg": 440, "annoy": 440, "userbas": 440, "camelcas": [440, 469], "hassl": 440, "correlationmatrix": 440, "prefac": 440, "underscor": 440, "pronounc": 440, "acronym": 440, "understood": 440, "expert": 440, "pascalcas": 440, "diskio": 440, "iooper": 440, "renderhtml": 440, "test_": 440, "packagenam": 440, "modulenam": 440, "speed_of_light_in_meters_per_second": 440, "_one_over_pi": 440, "dosomeact": 440, "_dosomeact": 440, "_assembli": 440, "linearheatgenerationr": 440, "_unuseddescript": 440, "xslib": 440, "repetiti": 440, "harderd": 440, "runnabl": 440, "modern": [440, 469], "laptop": [440, 469], "pyplot": [440, 449, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 478, 481, 482, 485], "sin": 440, "articl": [440, 441], "explain": [440, 441, 475, 499], "zerodivisionerror": 440, "floatingpointerror": 440, "paradigm": 440, "json": 440, "strict": [440, 472], "checker": 440, "relic": 440, "fixm": 440, "xxx": 440, "stranger": 441, "voic": 441, "tens": 441, "oh": 441, "sentenc": 441, "chapter": 441, "discourtesi": 441, "busi": [441, 474], "polish": [441, 469], "draft": 441, "lint": [441, 472], "somebodi": 441, "fantast": 441, "dependeci": 441, "install_requir": 441, "abstractli": 441, "extras_requir": 441, "strictli": 441, "pip": [441, 470, 505], "defer": 441, "agnost": 441, "minor": [441, 471], "bump": [441, 465], "revv": 441, "nrc": [441, 474], "sanction": 441, "documen": 441, "deserv": 441, "admin": [441, 496], "privileg": 441, "__version__": 441, "ui": 441, "archiv": [441, 470, 505], "explanatori": [442, 467, 486], "download": [447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 470, 480, 484, 485, 505], "pervas": 447, "m1": 447, "40090": 447, "35498695e": 447, "40091": 447, "31641456e": 447, "40092": 447, "11832896e": 447, "40094": 447, "13332690e": 447, "40096": 447, "82584320e": 447, "92234": 447, "00000000e": 447, "36147243e": 447, "92236": 447, "92238": 447, "48425449e": 447, "93237": 447, "93238": 447, "94236": 447, "94238": 447, "94240": 447, "94241": 447, "94242": 447, "95241": 447, "95242": 447, "95243": 447, "96242": 447, "96243": 447, "96244": 447, "96245": 447, "96246": 447, "96247": 447, "m2": 447, "11023": 447, "21665718e": 447, "m3": 447, "67941747e": 447, "14028": 447, "78629407e": 447, "14029": 447, "92249968e": 447, "14030": 447, "26729800e": 447, "23000": 447, "71601526e": 447, "24050": 447, "52833976e": 447, "24052": 447, "73245259e": 447, "24053": 447, "90190013e": 447, "24054": 447, "46479253e": 447, "25055": 447, "19738893e": 447, "26054": 447, "09816265e": 447, "26056": 447, "43323879e": 447, "26057": 447, "48571542e": 447, "97721449e": 447, "28058": 447, "94209415e": 447, "28060": 447, "13328336e": 447, "28061": 447, "92675527e": 447, "28062": 447, "57051128e": 447, "28064": 447, "00190823e": 447, "42092": 447, "13437638e": 447, "42094": 447, "44696641e": 447, "42095": 447, "65358976e": 447, "42096": 447, "01896213e": 447, "42097": 447, "59119235e": 447, "42098": 447, "16005724e": 447, "42100": 447, "62965260e": 447, "74182": 447, "66064130e": 447, "74183": 447, "97674630e": 447, "74184": 447, "23253002e": 447, "74186": 447, "92724649e": 447, "m4": 447, "68566498e": 447, "78937437e": 447, "92406371e": 447, "26832899e": 447, "71822485e": 447, "53202374e": 447, "73955678e": 447, "90995571e": 447, "46679773e": 447, "20080367e": 447, "10149666e": 447, "43847248e": 447, "48692411e": 447, "97882303e": 447, "94448766e": 447, "13420533e": 447, "93076337e": 447, "57178896e": 447, "00516393e": 447, "14018048e": 447, "45058419e": 447, "65981625e": 447, "02548587e": 447, "59492746e": 447, "16100100e": 447, "63341900e": 447, "66361937e": 447, "97835446e": 447, "23597335e": 447, "93044146e": 447, "m5": 447, "m6": 447, "m7": 447, "sphinx_gallery_thumbnail_path": 447, "logo": 447, "_o": [447, 448], "bfuel": [447, 448], "ndensbybas": 447, "den": 447, "minut": [447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "669": [447, 450], "run_blockmcnpmaterialcard": [447, 450], "bcontrol": 448, "run_hexblocktorzconvers": [448, 450], "sphinx_gallery_thumbnail_numb": [449, 456], "thetamesh": 449, "run_hexreactortorz": [449, 450], "gallery_analysi": 450, "assess": 453, "23641": 453, "0189566": 453, "0764606": 453, "553986": 453, "114187": 453, "233214": 453, "0189313": 453, "557207": 453, "234575": 453, "0189824": 453, "0766673": 453, "555588": 453, "0190348": 453, "0768788": 453, "55349": 453, "238847": 453, "0190871": 453, "07709": 453, "550789": 453, "242019": 453, "0191381": 453, "0772959": 453, "54736": 453, "246067": 453, "0191865": 453, "0774913": 453, "543069": 453, "264995": 453, "0193035": 453, "0779642": 453, "52355": 453, "noqa": [453, 463], "e402": [453, 463], "tabul": 453, "writeinitialvolumefract": 453, "tabular_data": 453, "plotvolfracswithcomponenttemp": 453, "uniformtemp": 453, "componentstomodifi": 453, "initialvol": 453, "relativevol": 453, "uniformtempsinc": 453, "subplot": [453, 455, 457, 462, 465], "set_titl": [453, 457, 462, 465], "set_ylabel": [453, 465], "set_xlabel": [453, 462, 465], "305": [453, 466], "run_blockvolumefract": [453, 466], "xyc": [454, 482], "marker": [454, 482], "run_chartofnuclid": [454, 466], "isoaa_path": [455, 460, 461], "_addflux": 455, "createdummyreactor": 455, "allrat": 455, "ratedata": 455, "ratelabel": 455, "nucrat": 455, "arang": [455, 462, 478], "set_xtick": [455, 462], "set_xticklabel": [455, 462], "axvlin": 455, "set_xlim": [455, 457, 465], "yscale": [455, 460], "509": [455, 466], "run_computereactionr": [455, 466], "demo": [456, 465, 469, 483], "139876893407600": 456, "reftestcartesian": 456, "cosin": 456, "candidateassem": 456, "732": [456, 466], "run_fuelmanag": [456, 466], "mpatch": [457, 465], "patchcollect": [457, 465], "poli": 457, "set_aspect": [457, 465], "set_axis_off": 457, "hex_i": 457, "va": [457, 465], "regularpolygon": 457, "numvertic": 457, "fc": [457, 485], "white": 457, "add_collect": [457, 465], "margin": [457, 469], "bbox": 457, "get_datalim": 457, "transdata": 457, "xmin": 457, "xmax": 457, "set_ylim": [457, 465], "ymax": 457, "run_grids1_hex": [457, 466], "cartesian_grid": 458, "add_subplot": [458, 459], "run_grids2_cartesian": [458, 466], "linspac": [459, 481, 483], "rz_grid": 459, "run_grids3_rzt": [459, 466], "xscale": 460, "run_isotx": [460, 466], "inelasticscatt": 461, "n2nscatter": 461, "run_isotxs2_matrix": [461, 466], "max_z": 462, "nummat": 462, "idx": 462, "indexerror": 462, "im": 462, "imshow": 462, "ylgn": 462, "set_ytick": 462, "set_yticklabel": 462, "664": [462, 466], "run_materi": [462, 466], "traceabl": 463, "139876843552240": 463, "buildcas": 463, "buildcompon": 463, "blockdesign": [463, 483], "buildblock": 463, "assemdesign": 463, "buildassembli": 463, "buildgrid": 463, "systemdesign": 463, "buildsystem": 463, "isothermal_temperature_in_c": 463, "508": 463, "5842": 463, "14224": 463, "72644": 463, "0109": 463, "6205": 463, "01420": 463, "cname": 463, "fuelbock": 463, "reflectorblock": 463, "fuelassem": 463, "reflectorassem": 463, "coregrid": 463, "752": [463, 466], "run_programmaticreactordefinit": [463, 466], "139876893068544": 464, "run_reactorfacemap": [464, 466], "shortcut": 465, "bateman": 465, "plotnuc": 465, "ry": 465, "get_xi": 465, "cx": 465, "get_width": 465, "metast": [465, 476, 491], "cy": 465, "get_height": 465, "plotal": 465, "xlim": 465, "ylim": 465, "xp": 465, "yp": 465, "deeppink": 465, "orang": 465, "arrowprop": 465, "shrink": 465, "rxntype": 465, "atan": 465, "grei": 465, "facecolor": 465, "mistyros": 465, "edgecolor": 465, "zoom": 465, "run_transmutationmatrix": [465, 466], "784": 466, "gallery_framework": 466, "megawatt": 468, "kilogram": 468, "mwd": [468, 489, 490], "radionuclid": [468, 489, 491], "fima": [468, 488, 489, 490, 491, 497], "thin": 468, "imped": 468, "wastag": [468, 469, 489, 491, 497], "predomin": 468, "todai": [468, 469], "gass": [468, 484], "travel": [468, 469], "wave": [468, 469], "advantag": [468, 469], "streamlin": 469, "fingertip": [469, 484], "profession": 469, "llc": [469, 484], "compani": 469, "hub": 469, "spoke": 469, "specialist": 469, "acquir": 469, "first_time_contributor": 469, "prerequisit": [469, 492], "launcher": 469, "python3": [469, 470, 505], "easiest": [469, 475], "tour": 469, "nuclei": 469, "energet": 469, "induc": [469, 502], "withdraw": 469, "postul": 469, "earthquak": 469, "eniac": 469, "1940": 469, "toss": 469, "experiment": [469, 485], "surprisingli": 469, "port": 469, "specialti": 469, "born": 469, "eclect": 469, "uncoupl": 469, "dispatch": 469, "multiobject": 469, "Its": [469, 480, 493], "labor": 469, "focu": 469, "seamless": 469, "green": [469, 485], "skelet": 469, "schemat": [469, 493], "cfd": [469, 496], "curat": 469, "wall": 469, "orif": [469, 489, 493, 497], "electr": [469, 504], "creativ": [469, 484], "graduat": 469, "undergradu": 469, "greatli": [469, 471, 472], "uncommon": [469, 475], "tedium": 469, "fftf": 469, "ground": [469, 472, 476], "wing": 469, "seattl": 469, "mission": 469, "intertwin": 469, "secreci": 469, "risk": [469, 476], "entiti": [469, 475], "hypothes": 469, "worldwid": 469, "shakedown": 469, "fund": 469, "predominantli": 469, "flavor": 469, "realiz": 469, "mail": 469, "broadli": [469, 476], "phenix": 469, "bf": 469, "acceler": 469, "stuck": 469, "trademark": 469, "holder": 469, "copyright": [469, 484], "2023": [469, 472, 478], "complianc": [469, 484], "warranti": [469, 484], "touran": 469, "nichola": 469, "526": 469, "eng": 469, "016": 469, "glossari": 469, "vv": [470, 505], "navig": [470, 505], "venv": [470, 487, 505], "deactiv": [470, 497, 505], "bat": [470, 505], "sudo": [470, 505], "apt": [470, 505], "libopenmpi": [470, 505], "ssh": [470, 505], "click": [470, 478, 496, 505], "bashrc": [470, 505], "____": [470, 478, 483, 505], "__": [470, 478, 483, 505], "congrat": [470, 505], "wxpython": [470, 505], "websit": [470, 505], "2021": [471, 472], "vestigi": 471, "detailassemsbybolloc": 471, "materialclassnam": 471, "armitestbas": 471, "dumplocationsnapshot": 471, "obviat": 471, "redund": [471, 472], "isannular": 471, "syncdbafterwrit": [471, 497], "doth": [471, 497], "armiabsdirfromnam": 471, "delat": 471, "addcompon": 471, "constist": 471, "latticefil": 471, "diment": 471, "pympler": 471, "demot": 471, "tbd": 472, "1336": 472, "1345": 472, "1335": 472, "1383": 472, "1395": 472, "sha1": 472, "1334": 472, "gh": 472, "avgfueltemp": [472, 489], "1362": 472, "1347": 472, "1355": 472, "1349": 472, "1396": 472, "_processinclud": 472, "1333": 472, "1342": 472, "1280": 472, "linter": 472, "1296": 472, "1288": 472, "1294": 472, "1320": 472, "1299": 472, "1277": 472, "drastic": 472, "1282": 472, "density3": 472, "1163": 472, "1274": 472, "hcfcoretyp": 472, "1179": 472, "1248": 472, "1239": 472, "assemflagstoskipaxialexpans": 472, "1235": 472, "1204": 472, "1219": 472, "1227": 472, "dctype": 472, "1228": 472, "1226": 472, "1229": 472, "createrepresentativeblocksfromexistingblock": 472, "1217": 472, "priorit": 472, "1230": 472, "1257": 472, "1258": 472, "1270": 472, "1216": 472, "1206": 472, "1225": 472, "froze": 472, "955": 472, "962": 472, "4614": [472, 482], "998": 472, "overhaul": 472, "loosecoupl": 472, "1033": 472, "c2n1": 472, "959": 472, "fuelcladlock": [472, 489], "1038": 472, "1022": 472, "1047": 472, "1042": 472, "1086": 472, "uniformmeshconvert": 472, "1108": 472, "1165": 472, "cyclesskiptightcouplinginteract": 472, "referenceblockaxialmesh": [472, 491], "980": 472, "deadelin": 472, "barrier": 472, "1046": 472, "1067": 472, "1118": 472, "992": 472, "1168": 472, "1129": 472, "magnessium": 472, "1128": 472, "1131": 472, "1150": 472, "1149": 472, "1199": 472, "1178": 472, "1185": 472, "2022": 472, "coveragerc": 472, "924": 472, "932": 472, "943": 472, "942": 472, "fastflux": [472, 484, 489], "_swapfluxparam": 472, "665": 472, "settingsrul": 472, "872": 472, "__repr__": 472, "stationaryblock": 472, "stationaryblockflag": [472, 497], "isoxx": 472, "getreac": 472, "_applythermalexpans": 472, "completeinitiaload": 472, "secur": [472, 476], "alert": [472, 475, 476], "530": 472, "558": 472, "weren": 472, "550": 472, "557": 472, "507": 472, "490": 472, "534": 472, "solidifi": 472, "stake": 472, "clarif": 472, "multii": 472, "bugfix": 472, "cadenc": 473, "v0": 473, "firm": 474, "srsd": 474, "appendic": 474, "sdid": 474, "introduct": [474, 476], "nich": 475, "mysettingnam": 475, "intset": 475, "allot": 475, "misus": 475, "wildli": 475, "overhead": 475, "nasti": [475, 480], "bai": 475, "defens": 475, "stem": 475, "aberr": 475, "mistak": [475, 484, 494], "anyon": 475, "myfunct": 475, "var": 475, "dosometh": 475, "dosomethingsubtlydiffer": 475, "myvar": 475, "oop": 475, "clumsi": 475, "pervers": 475, "bypass": 475, "mylist": 475, "mylistset": 475, "thank": 475, "v_b": 475, "p_": 475, "interstiti": [475, 484, 491, 493], "a_": [475, 502], "incorrectli": 476, "unreli": 476, "bluperint": 476, "substant": 476, "fortun": 476, "replic": 476, "paramount": 476, "req_db_fidel": 476, "possess": [476, 493], "req_db_restart": 476, "entireti": 476, "req_db_primit": 476, "ubiqu": 476, "req_report_fidel": 476, "subvert": 476, "req_settings_unambigu": 476, "req_settings_unambiguous_nam": 476, "req_settings_unambiguous_typ": 476, "req_settings_default": 476, "sensibli": 476, "req_settings_rul": 476, "req_settings_chang": 476, "req_settings_vers": 476, "genuin": 476, "safegaurd": 476, "req_settings_dupl": 476, "req_reactor_4": 476, "req_reactor_5": 476, "req_reactor_6": 476, "req_reactor_7": 476, "midplan": [476, 478], "obviou": 476, "req_1": 476, "shale": 476, "req_operator_io": 476, "req_operator_parallel": 476, "req_operator_coupl": 476, "req_operator_analysi": 476, "req_operator_coord": 476, "req_lattice_ex": 476, "req_nucdir_info": 476, "req_nucdir_fil": 476, "req_nucdir_uniqu": 476, "unqiu": 476, "req_nucdir_label": 476, "req_nucdir_lump": 476, "req_nucdir_element": 476, "req_nucdir_dummi": 476, "compromis": 476, "req_nucdir_index": 476, "req_nucdir_decay_chain": 476, "req_nucdir_transmut": 476, "req_nucdir_burn_chain": 476, "erron": 476, "faulti": 476, "req_nucdata_isotx": 476, "req_nucdata_gamiso": 476, "req_nucdata_pmatrx": 476, "r_016a6": 476, "r_65f10": 476, "mathrm": 476, "beta_": 476, "rm": 476, "aoo": 476, "req_nucdata_merg": 476, "req_nucdata_avail": 476, "quantif": 476, "req_nucdata_avail_label": 476, "req_nucdata_avail_fil": 476, "rewritten": 476, "reread": 476, "req_nucdata_avail_modifi": 476, "req_db_perform": 476, "lossless": 476, "req_report_perform": 476, "neglig": 476, "req_reactor_parallel": 476, "req_nucdir_dupl": 476, "testabl": 476, "req_o": 476, "req_db_languag": 476, "req_settings_read": 476, "req_report_tech": 476, "req_reactor_stochast": 476, "req_nucdir_data": 476, "req_nucdir_nam": 476, "242g": 476, "req_settings_report": 476, "req_lattice_input": 476, "req_lattice_output": 476, "req_reactor_correct": 476, "lt": [478, 482, 483], "afci": [478, 480, 483, 484, 487], "haleu": [478, 484], "tru": [478, 484, 493], "aug": 478, "fri": 478, "sep": 478, "f7dbd06fb4": 478, "04761fb2b3": 478, "5904530cb2": 478, "fuelmanag": [478, 484], "622957b035": 478, "mw": [478, 483, 488, 489, 491], "411": [478, 484, 485], "9995": 478, "140280157950592": 478, "000": [478, 483], "excor": [478, 483], "gp": [478, 483], "999999999998449e": [478, 483], "helic": [478, 484], "dodecagon": 478, "a0005": 478, "011": 478, "a0004": 478, "045": [478, 493, 497], "a0010": 478, "010": 478, "a0016": 478, "057": 478, "a0003": 478, "007": 478, "a0009": 478, "008": 478, "040": 478, "a0015": 478, "a0021": 478, "052": 478, "a0027": 478, "a0002": 478, "a0008": 478, "029": 478, "a0014": 478, "a0020": 478, "041": 478, "a0026": 478, "047": 478, "a0033": 478, "053": 478, "a0039": 478, "a0007": 478, "018": 478, "a0013": 478, "024": 478, "a0019": 478, "030": 478, "a0025": 478, "036": 478, "a0032": 478, "a0038": 478, "048": 478, "a0045": 478, "054": 478, "a0000": 478, "fifth": 478, "fifthassem": 478, "drill": 478, "a0006": 478, "b0006": 478, "913110": 478, "7780886302": 478, "1615298013245032": 478, "e6": 478, "630279585150355": 478, "press": 478, "5940e": 478, "b0000": 478, "impt": [478, 483, 501], "6029": [478, 484], "6086118601525807": 478, "447": [478, 484], "6962": [478, 484], "6996347645979837": 478, "0466500": 478, "0455115": 478, "808": [478, 484], "8119863398379357": 478, "0559000": 478, "0561758": 478, "148007667250084": 478, "8888": [478, 484], "8931849738217292": 478, "0808": [478, 484], "08119863398379355": 478, "995619013690193": 478, "787506681749962": 478, "3940000": 478, "3959438": 478, "2160000": 478, "1772467": 478, "peakpow": 478, "1e6": [478, 483], "mgfluxbas": 478, "setfakepow": 478, "linalg": 478, "fuelflag": 478, "603": 478, "6363986253243": 478, "3949368453772478": 478, "sodiumbefor": 478, "2f": [478, 481], "sodiumaft": 478, "20230915171310916395": 478, "c00n01": 478, "databaseloc": 478, "dbo": 478, "fro": 478, "909142": 478, "5216630063": 478, "lucki": 478, "brand": 478, "readi": 480, "shell": [480, 483], "proce": [480, 494], "my_armi_project": 480, "fluxsolv": 480, "thermalsolv": 480, "readm": 480, "quickstart": 480, "shortli": 480, "mixabl": 480, "cobra": 480, "cacophoni": 480, "subphys": 480, "facet": 480, "boiler": 480, "myappvers": 480, "weav": 480, "administr": 480, "gut": 480, "cloud": 480, "tini": 480, "told": 480, "c_p": 480, "phenomen": 480, "lovingli": 480, "whack": 480, "slash": 480, "materialnamespaceord": [480, 497], "vizual": 480, "thcoolantaveraget": [480, 489], "lighter": 480, "finicki": 480, "sublass": 480, "userpluginexampl": 480, "userplugin0": 480, "pluginz": [480, 497], "userplugin1": 480, "userplugin2": 480, "maco": 480, "thermomechan": 481, "density500": 481, "500c": [481, 498], "006270676074462742": 481, "8752281279010555": 481, "11850119602448178": 481, "l_0": [481, 503], "4f": 481, "0471": 481, "inlin": 481, "uo_2": 481, "creep": 481, "amu": 482, "nucsbytyp": 482, "4706": 482, "043929425": 482, "00000000000e": 482, "50000000000e": 482, "60000000000e": 482, "11110000000e": 482, "70000000000e": 482, "80000000000e": 482, "40000000000e": 482, "90000000000e": 482, "68000000000e": 482, "46000000000e": 482, "48000000000e": 482, "74787200000e": 482, "62880000000e": 482, "17427219965e": 482, "02354704590e": 482, "74722532676e": 482, "u23f": 482, "56000000000e": 482, "39063206325e": 482, "83372800000e": 482, "40996345254e": 482, "40700000000e": 482, "07600000000e": 482, "00800000000e": 482, "li07": 482, "01600439548": 482, "92410004": 482, "li03": 482, "li04": 482, "li05": 482, "70924971603e": 482, "li06": 482, "li08": 482, "39900000000e": 482, "li09": 482, "78300000000e": 482, "75000000000e": 482, "lielement": 482, "standardweight": 482, "940037501798687": 482, "fullfactori": 483, "powermodif": 483, "tracer": 483, "0002": 483, "0003": 483, "40000000": 483, "70000000": 483, "100000000": 483, "queu": 483, "cladthicknessmodifi": 483, "componentdesign": 483, "cladmodif": 483, "0004": 483, "inde": [483, 494], "a6": 483, "8250000000000001": 483, "8500000000000001": 483, "875": 483, "cyclelengthmod": 483, "conclus": 483, "loadsuit": 483, "slower": [483, 493], "parametr": 483, "regress": 483, "lieu": 484, "crazi": 484, "hotter": 484, "710": 484, "punch": 484, "derivedcompon": 484, "unclad": 484, "breviti": 484, "block_shield": [484, 493], "block_reflector": 484, "777": 484, "block_control": 484, "block_plenum": [484, 493], "88888": 484, "overlai": [484, 493], "fuel_block": 484, "ic_x": 484, "weirdest": 484, "plena": 484, "trade": 484, "columnar": 484, "307": 484, "finer": 484, "370": 484, "efpd": 484, "momentarili": 484, "sampleshuffl": 484, "frontend": 484, "0e23": 484, "violat": [484, 489], "shuffleparamet": 484, "cyclesecond": 484, "seconds_per_dai": 484, "peakfluenc": 484, "fastfluenc": [484, 489], "peakflux": 484, "philosophi": 484, "nsc": 485, "00e": 485, "21e": 485, "50e": 485, "80e": 485, "40e": 485, "30e": 485, "63e": 485, "90e": 485, "16e": 485, "05e": 485, "225e": 485, "622e": 485, "70e": 485, "35e": 485, "87e": 485, "role": 485, "sig": 485, "apear": 485, "block_uo2": 485, "8190": 485, "fuel_gap_1": 485, "clad_zr": 485, "8360": 485, "9500": 485, "fuel_gap_2": 485, "aluminum": 485, "clad_al": 485, "9700": 485, "0800": 485, "guide_tube_moder": 485, "6800": 485, "fission_chamber_guide_tub": 485, "fission_chamber_mod": 485, "332": 485, "block_mox": 485, "ml": 485, "mm": 485, "mh": 485, "block_mod": 485, "said": 485, "fakebad": 485, "123456": 485, "genreport": [485, 497], "fiddl": 485, "yellow": 485, "red": 485, "xi": [485, 502], "yi": 485, "zi": 485, "reftestbas": 487, "powerdecai": [488, 489, 491], "decayheatcalctimesinsecond": 488, "arealpd": [488, 489, 499], "pct": 488, "bulimit": [488, 489], "chargebu": 488, "chargefi": 488, "chargetim": 488, "dust": 488, "dayssincelastmov": 488, "kinf": [488, 489, 491], "maxdpapeak": 488, "nummov": [488, 491], "detailednden": [488, 489, 491], "fi": [488, 489], "interf": [488, 489], "detailednuckei": [488, 489, 491], "unwis": 488, "crcriticalfract": 488, "crcurrentelev": 488, "crinsertedelev": 488, "crrodlength": 488, "crwithdrawnelev": 488, "withdrawn": 488, "thdeltapnograv": 488, "graviti": 488, "thdeltappump": 488, "rise": [488, 489, 491], "thdeltaptot": [488, 489], "thcoolantoutlett": [488, 489], "thmassflowr": [488, 489], "thlocaldtout": [488, 489], "thlocaldtoutfuel": [488, 489], "thorificezon": [488, 489], "thcoolantinlett": [488, 489], "axexpworthpt": [488, 489], "coolflowingworthpt": [488, 489], "coolworthpt": [488, 489], "dischargetim": 488, "fuelworthpt": [488, 489], "hcf": [488, 491, 493], "radexpworthpt": [488, 489], "structworthpt": [488, 489], "azimesh": 488, "radmesh": 488, "burnupmwdperkg": [489, 490], "fissilefract": 489, "moleshmbol": 489, "masshmbol": [489, 490], "moleshmbolbypin": 489, "moleshmnow": 489, "newdpa": 489, "percentbubypin": 489, "percentbumax": 489, "percentbumaxpinloc": 489, "percentbumin": 489, "cycleaverageburnmatrix": 489, "bugroupnum": 489, "burat": [489, 490], "buratepeak": 489, "detaileddpar": 489, "displacementx": 489, "displacementi": 489, "heliuminb4c": 489, "powerrx": 489, "nhmatbol": 489, "axialexptargetcompon": 489, "withregard": 489, "eqregion": 489, "eqcascad": 489, "cascad": [489, 494], "xstypenum": 489, "voideddopplerworth": 489, "\u03b4k": [489, 491], "dopplerworth": 489, "fuelworth": 489, "coolantworth": 489, "cladworth": 489, "rxaxialcentsperk": 489, "cent": [489, 491, 496], "rxaxialcentsperpow": 489, "rxcoolantcentsperk": 489, "rxcoolantcentsperpow": 489, "rxdopplercentsperk": 489, "rxdopplercentsperpow": 489, "rxfuelcentsperk": 489, "rxfuelcentsperpow": 489, "rxnetcentsperk": 489, "rxnetcentsperpow": 489, "rxnetposneg": 489, "rxnetposnegpow": 489, "rxradialcentsperk": 489, "rxradialcentsperpow": 489, "rxstructcentsperk": 489, "rxstructcentsperpow": 489, "rxvoideddopplercentsperk": 489, "rxvoideddopplercentsperpow": 489, "rxfueldensitycoeffpermass": 489, "rxfueldopplerconst": [489, 491], "rxfuelvoideddopplerconst": [489, 491], "rxfueltemperaturecoeffpermass": 489, "rxfuelvoidedtemperaturecoeffpermass": 489, "rxcladdensitycoeffpermass": 489, "rxcladdopplerconst": [489, 491], "rxcladtemperaturecoeffpermass": 489, "rxstructuredensitycoeffpermass": 489, "rxstructuredopplerconst": [489, 491], "rxstructuretemperaturecoeffpermass": 489, "rxcoolantdensitycoeffpermass": 489, "rxcoolanttemperaturecoeffpermass": 489, "rxfueldensitycoeffpertemp": [489, 491], "rxfueldopplercoeffpertemp": [489, 491], "rxfuelvoideddopplercoeffpertemp": [489, 491], "rxfueltemperaturecoeffpertemp": [489, 491], "rxfuelvoidedtemperaturecoeffpertemp": [489, 491], "rxcladdensitycoeffpertemp": [489, 491], "rxcladdopplercoeffpertemp": [489, 491], "rxcladtemperaturecoeffpertemp": [489, 491], "rxstructuredensitycoeffpertemp": [489, 491], "rxstructuredopplercoeffpertemp": [489, 491], "rxstructuretemperaturecoeffpertemp": [489, 491], "rxcoolantdensitycoeffpertemp": [489, 491], "rxcoolanttemperaturecoeffpertemp": [489, 491], "reliabl": 489, "axextennodeheight": 489, "blockbeta": 489, "blockf": 489, "breedratio": 489, "fissiledestroi": 489, "fissilebefor": 489, "substep": [489, 497], "fissileaft": 489, "cladacci": 489, "\u00b5m": [489, 491], "convratio": 489, "coolremfrac": 489, "crwastag": 489, "acci": 489, "cyclicnerr": 489, "deltatclad": 489, "deltatduct": 489, "deltatfuel": 489, "heightbol": 489, "intrinsicsourc": 489, "intrinsicsourcedecai": 489, "mchan": 489, "mreg": 489, "newdpapeak": 489, "percentbupeak": 489, "powershapedelta": 489, "pressurelosscoeff": 489, "hardwar": 489, "thhotchannelcladmidwallt": 489, "midwal": 489, "thhotchannelheattransfercoeff": 489, "film": 489, "thhotchannelcladodt": 489, "thhotchannelcladidt": 489, "thhotchannelfuelodt": 489, "thhotchannelfuelcenterlinet": 489, "centerlin": 489, "th0sigmacladodt": 489, "th2sigmacladodt": 489, "th3sigmacladodt": 489, "th0sigmacladidt": 489, "th2sigmacladidt": 489, "th3sigmacladidt": 489, "thdilationpressur": 489, "dilat": 489, "thtfuelcl": 489, "thtfuelod": 489, "thaveragecladodt": 489, "thaveragecladidt": 489, "thaveragecladtemp": 489, "thaveragegaptemp": 489, "thaverageducttemp": 489, "thcoolantstatict": 489, "thhotchanneloutlett": 489, "thcorntemp": 489, "degc": 489, "thedgetemp": 489, "thhotchannel": 489, "gasreleasefract": 489, "bondremov": [489, 497], "cladwastag": 489, "totalcladstrain": 489, "diametr": 489, "axialgrowthpct": 489, "growth": [489, 491, 497], "fppeakfueltemp": 489, "fpavefueltemp": 489, "axmesh": 489, "adjmgflux": 489, "lastmgflux": 489, "mgfluxgamma": 489, "mggammasrc": 489, "gammasrc": 489, "mgfluxsk": 489, "pinmgfluxesadj": 489, "naxialseg": 489, "pinmgfluxesgamma": 489, "axialpowerprofil": 489, "axialpowerprofileneutron": 489, "axialpowerprofilegamma": 489, "betad": 489, "chid": 489, "linpow": 489, "unavail": 489, "linpowbypinneutron": 489, "linpowbypingamma": 489, "reactionr": 489, "reactionstodb": 489, "pointsedgefastfluxfr": 489, "100kev": 489, "pointsedgedpa": 489, "pointsedgedpar": 489, "cornerfastflux": 489, "pointscornerfastfluxfr": 489, "pointscornerdpa": 489, "pointscornerdpar": 489, "ratebal": 489, "rateextsrc": 489, "ratefisab": 489, "ratefissrc": 489, "rateleak": 489, "leak": 489, "rateparasab": 489, "parasit": 489, "fertil": [489, 491], "rateprodnet": 489, "ratescatin": 489, "ratescatout": 489, "capturepowerfrac": 489, "fluxadj": 489, "fluxadjpeak": 489, "pdensdecai": 489, "fertilebonu": 489, "fisden": 489, "fisdenshom": 489, "fluxgamma": 489, "fluxpeak": 489, "medabs": 489, "medfis": 489, "medflx": 489, "pdensgamma": 489, "pdensneutron": 489, "ppden": 489, "ppdensgamma": 489, "rateab": 489, "fisson": 489, "ratecap": 489, "rateprodn2n": 489, "ratefi": 489, "rateprodfi": 489, "detaileddpathiscycl": 489, "detaileddpapeakr": 489, "enrichmentbol": 489, "fastfluxfr": 489, "pdensgener": 489, "zzzaaa": 491, "zzz": 491, "maxassemnum": [491, 504], "crmostvaluableprimaryrodloc": 491, "crmostvaluablesecondaryrodloc": 491, "crworthrequiredprimari": 491, "crworthrequiredsecondari": 491, "crtransientoverpowerworth": 491, "critsearchslop": 491, "doublingtim": 491, "fissilemass": 491, "heavymetalmass": 491, "lastkeff": 491, "maxcladfcci": 491, "maxgriddpa": 491, "minutessincestart": 491, "outsidefuelr": 491, "outsidefuelringfluxfr": 491, "peakgriddpaat60year": 491, "totalintrinsicsourc": 491, "totalintrinsicsourcedecai": 491, "thmaxdeltappump": 491, "thmaxdilationpressur": 491, "thoutlettempid": 491, "pergram": 491, "medabscor": 491, "medfluxcor": 491, "medsrccor": 491, "pkflux": 491, "maxdetaileddpapeak": 491, "maxflux": 491, "adjweightedfissrc": 491, "maxbuf": 491, "maxbui": 491, "peakkeff": 491, "fastfluxfravg": 491, "leakagefractot": 491, "leakagefracplanar": 491, "leakagefracaxi": 491, "maxpden": 491, "maxpd": 491, "bred": 491, "dopplerconst": 491, "fueldens": 491, "coolantdens": 491, "totalcoolantdens": 491, "voideddoppl": 491, "voideddopplerconst": 491, "voidworth": 491, "voidedkeff": 491, "radialht9": 491, "radialss316": 491, "betacompon": 491, "betadecayconst": 491, "promptneutrongenerationtim": 491, "promptneutronlifetim": 491, "rxfuelaxialexpansioncoeffpertemp": 491, "rxfuelaxialexpansioncoeffperperc": 491, "dk": [491, 496], "kk": [491, 496], "rxgridplateradialexpansioncoeffpertemp": 491, "rxaclpradialexpansioncoeffpertemp": 491, "rxcontrolroddrivelineexpansioncoeffpertemp": 491, "drivelin": 491, "rxcorewidecoolantvoidworth": 491, "rxspatiallydependentcoolantvoidworth": 491, "boeckeff": 491, "boec": 491, "maxcyclicnerr": 491, "breedingratio": 491, "convratiocor": 491, "absperfiscor": 491, "axialexpansionperc": 491, "fisfrac": 491, "fisratecor": 491, "infin": [491, 502], "refkeff": 491, "makeup": 493, "core_grid": 493, "wit": 493, "elementari": 493, "asssembli": 493, "neglect": 493, "resus": 493, "block_nam": 493, "flexibli": 493, "757": 493, "regex": 493, "extrud": 493, "componentnam": 493, "dimensionnam": 493, "label1": 493, "ousid": 493, "905": 493, "burnabl": 493, "fuelgrid": 493, "buri": 493, "unambigu": 493, "standard_height": 493, "standard_axial_mesh_point": 493, "inner_core_block": 493, "dragger": 493, "determinist": 493, "defaul": 493, "superset": 493, "79213903298633": 493, "000664847887388523": 493, "182466356404319": 493, "00323253628006144": 493, "705266053783901": 493, "0171714161260001": 493, "00233843050046998": 493, "0831976890804466": 493, "00566266993741259": 493, "rect": 493, "cicl": 493, "downsid": 493, "pitchdefiningcompon": 493, "carbon_flag": 493, "getfactor": 494, "newincom": 494, "oldoutgo": 494, "daisi": 494, "overton": 494, "a3": 494, "a4": 494, "a5": 494, "thusli": 494, "essenc": 494, "peripheri": 494, "bluepint": 494, "watch": 494, "typenum": 494, "numdischarg": 494, "chargeenrich": 494, "defaultfactor": 494, "factorsearchflag": 494, "walkthrough": 495, "clicker": 495, "excerpt": [496, 501], "003454": 496, "branchverbos": [496, 497, 501], "clusterexclus": 496, "crosssectioncontrol": [496, 497], "da": 496, "palett": 496, "warrant": 496, "brush": 496, "multiphys": 496, "detailassemlocationsbol": [496, 497], "detailassemnum": [496, 497], "detailallassem": [496, 497], "dollar": 496, "decayconst": [496, 497], "six": 496, "2425": 496, "uptim": [496, 504], "shorthand": 496, "overcom": 496, "emploi": [496, 497], "ramp": 496, "prolong": 496, "slight": 496, "reduct": 496, "downtim": 496, "unevenli": 496, "buildup": 496, "rerun": 496, "000000": 496, "001002": 496, "loadstyl": [496, 497], "fromdb": [496, 497], "remaind": [496, 503], "frominput": [496, 497], "skipcycl": [496, 497], "tout": 497, "acceptableblockareaerror": 497, "assemflagstoskipaxialexpa": 497, "nsion": 497, "assempowsummari": 497, "bureducingassemblyr": 497, "otat": 497, "assemblyrotationstationar": 497, "autogenerateblockgrid": 497, "automaticvariablemesh": 497, "axialexpans": 497, "axialmeshrefinementfactor": 497, "bccoeffici": 497, "extrapolat": 497, "zerosurfaceflux": 497, "zeroinwardcurr": 497, "circularringpitch": 497, "claddingstrain": 497, "claddingwastag": 497, "copyfilesfrom": 497, "copyfilesto": 497, "coverageconfigfil": 497, "dict_k": 497, "ei": 497, "customfuelmanagementindex": 497, "242199": 497, "cyclesskiptightcouplingin": 497, "teract": 497, "dbstorageaftercycl": 497, "debugdb": 497, "debugmems": 497, "deferredinterfacenam": 497, "deferredinterfacescycl": 497, "disableblocktypeexclus": 497, "inxsgener": 497, "doorificedth": 497, "thkernel": 497, "01568627": 497, "451e": 497, "dpaxsset": 497, "dpa_ebrii_": 497, "eigenprob": 497, "epseig": 497, "epsfsavg": 497, "epsfspoint": 497, "eqdirect": 497, "shuf": 497, "existingfixedsourc": 497, "varsrc": 497, "fgremov": 497, "fissiongasyieldfract": 497, "forcedbparam": 497, "honor": 497, "nofissionproduct": 497, "infinitelydilut": 497, "explicitfissionp": 497, "roduct": 497, "freshfeedtyp": 497, "fuelperformanceengin": 497, "globalfluxact": 497, "gridplatedpaxsset": 497, "groupstructur": 497, "growtofullcoreafterload": 497, "independentvarnam": 497, "infinitedilutecutoff": 497, "initializeburnchain": 497, "jumpringnum": 497, "levelspercascad": 497, "referencef": 497, "issionprod": 497, "uct": 497, "loadfromdbeverynod": 497, "lowpowerregionfract": 497, "makeallblocklfpsindepend": 497, "explicitf": 497, "issionproduct": 497, "minmeshsizeratio": 497, "dp1": 497, "dp2": 497, "minimumfissilefract": 497, "moduleverbos": [497, 501], "mpitaskspernod": 497, "neutronicstyp": 497, "numbermeshperedg": 497, "operatorloc": 497, "outputcacheloc": 497, "jpg": 497, "svg": 497, "plotshufflearrow": 497, "namepl": 497, "reallysmallrun": 497, "removepercycl": 497, "restartneutron": 497, "runlatticephysicsbeforesh": 497, "uffl": 497, "smallrun": 497, "sortreactor": 497, "2024": 497, "calul": 497, "grid_pla": 497, "summarizeassemdesign": 497, "tightcouplingmaxnumit": 497, "tightcoup": 497, "lingsettin": 497, "dict_kei": 497, "timelineinclusioncutoff": 497, "tolerateburnupchang": 497, "test_what": 497, "myplugin": 497, "xsblockrepresent": 497, "fluxweightedaverag": 497, "componentaverage1dslab": 497, "xsbucklingconverg": 497, "xseigenvalueconverg": 497, "mc2v2": 497, "xsscatteringord": 497, "zerooutnuclidesnotindb": 497, "loc1": 497, "loc2": 497, "loc3": 497, "odhot": 498, "id600": 498, "numclad": 498, "cladmat": 498, "mydatabas": 499, "ahist": 499, "filesystem": 499, "endian": 499, "portabl": 499, "supplement": 499, "successfulli": 499, "standpoint": 499, "stroke": 499, "glean": 499, "locationtyp": 499, "comp_typ": 499, "mold": 499, "tricki": 499, "interspers": 499, "savephysicsio": 500, "cxny": 500, "00x00y": 500, "xtra": 501, "traceback": 501, "tail": 501, "monitor": 501, "myrun": 501, "thaveragecladtemperatur": 502, "k_": 502, "l2": 502, "_2": 502, "b_": 502, "mathbf": 502, "quad": 502, "foral": 502, "epsilon_i": 502, "textbf": 502, "t_0": 503, "rearrang": 503, "l_1": 503, "t_1": 503, "l_h": 503, "t_h": 503, "t_c": 503, "l_c": 503, "rditernum": 504, "capacityfactor": 504, "lcoe": 504, "levelis": 504, "usd": 504, "kwh": 504, "efeedmt": 504, "efissil": 504, "eswu": 504, "swu": 504}, "objects": {"": [[0, 0, 0, "-", "armi"]], "armi": [[0, 1, 1, "", "applyAsyncioWindowsWorkaround"], [1, 0, 0, "-", "apps"], [2, 0, 0, "-", "bookkeeping"], [43, 0, 0, "-", "cases"], [57, 0, 0, "-", "cli"], [0, 1, 1, "", "configure"], [73, 0, 0, "-", "conftest"], [74, 0, 0, "-", "context"], [0, 1, 1, "", "disableFutureConfigures"], [0, 1, 1, "", "getApp"], [0, 1, 1, "", "getDefaultPluginManager"], [0, 1, 1, "", "getDefaultPlugins"], [0, 1, 1, "", "getPluginManager"], [0, 1, 1, "", "getPluginManagerOrFail"], [0, 1, 1, "", "init"], [75, 0, 0, "-", "interfaces"], [0, 1, 1, "", "isConfigured"], [0, 1, 1, "", "isStableReleaseVersion"], [76, 0, 0, "-", "materials"], [140, 0, 0, "-", "meta"], [141, 0, 0, "-", "mpiActions"], [142, 0, 0, "-", "nucDirectory"], [154, 0, 0, "-", "nuclearDataIO"], [192, 0, 0, "-", "operators"], [202, 0, 0, "-", "physics"], [272, 0, 0, "-", "pluginManager"], [273, 0, 0, "-", "plugins"], [274, 0, 0, "-", "reactor"], [350, 0, 0, "-", "runLog"], [351, 0, 0, "-", "scripts"], [360, 0, 0, "-", "settings"], [372, 0, 0, "-", "tests"], [387, 0, 0, "-", "utils"]], "armi.apps": [[1, 2, 1, "", "App"]], "armi.apps.App": [[1, 3, 1, "", "getParamRenames"], [1, 3, 1, "", "getSettings"], [1, 4, 1, "", "name"], [1, 5, 1, "", "pluginManager"], [1, 3, 1, "", "registerPluginFlags"], [1, 3, 1, "", "registerUserPlugins"], [1, 5, 1, "", "splashText"], [1, 5, 1, "", "version"]], "armi.bookkeeping": [[2, 2, 1, "", "BookkeepingPlugin"], [3, 0, 0, "-", "db"], [16, 0, 0, "-", "historyTracker"], [17, 0, 0, "-", "mainInterface"], [18, 0, 0, "-", "memoryProfiler"], [19, 0, 0, "-", "report"], [29, 0, 0, "-", "snapshotInterface"], [30, 0, 0, "-", "tests"], [34, 0, 0, "-", "visualization"]], "armi.bookkeeping.BookkeepingPlugin": [[2, 3, 1, "", "defineCaseDependencies"], [2, 3, 1, "", "defineEntryPoints"], [2, 3, 1, "", "exposeInterfaces"], [2, 3, 1, "", "getReportContents"], [2, 3, 1, "", "mpiActionRequiresReset"]], "armi.bookkeeping.db": [[3, 2, 1, "", "Database3"], [3, 2, 1, "", "DatabaseInterface"], [3, 2, 1, "", "Permissions"], [4, 0, 0, "-", "compareDB3"], [3, 1, 1, "", "compareDatabases"], [3, 1, 1, "", "convertDatabase"], [5, 0, 0, "-", "database3"], [3, 1, 1, "", "databaseFactory"], [6, 0, 0, "-", "databaseInterface"], [7, 0, 0, "-", "factory"], [8, 0, 0, "-", "layout"], [3, 1, 1, "", "loadOperator"], [9, 0, 0, "-", "permissions"], [10, 0, 0, "-", "tests"], [15, 0, 0, "-", "typedefs"]], "armi.bookkeeping.db.Database3": [[3, 3, 1, "", "close"], [3, 5, 1, "", "fileName"], [3, 3, 1, "", "genAuxiliaryData"], [3, 3, 1, "", "genTimeStepGroups"], [3, 3, 1, "", "genTimeSteps"], [3, 3, 1, "", "getAuxiliaryDataPath"], [3, 3, 1, "", "getH5Group"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistoriesByLocation"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "getHistoryByLocation"], [3, 3, 1, "", "getLayout"], [3, 3, 1, "", "grabLocalCommitHash"], [3, 3, 1, "", "hasTimeStep"], [3, 3, 1, "", "keys"], [3, 3, 1, "", "load"], [3, 3, 1, "", "loadBlueprints"], [3, 3, 1, "", "loadCS"], [3, 3, 1, "", "loadGeometry"], [3, 3, 1, "", "mergeHistory"], [3, 3, 1, "", "open"], [3, 3, 1, "", "readInputsFromDB"], [3, 3, 1, "", "splitDatabase"], [3, 3, 1, "", "syncToSharedFolder"], [3, 4, 1, "", "timeNodeGroupPattern"], [3, 5, 1, "", "version"], [3, 5, 1, "", "versionMajor"], [3, 5, 1, "", "versionMinor"], [3, 3, 1, "", "writeInputsToDB"], [3, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.DatabaseInterface": [[3, 5, 1, "", "database"], [3, 3, 1, "", "distributable"], [3, 3, 1, "", "getHistories"], [3, 3, 1, "", "getHistory"], [3, 3, 1, "", "initDB"], [3, 3, 1, "", "interactBOL"], [3, 3, 1, "", "interactDistributeState"], [3, 3, 1, "", "interactEOC"], [3, 3, 1, "", "interactEOL"], [3, 3, 1, "", "interactError"], [3, 3, 1, "", "interactEveryNode"], [3, 3, 1, "", "loadState"], [3, 4, 1, "", "name"], [3, 3, 1, "", "prepRestartRun"], [3, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.Permissions": [[3, 4, 1, "", "CREATE_FILE_FIE"], [3, 4, 1, "", "CREATE_FILE_FIE2"], [3, 4, 1, "", "CREATE_FILE_TIE"], [3, 4, 1, "", "DEFAULT"], [3, 4, 1, "", "READ_ONLY_FME"], [3, 4, 1, "", "READ_WRITE_CREATE"], [3, 4, 1, "", "READ_WRITE_FME"], [3, 4, 1, "", "all"], [3, 4, 1, "", "create"], [3, 4, 1, "", "read"], [3, 4, 1, "", "write"]], "armi.bookkeeping.db.compareDB3": [[4, 2, 1, "", "DiffResults"], [4, 2, 1, "", "OutputWriter"], [4, 1, 1, "", "compareDatabases"]], "armi.bookkeeping.db.compareDB3.DiffResults": [[4, 3, 1, "", "addDiff"], [4, 3, 1, "", "addStructureDiffs"], [4, 3, 1, "", "addTimeStep"], [4, 3, 1, "", "nDiffs"], [4, 3, 1, "", "reportDiffs"]], "armi.bookkeeping.db.compareDB3.OutputWriter": [[4, 3, 1, "", "writeln"]], "armi.bookkeeping.db.database3": [[5, 2, 1, "", "Database3"], [5, 1, 1, "", "collectBlockNumberDensities"], [5, 1, 1, "", "getH5GroupName"], [5, 1, 1, "", "packSpecialData"], [5, 1, 1, "", "unpackSpecialData"]], "armi.bookkeeping.db.database3.Database3": [[5, 3, 1, "", "close"], [5, 5, 1, "", "fileName"], [5, 3, 1, "", "genAuxiliaryData"], [5, 3, 1, "", "genTimeStepGroups"], [5, 3, 1, "", "genTimeSteps"], [5, 3, 1, "", "getAuxiliaryDataPath"], [5, 3, 1, "", "getH5Group"], [5, 3, 1, "", "getHistories"], [5, 3, 1, "", "getHistoriesByLocation"], [5, 3, 1, "", "getHistory"], [5, 3, 1, "", "getHistoryByLocation"], [5, 3, 1, "", "getLayout"], [5, 3, 1, "", "grabLocalCommitHash"], [5, 4, 1, "", "h5db"], [5, 3, 1, "", "hasTimeStep"], [5, 3, 1, "", "keys"], [5, 3, 1, "", "load"], [5, 3, 1, "", "loadBlueprints"], [5, 3, 1, "", "loadCS"], [5, 3, 1, "", "loadGeometry"], [5, 3, 1, "", "mergeHistory"], [5, 3, 1, "", "open"], [5, 3, 1, "", "readInputsFromDB"], [5, 3, 1, "", "splitDatabase"], [5, 3, 1, "", "syncToSharedFolder"], [5, 4, 1, "", "timeNodeGroupPattern"], [5, 5, 1, "", "version"], [5, 5, 1, "", "versionMajor"], [5, 5, 1, "", "versionMinor"], [5, 3, 1, "", "writeInputsToDB"], [5, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.databaseInterface": [[6, 2, 1, "", "DatabaseInterface"], [6, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.db.databaseInterface.DatabaseInterface": [[6, 5, 1, "", "database"], [6, 3, 1, "", "distributable"], [6, 3, 1, "", "getHistories"], [6, 3, 1, "", "getHistory"], [6, 3, 1, "", "initDB"], [6, 3, 1, "", "interactBOL"], [6, 3, 1, "", "interactDistributeState"], [6, 3, 1, "", "interactEOC"], [6, 3, 1, "", "interactEOL"], [6, 3, 1, "", "interactError"], [6, 3, 1, "", "interactEveryNode"], [6, 3, 1, "", "loadState"], [6, 4, 1, "", "name"], [6, 3, 1, "", "prepRestartRun"], [6, 3, 1, "", "writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[7, 1, 1, "", "databaseFactory"]], "armi.bookkeeping.db.layout": [[8, 2, 1, "", "Layout"], [8, 1, 1, "", "replaceNonesWithNonsense"], [8, 1, 1, "", "replaceNonsenseWithNones"]], "armi.bookkeeping.db.layout.Layout": [[8, 3, 1, "", "allSubclasses"], [8, 3, 1, "", "computeAncestors"], [8, 3, 1, "", "writeToDB"]], "armi.bookkeeping.db.permissions": [[9, 2, 1, "", "Permissions"]], "armi.bookkeeping.db.permissions.Permissions": [[9, 4, 1, "", "CREATE_FILE_FIE"], [9, 4, 1, "", "CREATE_FILE_FIE2"], [9, 4, 1, "", "CREATE_FILE_TIE"], [9, 4, 1, "", "DEFAULT"], [9, 4, 1, "", "READ_ONLY_FME"], [9, 4, 1, "", "READ_WRITE_CREATE"], [9, 4, 1, "", "READ_WRITE_FME"], [9, 4, 1, "", "all"], [9, 4, 1, "", "create"], [9, 4, 1, "", "read"], [9, 4, 1, "", "write"]], "armi.bookkeeping.db.tests": [[11, 0, 0, "-", "test_comparedb3"], [12, 0, 0, "-", "test_database3"], [13, 0, 0, "-", "test_databaseInterface"], [14, 0, 0, "-", "test_layout"]], "armi.bookkeeping.db.tests.test_comparedb3": [[11, 2, 1, "", "TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3": [[11, 3, 1, "", "test_compareAuxData"], [11, 3, 1, "", "test_compareDatabaseDuplicate"], [11, 3, 1, "", "test_compareDatabaseSim"], [11, 3, 1, "", "test_compareSets"], [11, 3, 1, "", "test_diffResultsBasic"], [11, 3, 1, "", "test_diffSimpleData"], [11, 3, 1, "", "test_diffSpecialData"], [11, 3, 1, "", "test_outputWriter"]], "armi.bookkeeping.db.tests.test_database3": [[12, 2, 1, "", "TestDatabase3"]], "armi.bookkeeping.db.tests.test_database3.TestDatabase3": [[12, 3, 1, "", "makeHistory"], [12, 3, 1, "", "makeShuffleHistory"], [12, 3, 1, "", "test_auxData"], [12, 3, 1, "", "test_computeParents"], [12, 3, 1, "", "test_deleting"], [12, 3, 1, "", "test_fileName"], [12, 3, 1, "", "test_getH5File"], [12, 3, 1, "", "test_grabLocalCommitHash"], [12, 3, 1, "", "test_history"], [12, 3, 1, "", "test_load"], [12, 3, 1, "", "test_loadBlueprints"], [12, 3, 1, "", "test_loadCS"], [12, 3, 1, "", "test_loadSortSetting"], [12, 3, 1, "", "test_mergeHistory"], [12, 3, 1, "", "test_open"], [12, 3, 1, "", "test_prepRestartRun"], [12, 3, 1, "", "test_readInputsFromDB"], [12, 3, 1, "", "test_replaceNones"], [12, 3, 1, "", "test_splitDatabase"], [12, 3, 1, "", "test_writeToDB"]], "armi.bookkeeping.db.tests.test_databaseInterface": [[13, 2, 1, "", "MockInterface"], [13, 2, 1, "", "TestBadName"], [13, 2, 1, "", "TestDatabaseInterface"], [13, 2, 1, "", "TestDatabaseReading"], [13, 2, 1, "", "TestDatabaseWriter"], [13, 2, 1, "", "TestStandardFollowOn"], [13, 1, 1, "", "getSimpleDBOperator"]], "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface": [[13, 3, 1, "", "interactEveryNode"], [13, 4, 1, "", "name"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName": [[13, 3, 1, "", "test_badDBName"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface": [[13, 3, 1, "", "test_distributable"], [13, 3, 1, "", "test_interactBOL"], [13, 3, 1, "", "test_interactEveryNodeReturn"], [13, 3, 1, "", "test_timeNodeLoop_tightCoupling"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading": [[13, 3, 1, "", "test_growToFullCore"], [13, 3, 1, "", "test_growToFullCoreFromFactory"], [13, 3, 1, "", "test_growToFullCoreFromFactoryWithCS"], [13, 3, 1, "", "test_growToFullCoreWithCS"], [13, 3, 1, "", "test_readWithoutInputs"], [13, 3, 1, "", "test_readWritten"], [13, 3, 1, "", "test_variousTypesWork"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter": [[13, 3, 1, "", "test_getHistory"], [13, 3, 1, "", "test_getHistoryByLocation"], [13, 3, 1, "", "test_metaDataEndFail"], [13, 3, 1, "", "test_metaData_endSuccessfully"]], "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn": [[13, 3, 1, "", "test_standardRestart"]], "armi.bookkeeping.db.tests.test_layout": [[14, 2, 1, "", "TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout.TestLocationPacking": [[14, 3, 1, "", "test_close"], [14, 3, 1, "", "test_locationPacking"], [14, 3, 1, "", "test_locationPackingOldVersion"], [14, 3, 1, "", "test_locationPackingOlderVersions"]], "armi.bookkeeping.historyTracker": [[16, 2, 1, "", "HistoryTrackerInterface"], [16, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.historyTracker.HistoryTrackerInterface": [[16, 3, 1, "", "addAllFuelAssems"], [16, 3, 1, "", "addDetailAssembliesBOL"], [16, 3, 1, "", "addDetailAssembly"], [16, 3, 1, "", "addDetailAssemsByAssemNums"], [16, 3, 1, "", "filterTimeIndices"], [16, 3, 1, "", "getBlockHistoryVal"], [16, 3, 1, "", "getDetailAssemblies"], [16, 3, 1, "", "getDetailBlocks"], [16, 3, 1, "", "getTimeSteps"], [16, 3, 1, "", "getTrackedParams"], [16, 3, 1, "", "interactBOC"], [16, 3, 1, "", "interactBOL"], [16, 3, 1, "", "interactEOL"], [16, 4, 1, "", "name"], [16, 3, 1, "", "preloadBlockHistoryVals"], [16, 3, 1, "", "unloadBlockHistoryVals"], [16, 3, 1, "", "writeAssemHistory"]], "armi.bookkeeping.mainInterface": [[17, 2, 1, "", "MainInterface"], [17, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.mainInterface.MainInterface": [[17, 3, 1, "", "cleanARMIFiles"], [17, 3, 1, "", "cleanLastCycleFiles"], [17, 3, 1, "", "interactBOC"], [17, 3, 1, "", "interactBOL"], [17, 3, 1, "", "interactEOL"], [17, 3, 1, "", "interactEveryNode"], [17, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler": [[18, 2, 1, "", "InstanceCounter"], [18, 2, 1, "", "KlassCounter"], [18, 2, 1, "", "MemoryProfiler"], [18, 2, 1, "", "PrintSystemMemoryUsageAction"], [18, 2, 1, "", "ProfileMemoryUsageAction"], [18, 2, 1, "", "SystemAndProcessMemoryUsage"], [18, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.memoryProfiler.InstanceCounter": [[18, 3, 1, "", "add"]], "armi.bookkeeping.memoryProfiler.KlassCounter": [[18, 3, 1, "", "countObjects"]], "armi.bookkeeping.memoryProfiler.MemoryProfiler": [[18, 3, 1, "", "checkForDuplicateObjectsOnArmiModel"], [18, 3, 1, "", "displayMemoryUsage"], [18, 3, 1, "", "getReferrers"], [18, 3, 1, "", "interactBOL"], [18, 3, 1, "", "interactEOL"], [18, 3, 1, "", "interactEveryNode"], [18, 4, 1, "", "name"]], "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction": [[18, 3, 1, "", "invokeHook"], [18, 5, 1, "", "maxProcessMemoryInMB"], [18, 5, 1, "", "minProcessMemoryInMB"], [18, 3, 1, "", "printUsage"]], "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction": [[18, 3, 1, "", "invokeHook"]], "armi.bookkeeping.report": [[20, 0, 0, "-", "data"], [21, 0, 0, "-", "html"], [22, 0, 0, "-", "newReportUtils"], [23, 0, 0, "-", "newReports"], [24, 0, 0, "-", "reportInterface"], [25, 0, 0, "-", "reportingUtils"], [19, 1, 1, "", "setData"], [26, 0, 0, "-", "tests"]], "armi.bookkeeping.report.data": [[20, 2, 1, "", "Group"], [20, 2, 1, "", "Image"], [20, 2, 1, "", "Report"], [20, 2, 1, "", "Table"]], "armi.bookkeeping.report.data.Group": [[20, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Image": [[20, 4, 1, "", "count"], [20, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Report": [[20, 3, 1, "", "addToReport"], [20, 4, 1, "", "componentWellGroups"], [20, 4, 1, "", "groupsOrderFirst"], [20, 3, 1, "", "writeGroupsHTML"], [20, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.data.Table": [[20, 3, 1, "", "writeHTML"]], "armi.bookkeeping.report.html": [[21, 2, 1, "", "A"], [21, 2, 1, "", "B"], [21, 2, 1, "", "Body"], [21, 2, 1, "", "Caption"], [21, 2, 1, "", "Div"], [21, 2, 1, "", "Footer"], [21, 2, 1, "", "H1"], [21, 2, 1, "", "H2"], [21, 2, 1, "", "H3"], [21, 2, 1, "", "H4"], [21, 2, 1, "", "HTMLFile"], [21, 2, 1, "", "Head"], [21, 2, 1, "", "Html"], [21, 2, 1, "", "Img"], [21, 2, 1, "", "LI"], [21, 2, 1, "", "Link"], [21, 2, 1, "", "P"], [21, 2, 1, "", "Script"], [21, 2, 1, "", "Span"], [21, 2, 1, "", "Style"], [21, 2, 1, "", "TBody"], [21, 2, 1, "", "TD"], [21, 2, 1, "", "TH"], [21, 2, 1, "", "THead"], [21, 2, 1, "", "TR"], [21, 2, 1, "", "Table"], [21, 2, 1, "", "Tag"], [21, 2, 1, "", "Title"], [21, 2, 1, "", "UL"], [21, 1, 1, "", "encode64"], [21, 1, 1, "", "writeStandardReportTemplate"]], "armi.bookkeeping.report.html.A": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.B": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Body": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Caption": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Div": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Footer": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H1": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H2": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H3": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.H4": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.HTMLFile": [[21, 3, 1, "", "write"], [21, 3, 1, "", "writeEscaped"]], "armi.bookkeeping.report.html.Head": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Html": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Img": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.LI": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Link": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.P": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Script": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Span": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Style": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TBody": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TD": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TH": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.THead": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.TR": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Table": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Tag": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.Title": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.html.UL": [[21, 4, 1, "", "tag"]], "armi.bookkeeping.report.newReportUtils": [[22, 6, 1, "", "DESIGN"], [22, 1, 1, "", "comprehensiveBOLContent"], [22, 1, 1, "", "createDimensionReport"], [22, 1, 1, "", "getPinDesignTable"], [22, 1, 1, "", "insertAreaFractionsReport"], [22, 1, 1, "", "insertBlockDesignReport"], [22, 1, 1, "", "insertBlockDiagrams"], [22, 1, 1, "", "insertBlueprintContent"], [22, 1, 1, "", "insertCoreAndAssemblyMaps"], [22, 1, 1, "", "insertCoreDesignReport"], [22, 1, 1, "", "insertDesignContent"], [22, 1, 1, "", "insertEndOfLifeContent"], [22, 1, 1, "", "insertGeneralReportContent"], [22, 1, 1, "", "insertMetaTable"], [22, 1, 1, "", "insertSettingsData"]], "armi.bookkeeping.report.newReports": [[23, 2, 1, "", "Image"], [23, 2, 1, "", "ReportContent"], [23, 2, 1, "", "ReportNode"], [23, 2, 1, "", "ReportStage"], [23, 2, 1, "", "Section"], [23, 2, 1, "", "Table"], [23, 2, 1, "", "TimeSeries"], [23, 1, 1, "", "encode64"]], "armi.bookkeeping.report.newReports.Image": [[23, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportContent": [[23, 3, 1, "", "get"], [23, 3, 1, "", "tableOfContents"], [23, 3, 1, "", "writeReports"]], "armi.bookkeeping.report.newReports.ReportNode": [[23, 4, 1, "", "levelDict"], [23, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.ReportStage": [[23, 4, 1, "", "Begin"], [23, 4, 1, "", "End"], [23, 4, 1, "", "Standard"]], "armi.bookkeeping.report.newReports.Section": [[23, 3, 1, "", "addChildElement"], [23, 3, 1, "", "get"], [23, 3, 1, "", "items"], [23, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.Table": [[23, 3, 1, "", "addRow"], [23, 3, 1, "", "render"]], "armi.bookkeeping.report.newReports.TimeSeries": [[23, 3, 1, "", "add"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "render"]], "armi.bookkeeping.report.reportInterface": [[24, 2, 1, "", "ReportInterface"], [24, 1, 1, "", "describeInterfaces"]], "armi.bookkeeping.report.reportInterface.ReportInterface": [[24, 3, 1, "", "distributable"], [24, 3, 1, "", "generateDesignReport"], [24, 3, 1, "", "interactBOC"], [24, 3, 1, "", "interactBOL"], [24, 3, 1, "", "interactEOC"], [24, 3, 1, "", "interactEOL"], [24, 3, 1, "", "interactEveryNode"], [24, 4, 1, "", "name"], [24, 3, 1, "", "printReports"], [24, 4, 1, "", "reports"], [24, 3, 1, "", "writeReports"], [24, 3, 1, "", "writeRunSummary"]], "armi.bookkeeping.report.reportingUtils": [[25, 1, 1, "", "getInterfaceStackSummary"], [25, 1, 1, "", "makeBlockDesignReport"], [25, 1, 1, "", "makeCoreAndAssemblyMaps"], [25, 1, 1, "", "makeCoreDesignReport"], [25, 1, 1, "", "setNeutronBalancesReport"], [25, 1, 1, "", "summarizePinDesign"], [25, 1, 1, "", "summarizePower"], [25, 1, 1, "", "summarizePowerPeaking"], [25, 1, 1, "", "writeAssemblyMassSummary"], [25, 1, 1, "", "writeCycleSummary"], [25, 1, 1, "", "writeTightCouplingConvergenceSummary"], [25, 1, 1, "", "writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[27, 0, 0, "-", "test_newReport"], [28, 0, 0, "-", "test_report"]], "armi.bookkeeping.report.tests.test_newReport": [[27, 2, 1, "", "TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation": [[27, 3, 1, "", "test_neutronicsPlotFunctions"], [27, 3, 1, "", "test_reportBasics"], [27, 3, 1, "", "test_reportContents"], [27, 3, 1, "", "test_reportContentsEnd"], [27, 3, 1, "", "test_reportLogs"], [27, 3, 1, "", "test_tableCreation"], [27, 3, 1, "", "test_timeSeries"], [27, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.report.tests.test_report": [[28, 2, 1, "", "TestReport"], [28, 2, 1, "", "TestReportInterface"]], "armi.bookkeeping.report.tests.test_report.TestReport": [[28, 3, 1, "", "test_getData"], [28, 3, 1, "", "test_reactorSpecificReporting"], [28, 3, 1, "", "test_setData"], [28, 3, 1, "", "test_writeWelcomeHeaders"]], "armi.bookkeeping.report.tests.test_report.TestReportInterface": [[28, 3, 1, "", "test_distributableReportInt"], [28, 3, 1, "", "test_interactBOC"], [28, 3, 1, "", "test_interactBOLReportInt"], [28, 3, 1, "", "test_interactEOC"], [28, 3, 1, "", "test_interactEOL"], [28, 3, 1, "", "test_interactEveryNode"], [28, 3, 1, "", "test_printReports"], [28, 3, 1, "", "test_writeReports"]], "armi.bookkeeping.snapshotInterface": [[29, 2, 1, "", "SnapshotInterface"], [29, 1, 1, "", "describeInterfaces"], [29, 1, 1, "", "extractCycleNodeFromStamp"], [29, 1, 1, "", "getCycleNodeStamp"]], "armi.bookkeeping.snapshotInterface.SnapshotInterface": [[29, 3, 1, "", "activateDefaultSnapshots"], [29, 3, 1, "", "interactBOL"], [29, 3, 1, "", "interactCoupled"], [29, 3, 1, "", "interactEveryNode"], [29, 4, 1, "", "name"]], "armi.bookkeeping.tests": [[31, 0, 0, "-", "test_historyTracker"], [32, 0, 0, "-", "test_memoryProfiler"], [33, 0, 0, "-", "test_snapshot"]], "armi.bookkeeping.tests.test_historyTracker": [[31, 2, 1, "", "TestHistoryTracker"], [31, 2, 1, "", "TestHistoryTrackerNoModel"], [31, 1, 1, "", "runTutorialNotebook"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker": [[31, 3, 1, "", "test_calcMGFluence"], [31, 3, 1, "", "test_getBlockInAssembly"], [31, 3, 1, "", "test_historyReport"]], "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel": [[31, 3, 1, "", "test_blockName"], [31, 3, 1, "", "test_timestepFiltering"], [31, 3, 1, "", "test_timestepFilteringWithGap"]], "armi.bookkeeping.tests.test_memoryProfiler": [[32, 2, 1, "", "KlassCounterTests"], [32, 2, 1, "", "TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests": [[32, 3, 1, "", "get_containers"], [32, 3, 1, "", "test_countHandlesRecursion"], [32, 3, 1, "", "test_expandContainer"]], "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler": [[32, 3, 1, "", "test_checkForDuplicateObjectsOnArmiModel"], [32, 3, 1, "", "test_displayMemoryUsage"], [32, 3, 1, "", "test_fullBreakdown"], [32, 3, 1, "", "test_getReferrers"], [32, 3, 1, "", "test_printFullMemoryBreakdown"], [32, 3, 1, "", "test_profileMemoryUsageAction"]], "armi.bookkeeping.tests.test_snapshot": [[33, 2, 1, "", "MockReactor"], [33, 2, 1, "", "MockReactorParams"], [33, 2, 1, "", "TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface": [[33, 3, 1, "", "test_activeateDefaultSnapshots_17cycles5BurnSteps"], [33, 3, 1, "", "test_activeateDefaultSnapshots_30cycles2BurnSteps"], [33, 3, 1, "", "test_interactCoupled"], [33, 3, 1, "", "test_interactEveryNode"]], "armi.bookkeeping.visualization": [[35, 0, 0, "-", "dumper"], [36, 0, 0, "-", "entryPoint"], [37, 0, 0, "-", "tests"], [40, 0, 0, "-", "utils"], [41, 0, 0, "-", "vtk"], [42, 0, 0, "-", "xdmf"]], "armi.bookkeeping.visualization.dumper": [[35, 2, 1, "", "VisFileDumper"]], "armi.bookkeeping.visualization.dumper.VisFileDumper": [[35, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.entryPoint": [[36, 2, 1, "", "VisFileEntryPoint"]], "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint": [[36, 3, 1, "", "addOptions"], [36, 4, 1, "", "description"], [36, 3, 1, "", "invoke"], [36, 4, 1, "", "name"], [36, 3, 1, "", "parse"], [36, 4, 1, "", "settingsArgument"]], "armi.bookkeeping.visualization.tests": [[38, 0, 0, "-", "test_vis"], [39, 0, 0, "-", "test_xdmf"]], "armi.bookkeeping.visualization.tests.test_vis": [[38, 2, 1, "", "TestVisDump"], [38, 2, 1, "", "TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVisDump": [[38, 3, 1, "", "test_cartesianMesh"], [38, 3, 1, "", "test_dumpReactorVtk"], [38, 3, 1, "", "test_dumpReactorXdmf"], [38, 3, 1, "", "test_hexMesh"]], "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh": [[38, 3, 1, "", "test_testVtkMesh"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[39, 2, 1, "", "TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf": [[39, 3, 1, "", "test_dedupTimes"]], "armi.bookkeeping.visualization.utils": [[40, 2, 1, "", "VtkMesh"], [40, 1, 1, "", "createAssemMesh"], [40, 1, 1, "", "createBlockMesh"], [40, 1, 1, "", "createReactorAssemMesh"], [40, 1, 1, "", "createReactorBlockMesh"]], "armi.bookkeeping.visualization.utils.VtkMesh": [[40, 3, 1, "", "append"], [40, 3, 1, "", "empty"], [40, 3, 1, "", "write"], [40, 5, 1, "", "x"], [40, 5, 1, "", "y"], [40, 5, 1, "", "z"]], "armi.bookkeeping.visualization.vtk": [[41, 2, 1, "", "VtkDumper"]], "armi.bookkeeping.visualization.vtk.VtkDumper": [[41, 3, 1, "", "dumpState"]], "armi.bookkeeping.visualization.xdmf": [[42, 2, 1, "", "XdmfDumper"]], "armi.bookkeeping.visualization.xdmf.XdmfDumper": [[42, 3, 1, "", "dumpState"]], "armi.cases": [[44, 0, 0, "-", "case"], [45, 0, 0, "-", "inputModifiers"], [52, 0, 0, "-", "suite"], [53, 0, 0, "-", "suiteBuilder"], [54, 0, 0, "-", "tests"]], "armi.cases.case": [[44, 2, 1, "", "Case"], [44, 1, 1, "", "copyInterfaceInputs"]], "armi.cases.case.Case": [[44, 3, 1, "", "addExplicitDependency"], [44, 5, 1, "", "bp"], [44, 3, 1, "", "buildCommand"], [44, 3, 1, "", "checkInputs"], [44, 3, 1, "", "clone"], [44, 3, 1, "", "compare"], [44, 5, 1, "", "dbName"], [44, 5, 1, "", "dependencies"], [44, 5, 1, "", "directory"], [44, 5, 1, "", "geom"], [44, 3, 1, "", "getPotentialParentFromSettingValue"], [44, 5, 1, "", "independentVariables"], [44, 3, 1, "", "initializeOperator"], [44, 3, 1, "", "run"], [44, 3, 1, "", "setUpTaskDependence"], [44, 3, 1, "", "summarizeDesign"], [44, 5, 1, "", "title"], [44, 3, 1, "", "writeInputs"]], "armi.cases.inputModifiers": [[46, 0, 0, "-", "inputModifiers"], [47, 0, 0, "-", "neutronicsModifiers"], [48, 0, 0, "-", "pinTypeInputModifiers"], [49, 0, 0, "-", "tests"]], "armi.cases.inputModifiers.inputModifiers": [[46, 2, 1, "", "BluePrintBlockModifier"], [46, 2, 1, "", "FullCoreModifier"], [46, 2, 1, "", "InputModifier"], [46, 2, 1, "", "MultiSettingModifier"], [46, 2, 1, "", "SamplingInputModifier"], [46, 2, 1, "", "SettingsModifier"]], "armi.cases.inputModifiers.inputModifiers.InputModifier": [[46, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.neutronicsModifiers": [[47, 2, 1, "", "NeutronicConvergenceModifier"], [47, 2, 1, "", "NeutronicMeshsSizeModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers": [[48, 2, 1, "", "CladThicknessByIDModifier"], [48, 2, 1, "", "CladThicknessByODModifier"], [48, 2, 1, "", "SmearDensityModifier"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier": [[48, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier": [[48, 4, 1, "", "FAIL_IF_AFTER"]], "armi.cases.inputModifiers.tests": [[50, 0, 0, "-", "test_inputModifiers"], [51, 0, 0, "-", "test_pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests.test_inputModifiers": [[50, 2, 1, "", "MockGeom"], [50, 2, 1, "", "NeutronicsKernelOpts"], [50, 2, 1, "", "TestFullCoreModifier"], [50, 2, 1, "", "TestSettingsModifiers"], [50, 2, 1, "", "TestsuiteBuilderIntegrations"]], "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom": [[50, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier": [[50, 3, 1, "", "test_fullCoreConversion"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers": [[50, 3, 1, "", "test_NeutronicConvergenceModifier"]], "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations": [[50, 3, 1, "", "test_bluePrintBlockModifier"], [50, 3, 1, "", "test_settingsModifier"], [50, 3, 1, "", "test_smearDensityFail"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers": [[51, 2, 1, "", "MockGeom"], [51, 2, 1, "", "TestBlueprintModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom": [[51, 4, 1, "", "geomType"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers": [[51, 3, 1, "", "test_AdjustSmearDensity"], [51, 3, 1, "", "test_CladThickenessByIDModifier"], [51, 3, 1, "", "test_CladThickenessByODModifier"]], "armi.cases.suite": [[52, 2, 1, "", "CaseSuite"]], "armi.cases.suite.CaseSuite": [[52, 3, 1, "", "add"], [52, 3, 1, "", "clone"], [52, 3, 1, "", "compare"], [52, 3, 1, "", "discover"], [52, 3, 1, "", "echoConfiguration"], [52, 3, 1, "", "remove"], [52, 3, 1, "", "run"], [52, 3, 1, "", "writeInputs"], [52, 3, 1, "", "writeTable"]], "armi.cases.suiteBuilder": [[53, 2, 1, "", "FullFactorialSuiteBuilder"], [53, 2, 1, "", "FullFactorialSuiteBuilderNoisy"], [53, 2, 1, "", "LatinHyperCubeSuiteBuilder"], [53, 2, 1, "", "SeparateEffectsSuiteBuilder"], [53, 2, 1, "", "SuiteBuilder"], [53, 1, 1, "", "getInputModifiers"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilder": [[53, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy": [[53, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder": [[53, 3, 1, "", "addDegreeOfFreedom"], [53, 3, 1, "", "buildSuite"]], "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder": [[53, 3, 1, "", "addDegreeOfFreedom"]], "armi.cases.suiteBuilder.SuiteBuilder": [[53, 3, 1, "", "addDegreeOfFreedom"], [53, 3, 1, "", "addModifierSet"], [53, 3, 1, "", "buildSuite"]], "armi.cases.tests": [[55, 0, 0, "-", "test_cases"], [56, 0, 0, "-", "test_suiteBuilder"]], "armi.cases.tests.test_cases": [[55, 2, 1, "", "MultiFilesInterfaces"], [55, 2, 1, "", "TestArmiCase"], [55, 2, 1, "", "TestCaseSuiteDependencies"], [55, 2, 1, "", "TestCopyInterfaceInputs"], [55, 2, 1, "", "TestExtraInputWriting"], [55, 2, 1, "", "TestPluginForCopyInterfacesMultipleFiles"]], "armi.cases.tests.test_cases.MultiFilesInterfaces": [[55, 4, 1, "", "name"], [55, 3, 1, "", "specifyInputs"]], "armi.cases.tests.test_cases.TestArmiCase": [[55, 3, 1, "", "test_clone"], [55, 3, 1, "", "test_endCoverage"], [55, 3, 1, "", "test_endProfiling"], [55, 3, 1, "", "test_getCoverageRcFile"], [55, 3, 1, "", "test_independentVariables"], [55, 3, 1, "", "test_run"], [55, 3, 1, "", "test_setUpTaskDependence"], [55, 3, 1, "", "test_startCoverage"], [55, 3, 1, "", "test_startProfiling"], [55, 3, 1, "", "test_summarizeDesign"]], "armi.cases.tests.test_cases.TestCaseSuiteDependencies": [[55, 3, 1, "", "test_buildCommand"], [55, 3, 1, "", "test_clone"], [55, 3, 1, "", "test_dependenciesWithObscurePaths"], [55, 3, 1, "", "test_dependencyFromDBName"], [55, 3, 1, "", "test_dependencyFromExplictRepeatShuffles"], [55, 3, 1, "", "test_explicitDependency"], [55, 3, 1, "", "test_titleSetterGetter"]], "armi.cases.tests.test_cases.TestCopyInterfaceInputs": [[55, 3, 1, "", "test_copyInputsHelper"], [55, 3, 1, "", "test_copyInterfaceInputs_absPath"], [55, 3, 1, "", "test_copyInterfaceInputs_multipleFiles"], [55, 3, 1, "", "test_copyInterfaceInputs_nonFilePath"], [55, 3, 1, "", "test_copyInterfaceInputs_relPath"], [55, 3, 1, "", "test_copyInterfaceInputs_singleFile"], [55, 3, 1, "", "test_copyInterfaceInputs_wildcardFile"]], "armi.cases.tests.test_cases.TestExtraInputWriting": [[55, 3, 1, "", "test_writeInput"]], "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles": [[55, 3, 1, "", "defineSettings"], [55, 3, 1, "", "exposeInterfaces"]], "armi.cases.tests.test_suiteBuilder": [[56, 2, 1, "", "LatinHyperCubeModifier"], [56, 2, 1, "", "TestLatinHyperCubeSuiteBuilder"]], "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder": [[56, 3, 1, "", "test_addDegreeOfFreedom"], [56, 3, 1, "", "test_buildSuite"], [56, 3, 1, "", "test_initialize"]], "armi.cli": [[57, 2, 1, "", "ArmiCLI"], [57, 2, 1, "", "ArmiParser"], [57, 2, 1, "", "EntryPointsPlugin"], [58, 0, 0, "-", "checkInputs"], [59, 0, 0, "-", "cleanTemps"], [60, 0, 0, "-", "clone"], [61, 0, 0, "-", "compareCases"], [62, 0, 0, "-", "database"], [63, 0, 0, "-", "entryPoint"], [64, 0, 0, "-", "gridGui"], [65, 0, 0, "-", "migrateInputs"], [66, 0, 0, "-", "modify"], [67, 0, 0, "-", "reportsEntryPoint"], [68, 0, 0, "-", "run"], [69, 0, 0, "-", "runSuite"], [57, 1, 1, "", "splash"], [70, 0, 0, "-", "tests"]], "armi.cli.ArmiCLI": [[57, 3, 1, "", "executeCommand"], [57, 3, 1, "", "listCommands"], [57, 3, 1, "", "run"], [57, 3, 1, "", "showVersion"]], "armi.cli.ArmiParser": [[57, 3, 1, "", "print_help"]], "armi.cli.EntryPointsPlugin": [[57, 3, 1, "", "defineEntryPoints"]], "armi.cli.checkInputs": [[58, 2, 1, "", "CheckInputEntryPoint"], [58, 2, 1, "", "ExpandBlueprints"]], "armi.cli.checkInputs.CheckInputEntryPoint": [[58, 3, 1, "", "addOptions"], [58, 3, 1, "", "invoke"], [58, 4, 1, "", "name"], [58, 4, 1, "", "settingsArgument"]], "armi.cli.checkInputs.ExpandBlueprints": [[58, 3, 1, "", "addOptions"], [58, 3, 1, "", "invoke"], [58, 4, 1, "", "name"], [58, 4, 1, "", "settingsArgument"], [58, 4, 1, "", "splash"]], "armi.cli.cleanTemps": [[59, 2, 1, "", "CleanTemps"]], "armi.cli.cleanTemps.CleanTemps": [[59, 3, 1, "", "invoke"], [59, 4, 1, "", "name"], [59, 4, 1, "", "settingsArgument"]], "armi.cli.clone": [[60, 2, 1, "", "CloneArmiRunCommandBatch"], [60, 2, 1, "", "CloneArmiRunCommandInteractive"], [60, 2, 1, "", "CloneSuiteCommand"]], "armi.cli.clone.CloneArmiRunCommandBatch": [[60, 3, 1, "", "addOptions"], [60, 3, 1, "", "invoke"], [60, 4, 1, "", "name"], [60, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneArmiRunCommandInteractive": [[60, 4, 1, "", "name"], [60, 4, 1, "", "settingsArgument"]], "armi.cli.clone.CloneSuiteCommand": [[60, 3, 1, "", "addOptions"], [60, 3, 1, "", "invoke"], [60, 4, 1, "", "name"], [60, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases": [[61, 2, 1, "", "CompareCases"], [61, 2, 1, "", "CompareSuites"]], "armi.cli.compareCases.CompareCases": [[61, 3, 1, "", "addOptions"], [61, 3, 1, "", "invoke"], [61, 4, 1, "", "name"], [61, 3, 1, "", "parse"], [61, 4, 1, "", "settingsArgument"]], "armi.cli.compareCases.CompareSuites": [[61, 3, 1, "", "addOptions"], [61, 3, 1, "", "invoke"], [61, 4, 1, "", "name"], [61, 4, 1, "", "settingsArgument"]], "armi.cli.database": [[62, 2, 1, "", "ConvertDB"], [62, 2, 1, "", "ExtractInputs"], [62, 2, 1, "", "InjectInputs"]], "armi.cli.database.ConvertDB": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "mode"], [62, 4, 1, "", "name"], [62, 3, 1, "", "parse_args"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.database.ExtractInputs": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "mode"], [62, 4, 1, "", "name"], [62, 3, 1, "", "parse_args"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.database.InjectInputs": [[62, 3, 1, "", "addOptions"], [62, 3, 1, "", "invoke"], [62, 4, 1, "", "mode"], [62, 4, 1, "", "name"], [62, 4, 1, "", "settingsArgument"]], "armi.cli.entryPoint": [[63, 2, 1, "", "EntryPoint"], [63, 1, 1, "", "loadSettings"], [63, 1, 1, "", "setCaseTitle"], [63, 1, 1, "", "setSetting"], [63, 1, 1, "", "storeBool"]], "armi.cli.entryPoint.EntryPoint": [[63, 3, 1, "", "addOptions"], [63, 3, 1, "", "createOptionFromSetting"], [63, 4, 1, "", "description"], [63, 3, 1, "", "invoke"], [63, 4, 1, "", "mode"], [63, 4, 1, "", "name"], [63, 3, 1, "", "parse"], [63, 3, 1, "", "parse_args"], [63, 4, 1, "", "settingsArgument"], [63, 4, 1, "", "splash"]], "armi.cli.gridGui": [[64, 2, 1, "", "GridGuiEntryPoint"]], "armi.cli.gridGui.GridGuiEntryPoint": [[64, 3, 1, "", "addOptions"], [64, 3, 1, "", "invoke"], [64, 4, 1, "", "name"], [64, 4, 1, "", "settingsArgument"]], "armi.cli.migrateInputs": [[65, 2, 1, "", "MigrateInputs"]], "armi.cli.migrateInputs.MigrateInputs": [[65, 3, 1, "", "addOptions"], [65, 3, 1, "", "invoke"], [65, 4, 1, "", "name"], [65, 4, 1, "", "settingsArgument"]], "armi.cli.modify": [[66, 2, 1, "", "ModifyCaseSettingsCommand"]], "armi.cli.modify.ModifyCaseSettingsCommand": [[66, 3, 1, "", "addOptions"], [66, 3, 1, "", "invoke"], [66, 4, 1, "", "name"], [66, 4, 1, "", "settingsArgument"]], "armi.cli.reportsEntryPoint": [[67, 2, 1, "", "ReportsEntryPoint"], [67, 1, 1, "", "createReportFromSettings"]], "armi.cli.reportsEntryPoint.ReportsEntryPoint": [[67, 3, 1, "", "addOptions"], [67, 4, 1, "", "description"], [67, 3, 1, "", "invoke"], [67, 4, 1, "", "name"], [67, 4, 1, "", "settingsArgument"]], "armi.cli.run": [[68, 2, 1, "", "RunEntryPoint"]], "armi.cli.run.RunEntryPoint": [[68, 3, 1, "", "addOptions"], [68, 3, 1, "", "invoke"], [68, 4, 1, "", "name"], [68, 4, 1, "", "settingsArgument"]], "armi.cli.runSuite": [[69, 2, 1, "", "RunSuiteCommand"]], "armi.cli.runSuite.RunSuiteCommand": [[69, 3, 1, "", "addOptions"], [69, 3, 1, "", "invoke"], [69, 4, 1, "", "name"], [69, 4, 1, "", "settingsArgument"]], "armi.cli.tests": [[71, 0, 0, "-", "test_runEntryPoint"], [72, 0, 0, "-", "test_runSuite"]], "armi.cli.tests.test_runEntryPoint": [[71, 2, 1, "", "TestCheckInputEntryPoint"], [71, 2, 1, "", "TestCloneArmiRunCommandBatch"], [71, 2, 1, "", "TestCloneSuiteCommand"], [71, 2, 1, "", "TestCompareCases"], [71, 2, 1, "", "TestCompareIsotxsLibsEntryPoint"], [71, 2, 1, "", "TestCompareSuites"], [71, 2, 1, "", "TestConvertDB"], [71, 2, 1, "", "TestExpandBlueprints"], [71, 2, 1, "", "TestExtractInputs"], [71, 2, 1, "", "TestInitializationEntryPoints"], [71, 2, 1, "", "TestInjectInputs"], [71, 2, 1, "", "TestMigrateInputs"], [71, 2, 1, "", "TestModifyCaseSettingsCommand"], [71, 2, 1, "", "TestReportsEntryPoint"], [71, 2, 1, "", "TestRunEntryPoint"], [71, 2, 1, "", "TestRunSuiteCommand"], [71, 2, 1, "", "TestVisFileEntryPointCommand"]], "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint": [[71, 3, 1, "", "test_checkInputEntryPointBasics"], [71, 3, 1, "", "test_checkInputEntryPointInvoke"]], "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch": [[71, 3, 1, "", "test_cloneArmiRunCommandBatchBasics"], [71, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeMedium"], [71, 3, 1, "", "test_cloneArmiRunCommandBatchInvokeShort"]], "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand": [[71, 3, 1, "", "test_cloneSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareCases": [[71, 3, 1, "", "test_compareCasesBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint": [[71, 3, 1, "", "test_compareIsotxsLibsBasics"]], "armi.cli.tests.test_runEntryPoint.TestCompareSuites": [[71, 3, 1, "", "test_compareSuitesBasics"]], "armi.cli.tests.test_runEntryPoint.TestConvertDB": [[71, 3, 1, "", "test_convertDbBasics"], [71, 3, 1, "", "test_convertDbOutputNodes"], [71, 3, 1, "", "test_convertDbOutputVersion"]], "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints": [[71, 3, 1, "", "test_expandBlueprintsBasics"]], "armi.cli.tests.test_runEntryPoint.TestExtractInputs": [[71, 3, 1, "", "test_extractInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints": [[71, 3, 1, "", "test_entryPointInitialization"]], "armi.cli.tests.test_runEntryPoint.TestInjectInputs": [[71, 3, 1, "", "test_injectInputsBasics"], [71, 3, 1, "", "test_injectInputsInvokeIgnore"], [71, 3, 1, "", "test_injectInputsInvokeNoData"]], "armi.cli.tests.test_runEntryPoint.TestMigrateInputs": [[71, 3, 1, "", "test_migrateInputsBasics"]], "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand": [[71, 3, 1, "", "test_modifyCaseSettingsCommandBasics"], [71, 3, 1, "", "test_modifyCaseSettingsCommandInvoke"]], "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint": [[71, 3, 1, "", "test_reportsEntryPointBasics"]], "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint": [[71, 3, 1, "", "test_executeCommand"], [71, 3, 1, "", "test_runCommandHelp"], [71, 3, 1, "", "test_runEntryPointBasics"]], "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand": [[71, 3, 1, "", "test_runSuiteCommandBasics"]], "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand": [[71, 3, 1, "", "test_visFileEntryPointBasics"]], "armi.cli.tests.test_runSuite": [[72, 2, 1, "", "TestRunSuiteSuite"]], "armi.cli.tests.test_runSuite.TestRunSuiteSuite": [[72, 3, 1, "", "test_listCommand"], [72, 3, 1, "", "test_showVersion"]], "armi.conftest": [[73, 1, 1, "", "bootstrapArmiTestEnv"], [73, 1, 1, "", "pytest_sessionstart"]], "armi.context": [[74, 2, 1, "", "Mode"], [74, 1, 1, "", "activateLocalFastPath"], [74, 1, 1, "", "cleanAllArmiTempDirs"], [74, 1, 1, "", "cleanTempDirs"], [74, 1, 1, "", "disconnectAllHdfDBs"], [74, 1, 1, "", "getFastPath"]], "armi.context.Mode": [[74, 4, 1, "", "BATCH"], [74, 4, 1, "", "GUI"], [74, 4, 1, "", "INTERACTIVE"], [74, 3, 1, "", "setMode"]], "armi.interfaces": [[75, 2, 1, "", "InputWriter"], [75, 2, 1, "", "Interface"], [75, 2, 1, "", "InterfaceInfo"], [75, 2, 1, "", "OutputReader"], [75, 2, 1, "", "STACK_ORDER"], [75, 2, 1, "", "TightCoupler"], [75, 1, 1, "", "getActiveInterfaceInfo"], [75, 1, 1, "", "isInterfaceActive"]], "armi.interfaces.InputWriter": [[75, 3, 1, "", "getInterface"], [75, 3, 1, "", "write"]], "armi.interfaces.Interface": [[75, 2, 1, "", "Distribute"], [75, 3, 1, "", "attachReactor"], [75, 3, 1, "", "bolForce"], [75, 3, 1, "", "detachReactor"], [75, 3, 1, "", "distributable"], [75, 3, 1, "", "duplicate"], [75, 3, 1, "", "enabled"], [75, 4, 1, "", "function"], [75, 3, 1, "", "getDependencies"], [75, 3, 1, "", "getHistoryParams"], [75, 3, 1, "", "getInputFiles"], [75, 3, 1, "", "getInterface"], [75, 3, 1, "", "getTightCouplingValue"], [75, 3, 1, "", "interactBOC"], [75, 3, 1, "", "interactBOL"], [75, 3, 1, "", "interactCoupled"], [75, 3, 1, "", "interactDistributeState"], [75, 3, 1, "", "interactEOC"], [75, 3, 1, "", "interactEOL"], [75, 3, 1, "", "interactError"], [75, 3, 1, "", "interactEveryNode"], [75, 3, 1, "", "interactInit"], [75, 3, 1, "", "isRequestedDetailPoint"], [75, 4, 1, "", "name"], [75, 3, 1, "", "nameContains"], [75, 3, 1, "", "postDistributeState"], [75, 3, 1, "", "preDistributeState"], [75, 3, 1, "", "readOutput"], [75, 3, 1, "", "specifyInputs"], [75, 3, 1, "", "updatePhysicsCouplingControl"], [75, 3, 1, "", "workerOperate"], [75, 3, 1, "", "writeInput"]], "armi.interfaces.Interface.Distribute": [[75, 4, 1, "", "DUPLICATE"], [75, 4, 1, "", "NEW"], [75, 4, 1, "", "SKIP"]], "armi.interfaces.InterfaceInfo": [[75, 4, 1, "", "interfaceCls"], [75, 4, 1, "", "kwargs"], [75, 4, 1, "", "order"]], "armi.interfaces.OutputReader": [[75, 3, 1, "", "apply"], [75, 3, 1, "", "getInterface"], [75, 3, 1, "", "read"]], "armi.interfaces.STACK_ORDER": [[75, 4, 1, "", "AFTER"], [75, 4, 1, "", "BEFORE"], [75, 4, 1, "", "BOOKKEEPING"], [75, 4, 1, "", "CRITICAL_CONTROL"], [75, 4, 1, "", "CROSS_SECTIONS"], [75, 4, 1, "", "DEPLETION"], [75, 4, 1, "", "FLUX"], [75, 4, 1, "", "FUEL_MANAGEMENT"], [75, 4, 1, "", "FUEL_PERFORMANCE"], [75, 4, 1, "", "POSTPROCESSING"], [75, 4, 1, "", "PREPROCESSING"], [75, 4, 1, "", "REACTIVITY_COEFFS"], [75, 4, 1, "", "THERMAL_HYDRAULICS"], [75, 4, 1, "", "TRANSIENT"]], "armi.interfaces.TightCoupler": [[75, 3, 1, "", "getListDimension"], [75, 3, 1, "", "isConverged"], [75, 3, 1, "", "storePreviousIterationValue"]], "armi.materials": [[77, 0, 0, "-", "air"], [78, 0, 0, "-", "alloy200"], [79, 0, 0, "-", "b4c"], [80, 0, 0, "-", "be9"], [81, 0, 0, "-", "caH2"], [82, 0, 0, "-", "californium"], [83, 0, 0, "-", "concrete"], [84, 0, 0, "-", "copper"], [85, 0, 0, "-", "cs"], [86, 0, 0, "-", "custom"], [87, 0, 0, "-", "graphite"], [88, 0, 0, "-", "hafnium"], [89, 0, 0, "-", "hastelloyN"], [90, 0, 0, "-", "ht9"], [76, 1, 1, "", "importMaterialsIntoModuleNamespace"], [91, 0, 0, "-", "inconel"], [92, 0, 0, "-", "inconel600"], [93, 0, 0, "-", "inconel625"], [94, 0, 0, "-", "inconel800"], [95, 0, 0, "-", "inconelPE16"], [96, 0, 0, "-", "inconelX750"], [76, 1, 1, "", "iterAllMaterialClassesInNamespace"], [97, 0, 0, "-", "lead"], [98, 0, 0, "-", "leadBismuth"], [99, 0, 0, "-", "lithium"], [100, 0, 0, "-", "magnesium"], [101, 0, 0, "-", "material"], [102, 0, 0, "-", "mgO"], [103, 0, 0, "-", "mixture"], [104, 0, 0, "-", "molybdenum"], [105, 0, 0, "-", "mox"], [106, 0, 0, "-", "nZ"], [107, 0, 0, "-", "potassium"], [76, 1, 1, "", "resolveMaterialClassByName"], [108, 0, 0, "-", "scandiumOxide"], [76, 1, 1, "", "setMaterialNamespaceOrder"], [109, 0, 0, "-", "siC"], [110, 0, 0, "-", "sodium"], [111, 0, 0, "-", "sodiumChloride"], [112, 0, 0, "-", "sulfur"], [113, 0, 0, "-", "tZM"], [114, 0, 0, "-", "tantalum"], [115, 0, 0, "-", "tests"], [128, 0, 0, "-", "thU"], [129, 0, 0, "-", "thorium"], [130, 0, 0, "-", "thoriumOxide"], [131, 0, 0, "-", "uThZr"], [132, 0, 0, "-", "uZr"], [133, 0, 0, "-", "uranium"], [134, 0, 0, "-", "uraniumOxide"], [135, 0, 0, "-", "void"], [136, 0, 0, "-", "water"], [137, 0, 0, "-", "yttriumOxide"], [138, 0, 0, "-", "zincOxide"], [139, 0, 0, "-", "zr"]], "armi.materials.air": [[77, 2, 1, "", "Air"]], "armi.materials.air.Air": [[77, 3, 1, "", "heatCapacity"], [77, 4, 1, "", "propertyValidTemperature"], [77, 3, 1, "", "pseudoDensity"], [77, 3, 1, "", "setDefaultMassFracs"], [77, 3, 1, "", "specificVolumeLiquid"], [77, 3, 1, "", "thermalConductivity"]], "armi.materials.alloy200": [[78, 2, 1, "", "Alloy200"]], "armi.materials.alloy200.Alloy200": [[78, 3, 1, "", "linearExpansion"], [78, 4, 1, "", "linearExpansionTable"], [78, 4, 1, "", "linearExpansionTableK"], [78, 4, 1, "", "modelConst"], [78, 4, 1, "", "propertyValidTemperature"], [78, 4, 1, "", "referenceMaxPercentImpurites"], [78, 4, 1, "", "references"], [78, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.b4c": [[79, 2, 1, "", "B4C"]], "armi.materials.b4c.B4C": [[79, 3, 1, "", "applyInputParams"], [79, 3, 1, "", "density"], [79, 4, 1, "", "enrichedNuclide"], [79, 3, 1, "", "getMassEnrichmentFromNumEnrich"], [79, 3, 1, "", "linearExpansionPercent"], [79, 4, 1, "", "propertyValidTemperature"], [79, 3, 1, "", "pseudoDensity"], [79, 3, 1, "", "setDefaultMassFracs"], [79, 3, 1, "", "setNewMassFracsFromMassEnrich"], [79, 3, 1, "", "updateTD"]], "armi.materials.be9": [[80, 2, 1, "", "Be9"]], "armi.materials.be9.Be9": [[80, 3, 1, "", "linearExpansionPercent"], [80, 4, 1, "", "propertyValidTemperature"], [80, 3, 1, "", "setDefaultMassFracs"], [80, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.caH2": [[81, 2, 1, "", "CaH2"]], "armi.materials.caH2.CaH2": [[81, 3, 1, "", "density"], [81, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.californium": [[82, 2, 1, "", "Californium"]], "armi.materials.californium.Californium": [[82, 3, 1, "", "density"], [82, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.concrete": [[83, 2, 1, "", "Concrete"]], "armi.materials.concrete.Concrete": [[83, 3, 1, "", "density"], [83, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.copper": [[84, 2, 1, "", "Cu"]], "armi.materials.copper.Cu": [[84, 3, 1, "", "density"], [84, 3, 1, "", "linearExpansionPercent"], [84, 4, 1, "", "propertyValidTemperature"], [84, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.cs": [[85, 2, 1, "", "Cs"]], "armi.materials.cs.Cs": [[85, 3, 1, "", "meltingPoint"], [85, 3, 1, "", "pseudoDensity"], [85, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.custom": [[86, 2, 1, "", "Custom"]], "armi.materials.custom.Custom": [[86, 4, 1, "", "enrichedNuclide"], [86, 3, 1, "", "pseudoDensity"], [86, 3, 1, "", "setMassFrac"]], "armi.materials.graphite": [[87, 2, 1, "", "Graphite"]], "armi.materials.graphite.Graphite": [[87, 3, 1, "", "linearExpansionPercent"], [87, 3, 1, "", "setDefaultMassFracs"], [87, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.hafnium": [[88, 2, 1, "", "Hafnium"]], "armi.materials.hafnium.Hafnium": [[88, 3, 1, "", "density"], [88, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.hastelloyN": [[89, 2, 1, "", "HastelloyN"]], "armi.materials.hastelloyN.HastelloyN": [[89, 3, 1, "", "heatCapacity"], [89, 3, 1, "", "linearExpansionPercent"], [89, 4, 1, "", "materialIntro"], [89, 3, 1, "", "meanCoefficientThermalExpansion"], [89, 4, 1, "", "propertyValidTemperature"], [89, 4, 1, "", "refTempK"], [89, 3, 1, "", "setDefaultMassFracs"], [89, 3, 1, "", "thermalConductivity"]], "armi.materials.ht9": [[90, 2, 1, "", "HT9"]], "armi.materials.ht9.HT9": [[90, 3, 1, "", "linearExpansionPercent"], [90, 4, 1, "", "propertyValidTemperature"], [90, 3, 1, "", "setDefaultMassFracs"], [90, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel": [[91, 2, 1, "", "Inconel"], [91, 2, 1, "", "Inconel617"]], "armi.materials.inconel.Inconel": [[91, 3, 1, "", "density"], [91, 4, 1, "", "references"], [91, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconel600": [[92, 2, 1, "", "Inconel600"]], "armi.materials.inconel600.Inconel600": [[92, 3, 1, "", "heatCapacity"], [92, 3, 1, "", "linearExpansion"], [92, 3, 1, "", "linearExpansionPercent"], [92, 3, 1, "", "polyfitHeatCapacity"], [92, 3, 1, "", "polyfitLinearExpansionPercent"], [92, 3, 1, "", "polyfitThermalConductivity"], [92, 4, 1, "", "propertyValidTemperature"], [92, 4, 1, "", "refTempK"], [92, 4, 1, "", "references"], [92, 3, 1, "", "setDefaultMassFracs"], [92, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel625": [[93, 2, 1, "", "Inconel625"]], "armi.materials.inconel625.Inconel625": [[93, 3, 1, "", "heatCapacity"], [93, 3, 1, "", "linearExpansion"], [93, 3, 1, "", "linearExpansionPercent"], [93, 3, 1, "", "polyfitHeatCapacity"], [93, 3, 1, "", "polyfitLinearExpansionPercent"], [93, 3, 1, "", "polyfitThermalConductivity"], [93, 4, 1, "", "propertyValidTemperature"], [93, 4, 1, "", "refTempK"], [93, 4, 1, "", "references"], [93, 3, 1, "", "setDefaultMassFracs"], [93, 3, 1, "", "thermalConductivity"]], "armi.materials.inconel800": [[94, 2, 1, "", "Inconel800"]], "armi.materials.inconel800.Inconel800": [[94, 3, 1, "", "linearExpansionPercent"], [94, 3, 1, "", "meanCoefficientThermalExpansion"], [94, 4, 1, "", "propertyValidTemperature"], [94, 4, 1, "", "refTempK"], [94, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelPE16": [[95, 2, 1, "", "InconelPE16"]], "armi.materials.inconelPE16.InconelPE16": [[95, 3, 1, "", "density"], [95, 4, 1, "", "references"], [95, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.inconelX750": [[96, 2, 1, "", "InconelX750"]], "armi.materials.inconelX750.InconelX750": [[96, 3, 1, "", "heatCapacity"], [96, 3, 1, "", "linearExpansion"], [96, 3, 1, "", "linearExpansionPercent"], [96, 3, 1, "", "polyfitHeatCapacity"], [96, 3, 1, "", "polyfitLinearExpansionPercent"], [96, 3, 1, "", "polyfitThermalConductivity"], [96, 4, 1, "", "propertyValidTemperature"], [96, 4, 1, "", "refTempK"], [96, 4, 1, "", "references"], [96, 3, 1, "", "setDefaultMassFracs"], [96, 3, 1, "", "thermalConductivity"]], "armi.materials.lead": [[97, 2, 1, "", "Lead"]], "armi.materials.lead.Lead": [[97, 3, 1, "", "heatCapacity"], [97, 4, 1, "", "propertyValidTemperature"], [97, 3, 1, "", "pseudoDensity"], [97, 3, 1, "", "setDefaultMassFracs"], [97, 3, 1, "", "volumetricExpansion"]], "armi.materials.leadBismuth": [[98, 2, 1, "", "LeadBismuth"]], "armi.materials.leadBismuth.LeadBismuth": [[98, 3, 1, "", "dynamicVisc"], [98, 3, 1, "", "heatCapacity"], [98, 4, 1, "", "propertyValidTemperature"], [98, 3, 1, "", "pseudoDensity"], [98, 3, 1, "", "setDefaultMassFracs"], [98, 3, 1, "", "thermalConductivity"], [98, 3, 1, "", "volumetricExpansion"]], "armi.materials.lithium": [[99, 2, 1, "", "Lithium"]], "armi.materials.lithium.Lithium": [[99, 3, 1, "", "applyInputParams"], [99, 3, 1, "", "boilingPoint"], [99, 4, 1, "", "enrichedNuclide"], [99, 3, 1, "", "heatCapacity"], [99, 3, 1, "", "meltingPoint"], [99, 3, 1, "", "pseudoDensity"], [99, 4, 1, "", "references"], [99, 3, 1, "", "setDefaultMassFracs"], [99, 3, 1, "", "thermalConductivity"]], "armi.materials.magnesium": [[100, 2, 1, "", "Magnesium"]], "armi.materials.magnesium.Magnesium": [[100, 4, 1, "", "propertyValidTemperature"], [100, 3, 1, "", "pseudoDensity"], [100, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.material": [[101, 2, 1, "", "Fluid"], [101, 2, 1, "", "FuelMaterial"], [101, 2, 1, "", "Material"], [101, 2, 1, "", "SimpleSolid"]], "armi.materials.material.Fluid": [[101, 3, 1, "", "density"], [101, 3, 1, "", "getTempChangeForDensityChange"], [101, 3, 1, "", "getThermalExpansionDensityReduction"], [101, 3, 1, "", "linearExpansion"]], "armi.materials.material.FuelMaterial": [[101, 3, 1, "", "applyInputParams"], [101, 4, 1, "", "class1_custom_isotopics"], [101, 4, 1, "", "class1_wt_frac"], [101, 4, 1, "", "class2_custom_isotopics"], [101, 3, 1, "", "duplicate"], [101, 4, 1, "", "puFrac"], [101, 4, 1, "", "uFrac"], [101, 4, 1, "", "zrFrac"]], "armi.materials.material.Material": [[101, 4, 1, "", "DATA_SOURCE"], [101, 3, 1, "", "adjustMassEnrichment"], [101, 3, 1, "", "adjustMassFrac"], [101, 3, 1, "", "adjustTD"], [101, 3, 1, "", "applyInputParams"], [101, 3, 1, "", "backUp"], [101, 3, 1, "", "checkPropertyTempRange"], [101, 3, 1, "", "checkTempRange"], [101, 3, 1, "", "clearCache"], [101, 3, 1, "", "clearMassFrac"], [101, 3, 1, "", "density"], [101, 3, 1, "", "densityKgM3"], [101, 3, 1, "", "densityTimesHeatCapacity"], [101, 3, 1, "", "duplicate"], [101, 4, 1, "", "enrichedNuclide"], [101, 5, 1, "", "gasPorosity"], [101, 3, 1, "", "getChildren"], [101, 3, 1, "", "getChildrenWithFlags"], [101, 3, 1, "", "getCorrosionRate"], [101, 3, 1, "", "getMassFrac"], [101, 3, 1, "", "getMassFracCopy"], [101, 3, 1, "", "getName"], [101, 3, 1, "", "getNuclides"], [101, 3, 1, "", "getProperty"], [101, 3, 1, "", "getTD"], [101, 3, 1, "", "getTempChangeForDensityChange"], [101, 3, 1, "", "getTemperatureAtDensity"], [101, 3, 1, "", "getThermalExpansionDensityReduction"], [101, 3, 1, "", "heatCapacity"], [101, 3, 1, "", "linearExpansion"], [101, 3, 1, "", "linearExpansionFactor"], [101, 3, 1, "", "linearExpansionPercent"], [101, 5, 1, "", "liquidPorosity"], [101, 4, 1, "", "modelConst"], [101, 5, 1, "", "name"], [101, 4, 1, "", "propertyValidTemperature"], [101, 3, 1, "", "pseudoDensity"], [101, 3, 1, "", "pseudoDensityKgM3"], [101, 4, 1, "", "references"], [101, 3, 1, "", "removeNucMassFrac"], [101, 3, 1, "", "restoreBackup"], [101, 3, 1, "", "setDefaultMassFracs"], [101, 3, 1, "", "setMassFrac"], [101, 3, 1, "", "thermalConductivity"], [101, 4, 1, "", "thermalScatteringLaws"], [101, 3, 1, "", "volumetricExpansion"], [101, 3, 1, "", "yieldStrength"]], "armi.materials.material.SimpleSolid": [[101, 3, 1, "", "density"], [101, 3, 1, "", "linearExpansionPercent"], [101, 3, 1, "", "pseudoDensity"], [101, 4, 1, "", "refTempK"]], "armi.materials.mgO": [[102, 2, 1, "", "MgO"]], "armi.materials.mgO.MgO": [[102, 3, 1, "", "linearExpansionPercent"], [102, 4, 1, "", "propertyValidTemperature"], [102, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.molybdenum": [[104, 2, 1, "", "Molybdenum"]], "armi.materials.molybdenum.Molybdenum": [[104, 3, 1, "", "density"], [104, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.mox": [[105, 2, 1, "", "MOX"]], "armi.materials.mox.MOX": [[105, 3, 1, "", "applyInputParams"], [105, 4, 1, "", "enrichedNuclide"], [105, 3, 1, "", "getMassFracPuO2"], [105, 3, 1, "", "getMolFracPuO2"], [105, 3, 1, "", "meltingPoint"], [105, 3, 1, "", "setDefaultMassFracs"], [105, 3, 1, "", "setMassFracPuO2"]], "armi.materials.nZ": [[106, 2, 1, "", "NZ"]], "armi.materials.nZ.NZ": [[106, 3, 1, "", "density"], [106, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.potassium": [[107, 2, 1, "", "Potassium"]], "armi.materials.potassium.Potassium": [[107, 4, 1, "", "propertyValidTemperature"], [107, 3, 1, "", "pseudoDensity"]], "armi.materials.scandiumOxide": [[108, 2, 1, "", "Sc2O3"]], "armi.materials.scandiumOxide.Sc2O3": [[108, 3, 1, "", "linearExpansionPercent"], [108, 4, 1, "", "propertyValidTemperature"], [108, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.siC": [[109, 2, 1, "", "SiC"]], "armi.materials.siC.SiC": [[109, 3, 1, "", "cumulativeLinearExpansion"], [109, 3, 1, "", "heatCapacity"], [109, 3, 1, "", "meltingPoint"], [109, 4, 1, "", "propertyEquation"], [109, 4, 1, "", "propertyNotes"], [109, 4, 1, "", "propertyUnits"], [109, 4, 1, "", "propertyValidTemperature"], [109, 3, 1, "", "pseudoDensity"], [109, 4, 1, "", "refTempK"], [109, 4, 1, "", "references"], [109, 3, 1, "", "setDefaultMassFracs"], [109, 3, 1, "", "thermalConductivity"], [109, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.sodium": [[110, 2, 1, "", "Sodium"]], "armi.materials.sodium.Sodium": [[110, 3, 1, "", "enthalpy"], [110, 4, 1, "", "propertyValidTemperature"], [110, 3, 1, "", "pseudoDensity"], [110, 3, 1, "", "setDefaultMassFracs"], [110, 3, 1, "", "specificVolumeLiquid"], [110, 3, 1, "", "thermalConductivity"]], "armi.materials.sodiumChloride": [[111, 2, 1, "", "NaCl"]], "armi.materials.sodiumChloride.NaCl": [[111, 3, 1, "", "density"], [111, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.sulfur": [[112, 2, 1, "", "Sulfur"]], "armi.materials.sulfur.Sulfur": [[112, 3, 1, "", "applyInputParams"], [112, 4, 1, "", "propertyValidTemperature"], [112, 3, 1, "", "pseudoDensity"], [112, 3, 1, "", "setDefaultMassFracs"], [112, 3, 1, "", "updateTD"], [112, 3, 1, "", "volumetricExpansion"]], "armi.materials.tZM": [[113, 2, 1, "", "TZM"]], "armi.materials.tZM.TZM": [[113, 3, 1, "", "linearExpansionPercent"], [113, 4, 1, "", "percentThermalExpansion"], [113, 4, 1, "", "propertyValidTemperature"], [113, 4, 1, "", "references"], [113, 3, 1, "", "setDefaultMassFracs"], [113, 4, 1, "", "temperatureC"]], "armi.materials.tantalum": [[114, 2, 1, "", "Tantalum"]], "armi.materials.tantalum.Tantalum": [[114, 3, 1, "", "density"], [114, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.tests": [[116, 0, 0, "-", "test__init__"], [117, 0, 0, "-", "test_air"], [118, 0, 0, "-", "test_b4c"], [119, 0, 0, "-", "test_be9"], [120, 0, 0, "-", "test_graphite"], [121, 0, 0, "-", "test_lithium"], [122, 0, 0, "-", "test_materials"], [123, 0, 0, "-", "test_sic"], [124, 0, 0, "-", "test_sulfur"], [125, 0, 0, "-", "test_thoriumOxide"], [126, 0, 0, "-", "test_uZr"], [127, 0, 0, "-", "test_water"]], "armi.materials.tests.test__init__": [[116, 2, 1, "", "Materials__init__Tests"], [116, 1, 1, "", "betterSubClassCheck"]], "armi.materials.tests.test__init__.Materials__init__Tests": [[116, 3, 1, "", "test_canAccessClassesFromPackage"], [116, 3, 1, "", "test_packageClassesEqualModuleClasses"]], "armi.materials.tests.test_air": [[117, 2, 1, "", "Test_Air"]], "armi.materials.tests.test_air.Test_Air": [[117, 3, 1, "", "test_heatCapacity"], [117, 3, 1, "", "test_massFrac"], [117, 3, 1, "", "test_pseudoDensity"], [117, 3, 1, "", "test_thermalConductivity"], [117, 3, 1, "", "test_validRanges"]], "armi.materials.tests.test_b4c": [[118, 2, 1, "", "B4C_TestCase"]], "armi.materials.tests.test_b4c.B4C_TestCase": [[118, 4, 1, "", "MAT_CLASS"], [118, 3, 1, "", "test_propertyValidTemperature"], [118, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_be9": [[119, 2, 1, "", "Test_Be9"]], "armi.materials.tests.test_be9.Test_Be9": [[119, 4, 1, "", "MAT_CLASS"], [119, 3, 1, "", "test_propertyValidTemperature"], [119, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_graphite": [[120, 2, 1, "", "Graphite_TestCase"]], "armi.materials.tests.test_graphite.Graphite_TestCase": [[120, 4, 1, "", "MAT_CLASS"], [120, 3, 1, "", "test_density"], [120, 3, 1, "", "test_linearExpansionPercent"], [120, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_lithium": [[121, 2, 1, "", "Lithium_TestCase"]], "armi.materials.tests.test_lithium.Lithium_TestCase": [[121, 4, 1, "", "MAT_CLASS"], [121, 4, 1, "", "defaultMassFrac"], [121, 3, 1, "", "test_Lithium_material_modifications"], [121, 3, 1, "", "test_boilingPoint"], [121, 3, 1, "", "test_heatCapacity"], [121, 3, 1, "", "test_meltingPoint"], [121, 3, 1, "", "test_propertyValidTemperature"], [121, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials": [[122, 2, 1, "", "Alloy200_TestCase"], [122, 2, 1, "", "CaH2_TestCase"], [122, 2, 1, "", "Californium_TestCase"], [122, 2, 1, "", "Cesium_TestCase"], [122, 2, 1, "", "Copper_TestCase"], [122, 2, 1, "", "FuelMaterial_TestCase"], [122, 2, 1, "", "Hafnium_TestCase"], [122, 2, 1, "", "HastelloyN_TestCase"], [122, 2, 1, "", "Inconel600_TestCase"], [122, 2, 1, "", "Inconel625_TestCase"], [122, 2, 1, "", "InconelX750_TestCase"], [122, 2, 1, "", "Inconel_TestCase"], [122, 2, 1, "", "LeadBismuth_TestCase"], [122, 2, 1, "", "Lead_TestCase"], [122, 2, 1, "", "MOX_TestCase"], [122, 2, 1, "", "MagnesiumOxide_TestCase"], [122, 2, 1, "", "Magnesium_TestCase"], [122, 2, 1, "", "MaterialConstructionTests"], [122, 2, 1, "", "MaterialFindingTests"], [122, 2, 1, "", "Mixture_TestCase"], [122, 2, 1, "", "Molybdenum_TestCase"], [122, 2, 1, "", "NaCl_TestCase"], [122, 2, 1, "", "NiobiumZirconium_TestCase"], [122, 2, 1, "", "Potassium_TestCase"], [122, 2, 1, "", "ScandiumOxide_TestCase"], [122, 2, 1, "", "Sodium_TestCase"], [122, 2, 1, "", "Sulfur_TestCase"], [122, 2, 1, "", "TZM_TestCase"], [122, 2, 1, "", "Tantalum_TestCase"], [122, 2, 1, "", "ThoriumOxide_TestCase"], [122, 2, 1, "", "ThoriumUraniumMetal_TestCase"], [122, 2, 1, "", "Thorium_TestCase"], [122, 2, 1, "", "UraniumOxide_TestCase"], [122, 2, 1, "", "Uranium_TestCase"], [122, 2, 1, "", "Void_TestCase"], [122, 2, 1, "", "YttriumOxide_TestCase"], [122, 2, 1, "", "ZincOxide_TestCase"], [122, 2, 1, "", "Zr_TestCase"]], "armi.materials.tests.test_materials.Alloy200_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_linearExpansionHotter"], [122, 3, 1, "", "test_nickleContent"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.CaH2_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Californium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_getCorrosionRate"], [122, 3, 1, "", "test_porosities"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Cesium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Copper_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_densityNeverChanges"], [122, 3, 1, "", "test_getChildren"], [122, 3, 1, "", "test_getChildrenWithFlags"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.FuelMaterial_TestCase": [[122, 4, 1, "", "baseInput"], [122, 3, 1, "", "loadAssembly"], [122, 3, 1, "", "test_class1Class2_class1_wt_frac"], [122, 3, 1, "", "test_class1Class2_classX_custom_isotopics"]], "armi.materials.tests.test_materials.Hafnium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.HastelloyN_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_meanCoefficientThermalExpansion"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Inconel600_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_00_setDefaultMassFracs"], [122, 3, 1, "", "test_01_linearExpansionPercent"], [122, 3, 1, "", "test_02_linearExpansion"], [122, 3, 1, "", "test_03_pseudoDensity"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_polyfitHeatCapacity"], [122, 3, 1, "", "test_polyfitLinearExpansionPercent"], [122, 3, 1, "", "test_polyfitThermalConductivity"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel625_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_00_setDefaultMassFracs"], [122, 3, 1, "", "test_01_linearExpansionPercent"], [122, 3, 1, "", "test_02_linearExpansion"], [122, 3, 1, "", "test_03_pseudoDensity"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_polyfitHeatCapacity"], [122, 3, 1, "", "test_polyfitLinearExpansionPercent"], [122, 3, 1, "", "test_polyfitThermalConductivity"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.InconelX750_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_00_setDefaultMassFracs"], [122, 3, 1, "", "test_01_linearExpansionPercent"], [122, 3, 1, "", "test_02_linearExpansion"], [122, 3, 1, "", "test_03_pseudoDensity"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_polyfitHeatCapacity"], [122, 3, 1, "", "test_polyfitLinearExpansionPercent"], [122, 3, 1, "", "test_polyfitThermalConductivity"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Inconel_TestCase": [[122, 3, 1, "", "test_Iconel800_linearExpansion"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.LeadBismuth_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_dynamicVisc"], [122, 3, 1, "", "test_getTempChangeForDensityChange"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_setDefaultMassFracs"], [122, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.Lead_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_setDefaultMassFracs"], [122, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.MOX_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_applyInputParams"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_getMassFracPuO2"], [122, 3, 1, "", "test_getMeltingPoint"], [122, 3, 1, "", "test_getMolFracPuO2"]], "armi.materials.tests.test_materials.MagnesiumOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Magnesium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.MaterialConstructionTests": [[122, 3, 1, "", "test_material_initialization"]], "armi.materials.tests.test_materials.MaterialFindingTests": [[122, 3, 1, "", "test_findMaterial"]], "armi.materials.tests.test_materials.Mixture_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_setDefaultMassFracs"]], "armi.materials.tests.test_materials.Molybdenum_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.NaCl_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.NiobiumZirconium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Potassium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ScandiumOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.Sodium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_enthalpy"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_specificVolumeLiquid"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Sulfur_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_setDefaultMassFracs"], [122, 3, 1, "", "test_volumetricExpansion"]], "armi.materials.tests.test_materials.TZM_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_00_applyInputParams"], [122, 3, 1, "", "test_01_pseudoDensity"], [122, 3, 1, "", "test_02_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Tantalum_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ThoriumOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_meltingPoint"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_meltingPoint"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Thorium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_meltingPoint"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_setDefaultMassFracs"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.UraniumOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_adjustMassEnrichment"], [122, 3, 1, "", "test_applyInputParams"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_densityTimesHeatCapactiy"], [122, 3, 1, "", "test_duplicate"], [122, 3, 1, "", "test_getDensityExpansion3D"], [122, 3, 1, "", "test_getTempChangeForDensityChange"], [122, 3, 1, "", "test_getTemperatureAtDensity"], [122, 3, 1, "", "test_heatCapacity"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_meltingPoint"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_removeNucMassFrac"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Uranium_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_applyInputParams"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_materials.Void_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.YttriumOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_materials.ZincOxide_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_density"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_materials.Zr_TestCase": [[122, 4, 1, "", "MAT_CLASS"], [122, 3, 1, "", "test_linearExpansion"], [122, 3, 1, "", "test_linearExpansionPercent"], [122, 3, 1, "", "test_propertyValidTemperature"], [122, 3, 1, "", "test_pseudoDensity"], [122, 3, 1, "", "test_thermalConductivity"]], "armi.materials.tests.test_sic": [[123, 2, 1, "", "Test_SiC"]], "armi.materials.tests.test_sic.Test_SiC": [[123, 4, 1, "", "MAT_CLASS"], [123, 3, 1, "", "test_heatCapacity"], [123, 3, 1, "", "test_meltingPoint"], [123, 3, 1, "", "test_propertyValidTemperature"], [123, 3, 1, "", "test_pseudoDensity"]], "armi.materials.tests.test_sulfur": [[124, 2, 1, "", "Sulfur_TestCase"]], "armi.materials.tests.test_sulfur.Sulfur_TestCase": [[124, 4, 1, "", "MAT_CLASS"], [124, 3, 1, "", "test_propertyValidTemperature"], [124, 3, 1, "", "test_sulfur_density_frac"]], "armi.materials.tests.test_thoriumOxide": [[125, 2, 1, "", "ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase": [[125, 4, 1, "", "MAT_CLASS"], [125, 3, 1, "", "test_linearExpansionPercent"], [125, 3, 1, "", "test_propertyValidTemperature"], [125, 3, 1, "", "test_theoretical_pseudoDensity"]], "armi.materials.tests.test_uZr": [[126, 2, 1, "", "UZR_TestCase"]], "armi.materials.tests.test_uZr.UZR_TestCase": [[126, 4, 1, "", "MAT_CLASS"], [126, 3, 1, "", "test_density"], [126, 3, 1, "", "test_propertyValidTemperature"]], "armi.materials.tests.test_water": [[127, 2, 1, "", "Test_Water"]], "armi.materials.tests.test_water.Test_Water": [[127, 3, 1, "", "test_massFrac"], [127, 3, 1, "", "test_propertyValidTemperature"], [127, 3, 1, "", "test_validateNames"], [127, 3, 1, "", "test_water_at_boiling"], [127, 3, 1, "", "test_water_at_critcalPoint"], [127, 3, 1, "", "test_water_at_freezing"]], "armi.materials.thU": [[128, 2, 1, "", "ThU"]], "armi.materials.thU.ThU": [[128, 3, 1, "", "applyInputParams"], [128, 4, 1, "", "enrichedNuclide"], [128, 3, 1, "", "getEnrichment"], [128, 3, 1, "", "linearExpansion"], [128, 3, 1, "", "meltingPoint"], [128, 4, 1, "", "propertyValidTemperature"], [128, 3, 1, "", "setDefaultMassFracs"], [128, 3, 1, "", "thermalConductivity"]], "armi.materials.thorium": [[129, 2, 1, "", "Thorium"]], "armi.materials.thorium.Thorium": [[129, 3, 1, "", "linearExpansion"], [129, 3, 1, "", "meltingPoint"], [129, 4, 1, "", "propertyValidTemperature"], [129, 3, 1, "", "setDefaultMassFracs"], [129, 3, 1, "", "thermalConductivity"]], "armi.materials.thoriumOxide": [[130, 2, 1, "", "ThO2"], [130, 2, 1, "", "ThoriumOxide"]], "armi.materials.thoriumOxide.ThoriumOxide": [[130, 3, 1, "", "applyInputParams"], [130, 3, 1, "", "density"], [130, 3, 1, "", "linearExpansion"], [130, 3, 1, "", "linearExpansionPercent"], [130, 3, 1, "", "meltingPoint"], [130, 4, 1, "", "propertyValidTemperature"], [130, 3, 1, "", "setDefaultMassFracs"], [130, 3, 1, "", "thermalConductivity"]], "armi.materials.uThZr": [[131, 2, 1, "", "UThZr"]], "armi.materials.uThZr.UThZr": [[131, 3, 1, "", "applyInputParams"], [131, 4, 1, "", "enrichedNuclide"], [131, 3, 1, "", "pseudoDensity"], [131, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.uZr": [[132, 2, 1, "", "UZr"]], "armi.materials.uZr.UZr": [[132, 3, 1, "", "applyInputParams"], [132, 4, 1, "", "enrichedNuclide"], [132, 3, 1, "", "linearExpansionPercent"], [132, 3, 1, "", "setDefaultMassFracs"], [132, 4, 1, "", "uFracDefault"], [132, 4, 1, "", "zrFracDefault"]], "armi.materials.uranium": [[133, 2, 1, "", "Uranium"]], "armi.materials.uranium.Uranium": [[133, 3, 1, "", "applyInputParams"], [133, 3, 1, "", "density"], [133, 4, 1, "", "enrichedNuclide"], [133, 3, 1, "", "heatCapacity"], [133, 3, 1, "", "linearExpansion"], [133, 3, 1, "", "linearExpansionPercent"], [133, 4, 1, "", "materialIntro"], [133, 3, 1, "", "meltingPoint"], [133, 4, 1, "", "propertyEquation"], [133, 4, 1, "", "propertyNotes"], [133, 4, 1, "", "propertyRawData"], [133, 4, 1, "", "propertyUnits"], [133, 4, 1, "", "propertyValidTemperature"], [133, 3, 1, "", "pseudoDensity"], [133, 4, 1, "", "refDens"], [133, 4, 1, "", "references"], [133, 3, 1, "", "setDefaultMassFracs"], [133, 3, 1, "", "thermalConductivity"]], "armi.materials.uraniumOxide": [[134, 2, 1, "", "HeatCapacityConstants"], [134, 2, 1, "", "UO2"], [134, 2, 1, "", "UraniumOxide"]], "armi.materials.uraniumOxide.HeatCapacityConstants": [[134, 4, 1, "", "Ea"], [134, 4, 1, "", "c1"], [134, 4, 1, "", "c2"], [134, 4, 1, "", "c3"], [134, 4, 1, "", "theta"]], "armi.materials.uraniumOxide.UraniumOxide": [[134, 4, 1, "", "REFERENCE_TEMPERATURE"], [134, 3, 1, "", "applyInputParams"], [134, 3, 1, "", "density"], [134, 4, 1, "", "enrichedNuclide"], [134, 3, 1, "", "heatCapacity"], [134, 4, 1, "", "heatCapacityConstants"], [134, 3, 1, "", "linearExpansion"], [134, 3, 1, "", "linearExpansionPercent"], [134, 3, 1, "", "meltingPoint"], [134, 4, 1, "", "propertyUnits"], [134, 4, 1, "", "propertyValidTemperature"], [134, 4, 1, "", "references"], [134, 3, 1, "", "setDefaultMassFracs"], [134, 3, 1, "", "thermalConductivity"], [134, 4, 1, "", "thermalConductivityTable"], [134, 4, 1, "", "thermalConductivityTableK"], [134, 4, 1, "", "thermalScatteringLaws"]], "armi.materials.void": [[135, 2, 1, "", "Void"]], "armi.materials.void.Void": [[135, 3, 1, "", "density"], [135, 3, 1, "", "pseudoDensity"]], "armi.materials.water": [[136, 2, 1, "", "SaturatedSteam"], [136, 2, 1, "", "SaturatedWater"], [136, 2, 1, "", "Water"]], "armi.materials.water.SaturatedSteam": [[136, 3, 1, "", "pseudoDensity"]], "armi.materials.water.SaturatedWater": [[136, 3, 1, "", "pseudoDensity"]], "armi.materials.water.Water": [[136, 4, 1, "", "ALPHA_0"], [136, 4, 1, "", "DENSITY_CRITICAL_GPERCUBICCENTIMETER"], [136, 4, 1, "", "DENSITY_CRITICAL_KGPERCUBICMETER"], [136, 4, 1, "", "PHI_0"], [136, 4, 1, "", "TEMPERATURE_CRITICAL_K"], [136, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_MPA"], [136, 4, 1, "", "VAPOR_PRESSURE_CRITICAL_PA"], [136, 3, 1, "", "auxiliaryQuantitySpecificEnthalpy"], [136, 3, 1, "", "auxiliaryQuantitySpecificEntropy"], [136, 4, 1, "", "d"], [136, 3, 1, "", "enthalpy"], [136, 3, 1, "", "entropy"], [136, 3, 1, "", "pseudoDensity"], [136, 4, 1, "", "references"], [136, 3, 1, "", "setDefaultMassFracs"], [136, 3, 1, "", "tau"], [136, 4, 1, "", "thermalScatteringLaws"], [136, 3, 1, "", "theta"], [136, 3, 1, "", "vaporPressure"], [136, 3, 1, "", "vaporPressurePrime"]], "armi.materials.yttriumOxide": [[137, 2, 1, "", "Y2O3"]], "armi.materials.yttriumOxide.Y2O3": [[137, 3, 1, "", "linearExpansionPercent"], [137, 4, 1, "", "propertyValidTemperature"], [137, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zincOxide": [[138, 2, 1, "", "ZnO"]], "armi.materials.zincOxide.ZnO": [[138, 3, 1, "", "density"], [138, 3, 1, "", "linearExpansionPercent"], [138, 4, 1, "", "propertyValidTemperature"], [138, 3, 1, "", "setDefaultMassFracs"]], "armi.materials.zr": [[139, 2, 1, "", "Zr"]], "armi.materials.zr.Zr": [[139, 3, 1, "", "linearExpansion"], [139, 3, 1, "", "linearExpansionPercent"], [139, 4, 1, "", "linearExpansionTable"], [139, 4, 1, "", "linearExpansionTableK"], [139, 4, 1, "", "propertyValidTemperature"], [139, 4, 1, "", "refTempK"], [139, 4, 1, "", "references"], [139, 3, 1, "", "setDefaultMassFracs"], [139, 3, 1, "", "thermalConductivity"]], "armi.mpiActions": [[141, 2, 1, "", "DistributeStateAction"], [141, 2, 1, "", "DistributionAction"], [141, 2, 1, "", "MpiAction"], [141, 7, 1, "", "MpiActionError"], [141, 1, 1, "", "runActions"], [141, 1, 1, "", "runActionsInSerial"]], "armi.mpiActions.DistributeStateAction": [[141, 3, 1, "", "invokeHook"]], "armi.mpiActions.DistributionAction": [[141, 3, 1, "", "invokeHook"]], "armi.mpiActions.MpiAction": [[141, 3, 1, "", "broadcast"], [141, 3, 1, "", "gather"], [141, 3, 1, "", "invoke"], [141, 3, 1, "", "invokeAsMaster"], [141, 3, 1, "", "invokeHook"], [141, 3, 1, "", "mpiFlatten"], [141, 3, 1, "", "mpiIter"], [141, 5, 1, "", "parallel"]], "armi.nucDirectory": [[143, 0, 0, "-", "elements"], [144, 0, 0, "-", "nucDir"], [145, 0, 0, "-", "nuclideBases"], [146, 0, 0, "-", "tests"], [152, 0, 0, "-", "thermalScattering"], [153, 0, 0, "-", "transmutations"]], "armi.nucDirectory.elements": [[143, 2, 1, "", "ChemicalGroup"], [143, 2, 1, "", "ChemicalPhase"], [143, 2, 1, "", "Element"], [143, 1, 1, "", "addGlobalElement"], [143, 1, 1, "", "destroyGlobalElements"], [143, 1, 1, "", "factory"], [143, 1, 1, "", "getElementZ"], [143, 1, 1, "", "getElementsByChemicalGroup"], [143, 1, 1, "", "getElementsByChemicalPhase"], [143, 1, 1, "", "getName"], [143, 1, 1, "", "getSymbol"]], "armi.nucDirectory.elements.ChemicalGroup": [[143, 4, 1, "", "ACTINIDE"], [143, 4, 1, "", "ALKALINE_EARTH_METAL"], [143, 4, 1, "", "ALKALI_METAL"], [143, 4, 1, "", "HALOGEN"], [143, 4, 1, "", "LANTHANIDE"], [143, 4, 1, "", "METALLOID"], [143, 4, 1, "", "NOBLE_GAS"], [143, 4, 1, "", "NONMETAL"], [143, 4, 1, "", "POST_TRANSITION_METAL"], [143, 4, 1, "", "TRANSITION_METAL"], [143, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.ChemicalPhase": [[143, 4, 1, "", "GAS"], [143, 4, 1, "", "LIQUID"], [143, 4, 1, "", "SOLID"], [143, 4, 1, "", "UNKNOWN"]], "armi.nucDirectory.elements.Element": [[143, 3, 1, "", "append"], [143, 3, 1, "", "getNaturalIsotopics"], [143, 3, 1, "", "isHeavyMetal"], [143, 3, 1, "", "isNaturallyOccurring"]], "armi.nucDirectory.nucDir": [[144, 1, 1, "", "getAtomicWeight"], [144, 1, 1, "", "getElementName"], [144, 1, 1, "", "getElementSymbol"], [144, 1, 1, "", "getMc2Label"], [144, 1, 1, "", "getNaturalIsotopics"], [144, 1, 1, "", "getNaturalMassIsotopics"], [144, 1, 1, "", "getNuclide"], [144, 1, 1, "", "getNuclideFromName"], [144, 1, 1, "", "getNuclideNames"], [144, 1, 1, "", "getNuclides"], [144, 1, 1, "", "getThresholdDisplacementEnergy"], [144, 1, 1, "", "isFissile"], [144, 1, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases": [[145, 2, 1, "", "DummyNuclideBase"], [145, 2, 1, "", "IMcnpNuclide"], [145, 2, 1, "", "INuclide"], [145, 2, 1, "", "LumpNuclideBase"], [145, 2, 1, "", "NaturalNuclideBase"], [145, 2, 1, "", "NuclideBase"], [145, 2, 1, "", "NuclideInterface"], [145, 2, 1, "", "NuclideWrapper"], [145, 1, 1, "", "addGlobalNuclide"], [145, 1, 1, "", "changeLabel"], [145, 1, 1, "", "destroyGlobalNuclides"], [145, 1, 1, "", "factory"], [145, 1, 1, "", "fromName"], [145, 1, 1, "", "getDepletableNuclides"], [145, 1, 1, "", "getIsotopics"], [145, 1, 1, "", "imposeBurnChain"], [145, 1, 1, "", "initReachableActiveNuclidesThroughBurnChain"], [145, 1, 1, "", "isMonoIsotopicElement"], [145, 1, 1, "", "isotopes"], [145, 1, 1, "", "single"], [145, 1, 1, "", "where"]], "armi.nucDirectory.nuclideBases.DummyNuclideBase": [[145, 3, 1, "", "getMcc2Id"], [145, 3, 1, "", "getMcc3Id"], [145, 3, 1, "", "getNaturalIsotopics"], [145, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.IMcnpNuclide": [[145, 3, 1, "", "getAAAZZZSId"], [145, 3, 1, "", "getMcnpId"]], "armi.nucDirectory.nuclideBases.INuclide": [[145, 4, 1, "", "DECAY"], [145, 4, 1, "", "SPONTANEOUS_FISSION"], [145, 4, 1, "", "TRANSMUTATION"], [145, 4, 1, "", "fissile"], [145, 3, 1, "", "getDatabaseName"], [145, 3, 1, "", "getDecay"], [145, 3, 1, "", "getNaturalIsotopics"], [145, 3, 1, "", "isFissile"], [145, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.LumpNuclideBase": [[145, 3, 1, "", "getMcc2Id"], [145, 3, 1, "", "getMcc3Id"], [145, 3, 1, "", "getNaturalIsotopics"], [145, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NaturalNuclideBase": [[145, 3, 1, "", "getAAAZZZSId"], [145, 3, 1, "", "getEndfMatNum"], [145, 3, 1, "", "getMcc2Id"], [145, 3, 1, "", "getMcc3Id"], [145, 3, 1, "", "getMcnpId"], [145, 3, 1, "", "getNaturalIsotopics"], [145, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideBase": [[145, 3, 1, "", "getAAAZZZSId"], [145, 3, 1, "", "getEndfMatNum"], [145, 3, 1, "", "getMcc2Id"], [145, 3, 1, "", "getMcc3Id"], [145, 3, 1, "", "getMcnpId"], [145, 3, 1, "", "getNaturalIsotopics"], [145, 3, 1, "", "getSerpentId"]], "armi.nucDirectory.nuclideBases.NuclideInterface": [[145, 3, 1, "", "getDatabaseName"], [145, 3, 1, "", "getDecay"], [145, 3, 1, "", "getMcc2Id"], [145, 3, 1, "", "getMcc3Id"], [145, 3, 1, "", "getNaturalIsotopics"], [145, 3, 1, "", "getSerpentId"], [145, 3, 1, "", "isFissile"], [145, 3, 1, "", "isHeavyMetal"]], "armi.nucDirectory.nuclideBases.NuclideWrapper": [[145, 3, 1, "", "getDatabaseName"], [145, 3, 1, "", "getDecay"], [145, 3, 1, "", "getMcc2Id"], [145, 3, 1, "", "getMcc3Id"], [145, 3, 1, "", "getNaturalIsotopics"], [145, 3, 1, "", "isFissile"], [145, 3, 1, "", "isHeavyMetal"], [145, 5, 1, "", "name"], [145, 5, 1, "", "weight"]], "armi.nucDirectory.tests": [[147, 0, 0, "-", "test_elements"], [148, 0, 0, "-", "test_nucDirectory"], [149, 0, 0, "-", "test_nuclideBases"], [150, 0, 0, "-", "test_thermalScattering"], [151, 0, 0, "-", "test_transmutations"]], "armi.nucDirectory.tests.test_elements": [[147, 2, 1, "", "TestElement"]], "armi.nucDirectory.tests.test_elements.TestElement": [[147, 3, 1, "", "test_abundancesAddToOne"], [147, 3, 1, "", "test_element_addExistingElementFails"], [147, 3, 1, "", "test_element_addedElementAppearsInElementList"], [147, 3, 1, "", "test_element_elementByNameReturnsElement"], [147, 3, 1, "", "test_element_elementBySymbolReturnsElement"], [147, 3, 1, "", "test_element_elementByZReturnsElement"], [147, 3, 1, "", "test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"], [147, 3, 1, "", "test_element_isNaturallyOccurring"], [147, 3, 1, "", "test_elements_elementBulkProperties"], [147, 3, 1, "", "test_isHeavyMetal"]], "armi.nucDirectory.tests.test_nucDirectory": [[148, 2, 1, "", "TestNucDirectory"]], "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory": [[148, 3, 1, "", "test_getDisplacementEnergy"], [148, 3, 1, "", "test_nucDir_getNameForOldDashedNames"], [148, 3, 1, "", "test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"], [148, 3, 1, "", "test_nucDir_getNuclidesFromForBadName"]], "armi.nucDirectory.tests.test_nuclideBases": [[149, 2, 1, "", "TestNuclide"], [149, 2, 1, "", "test_getAAAZZZSId"]], "armi.nucDirectory.tests.test_nuclideBases.TestNuclide": [[149, 3, 1, "", "test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"], [149, 3, 1, "", "test_NaturalNuclideBase_getNatrualIsotpics"], [149, 3, 1, "", "test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"], [149, 3, 1, "", "test_NonMc2Nuclide"], [149, 3, 1, "", "test_curieDefinitionWithRa226"], [149, 3, 1, "", "test_getDecay"], [149, 3, 1, "", "test_getEndfMatNum"], [149, 3, 1, "", "test_kryptonDecayConstants"], [149, 3, 1, "", "test_loadMcc2Data"], [149, 3, 1, "", "test_loadMcc3Data"], [149, 3, 1, "", "test_nucBase_AllAbundancesAddToOne"], [149, 3, 1, "", "test_nucBases_AllDatabaseNamesAreUnique"], [149, 3, 1, "", "test_nucBases_AllLabelsAreUnique"], [149, 3, 1, "", "test_nucBases_Am242m"], [149, 3, 1, "", "test_nucBases_Mc2Elementals"], [149, 3, 1, "", "test_nucBases_NegativeZRaisesException"], [149, 3, 1, "", "test_nucBases_Z295RaisesException"], [149, 3, 1, "", "test_nucBases_databaseNamesStartWith_n"], [149, 3, 1, "", "test_nucBases_fromNameBadNameRaisesException"], [149, 3, 1, "", "test_nucBases_imposeBurnChainDecayBulkStatistics"], [149, 3, 1, "", "test_nucBases_imposeBurnChainTransmutationBulkStatistics"], [149, 3, 1, "", "test_nucBases_imposeBurn_nuSF"], [149, 3, 1, "", "test_nucBases_isHeavyMetal"], [149, 3, 1, "", "test_nucBases_labelAndNameCollsionsAreForSameNuclide"], [149, 3, 1, "", "test_nucBases_singleFailsWithMultipleMatches"], [149, 3, 1, "", "test_nucBases_singleFailsWithNoMatches"], [149, 3, 1, "", "test_nucBases_singleIsPrettySpecific"]], "armi.nucDirectory.tests.test_nuclideBases.test_getAAAZZZSId": [[149, 3, 1, "", "test_AAAZZZSNameGenerator"]], "armi.nucDirectory.tests.test_thermalScattering": [[150, 2, 1, "", "TestThermalScattering"], [150, 1, 1, "", "buildBlockWithTSL"], [150, 1, 1, "", "getNuclideThermalScatteringData"]], "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering": [[150, 3, 1, "", "test_ACECompound"], [150, 3, 1, "", "test_ACEElementInCompound"], [150, 3, 1, "", "test_ACEIsotope"], [150, 3, 1, "", "test_endf8Compound"], [150, 3, 1, "", "test_endf8ElementInCompound"], [150, 3, 1, "", "test_endf8Isotope"], [150, 3, 1, "", "test_failOnMultiple"], [150, 3, 1, "", "test_graphiteOnReactor"]], "armi.nucDirectory.tests.test_transmutations": [[151, 2, 1, "", "DecayModeTests"], [151, 2, 1, "", "TransmutationTests"], [151, 1, 1, "", "randomString"]], "armi.nucDirectory.tests.test_transmutations.DecayModeTests": [[151, 3, 1, "", "test_DecayMode_invalidReactionTypes"], [151, 3, 1, "", "test_DecayMode_validReactionTypes"]], "armi.nucDirectory.tests.test_transmutations.TransmutationTests": [[151, 3, 1, "", "test_Transmutation_invalidReactionTypes"], [151, 3, 1, "", "test_Transmutation_productParticle"], [151, 3, 1, "", "test_Transmutation_validReactionTypes"]], "armi.nucDirectory.thermalScattering": [[152, 2, 1, "", "ThermalScattering"], [152, 1, 1, "", "factory"]], "armi.nucDirectory.thermalScattering.ThermalScattering": [[152, 3, 1, "", "getSubjectNuclideBases"]], "armi.nucDirectory.transmutations": [[153, 2, 1, "", "DecayMode"], [153, 2, 1, "", "Transmutable"], [153, 2, 1, "", "Transmutation"]], "armi.nucDirectory.transmutations.Transmutable": [[153, 3, 1, "", "getPreferredProduct"]], "armi.nuclearDataIO": [[155, 0, 0, "-", "cccc"], [154, 1, 1, "", "getExpectedCOMPXSFileName"], [154, 1, 1, "", "getExpectedGAMISOFileName"], [154, 1, 1, "", "getExpectedISOTXSFileName"], [154, 1, 1, "", "getExpectedPMATRXFileName"], [184, 0, 0, "-", "nuclearFileMetadata"], [185, 0, 0, "-", "tests"], [189, 0, 0, "-", "xsCollections"], [190, 0, 0, "-", "xsLibraries"], [191, 0, 0, "-", "xsNuclides"]], "armi.nuclearDataIO.cccc": [[156, 0, 0, "-", "cccc"], [157, 0, 0, "-", "compxs"], [158, 0, 0, "-", "dif3d"], [159, 0, 0, "-", "dlayxs"], [160, 0, 0, "-", "fixsrc"], [161, 0, 0, "-", "gamiso"], [162, 0, 0, "-", "geodst"], [163, 0, 0, "-", "isotxs"], [164, 0, 0, "-", "labels"], [165, 0, 0, "-", "nhflux"], [166, 0, 0, "-", "pmatrx"], [167, 0, 0, "-", "pwdint"], [168, 0, 0, "-", "rtflux"], [169, 0, 0, "-", "rzflux"], [170, 0, 0, "-", "tests"]], "armi.nuclearDataIO.cccc.cccc": [[156, 2, 1, "", "AsciiRecordReader"], [156, 2, 1, "", "AsciiRecordWriter"], [156, 2, 1, "", "BinaryRecordReader"], [156, 2, 1, "", "BinaryRecordWriter"], [156, 2, 1, "", "DataContainer"], [156, 6, 1, "", "IMPLICIT_INT"], [156, 2, 1, "", "IORecord"], [156, 2, 1, "", "Stream"], [156, 2, 1, "", "StreamWithDataContainer"], [156, 1, 1, "", "getBlockBandwidth"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader": [[156, 3, 1, "", "close"], [156, 3, 1, "", "rwDouble"], [156, 3, 1, "", "rwFloat"], [156, 3, 1, "", "rwInt"], [156, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter": [[156, 3, 1, "", "close"], [156, 3, 1, "", "open"], [156, 3, 1, "", "rwDouble"], [156, 3, 1, "", "rwFloat"], [156, 3, 1, "", "rwInt"], [156, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader": [[156, 3, 1, "", "close"], [156, 3, 1, "", "open"], [156, 3, 1, "", "rwBool"], [156, 3, 1, "", "rwDouble"], [156, 3, 1, "", "rwFloat"], [156, 3, 1, "", "rwInt"], [156, 3, 1, "", "rwLong"], [156, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter": [[156, 3, 1, "", "close"], [156, 3, 1, "", "open"], [156, 3, 1, "", "rwBool"], [156, 3, 1, "", "rwDouble"], [156, 3, 1, "", "rwFloat"], [156, 3, 1, "", "rwInt"], [156, 3, 1, "", "rwLong"], [156, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.IORecord": [[156, 3, 1, "", "close"], [156, 4, 1, "", "count"], [156, 4, 1, "", "maxsize"], [156, 3, 1, "", "open"], [156, 3, 1, "", "rwBool"], [156, 3, 1, "", "rwDouble"], [156, 3, 1, "", "rwDoubleMatrix"], [156, 3, 1, "", "rwFloat"], [156, 3, 1, "", "rwImplicitlyTypedMap"], [156, 3, 1, "", "rwInt"], [156, 3, 1, "", "rwIntMatrix"], [156, 3, 1, "", "rwList"], [156, 3, 1, "", "rwMatrix"], [156, 3, 1, "", "rwString"]], "armi.nuclearDataIO.cccc.cccc.Stream": [[156, 3, 1, "", "createRecord"], [156, 3, 1, "", "readAscii"], [156, 3, 1, "", "readBinary"], [156, 3, 1, "", "readWrite"], [156, 3, 1, "", "writeAscii"], [156, 3, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.compxs": [[157, 2, 1, "", "CompxsRegion"], [157, 1, 1, "", "compare"]], "armi.nuclearDataIO.cccc.compxs.CompxsRegion": [[157, 3, 1, "", "allocateXS"], [157, 3, 1, "", "getXS"], [157, 3, 1, "", "initMetadata"], [157, 5, 1, "", "isFissile"], [157, 3, 1, "", "makeScatteringMatrices"], [157, 3, 1, "", "merge"]], "armi.nuclearDataIO.cccc.dif3d": [[158, 2, 1, "", "Dif3dData"], [158, 2, 1, "", "Dif3dStream"]], "armi.nuclearDataIO.cccc.dif3d.Dif3dStream": [[158, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.dlayxs": [[159, 2, 1, "", "DelayedNeutronData"], [159, 2, 1, "", "Dlayxs"], [159, 1, 1, "", "compare"], [159, 1, 1, "", "readAscii"], [159, 1, 1, "", "readBinary"], [159, 1, 1, "", "writeAscii"], [159, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.dlayxs.Dlayxs": [[159, 5, 1, "", "G"], [159, 3, 1, "", "generateAverageDelayedNeutronConstants"]], "armi.nuclearDataIO.cccc.fixsrc": [[160, 2, 1, "", "FIXSRC"], [160, 1, 1, "", "readBinary"], [160, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.fixsrc.FIXSRC": [[160, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.gamiso": [[161, 1, 1, "", "addDummyNuclidesToLibrary"], [161, 1, 1, "", "compare"], [161, 1, 1, "", "compareNuclideXS"]], "armi.nuclearDataIO.cccc.geodst": [[162, 2, 1, "", "GeodstData"], [162, 2, 1, "", "GeodstStream"]], "armi.nuclearDataIO.cccc.geodst.GeodstStream": [[162, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.isotxs": [[163, 1, 1, "", "addDummyNuclidesToLibrary"], [163, 1, 1, "", "compare"], [163, 1, 1, "", "compareNuclideXS"], [163, 1, 1, "", "compareSet"]], "armi.nuclearDataIO.cccc.labels": [[164, 2, 1, "", "LabelsData"], [164, 2, 1, "", "LabelsStream"]], "armi.nuclearDataIO.cccc.labels.LabelsStream": [[164, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.nhflux": [[165, 2, 1, "", "NHFLUX"], [165, 2, 1, "", "NafluxStream"], [165, 2, 1, "", "NafluxStreamVariant"], [165, 2, 1, "", "NhfluxStream"], [165, 2, 1, "", "NhfluxStreamVariant"], [165, 1, 1, "", "getNhfluxReader"]], "armi.nuclearDataIO.cccc.nhflux.NHFLUX": [[165, 5, 1, "", "fluxMoments"], [165, 5, 1, "", "partialCurrentsHex"], [165, 5, 1, "", "partialCurrentsHex_ext"], [165, 5, 1, "", "partialCurrentsZ"]], "armi.nuclearDataIO.cccc.nhflux.NhfluxStream": [[165, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.pmatrx": [[166, 1, 1, "", "addDummyNuclidesToLibrary"], [166, 1, 1, "", "compare"], [166, 1, 1, "", "compareNuclideXS"], [166, 1, 1, "", "readAscii"], [166, 1, 1, "", "readBinary"], [166, 1, 1, "", "writeAscii"], [166, 1, 1, "", "writeBinary"]], "armi.nuclearDataIO.cccc.pwdint": [[167, 2, 1, "", "PwdintData"], [167, 2, 1, "", "PwdintStream"]], "armi.nuclearDataIO.cccc.pwdint.PwdintStream": [[167, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rtflux": [[168, 2, 1, "", "AtfluxStream"], [168, 2, 1, "", "RtfluxData"], [168, 2, 1, "", "RtfluxStream"], [168, 1, 1, "", "getFDFluxReader"]], "armi.nuclearDataIO.cccc.rtflux.AtfluxStream": [[168, 3, 1, "", "getEnergyGroupIndex"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxData": [[168, 4, 1, "", "groupFluxes"]], "armi.nuclearDataIO.cccc.rtflux.RtfluxStream": [[168, 3, 1, "", "getEnergyGroupIndex"], [168, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.rzflux": [[169, 2, 1, "", "Convergence"], [169, 2, 1, "", "RzfluxData"], [169, 2, 1, "", "RzfluxStream"]], "armi.nuclearDataIO.cccc.rzflux.Convergence": [[169, 4, 1, "", "CONVERGED"], [169, 4, 1, "", "CONVERGING"], [169, 4, 1, "", "DIVERGING"], [169, 4, 1, "", "NO_ITERATIONS"]], "armi.nuclearDataIO.cccc.rzflux.RzfluxStream": [[169, 3, 1, "", "readWrite"]], "armi.nuclearDataIO.cccc.tests": [[171, 0, 0, "-", "test_cccc"], [172, 0, 0, "-", "test_compxs"], [173, 0, 0, "-", "test_dif3d"], [174, 0, 0, "-", "test_dlayxs"], [175, 0, 0, "-", "test_gamiso"], [176, 0, 0, "-", "test_geodst"], [177, 0, 0, "-", "test_isotxs"], [178, 0, 0, "-", "test_labels"], [179, 0, 0, "-", "test_nhflux"], [180, 0, 0, "-", "test_pmatrx"], [181, 0, 0, "-", "test_pwdint"], [182, 0, 0, "-", "test_rtflux"], [183, 0, 0, "-", "test_rzflux"]], "armi.nuclearDataIO.cccc.tests.test_cccc": [[171, 2, 1, "", "CcccAsciiRecordTests"], [171, 2, 1, "", "CcccBinaryRecordTests"], [171, 2, 1, "", "CcccIOStreamTests"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests": [[171, 3, 1, "", "test_notReadingAnEntireRecordRaisesException"], [171, 3, 1, "", "test_readingBeyondRecordRaisesException"], [171, 3, 1, "", "test_writeAndReadSimpleFloatRecord"], [171, 3, 1, "", "test_writeAndReadSimpleIntegerRecord"], [171, 3, 1, "", "test_writeAndReadSimpleStringRecord"]], "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests": [[171, 3, 1, "", "test_initWithFileMode"]], "armi.nuclearDataIO.cccc.tests.test_compxs": [[172, 2, 1, "", "TestCompxs"]], "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs": [[172, 5, 1, "", "asciiWritePath"], [172, 5, 1, "", "binaryWritePath"], [172, 3, 1, "", "test_asciiRW"], [172, 3, 1, "", "test_binaryRW"], [172, 3, 1, "", "test_getCOMPXSFileName"], [172, 3, 1, "", "test_libraryData"], [172, 3, 1, "", "test_mergeCompxsLibraries"], [172, 3, 1, "", "test_regionPrimaryXS"], [172, 3, 1, "", "test_totalScatterMatrix"]], "armi.nuclearDataIO.cccc.tests.test_dif3d": [[173, 2, 1, "", "TestDif3dEmptyRecords"], [173, 2, 1, "", "TestDif3dSimpleHexz"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords": [[173, 3, 1, "", "test_empty4and5Records"]], "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz": [[173, 3, 1, "", "test__rw2DRecord"], [173, 3, 1, "", "test__rw3DRecord"], [173, 3, 1, "", "test__rw4DRecord"], [173, 3, 1, "", "test__rw5DRecord"], [173, 3, 1, "", "test__rwFile1DRecord"], [173, 3, 1, "", "test__rwFileID"], [173, 3, 1, "", "test_writeBinary"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs": [[174, 2, 1, "", "DlayxsTests"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests": [[174, 3, 1, "", "test_ENDFVII1DecayConstants"], [174, 3, 1, "", "test_ENDFVII1NeutronsPerFission"], [174, 3, 1, "", "test_NuDelay"], [174, 3, 1, "", "test_avg"], [174, 3, 1, "", "test_chi_delay"], [174, 3, 1, "", "test_chi_delaySumsTo1"], [174, 3, 1, "", "test_compare"], [174, 3, 1, "", "test_decayConstants"], [174, 3, 1, "", "test_nuclides"], [174, 3, 1, "", "test_writeBinary_mcc3"]], "armi.nuclearDataIO.cccc.tests.test_gamiso": [[175, 2, 1, "", "TestGamiso"]], "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso": [[175, 3, 1, "", "test_addDummyNuclidesToLibrary"], [175, 3, 1, "", "test_compare"]], "armi.nuclearDataIO.cccc.tests.test_geodst": [[176, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst": [[176, 3, 1, "", "test_readGeodst"], [176, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs": [[177, 2, 1, "", "Isotxs_merge_Tests"], [177, 2, 1, "", "TestIsotxs"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests": [[177, 3, 1, "", "test_mergeMccV2FilesRemovesTheFileWideChi"]], "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs": [[177, 3, 1, "", "test_getGAMISOFileName"], [177, 3, 1, "", "test_getISOTXSFileName"], [177, 3, 1, "", "test_getNuclide"], [177, 3, 1, "", "test_getScatterWeights"], [177, 3, 1, "", "test_getScatteringWeights"], [177, 3, 1, "", "test_isotxsDetailedData"], [177, 3, 1, "", "test_isotxsGeneralData"], [177, 3, 1, "", "test_n2nIsReactionBased"]], "armi.nuclearDataIO.cccc.tests.test_labels": [[178, 2, 1, "", "TestLabels"]], "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels": [[178, 3, 1, "", "test_readLabelsBinary"], [178, 3, 1, "", "test_writeLabelsAscii"]], "armi.nuclearDataIO.cccc.tests.test_nhflux": [[179, 2, 1, "", "TestNhflux"], [179, 2, 1, "", "TestNhfluxVariant"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux": [[179, 3, 1, "", "test_fc"], [179, 3, 1, "", "test_fluxMoments"], [179, 3, 1, "", "test_write"], [179, 3, 1, "", "test_xyPartialCurrents"], [179, 3, 1, "", "test_zPartialCurrents"]], "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant": [[179, 3, 1, "", "test_fc"], [179, 3, 1, "", "test_fluxMoments"], [179, 3, 1, "", "test_write"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx": [[180, 2, 1, "", "TestPmatrx"], [180, 2, 1, "", "TestPmatrxNuclides"], [180, 2, 1, "", "TestProductionMatrix_FromWritten"], [180, 2, 1, "", "TestProductionMatrix_FromWrittenAscii"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx": [[180, 3, 1, "", "test_pmatrxDoesntHaveDoseConversionFactors"], [180, 3, 1, "", "test_pmatrxGammaEnergies"], [180, 3, 1, "", "test_pmatrxNeutronEneries"], [180, 3, 1, "", "test_pmatrxNuclideNames"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides": [[180, 3, 1, "", "test_getPMATRXFileName"], [180, 3, 1, "", "test_nuclideDataIsDifferent"], [180, 3, 1, "", "test_pmatrxNuclideDataAA"], [180, 3, 1, "", "test_pmatrxNuclideDataAB"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten": [[180, 3, 1, "", "test_writtenIsIdenticalToOriginal"]], "armi.nuclearDataIO.cccc.tests.test_pwdint": [[181, 2, 1, "", "TestGeodst"]], "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst": [[181, 3, 1, "", "test_readGeodst"], [181, 3, 1, "", "test_writeGeodst"]], "armi.nuclearDataIO.cccc.tests.test_rtflux": [[182, 2, 1, "", "Testrtflux"]], "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux": [[182, 3, 1, "", "test_adjoint"], [182, 3, 1, "", "test_readrtflux"], [182, 3, 1, "", "test_rwAscii"], [182, 3, 1, "", "test_writertflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux": [[183, 2, 1, "", "TestRzflux"], [183, 1, 1, "", "binaryFilesEqual"]], "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux": [[183, 3, 1, "", "test_readRzflux"], [183, 3, 1, "", "test_rwAscii"], [183, 3, 1, "", "test_writeRzflux"]], "armi.nuclearDataIO.nuclearFileMetadata": [[184, 2, 1, "", "FileMetadata"], [184, 2, 1, "", "NuclideMetadata"], [184, 2, 1, "", "NuclideXSMetadata"], [184, 2, 1, "", "RegionXSMetadata"]], "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata": [[184, 3, 1, "", "update"]], "armi.nuclearDataIO.tests": [[186, 0, 0, "-", "test_xsCollections"], [187, 0, 0, "-", "test_xsLibraries"], [188, 0, 0, "-", "test_xsNuclides"]], "armi.nuclearDataIO.tests.test_xsCollections": [[186, 2, 1, "", "MockBlock"], [186, 2, 1, "", "MockBlueprints"], [186, 2, 1, "", "MockReactor"], [186, 2, 1, "", "TestXsCollections"]], "armi.nuclearDataIO.tests.test_xsCollections.MockBlock": [[186, 3, 1, "", "getNuclideNumberDensities"], [186, 3, 1, "", "getNuclides"], [186, 3, 1, "", "getVolume"], [186, 4, 1, "", "paramCollectionType"], [186, 5, 1, "", "r"], [186, 3, 1, "", "setNumberDensity"]], "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections": [[186, 3, 1, "", "test_collapseCrossSection"], [186, 3, 1, "", "test_createMacrosFromMicros"], [186, 3, 1, "", "test_generateTotalScatteringMatrix"], [186, 3, 1, "", "test_generateTotalScatteringMatrixWithMissingData"], [186, 3, 1, "", "test_plotNucXs"]], "armi.nuclearDataIO.tests.test_xsLibraries": [[187, 2, 1, "", "Combined_merge_Tests"], [187, 2, 1, "", "Gamiso_merge_Tests"], [187, 2, 1, "", "Isotxs_merge_Tests"], [187, 2, 1, "", "Pmatrx_merge_Tests"], [187, 2, 1, "", "TempFileMixin"], [187, 2, 1, "", "TestXSLibrary"], [187, 2, 1, "", "Test_GetISOTXSFilesInWorkingDirectory"]], "armi.nuclearDataIO.tests.test_xsLibraries.Combined_merge_Tests": [[187, 3, 1, "", "test_mergeAllXSLibFiles"]], "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests": [[187, 3, 1, "", "getErrorType"], [187, 3, 1, "", "getLibAAPath"], [187, 3, 1, "", "getLibAA_ABPath"], [187, 3, 1, "", "getLibABPath"], [187, 3, 1, "", "getLibLumpedPath"], [187, 3, 1, "", "getReadFunc"], [187, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests": [[187, 3, 1, "", "getErrorType"], [187, 3, 1, "", "getLibAAPath"], [187, 3, 1, "", "getLibAA_ABPath"], [187, 3, 1, "", "getLibABPath"], [187, 3, 1, "", "getLibLumpedPath"], [187, 3, 1, "", "getReadFunc"], [187, 3, 1, "", "getWriteFunc"]], "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests": [[187, 3, 1, "", "getErrorType"], [187, 3, 1, "", "getLibAAPath"], [187, 3, 1, "", "getLibAA_ABPath"], [187, 3, 1, "", "getLibABPath"], [187, 3, 1, "", "getLibLumpedPath"], [187, 3, 1, "", "getReadFunc"], [187, 3, 1, "", "getWriteFunc"], [187, 3, 1, "", "test_canRemoveIsotopes"], [187, 3, 1, "", "test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin": [[187, 5, 1, "", "testFileName"]], "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary": [[187, 3, 1, "", "test_canPickleAndUnpickleGAMISO"], [187, 3, 1, "", "test_canPickleAndUnpickleISOTXS"], [187, 3, 1, "", "test_canPickleAndUnpicklePMATRX"], [187, 3, 1, "", "test_canWriteGamisoFromCombinedXSLibrary"], [187, 3, 1, "", "test_canWriteIsotxsFromCombinedXSLibrary"], [187, 3, 1, "", "test_canWritePmatrxFromCombinedXSLibrary"], [187, 3, 1, "", "test_compareDifferentComponentsOfAnXSLibrary"], [187, 3, 1, "", "test_compareWorks"], [187, 3, 1, "", "test_gamisoLibraryAttributes"], [187, 3, 1, "", "test_isotxsLibraryAttributes"], [187, 3, 1, "", "test_mergeFailsWithNonIsotxsFiles"], [187, 3, 1, "", "test_mergeXSLibrariesWithDifferentDataWorks"], [187, 3, 1, "", "test_pmatrxLibraryAttributes"]], "armi.nuclearDataIO.tests.test_xsLibraries.Test_GetISOTXSFilesInWorkingDirectory": [[187, 3, 1, "", "assert_contains_only"], [187, 3, 1, "", "test_getISOTXSFilesWithLibrarySuffix"], [187, 3, 1, "", "test_getISOTXSFilesWithoutLibrarySuffix"]], "armi.nuclearDataIO.tests.test_xsNuclides": [[188, 2, 1, "", "NuclideTests"]], "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests": [[188, 3, 1, "", "test_getMicroXS"], [188, 3, 1, "", "test_getXS"], [188, 3, 1, "", "test_nuclide_2dXsArrangementIsCorrect"], [188, 3, 1, "", "test_nuclide_createFromLabelFailsOnBadName"], [188, 3, 1, "", "test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"], [188, 3, 1, "", "test_nuclide_isoaaDetails"], [188, 3, 1, "", "test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"], [188, 3, 1, "", "test_nuclide_newLabelsDontCauseWarnings"], [188, 3, 1, "", "test_nuclide_nuclideBaseMethodsShouldNotFail"], [188, 3, 1, "", "test_nuclide_oldLabelsCauseWarnings"], [188, 3, 1, "", "test_nuclide_scatterXsArrangementIsCorrect"]], "armi.nuclearDataIO.xsCollections": [[189, 2, 1, "", "MacroscopicCrossSectionCreator"], [189, 2, 1, "", "XSCollection"], [189, 1, 1, "", "computeBlockAverageChi"], [189, 1, 1, "", "computeCaptureEnergyGenerationConstants"], [189, 1, 1, "", "computeFissionEnergyGenerationConstants"], [189, 1, 1, "", "computeGammaEnergyDepositionConstants"], [189, 1, 1, "", "computeMacroscopicGroupConstants"], [189, 1, 1, "", "computeNeutronEnergyDepositionConstants"]], "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator": [[189, 3, 1, "", "createMacrosFromMicros"], [189, 3, 1, "", "createMacrosOnBlocklist"]], "armi.nuclearDataIO.xsCollections.XSCollection": [[189, 3, 1, "", "clear"], [189, 3, 1, "", "collapseCrossSection"], [189, 3, 1, "", "compare"], [189, 3, 1, "", "get"], [189, 3, 1, "", "getAbsorptionXS"], [189, 3, 1, "", "getDefaultXs"], [189, 3, 1, "", "getTotalScatterMatrix"], [189, 3, 1, "", "merge"]], "armi.nuclearDataIO.xsLibraries": [[190, 2, 1, "", "CompxsLibrary"], [190, 2, 1, "", "IsotxsLibrary"], [190, 1, 1, "", "compare"], [190, 1, 1, "", "compareLibraryNeutronEnergies"], [190, 1, 1, "", "compareXSLibraryAttribute"], [190, 1, 1, "", "getISOTXSLibrariesToMerge"], [190, 1, 1, "", "getSuffixFromNuclideLabel"], [190, 1, 1, "", "mergeXSLibrariesInWorkingDirectory"]], "armi.nuclearDataIO.xsLibraries.CompxsLibrary": [[190, 3, 1, "", "merge"], [190, 5, 1, "", "regionLabels"], [190, 5, 1, "", "regions"]], "armi.nuclearDataIO.xsLibraries.IsotxsLibrary": [[190, 5, 1, "", "gammaDoseConversionFactors"], [190, 5, 1, "", "gammaEnergyUpperBounds"], [190, 3, 1, "", "get"], [190, 3, 1, "", "getNuclide"], [190, 3, 1, "", "getNuclides"], [190, 3, 1, "", "getScatterWeights"], [190, 3, 1, "", "merge"], [190, 5, 1, "", "neutronDoseConversionFactors"], [190, 5, 1, "", "nuclideLabels"], [190, 5, 1, "", "nuclides"], [190, 5, 1, "", "numGroups"], [190, 5, 1, "", "numGroupsGamma"], [190, 3, 1, "", "purgeFissionProducts"], [190, 3, 1, "", "resetScatterWeights"], [190, 5, 1, "", "xsIDs"]], "armi.nuclearDataIO.xsNuclides": [[191, 2, 1, "", "XSNuclide"], [191, 1, 1, "", "plotCompareScatterMatrix"], [191, 1, 1, "", "plotScatterMatrix"]], "armi.nuclearDataIO.xsNuclides.XSNuclide": [[191, 3, 1, "", "buildNormalizedScatterColumns"], [191, 5, 1, "", "decays"], [191, 3, 1, "", "getMicroXS"], [191, 3, 1, "", "getXS"], [191, 3, 1, "", "merge"], [191, 5, 1, "", "trans"], [191, 3, 1, "", "updateBaseNuclide"]], "armi.operators": [[192, 1, 1, "", "factory"], [192, 1, 1, "", "getOperatorClassFromSettings"], [193, 0, 0, "-", "operator"], [194, 0, 0, "-", "operatorMPI"], [195, 0, 0, "-", "runTypes"], [196, 0, 0, "-", "settingsValidation"], [197, 0, 0, "-", "snapshots"], [198, 0, 0, "-", "tests"]], "armi.operators.operator": [[193, 2, 1, "", "Operator"]], "armi.operators.operator.Operator": [[193, 3, 1, "", "addInterface"], [193, 5, 1, "", "atEOL"], [193, 5, 1, "", "availabilityFactors"], [193, 5, 1, "", "burnSteps"], [193, 3, 1, "", "couplingIsActive"], [193, 3, 1, "", "createInterfaces"], [193, 5, 1, "", "cycleLengths"], [193, 5, 1, "", "cycleNames"], [193, 3, 1, "", "detach"], [193, 3, 1, "", "getInterface"], [193, 3, 1, "", "getInterfaces"], [193, 3, 1, "", "initializeInterfaces"], [193, 4, 1, "", "inspector"], [193, 3, 1, "", "interactAllBOC"], [193, 3, 1, "", "interactAllBOL"], [193, 3, 1, "", "interactAllCoupled"], [193, 3, 1, "", "interactAllEOC"], [193, 3, 1, "", "interactAllEOL"], [193, 3, 1, "", "interactAllError"], [193, 3, 1, "", "interactAllEveryNode"], [193, 3, 1, "", "interactAllInit"], [193, 3, 1, "", "interfaceIsActive"], [193, 3, 1, "", "loadState"], [193, 5, 1, "", "maxBurnSteps"], [193, 3, 1, "", "operate"], [193, 5, 1, "", "powerFractions"], [193, 3, 1, "", "printInterfaceSummary"], [193, 3, 1, "", "reattach"], [193, 3, 1, "", "removeAllInterfaces"], [193, 3, 1, "", "removeInterface"], [193, 3, 1, "", "setStateToDefault"], [193, 3, 1, "", "snapshotRequest"], [193, 5, 1, "", "stepLengths"]], "armi.operators.operatorMPI": [[194, 2, 1, "", "OperatorMPI"]], "armi.operators.operatorMPI.OperatorMPI": [[194, 3, 1, "", "collapseAllStderrs"], [194, 3, 1, "", "operate"], [194, 3, 1, "", "workerOperate"], [194, 3, 1, "", "workerQuit"]], "armi.operators.runTypes": [[195, 2, 1, "", "RunTypes"]], "armi.operators.runTypes.RunTypes": [[195, 4, 1, "", "EQUILIBRIUM"], [195, 4, 1, "", "SNAPSHOTS"], [195, 4, 1, "", "STANDARD"]], "armi.operators.settingsValidation": [[196, 2, 1, "", "Inspector"], [196, 2, 1, "", "Query"], [196, 1, 1, "", "createQueryRevertBadPathToDefault"], [196, 1, 1, "", "validateVersion"]], "armi.operators.settingsValidation.Inspector": [[196, 3, 1, "", "NO_ACTION"], [196, 3, 1, "", "addQuery"], [196, 3, 1, "", "addQueryBadLocationWillLikelyFail"], [196, 3, 1, "", "addQueryCurrentSettingMayNotSupportFeatures"], [196, 3, 1, "", "run"]], "armi.operators.settingsValidation.Query": [[196, 3, 1, "", "isCorrective"], [196, 3, 1, "", "resolve"]], "armi.operators.snapshots": [[197, 2, 1, "", "OperatorSnapshots"]], "armi.operators.snapshots.OperatorSnapshots": [[197, 5, 1, "", "atEOL"], [197, 3, 1, "", "createInterfaces"], [197, 3, 1, "", "setStateToDefault"]], "armi.operators.tests": [[199, 0, 0, "-", "test_inspectors"], [200, 0, 0, "-", "test_operatorSnapshots"], [201, 0, 0, "-", "test_operators"]], "armi.operators.tests.test_inspectors": [[199, 2, 1, "", "TestInspector"]], "armi.operators.tests.test_inspectors.TestInspector": [[199, 3, 1, "", "test_assignCS"], [199, 3, 1, "", "test_callableCorrectionCheck"], [199, 3, 1, "", "test_changeOfCS"], [199, 3, 1, "", "test_checkForBothSimpleAndDetailedCyclesInputs"], [199, 3, 1, "", "test_correctCyclesToZeroBurnup"], [199, 3, 1, "", "test_createQueryRevertBadPathToDefault"], [199, 3, 1, "", "test_nonCorrectiveQuery"], [199, 3, 1, "", "test_overwriteSettingsCorrectiveQuery"], [199, 3, 1, "", "test_query"]], "armi.operators.tests.test_operatorSnapshots": [[200, 2, 1, "", "TestOperatorSnapshots"], [200, 2, 1, "", "TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots": [[200, 3, 1, "", "test_atEOL"], [200, 3, 1, "", "test_createInterfaces"], [200, 3, 1, "", "test_createInterfacesDisabled"], [200, 3, 1, "", "test_mainOperate"], [200, 3, 1, "", "test_setStateToDefault"]], "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings": [[200, 3, 1, "", "test_getOperatorClassFromSettings"]], "armi.operators.tests.test_operators": [[201, 2, 1, "", "CyclesSettingsTests"], [201, 2, 1, "", "InterfaceA"], [201, 2, 1, "", "InterfaceB"], [201, 2, 1, "", "InterfaceC"], [201, 2, 1, "", "OperatorTests"], [201, 2, 1, "", "TestInterfaceAndEventHeaders"], [201, 2, 1, "", "TestTightCoupling"]], "armi.operators.tests.test_operators.CyclesSettingsTests": [[201, 4, 1, "", "availabilityFactorsSolution"], [201, 4, 1, "", "burnStepsSolution"], [201, 4, 1, "", "cycleLengthsSolution"], [201, 4, 1, "", "cycleNamesSolution"], [201, 4, 1, "", "detailedCyclesSettings"], [201, 4, 1, "", "maxBurnStepsSolution"], [201, 4, 1, "", "powerFractionsSolution"], [201, 4, 1, "", "stepLengthsSolution"], [201, 3, 1, "", "test_getAvailabilityFactors"], [201, 3, 1, "", "test_getBurnSteps"], [201, 3, 1, "", "test_getCycleLengths"], [201, 3, 1, "", "test_getCycleNames"], [201, 3, 1, "", "test_getMaxBurnSteps"], [201, 3, 1, "", "test_getPowerFractions"], [201, 3, 1, "", "test_getStepLengths"]], "armi.operators.tests.test_operators.InterfaceA": [[201, 4, 1, "", "function"], [201, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceB": [[201, 4, 1, "", "function"], [201, 4, 1, "", "name"]], "armi.operators.tests.test_operators.InterfaceC": [[201, 4, 1, "", "function"], [201, 4, 1, "", "name"]], "armi.operators.tests.test_operators.OperatorTests": [[201, 3, 1, "", "test_addInterfaceSubclassCollision"], [201, 3, 1, "", "test_checkCsConsistency"], [201, 3, 1, "", "test_interfaceIsActive"], [201, 3, 1, "", "test_loadStateError"], [201, 3, 1, "", "test_setStateToDefault"], [201, 3, 1, "", "test_snapshotRequest"]], "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders": [[201, 3, 1, "", "test_expandCycleAndTimeNodeArgs_Empty"], [201, 3, 1, "", "test_expandCycleAndTimeNodeArgs_OneArg"], [201, 3, 1, "", "test_expandCycleAndTimeNodeArgs_TwoArg"]], "armi.operators.tests.test_operators.TestTightCoupling": [[201, 3, 1, "", "dbWriteForCoupling"], [201, 3, 1, "", "test_computeTightCouplingConvergence"], [201, 3, 1, "", "test_couplingIsActive"], [201, 3, 1, "", "test_performTightCoupling_Inactive"], [201, 3, 1, "", "test_performTightCoupling_NoWriteDB"], [201, 3, 1, "", "test_performTightCoupling_WriteDB"], [201, 3, 1, "", "test_performTightCoupling_notConverged"], [201, 3, 1, "", "test_performTightCoupling_skip"]], "armi.physics": [[203, 0, 0, "-", "constants"], [204, 0, 0, "-", "executers"], [205, 0, 0, "-", "fuelCycle"], [216, 0, 0, "-", "fuelPerformance"], [226, 0, 0, "-", "neutronics"], [263, 0, 0, "-", "safety"], [265, 0, 0, "-", "tests"], [267, 0, 0, "-", "thermalHydraulics"]], "armi.physics.constants": [[203, 6, 1, "", "DPA_CROSS_SECTIONS"]], "armi.physics.executers": [[204, 2, 1, "", "DefaultExecuter"], [204, 2, 1, "", "Executer"], [204, 2, 1, "", "ExecutionOptions"]], "armi.physics.executers.DefaultExecuter": [[204, 3, 1, "", "run"], [204, 3, 1, "", "writeInput"]], "armi.physics.executers.Executer": [[204, 3, 1, "", "run"]], "armi.physics.executers.ExecutionOptions": [[204, 3, 1, "", "describe"], [204, 3, 1, "", "fromReactor"], [204, 3, 1, "", "fromUserSettings"], [204, 3, 1, "", "resolveDerivedOptions"], [204, 3, 1, "", "setRunDirFromCaseTitle"]], "armi.physics.fuelCycle": [[205, 2, 1, "", "FuelHandlerPlugin"], [206, 0, 0, "-", "assemblyRotationAlgorithms"], [207, 0, 0, "-", "fuelHandlerFactory"], [208, 0, 0, "-", "fuelHandlerInterface"], [209, 0, 0, "-", "fuelHandlers"], [210, 0, 0, "-", "hexAssemblyFuelMgmtUtils"], [211, 0, 0, "-", "settings"], [212, 0, 0, "-", "tests"]], "armi.physics.fuelCycle.FuelHandlerPlugin": [[205, 3, 1, "", "defineSettings"], [205, 3, 1, "", "defineSettingsValidators"], [205, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms": [[206, 1, 1, "", "buReducingAssemblyRotation"], [206, 1, 1, "", "simpleAssemblyRotation"]], "armi.physics.fuelCycle.fuelHandlerFactory": [[207, 1, 1, "", "fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface": [[208, 2, 1, "", "FuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface": [[208, 3, 1, "", "interactBOC"], [208, 3, 1, "", "interactEOC"], [208, 3, 1, "", "interactEOL"], [208, 3, 1, "", "makeShuffleReport"], [208, 3, 1, "", "manageFuel"], [208, 4, 1, "", "name"], [208, 3, 1, "", "specifyInputs"], [208, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.fuelHandlers": [[209, 2, 1, "", "FuelHandler"]], "armi.physics.fuelCycle.fuelHandlers.FuelHandler": [[209, 3, 1, "", "chooseSwaps"], [209, 5, 1, "", "cs"], [209, 5, 1, "", "cycle"], [209, 3, 1, "", "dischargeSwap"], [209, 3, 1, "", "doRepeatShuffle"], [209, 3, 1, "", "findAssembly"], [209, 3, 1, "", "getFactorList"], [209, 3, 1, "", "makeShuffleArrows"], [209, 3, 1, "", "outage"], [209, 3, 1, "", "prepCore"], [209, 3, 1, "", "prepSearch"], [209, 3, 1, "", "prepShuffleMap"], [209, 3, 1, "", "processMoveList"], [209, 5, 1, "", "r"], [209, 3, 1, "", "readMoves"], [209, 3, 1, "", "repeatShufflePattern"], [209, 3, 1, "", "swapAssemblies"], [209, 3, 1, "", "swapCascade"], [209, 3, 1, "", "trackChain"], [209, 3, 1, "", "workerOperate"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils": [[210, 1, 1, "", "buildConvergentRingSchedule"], [210, 1, 1, "", "buildEqRingSchedule"], [210, 1, 1, "", "buildRingSchedule"], [210, 1, 1, "", "getOptimalAssemblyOrientation"]], "armi.physics.fuelCycle.settings": [[211, 1, 1, "", "getFuelCycleSettingValidators"], [211, 1, 1, "", "getFuelCycleSettings"]], "armi.physics.fuelCycle.tests": [[213, 0, 0, "-", "test_assemblyRotationAlgorithms"], [214, 0, 0, "-", "test_fuelHandlers"], [215, 0, 0, "-", "test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms": [[213, 2, 1, "", "TestFuelHandlerMgmtTools"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools": [[213, 3, 1, "", "test_buReducingAssemblyRotation"], [213, 3, 1, "", "test_simpleAssemblyRotation"]], "armi.physics.fuelCycle.tests.test_fuelHandlers": [[214, 2, 1, "", "FuelHandlerTestHelper"], [214, 2, 1, "", "MockLatticePhysicsInterface"], [214, 2, 1, "", "MockXSGM"], [214, 2, 1, "", "TestFuelHandler"], [214, 2, 1, "", "TestFuelPlugin"], [214, 1, 1, "", "addSomeDetailAssemblies"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface": [[214, 3, 1, "", "interactBOC"], [214, 4, 1, "", "name"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM": [[214, 3, 1, "", "interactBOC"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler": [[214, 3, 1, "", "runShuffling"], [214, 3, 1, "", "test_dischargeSwap"], [214, 3, 1, "", "test_dischargeSwapIncompatibleStationaryBlocks"], [214, 3, 1, "", "test_findByCoords"], [214, 3, 1, "", "test_findHighBu"], [214, 3, 1, "", "test_findInSFP"], [214, 3, 1, "", "test_findMany"], [214, 3, 1, "", "test_findWithMinMax"], [214, 3, 1, "", "test_getFactorList"], [214, 3, 1, "", "test_interactBOC"], [214, 3, 1, "", "test_linPowByPin"], [214, 3, 1, "", "test_linPowByPinGamma"], [214, 3, 1, "", "test_linPowByPinNeutron"], [214, 3, 1, "", "test_processMoveList"], [214, 3, 1, "", "test_readMoves"], [214, 3, 1, "", "test_repeatShuffles"], [214, 3, 1, "", "test_transferDifferentNumberStationaryBlocks"], [214, 3, 1, "", "test_transferIncompatibleHeightStationaryBlocks"], [214, 3, 1, "", "test_transferStationaryBlocks"], [214, 3, 1, "", "test_transferUnalignedLocationStationaryBlocks"], [214, 3, 1, "", "test_width"]], "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin": [[214, 3, 1, "", "test_settingsAreDiscovered"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils": [[215, 2, 1, "", "TestHexAssemMgmtTools"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools": [[215, 3, 1, "", "test_buildConvergentRingSchedule"], [215, 3, 1, "", "test_buildEqRingSchedule"], [215, 3, 1, "", "test_buildEqRingScheduleHelper"], [215, 3, 1, "", "test_buildRingSchedule"]], "armi.physics.fuelPerformance": [[217, 0, 0, "-", "executers"], [218, 0, 0, "-", "parameters"], [219, 0, 0, "-", "plugin"], [220, 0, 0, "-", "settings"], [221, 0, 0, "-", "tests"], [225, 0, 0, "-", "utils"]], "armi.physics.fuelPerformance.executers": [[217, 2, 1, "", "FuelPerformanceExecuter"], [217, 2, 1, "", "FuelPerformanceOptions"]], "armi.physics.fuelPerformance.executers.FuelPerformanceOptions": [[217, 3, 1, "", "fromReactor"], [217, 3, 1, "", "fromUserSettings"]], "armi.physics.fuelPerformance.parameters": [[218, 1, 1, "", "getFuelPerformanceParameterDefinitions"]], "armi.physics.fuelPerformance.plugin": [[219, 2, 1, "", "FuelPerformancePlugin"]], "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin": [[219, 3, 1, "", "defineParameters"], [219, 3, 1, "", "defineSettings"], [219, 3, 1, "", "defineSettingsValidators"], [219, 3, 1, "", "exposeInterfaces"]], "armi.physics.fuelPerformance.settings": [[220, 1, 1, "", "defineSettings"], [220, 1, 1, "", "defineValidators"]], "armi.physics.fuelPerformance.tests": [[222, 0, 0, "-", "test_executers"], [223, 0, 0, "-", "test_fuelPerformancePlugin"], [224, 0, 0, "-", "test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_executers": [[222, 2, 1, "", "TestFuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions": [[222, 3, 1, "", "test_fuelPerformanceOptions"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin": [[223, 2, 1, "", "TestFuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin": [[223, 4, 1, "", "plugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils": [[224, 2, 1, "", "TestFuelPerformanceUtils"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils": [[224, 3, 1, "", "test_applyFuelDisplacement"], [224, 3, 1, "", "test_gasConductivityCorrection_morph0"], [224, 3, 1, "", "test_gasConductivityCorrection_morph1"], [224, 3, 1, "", "test_gasConductivityCorrection_morph2"], [224, 3, 1, "", "test_gasConductivityCorrection_morph3"], [224, 3, 1, "", "test_gasConductivityCorrection_morph4"]], "armi.physics.fuelPerformance.utils": [[225, 1, 1, "", "applyFuelDisplacement"], [225, 1, 1, "", "gasConductivityCorrection"]], "armi.physics.neutronics": [[226, 2, 1, "", "LatticePhysicsFrequency"], [226, 2, 1, "", "NeutronicsPlugin"], [226, 1, 1, "", "adjointCalculationRequested"], [226, 1, 1, "", "applyEffectiveDelayedNeutronFractionToCore"], [227, 0, 0, "-", "const"], [228, 0, 0, "-", "crossSectionGroupManager"], [229, 0, 0, "-", "crossSectionSettings"], [230, 0, 0, "-", "diffIsotxs"], [231, 0, 0, "-", "energyGroups"], [232, 0, 0, "-", "fissionProductModel"], [226, 1, 1, "", "gammaTransportIsRequested"], [226, 1, 1, "", "gammaXsAreRequested"], [239, 0, 0, "-", "globalFlux"], [243, 0, 0, "-", "isotopicDepletion"], [246, 0, 0, "-", "latticePhysics"], [252, 0, 0, "-", "macroXSGenerationInterface"], [253, 0, 0, "-", "parameters"], [226, 1, 1, "", "realCalculationRequested"], [254, 0, 0, "-", "reports"], [255, 0, 0, "-", "settings"], [256, 0, 0, "-", "tests"]], "armi.physics.neutronics.LatticePhysicsFrequency": [[226, 4, 1, "", "BOC"], [226, 4, 1, "", "BOL"], [226, 4, 1, "", "all"], [226, 4, 1, "", "everyNode"], [226, 4, 1, "", "firstCoupledIteration"], [226, 4, 1, "", "never"]], "armi.physics.neutronics.NeutronicsPlugin": [[226, 3, 1, "", "defineEntryPoints"], [226, 3, 1, "", "defineParameters"], [226, 3, 1, "", "defineSettings"], [226, 3, 1, "", "defineSettingsValidators"], [226, 3, 1, "", "exposeInterfaces"], [226, 3, 1, "", "getReportContents"], [226, 3, 1, "", "onProcessCoreLoading"]], "armi.physics.neutronics.crossSectionGroupManager": [[228, 2, 1, "", "AverageBlockCollection"], [228, 2, 1, "", "BlockCollection"], [228, 2, 1, "", "CrossSectionGroupManager"], [228, 2, 1, "", "CylindricalComponentsAverageBlockCollection"], [228, 2, 1, "", "FluxWeightedAverageBlockCollection"], [228, 2, 1, "", "MedianBlockCollection"], [228, 2, 1, "", "SlabComponentsAverageBlockCollection"], [228, 1, 1, "", "blockCollectionFactory"], [228, 1, 1, "", "describeInterfaces"], [228, 1, 1, "", "getBlockNuclideTemperatureAvgTerms"], [228, 1, 1, "", "getXSTypeLabelFromNumber"], [228, 1, 1, "", "getXSTypeNumberFromLabel"]], "armi.physics.neutronics.crossSectionGroupManager.BlockCollection": [[228, 3, 1, "", "calcAvgNuclideTemperatures"], [228, 3, 1, "", "createRepresentativeBlock"], [228, 3, 1, "", "getCandidateBlocks"], [228, 3, 1, "", "getWeight"]], "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager": [[228, 3, 1, "", "clearRepresentativeBlocks"], [228, 3, 1, "", "createRepresentativeBlocks"], [228, 3, 1, "", "createRepresentativeBlocksUsingExistingBlocks"], [228, 3, 1, "", "disableBuGroupUpdates"], [228, 3, 1, "", "enableBuGroupUpdates"], [228, 3, 1, "", "fluxSolutionIsPregenerated"], [228, 3, 1, "", "getNextAvailableXsTypes"], [228, 3, 1, "", "getNucTemperature"], [228, 3, 1, "", "interactBOC"], [228, 3, 1, "", "interactBOL"], [228, 3, 1, "", "interactCoupled"], [228, 3, 1, "", "interactEOC"], [228, 3, 1, "", "interactEveryNode"], [228, 3, 1, "", "makeCrossSectionGroups"], [228, 4, 1, "", "name"], [228, 3, 1, "", "updateNuclideTemperatures"], [228, 3, 1, "", "xsTypeIsPregenerated"]], "armi.physics.neutronics.crossSectionSettings": [[229, 2, 1, "", "XSGeometryTypes"], [229, 2, 1, "", "XSModelingOptions"], [229, 2, 1, "", "XSSettingDef"], [229, 2, 1, "", "XSSettings"], [229, 1, 1, "", "serializeXSSettings"], [229, 1, 1, "", "xsSettingsValidator"]], "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes": [[229, 4, 1, "", "ONE_DIMENSIONAL_CYLINDER"], [229, 4, 1, "", "ONE_DIMENSIONAL_SLAB"], [229, 4, 1, "", "TWO_DIMENSIONAL_HEX"], [229, 4, 1, "", "ZERO_DIMENSIONAL"], [229, 3, 1, "", "getStr"]], "armi.physics.neutronics.crossSectionSettings.XSModelingOptions": [[229, 5, 1, "", "buGroup"], [229, 5, 1, "", "fluxIsPregenerated"], [229, 3, 1, "", "serialize"], [229, 3, 1, "", "setDefaults"], [229, 3, 1, "", "validate"], [229, 5, 1, "", "xsIsPregenerated"], [229, 5, 1, "", "xsType"]], "armi.physics.neutronics.crossSectionSettings.XSSettingDef": [[229, 3, 1, "", "dump"]], "armi.physics.neutronics.crossSectionSettings.XSSettings": [[229, 3, 1, "", "setDefaults"]], "armi.physics.neutronics.diffIsotxs": [[230, 2, 1, "", "CompareIsotxsLibraries"]], "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries": [[230, 3, 1, "", "addOptions"], [230, 3, 1, "", "invoke"], [230, 4, 1, "", "name"], [230, 4, 1, "", "settingsArgument"]], "armi.physics.neutronics.energyGroups": [[231, 6, 1, "", "GROUP_STRUCTURE"], [231, 1, 1, "", "getFastFluxGroupCutoff"], [231, 1, 1, "", "getGroupStructure"], [231, 1, 1, "", "getGroupStructureType"]], "armi.physics.neutronics.fissionProductModel": [[233, 0, 0, "-", "fissionProductModel"], [234, 0, 0, "-", "fissionProductModelSettings"], [235, 0, 0, "-", "lumpedFissionProduct"], [236, 0, 0, "-", "tests"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel": [[233, 2, 1, "", "FissionProductModel"], [233, 1, 1, "", "describeInterfaces"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel": [[233, 3, 1, "", "getAllFissionProductNames"], [233, 3, 1, "", "getGlobalLumpedFissionProducts"], [233, 3, 1, "", "interactBOC"], [233, 3, 1, "", "interactBOL"], [233, 3, 1, "", "interactDistributeState"], [233, 4, 1, "", "name"], [233, 3, 1, "", "removeFissionGasesFromBlocks"], [233, 3, 1, "", "setAllBlockLFPs"], [233, 3, 1, "", "setAllComponentFissionProducts"], [233, 3, 1, "", "setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings": [[234, 1, 1, "", "defineSettings"], [234, 1, 1, "", "getFissionProductModelSettingValidators"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct": [[235, 2, 1, "", "FissionProductDefinitionFile"], [235, 2, 1, "", "LumpedFissionProduct"], [235, 2, 1, "", "LumpedFissionProductCollection"], [235, 1, 1, "", "isGas"], [235, 1, 1, "", "lumpedFissionProductFactory"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile": [[235, 3, 1, "", "createLFPsFromFile"], [235, 3, 1, "", "createSingleLFPFromFile"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct": [[235, 3, 1, "", "duplicate"], [235, 3, 1, "", "getGaseousYieldFraction"], [235, 3, 1, "", "getMassFrac"], [235, 3, 1, "", "getMassFracDenom"], [235, 3, 1, "", "getMassFracs"], [235, 3, 1, "", "getTotalYield"], [235, 3, 1, "", "items"], [235, 3, 1, "", "keys"], [235, 3, 1, "", "printDensities"], [235, 3, 1, "", "values"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection": [[235, 3, 1, "", "duplicate"], [235, 3, 1, "", "getAllFissionProductNames"], [235, 3, 1, "", "getAllFissionProductNuclideBases"], [235, 3, 1, "", "getLumpedFissionProductNames"], [235, 3, 1, "", "getMassFrac"], [235, 3, 1, "", "getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests": [[237, 0, 0, "-", "test_fissionProductModel"], [238, 0, 0, "-", "test_lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel": [[237, 2, 1, "", "TestFissionProductModelExplicitMC2Library"], [237, 2, 1, "", "TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library": [[237, 3, 1, "", "test_nuclideFlags"], [237, 3, 1, "", "test_nuclidesInModelAllDepletableBlocks"], [237, 3, 1, "", "test_nuclidesInModelFuel"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts": [[237, 3, 1, "", "test_fpApplication"], [237, 3, 1, "", "test_getAllFissionProductNames"], [237, 3, 1, "", "test_loadGlobalLFPsFromFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct": [[238, 2, 1, "", "TestFissionProductDefinitionFile"], [238, 2, 1, "", "TestLumpedFissionProduct"], [238, 2, 1, "", "TestLumpedFissionProductCollection"], [238, 2, 1, "", "TestLumpedFissionProductsExplicit"], [238, 2, 1, "", "TestLumpedFissionProductsFromReferenceFile"], [238, 2, 1, "", "TestMo99LFP"], [238, 1, 1, "", "getDummyLFPFile"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile": [[238, 3, 1, "", "test_createLFPs"], [238, 3, 1, "", "test_createReferenceLFPs"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct": [[238, 3, 1, "", "test_gaseousYieldFraction"], [238, 3, 1, "", "test_getYield"], [238, 3, 1, "", "test_isGas"], [238, 3, 1, "", "test_printDensities"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection": [[238, 3, 1, "", "test_duplicate"], [238, 3, 1, "", "test_getAllFissionProductNames"], [238, 3, 1, "", "test_getAllFissionProductNuclideBases"], [238, 3, 1, "", "test_getMassFrac"], [238, 3, 1, "", "test_getNumberDensities"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit": [[238, 3, 1, "", "test_explicitFissionProducts"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile": [[238, 3, 1, "", "test_fissionProductYields"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP": [[238, 3, 1, "", "test_getAllFissionProductNames"]], "armi.physics.neutronics.globalFlux": [[240, 0, 0, "-", "globalFluxInterface"], [241, 0, 0, "-", "tests"]], "armi.physics.neutronics.globalFlux.globalFluxInterface": [[240, 2, 1, "", "DoseResultsMapper"], [240, 2, 1, "", "GlobalFluxExecuter"], [240, 2, 1, "", "GlobalFluxInterface"], [240, 2, 1, "", "GlobalFluxInterfaceUsingExecuters"], [240, 2, 1, "", "GlobalFluxOptions"], [240, 2, 1, "", "GlobalFluxResultMapper"], [240, 1, 1, "", "calcReactionRates"], [240, 1, 1, "", "computeDpaRate"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper": [[240, 3, 1, "", "apply"], [240, 3, 1, "", "updateCycleDoseParams"], [240, 3, 1, "", "updateFluenceAndDpa"], [240, 3, 1, "", "updateLoadpadDose"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter": [[240, 3, 1, "", "edgeAssembliesAreNeeded"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface": [[240, 3, 1, "", "calculateKeff"], [240, 4, 1, "", "function"], [240, 3, 1, "", "getHistoryParams"], [240, 3, 1, "", "getIOFileNames"], [240, 3, 1, "", "interactBOC"], [240, 3, 1, "", "interactCoupled"], [240, 3, 1, "", "interactEOC"], [240, 3, 1, "", "interactEveryNode"], [240, 4, 1, "", "name"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters": [[240, 3, 1, "", "calculateKeff"], [240, 3, 1, "", "getExecuter"], [240, 3, 1, "", "getExecuterCls"], [240, 3, 1, "", "getExecuterOptions"], [240, 3, 1, "", "getLabel"], [240, 3, 1, "", "getOptionsCls"], [240, 3, 1, "", "getTightCouplingValue"], [240, 3, 1, "", "interactCoupled"], [240, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions": [[240, 3, 1, "", "fromReactor"], [240, 3, 1, "", "fromUserSettings"]], "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper": [[240, 3, 1, "", "clearFlux"], [240, 3, 1, "", "getBurnupPeakingFactor"], [240, 3, 1, "", "getDpaXs"], [240, 3, 1, "", "getKeff"], [240, 3, 1, "", "updateDpaRate"], [240, 3, 1, "", "updateMaxDpaParams"]], "armi.physics.neutronics.globalFlux.tests": [[242, 0, 0, "-", "test_globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface": [[242, 2, 1, "", "MockCore"], [242, 2, 1, "", "MockCoreParams"], [242, 2, 1, "", "MockGlobalFluxExecuter"], [242, 2, 1, "", "MockGlobalFluxInterface"], [242, 2, 1, "", "MockGlobalFluxWithExecuters"], [242, 2, 1, "", "MockGlobalFluxWithExecutersNonUniform"], [242, 2, 1, "", "MockReactor"], [242, 2, 1, "", "MockReactorParams"], [242, 2, 1, "", "TestGlobalFluxInterface"], [242, 2, 1, "", "TestGlobalFluxInterfaceWithExecuters"], [242, 2, 1, "", "TestGlobalFluxInterfaceWithExecutersNonUniform"], [242, 2, 1, "", "TestGlobalFluxOptions"], [242, 2, 1, "", "TestGlobalFluxResultMapper"], [242, 2, 1, "", "TestGlobalFluxUtils"], [242, 1, 1, "", "applyDummyFlux"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface": [[242, 3, 1, "", "interactBOC"], [242, 3, 1, "", "interactEveryNode"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters": [[242, 3, 1, "", "getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform": [[242, 3, 1, "", "getExecuterOptions"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface": [[242, 3, 1, "", "test_checkEnergyBalance"], [242, 3, 1, "", "test_getHistoryParams"], [242, 3, 1, "", "test_getIOFileNames"], [242, 3, 1, "", "test_interaction"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters": [[242, 3, 1, "", "test_calculateKeff"], [242, 3, 1, "", "test_executerInteraction"], [242, 3, 1, "", "test_getExecuterCls"], [242, 3, 1, "", "test_getTightCouplingValue"], [242, 3, 1, "", "test_setTightCouplingDefaults"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform": [[242, 3, 1, "", "test_calculateKeff"], [242, 3, 1, "", "test_executerInteractionNonUniformAssems"], [242, 3, 1, "", "test_getExecuterCls"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions": [[242, 3, 1, "", "test_readFromReactors"], [242, 3, 1, "", "test_readFromSettings"], [242, 3, 1, "", "test_savePhysicsFiles"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper": [[242, 3, 1, "", "test_getBurnupPeakingFactor"], [242, 3, 1, "", "test_getBurnupPeakingFactorZero"], [242, 3, 1, "", "test_getDpaXs"], [242, 3, 1, "", "test_mapper"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils": [[242, 3, 1, "", "test_calcReactionRates"]], "armi.physics.neutronics.isotopicDepletion": [[244, 0, 0, "-", "crossSectionTable"], [245, 0, 0, "-", "isotopicDepletionInterface"]], "armi.physics.neutronics.isotopicDepletion.crossSectionTable": [[244, 2, 1, "", "CrossSectionTable"], [244, 1, 1, "", "makeReactionRateTable"]], "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable": [[244, 3, 1, "", "add"], [244, 3, 1, "", "addMultiGroupXS"], [244, 3, 1, "", "getName"], [244, 3, 1, "", "getXsecTable"], [244, 3, 1, "", "hasValues"], [244, 4, 1, "", "rateTypes"], [244, 3, 1, "", "setName"]], "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface": [[245, 2, 1, "", "AbstractIsotopicDepleter"], [245, 2, 1, "", "AbstractIsotopicDepletionReader"], [245, 2, 1, "", "Csrc"], [245, 1, 1, "", "isDepletable"], [245, 1, 1, "", "makeXsecTable"]], "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter": [[245, 3, 1, "", "addToDeplete"], [245, 4, 1, "", "function"], [245, 3, 1, "", "getToDeplete"], [245, 4, 1, "", "name"], [245, 3, 1, "", "run"], [245, 3, 1, "", "setToDeplete"]], "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepletionReader": [[245, 3, 1, "", "read"]], "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.Csrc": [[245, 3, 1, "", "getChemicalVector"], [245, 3, 1, "", "setChemicalVector"], [245, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics": [[247, 0, 0, "-", "latticePhysicsInterface"], [248, 0, 0, "-", "latticePhysicsWriter"], [249, 0, 0, "-", "tests"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface": [[247, 2, 1, "", "LatticePhysicsInterface"], [247, 1, 1, "", "setBlockNeutronVelocities"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface": [[247, 3, 1, "", "clearXS"], [247, 3, 1, "", "computeCrossSections"], [247, 4, 1, "", "function"], [247, 3, 1, "", "generateLatticePhysicsInputs"], [247, 3, 1, "", "getReader"], [247, 3, 1, "", "getRepresentativeBlocks"], [247, 3, 1, "", "getWriters"], [247, 3, 1, "", "interactBOC"], [247, 3, 1, "", "interactBOL"], [247, 3, 1, "", "interactCoupled"], [247, 3, 1, "", "interactEOC"], [247, 3, 1, "", "interactEveryNode"], [247, 3, 1, "", "makeCycleXSFilesAsBaseFiles"], [247, 3, 1, "", "readExistingXSLibraries"], [247, 3, 1, "", "updatePhysicsCouplingControl"], [247, 3, 1, "", "updateXSLibrary"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter": [[248, 2, 1, "", "LatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter": [[248, 4, 1, "", "COOLANT_CATEGORY"], [248, 4, 1, "", "DEPLETABLE"], [248, 4, 1, "", "FISSION_PRODUCT_CATEGORY"], [248, 4, 1, "", "FUEL_CATEGORY"], [248, 4, 1, "", "REPRESENTED"], [248, 4, 1, "", "STRUCTURE_CATEGORY"], [248, 4, 1, "", "UNDEPLETABLE"], [248, 4, 1, "", "UNREPRESENTED"], [248, 4, 1, "", "UNUSED_CATEGORY"], [248, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests": [[250, 0, 0, "-", "test_latticeInterface"], [251, 0, 0, "-", "test_latticeWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface": [[250, 2, 1, "", "LatticeInterfaceTester"], [250, 2, 1, "", "LatticeInterfaceTesterLibFalse"], [250, 2, 1, "", "TestLatticePhysicsInterface"], [250, 2, 1, "", "TestLatticePhysicsInterfaceBase"], [250, 2, 1, "", "TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester": [[250, 3, 1, "", "readExistingXSLibraries"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface": [[250, 3, 1, "", "test_LatticePhysicsInterface"], [250, 3, 1, "", "test_interactAll"], [250, 3, 1, "", "test_interactBOC"], [250, 3, 1, "", "test_interactBOL"], [250, 3, 1, "", "test_interactEveryNode"], [250, 3, 1, "", "test_interactEveryNodeAll"], [250, 3, 1, "", "test_interactEveryNodeFirstCoupled"], [250, 3, 1, "", "test_interactFirstCoupledIteration"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation": [[250, 3, 1, "", "test_libCreation_GenXS"], [250, 3, 1, "", "test_libCreation_GenXS_2"], [250, 3, 1, "", "test_libCreation_GenXS_3"], [250, 3, 1, "", "test_libCreation_NoGenXS"], [250, 3, 1, "", "test_libCreation_NoGenXS_2"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter": [[251, 2, 1, "", "FakeLatticePhysicsWriter"], [251, 2, 1, "", "TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter": [[251, 3, 1, "", "write"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter": [[251, 3, 1, "", "test_getAllNuclidesByTemperatureInC"], [251, 3, 1, "", "test_getAllNuclidesByTemperatureInCExplicitFissionProducts"], [251, 3, 1, "", "test_getAllNuclidesByTemperatureInCNone"], [251, 3, 1, "", "test_getAvgNuclideTemperatureInC"], [251, 3, 1, "", "test_getDetailedFPDensities"], [251, 3, 1, "", "test_getDetailedFissionProducts"], [251, 3, 1, "", "test_getDetailedFissionProductsPass"], [251, 3, 1, "", "test_getDriverBlock"], [251, 3, 1, "", "test_getFuelTemperature"], [251, 3, 1, "", "test_isCriticalBucklingSearchActive"], [251, 3, 1, "", "test_isGammaXSGenerationEnabled"], [251, 3, 1, "", "test_isSourceDriven"], [251, 3, 1, "", "test_latticePhysicsWriter"], [251, 3, 1, "", "test_writeTitle"]], "armi.physics.neutronics.macroXSGenerationInterface": [[252, 2, 1, "", "MacroXSGenerationInterface"], [252, 2, 1, "", "MacroXSGenerator"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface": [[252, 3, 1, "", "buildMacros"], [252, 4, 1, "", "name"]], "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator": [[252, 3, 1, "", "invokeHook"]], "armi.physics.neutronics.parameters": [[253, 1, 1, "", "getNeutronicsParameterDefinitions"]], "armi.physics.neutronics.reports": [[254, 6, 1, "", "PD_PLOT"], [254, 1, 1, "", "generateLinePlot"], [254, 1, 1, "", "insertInitialCoreFuelAssem"], [254, 1, 1, "", "insertNeutronicsBOLContent"], [254, 1, 1, "", "insertNeutronicsReport"], [254, 1, 1, "", "neutronicsPlotting"]], "armi.physics.neutronics.settings": [[255, 1, 1, "", "defineSettings"], [255, 1, 1, "", "getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[257, 0, 0, "-", "test_crossSectionManager"], [258, 0, 0, "-", "test_crossSectionSettings"], [259, 0, 0, "-", "test_crossSectionTable"], [260, 0, 0, "-", "test_energyGroups"], [261, 0, 0, "-", "test_macroXSGenerationInterface"], [262, 0, 0, "-", "test_neutronicsPlugin"]], "armi.physics.neutronics.tests.test_crossSectionManager": [[257, 2, 1, "", "TestBlockCollection"], [257, 2, 1, "", "TestBlockCollectionAverage"], [257, 2, 1, "", "TestBlockCollectionComponentAverage"], [257, 2, 1, "", "TestBlockCollectionComponentAverage1DCylinder"], [257, 2, 1, "", "TestBlockCollectionFluxWeightedAverage"], [257, 2, 1, "", "TestBlockCollectionMedian"], [257, 2, 1, "", "TestXSNumberConverters"], [257, 2, 1, "", "Test_CrossSectionGroupManager"], [257, 1, 1, "", "makeBlocks"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection": [[257, 3, 1, "", "test_add"], [257, 3, 1, "", "test_getBlocksInGroup"], [257, 3, 1, "", "test_is_pickleable"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage": [[257, 3, 1, "", "test_createRepresentativeBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage": [[257, 3, 1, "", "test_ComponentAverageRepBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder": [[257, 3, 1, "", "test_ComponentAverage1DCylinder"], [257, 3, 1, "", "test_checkComponentConsistency"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage": [[257, 3, 1, "", "test_createRepresentativeBlock"], [257, 3, 1, "", "test_invalidWeights"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian": [[257, 3, 1, "", "test_createRepresentativeBlock"]], "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters": [[257, 3, 1, "", "test_conversion"], [257, 3, 1, "", "test_conversion_2digit"]], "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager": [[257, 3, 1, "", "test_addXsGroupsFromBlocks"], [257, 3, 1, "", "test_calcWeightedBurnup"], [257, 3, 1, "", "test_copyPregeneratedFiles"], [257, 3, 1, "", "test_createRepresentativeBlocksUsingExistingBlocks"], [257, 3, 1, "", "test_getNextAvailableXsType"], [257, 3, 1, "", "test_getRepresentativeBlocks"], [257, 3, 1, "", "test_interactAllCoupled"], [257, 3, 1, "", "test_interactBOC"], [257, 3, 1, "", "test_interactBOL"], [257, 3, 1, "", "test_interactEveryNode"], [257, 3, 1, "", "test_interactFirstCoupledIteration"], [257, 3, 1, "", "test_setBuGroupBounds"], [257, 3, 1, "", "test_updateBurnupGroups"]], "armi.physics.neutronics.tests.test_crossSectionSettings": [[258, 2, 1, "", "TestCrossSectionSettings"], [258, 2, 1, "", "Test_XSSettings"]], "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings": [[258, 3, 1, "", "test_badCrossSections"], [258, 3, 1, "", "test_crossSections"], [258, 3, 1, "", "test_homogeneousXsDefaultSettingAssignment"], [258, 3, 1, "", "test_optionalKey"], [258, 3, 1, "", "test_pregeneratedCrossSections"], [258, 3, 1, "", "test_pregeneratedFluxInputs"], [258, 3, 1, "", "test_prioritization"], [258, 3, 1, "", "test_setDefaultSettingsByLowestBuGroupHomogeneous"], [258, 3, 1, "", "test_setDefaultSettingsByLowestBuGroupOneDimensional"]], "armi.physics.neutronics.tests.test_crossSectionSettings.Test_XSSettings": [[258, 3, 1, "", "test_caseSettings"], [258, 3, 1, "", "test_csBlockRepresentation"], [258, 3, 1, "", "test_csBlockRepresentationFileLocation"], [258, 3, 1, "", "test_xsSettingsSetDefault"], [258, 3, 1, "", "test_yamlIO"]], "armi.physics.neutronics.tests.test_crossSectionTable": [[259, 2, 1, "", "TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable": [[259, 3, 1, "", "test_isotopicDepletionInterface"], [259, 3, 1, "", "test_makeTable"]], "armi.physics.neutronics.tests.test_energyGroups": [[260, 2, 1, "", "TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups": [[260, 3, 1, "", "test_consistenciesBetweenGroupStructureAndGroupStructureType"], [260, 3, 1, "", "test_invalidGroupStructureType"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface": [[261, 2, 1, "", "TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface": [[261, 3, 1, "", "test_macroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_neutronicsPlugin": [[262, 2, 1, "", "NeutronicsReactorTests"], [262, 2, 1, "", "Test_NeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests": [[262, 3, 1, "", "test_kineticsParameterAssignment"], [262, 3, 1, "", "test_neutronicsSettingsValidators"]], "armi.physics.neutronics.tests.test_neutronicsPlugin.Test_NeutronicsPlugin": [[262, 4, 1, "", "plugin"], [262, 3, 1, "", "test_customSettingObjectIO"], [262, 3, 1, "", "test_customSettingRoundTrip"], [262, 3, 1, "", "test_neutronicsSettingsLoaded"]], "armi.physics.safety": [[263, 2, 1, "", "SafetyPlugin"], [264, 0, 0, "-", "settings"]], "armi.physics.safety.SafetyPlugin": [[263, 3, 1, "", "defineSettings"]], "armi.physics.safety.settings": [[264, 1, 1, "", "defineSettings"]], "armi.physics.tests": [[266, 0, 0, "-", "test_executers"]], "armi.physics.tests.test_executers": [[266, 2, 1, "", "MockCore"], [266, 2, 1, "", "MockCoreParams"], [266, 2, 1, "", "MockReactor"], [266, 2, 1, "", "MockReactorParams"], [266, 2, 1, "", "TestExecuters"], [266, 2, 1, "", "TestExecutionOptions"]], "armi.physics.tests.test_executers.TestExecuters": [[266, 3, 1, "", "test_collectInputsAndOutputs"], [266, 3, 1, "", "test_updateRunDir"]], "armi.physics.tests.test_executers.TestExecutionOptions": [[266, 3, 1, "", "test_runningDirectoryPath"]], "armi.physics.thermalHydraulics": [[268, 0, 0, "-", "const"], [269, 0, 0, "-", "parameters"], [270, 0, 0, "-", "plugin"], [271, 0, 0, "-", "settings"]], "armi.physics.thermalHydraulics.parameters": [[269, 1, 1, "", "getParameterDefinitions"]], "armi.physics.thermalHydraulics.plugin": [[270, 2, 1, "", "ThermalHydraulicsPlugin"]], "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin": [[270, 3, 1, "", "afterConstructionOfAssemblies"], [270, 3, 1, "", "defineParameters"], [270, 3, 1, "", "defineSettings"], [270, 3, 1, "", "defineSettingsValidators"], [270, 3, 1, "", "exposeInterfaces"]], "armi.physics.thermalHydraulics.settings": [[271, 1, 1, "", "defineSettings"], [271, 1, 1, "", "defineValidators"]], "armi.pluginManager": [[272, 2, 1, "", "ArmiPluginManager"]], "armi.pluginManager.ArmiPluginManager": [[272, 5, 1, "", "counter"], [272, 3, 1, "", "register"], [272, 3, 1, "", "unregister"]], "armi.plugins": [[273, 2, 1, "", "ArmiPlugin"], [273, 7, 1, "", "PluginError"], [273, 2, 1, "", "UserPlugin"], [273, 1, 1, "", "collectInterfaceDescriptions"], [273, 1, 1, "", "getNewPluginManager"]], "armi.plugins.ArmiPlugin": [[273, 3, 1, "", "afterConstructionOfAssemblies"], [273, 3, 1, "", "defineAssemblyTypes"], [273, 3, 1, "", "defineBlockTypes"], [273, 3, 1, "", "defineBlueprintsSections"], [273, 3, 1, "", "defineCaseDependencies"], [273, 3, 1, "", "defineEntryPoints"], [273, 3, 1, "", "defineFlags"], [273, 3, 1, "", "defineGuiWidgets"], [273, 3, 1, "", "defineParameterRenames"], [273, 3, 1, "", "defineParameters"], [273, 3, 1, "", "defineSettings"], [273, 3, 1, "", "defineSettingsValidators"], [273, 3, 1, "", "defineSystemBuilders"], [273, 3, 1, "", "exposeInterfaces"], [273, 3, 1, "", "getOperatorClassFromRunType"], [273, 3, 1, "", "getReportContents"], [273, 3, 1, "", "mpiActionRequiresReset"], [273, 3, 1, "", "onProcessCoreLoading"]], "armi.plugins.UserPlugin": [[273, 3, 1, "", "defineParameterRenames"], [273, 3, 1, "", "defineParameters"], [273, 3, 1, "", "defineSettings"], [273, 3, 1, "", "defineSettingsValidators"]], "armi.reactor": [[274, 2, 1, "", "ReactorPlugin"], [275, 0, 0, "-", "assemblies"], [276, 0, 0, "-", "assemblyLists"], [277, 0, 0, "-", "assemblyParameters"], [278, 0, 0, "-", "blockParameters"], [279, 0, 0, "-", "blocks"], [280, 0, 0, "-", "blueprints"], [296, 0, 0, "-", "components"], [302, 0, 0, "-", "composites"], [303, 0, 0, "-", "converters"], [319, 0, 0, "-", "flags"], [320, 0, 0, "-", "geometry"], [321, 0, 0, "-", "grids"], [330, 0, 0, "-", "parameters"], [335, 0, 0, "-", "reactorParameters"], [336, 0, 0, "-", "reactors"], [337, 0, 0, "-", "systemLayoutInput"], [338, 0, 0, "-", "tests"], [349, 0, 0, "-", "zones"]], "armi.reactor.ReactorPlugin": [[274, 3, 1, "", "defineAssemblyTypes"], [274, 3, 1, "", "defineBlockTypes"], [274, 3, 1, "", "defineSystemBuilders"]], "armi.reactor.assemblies": [[275, 2, 1, "", "Assembly"], [275, 2, 1, "", "CartesianAssembly"], [275, 2, 1, "", "HexAssembly"], [275, 2, 1, "", "RZAssembly"], [275, 2, 1, "", "ThRZAssembly"]], "armi.reactor.assemblies.Assembly": [[275, 4, 1, "", "DATABASE"], [275, 4, 1, "", "LOAD_QUEUE"], [275, 4, 1, "", "NOT_IN_CORE"], [275, 4, 1, "", "SPENT_FUEL_POOL"], [275, 3, 1, "", "add"], [275, 3, 1, "", "adjustResolution"], [275, 3, 1, "", "calculateZCoords"], [275, 3, 1, "", "coords"], [275, 3, 1, "", "countBlocksWithFlags"], [275, 3, 1, "", "doubleResolution"], [275, 3, 1, "", "dump"], [275, 3, 1, "", "getAge"], [275, 3, 1, "", "getArea"], [275, 3, 1, "", "getAveragePlenumTemperature"], [275, 3, 1, "", "getAxialMesh"], [275, 3, 1, "", "getBIndexFromZIndex"], [275, 3, 1, "", "getBlockAtElevation"], [275, 3, 1, "", "getBlocks"], [275, 3, 1, "", "getBlocksAndZ"], [275, 3, 1, "", "getBlocksBetweenElevations"], [275, 3, 1, "", "getDim"], [275, 3, 1, "", "getElevationBoundariesByBlockType"], [275, 3, 1, "", "getElevationsMatchingParamValue"], [275, 3, 1, "", "getFirstBlock"], [275, 3, 1, "", "getFirstBlockByType"], [275, 3, 1, "", "getHeight"], [275, 3, 1, "", "getLocation"], [275, 3, 1, "", "getNum"], [275, 3, 1, "", "getParamOfZFunction"], [275, 3, 1, "", "getParamValuesAtZ"], [275, 3, 1, "", "getPinPlenumVolumeInCubicMeters"], [275, 3, 1, "", "getReactiveHeight"], [275, 3, 1, "", "getSymmetryFactor"], [275, 3, 1, "", "getTotalHeight"], [275, 3, 1, "", "getVolume"], [275, 3, 1, "", "hasContinuousCoolantChannel"], [275, 3, 1, "", "insert"], [275, 3, 1, "", "makeAxialSnapList"], [275, 3, 1, "", "makeNameFromAssemNum"], [275, 3, 1, "", "makeUnique"], [275, 3, 1, "", "moveTo"], [275, 4, 1, "", "pDefs"], [275, 4, 1, "", "paramCollectionType"], [275, 3, 1, "", "reestablishBlockOrder"], [275, 3, 1, "", "renameBlocksAccordingToAssemblyNum"], [275, 3, 1, "", "renumber"], [275, 3, 1, "", "rotate"], [275, 3, 1, "", "rotatePins"], [275, 3, 1, "", "setBlockHeights"], [275, 3, 1, "", "setBlockMesh"]], "armi.reactor.assemblies.CartesianAssembly": [[275, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblies.HexAssembly": [[275, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblies.RZAssembly": [[275, 4, 1, "", "paramCollectionType"], [275, 3, 1, "", "radialInner"], [275, 3, 1, "", "radialOuter"], [275, 3, 1, "", "thetaInner"], [275, 3, 1, "", "thetaOuter"]], "armi.reactor.assemblies.ThRZAssembly": [[275, 4, 1, "", "paramCollectionType"]], "armi.reactor.assemblyLists": [[276, 2, 1, "", "AssemblyList"], [276, 2, 1, "", "AutoFiller"], [276, 2, 1, "", "RowMajorAutoFiller"], [276, 2, 1, "", "SpentFuelPool"]], "armi.reactor.assemblyLists.AssemblyList": [[276, 3, 1, "", "add"], [276, 3, 1, "", "count"], [276, 3, 1, "", "getAssembly"], [276, 4, 1, "", "paramCollectionType"], [276, 5, 1, "", "r"]], "armi.reactor.assemblyLists.AutoFiller": [[276, 3, 1, "", "assemblyAdded"], [276, 3, 1, "", "getNextLocation"]], "armi.reactor.assemblyLists.RowMajorAutoFiller": [[276, 3, 1, "", "assemblyAdded"], [276, 3, 1, "", "getNextLocation"]], "armi.reactor.assemblyLists.SpentFuelPool": [[276, 3, 1, "", "add"], [276, 3, 1, "", "normalizeNames"], [276, 4, 1, "", "paramCollectionType"], [276, 3, 1, "", "report"]], "armi.reactor.assemblyParameters": [[277, 1, 1, "", "getAssemblyParameterDefinitions"]], "armi.reactor.blockParameters": [[278, 1, 1, "", "getBlockParameterDefinitions"]], "armi.reactor.blocks": [[279, 2, 1, "", "Block"], [279, 2, 1, "", "CartesianBlock"], [279, 2, 1, "", "HexBlock"], [279, 2, 1, "", "ThRZBlock"]], "armi.reactor.blocks.Block": [[279, 4, 1, "", "PITCH_COMPONENT_TYPE"], [279, 4, 1, "", "PITCH_DIMENSION"], [279, 3, 1, "", "add"], [279, 3, 1, "", "adjustDensity"], [279, 3, 1, "", "adjustUEnrich"], [279, 3, 1, "", "autoCreateSpatialGrids"], [279, 3, 1, "", "breakFuelComponentsIntoIndividuals"], [279, 3, 1, "", "completeInitialLoading"], [279, 3, 1, "", "coords"], [279, 5, 1, "", "core"], [279, 3, 1, "", "getArea"], [279, 3, 1, "", "getBlocks"], [279, 3, 1, "", "getComponentAreaFrac"], [279, 3, 1, "", "getComponentsInLinkedOrder"], [279, 3, 1, "", "getComponentsThatAreLinkedTo"], [279, 3, 1, "", "getDim"], [279, 3, 1, "", "getDimensions"], [279, 3, 1, "", "getFlowAreaPerPin"], [279, 3, 1, "", "getHeight"], [279, 3, 1, "", "getHydraulicDiameter"], [279, 3, 1, "", "getIntegratedMgFlux"], [279, 3, 1, "", "getLargestComponent"], [279, 3, 1, "", "getLocation"], [279, 3, 1, "", "getLumpedFissionProductCollection"], [279, 3, 1, "", "getMaxArea"], [279, 3, 1, "", "getMaxVolume"], [279, 3, 1, "", "getMfp"], [279, 3, 1, "", "getMgFlux"], [279, 3, 1, "", "getMicroSuffix"], [279, 3, 1, "", "getNumPins"], [279, 3, 1, "", "getPinCenterFlatToFlat"], [279, 3, 1, "", "getPinCoordinates"], [279, 3, 1, "", "getPinPitch"], [279, 3, 1, "", "getPitch"], [279, 3, 1, "", "getPlenumPin"], [279, 3, 1, "", "getSmearDensity"], [279, 3, 1, "", "getSortedComponentsInsideOfComponent"], [279, 3, 1, "", "getSymmetryFactor"], [279, 3, 1, "", "getVolume"], [279, 3, 1, "", "getWettedPerimeter"], [279, 3, 1, "", "getWireWrapCladGap"], [279, 3, 1, "", "hasPinPitch"], [279, 3, 1, "", "isOnWhichSymmetryLine"], [279, 3, 1, "", "isPlenumPin"], [279, 3, 1, "", "makeName"], [279, 3, 1, "", "mergeWithBlock"], [279, 4, 1, "", "pDefs"], [279, 4, 1, "", "paramCollectionType"], [279, 3, 1, "", "plotFlux"], [279, 5, 1, "", "r"], [279, 3, 1, "", "remove"], [279, 3, 1, "", "removeAll"], [279, 3, 1, "", "replaceBlockWithBlock"], [279, 3, 1, "", "rotate"], [279, 3, 1, "", "setAreaFractionsReport"], [279, 3, 1, "", "setAxialExpTargetComp"], [279, 3, 1, "", "setB10VolParam"], [279, 3, 1, "", "setBuLimitInfo"], [279, 3, 1, "", "setHeight"], [279, 3, 1, "", "setPinMgFluxes"], [279, 3, 1, "", "setPitch"], [279, 4, 1, "", "uniqID"], [279, 3, 1, "", "updateComponentDims"], [279, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.CartesianBlock": [[279, 4, 1, "", "PITCH_COMPONENT_TYPE"], [279, 4, 1, "", "PITCH_DIMENSION"], [279, 3, 1, "", "getMaxArea"], [279, 3, 1, "", "getPinCenterFlatToFlat"], [279, 3, 1, "", "getSymmetryFactor"], [279, 4, 1, "", "paramCollectionType"], [279, 3, 1, "", "setPitch"]], "armi.reactor.blocks.HexBlock": [[279, 4, 1, "", "PITCH_COMPONENT_TYPE"], [279, 3, 1, "", "autoCreateSpatialGrids"], [279, 3, 1, "", "coords"], [279, 3, 1, "", "getDuctIP"], [279, 3, 1, "", "getDuctOP"], [279, 3, 1, "", "getFlowArea"], [279, 3, 1, "", "getHydraulicDiameter"], [279, 3, 1, "", "getMaxArea"], [279, 3, 1, "", "getPinCenterFlatToFlat"], [279, 3, 1, "", "getPinPitch"], [279, 3, 1, "", "getPinToDuctGap"], [279, 3, 1, "", "getRotationNum"], [279, 3, 1, "", "getSymmetryFactor"], [279, 3, 1, "", "getWettedPerimeter"], [279, 3, 1, "", "hasPinPitch"], [279, 3, 1, "", "initializePinLocations"], [279, 4, 1, "", "paramCollectionType"], [279, 3, 1, "", "rotate"], [279, 3, 1, "", "rotatePins"], [279, 3, 1, "", "setPinPowers"], [279, 3, 1, "", "setRotationNum"], [279, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blocks.ThRZBlock": [[279, 3, 1, "", "axialInner"], [279, 3, 1, "", "axialOuter"], [279, 3, 1, "", "getMaxArea"], [279, 4, 1, "", "paramCollectionType"], [279, 3, 1, "", "radialInner"], [279, 3, 1, "", "radialOuter"], [279, 3, 1, "", "thetaInner"], [279, 3, 1, "", "thetaOuter"], [279, 3, 1, "", "verifyBlockDims"]], "armi.reactor.blueprints": [[280, 2, 1, "", "Blueprints"], [281, 0, 0, "-", "assemblyBlueprint"], [282, 0, 0, "-", "blockBlueprint"], [283, 0, 0, "-", "componentBlueprint"], [284, 0, 0, "-", "gridBlueprint"], [285, 0, 0, "-", "isotopicOptions"], [280, 1, 1, "", "loadFromCs"], [280, 1, 1, "", "migrate"], [286, 0, 0, "-", "reactorBlueprint"], [287, 0, 0, "-", "tests"]], "armi.reactor.blueprints.Blueprints": [[280, 3, 1, "", "addDefaultSFP"], [280, 4, 1, "", "attributes"], [280, 3, 1, "", "constructAssem"], [280, 3, 1, "", "load"], [280, 3, 1, "", "migrate"]], "armi.reactor.blueprints.assemblyBlueprint": [[281, 2, 1, "", "AssemblyBlueprint"], [281, 2, 1, "", "AssemblyKeyedList"], [281, 2, 1, "", "ByComponentModifications"], [281, 2, 1, "", "MaterialModifications"], [281, 2, 1, "", "Modifications"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint": [[281, 4, 1, "", "attributes"], [281, 3, 1, "", "construct"], [281, 3, 1, "", "getAssemClass"]], "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList": [[281, 4, 1, "", "attributes"], [281, 5, 1, "", "bySpecifier"], [281, 4, 1, "", "item_type"]], "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications": [[281, 4, 1, "", "attributes"], [281, 4, 1, "", "key_type"], [281, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications": [[281, 4, 1, "", "attributes"], [281, 4, 1, "", "key_type"], [281, 4, 1, "", "value_type"]], "armi.reactor.blueprints.assemblyBlueprint.Modifications": [[281, 4, 1, "", "attributes"], [281, 4, 1, "", "key_type"], [281, 4, 1, "", "value_type"]], "armi.reactor.blueprints.blockBlueprint": [[282, 2, 1, "", "BlockBlueprint"], [282, 2, 1, "", "BlockKeyedList"], [282, 2, 1, "", "BlockList"]], "armi.reactor.blueprints.blockBlueprint.BlockBlueprint": [[282, 4, 1, "", "attributes"], [282, 3, 1, "", "construct"], [282, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockKeyedList": [[282, 4, 1, "", "attributes"], [282, 4, 1, "", "item_type"]], "armi.reactor.blueprints.blockBlueprint.BlockList": [[282, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint": [[283, 2, 1, "", "ComponentBlueprint"], [283, 2, 1, "", "ComponentDimension"], [283, 2, 1, "", "ComponentGroup"], [283, 2, 1, "", "ComponentGroups"], [283, 2, 1, "", "ComponentKeyedList"], [283, 2, 1, "", "GroupedComponent"], [283, 1, 1, "", "expandElementals"], [283, 1, 1, "", "insertDepletableNuclideKeys"]], "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint": [[283, 4, 1, "", "attributes"], [283, 3, 1, "", "construct"]], "armi.reactor.blueprints.componentBlueprint.ComponentDimension": [[283, 4, 1, "", "attributes"], [283, 3, 1, "", "from_yaml"], [283, 3, 1, "", "to_yaml"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroup": [[283, 4, 1, "", "attributes"], [283, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentGroups": [[283, 4, 1, "", "attributes"], [283, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList": [[283, 4, 1, "", "attributes"], [283, 4, 1, "", "item_type"]], "armi.reactor.blueprints.componentBlueprint.GroupedComponent": [[283, 4, 1, "", "attributes"]], "armi.reactor.blueprints.gridBlueprint": [[284, 2, 1, "", "GridBlueprint"], [284, 2, 1, "", "Grids"], [284, 2, 1, "", "Triplet"], [284, 1, 1, "", "saveToStream"]], "armi.reactor.blueprints.gridBlueprint.GridBlueprint": [[284, 4, 1, "", "attributes"], [284, 3, 1, "", "construct"], [284, 3, 1, "", "expandToFull"], [284, 3, 1, "", "getLocators"], [284, 3, 1, "", "getMultiLocator"], [284, 5, 1, "", "readFromLatticeMap"]], "armi.reactor.blueprints.gridBlueprint.Grids": [[284, 4, 1, "", "attributes"], [284, 4, 1, "", "item_type"]], "armi.reactor.blueprints.gridBlueprint.Triplet": [[284, 4, 1, "", "attributes"]], "armi.reactor.blueprints.isotopicOptions": [[285, 2, 1, "", "CustomIsotopic"], [285, 2, 1, "", "CustomIsotopics"], [285, 2, 1, "", "NuclideFlag"], [285, 2, 1, "", "NuclideFlags"], [285, 1, 1, "", "autoUpdateNuclideFlags"], [285, 1, 1, "", "eleExpandInfoBasedOnCodeENDF"], [285, 1, 1, "", "genDefaultNucFlags"], [285, 1, 1, "", "getAllNuclideBasesByLibrary"], [285, 1, 1, "", "getDefaultNuclideFlags"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopic": [[285, 3, 1, "", "apply"], [285, 4, 1, "", "attributes"], [285, 5, 1, "", "density"], [285, 3, 1, "", "from_yaml"], [285, 3, 1, "", "from_yaml_key_val"], [285, 4, 1, "", "key_type"], [285, 4, 1, "", "value_type"]], "armi.reactor.blueprints.isotopicOptions.CustomIsotopics": [[285, 3, 1, "", "apply"], [285, 4, 1, "", "attributes"], [285, 4, 1, "", "item_type"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlag": [[285, 4, 1, "", "attributes"], [285, 3, 1, "", "fileAsActiveOrInert"]], "armi.reactor.blueprints.isotopicOptions.NuclideFlags": [[285, 4, 1, "", "attributes"], [285, 4, 1, "", "item_type"]], "armi.reactor.blueprints.reactorBlueprint": [[286, 2, 1, "", "SystemBlueprint"], [286, 2, 1, "", "Systems"], [286, 1, 1, "", "summarizeMaterialData"]], "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint": [[286, 4, 1, "", "attributes"], [286, 3, 1, "", "construct"]], "armi.reactor.blueprints.reactorBlueprint.Systems": [[286, 4, 1, "", "attributes"], [286, 4, 1, "", "item_type"]], "armi.reactor.blueprints.tests": [[288, 0, 0, "-", "test_assemblyBlueprints"], [289, 0, 0, "-", "test_blockBlueprints"], [290, 0, 0, "-", "test_blueprints"], [291, 0, 0, "-", "test_componentBlueprint"], [292, 0, 0, "-", "test_customIsotopics"], [293, 0, 0, "-", "test_gridBlueprints"], [294, 0, 0, "-", "test_materialModifications"], [295, 0, 0, "-", "test_reactorBlueprints"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints": [[288, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications": [[288, 3, 1, "", "loadCustomAssembly"], [288, 3, 1, "", "test_checkParamConsistency"], [288, 4, 1, "", "twoBlockInput_correct"], [288, 4, 1, "", "twoBlockInput_wrongHeights"], [288, 4, 1, "", "twoBlockInput_wrongMatMods"], [288, 4, 1, "", "twoBlockInput_wrongMeshPoints"], [288, 4, 1, "", "twoBlockInput_wrongXSTypes"]], "armi.reactor.blueprints.tests.test_blockBlueprints": [[289, 2, 1, "", "TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock": [[289, 3, 1, "", "test_blockLattice"], [289, 3, 1, "", "test_constructSpatialGrid"], [289, 3, 1, "", "test_densityConsistentWithComponentConstructor"], [289, 3, 1, "", "test_explicitFlags"], [289, 3, 1, "", "test_getLocatorsAtLatticePositions"], [289, 3, 1, "", "test_nonLatticeComponentHasRightMult"]], "armi.reactor.blueprints.tests.test_blueprints": [[290, 2, 1, "", "TestBlueprints"], [290, 2, 1, "", "TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints": [[290, 3, 1, "", "test_componentDimensions"], [290, 3, 1, "", "test_getAssemblyTypeBySpecifier"], [290, 3, 1, "", "test_nuclides"], [290, 3, 1, "", "test_specialIsotopicVectors"], [290, 3, 1, "", "test_traceNuclides"]], "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema": [[290, 3, 1, "", "test_assemblyParameters"], [290, 3, 1, "", "test_cladding_invalid"], [290, 3, 1, "", "test_componentGroupInput"], [290, 3, 1, "", "test_components"], [290, 3, 1, "", "test_customIsotopics"], [290, 3, 1, "", "test_merge"], [290, 3, 1, "", "test_noDuplicateKeysInYamlBlueprints"], [290, 3, 1, "", "test_nuclideFlags"], [290, 3, 1, "", "test_nuclidesMc2v2"], [290, 3, 1, "", "test_nuclidesMc2v3"], [290, 3, 1, "", "test_topLevelComponentInput"], [290, 3, 1, "", "test_withoutBlocks"]], "armi.reactor.blueprints.tests.test_componentBlueprint": [[291, 2, 1, "", "TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint": [[291, 4, 1, "", "componentString"], [291, 3, 1, "", "test_autoDepletable"], [291, 3, 1, "", "test_componentInitializationAmericiumCustomIsotopics"], [291, 3, 1, "", "test_componentInitializationControlCustomIsotopics"], [291, 3, 1, "", "test_componentInitializationIncompleteBurnChain"], [291, 3, 1, "", "test_componentInitializationThoriumBurnCustomIsotopics"], [291, 3, 1, "", "test_componentInitializationThoriumNoBurnCustomIsotopics"]], "armi.reactor.blueprints.tests.test_customIsotopics": [[292, 2, 1, "", "TestCustomIsotopics"], [292, 2, 1, "", "TestCustomIsotopics_ErrorConditions"], [292, 2, 1, "", "TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics": [[292, 3, 1, "", "test_expandedNatural"], [292, 3, 1, "", "test_massFractionsAreApplied"], [292, 3, 1, "", "test_numberDensities"], [292, 3, 1, "", "test_numberDensitiesAnchor"], [292, 3, 1, "", "test_numberFractions"], [292, 3, 1, "", "test_unmodified"], [292, 3, 1, "", "test_unrepresentedAreOnlyNatural"], [292, 4, 1, "", "yamlString"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions": [[292, 3, 1, "", "test_densityMustBePositive"], [292, 3, 1, "", "test_nonConformantElementName"], [292, 3, 1, "", "test_numberDensitiesCannotSpecifyDensity"]], "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion": [[292, 3, 1, "", "test_expandedNatural"], [292, 4, 1, "", "yamlString"]], "armi.reactor.blueprints.tests.test_gridBlueprints": [[293, 2, 1, "", "TestGridBlueprintsSection"], [293, 2, 1, "", "TestRZTGridBlueprint"], [293, 2, 1, "", "TestRoundTrip"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection": [[293, 3, 1, "", "test_simpleRead"], [293, 3, 1, "", "test_simpleReadLatticeMap"], [293, 3, 1, "", "test_simpleReadNoLatticeMap"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint": [[293, 3, 1, "", "test_construct"], [293, 3, 1, "", "test_geomFile"]], "armi.reactor.blueprints.tests.test_gridBlueprints.TestRoundTrip": [[293, 3, 1, "", "test_contents"], [293, 3, 1, "", "test_roundTrip"], [293, 3, 1, "", "test_tiny_map"]], "armi.reactor.blueprints.tests.test_materialModifications": [[294, 2, 1, "", "TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications": [[294, 4, 1, "", "boronInput"], [294, 3, 1, "", "loadUZrAssembly"], [294, 3, 1, "", "test_both_u235_zr_wt_frac_modification"], [294, 3, 1, "", "test_checkByComponentMaterialInput"], [294, 3, 1, "", "test_filterMaterialInput"], [294, 3, 1, "", "test_invalidMatModName"], [294, 3, 1, "", "test_invalid_component_modification"], [294, 3, 1, "", "test_matModsUpTheMRO"], [294, 3, 1, "", "test_noMaterialModifications"], [294, 3, 1, "", "test_u235_wt_frac_byComponent_modification1"], [294, 3, 1, "", "test_u235_wt_frac_byComponent_modification2"], [294, 3, 1, "", "test_u235_wt_frac_modification"], [294, 3, 1, "", "test_zr_wt_frac_modification"], [294, 4, 1, "", "uZrInput"]], "armi.reactor.blueprints.tests.test_reactorBlueprints": [[295, 2, 1, "", "TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints": [[295, 3, 1, "", "test_construct"], [295, 3, 1, "", "test_materialDataSummary"], [295, 3, 1, "", "test_simple_read"]], "armi.reactor.components": [[296, 2, 1, "", "DerivedShape"], [296, 2, 1, "", "NullComponent"], [296, 2, 1, "", "PositiveOrNegativeVolumeComponent"], [296, 2, 1, "", "UnshapedComponent"], [296, 2, 1, "", "UnshapedVolumetricComponent"], [296, 2, 1, "", "ZeroMassComponent"], [297, 0, 0, "-", "basicShapes"], [298, 0, 0, "-", "complexShapes"], [299, 0, 0, "-", "component"], [300, 0, 0, "-", "componentParameters"], [296, 1, 1, "", "factory"], [301, 0, 0, "-", "volumetricShapes"]], "armi.reactor.components.DerivedShape": [[296, 4, 1, "", "DIMENSION_NAMES"], [296, 4, 1, "", "INIT_SIGNATURE"], [296, 3, 1, "", "computeVolume"], [296, 3, 1, "", "getBoundingCircleOuterDiameter"], [296, 3, 1, "", "getComponentArea"], [296, 3, 1, "", "getVolume"], [296, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.NullComponent": [[296, 4, 1, "", "DIMENSION_NAMES"], [296, 4, 1, "", "INIT_SIGNATURE"], [296, 3, 1, "", "getBoundingCircleOuterDiameter"], [296, 3, 1, "", "getDimension"], [296, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.PositiveOrNegativeVolumeComponent": [[296, 4, 1, "", "DIMENSION_NAMES"], [296, 4, 1, "", "INIT_SIGNATURE"], [296, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedComponent": [[296, 4, 1, "", "DIMENSION_NAMES"], [296, 4, 1, "", "INIT_SIGNATURE"], [296, 3, 1, "", "fromComponent"], [296, 3, 1, "", "getBoundingCircleOuterDiameter"], [296, 3, 1, "", "getComponentArea"], [296, 4, 1, "", "pDefs"], [296, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.UnshapedVolumetricComponent": [[296, 4, 1, "", "DIMENSION_NAMES"], [296, 4, 1, "", "INIT_SIGNATURE"], [296, 3, 1, "", "getComponentArea"], [296, 3, 1, "", "getComponentVolume"], [296, 4, 1, "", "is3D"], [296, 4, 1, "", "paramCollectionType"], [296, 3, 1, "", "setVolume"]], "armi.reactor.components.ZeroMassComponent": [[296, 4, 1, "", "DIMENSION_NAMES"], [296, 4, 1, "", "INIT_SIGNATURE"], [296, 3, 1, "", "getNumberDensity"], [296, 4, 1, "", "paramCollectionType"], [296, 3, 1, "", "setNumberDensity"]], "armi.reactor.components.basicShapes": [[297, 2, 1, "", "Circle"], [297, 2, 1, "", "Hexagon"], [297, 2, 1, "", "Rectangle"], [297, 2, 1, "", "SolidRectangle"], [297, 2, 1, "", "Square"], [297, 2, 1, "", "Triangle"]], "armi.reactor.components.basicShapes.Circle": [[297, 4, 1, "", "DIMENSION_NAMES"], [297, 4, 1, "", "INIT_SIGNATURE"], [297, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [297, 3, 1, "", "getBoundingCircleOuterDiameter"], [297, 3, 1, "", "getCircleInnerDiameter"], [297, 3, 1, "", "getComponentArea"], [297, 4, 1, "", "is3D"], [297, 3, 1, "", "isEncapsulatedBy"], [297, 4, 1, "", "pDefs"], [297, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Hexagon": [[297, 4, 1, "", "DIMENSION_NAMES"], [297, 4, 1, "", "INIT_SIGNATURE"], [297, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [297, 3, 1, "", "getBoundingCircleOuterDiameter"], [297, 3, 1, "", "getCircleInnerDiameter"], [297, 3, 1, "", "getComponentArea"], [297, 3, 1, "", "getPerimeter"], [297, 3, 1, "", "getPitchData"], [297, 4, 1, "", "is3D"], [297, 4, 1, "", "pDefs"], [297, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Rectangle": [[297, 4, 1, "", "DIMENSION_NAMES"], [297, 4, 1, "", "INIT_SIGNATURE"], [297, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [297, 3, 1, "", "getBoundingCircleOuterDiameter"], [297, 3, 1, "", "getCircleInnerDiameter"], [297, 3, 1, "", "getComponentArea"], [297, 3, 1, "", "getPitchData"], [297, 4, 1, "", "is3D"], [297, 3, 1, "", "isLatticeComponent"], [297, 4, 1, "", "pDefs"], [297, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.SolidRectangle": [[297, 4, 1, "", "DIMENSION_NAMES"], [297, 4, 1, "", "INIT_SIGNATURE"], [297, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [297, 3, 1, "", "getComponentArea"], [297, 4, 1, "", "is3D"], [297, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Square": [[297, 4, 1, "", "DIMENSION_NAMES"], [297, 4, 1, "", "INIT_SIGNATURE"], [297, 3, 1, "", "getBoundingCircleOuterDiameter"], [297, 3, 1, "", "getCircleInnerDiameter"], [297, 3, 1, "", "getComponentArea"], [297, 3, 1, "", "getPitchData"], [297, 4, 1, "", "is3D"], [297, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.basicShapes.Triangle": [[297, 4, 1, "", "DIMENSION_NAMES"], [297, 4, 1, "", "INIT_SIGNATURE"], [297, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [297, 3, 1, "", "getComponentArea"], [297, 4, 1, "", "is3D"], [297, 4, 1, "", "pDefs"], [297, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes": [[298, 2, 1, "", "Helix"], [298, 2, 1, "", "HexHoledCircle"], [298, 2, 1, "", "HoledHexagon"], [298, 2, 1, "", "HoledRectangle"], [298, 2, 1, "", "HoledSquare"]], "armi.reactor.components.complexShapes.Helix": [[298, 4, 1, "", "DIMENSION_NAMES"], [298, 4, 1, "", "INIT_SIGNATURE"], [298, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [298, 3, 1, "", "getBoundingCircleOuterDiameter"], [298, 3, 1, "", "getCircleInnerDiameter"], [298, 3, 1, "", "getComponentArea"], [298, 4, 1, "", "is3D"], [298, 4, 1, "", "pDefs"], [298, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HexHoledCircle": [[298, 4, 1, "", "DIMENSION_NAMES"], [298, 4, 1, "", "INIT_SIGNATURE"], [298, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [298, 3, 1, "", "getCircleInnerDiameter"], [298, 3, 1, "", "getComponentArea"], [298, 4, 1, "", "pDefs"], [298, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledHexagon": [[298, 4, 1, "", "DIMENSION_NAMES"], [298, 4, 1, "", "INIT_SIGNATURE"], [298, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [298, 3, 1, "", "getCircleInnerDiameter"], [298, 3, 1, "", "getComponentArea"], [298, 4, 1, "", "pDefs"], [298, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledRectangle": [[298, 4, 1, "", "DIMENSION_NAMES"], [298, 4, 1, "", "INIT_SIGNATURE"], [298, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [298, 3, 1, "", "getCircleInnerDiameter"], [298, 3, 1, "", "getComponentArea"], [298, 4, 1, "", "pDefs"], [298, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.complexShapes.HoledSquare": [[298, 4, 1, "", "DIMENSION_NAMES"], [298, 4, 1, "", "INIT_SIGNATURE"], [298, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [298, 3, 1, "", "getCircleInnerDiameter"], [298, 3, 1, "", "getComponentArea"], [298, 4, 1, "", "pDefs"], [298, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.component": [[299, 2, 1, "", "Component"], [299, 2, 1, "", "ComponentType"], [299, 2, 1, "", "ShapedComponent"], [299, 1, 1, "", "componentTypeIsValid"]], "armi.reactor.components.component.Component": [[299, 4, 1, "", "DIMENSION_NAMES"], [299, 4, 1, "", "INIT_SIGNATURE"], [299, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [299, 3, 1, "", "adjustDensityForHeightExpansion"], [299, 3, 1, "", "adjustMassEnrichment"], [299, 3, 1, "", "applyMaterialMassFracsToNumberDensities"], [299, 3, 1, "", "backUp"], [299, 3, 1, "", "clearCache"], [299, 3, 1, "", "clearLinkedCache"], [299, 3, 1, "", "computeVolume"], [299, 3, 1, "", "containsSolidMaterial"], [299, 3, 1, "", "containsVoidMaterial"], [299, 3, 1, "", "density"], [299, 3, 1, "", "dimensionIsLinked"], [299, 5, 1, "", "gasPorosity"], [299, 3, 1, "", "getArea"], [299, 3, 1, "", "getBoundingCircleOuterDiameter"], [299, 3, 1, "", "getCircleInnerDiameter"], [299, 3, 1, "", "getComponentArea"], [299, 3, 1, "", "getComponentVolume"], [299, 3, 1, "", "getDimension"], [299, 3, 1, "", "getDimensionNamesLinkedTo"], [299, 3, 1, "", "getEnrichment"], [299, 3, 1, "", "getFuelMass"], [299, 3, 1, "", "getHeightFactor"], [299, 3, 1, "", "getIntegratedMgFlux"], [299, 3, 1, "", "getLinkedComponents"], [299, 3, 1, "", "getLumpedFissionProductCollection"], [299, 3, 1, "", "getMass"], [299, 3, 1, "", "getMassEnrichment"], [299, 3, 1, "", "getMicroSuffix"], [299, 3, 1, "", "getNuclideNumberDensities"], [299, 3, 1, "", "getNuclides"], [299, 3, 1, "", "getNumberDensity"], [299, 3, 1, "", "getPitchData"], [299, 3, 1, "", "getProperties"], [299, 3, 1, "", "getThermalExpansionFactor"], [299, 3, 1, "", "getVolume"], [299, 4, 1, "", "is3D"], [299, 3, 1, "", "iterComponents"], [299, 5, 1, "", "liquidPorosity"], [299, 3, 1, "", "mergeNuclidesInto"], [299, 4, 1, "", "pDefs"], [299, 4, 1, "", "paramCollectionType"], [299, 3, 1, "", "printContents"], [299, 3, 1, "", "resolveLinkedDims"], [299, 3, 1, "", "restoreBackup"], [299, 3, 1, "", "setArea"], [299, 3, 1, "", "setDimension"], [299, 3, 1, "", "setDimensionReport"], [299, 3, 1, "", "setLink"], [299, 3, 1, "", "setLumpedFissionProducts"], [299, 3, 1, "", "setName"], [299, 3, 1, "", "setNumberDensities"], [299, 3, 1, "", "setNumberDensity"], [299, 3, 1, "", "setProperties"], [299, 3, 1, "", "setTemperature"], [299, 3, 1, "", "setVolume"], [299, 5, 1, "", "temperatureInC"], [299, 5, 1, "", "temperatureInK"], [299, 3, 1, "", "updateDims"], [299, 3, 1, "", "updateNumberDensities"]], "armi.reactor.components.component.ComponentType": [[299, 4, 1, "", "NON_DIMENSION_NAMES"], [299, 4, 1, "", "TYPES"]], "armi.reactor.components.component.ShapedComponent": [[299, 4, 1, "", "DIMENSION_NAMES"], [299, 4, 1, "", "INIT_SIGNATURE"], [299, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.componentParameters": [[300, 1, 1, "", "getCircleParameterDefinitions"], [300, 1, 1, "", "getComponentParameterDefinitions"], [300, 1, 1, "", "getCubeParameterDefinitions"], [300, 1, 1, "", "getHelixParameterDefinitions"], [300, 1, 1, "", "getHexHoledCircleParameterDefinitions"], [300, 1, 1, "", "getHexagonParameterDefinitions"], [300, 1, 1, "", "getHoledHexagonParameterDefinitions"], [300, 1, 1, "", "getHoledRectangleParameterDefinitions"], [300, 1, 1, "", "getRadialSegmentParameterDefinitions"], [300, 1, 1, "", "getRectangleParameterDefinitions"], [300, 1, 1, "", "getTriangleParameterDefinitions"], [300, 1, 1, "", "getUnshapedParameterDefinitions"]], "armi.reactor.components.volumetricShapes": [[301, 2, 1, "", "Cube"], [301, 2, 1, "", "DifferentialRadialSegment"], [301, 2, 1, "", "RadialSegment"], [301, 2, 1, "", "Sphere"]], "armi.reactor.components.volumetricShapes.Cube": [[301, 4, 1, "", "DIMENSION_NAMES"], [301, 4, 1, "", "INIT_SIGNATURE"], [301, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [301, 3, 1, "", "getComponentArea"], [301, 3, 1, "", "getComponentVolume"], [301, 4, 1, "", "is3D"], [301, 4, 1, "", "pDefs"], [301, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.DifferentialRadialSegment": [[301, 4, 1, "", "DIMENSION_NAMES"], [301, 4, 1, "", "INIT_SIGNATURE"], [301, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [301, 3, 1, "", "getComponentArea"], [301, 3, 1, "", "getComponentVolume"], [301, 4, 1, "", "is3D"], [301, 4, 1, "", "paramCollectionType"], [301, 3, 1, "", "updateDims"]], "armi.reactor.components.volumetricShapes.RadialSegment": [[301, 4, 1, "", "DIMENSION_NAMES"], [301, 4, 1, "", "INIT_SIGNATURE"], [301, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [301, 3, 1, "", "getBoundingCircleOuterDiameter"], [301, 3, 1, "", "getComponentArea"], [301, 3, 1, "", "getComponentVolume"], [301, 4, 1, "", "is3D"], [301, 4, 1, "", "pDefs"], [301, 4, 1, "", "paramCollectionType"]], "armi.reactor.components.volumetricShapes.Sphere": [[301, 4, 1, "", "DIMENSION_NAMES"], [301, 4, 1, "", "INIT_SIGNATURE"], [301, 4, 1, "", "THERMAL_EXPANSION_DIMS"], [301, 3, 1, "", "getBoundingCircleOuterDiameter"], [301, 3, 1, "", "getComponentArea"], [301, 3, 1, "", "getComponentVolume"], [301, 4, 1, "", "is3D"], [301, 4, 1, "", "pDefs"], [301, 4, 1, "", "paramCollectionType"]], "armi.reactor.composites": [[302, 2, 1, "", "ArmiObject"], [302, 2, 1, "", "Composite"], [302, 2, 1, "", "CompositeModelType"], [302, 2, 1, "", "FlagSerializer"], [302, 2, 1, "", "StateRetainer"], [302, 1, 1, "", "gatherMaterialsByVolume"], [302, 1, 1, "", "getDominantMaterial"], [302, 1, 1, "", "getReactionRateDict"]], "armi.reactor.composites.ArmiObject": [[302, 3, 1, "", "addMass"], [302, 3, 1, "", "addMasses"], [302, 3, 1, "", "adjustMassEnrichment"], [302, 3, 1, "", "adjustMassFrac"], [302, 3, 1, "", "calcAvgParam"], [302, 3, 1, "", "calcTotalParam"], [302, 3, 1, "", "changeNDensByFactor"], [302, 3, 1, "", "clearCache"], [302, 3, 1, "", "clearNumberDensities"], [302, 3, 1, "", "constituentReport"], [302, 3, 1, "", "containsAtLeastOneChildWithFlags"], [302, 3, 1, "", "containsHeavyMetal"], [302, 3, 1, "", "containsOnlyChildrenWithFlags"], [302, 3, 1, "", "copyParamsFrom"], [302, 3, 1, "", "copyParamsToChildren"], [302, 3, 1, "", "density"], [302, 3, 1, "", "doChildrenHaveFlags"], [302, 3, 1, "", "duplicate"], [302, 3, 1, "", "expandAllElementalsToIsotopics"], [302, 3, 1, "", "expandElementalToIsotopics"], [302, 3, 1, "", "getAncestor"], [302, 3, 1, "", "getAncestorAndDistance"], [302, 3, 1, "", "getAncestorWithFlags"], [302, 3, 1, "", "getArea"], [302, 3, 1, "", "getAtomicWeight"], [302, 3, 1, "", "getAverageTempInC"], [302, 3, 1, "", "getBoronMassEnrich"], [302, 3, 1, "", "getBoundingIndices"], [302, 3, 1, "", "getCaptureEnergyGenerationConstants"], [302, 3, 1, "", "getChildParamValues"], [302, 3, 1, "", "getChildren"], [302, 3, 1, "", "getChildrenWithFlags"], [302, 3, 1, "", "getChildrenWithNuclides"], [302, 3, 1, "", "getComponent"], [302, 3, 1, "", "getComponentByName"], [302, 3, 1, "", "getComponentNames"], [302, 3, 1, "", "getComponents"], [302, 3, 1, "", "getComponentsOfMaterial"], [302, 3, 1, "", "getComponentsOfShape"], [302, 3, 1, "", "getDominantMaterial"], [302, 3, 1, "", "getFPMass"], [302, 3, 1, "", "getFissileMass"], [302, 3, 1, "", "getFissileMassEnrich"], [302, 3, 1, "", "getFissionEnergyGenerationConstants"], [302, 3, 1, "", "getFuelMass"], [302, 3, 1, "", "getGammaEnergyDepositionConstants"], [302, 3, 1, "", "getHMDens"], [302, 3, 1, "", "getHMMass"], [302, 3, 1, "", "getHMMoles"], [302, 3, 1, "", "getIntegratedMgFlux"], [302, 3, 1, "", "getLumpedFissionProductCollection"], [302, 3, 1, "", "getMass"], [302, 3, 1, "", "getMassFrac"], [302, 3, 1, "", "getMassFracs"], [302, 3, 1, "", "getMasses"], [302, 3, 1, "", "getMaxArea"], [302, 3, 1, "", "getMaxParam"], [302, 3, 1, "", "getMaxUraniumMassEnrich"], [302, 3, 1, "", "getMaxVolume"], [302, 3, 1, "", "getMgFlux"], [302, 3, 1, "", "getMicroSuffix"], [302, 3, 1, "", "getMinParam"], [302, 3, 1, "", "getName"], [302, 3, 1, "", "getNeutronEnergyDepositionConstants"], [302, 3, 1, "", "getNuclideNumberDensities"], [302, 3, 1, "", "getNuclides"], [302, 3, 1, "", "getNumComponents"], [302, 3, 1, "", "getNumberDensities"], [302, 3, 1, "", "getNumberDensity"], [302, 3, 1, "", "getNumberOfAtoms"], [302, 3, 1, "", "getParamNames"], [302, 3, 1, "", "getParameterCollection"], [302, 3, 1, "", "getPuFrac"], [302, 3, 1, "", "getPuMass"], [302, 3, 1, "", "getPuMoles"], [302, 3, 1, "", "getPuN"], [302, 3, 1, "", "getSymmetryFactor"], [302, 3, 1, "", "getTotalEnergyGenerationConstants"], [302, 3, 1, "", "getTotalNDens"], [302, 3, 1, "", "getType"], [302, 3, 1, "", "getUraniumMassEnrich"], [302, 3, 1, "", "getUraniumNumEnrich"], [302, 3, 1, "", "getVolume"], [302, 3, 1, "", "getVolumeFraction"], [302, 3, 1, "", "getVolumeFractions"], [302, 3, 1, "", "getZrFrac"], [302, 3, 1, "", "hasComponents"], [302, 3, 1, "", "hasFlags"], [302, 3, 1, "", "isFuel"], [302, 3, 1, "", "iterComponents"], [302, 3, 1, "", "nameContains"], [302, 4, 1, "", "pDefs"], [302, 4, 1, "", "paramCollectionType"], [302, 3, 1, "", "printDensities"], [302, 3, 1, "", "removeMass"], [302, 3, 1, "", "resolveLinkedDims"], [302, 3, 1, "", "setChildrenLumpedFissionProducts"], [302, 3, 1, "", "setComponentDimensionsReport"], [302, 3, 1, "", "setLumpedFissionProducts"], [302, 3, 1, "", "setMass"], [302, 3, 1, "", "setMassFrac"], [302, 3, 1, "", "setMassFracs"], [302, 3, 1, "", "setMasses"], [302, 3, 1, "", "setName"], [302, 3, 1, "", "setNumberDensities"], [302, 3, 1, "", "setNumberDensity"], [302, 3, 1, "", "setType"], [302, 3, 1, "", "updateNumberDensities"], [302, 3, 1, "", "updateParamsFrom"]], "armi.reactor.composites.Composite": [[302, 3, 1, "", "add"], [302, 3, 1, "", "append"], [302, 3, 1, "", "backUp"], [302, 3, 1, "", "extend"], [302, 3, 1, "", "getBoundingCircleOuterDiameter"], [302, 3, 1, "", "getChildren"], [302, 3, 1, "", "getChildrenOfType"], [302, 3, 1, "", "getChildrenWithFlags"], [302, 3, 1, "", "getComponents"], [302, 3, 1, "", "getIntegratedMgFlux"], [302, 3, 1, "", "getLumpedFissionProductCollection"], [302, 3, 1, "", "getLumpedFissionProductsIfNecessary"], [302, 3, 1, "", "getReactionRates"], [302, 3, 1, "", "index"], [302, 3, 1, "", "insert"], [302, 3, 1, "", "isOnWhichSymmetryLine"], [302, 3, 1, "", "iterComponents"], [302, 3, 1, "", "moveTo"], [302, 4, 1, "", "paramCollectionType"], [302, 3, 1, "", "printContents"], [302, 3, 1, "", "remove"], [302, 3, 1, "", "removeAll"], [302, 3, 1, "", "requiresLumpedFissionProducts"], [302, 3, 1, "", "restoreBackup"], [302, 3, 1, "", "retainState"], [302, 3, 1, "", "setChildren"], [302, 3, 1, "", "sort"], [302, 3, 1, "", "syncMpiState"]], "armi.reactor.composites.CompositeModelType": [[302, 4, 1, "", "TYPES"]], "armi.reactor.composites.FlagSerializer": [[302, 3, 1, "", "pack"], [302, 3, 1, "", "unpack"], [302, 4, 1, "", "version"]], "armi.reactor.converters": [[304, 0, 0, "-", "axialExpansionChanger"], [305, 0, 0, "-", "blockConverters"], [306, 0, 0, "-", "geometryConverters"], [307, 0, 0, "-", "meshConverters"], [308, 0, 0, "-", "parameterSweeps"], [310, 0, 0, "-", "pinTypeBlockConverters"], [311, 0, 0, "-", "tests"], [318, 0, 0, "-", "uniformMesh"]], "armi.reactor.converters.axialExpansionChanger": [[304, 2, 1, "", "AssemblyAxialLinkage"], [304, 2, 1, "", "AxialExpansionChanger"], [304, 2, 1, "", "ExpansionData"], [304, 1, 1, "", "expandColdDimsToHot"], [304, 1, 1, "", "getDefaultReferenceAssem"], [304, 1, 1, "", "getSolidComponents"], [304, 1, 1, "", "makeAssemsAbleToSnapToUniformMesh"]], "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger": [[304, 3, 1, "", "applyColdHeightMassIncrease"], [304, 3, 1, "", "axiallyExpandAssembly"], [304, 3, 1, "", "manageCoreMesh"], [304, 3, 1, "", "performPrescribedAxialExpansion"], [304, 3, 1, "", "performThermalAxialExpansion"], [304, 3, 1, "", "reset"], [304, 3, 1, "", "setAssembly"]], "armi.reactor.converters.axialExpansionChanger.ExpansionData": [[304, 3, 1, "", "computeThermalExpansionFactors"], [304, 3, 1, "", "determineTargetComponent"], [304, 3, 1, "", "getExpansionFactor"], [304, 3, 1, "", "isTargetComponent"], [304, 3, 1, "", "setExpansionFactors"], [304, 3, 1, "", "updateComponentTemp"], [304, 3, 1, "", "updateComponentTempsBy1DTempField"]], "armi.reactor.converters.blockConverters": [[305, 2, 1, "", "BlockAvgToCylConverter"], [305, 2, 1, "", "BlockConverter"], [305, 2, 1, "", "ComponentMerger"], [305, 2, 1, "", "HexComponentsToCylConverter"], [305, 2, 1, "", "MultipleComponentMerger"], [305, 1, 1, "", "getOuterDiamFromIDAndArea"], [305, 1, 1, "", "radiiFromHexPitches"], [305, 1, 1, "", "radiiFromHexSides"], [305, 1, 1, "", "radiiFromRingOfRods"]], "armi.reactor.converters.blockConverters.BlockAvgToCylConverter": [[305, 3, 1, "", "convert"], [305, 3, 1, "", "plotConvertedBlock"]], "armi.reactor.converters.blockConverters.BlockConverter": [[305, 3, 1, "", "convert"], [305, 3, 1, "", "dissolveComponentIntoComponent"], [305, 3, 1, "", "restablishLinks"]], "armi.reactor.converters.blockConverters.ComponentMerger": [[305, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.HexComponentsToCylConverter": [[305, 3, 1, "", "convert"]], "armi.reactor.converters.blockConverters.MultipleComponentMerger": [[305, 3, 1, "", "convert"]], "armi.reactor.converters.geometryConverters": [[306, 2, 1, "", "EdgeAssemblyChanger"], [306, 2, 1, "", "FuelAssemNumModifier"], [306, 2, 1, "", "GeometryChanger"], [306, 2, 1, "", "GeometryConverter"], [306, 2, 1, "", "HexToRZConverter"], [306, 2, 1, "", "HexToRZThetaConverter"], [306, 2, 1, "", "ThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger": [[306, 3, 1, "", "addEdgeAssemblies"], [306, 3, 1, "", "removeEdgeAssemblies"], [306, 3, 1, "", "scaleParamsRelatedToSymmetry"]], "armi.reactor.converters.geometryConverters.FuelAssemNumModifier": [[306, 3, 1, "", "addRing"], [306, 3, 1, "", "convert"], [306, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.GeometryChanger": [[306, 3, 1, "", "convert"], [306, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.HexToRZThetaConverter": [[306, 3, 1, "", "convert"], [306, 3, 1, "", "createHomogenizedRZTBlock"], [306, 3, 1, "", "plotConvertedReactor"], [306, 3, 1, "", "reset"]], "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger": [[306, 4, 1, "", "EXPECTED_INPUT_SYMMETRY"], [306, 3, 1, "", "convert"], [306, 3, 1, "", "restorePreviousGeometry"]], "armi.reactor.converters.meshConverters": [[307, 2, 1, "", "MeshConverter"], [307, 2, 1, "", "RZThetaReactorMeshConverter"], [307, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialBins"], [307, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"], [307, 2, 1, "", "RZThetaReactorMeshConverterByRingCompositionAxialFlags"], [307, 1, 1, "", "checkLastValueInList"], [307, 1, 1, "", "checkListBounds"], [307, 1, 1, "", "generateBins"]], "armi.reactor.converters.meshConverters.MeshConverter": [[307, 3, 1, "", "generateMesh"], [307, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter": [[307, 3, 1, "", "generateMesh"], [307, 3, 1, "", "setAxialMesh"], [307, 3, 1, "", "setRingsToConvert"], [307, 3, 1, "", "setThetaMesh"], [307, 3, 1, "", "writeMeshData"]], "armi.reactor.converters.parameterSweeps": [[309, 0, 0, "-", "generalParameterSweepConverters"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters": [[309, 2, 1, "", "CustomModifier"], [309, 2, 1, "", "NeutronicConvergenceModifier"], [309, 2, 1, "", "ParameterSweepConverter"], [309, 2, 1, "", "SettingsModifier"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier": [[309, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier": [[309, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter": [[309, 4, 1, "", "PRIORITY"], [309, 3, 1, "", "convert"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier": [[309, 3, 1, "", "convert"]], "armi.reactor.converters.pinTypeBlockConverters": [[310, 1, 1, "", "adjustCladThicknessByID"], [310, 1, 1, "", "adjustCladThicknessByOD"], [310, 1, 1, "", "adjustSmearDensity"]], "armi.reactor.converters.tests": [[312, 0, 0, "-", "test_axialExpansionChanger"], [313, 0, 0, "-", "test_blockConverter"], [314, 0, 0, "-", "test_geometryConverters"], [315, 0, 0, "-", "test_meshConverters"], [316, 0, 0, "-", "test_pinTypeBlockConverters"], [317, 0, 0, "-", "test_uniformMesh"]], "armi.reactor.converters.tests.test_axialExpansionChanger": [[312, 2, 1, "", "AxialExpansionTestBase"], [312, 2, 1, "", "FakeMat"], [312, 2, 1, "", "FakeMatException"], [312, 2, 1, "", "Temperature"], [312, 2, 1, "", "TestAxialExpansionHeight"], [312, 2, 1, "", "TestConservation"], [312, 2, 1, "", "TestDetermineTargetComponent"], [312, 2, 1, "", "TestExceptions"], [312, 2, 1, "", "TestGetSolidComponents"], [312, 2, 1, "", "TestInputHeightsConsideredHot"], [312, 2, 1, "", "TestLinkage"], [312, 2, 1, "", "TestManageCoreMesh"], [312, 1, 1, "", "buildTestAssemblyWithFakeMaterial"], [312, 1, 1, "", "checkColdBlockHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase": [[312, 4, 1, "", "Steel_Component_Lst"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat": [[312, 3, 1, "", "linearExpansionPercent"], [312, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException": [[312, 3, 1, "", "linearExpansionPercent"], [312, 4, 1, "", "name"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight": [[312, 3, 1, "", "test_AssemblyAxialExpansionHeight"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation": [[312, 3, 1, "", "complexConservationTest"], [312, 3, 1, "", "expandAssemForMassConservationTest"], [312, 3, 1, "", "test_NoMovementACLP"], [312, 3, 1, "", "test_PrescribedExpansionContractionConservation"], [312, 3, 1, "", "test_TargetComponentMassConservation"], [312, 3, 1, "", "test_ThermalExpansionContractionConservation_Complex"], [312, 3, 1, "", "test_ThermalExpansionContractionConservation_Simple"], [312, 3, 1, "", "test_computeThermalExpansionFactors"], [312, 3, 1, "", "test_reset"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent": [[312, 3, 1, "", "test_determineTargetComponent"], [312, 3, 1, "", "test_determineTargetComponentBlockWithMultipleFlags"], [312, 3, 1, "", "test_manuallySetTargetComponent"], [312, 3, 1, "", "test_specifyTargetComponent_NotFound"], [312, 3, 1, "", "test_specifyTargetComponent_singleSolid"], [312, 3, 1, "", "test_specifyTargetComponet_MultipleFound"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions": [[312, 3, 1, "", "test_AssemblyAxialExpansionException"], [312, 3, 1, "", "test_determineLinked"], [312, 3, 1, "", "test_getLinkedComponents"], [312, 3, 1, "", "test_isFuelLocked"], [312, 3, 1, "", "test_isTopDummyBlockPresent"], [312, 3, 1, "", "test_setExpansionFactors"], [312, 3, 1, "", "test_updateComponentTempsBy1DTempFieldRuntimeError"], [312, 3, 1, "", "test_updateComponentTempsBy1DTempFieldValueError"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents": [[312, 3, 1, "", "test_getSolidComponents"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot": [[312, 3, 1, "", "checkColdHeightBlockMass"], [312, 3, 1, "", "test_coldAssemblyExpansion"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage": [[312, 3, 1, "", "runTest"], [312, 3, 1, "", "test_AnnularHexOverlappingThickAnnularHex"], [312, 3, 1, "", "test_annularPinNotOverlappingWithAnnulus"], [312, 3, 1, "", "test_annularPinOverlappingWithAnnuls"], [312, 3, 1, "", "test_differentMultNotOverlapping"], [312, 3, 1, "", "test_liquids"], [312, 3, 1, "", "test_overlappingSolidPins"], [312, 3, 1, "", "test_solidPinNotOverlappingAnnulus"], [312, 3, 1, "", "test_solidPinOverlappingWithAnnulus"], [312, 3, 1, "", "test_thinAnnularPinOverlappingWithThickAnnulus"], [312, 3, 1, "", "test_unshapedComponentAndCircle"]], "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh": [[312, 3, 1, "", "test_manageCoreMesh"]], "armi.reactor.converters.tests.test_blockConverter": [[313, 2, 1, "", "TestBlockConverter"], [313, 2, 1, "", "TestToCircles"], [313, 1, 1, "", "buildControlBlockWithLinkedNegativeAreaComponent"]], "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter": [[313, 3, 1, "", "test_build_NthRing"], [313, 3, 1, "", "test_convert"], [313, 3, 1, "", "test_convertCartesianLatticeWithFuelDriver"], [313, 3, 1, "", "test_convertHexWithFuelDriver"], [313, 3, 1, "", "test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"], [313, 3, 1, "", "test_dissolveLinerIntoClad"], [313, 3, 1, "", "test_dissolveWireIntoCoolant"]], "armi.reactor.converters.tests.test_blockConverter.TestToCircles": [[313, 3, 1, "", "test_fromHex"], [313, 3, 1, "", "test_fromRingOfRods"]], "armi.reactor.converters.tests.test_geometryConverters": [[314, 2, 1, "", "TestEdgeAssemblyChanger"], [314, 2, 1, "", "TestGeometryConverters"], [314, 2, 1, "", "TestHexToRZConverter"], [314, 2, 1, "", "TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger": [[314, 3, 1, "", "test_edgeAssemblies"]], "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters": [[314, 3, 1, "", "test_addRing"], [314, 3, 1, "", "test_getAssembliesInSector"], [314, 3, 1, "", "test_setNumberOfFuelAssems"]], "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter": [[314, 3, 1, "", "test_convert"], [314, 3, 1, "", "test_createHomogenizedRZTBlock"]], "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger": [[314, 3, 1, "", "test_growToFullCoreFromThirdCore"], [314, 3, 1, "", "test_initNewFullReactor"], [314, 3, 1, "", "test_skipGrowToFullCoreWhenAlreadyFullCore"]], "armi.reactor.converters.tests.test_meshConverters": [[315, 2, 1, "", "TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter": [[315, 3, 1, "", "test_meshByRingCompositionAxialBinsLargeCore"], [315, 3, 1, "", "test_meshByRingCompositionAxialBinsSmallCore"], [315, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesLargeCore"], [315, 3, 1, "", "test_meshByRingCompositionAxialCoordinatesSmallCore"], [315, 3, 1, "", "test_meshByRingCompositionAxialFlagsLargeCore"], [315, 3, 1, "", "test_meshByRingCompositionAxialFlagsSmallCore"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters": [[316, 2, 1, "", "MassConservationTests"], [316, 2, 1, "", "TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests": [[316, 3, 1, "", "test_adjustSmearDensity"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters": [[316, 3, 1, "", "test_adjustCladThicknessByID"], [316, 3, 1, "", "test_adjustCladThicknessByOD"]], "armi.reactor.converters.tests.test_uniformMesh": [[317, 2, 1, "", "DummyFluxOptions"], [317, 2, 1, "", "TestAssemblyUniformMesh"], [317, 2, 1, "", "TestConverterFactory"], [317, 2, 1, "", "TestGammaUniformMesh"], [317, 2, 1, "", "TestParamConversion"], [317, 2, 1, "", "TestUniformMesh"], [317, 2, 1, "", "TestUniformMeshComponents"], [317, 2, 1, "", "TestUniformMeshGenerator"], [317, 2, 1, "", "TestUniformMeshNonUniformAssemFlags"], [317, 1, 1, "", "applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh": [[317, 3, 1, "", "test_clearAssemblyState"], [317, 3, 1, "", "test_makeAssemUniformMeshParamMappingSameMesh"], [317, 3, 1, "", "test_makeAssemWithUniformMesh"], [317, 3, 1, "", "test_makeAssemWithUniformMeshSubmesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory": [[317, 3, 1, "", "test_converterFactory"]], "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh": [[317, 3, 1, "", "test_applyStateToOriginal"], [317, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion": [[317, 3, 1, "", "test_setStateFromOverlaps"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh": [[317, 3, 1, "", "test_applyStateToOriginal"], [317, 3, 1, "", "test_convertNumberDensities"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents": [[317, 3, 1, "", "test_blueprintCopy"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator": [[317, 3, 1, "", "test_computeAverageAxialMesh"], [317, 3, 1, "", "test_filterMesh"], [317, 3, 1, "", "test_filteredTopAndBottom"], [317, 3, 1, "", "test_generateCommonMesh"]], "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags": [[317, 3, 1, "", "test_reactorConversion"]], "armi.reactor.converters.uniformMesh": [[318, 2, 1, "", "GammaUniformMeshConverter"], [318, 2, 1, "", "NeutronicsUniformMeshConverter"], [318, 2, 1, "", "ParamMapper"], [318, 2, 1, "", "UniformMeshGenerator"], [318, 2, 1, "", "UniformMeshGeometryConverter"], [318, 1, 1, "", "converterFactory"], [318, 1, 1, "", "setNumberDensitiesFromOverlaps"]], "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter": [[318, 4, 1, "", "blockParamMappingCategories"], [318, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter": [[318, 4, 1, "", "blockParamMappingCategories"], [318, 4, 1, "", "reactorParamMappingCategories"]], "armi.reactor.converters.uniformMesh.ParamMapper": [[318, 3, 1, "", "paramGetter"], [318, 3, 1, "", "paramSetter"]], "armi.reactor.converters.uniformMesh.UniformMeshGenerator": [[318, 3, 1, "", "generateCommonMesh"]], "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter": [[318, 3, 1, "", "applyStateToOriginal"], [318, 4, 1, "", "blockParamMappingCategories"], [318, 3, 1, "", "clearStateOnAssemblies"], [318, 3, 1, "", "convert"], [318, 3, 1, "", "initNewReactor"], [318, 3, 1, "", "makeAssemWithUniformMesh"], [318, 3, 1, "", "plotConvertedReactor"], [318, 4, 1, "", "reactorParamMappingCategories"], [318, 3, 1, "", "reset"], [318, 3, 1, "", "setAssemblyStateFromOverlaps"], [318, 3, 1, "", "updateReactionRates"]], "armi.reactor.flags": [[319, 2, 1, "", "Flags"], [319, 7, 1, "", "InvalidFlagsError"]], "armi.reactor.flags.Flags": [[319, 4, 1, "", "A"], [319, 4, 1, "", "ACLP"], [319, 4, 1, "", "ANNULAR"], [319, 4, 1, "", "AXIAL"], [319, 4, 1, "", "B"], [319, 4, 1, "", "BATCHMASSADDITION"], [319, 4, 1, "", "BLANKET"], [319, 4, 1, "", "BOND"], [319, 4, 1, "", "BOOSTER"], [319, 4, 1, "", "C"], [319, 4, 1, "", "CLAD"], [319, 4, 1, "", "CONTROL"], [319, 4, 1, "", "COOLANT"], [319, 4, 1, "", "CORE"], [319, 4, 1, "", "CORE_BARREL"], [319, 4, 1, "", "D"], [319, 4, 1, "", "DEPLETABLE"], [319, 4, 1, "", "DRIVER"], [319, 4, 1, "", "DSPACERINSIDE"], [319, 4, 1, "", "DUCT"], [319, 4, 1, "", "DUMMY"], [319, 4, 1, "", "E"], [319, 4, 1, "", "FEED"], [319, 4, 1, "", "FISSION_CHAMBER"], [319, 4, 1, "", "FUEL"], [319, 4, 1, "", "GAP"], [319, 4, 1, "", "GRID_PLATE"], [319, 4, 1, "", "GUIDE_TUBE"], [319, 4, 1, "", "HANDLING_SOCKET"], [319, 4, 1, "", "HIGH"], [319, 4, 1, "", "IGNITER"], [319, 4, 1, "", "INLET_NOZZLE"], [319, 4, 1, "", "INNER"], [319, 4, 1, "", "INTERCOOLANT"], [319, 4, 1, "", "INTERDUCTCOOLANT"], [319, 4, 1, "", "LINER"], [319, 4, 1, "", "LOAD_PAD"], [319, 4, 1, "", "LOW"], [319, 4, 1, "", "LOWER"], [319, 4, 1, "", "MATERIAL"], [319, 4, 1, "", "MEDIUM"], [319, 4, 1, "", "MIDDLE"], [319, 4, 1, "", "MODERATOR"], [319, 4, 1, "", "MOVEABLE"], [319, 4, 1, "", "MOX"], [319, 4, 1, "", "OUTER"], [319, 4, 1, "", "PIN"], [319, 4, 1, "", "PLENUM"], [319, 4, 1, "", "POISON"], [319, 4, 1, "", "PRIMARY"], [319, 4, 1, "", "RADIAL"], [319, 4, 1, "", "REACTOR"], [319, 4, 1, "", "REFLECTOR"], [319, 4, 1, "", "SECONDARY"], [319, 4, 1, "", "SHIELD"], [319, 4, 1, "", "SHIELD_BLOCK"], [319, 4, 1, "", "SHUTDOWN"], [319, 4, 1, "", "SKID"], [319, 4, 1, "", "SLUG"], [319, 4, 1, "", "STARTER"], [319, 4, 1, "", "STRUCTURE"], [319, 4, 1, "", "TARGET"], [319, 4, 1, "", "TERTIARY"], [319, 4, 1, "", "TEST"], [319, 4, 1, "", "ULTIMATE"], [319, 4, 1, "", "UPPER"], [319, 4, 1, "", "VOID"], [319, 4, 1, "", "WIRE"], [319, 3, 1, "", "fromString"], [319, 3, 1, "", "fromStringIgnoreErrors"], [319, 3, 1, "", "toString"]], "armi.reactor.geometry": [[320, 2, 1, "", "BoundaryType"], [320, 2, 1, "", "DomainType"], [320, 2, 1, "", "GeomType"], [320, 2, 1, "", "SymmetryType"], [320, 1, 1, "", "checkValidGeomSymmetryCombo"]], "armi.reactor.geometry.BoundaryType": [[320, 4, 1, "", "NO_SYMMETRY"], [320, 4, 1, "", "PERIODIC"], [320, 4, 1, "", "REFLECTIVE"], [320, 3, 1, "", "fromAny"], [320, 3, 1, "", "fromStr"], [320, 3, 1, "", "hasSymmetry"], [320, 5, 1, "", "label"]], "armi.reactor.geometry.DomainType": [[320, 4, 1, "", "EIGHTH_CORE"], [320, 4, 1, "", "FULL_CORE"], [320, 4, 1, "", "NULL"], [320, 4, 1, "", "QUARTER_CORE"], [320, 4, 1, "", "SIXTEENTH_CORE"], [320, 4, 1, "", "THIRD_CORE"], [320, 3, 1, "", "fromAny"], [320, 3, 1, "", "fromStr"], [320, 5, 1, "", "label"], [320, 3, 1, "", "symmetryFactor"]], "armi.reactor.geometry.GeomType": [[320, 4, 1, "", "CARTESIAN"], [320, 4, 1, "", "HEX"], [320, 4, 1, "", "RZ"], [320, 4, 1, "", "RZT"], [320, 3, 1, "", "fromAny"], [320, 3, 1, "", "fromStr"], [320, 5, 1, "", "label"]], "armi.reactor.geometry.SymmetryType": [[320, 4, 1, "", "VALID_SYMMETRY"], [320, 3, 1, "", "checkValidSymmetry"], [320, 3, 1, "", "createValidSymmetryStrings"], [320, 3, 1, "", "fromAny"], [320, 3, 1, "", "fromStr"], [320, 3, 1, "", "symmetryFactor"]], "armi.reactor.grids": [[322, 0, 0, "-", "axial"], [323, 0, 0, "-", "cartesian"], [324, 0, 0, "-", "constants"], [325, 0, 0, "-", "grid"], [326, 0, 0, "-", "hexagonal"], [327, 0, 0, "-", "locations"], [321, 1, 1, "", "locatorLabelToIndices"], [328, 0, 0, "-", "structuredgrid"], [329, 0, 0, "-", "thetarz"]], "armi.reactor.grids.axial": [[322, 2, 1, "", "AxialGrid"], [322, 1, 1, "", "axialUnitGrid"]], "armi.reactor.grids.axial.AxialGrid": [[322, 4, 1, "", "armiObject"], [322, 3, 1, "", "fromNCells"], [322, 3, 1, "", "getIndicesFromRingAndPos"], [322, 3, 1, "", "getMinimumRings"], [322, 3, 1, "", "getPositionsInRing"], [322, 3, 1, "", "getSymmetricEquivalents"], [322, 3, 1, "", "locatorInDomain"], [322, 3, 1, "", "overlapsWhichSymmetryLine"], [322, 5, 1, "", "pitch"]], "armi.reactor.grids.cartesian": [[323, 2, 1, "", "CartesianGrid"]], "armi.reactor.grids.cartesian.CartesianGrid": [[323, 4, 1, "", "armiObject"], [323, 3, 1, "", "changePitch"], [323, 3, 1, "", "fromRectangle"], [323, 3, 1, "", "getIndicesFromRingAndPos"], [323, 3, 1, "", "getMinimumRings"], [323, 3, 1, "", "getPositionsInRing"], [323, 3, 1, "", "getRingPos"], [323, 3, 1, "", "getSymmetricEquivalents"], [323, 3, 1, "", "locatorInDomain"], [323, 3, 1, "", "overlapsWhichSymmetryLine"], [323, 5, 1, "", "pitch"]], "armi.reactor.grids.grid": [[325, 2, 1, "", "Grid"]], "armi.reactor.grids.grid.Grid": [[325, 4, 1, "", "armiObject"], [325, 3, 1, "", "backUp"], [325, 5, 1, "", "geomType"], [325, 3, 1, "", "getCellBase"], [325, 3, 1, "", "getCellTop"], [325, 3, 1, "", "getCoordinates"], [325, 3, 1, "", "getLabel"], [325, 3, 1, "", "getSymmetricEquivalents"], [325, 5, 1, "", "isAxialOnly"], [325, 3, 1, "", "items"], [325, 3, 1, "", "locatorInDomain"], [325, 3, 1, "", "overlapsWhichSymmetryLine"], [325, 3, 1, "", "reduce"], [325, 3, 1, "", "restoreBackup"], [325, 5, 1, "", "symmetry"]], "armi.reactor.grids.hexagonal": [[326, 2, 1, "", "HexGrid"]], "armi.reactor.grids.hexagonal.HexGrid": [[326, 3, 1, "", "allPositionsInThird"], [326, 4, 1, "", "armiObject"], [326, 3, 1, "", "changePitch"], [326, 3, 1, "", "fromPitch"], [326, 3, 1, "", "generateSortedHexLocationList"], [326, 3, 1, "", "getIndicesFromRingAndPos"], [326, 3, 1, "", "getLabel"], [326, 3, 1, "", "getMinimumRings"], [326, 3, 1, "", "getNeighboringCellIndices"], [326, 3, 1, "", "getPositionsInRing"], [326, 3, 1, "", "getRingPos"], [326, 3, 1, "", "getSymmetricEquivalents"], [326, 3, 1, "", "indicesToRingPos"], [326, 3, 1, "", "isInFirstThird"], [326, 3, 1, "", "locatorInDomain"], [326, 3, 1, "", "overlapsWhichSymmetryLine"], [326, 5, 1, "", "pitch"], [326, 3, 1, "", "triangleCoords"]], "armi.reactor.grids.locations": [[327, 2, 1, "", "CoordinateLocation"], [327, 2, 1, "", "IndexLocation"], [327, 2, 1, "", "LocationBase"], [327, 2, 1, "", "MultiIndexLocation"], [327, 1, 1, "", "addingIsValid"]], "armi.reactor.grids.locations.CoordinateLocation": [[327, 3, 1, "", "getCompleteIndices"], [327, 3, 1, "", "getGlobalCellBase"], [327, 3, 1, "", "getGlobalCellTop"], [327, 3, 1, "", "getLocalCoordinates"]], "armi.reactor.grids.locations.IndexLocation": [[327, 3, 1, "", "detachedCopy"], [327, 3, 1, "", "distanceTo"], [327, 3, 1, "", "getCompleteIndices"], [327, 3, 1, "", "getGlobalCellBase"], [327, 3, 1, "", "getGlobalCellTop"], [327, 3, 1, "", "getGlobalCoordinates"], [327, 3, 1, "", "getLocalCoordinates"], [327, 3, 1, "", "getRingPos"], [327, 3, 1, "", "getSymmetricEquivalents"], [327, 5, 1, "", "indices"], [327, 5, 1, "", "parentLocation"]], "armi.reactor.grids.locations.LocationBase": [[327, 3, 1, "", "associate"], [327, 5, 1, "", "grid"], [327, 5, 1, "", "i"], [327, 5, 1, "", "indices"], [327, 5, 1, "", "j"], [327, 5, 1, "", "k"]], "armi.reactor.grids.locations.MultiIndexLocation": [[327, 3, 1, "", "append"], [327, 3, 1, "", "associate"], [327, 3, 1, "", "detachedCopy"], [327, 3, 1, "", "extend"], [327, 3, 1, "", "getCompleteIndices"], [327, 5, 1, "", "indices"], [327, 3, 1, "", "pop"]], "armi.reactor.grids.structuredgrid": [[328, 2, 1, "", "GridParameters"], [328, 2, 1, "", "StructuredGrid"]], "armi.reactor.grids.structuredgrid.GridParameters": [[328, 4, 1, "", "bounds"], [328, 4, 1, "", "geomType"], [328, 4, 1, "", "offset"], [328, 4, 1, "", "symmetry"], [328, 4, 1, "", "unitStepLimits"], [328, 4, 1, "", "unitSteps"]], "armi.reactor.grids.structuredgrid.StructuredGrid": [[328, 4, 1, "", "armiObject"], [328, 3, 1, "", "backUp"], [328, 3, 1, "", "getAboveAndBelowCellIndices"], [328, 3, 1, "", "getAllIndices"], [328, 3, 1, "", "getBounds"], [328, 3, 1, "", "getCellBase"], [328, 3, 1, "", "getCellTop"], [328, 3, 1, "", "getCoordinates"], [328, 3, 1, "", "getIndexBounds"], [328, 3, 1, "", "getIndicesFromRingAndPos"], [328, 3, 1, "", "getLocatorFromRingAndPos"], [328, 3, 1, "", "getMinimumRings"], [328, 3, 1, "", "getNeighboringCellIndices"], [328, 3, 1, "", "getPositionsInRing"], [328, 3, 1, "", "getRingPos"], [328, 5, 1, "", "isAxialOnly"], [328, 3, 1, "", "items"], [328, 5, 1, "", "offset"], [328, 5, 1, "", "pitch"], [328, 3, 1, "", "reduce"], [328, 3, 1, "", "restoreBackup"]], "armi.reactor.grids.thetarz": [[329, 2, 1, "", "ThetaRZGrid"]], "armi.reactor.grids.thetarz.ThetaRZGrid": [[329, 4, 1, "", "armiObject"], [329, 3, 1, "", "fromGeom"], [329, 3, 1, "", "getCoordinates"], [329, 3, 1, "", "getIndicesFromRingAndPos"], [329, 3, 1, "", "getMinimumRings"], [329, 3, 1, "", "getPositionsInRing"], [329, 3, 1, "", "getRingPos"], [329, 3, 1, "", "getSymmetricEquivalents"], [329, 3, 1, "", "indicesOfBounds"], [329, 3, 1, "", "locatorInDomain"], [329, 3, 1, "", "overlapsWhichSymmetryLine"], [329, 3, 1, "", "pitch"]], "armi.reactor.parameters": [[331, 0, 0, "-", "exceptions"], [332, 0, 0, "-", "parameterCollections"], [333, 0, 0, "-", "parameterDefinitions"], [330, 1, 1, "", "reset"], [334, 0, 0, "-", "resolveCollections"]], "armi.reactor.parameters.exceptions": [[331, 7, 1, "", "ParameterDefinitionError"], [331, 7, 1, "", "ParameterError"], [331, 7, 1, "", "UnknownParameterError"]], "armi.reactor.parameters.parameterCollections": [[332, 6, 1, "", "GLOBAL_SERIAL_NUM"], [332, 2, 1, "", "ParameterCollection"], [332, 1, 1, "", "applyAllParameters"], [332, 1, 1, "", "collectPluginParameters"]], "armi.reactor.parameters.parameterCollections.ParameterCollection": [[332, 3, 1, "", "applyParameters"], [332, 3, 1, "", "backUp"], [332, 3, 1, "", "get"], [332, 3, 1, "", "getSyncData"], [332, 3, 1, "", "items"], [332, 3, 1, "", "keys"], [332, 4, 1, "", "pDefs"], [332, 5, 1, "", "paramDefs"], [332, 3, 1, "", "restoreBackup"], [332, 4, 1, "", "serialNum"], [332, 3, 1, "", "update"], [332, 3, 1, "", "values"]], "armi.reactor.parameters.parameterDefinitions": [[333, 2, 1, "", "Category"], [333, 2, 1, "", "NoDefault"], [333, 2, 1, "", "ParamLocation"], [333, 2, 1, "", "Parameter"], [333, 2, 1, "", "ParameterBuilder"], [333, 2, 1, "", "ParameterDefinitionCollection"], [333, 2, 1, "", "Serializer"], [333, 1, 1, "", "isNumpyArray"]], "armi.reactor.parameters.parameterDefinitions.Category": [[333, 4, 1, "", "assignInBlueprints"], [333, 4, 1, "", "cumulative"], [333, 4, 1, "", "cumulativeOverCycle"], [333, 4, 1, "", "depletion"], [333, 4, 1, "", "detailedAxialExpansion"], [333, 4, 1, "", "fluxQuantities"], [333, 4, 1, "", "gamma"], [333, 4, 1, "", "multiGroupQuantities"], [333, 4, 1, "", "neutronics"], [333, 4, 1, "", "pinQuantities"], [333, 4, 1, "", "reactivityCoefficients"], [333, 4, 1, "", "retainOnReplacement"], [333, 4, 1, "", "thermalHydraulics"]], "armi.reactor.parameters.parameterDefinitions.ParamLocation": [[333, 4, 1, "", "AVERAGE"], [333, 4, 1, "", "BOTTOM"], [333, 4, 1, "", "CENTROID"], [333, 4, 1, "", "CHILDREN"], [333, 4, 1, "", "CORNERS"], [333, 4, 1, "", "EDGES"], [333, 4, 1, "", "MAX"], [333, 4, 1, "", "TOP"], [333, 4, 1, "", "VOLUME_INTEGRATED"]], "armi.reactor.parameters.parameterDefinitions.Parameter": [[333, 4, 1, "", "assigned"], [333, 3, 1, "", "atLocation"], [333, 3, 1, "", "backUp"], [333, 4, 1, "", "categories"], [333, 4, 1, "", "collectionType"], [333, 4, 1, "", "default"], [333, 4, 1, "", "description"], [333, 4, 1, "", "fieldName"], [333, 4, 1, "", "location"], [333, 4, 1, "", "name"], [333, 3, 1, "", "restoreBackup"], [333, 4, 1, "", "saveToDB"], [333, 4, 1, "", "serializer"], [333, 3, 1, "", "setter"], [333, 4, 1, "", "units"]], "armi.reactor.parameters.parameterDefinitions.ParameterBuilder": [[333, 3, 1, "", "associateParameterDefinitionCollection"], [333, 3, 1, "", "defParam"]], "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection": [[333, 3, 1, "", "add"], [333, 3, 1, "", "atLocation"], [333, 3, 1, "", "byNameAndCollectionType"], [333, 3, 1, "", "byNameAndType"], [333, 5, 1, "", "categories"], [333, 3, 1, "", "createBuilder"], [333, 3, 1, "", "extend"], [333, 3, 1, "", "forType"], [333, 3, 1, "", "inCategory"], [333, 3, 1, "", "items"], [333, 3, 1, "", "lock"], [333, 5, 1, "", "locked"], [333, 5, 1, "", "names"], [333, 3, 1, "", "resetAssignmentFlag"], [333, 3, 1, "", "setAssignmentFlag"], [333, 3, 1, "", "since"], [333, 3, 1, "", "toWriteToDB"], [333, 3, 1, "", "unchanged_since"]], "armi.reactor.parameters.parameterDefinitions.Serializer": [[333, 3, 1, "", "pack"], [333, 3, 1, "", "unpack"], [333, 4, 1, "", "version"]], "armi.reactor.parameters.resolveCollections": [[334, 2, 1, "", "ResolveParametersMeta"]], "armi.reactor.reactorParameters": [[335, 1, 1, "", "defineCoreParameters"], [335, 1, 1, "", "defineReactorParameters"]], "armi.reactor.reactors": [[336, 2, 1, "", "Core"], [336, 2, 1, "", "Reactor"], [336, 1, 1, "", "factory"], [336, 1, 1, "", "loadFromCs"]], "armi.reactor.reactors.Core": [[336, 3, 1, "", "add"], [336, 3, 1, "", "addMoreNodes"], [336, 3, 1, "", "buildCircularRingDictionary"], [336, 3, 1, "", "buildManualZones"], [336, 3, 1, "", "calcBlockMaxes"], [336, 3, 1, "", "countBlocksWithFlags"], [336, 3, 1, "", "countFuelAxialBlocks"], [336, 3, 1, "", "createAssemblyOfType"], [336, 3, 1, "", "createFreshFeed"], [336, 3, 1, "", "findAllAxialMeshPoints"], [336, 3, 1, "", "findAllAziMeshPoints"], [336, 3, 1, "", "findAllMeshPoints"], [336, 3, 1, "", "findAllRadMeshPoints"], [336, 3, 1, "", "findAxialMeshIndexOf"], [336, 3, 1, "", "findNeighbors"], [336, 3, 1, "", "genAssembliesAddedThisCycle"], [336, 3, 1, "", "genBlocksByLocName"], [336, 5, 1, "", "geomType"], [336, 3, 1, "", "getAllNuclidesIn"], [336, 3, 1, "", "getAllXsSuffixes"], [336, 3, 1, "", "getAssemblies"], [336, 3, 1, "", "getAssembliesInCircularRing"], [336, 3, 1, "", "getAssembliesInRing"], [336, 3, 1, "", "getAssembliesInSquareOrHexRing"], [336, 3, 1, "", "getAssembliesOfType"], [336, 3, 1, "", "getAssembliesOnSymmetryLine"], [336, 3, 1, "", "getAssembly"], [336, 3, 1, "", "getAssemblyByName"], [336, 3, 1, "", "getAssemblyPitch"], [336, 3, 1, "", "getAssemblyWithAssemNum"], [336, 3, 1, "", "getAssemblyWithStringLocation"], [336, 3, 1, "", "getAvgTemp"], [336, 3, 1, "", "getBlockByName"], [336, 3, 1, "", "getBlocks"], [336, 3, 1, "", "getBlocksByIndices"], [336, 3, 1, "", "getCoreRadius"], [336, 3, 1, "", "getFirstAssembly"], [336, 3, 1, "", "getFirstBlock"], [336, 3, 1, "", "getFirstFuelBlockAxialNode"], [336, 3, 1, "", "getFluxVector"], [336, 3, 1, "", "getFuelBottomHeight"], [336, 3, 1, "", "getLocationContents"], [336, 3, 1, "", "getMaxAssembliesInHexRing"], [336, 3, 1, "", "getMaxBlockParam"], [336, 3, 1, "", "getMaxNumPins"], [336, 3, 1, "", "getMinimumPercentFluxInFuel"], [336, 3, 1, "", "getNozzleTypes"], [336, 3, 1, "", "getNuclideCategories"], [336, 3, 1, "", "getNumAssembliesWithAllRingsFilledOut"], [336, 3, 1, "", "getNumEnergyGroups"], [336, 3, 1, "", "getNumHexRings"], [336, 3, 1, "", "getNumRings"], [336, 3, 1, "", "getScalarEvolution"], [336, 3, 1, "", "getTotalBlockParam"], [336, 3, 1, "", "growToFullCore"], [336, 5, 1, "", "isFullCore"], [336, 5, 1, "", "lib"], [336, 3, 1, "", "locateAllAssemblies"], [336, 3, 1, "", "makeLocationLookup"], [336, 3, 1, "", "normalizeInternalBookeeping"], [336, 3, 1, "", "normalizeNames"], [336, 4, 1, "", "pDefs"], [336, 4, 1, "", "paramCollectionType"], [336, 5, 1, "", "powerMultiplier"], [336, 3, 1, "", "processLoading"], [336, 5, 1, "", "r"], [336, 5, 1, "", "refAssem"], [336, 3, 1, "", "regenAssemblyLists"], [336, 3, 1, "", "removeAllAssemblies"], [336, 3, 1, "", "removeAssembliesInRing"], [336, 3, 1, "", "removeAssembly"], [336, 3, 1, "", "saveAllFlux"], [336, 3, 1, "", "setBlockMassParams"], [336, 3, 1, "", "setMoveList"], [336, 3, 1, "", "setOptionsFromCs"], [336, 3, 1, "", "setPitchUniform"], [336, 3, 1, "", "setPowerFromDensity"], [336, 3, 1, "", "setPowerIfNecessary"], [336, 3, 1, "", "sortAssemsByRing"], [336, 3, 1, "", "summarizeNuclideCategories"], [336, 3, 1, "", "summarizeReactorStats"], [336, 5, 1, "", "symmetry"], [336, 3, 1, "", "updateAxialMesh"]], "armi.reactor.reactors.Reactor": [[336, 3, 1, "", "add"], [336, 3, 1, "", "incrementAssemNum"], [336, 3, 1, "", "normalizeNames"], [336, 4, 1, "", "pDefs"], [336, 4, 1, "", "paramCollectionType"]], "armi.reactor.systemLayoutInput": [[337, 2, 1, "", "SystemLayoutInput"]], "armi.reactor.systemLayoutInput.SystemLayoutInput": [[337, 4, 1, "", "ROOT_TAG"], [337, 3, 1, "", "fromReactor"], [337, 3, 1, "", "growToFullCore"], [337, 3, 1, "", "loadFromCs"], [337, 3, 1, "", "modifyEqPaths"], [337, 3, 1, "", "readGeomFromFile"], [337, 3, 1, "", "readGeomFromStream"], [337, 3, 1, "", "toGridBlueprints"], [337, 3, 1, "", "writeGeom"]], "armi.reactor.tests": [[339, 0, 0, "-", "test_assemblies"], [340, 0, 0, "-", "test_blocks"], [341, 0, 0, "-", "test_components"], [342, 0, 0, "-", "test_composites"], [343, 0, 0, "-", "test_flags"], [344, 0, 0, "-", "test_geometry"], [345, 0, 0, "-", "test_parameters"], [346, 0, 0, "-", "test_reactors"], [347, 0, 0, "-", "test_rz_reactors"], [348, 0, 0, "-", "test_zones"]], "armi.reactor.tests.test_assemblies": [[339, 2, 1, "", "AnnularFuelTestCase"], [339, 2, 1, "", "AssemblyInReactor_TestCase"], [339, 2, 1, "", "Assembly_TestCase"], [339, 2, 1, "", "MaterialInAssembly_TestCase"], [339, 1, 1, "", "buildTestAssemblies"], [339, 1, 1, "", "makeTestAssembly"]], "armi.reactor.tests.test_assemblies.AnnularFuelTestCase": [[339, 3, 1, "", "test_areaCheck"]], "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase": [[339, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"], [339, 3, 1, "", "test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "armi.reactor.tests.test_assemblies.Assembly_TestCase": [[339, 3, 1, "", "test_add"], [339, 3, 1, "", "test_adjustResolution"], [339, 3, 1, "", "test_append"], [339, 3, 1, "", "test_averagePlenumTemperature"], [339, 3, 1, "", "test_calcAvgParam"], [339, 3, 1, "", "test_calcTotalParam"], [339, 3, 1, "", "test_calculateZCoords"], [339, 3, 1, "", "test_carestianCoordinates"], [339, 3, 1, "", "test_countBlocksOfType"], [339, 3, 1, "", "test_doubleResolution"], [339, 3, 1, "", "test_duplicate"], [339, 3, 1, "", "test_extend"], [339, 3, 1, "", "test_getAge"], [339, 3, 1, "", "test_getArea"], [339, 3, 1, "", "test_getAxialMesh"], [339, 3, 1, "", "test_getBlockData"], [339, 3, 1, "", "test_getBlocks"], [339, 3, 1, "", "test_getBlocksAndZ"], [339, 3, 1, "", "test_getBlocksBetweenElevations"], [339, 3, 1, "", "test_getDim"], [339, 3, 1, "", "test_getDominantMaterial"], [339, 3, 1, "", "test_getElevationsMatchingParamValue"], [339, 3, 1, "", "test_getFirstBlock"], [339, 3, 1, "", "test_getFirstBlockByType"], [339, 3, 1, "", "test_getFissileMass"], [339, 3, 1, "", "test_getHeight"], [339, 3, 1, "", "test_getLocation"], [339, 3, 1, "", "test_getMass"], [339, 3, 1, "", "test_getMaxParam"], [339, 3, 1, "", "test_getMaxUraniumMassEnrich"], [339, 3, 1, "", "test_getName"], [339, 3, 1, "", "test_getNum"], [339, 3, 1, "", "test_getParamValuesAtZ"], [339, 3, 1, "", "test_getPuFrac"], [339, 3, 1, "", "test_getReactiveHeight"], [339, 3, 1, "", "test_getTotalHeight"], [339, 3, 1, "", "test_getVolume"], [339, 3, 1, "", "test_getZrFrac"], [339, 3, 1, "", "test_hasContinuousCoolantChannel"], [339, 3, 1, "", "test_hasFlags"], [339, 3, 1, "", "test_iter"], [339, 3, 1, "", "test_iteration"], [339, 3, 1, "", "test_len"], [339, 3, 1, "", "test_makeAxialSnapList"], [339, 3, 1, "", "test_moveTo"], [339, 3, 1, "", "test_notesParameter"], [339, 3, 1, "", "test_pinPlenumVolume"], [339, 3, 1, "", "test_reattach"], [339, 3, 1, "", "test_reestablishBlockOrder"], [339, 3, 1, "", "test_renameBlocksAccordingToAssemblyNum"], [339, 3, 1, "", "test_rotate"], [339, 3, 1, "", "test_snapAxialMeshToReference"], [339, 3, 1, "", "test_updateFromAssembly"]], "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase": [[339, 3, 1, "", "test_UThZrMaterial"], [339, 3, 1, "", "test_sortNoLocator"]], "armi.reactor.tests.test_blocks": [[340, 2, 1, "", "Block_TestCase"], [340, 2, 1, "", "CartesianBlock_TestCase"], [340, 2, 1, "", "HexBlock_TestCase"], [340, 2, 1, "", "MassConservationTests"], [340, 2, 1, "", "Test_NegativeVolume"], [340, 2, 1, "", "ThRZBlock_TestCase"], [340, 1, 1, "", "applyDummyData"], [340, 1, 1, "", "buildSimpleFuelBlock"], [340, 1, 1, "", "getComponentData"], [340, 1, 1, "", "loadTestBlock"]], "armi.reactor.tests.test_blocks.Block_TestCase": [[340, 3, 1, "", "test_100_getPinPitch"], [340, 3, 1, "", "test_101_getPitch"], [340, 3, 1, "", "test_102_setPitch"], [340, 3, 1, "", "test_106_getAreaFractions"], [340, 3, 1, "", "test_27b_setBuGroup"], [340, 3, 1, "", "test_add"], [340, 3, 1, "", "test_adjustDensity"], [340, 3, 1, "", "test_adjustUEnrich"], [340, 3, 1, "", "test_breakFuelComponentsIntoIndividuals"], [340, 3, 1, "", "test_clearDensity"], [340, 3, 1, "", "test_completeInitialLoading"], [340, 3, 1, "", "test_consistentAreaWithOverlappingComponents"], [340, 3, 1, "", "test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"], [340, 3, 1, "", "test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"], [340, 3, 1, "", "test_duplicate"], [340, 3, 1, "", "test_expandAllElementalsToIsotopics"], [340, 3, 1, "", "test_expandElementalToIsotopics"], [340, 3, 1, "", "test_getComponent"], [340, 3, 1, "", "test_getComponentAreaFrac"], [340, 3, 1, "", "test_getComponentByName"], [340, 3, 1, "", "test_getComponentNames"], [340, 3, 1, "", "test_getComponents"], [340, 3, 1, "", "test_getComponentsInLinkedOrder"], [340, 3, 1, "", "test_getComponentsOfMaterial"], [340, 3, 1, "", "test_getComponentsOfShape"], [340, 3, 1, "", "test_getDimensions"], [340, 3, 1, "", "test_getFissileMassEnrich"], [340, 3, 1, "", "test_getFlowArea"], [340, 3, 1, "", "test_getFlowAreaPerPin"], [340, 3, 1, "", "test_getHMDens"], [340, 3, 1, "", "test_getHydraulicDiameter"], [340, 3, 1, "", "test_getMass"], [340, 3, 1, "", "test_getMasses"], [340, 3, 1, "", "test_getMfp"], [340, 3, 1, "", "test_getMicroSuffix"], [340, 3, 1, "", "test_getNumComponents"], [340, 3, 1, "", "test_getNumPins"], [340, 3, 1, "", "test_getNumberDensity"], [340, 3, 1, "", "test_getNumberOfAtoms"], [340, 3, 1, "", "test_getPlenumPin"], [340, 3, 1, "", "test_getPu"], [340, 3, 1, "", "test_getReactionRates"], [340, 3, 1, "", "test_getSmearDensity"], [340, 3, 1, "", "test_getSmearDensityMultipleLiner"], [340, 3, 1, "", "test_getSortedComponentsInsideOfComponent"], [340, 3, 1, "", "test_getSortedComponentsInsideOfComponentSpecifiedTypes"], [340, 3, 1, "", "test_getTotalMass"], [340, 3, 1, "", "test_getTotalNDens"], [340, 3, 1, "", "test_getType"], [340, 3, 1, "", "test_getUraniumMassEnrich"], [340, 3, 1, "", "test_getUraniumNumEnrich"], [340, 3, 1, "", "test_getVolumeFractionWithoutParent"], [340, 3, 1, "", "test_getVolumeFractionsWithZeroHeight"], [340, 3, 1, "", "test_getWettedPerimeter"], [340, 3, 1, "", "test_getXsType"], [340, 3, 1, "", "test_hasComponents"], [340, 3, 1, "", "test_hasFlags"], [340, 3, 1, "", "test_hasPinPitch"], [340, 3, 1, "", "test_homogenizedMixture"], [340, 3, 1, "", "test_mergeWithBlock"], [340, 3, 1, "", "test_pinMgFluxes"], [340, 3, 1, "", "test_removeMass"], [340, 3, 1, "", "test_replaceBlockWithBlock"], [340, 3, 1, "", "test_rotatePins"], [340, 3, 1, "", "test_setBuLimitInfo"], [340, 3, 1, "", "test_setLinPowByPin"], [340, 3, 1, "", "test_setLocation"], [340, 3, 1, "", "test_setMass"], [340, 3, 1, "", "test_setNumberDensities"], [340, 3, 1, "", "test_setNumberDensity"], [340, 3, 1, "", "test_setPitch"], [340, 3, 1, "", "test_setType"], [340, 3, 1, "", "test_setZeroHeight"], [340, 3, 1, "", "test_timeNodeParams"]], "armi.reactor.tests.test_blocks.CartesianBlock_TestCase": [[340, 4, 1, "", "PITCH"], [340, 3, 1, "", "test_getCartesianGrid"], [340, 3, 1, "", "test_getHydraulicDiameter"], [340, 3, 1, "", "test_getPitchHomogeneousBlock"], [340, 3, 1, "", "test_getPitchSquare"], [340, 3, 1, "", "test_getWettedPerimeter"]], "armi.reactor.tests.test_blocks.HexBlock_TestCase": [[340, 3, 1, "", "test_coords"], [340, 3, 1, "", "test_getArea"], [340, 3, 1, "", "test_getDuctPitch"], [340, 3, 1, "", "test_getNumPins"], [340, 3, 1, "", "test_getPinCenterFlatToFlat"], [340, 3, 1, "", "test_getPinCoords"], [340, 3, 1, "", "test_getPitchHomogeneousBlock"], [340, 3, 1, "", "test_gridCreation"], [340, 3, 1, "", "test_gridNotCreatedMultipleMultiplicities"], [340, 3, 1, "", "test_gridNumPinsAndLocations"], [340, 3, 1, "", "test_retainState"], [340, 3, 1, "", "test_symmetryFactor"]], "armi.reactor.tests.test_blocks.MassConservationTests": [[340, 3, 1, "", "test_coldMass"], [340, 3, 1, "", "test_dimensionDuctHeatup"], [340, 3, 1, "", "test_heightExpansionDifferences"], [340, 3, 1, "", "test_massCladHeatup"], [340, 3, 1, "", "test_massConsistency"], [340, 3, 1, "", "test_massCoolHeatup"], [340, 3, 1, "", "test_massDuctHeatup"], [340, 3, 1, "", "test_massFuelHeatup"]], "armi.reactor.tests.test_blocks.Test_NegativeVolume": [[340, 3, 1, "", "test_negativeVolume"]], "armi.reactor.tests.test_blocks.ThRZBlock_TestCase": [[340, 3, 1, "", "test_axial"], [340, 3, 1, "", "test_getHydraulicDiameter"], [340, 3, 1, "", "test_getThetaRZGrid"], [340, 3, 1, "", "test_getWettedPerimeter"], [340, 3, 1, "", "test_radii"], [340, 3, 1, "", "test_theta"], [340, 3, 1, "", "test_verifyBlockDims"]], "armi.reactor.tests.test_components": [[341, 2, 1, "", "TestCircle"], [341, 2, 1, "", "TestComponent"], [341, 2, 1, "", "TestComponentExpansion"], [341, 2, 1, "", "TestComponentFactory"], [341, 2, 1, "", "TestCube"], [341, 2, 1, "", "TestDerivedShape"], [341, 2, 1, "", "TestDifferentialRadialSegment"], [341, 2, 1, "", "TestGeneralComponents"], [341, 2, 1, "", "TestHelix"], [341, 2, 1, "", "TestHexHoledCircle"], [341, 2, 1, "", "TestHexagon"], [341, 2, 1, "", "TestHoledHexagon"], [341, 2, 1, "", "TestHoledRectangle"], [341, 2, 1, "", "TestHoledSquare"], [341, 2, 1, "", "TestMaterialAdjustments"], [341, 2, 1, "", "TestNullComponent"], [341, 2, 1, "", "TestRadialSegment"], [341, 2, 1, "", "TestRectangle"], [341, 2, 1, "", "TestShapedComponent"], [341, 2, 1, "", "TestSolidRectangle"], [341, 2, 1, "", "TestSphere"], [341, 2, 1, "", "TestSquare"], [341, 2, 1, "", "TestTriangle"], [341, 2, 1, "", "TestUnshapedComponent"]], "armi.reactor.tests.test_components.TestCircle": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_badComponentName"], [341, 3, 1, "", "test_changeNumberDensities"], [341, 3, 1, "", "test_componentInteractionsLinkingByDimensions"], [341, 3, 1, "", "test_componentInteractionsLinkingBySubtraction"], [341, 3, 1, "", "test_dimensionThermallyExpands"], [341, 3, 1, "", "test_fuelMass"], [341, 3, 1, "", "test_getArea"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [341, 3, 1, "", "test_getCircleInnerDiameter"], [341, 3, 1, "", "test_getDimension"], [341, 3, 1, "", "test_getNumberDensities"], [341, 3, 1, "", "test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestComponent": [[341, 4, 1, "", "componentCls"], [341, 3, 1, "", "test_initializeComponent"]], "armi.reactor.tests.test_components.TestComponentExpansion": [[341, 4, 1, "", "coldOuterDiameter"], [341, 3, 1, "", "componentMassIndependentOfInputTemp"], [341, 3, 1, "", "expansionConservationColdHeightDefined"], [341, 3, 1, "", "expansionConservationHotHeightDefined"], [341, 3, 1, "", "runExpansionTests"], [341, 4, 1, "", "tCold"], [341, 4, 1, "", "tHot"], [341, 4, 1, "", "tWarm"], [341, 3, 1, "", "test_B4CExpansion"], [341, 3, 1, "", "test_HT9Expansion"], [341, 3, 1, "", "test_UZrExpansion"]], "armi.reactor.tests.test_components.TestComponentFactory": [[341, 3, 1, "", "getCircleFuelDict"], [341, 3, 1, "", "getCircleVoidDict"], [341, 3, 1, "", "test_componentInitializationAndDuplication"], [341, 3, 1, "", "test_factory"], [341, 3, 1, "", "test_factoryBadShapeName"], [341, 3, 1, "", "test_invalidCoolantComponentAssignment"]], "armi.reactor.tests.test_components.TestCube": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_getVolume"], [341, 3, 1, "", "test_negativeVolume"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestDerivedShape": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 4, 1, "", "componentMaterial"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"]], "armi.reactor.tests.test_components.TestDifferentialRadialSegment": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [341, 3, 1, "", "test_getVolume"], [341, 3, 1, "", "test_thermallyExpands"], [341, 3, 1, "", "test_updateDims"]], "armi.reactor.tests.test_components.TestGeneralComponents": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 4, 1, "", "componentMaterial"]], "armi.reactor.tests.test_components.TestHelix": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_dimensionThermallyExpands"], [341, 3, 1, "", "test_getArea"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [341, 3, 1, "", "test_getCircleInnerDiameter"], [341, 3, 1, "", "test_thermallyExpands"], [341, 3, 1, "", "test_validParameters"]], "armi.reactor.tests.test_components.TestHexHoledCircle": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_dimensionThermallyExpands"], [341, 3, 1, "", "test_getArea"], [341, 3, 1, "", "test_getCircleInnerDiameter"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHexagon": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_dimensionThermallyExpands"], [341, 3, 1, "", "test_getArea"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [341, 3, 1, "", "test_getCircleInnerDiameter"], [341, 3, 1, "", "test_getPerimeter"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledHexagon": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_dimensionThermallyExpands"], [341, 3, 1, "", "test_getArea"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [341, 3, 1, "", "test_getCircleInnerDiameter"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledRectangle": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 4, 1, "", "dimsToTestExpansion"], [341, 3, 1, "", "setClassDims"], [341, 3, 1, "", "test_dimensionThermallyExpands"], [341, 3, 1, "", "test_getArea"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [341, 3, 1, "", "test_getCircleInnerDiameter"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestHoledSquare": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 4, 1, "", "dimsToTestExpansion"], [341, 3, 1, "", "setClassDims"], [341, 3, 1, "", "test_getCircleInnerDiameter"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestMaterialAdjustments": [[341, 3, 1, "", "test_adjustMassEnrichment"], [341, 3, 1, "", "test_adjustMassFrac_U"], [341, 3, 1, "", "test_adjustMassFrac_U235"], [341, 3, 1, "", "test_adjustMassFrac_clear_ZR"], [341, 3, 1, "", "test_adjustMassFrac_invalid"], [341, 3, 1, "", "test_adjustMassFrac_leave_same"], [341, 3, 1, "", "test_adjustMassFrac_set_ZR"], [341, 3, 1, "", "test_getEnrichment"], [341, 3, 1, "", "test_setMassFrac"], [341, 3, 1, "", "test_setMassFracOnComponentMaterial"]], "armi.reactor.tests.test_components.TestNullComponent": [[341, 4, 1, "", "componentCls"], [341, 3, 1, "", "test_cmp"], [341, 3, 1, "", "test_getDimension"], [341, 3, 1, "", "test_nonzero"]], "armi.reactor.tests.test_components.TestRadialSegment": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [341, 3, 1, "", "test_getVolume"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestRectangle": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_dimensionThermallyExpands"], [341, 3, 1, "", "test_getArea"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [341, 3, 1, "", "test_getCircleInnerDiameter"], [341, 3, 1, "", "test_negativeArea"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestShapedComponent": [[341, 3, 1, "", "test_density"], [341, 3, 1, "", "test_densityConsistent"], [341, 3, 1, "", "test_preserveMassDuringThermalExpansion"], [341, 3, 1, "", "test_volumeAfterClearCache"]], "armi.reactor.tests.test_components.TestSolidRectangle": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_dimensionThermallyExpands"], [341, 3, 1, "", "test_getArea"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSphere": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_getVolume"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestSquare": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_dimensionThermallyExpands"], [341, 3, 1, "", "test_getArea"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [341, 3, 1, "", "test_getCircleInnerDiameter"], [341, 3, 1, "", "test_negativeArea"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestTriangle": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 3, 1, "", "test_dimensionThermallyExpands"], [341, 3, 1, "", "test_getArea"], [341, 3, 1, "", "test_thermallyExpands"]], "armi.reactor.tests.test_components.TestUnshapedComponent": [[341, 4, 1, "", "componentCls"], [341, 4, 1, "", "componentDims"], [341, 4, 1, "", "componentMaterial"], [341, 3, 1, "", "test_fromComponent"], [341, 3, 1, "", "test_getBoundingCircleOuterDiameter"], [341, 3, 1, "", "test_getComponentArea"]], "armi.reactor.tests.test_composites": [[342, 2, 1, "", "DummyComposite"], [342, 2, 1, "", "DummyLeaf"], [342, 2, 1, "", "MockBP"], [342, 2, 1, "", "TestCompositePattern"], [342, 2, 1, "", "TestCompositeTree"], [342, 2, 1, "", "TestFlagSerializer"], [342, 2, 1, "", "TestGetReactionRateDict"], [342, 2, 1, "", "TestMiscMethods"], [342, 1, 1, "", "getDummyParamDefs"]], "armi.reactor.tests.test_composites.DummyComposite": [[342, 4, 1, "", "pDefs"], [342, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.DummyLeaf": [[342, 3, 1, "", "getBoundingCircleOuterDiameter"], [342, 3, 1, "", "getChildren"], [342, 3, 1, "", "getChildrenWithFlags"], [342, 3, 1, "", "iterComponents"], [342, 4, 1, "", "pDefs"], [342, 4, 1, "", "paramCollectionType"]], "armi.reactor.tests.test_composites.MockBP": [[342, 4, 1, "", "activeNuclides"], [342, 4, 1, "", "allNuclidesInProblem"], [342, 4, 1, "", "customIsotopics"], [342, 4, 1, "", "elementsToExpand"], [342, 4, 1, "", "inactiveNuclides"]], "armi.reactor.tests.test_composites.TestCompositePattern": [[342, 3, 1, "", "test_Composite"], [342, 3, 1, "", "test_areChildernOfType"], [342, 3, 1, "", "test_containsAtLeastOneChildOfType"], [342, 3, 1, "", "test_containsOnlyChildrenOfType"], [342, 3, 1, "", "test_expandLFPs"], [342, 3, 1, "", "test_getBoundingCirlceOuterDiameter"], [342, 3, 1, "", "test_getChildren"], [342, 3, 1, "", "test_getIntegratedMgFlux"], [342, 3, 1, "", "test_getParamNames"], [342, 3, 1, "", "test_getReactionRates"], [342, 3, 1, "", "test_hasFlags"], [342, 3, 1, "", "test_hasFlagsNoTypeSpecified"], [342, 3, 1, "", "test_hasFlagsSubstring"], [342, 3, 1, "", "test_iterComponents"], [342, 3, 1, "", "test_nameContains"], [342, 3, 1, "", "test_nucSpec"], [342, 3, 1, "", "test_sort"], [342, 3, 1, "", "test_syncParameters"], [342, 3, 1, "", "test_updateVolume"]], "armi.reactor.tests.test_composites.TestCompositeTree": [[342, 4, 1, "", "blueprintYaml"], [342, 3, 1, "", "test_constituentReport"], [342, 3, 1, "", "test_getChildrenIncludeMaterials"], [342, 3, 1, "", "test_getFPMass"], [342, 3, 1, "", "test_getFissileMass"], [342, 3, 1, "", "test_getFuelMass"], [342, 3, 1, "", "test_getGammaEnergyDepositionConstants"], [342, 3, 1, "", "test_getHMMass"], [342, 3, 1, "", "test_getMaxParam"], [342, 3, 1, "", "test_getMinParam"], [342, 3, 1, "", "test_getNeutronEnergyDepositionConstants"], [342, 3, 1, "", "test_getNuclides"], [342, 3, 1, "", "test_ordering"], [342, 3, 1, "", "test_summing"]], "armi.reactor.tests.test_composites.TestFlagSerializer": [[342, 2, 1, "", "TestFlagsA"], [342, 2, 1, "", "TestFlagsB"], [342, 3, 1, "", "test_flagConversion"], [342, 3, 1, "", "test_flagSerialization"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA": [[342, 4, 1, "", "A"], [342, 4, 1, "", "B"], [342, 4, 1, "", "C"], [342, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB": [[342, 4, 1, "", "A"], [342, 4, 1, "", "B"], [342, 4, 1, "", "BPRIME"], [342, 4, 1, "", "C"], [342, 4, 1, "", "D"]], "armi.reactor.tests.test_composites.TestGetReactionRateDict": [[342, 3, 1, "", "test_getReactionRateDict"]], "armi.reactor.tests.test_composites.TestMiscMethods": [[342, 3, 1, "", "test_containsHeavyMetal"], [342, 3, 1, "", "test_copyParamsFrom"], [342, 3, 1, "", "test_copyParamsToChildren"], [342, 3, 1, "", "test_dimensionReport"], [342, 3, 1, "", "test_getAtomicWeight"], [342, 3, 1, "", "test_printDensities"], [342, 3, 1, "", "test_setMass"]], "armi.reactor.tests.test_flags": [[343, 2, 1, "", "TestFlags"]], "armi.reactor.tests.test_flags.TestFlags": [[343, 3, 1, "", "test_convertsStringsWithNonFlags"], [343, 3, 1, "", "test_defaultIsFalse"], [343, 3, 1, "", "test_fromString"], [343, 3, 1, "", "test_fromStringStrict"], [343, 3, 1, "", "test_isPickleable"], [343, 3, 1, "", "test_lookup"], [343, 3, 1, "", "test_toString"]], "armi.reactor.tests.test_geometry": [[344, 2, 1, "", "TestGeomType"], [344, 2, 1, "", "TestSymmetryType"], [344, 2, 1, "", "TestSystemLayoutInput"], [344, 2, 1, "", "TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry.TestGeomType": [[344, 3, 1, "", "test_fromStr"], [344, 3, 1, "", "test_label"], [344, 3, 1, "", "test_str"]], "armi.reactor.tests.test_geometry.TestSymmetryType": [[344, 3, 1, "", "test_SymmetryFactor"], [344, 3, 1, "", "test_baseConstructor"], [344, 3, 1, "", "test_checkValidGeomSymmetryCombo"], [344, 3, 1, "", "test_domainTypeNulls"], [344, 3, 1, "", "test_fromAny"], [344, 3, 1, "", "test_fromStr"], [344, 3, 1, "", "test_label"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInput": [[344, 3, 1, "", "test_asciimap"], [344, 3, 1, "", "test_growToFullCore"], [344, 3, 1, "", "test_readAsciimap"], [344, 3, 1, "", "test_readHexGeomXML"], [344, 3, 1, "", "test_readReactor"], [344, 3, 1, "", "test_yamlIO"]], "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ": [[344, 3, 1, "", "test_TRZyamlIO"], [344, 3, 1, "", "test_readTRZGeomXML"]], "armi.reactor.tests.test_parameters": [[345, 2, 1, "", "MockComposite"], [345, 2, 1, "", "MockCompositeChild"], [345, 2, 1, "", "MockCompositeGrandParent"], [345, 2, 1, "", "MockCompositeParent"], [345, 2, 1, "", "MockSyncPC"], [345, 2, 1, "", "ParameterTests"], [345, 2, 1, "", "SynchronizationTests"], [345, 1, 1, "", "makeComp"]], "armi.reactor.tests.test_parameters.MockSyncPC": [[345, 4, 1, "", "pDefs"], [345, 4, 1, "", "pb"]], "armi.reactor.tests.test_parameters.ParameterTests": [[345, 3, 1, "", "test_attemptingToSetParamWithoutSetterFails"], [345, 3, 1, "", "test_cannotCreateAttrbuteOnParameterCollectionSubclass"], [345, 3, 1, "", "test_cannotCreateInstanceOf_NoDefault"], [345, 3, 1, "", "test_cannotCreateInstanceOf_Undefined"], [345, 3, 1, "", "test_cannotDefineParameterWithSameName"], [345, 3, 1, "", "test_cannotDefineParameterWithSameNameForCollectionSubclass"], [345, 3, 1, "", "test_categories"], [345, 3, 1, "", "test_defaultLocation"], [345, 3, 1, "", "test_getWithoutDefaultRaisesParameterError"], [345, 3, 1, "", "test_mutableDefaultsNotSupported"], [345, 3, 1, "", "test_paramDefinitionsCompose"], [345, 3, 1, "", "test_paramPropertyDoesNotConflict"], [345, 3, 1, "", "test_paramPropertyDoesNotConflictWithNoneDefault"], [345, 3, 1, "", "test_parameterCollectionsHave__slots__"], [345, 3, 1, "", "test_setter"], [345, 3, 1, "", "test_setterGetterBasics"]], "armi.reactor.tests.test_parameters.SynchronizationTests": [[345, 3, 1, "", "assertEqual"], [345, 3, 1, "", "assertNotEqual"], [345, 3, 1, "", "assertRaises"], [345, 3, 1, "", "mpitest_conflictsMaintainWithStateRetainer"], [345, 3, 1, "", "mpitest_noConflicts"], [345, 3, 1, "", "mpitest_noConflictsMaintainWithStateRetainer"], [345, 3, 1, "", "mpitest_noConflicts_setByString"], [345, 3, 1, "", "mpitest_rxCoeffsProcess"], [345, 3, 1, "", "mpitest_withConflicts"], [345, 3, 1, "", "mpitest_withConflictsButSameValue"], [345, 3, 1, "", "run"], [345, 3, 1, "", "write"]], "armi.reactor.tests.test_reactors": [[346, 2, 1, "", "CartesianReactorTests"], [346, 2, 1, "", "HexReactorTests"], [346, 2, 1, "", "ReactorTests"], [346, 1, 1, "", "buildOperatorOfEmptyCartesianBlocks"], [346, 1, 1, "", "buildOperatorOfEmptyHexBlocks"], [346, 1, 1, "", "loadTestReactor"], [346, 1, 1, "", "reduceTestReactorRings"]], "armi.reactor.tests.test_reactors.CartesianReactorTests": [[346, 3, 1, "", "test_getAssembliesInSquareRing"], [346, 3, 1, "", "test_getAssemblyPitch"], [346, 3, 1, "", "test_getNuclideCategoriesLogging"]], "armi.reactor.tests.test_reactors.HexReactorTests": [[346, 3, 1, "", "test_addMoreNodes"], [346, 3, 1, "", "test_applyThermalExpansion_CoreConstruct"], [346, 3, 1, "", "test_buildManualZones"], [346, 3, 1, "", "test_buildManualZonesEmpty"], [346, 3, 1, "", "test_countBlocksOfType"], [346, 3, 1, "", "test_countFuelAxialBlocks"], [346, 3, 1, "", "test_createAssemblyOfType"], [346, 3, 1, "", "test_createAssemblyOfTypeExpandedCore"], [346, 3, 1, "", "test_createFreshFeed"], [346, 3, 1, "", "test_differentNuclideModels"], [346, 3, 1, "", "test_factorySortSetting"], [346, 3, 1, "", "test_findAllAxialMeshPoints"], [346, 3, 1, "", "test_findAllAxialMeshPoints_wSubmesh"], [346, 3, 1, "", "test_findAllAziMeshPoints"], [346, 3, 1, "", "test_findAllRadMeshPoints"], [346, 3, 1, "", "test_findAxialMeshIndexOf"], [346, 3, 1, "", "test_findNeighbors"], [346, 3, 1, "", "test_genAssembliesAddedThisCycle"], [346, 3, 1, "", "test_geomType"], [346, 3, 1, "", "test_getAllXsSuffixes"], [346, 3, 1, "", "test_getAssembliesInCircularRing"], [346, 3, 1, "", "test_getAssembliesInHexRing"], [346, 3, 1, "", "test_getAssembliesOnSymmetryLine"], [346, 3, 1, "", "test_getAssembly"], [346, 3, 1, "", "test_getAssemblyPitch"], [346, 3, 1, "", "test_getAvgTemp"], [346, 3, 1, "", "test_getBlocksByIndices"], [346, 3, 1, "", "test_getDominantMaterial"], [346, 3, 1, "", "test_getFirstFuelBlockAxialNode"], [346, 3, 1, "", "test_getFluxVector"], [346, 3, 1, "", "test_getFuelBottomHeight"], [346, 3, 1, "", "test_getGridBounds"], [346, 3, 1, "", "test_getMass"], [346, 3, 1, "", "test_getMaxAssembliesInHexRing"], [346, 3, 1, "", "test_getMaxNumPins"], [346, 3, 1, "", "test_getMinimumPercentFluxInFuel"], [346, 3, 1, "", "test_getNozzleTypes"], [346, 3, 1, "", "test_getNuclideCategories"], [346, 3, 1, "", "test_getNumAssembliesWithAllRingsFilledOut"], [346, 3, 1, "", "test_getNumEnergyGroups"], [346, 3, 1, "", "test_getScalarEvolution"], [346, 3, 1, "", "test_getSymmetryFactor"], [346, 3, 1, "", "test_getTotalParam"], [346, 3, 1, "", "test_growToFullCore"], [346, 3, 1, "", "test_ifMissingSpatialGrid"], [346, 3, 1, "", "test_isPickleable"], [346, 3, 1, "", "test_locations"], [346, 3, 1, "", "test_nonUniformAssems"], [346, 3, 1, "", "test_normalizeNames"], [346, 3, 1, "", "test_pinCoordsAllBlocks"], [346, 3, 1, "", "test_removeAllAssemblies"], [346, 3, 1, "", "test_removeAssembliesInRing"], [346, 3, 1, "", "test_removeAssembliesInRingByCount"], [346, 3, 1, "", "test_removeAssembliesInRingHex"], [346, 3, 1, "", "test_removeAssembly"], [346, 3, 1, "", "test_removeAssemblyNoSfp"], [346, 3, 1, "", "test_restoreReactor"], [346, 3, 1, "", "test_saveAllFlux"], [346, 3, 1, "", "test_setB10VolOnCreation"], [346, 3, 1, "", "test_setPowerIfNecessary"], [346, 3, 1, "", "test_sortAssemByRing"], [346, 3, 1, "", "test_sortChildren"], [346, 3, 1, "", "test_updateBlockBOLHeights_DBLoad"]], "armi.reactor.tests.test_rz_reactors": [[347, 2, 1, "", "Test_RZT_Reactor"], [347, 2, 1, "", "Test_RZT_Reactor_modern"]], "armi.reactor.tests.test_rz_reactors.Test_RZT_Reactor": [[347, 3, 1, "", "test_findAllMeshPoints"], [347, 3, 1, "", "test_loadRZT"]], "armi.reactor.tests.test_rz_reactors.Test_RZT_Reactor_modern": [[347, 3, 1, "", "test_loadRZT_reactor"]], "armi.reactor.tests.test_zones": [[348, 2, 1, "", "TestZone"], [348, 2, 1, "", "TestZones"]], "armi.reactor.tests.test_zones.TestZone": [[348, 3, 1, "", "test_addItem"], [348, 3, 1, "", "test_addItems"], [348, 3, 1, "", "test_addLoc"], [348, 3, 1, "", "test_addLocs"], [348, 3, 1, "", "test_blocks"], [348, 3, 1, "", "test_iteration"], [348, 3, 1, "", "test_removeItem"], [348, 3, 1, "", "test_removeItems"], [348, 3, 1, "", "test_removeLoc"], [348, 3, 1, "", "test_removeLocs"], [348, 3, 1, "", "test_repr"]], "armi.reactor.tests.test_zones.TestZones": [[348, 3, 1, "", "test_dictionaryInterface"], [348, 3, 1, "", "test_findZoneItIsIn"], [348, 3, 1, "", "test_getAllLocations"], [348, 3, 1, "", "test_getZoneLocations"], [348, 3, 1, "", "test_sortZones"], [348, 3, 1, "", "test_summary"]], "armi.reactor.zones": [[349, 2, 1, "", "Zone"], [349, 2, 1, "", "Zones"]], "armi.reactor.zones.Zone": [[349, 4, 1, "", "VALID_TYPES"], [349, 3, 1, "", "addItem"], [349, 3, 1, "", "addItems"], [349, 3, 1, "", "addLoc"], [349, 3, 1, "", "addLocs"], [349, 3, 1, "", "removeItem"], [349, 3, 1, "", "removeItems"], [349, 3, 1, "", "removeLoc"], [349, 3, 1, "", "removeLocs"]], "armi.reactor.zones.Zones": [[349, 3, 1, "", "addZone"], [349, 3, 1, "", "addZones"], [349, 3, 1, "", "checkDuplicates"], [349, 3, 1, "", "findZoneItIsIn"], [349, 3, 1, "", "getAllLocations"], [349, 3, 1, "", "getZoneLocations"], [349, 5, 1, "", "names"], [349, 3, 1, "", "removeZone"], [349, 3, 1, "", "removeZones"], [349, 3, 1, "", "sortZones"], [349, 3, 1, "", "summary"]], "armi.runLog": [[350, 2, 1, "", "DeduplicationFilter"], [350, 2, 1, "", "NullLogger"], [350, 2, 1, "", "RunLogger"], [350, 1, 1, "", "close"], [350, 1, 1, "", "concatenateLogs"], [350, 1, 1, "", "createLogDir"], [350, 1, 1, "", "debug"], [350, 1, 1, "", "error"], [350, 1, 1, "", "extra"], [350, 1, 1, "", "getVerbosity"], [350, 1, 1, "", "header"], [350, 1, 1, "", "important"], [350, 1, 1, "", "info"], [350, 1, 1, "", "logFactory"], [350, 1, 1, "", "raw"], [350, 1, 1, "", "setVerbosity"], [350, 1, 1, "", "warning"], [350, 1, 1, "", "warningReport"]], "armi.runLog.DeduplicationFilter": [[350, 3, 1, "", "filter"]], "armi.runLog.NullLogger": [[350, 3, 1, "", "addHandler"]], "armi.runLog.RunLogger": [[350, 4, 1, "", "FMT"], [350, 3, 1, "", "allowStopDuplicates"], [350, 3, 1, "", "close"], [350, 3, 1, "", "flush"], [350, 3, 1, "", "getDuplicatesFilter"], [350, 3, 1, "", "log"], [350, 3, 1, "", "setVerbosity"], [350, 3, 1, "", "warningReport"], [350, 3, 1, "", "write"]], "armi.scripts": [[352, 0, 0, "-", "migration"]], "armi.scripts.migration": [[353, 0, 0, "-", "base"], [354, 0, 0, "-", "crossSectionBlueprintsToSettings"], [355, 0, 0, "-", "m0_1_0_newDbFormat"], [356, 0, 0, "-", "m0_1_3"], [357, 0, 0, "-", "m0_1_6_locationLabels"], [358, 0, 0, "-", "tests"]], "armi.scripts.migration.base": [[353, 2, 1, "", "BlueprintsMigration"], [353, 2, 1, "", "DatabaseMigration"], [353, 2, 1, "", "GeomMigration"], [353, 2, 1, "", "Migration"], [353, 2, 1, "", "SettingsMigration"]], "armi.scripts.migration.base.Migration": [[353, 3, 1, "", "apply"], [353, 4, 1, "", "fromVersion"], [353, 4, 1, "", "toVersion"]], "armi.scripts.migration.crossSectionBlueprintsToSettings": [[354, 2, 1, "", "MoveCrossSectionsFromBlueprints"], [354, 1, 1, "", "migrateCrossSectionsFromBlueprints"]], "armi.scripts.migration.crossSectionBlueprintsToSettings.MoveCrossSectionsFromBlueprints": [[354, 4, 1, "", "fromVersion"], [354, 4, 1, "", "toVersion"]], "armi.scripts.migration.m0_1_0_newDbFormat": [[355, 2, 1, "", "ConvertDB2toDB3"]], "armi.scripts.migration.m0_1_0_newDbFormat.ConvertDB2toDB3": [[355, 3, 1, "", "apply"]], "armi.scripts.migration.m0_1_3": [[356, 2, 1, "", "RemoveCentersFromBlueprints"], [356, 2, 1, "", "UpdateElementalNuclides"]], "armi.scripts.migration.m0_1_3.RemoveCentersFromBlueprints": [[356, 4, 1, "", "fromVersion"], [356, 4, 1, "", "toVersion"]], "armi.scripts.migration.m0_1_3.UpdateElementalNuclides": [[356, 4, 1, "", "deletions"], [356, 4, 1, "", "fromVersion"], [356, 4, 1, "", "swaps"], [356, 4, 1, "", "toVersion"]], "armi.scripts.migration.m0_1_6_locationLabels": [[357, 2, 1, "", "ConvertAlphanumLocationSettingsToNum"], [357, 1, 1, "", "getIndicesFromDIF3DStyleLocatorLabel"]], "armi.scripts.migration.m0_1_6_locationLabels.ConvertAlphanumLocationSettingsToNum": [[357, 4, 1, "", "fromVersion"], [357, 4, 1, "", "toVersion"]], "armi.scripts.migration.tests": [[359, 0, 0, "-", "test_m0_1_6_locationLabels"]], "armi.scripts.migration.tests.test_m0_1_6_locationLabels": [[359, 2, 1, "", "TestMigration"]], "armi.scripts.migration.tests.test_m0_1_6_locationLabels.TestMigration": [[359, 3, 1, "", "test_locationLabelMigration"]], "armi.settings": [[361, 0, 0, "-", "caseSettings"], [362, 0, 0, "-", "fwSettings"], [360, 1, 1, "", "getMasterCs"], [360, 1, 1, "", "isBoolSetting"], [360, 1, 1, "", "promptForSettingsFile"], [360, 1, 1, "", "recursivelyLoadSettingsFiles"], [360, 1, 1, "", "setMasterCs"], [367, 0, 0, "-", "setting"], [368, 0, 0, "-", "settingsIO"], [369, 0, 0, "-", "tests"]], "armi.settings.caseSettings": [[361, 2, 1, "", "Settings"]], "armi.settings.caseSettings.Settings": [[361, 5, 1, "", "caseTitle"], [361, 4, 1, "", "defaultCaseTitle"], [361, 3, 1, "", "duplicate"], [361, 5, 1, "", "environmentSettings"], [361, 3, 1, "", "failOnLoad"], [361, 3, 1, "", "getSetting"], [361, 3, 1, "", "getSettingsSetByUser"], [361, 3, 1, "", "initLogVerbosity"], [361, 5, 1, "", "inputDirectory"], [361, 4, 1, "", "instance"], [361, 3, 1, "", "items"], [361, 3, 1, "", "keys"], [361, 3, 1, "", "loadFromInputFile"], [361, 3, 1, "", "loadFromString"], [361, 3, 1, "", "modified"], [361, 3, 1, "", "registerUserPlugins"], [361, 3, 1, "", "revertToDefaults"], [361, 3, 1, "", "setModuleVerbosities"], [361, 3, 1, "", "updateEnvironmentSettingsFrom"], [361, 3, 1, "", "values"], [361, 3, 1, "", "writeToYamlFile"], [361, 3, 1, "", "writeToYamlStream"]], "armi.settings.fwSettings": [[363, 0, 0, "-", "databaseSettings"], [362, 1, 1, "", "getFrameworkSettings"], [364, 0, 0, "-", "globalSettings"], [365, 0, 0, "-", "reportSettings"], [366, 0, 0, "-", "tightCouplingSettings"]], "armi.settings.fwSettings.databaseSettings": [[363, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.globalSettings": [[364, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.reportSettings": [[365, 1, 1, "", "defineSettings"]], "armi.settings.fwSettings.tightCouplingSettings": [[366, 2, 1, "", "TightCouplingSettingDef"], [366, 2, 1, "", "TightCouplingSettings"], [366, 1, 1, "", "serializeTightCouplingSettings"], [366, 1, 1, "", "tightCouplingSettingsValidator"]], "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef": [[366, 3, 1, "", "dump"]], "armi.settings.setting": [[367, 2, 1, "", "Default"], [367, 2, 1, "", "FlagListSetting"], [367, 2, 1, "", "Option"], [367, 2, 1, "", "Setting"]], "armi.settings.setting.Default": [[367, 4, 1, "", "settingName"], [367, 4, 1, "", "value"]], "armi.settings.setting.FlagListSetting": [[367, 3, 1, "", "dump"], [367, 3, 1, "", "schema"]], "armi.settings.setting.Option": [[367, 4, 1, "", "option"], [367, 4, 1, "", "settingName"]], "armi.settings.setting.Setting": [[367, 3, 1, "", "addOption"], [367, 3, 1, "", "addOptions"], [367, 3, 1, "", "changeDefault"], [367, 5, 1, "", "containedType"], [367, 5, 1, "", "default"], [367, 3, 1, "", "dump"], [367, 3, 1, "", "getCustomAttributes"], [367, 3, 1, "", "getDefaultAttributes"], [367, 3, 1, "", "isDefault"], [367, 5, 1, "", "offDefault"], [367, 3, 1, "", "revertToDefault"], [367, 3, 1, "", "setValue"], [367, 5, 1, "", "underlyingType"], [367, 5, 1, "", "value"]], "armi.settings.settingsIO": [[368, 2, 1, "", "Roots"], [368, 7, 1, "", "RunLogPromptCancel"], [368, 7, 1, "", "RunLogPromptUnresolvable"], [368, 2, 1, "", "SettingRenamer"], [368, 2, 1, "", "SettingsReader"], [368, 2, 1, "", "SettingsWriter"], [368, 1, 1, "", "prompt"]], "armi.settings.settingsIO.Roots": [[368, 4, 1, "", "CUSTOM"], [368, 4, 1, "", "VERSION"]], "armi.settings.settingsIO.SettingRenamer": [[368, 3, 1, "", "renameSetting"]], "armi.settings.settingsIO.SettingsReader": [[368, 2, 1, "", "SettingsInputFormat"], [368, 3, 1, "", "readFromFile"], [368, 3, 1, "", "readFromStream"]], "armi.settings.settingsIO.SettingsReader.SettingsInputFormat": [[368, 4, 1, "", "YAML"], [368, 3, 1, "", "fromExt"]], "armi.settings.settingsIO.SettingsWriter": [[368, 3, 1, "", "writeYaml"]], "armi.settings.tests": [[370, 0, 0, "-", "test_settings"], [371, 0, 0, "-", "test_settingsIO"]], "armi.settings.tests.test_settings": [[370, 2, 1, "", "DummyPlugin1"], [370, 2, 1, "", "DummyPlugin2"], [370, 2, 1, "", "PluginAddsOptions"], [370, 2, 1, "", "TestAddingOptions"], [370, 2, 1, "", "TestCaseSettings"], [370, 2, 1, "", "TestFlagListSetting"], [370, 2, 1, "", "TestSettings2"], [370, 2, 1, "", "TestSettingsUtils"], [370, 2, 1, "", "TestSettingsValidationUtils"]], "armi.settings.tests.test_settings.DummyPlugin1": [[370, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.DummyPlugin2": [[370, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.PluginAddsOptions": [[370, 3, 1, "", "defineSettings"]], "armi.settings.tests.test_settings.TestAddingOptions": [[370, 3, 1, "", "test_addingOptions"]], "armi.settings.tests.test_settings.TestCaseSettings": [[370, 3, 1, "", "test_updateEnvironmentSettingsFrom"]], "armi.settings.tests.test_settings.TestFlagListSetting": [[370, 3, 1, "", "test_flagListSetting"], [370, 3, 1, "", "test_invalidFlagListTypeError"]], "armi.settings.tests.test_settings.TestSettings2": [[370, 3, 1, "", "test_copySetting"], [370, 3, 1, "", "test_copySettingNotDefault"], [370, 3, 1, "", "test_csWorks"], [370, 3, 1, "", "test_default"], [370, 3, 1, "", "test_empty"], [370, 3, 1, "", "test_getFailures"], [370, 3, 1, "", "test_getSettingsSetByUser"], [370, 3, 1, "", "test_listCoercion"], [370, 3, 1, "", "test_listsMutable"], [370, 3, 1, "", "test_modified"], [370, 3, 1, "", "test_pluginSettings"], [370, 3, 1, "", "test_pluginValidatorsAreDiscovered"], [370, 3, 1, "", "test_schemaChecksType"], [370, 3, 1, "", "test_setModuleVerbosities"], [370, 3, 1, "", "test_settingIsOkayToGrab"], [370, 3, 1, "", "test_typeDetection"]], "armi.settings.tests.test_settings.TestSettingsUtils": [[370, 3, 1, "", "test_prompt"], [370, 3, 1, "", "test_recursiveScan"]], "armi.settings.tests.test_settings.TestSettingsValidationUtils": [[370, 3, 1, "", "test_validateVersion"]], "armi.settings.tests.test_settingsIO": [[371, 2, 1, "", "MockEntryPoint"], [371, 2, 1, "", "SettingArgsTests"], [371, 2, 1, "", "SettingsFailureTests"], [371, 2, 1, "", "SettingsReaderTests"], [371, 2, 1, "", "SettingsRenameTests"], [371, 2, 1, "", "SettingsWriterTests"]], "armi.settings.tests.test_settingsIO.MockEntryPoint": [[371, 4, 1, "", "name"], [371, 4, 1, "", "settingsArgument"]], "armi.settings.tests.test_settingsIO.SettingArgsTests": [[371, 3, 1, "", "test_cannotLoadSettingsAfterParsingCommandLineSetting"], [371, 3, 1, "", "test_commandLineSetting"]], "armi.settings.tests.test_settingsIO.SettingsFailureTests": [[371, 3, 1, "", "test_invalidFile"], [371, 3, 1, "", "test_loadFromYamlFailsOnBadNames"], [371, 3, 1, "", "test_settingsObjSetting"]], "armi.settings.tests.test_settingsIO.SettingsReaderTests": [[371, 3, 1, "", "test_basicSettingsReader"], [371, 3, 1, "", "test_readFromFile"]], "armi.settings.tests.test_settingsIO.SettingsRenameTests": [[371, 4, 1, "", "testSettings"], [371, 3, 1, "", "test_collidingRenames"], [371, 3, 1, "", "test_rename"]], "armi.settings.tests.test_settingsIO.SettingsWriterTests": [[371, 3, 1, "", "test_errorSettingsWriter"], [371, 3, 1, "", "test_writeFull"], [371, 3, 1, "", "test_writeMedium"], [371, 3, 1, "", "test_writeShort"], [371, 3, 1, "", "test_writeYaml"]], "armi.tests": [[372, 2, 1, "", "ArmiTestHelper"], [372, 2, 1, "", "Fixture"], [372, 1, 1, "", "fixture"], [372, 1, 1, "", "getEmptyCartesianReactor"], [372, 1, 1, "", "getEmptyHexReactor"], [373, 0, 0, "-", "mockRunLogs"], [372, 1, 1, "", "rebaselineTextComparisons"], [374, 0, 0, "-", "refSmallReactorShuffleLogic"], [372, 1, 1, "", "requires_fixture"], [375, 0, 0, "-", "test_apps"], [376, 0, 0, "-", "test_armiTestHelper"], [377, 0, 0, "-", "test_cartesian"], [378, 0, 0, "-", "test_interfaces"], [379, 0, 0, "-", "test_lwrInputs"], [380, 0, 0, "-", "test_mpiActions"], [381, 0, 0, "-", "test_mpiFeatures"], [382, 0, 0, "-", "test_notebooks"], [383, 0, 0, "-", "test_plugins"], [384, 0, 0, "-", "test_runLog"], [385, 0, 0, "-", "test_tests"], [386, 0, 0, "-", "test_user_plugins"]], "armi.tests.ArmiTestHelper": [[372, 3, 1, "", "compareFilesLineByLine"], [372, 3, 1, "", "compareLines"]], "armi.tests.mockRunLogs": [[373, 2, 1, "", "BufferLog"], [373, 2, 1, "", "LogCounter"]], "armi.tests.mockRunLogs.BufferLog": [[373, 3, 1, "", "clearSingleWarnings"], [373, 3, 1, "", "emptyStdout"], [373, 3, 1, "", "getStderrValue"], [373, 3, 1, "", "getStdout"], [373, 3, 1, "", "log"]], "armi.tests.mockRunLogs.LogCounter": [[373, 3, 1, "", "log"]], "armi.tests.refSmallReactorShuffleLogic": [[374, 2, 1, "", "EquilibriumShuffler"], [374, 1, 1, "", "getFactorList"]], "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler": [[374, 3, 1, "", "chooseSwaps"]], "armi.tests.test_apps": [[375, 2, 1, "", "TestApps"], [375, 2, 1, "", "TestArmi"], [375, 2, 1, "", "TestPlugin1"], [375, 2, 1, "", "TestPlugin2"], [375, 2, 1, "", "TestPlugin3"], [375, 2, 1, "", "TestPlugin4"]], "armi.tests.test_apps.TestApps": [[375, 3, 1, "", "test_disableFutureConfigures"], [375, 3, 1, "", "test_getParamRenames"], [375, 3, 1, "", "test_getParamRenamesInvalids"], [375, 3, 1, "", "test_getSettings"], [375, 3, 1, "", "test_isStableReleaseVersion"], [375, 3, 1, "", "test_registerPluginFlags"], [375, 3, 1, "", "test_splashText"], [375, 3, 1, "", "test_splashTextDifferentApp"], [375, 3, 1, "", "test_version"]], "armi.tests.test_apps.TestArmi": [[375, 3, 1, "", "test_getDefaultPlugMan"], [375, 3, 1, "", "test_main"], [375, 3, 1, "", "test_overConfigured"]], "armi.tests.test_apps.TestPlugin1": [[375, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin2": [[375, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin3": [[375, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_apps.TestPlugin4": [[375, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_armiTestHelper": [[376, 2, 1, "", "TestArmiTestHelper"]], "armi.tests.test_armiTestHelper.TestArmiTestHelper": [[376, 3, 1, "", "test_compareFilesFail"], [376, 3, 1, "", "test_compareFilesSucceedFalseNegative"], [376, 3, 1, "", "test_compareFilesSucess"]], "armi.tests.test_cartesian": [[377, 2, 1, "", "CartesianReactorTests"]], "armi.tests.test_cartesian.CartesianReactorTests": [[377, 3, 1, "", "test_custom"]], "armi.tests.test_interfaces": [[378, 2, 1, "", "DummyInterface"], [378, 2, 1, "", "TestCodeInterface"], [378, 2, 1, "", "TestTextProcessor"], [378, 2, 1, "", "TestTightCoupler"]], "armi.tests.test_interfaces.DummyInterface": [[378, 4, 1, "", "function"], [378, 4, 1, "", "name"]], "armi.tests.test_interfaces.TestCodeInterface": [[378, 3, 1, "", "test_distributable"], [378, 3, 1, "", "test_duplicate"], [378, 3, 1, "", "test_enabled"], [378, 3, 1, "", "test_isRequestedDetailPoint"], [378, 3, 1, "", "test_nameContains"], [378, 3, 1, "", "test_preDistributeState"]], "armi.tests.test_interfaces.TestTextProcessor": [[378, 3, 1, "", "test_fsearch"], [378, 3, 1, "", "test_fsearch_text"]], "armi.tests.test_interfaces.TestTightCoupler": [[378, 3, 1, "", "test_couplerActive"], [378, 3, 1, "", "test_getListDimension"], [378, 3, 1, "", "test_isConverged"], [378, 3, 1, "", "test_isConvergedRuntimeError"], [378, 3, 1, "", "test_isConvergedValueError"], [378, 3, 1, "", "test_storePreviousIterationValue"], [378, 3, 1, "", "test_storePreviousIterationValueException"]], "armi.tests.test_lwrInputs": [[379, 2, 1, "", "C5G7ReactorTests"]], "armi.tests.test_lwrInputs.C5G7ReactorTests": [[379, 3, 1, "", "test_loadC5G7"], [379, 3, 1, "", "test_runAndLoadC5G7"]], "armi.tests.test_mpiActions": [[380, 2, 1, "", "MpiIterTests"], [380, 2, 1, "", "QueueActionsTests"], [380, 1, 1, "", "passer"]], "armi.tests.test_mpiActions.MpiIterTests": [[380, 3, 1, "", "test_diagnosePickleErrorTestReactor"], [380, 3, 1, "", "test_excessProcesses"], [380, 3, 1, "", "test_mpiIter"], [380, 3, 1, "", "test_parallel"], [380, 3, 1, "", "test_perfectBalancing"], [380, 3, 1, "", "test_runActionsDistributeStateAction"], [380, 3, 1, "", "test_runActionsDistributionAction"], [380, 3, 1, "", "test_serialGather"], [380, 3, 1, "", "test_typicalBalancing"]], "armi.tests.test_mpiActions.QueueActionsTests": [[380, 3, 1, "", "test_disableForExclusiveTasks"], [380, 3, 1, "", "test_makeQueue"]], "armi.tests.test_mpiFeatures": [[381, 2, 1, "", "BcastAction1"], [381, 2, 1, "", "BcastAction2"], [381, 2, 1, "", "FailingInterface1"], [381, 2, 1, "", "FailingInterface2"], [381, 2, 1, "", "FailingInterface3"], [381, 2, 1, "", "MpiDistributeStateTests"], [381, 2, 1, "", "MpiOperatorTests"], [381, 2, 1, "", "MpiPathToolsTests"]], "armi.tests.test_mpiFeatures.BcastAction1": [[381, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.BcastAction2": [[381, 3, 1, "", "invokeHook"]], "armi.tests.test_mpiFeatures.FailingInterface1": [[381, 3, 1, "", "interactEveryNode"], [381, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface2": [[381, 3, 1, "", "interactEveryNode"], [381, 4, 1, "", "name"]], "armi.tests.test_mpiFeatures.FailingInterface3": [[381, 3, 1, "", "fail"], [381, 3, 1, "", "interactEveryNode"], [381, 4, 1, "", "name"], [381, 3, 1, "", "workerOperate"]], "armi.tests.test_mpiFeatures.MpiDistributeStateTests": [[381, 3, 1, "", "test_compileResults"], [381, 3, 1, "", "test_distributeInterfaces"], [381, 3, 1, "", "test_distributeReactor"], [381, 3, 1, "", "test_distributeSettings"], [381, 3, 1, "", "test_distributeState"]], "armi.tests.test_mpiFeatures.MpiOperatorTests": [[381, 3, 1, "", "test_basicOperatorMPI"], [381, 3, 1, "", "test_primaryCritical"], [381, 3, 1, "", "test_primaryException"]], "armi.tests.test_mpiFeatures.MpiPathToolsTests": [[381, 3, 1, "", "test_cleanPathMpi"]], "armi.tests.test_notebooks": [[382, 2, 1, "", "NotebookTests"], [382, 1, 1, "", "runNotebook"]], "armi.tests.test_notebooks.NotebookTests": [[382, 3, 1, "", "test_runDataModel"], [382, 3, 1, "", "test_runParamSweep"]], "armi.tests.test_plugins": [[383, 2, 1, "", "TestPlugin"]], "armi.tests.test_plugins.TestPlugin": [[383, 4, 1, "", "plugin"], [383, 3, 1, "", "test_defineBlueprintsSections"], [383, 3, 1, "", "test_exposeInterfaces"]], "armi.tests.test_runLog": [[384, 2, 1, "", "TestRunLog"], [384, 2, 1, "", "TestRunLogger"]], "armi.tests.test_runLog.TestRunLog": [[384, 3, 1, "", "test_callingStartLogMultipleTimes"], [384, 3, 1, "", "test_closeLogging"], [384, 3, 1, "", "test_concatenateLogs"], [384, 3, 1, "", "test_createLogDir"], [384, 3, 1, "", "test_getWhiteSpace"], [384, 3, 1, "", "test_invalidSetVerbosityByString"], [384, 3, 1, "", "test_parentRunLogging"], [384, 3, 1, "", "test_setVerbosity"], [384, 3, 1, "", "test_setVerbosityBeforeStartLog"], [384, 3, 1, "", "test_setVerbosityFromInteger"], [384, 3, 1, "", "test_setVerbosityFromString"], [384, 3, 1, "", "test_verbosityOutOfRange"], [384, 3, 1, "", "test_warningReport"], [384, 3, 1, "", "test_warningReportInvalid"]], "armi.tests.test_runLog.TestRunLogger": [[384, 3, 1, "", "test_allowStopDuplicates"], [384, 3, 1, "", "test_getDuplicatesFilter"], [384, 3, 1, "", "test_write"]], "armi.tests.test_tests": [[385, 2, 1, "", "Test_CompareFiles"]], "armi.tests.test_tests.Test_CompareFiles": [[385, 3, 1, "", "test_compareFileLine"]], "armi.tests.test_user_plugins": [[386, 2, 1, "", "TestUserPlugins"], [386, 2, 1, "", "UpInterface"], [386, 2, 1, "", "UserPluginBadDefineParameterRenames"], [386, 2, 1, "", "UserPluginBadDefinesSettings"], [386, 2, 1, "", "UserPluginFlags"], [386, 2, 1, "", "UserPluginFlags2"], [386, 2, 1, "", "UserPluginFlags3"], [386, 2, 1, "", "UserPluginOnProcessCoreLoading"], [386, 2, 1, "", "UserPluginWithInterface"]], "armi.tests.test_user_plugins.TestUserPlugins": [[386, 3, 1, "", "test_registerRepeatedUserPlugins"], [386, 3, 1, "", "test_registerUserPlugins"], [386, 3, 1, "", "test_registerUserPluginsAbsPath"], [386, 3, 1, "", "test_registerUserPluginsFromSettings"], [386, 3, 1, "", "test_userPluginOnProcessCoreLoading"], [386, 3, 1, "", "test_userPluginWithInterfaces"], [386, 3, 1, "", "test_userPluginsFlags"], [386, 3, 1, "", "test_validateUserPluginLimitations"]], "armi.tests.test_user_plugins.UpInterface": [[386, 3, 1, "", "interactEveryNode"], [386, 4, 1, "", "name"]], "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames": [[386, 3, 1, "", "defineParameterRenames"]], "armi.tests.test_user_plugins.UserPluginBadDefinesSettings": [[386, 3, 1, "", "defineSettings"]], "armi.tests.test_user_plugins.UserPluginFlags": [[386, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags2": [[386, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginFlags3": [[386, 3, 1, "", "defineFlags"]], "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading": [[386, 3, 1, "", "onProcessCoreLoading"]], "armi.tests.test_user_plugins.UserPluginWithInterface": [[386, 3, 1, "", "exposeInterfaces"]], "armi.utils": [[387, 2, 1, "", "MergeableDict"], [387, 2, 1, "", "MyPickler"], [388, 0, 0, "-", "asciimaps"], [387, 1, 1, "", "capStrLen"], [387, 1, 1, "", "classesInHierarchy"], [389, 0, 0, "-", "codeTiming"], [387, 1, 1, "", "copyWithoutBlocking"], [387, 1, 1, "", "createFormattedStrWithDelimiter"], [390, 0, 0, "-", "customExceptions"], [391, 0, 0, "-", "densityTools"], [392, 0, 0, "-", "directoryChangers"], [393, 0, 0, "-", "directoryChangersMpi"], [387, 1, 1, "", "doTestPickleOnAllContents2"], [394, 0, 0, "-", "dochelpers"], [395, 0, 0, "-", "dynamicImporter"], [396, 0, 0, "-", "flags"], [387, 1, 1, "", "getAvailabilityFactors"], [387, 1, 1, "", "getBurnSteps"], [387, 1, 1, "", "getCumulativeNodeNum"], [387, 1, 1, "", "getCycleLengths"], [387, 1, 1, "", "getCycleNames"], [387, 1, 1, "", "getCycleNodeFromCumulativeNode"], [387, 1, 1, "", "getCycleNodeFromCumulativeStep"], [387, 1, 1, "", "getFileSHA1Hash"], [387, 1, 1, "", "getMaxBurnSteps"], [387, 1, 1, "", "getNodesPerCycle"], [387, 1, 1, "", "getPowerFractions"], [387, 1, 1, "", "getPreviousTimeNode"], [387, 1, 1, "", "getStepLengths"], [387, 1, 1, "", "hasBurnup"], [398, 0, 0, "-", "hexagon"], [399, 0, 0, "-", "iterables"], [387, 1, 1, "", "list2str"], [400, 0, 0, "-", "mathematics"], [401, 0, 0, "-", "outputCache"], [402, 0, 0, "-", "parsing"], [403, 0, 0, "-", "pathTools"], [387, 1, 1, "", "plotMatrix"], [404, 0, 0, "-", "plotting"], [387, 1, 1, "", "prependToList"], [405, 0, 0, "-", "properties"], [406, 0, 0, "-", "reportPlotting"], [387, 1, 1, "", "safeCopy"], [387, 1, 1, "", "slantSplit"], [407, 0, 0, "-", "tests"], [427, 0, 0, "-", "textProcessors"], [428, 0, 0, "-", "triangle"], [387, 1, 1, "", "tryPickleOnAllContents"], [387, 1, 1, "", "tryPickleOnAllContents3"], [429, 0, 0, "-", "units"], [387, 1, 1, "", "userName"]], "armi.utils.MergeableDict": [[387, 3, 1, "", "merge"]], "armi.utils.MyPickler": [[387, 3, 1, "", "save"]], "armi.utils.asciimaps": [[388, 2, 1, "", "AsciiMap"], [388, 2, 1, "", "AsciiMapCartesian"], [388, 2, 1, "", "AsciiMapHexFullFlatsUp"], [388, 2, 1, "", "AsciiMapHexFullTipsUp"], [388, 2, 1, "", "AsciiMapHexThirdFlatsUp"], [388, 1, 1, "", "asciiMapFromGeomAndDomain"]], "armi.utils.asciimaps.AsciiMap": [[388, 4, 1, "", "asciiLabelByIndices"], [388, 4, 1, "", "asciiLines"], [388, 4, 1, "", "asciiOffsets"], [388, 3, 1, "", "fromReactor"], [388, 3, 1, "", "gridContentsToAscii"], [388, 3, 1, "", "items"], [388, 3, 1, "", "keys"], [388, 3, 1, "", "readAscii"], [388, 3, 1, "", "writeAscii"]], "armi.utils.codeTiming": [[389, 2, 1, "", "MasterTimer"], [389, 1, 1, "", "getMasterTimer"], [389, 1, 1, "", "timed"]], "armi.utils.codeTiming.MasterTimer": [[389, 3, 1, "", "endTimer"], [389, 3, 1, "", "getActiveTimers"], [389, 3, 1, "", "getMasterTimer"], [389, 3, 1, "", "getTimer"], [389, 3, 1, "", "report"], [389, 3, 1, "", "startAll"], [389, 3, 1, "", "startTimer"], [389, 3, 1, "", "stopAll"], [389, 3, 1, "", "time"], [389, 3, 1, "", "timeline"]], "armi.utils.customExceptions": [[390, 7, 1, "", "InputError"], [390, 7, 1, "", "InvalidSettingsFileError"], [390, 7, 1, "", "InvalidSettingsStopProcess"], [390, 7, 1, "", "NonexistentSetting"], [390, 7, 1, "", "NonexistentSettingsFileError"], [390, 7, 1, "", "SettingException"], [390, 1, 1, "", "important"], [390, 1, 1, "", "info"], [390, 1, 1, "", "warn"], [390, 1, 1, "", "warn_when_root"]], "armi.utils.densityTools": [[391, 1, 1, "", "applyIsotopicsMix"], [391, 1, 1, "", "calculateMassDensity"], [391, 1, 1, "", "calculateNumberDensity"], [391, 1, 1, "", "expandElementalMassFracsToNuclides"], [391, 1, 1, "", "expandElementalNuclideMassFracs"], [391, 1, 1, "", "filterNuclideList"], [391, 1, 1, "", "formatMaterialCard"], [391, 1, 1, "", "getChemicals"], [391, 1, 1, "", "getMassFractions"], [391, 1, 1, "", "getMassInGrams"], [391, 1, 1, "", "getNDensFromMasses"], [391, 1, 1, "", "normalizeNuclideList"]], "armi.utils.directoryChangers": [[392, 2, 1, "", "DirectoryChanger"], [392, 2, 1, "", "ForcedCreationDirectoryChanger"], [392, 2, 1, "", "TemporaryDirectoryChanger"], [392, 1, 1, "", "directoryChangerFactory"]], "armi.utils.directoryChangers.DirectoryChanger": [[392, 3, 1, "", "close"], [392, 3, 1, "", "moveFiles"], [392, 3, 1, "", "open"], [392, 3, 1, "", "retrieveFiles"]], "armi.utils.directoryChangers.TemporaryDirectoryChanger": [[392, 3, 1, "", "GetRandomDirectory"]], "armi.utils.directoryChangersMpi": [[393, 2, 1, "", "MpiDirectoryChanger"]], "armi.utils.directoryChangersMpi.MpiDirectoryChanger": [[393, 3, 1, "", "close"], [393, 3, 1, "", "open"]], "armi.utils.dochelpers": [[394, 2, 1, "", "ExecDirective"], [394, 2, 1, "", "PyReverse"], [394, 1, 1, "", "create_figure"], [394, 1, 1, "", "create_table"], [394, 1, 1, "", "generateParamTable"], [394, 1, 1, "", "generatePluginSettingsTable"]], "armi.utils.dochelpers.ExecDirective": [[394, 4, 1, "", "has_content"], [394, 3, 1, "", "run"]], "armi.utils.dochelpers.PyReverse": [[394, 4, 1, "", "has_content"], [394, 4, 1, "", "option_spec"], [394, 4, 1, "", "optional_arguments"], [394, 4, 1, "", "required_arguments"], [394, 3, 1, "", "run"]], "armi.utils.dynamicImporter": [[395, 1, 1, "", "getEntireFamilyTree"]], "armi.utils.flags": [[396, 2, 1, "", "Flag"], [396, 2, 1, "", "auto"]], "armi.utils.flags.Flag": [[396, 3, 1, "", "extend"], [396, 3, 1, "", "fields"], [396, 3, 1, "", "from_bytes"], [396, 3, 1, "", "sortedFields"], [396, 3, 1, "", "to_bytes"], [396, 3, 1, "", "width"]], "armi.utils.hexagon": [[398, 1, 1, "", "area"], [398, 1, 1, "", "corners"], [398, 1, 1, "", "numPositionsInRing"], [398, 1, 1, "", "numRingsToHoldNumCells"], [398, 1, 1, "", "pitch"], [398, 1, 1, "", "side"]], "armi.utils.iterables": [[399, 2, 1, "", "Sequence"], [399, 1, 1, "", "chunk"], [399, 1, 1, "", "flatten"], [399, 1, 1, "", "packBinaryStrings"], [399, 1, 1, "", "packHexStrings"], [399, 1, 1, "", "split"], [399, 1, 1, "", "unpackBinaryStrings"], [399, 1, 1, "", "unpackHexStrings"]], "armi.utils.iterables.Sequence": [[399, 3, 1, "", "append"], [399, 3, 1, "", "copy"], [399, 3, 1, "", "drop"], [399, 3, 1, "", "extend"], [399, 3, 1, "", "select"], [399, 3, 1, "", "transform"]], "armi.utils.mathematics": [[400, 1, 1, "", "average1DWithinTolerance"], [400, 1, 1, "", "convertToSlice"], [400, 1, 1, "", "efmt"], [400, 1, 1, "", "expandRepeatedFloats"], [400, 1, 1, "", "findClosest"], [400, 1, 1, "", "findNearestValue"], [400, 1, 1, "", "findNearestValueAndIndex"], [400, 1, 1, "", "fixThreeDigitExp"], [400, 1, 1, "", "getFloat"], [400, 1, 1, "", "getStepsFromValues"], [400, 1, 1, "", "isMonotonic"], [400, 1, 1, "", "linearInterpolation"], [400, 1, 1, "", "minimizeScalarFunc"], [400, 1, 1, "", "newtonsMethod"], [400, 1, 1, "", "parabolaFromPoints"], [400, 1, 1, "", "parabolicInterpolation"], [400, 1, 1, "", "relErr"], [400, 1, 1, "", "resampleStepwise"], [400, 1, 1, "", "rotateXY"]], "armi.utils.outputCache": [[401, 1, 1, "", "cacheCall"], [401, 1, 1, "", "deleteCache"], [401, 1, 1, "", "retrieveOutput"], [401, 1, 1, "", "store"]], "armi.utils.parsing": [[402, 1, 1, "", "datetimeFromStr"], [402, 1, 1, "", "parseValue"], [402, 1, 1, "", "tryLiteralEval"]], "armi.utils.pathTools": [[403, 1, 1, "", "armiAbsPath"], [403, 1, 1, "", "cleanPath"], [403, 1, 1, "", "copyOrWarn"], [403, 1, 1, "", "importCustomPyModule"], [403, 1, 1, "", "isAccessible"], [403, 1, 1, "", "isFilePathNewer"], [403, 1, 1, "", "moduleAndAttributeExist"], [403, 1, 1, "", "separateModuleAndAttribute"]], "armi.utils.plotting": [[404, 2, 1, "", "DepthSlider"], [404, 1, 1, "", "close"], [404, 1, 1, "", "colorGenerator"], [404, 1, 1, "", "makeHistogram"], [404, 1, 1, "", "plotAssemblyTypes"], [404, 1, 1, "", "plotBlockDepthMap"], [404, 1, 1, "", "plotBlockDiagram"], [404, 1, 1, "", "plotBlockFlux"], [404, 1, 1, "", "plotFaceMap"], [404, 1, 1, "", "plotNucXs"], [404, 1, 1, "", "plotTriangleFlux"]], "armi.utils.plotting.DepthSlider": [[404, 3, 1, "", "next"], [404, 3, 1, "", "previous"], [404, 3, 1, "", "set_val"], [404, 3, 1, "", "updatePageDepthColor"]], "armi.utils.properties": [[405, 7, 1, "", "ImmutablePropertyError"], [405, 1, 1, "", "areEqual"], [405, 1, 1, "", "createImmutableProperty"], [405, 1, 1, "", "lockImmutableProperties"], [405, 1, 1, "", "numpyHackForEqual"], [405, 1, 1, "", "unlockImmutableProperties"]], "armi.utils.reportPlotting": [[406, 1, 1, "", "buVsTime"], [406, 1, 1, "", "createPlotMetaData"], [406, 1, 1, "", "keffVsTime"], [406, 1, 1, "", "movesVsCycle"], [406, 1, 1, "", "plotAxialProfile"], [406, 1, 1, "", "plotCoreOverviewRadar"], [406, 1, 1, "", "plotReactorPerformance"], [406, 1, 1, "", "valueVsTime"], [406, 1, 1, "", "xsHistoryVsTime"]], "armi.utils.tests": [[408, 0, 0, "-", "test_asciimaps"], [409, 0, 0, "-", "test_codeTiming"], [410, 0, 0, "-", "test_custom_exceptions"], [411, 0, 0, "-", "test_densityTools"], [412, 0, 0, "-", "test_directoryChangers"], [413, 0, 0, "-", "test_dochelpers"], [414, 0, 0, "-", "test_flags"], [415, 0, 0, "-", "test_iterables"], [416, 0, 0, "-", "test_mathematics"], [417, 0, 0, "-", "test_outputCache"], [418, 0, 0, "-", "test_parsing"], [419, 0, 0, "-", "test_pathTools"], [420, 0, 0, "-", "test_plotting"], [421, 0, 0, "-", "test_properties"], [422, 0, 0, "-", "test_reportPlotting"], [423, 0, 0, "-", "test_textProcessors"], [424, 0, 0, "-", "test_triangle"], [425, 0, 0, "-", "test_units"], [426, 0, 0, "-", "test_utils"]], "armi.utils.tests.test_asciimaps": [[408, 2, 1, "", "TestAsciiMaps"]], "armi.utils.tests.test_asciimaps.TestAsciiMaps": [[408, 3, 1, "", "test_cartesian"], [408, 3, 1, "", "test_flatHexBases"], [408, 3, 1, "", "test_hexFull"], [408, 3, 1, "", "test_hexFullFlat"], [408, 3, 1, "", "test_hexSmallFlat"], [408, 3, 1, "", "test_hexThird"], [408, 3, 1, "", "test_hexWithEmptyRow"], [408, 3, 1, "", "test_hexWithHoles"], [408, 3, 1, "", "test_troublesomeHexThird"]], "armi.utils.tests.test_codeTiming": [[409, 2, 1, "", "CodeTimingTest"]], "armi.utils.tests.test_codeTiming.CodeTimingTest": [[409, 3, 1, "", "test_alternate_usages"], [409, 3, 1, "", "test_master"], [409, 3, 1, "", "test_messy_starts_and_stops"], [409, 3, 1, "", "test_method_definitions"], [409, 3, 1, "", "test_property_access"]], "armi.utils.tests.test_custom_exceptions": [[410, 2, 1, "", "CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions.CustomExceptionTests": [[410, 3, 1, "", "exampleImportantMessage"], [410, 3, 1, "", "exampleInfoMessage"], [410, 3, 1, "", "exampleWarnMessage"], [410, 3, 1, "", "exampleWarnWhenRootMessage"], [410, 3, 1, "", "test_important_decorator"], [410, 3, 1, "", "test_info_decorator"], [410, 3, 1, "", "test_warn_decorator"], [410, 3, 1, "", "test_warn_when_root_decorator"]], "armi.utils.tests.test_densityTools": [[411, 2, 1, "", "Test_densityTools"]], "armi.utils.tests.test_densityTools.Test_densityTools": [[411, 3, 1, "", "test_applyIsotopicsMix"], [411, 3, 1, "", "test_calculateNumberDensity"], [411, 3, 1, "", "test_expandElement"], [411, 3, 1, "", "test_expandElementalMassFracsToNuclides"], [411, 3, 1, "", "test_expandElementalZeroMassFrac"], [411, 3, 1, "", "test_formatMaterialCard"], [411, 3, 1, "", "test_getChemicals"], [411, 3, 1, "", "test_getMassFractions"], [411, 3, 1, "", "test_getMassInGrams"], [411, 3, 1, "", "test_normalizeNuclideList"]], "armi.utils.tests.test_directoryChangers": [[412, 7, 1, "", "ExpectedException"], [412, 2, 1, "", "TestDirectoryChangers"]], "armi.utils.tests.test_directoryChangers.TestDirectoryChangers": [[412, 3, 1, "", "test_change_to_nonexisting_fails"], [412, 3, 1, "", "test_change_to_nonexisting_works_forced"], [412, 3, 1, "", "test_exception"], [412, 3, 1, "", "test_exception_disabled"], [412, 3, 1, "", "test_file_retrieval"], [412, 3, 1, "", "test_file_retrieval_missing_file"], [412, 3, 1, "", "test_mpiAction"], [412, 3, 1, "", "test_mpiActionFailsOnNonexistentPath"], [412, 3, 1, "", "test_temporary_cleans"]], "armi.utils.tests.test_dochelpers": [[413, 2, 1, "", "TestDocHelpers"]], "armi.utils.tests.test_dochelpers.TestDocHelpers": [[413, 3, 1, "", "test_createFigure"], [413, 3, 1, "", "test_createTable"], [413, 3, 1, "", "test_paramTable"], [413, 3, 1, "", "test_settingsTable"]], "armi.utils.tests.test_flags": [[414, 2, 1, "", "ExampleFlag"], [414, 2, 1, "", "TestFlag"]], "armi.utils.tests.test_flags.ExampleFlag": [[414, 4, 1, "", "BAR"], [414, 4, 1, "", "BAZ"], [414, 4, 1, "", "FOO"]], "armi.utils.tests.test_flags.TestFlag": [[414, 3, 1, "", "test_auto"], [414, 3, 1, "", "test_bitwise"], [414, 3, 1, "", "test_bool"], [414, 3, 1, "", "test_collision"], [414, 3, 1, "", "test_extend"], [414, 3, 1, "", "test_getitem"], [414, 3, 1, "", "test_hashable"], [414, 3, 1, "", "test_inclusion"], [414, 3, 1, "", "test_iteration"]], "armi.utils.tests.test_iterables": [[415, 2, 1, "", "TestIterables"]], "armi.utils.tests.test_iterables.TestIterables": [[415, 3, 1, "", "test_addingSequences"], [415, 3, 1, "", "test_appendSequence"], [415, 3, 1, "", "test_chunk"], [415, 3, 1, "", "test_copySequence"], [415, 3, 1, "", "test_extendSequence"], [415, 3, 1, "", "test_flatten"], [415, 3, 1, "", "test_packingAndUnpackingBinaryStrings"], [415, 3, 1, "", "test_packingAndUnpackingHexStrings"], [415, 3, 1, "", "test_sequence"], [415, 3, 1, "", "test_sequenceInit"], [415, 3, 1, "", "test_split"]], "armi.utils.tests.test_mathematics": [[416, 2, 1, "", "TestMath"]], "armi.utils.tests.test_mathematics.TestMath": [[416, 3, 1, "", "test_average1DWithinTolerance"], [416, 3, 1, "", "test_average1DWithinToleranceInvalid"], [416, 3, 1, "", "test_convertToSlice"], [416, 3, 1, "", "test_efmt"], [416, 3, 1, "", "test_expandRepeatedFloats"], [416, 3, 1, "", "test_findClosest"], [416, 3, 1, "", "test_findNearestValue"], [416, 3, 1, "", "test_fixThreeDigitExp"], [416, 3, 1, "", "test_getFloat"], [416, 3, 1, "", "test_getStepsFromValues"], [416, 3, 1, "", "test_isMonotonic"], [416, 3, 1, "", "test_linearInterpolation"], [416, 3, 1, "", "test_minimizeScalarFunc"], [416, 3, 1, "", "test_newtonsMethod"], [416, 3, 1, "", "test_parabola"], [416, 3, 1, "", "test_parabolicInterpolation"], [416, 3, 1, "", "test_relErr"], [416, 3, 1, "", "test_resampleStepwiseAvg0"], [416, 3, 1, "", "test_resampleStepwiseAvg1"], [416, 3, 1, "", "test_resampleStepwiseAvg2"], [416, 3, 1, "", "test_resampleStepwiseAvg3"], [416, 3, 1, "", "test_resampleStepwiseAvg4"], [416, 3, 1, "", "test_resampleStepwiseAvg5"], [416, 3, 1, "", "test_resampleStepwiseAvg6"], [416, 3, 1, "", "test_resampleStepwiseAvg7"], [416, 3, 1, "", "test_resampleStepwiseAvgAllNones"], [416, 3, 1, "", "test_resampleStepwiseAvgComplicatedNone"], [416, 3, 1, "", "test_resampleStepwiseAvgNpArray"], [416, 3, 1, "", "test_resampleStepwiseAvgNpArrayAverage"], [416, 3, 1, "", "test_resampleStepwiseAvgOneNone"], [416, 3, 1, "", "test_resampleStepwiseSum0"], [416, 3, 1, "", "test_resampleStepwiseSum1"], [416, 3, 1, "", "test_resampleStepwiseSum2"], [416, 3, 1, "", "test_resampleStepwiseSum3"], [416, 3, 1, "", "test_resampleStepwiseSum4"], [416, 3, 1, "", "test_resampleStepwiseSum5"], [416, 3, 1, "", "test_resampleStepwiseSum6"], [416, 3, 1, "", "test_resampleStepwiseSum7"], [416, 3, 1, "", "test_resampleStepwiseSumAllNones"], [416, 3, 1, "", "test_resampleStepwiseSumOneNone"], [416, 3, 1, "", "test_rotateXY"]], "armi.utils.tests.test_outputCache": [[417, 2, 1, "", "TestOutputCache"]], "armi.utils.tests.test_outputCache.TestOutputCache": [[417, 3, 1, "", "test_deleteCache"], [417, 3, 1, "", "test_getCachedFolder"], [417, 3, 1, "", "test_hashFiles"], [417, 3, 1, "", "test_makeOutputManifest"], [417, 3, 1, "", "test_retrieveOutput"]], "armi.utils.tests.test_parsing": [[418, 2, 1, "", "LiteralEvalTest"]], "armi.utils.tests.test_parsing.LiteralEvalTest": [[418, 3, 1, "", "test_parseValue"], [418, 3, 1, "", "test_tryLiteralEval"]], "armi.utils.tests.test_pathTools": [[419, 2, 1, "", "PathToolsTests"]], "armi.utils.tests.test_pathTools.PathToolsTests": [[419, 3, 1, "", "test_cleanPathNoMpi"], [419, 3, 1, "", "test_importCustomModule"], [419, 3, 1, "", "test_isAccessible"], [419, 3, 1, "", "test_isFilePathNewer"], [419, 3, 1, "", "test_moduleAndAttributeExist"], [419, 3, 1, "", "test_separateModuleAndAttribute"]], "armi.utils.tests.test_plotting": [[420, 2, 1, "", "TestPlotting"]], "armi.utils.tests.test_plotting.TestPlotting": [[420, 3, 1, "", "test_plotAssemblyTypes"], [420, 3, 1, "", "test_plotBlockFlux"], [420, 3, 1, "", "test_plotCartesianBlock"], [420, 3, 1, "", "test_plotDepthMap"], [420, 3, 1, "", "test_plotHexBlock"]], "armi.utils.tests.test_properties": [[421, 2, 1, "", "ImmutableClass"], [421, 2, 1, "", "ImmutablePropertyTests"]], "armi.utils.tests.test_properties.ImmutableClass": [[421, 3, 1, "", "initialize"], [421, 5, 1, "", "myNum"]], "armi.utils.tests.test_properties.ImmutablePropertyTests": [[421, 3, 1, "", "test_cannotAssignValueToImmutableProperty"], [421, 3, 1, "", "test_retreivingUnassignedValueRaisesError"], [421, 3, 1, "", "test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "armi.utils.tests.test_reportPlotting": [[422, 2, 1, "", "TestRadar"]], "armi.utils.tests.test_reportPlotting.TestRadar": [[422, 3, 1, "", "test_buVsTime"], [422, 3, 1, "", "test_createPlotMetaData"], [422, 3, 1, "", "test_keffVsTime"], [422, 3, 1, "", "test_movesVsCycle"], [422, 3, 1, "", "test_plotAxialProfile"], [422, 3, 1, "", "test_radar"], [422, 3, 1, "", "test_valueVsTime"], [422, 3, 1, "", "test_xsHistoryVsTime"]], "armi.utils.tests.test_textProcessors": [[423, 2, 1, "", "SequentialReaderTests"], [423, 2, 1, "", "YamlIncludeTest"]], "armi.utils.tests.test_textProcessors.SequentialReaderTests": [[423, 3, 1, "", "test_readFile"], [423, 3, 1, "", "test_readFileWithPattern"], [423, 4, 1, "", "textStream"]], "armi.utils.tests.test_textProcessors.YamlIncludeTest": [[423, 3, 1, "", "test_findIncludes"], [423, 3, 1, "", "test_resolveIncludes"], [423, 3, 1, "", "test_resolveIncludes_StringIO"]], "armi.utils.tests.test_triangle": [[424, 2, 1, "", "TestTriangle"]], "armi.utils.tests.test_triangle.TestTriangle": [[424, 3, 1, "", "test_checkIfPointIsInTriangle"], [424, 3, 1, "", "test_checkIfPointIsInTriangle2"], [424, 3, 1, "", "test_getTriangleArea"]], "armi.utils.tests.test_units": [[425, 2, 1, "", "TestUnits"]], "armi.utils.tests.test_units.TestUnits": [[425, 3, 1, "", "test_convertXtoPascal"], [425, 3, 1, "", "test_getTc"], [425, 3, 1, "", "test_getTemperature"], [425, 3, 1, "", "test_getTf"], [425, 3, 1, "", "test_getTk"], [425, 3, 1, "", "test_getTmev"], [425, 3, 1, "", "test_getXYLineParameters"], [425, 3, 1, "", "test_pressure_converter"], [425, 3, 1, "", "test_sanitizeAngle"]], "armi.utils.tests.test_utils": [[426, 2, 1, "", "CyclesSettingsTests"], [426, 2, 1, "", "TestGeneralUtils"]], "armi.utils.tests.test_utils.CyclesSettingsTests": [[426, 4, 1, "", "availabilityFactorsDetailedSolution"], [426, 4, 1, "", "availabilityFactorsSimpleSolution"], [426, 4, 1, "", "burnStepsDetailedSolution"], [426, 4, 1, "", "burnStepsSimpleSolution"], [426, 4, 1, "", "cycleLengthsDetailedSolution"], [426, 4, 1, "", "cycleLengthsSimpleSolution"], [426, 4, 1, "", "cycleNamesDetailedSolution"], [426, 4, 1, "", "cycleNamesSimpleSolution"], [426, 4, 1, "", "detailedCyclesSettings"], [426, 4, 1, "", "maxBurnStepsDetailedSolution"], [426, 4, 1, "", "maxBurnStepsSimpleSolution"], [426, 4, 1, "", "nodesPerCycleDetailedSolution"], [426, 4, 1, "", "nodesPerCycleSimpleSolution"], [426, 4, 1, "", "powerFractionsDetailedSolution"], [426, 4, 1, "", "powerFractionsSimpleSolution"], [426, 4, 1, "", "simpleCyclesSettings"], [426, 4, 1, "", "stepLengthsDetailedSolution"], [426, 4, 1, "", "stepLengthsSimpleSolution"], [426, 3, 1, "", "test_getAvailabilityFactors"], [426, 3, 1, "", "test_getBurnSteps"], [426, 3, 1, "", "test_getCumulativeNodeNum"], [426, 3, 1, "", "test_getCycleLengths"], [426, 3, 1, "", "test_getCycleNames"], [426, 3, 1, "", "test_getCycleNodeFromCumulativeNode"], [426, 3, 1, "", "test_getCycleNodeFromCumulativeStep"], [426, 3, 1, "", "test_getMaxBurnSteps"], [426, 3, 1, "", "test_getNodesPerCycle"], [426, 3, 1, "", "test_getPowerFractions"], [426, 3, 1, "", "test_getPreviousTimeNode"], [426, 3, 1, "", "test_getStepLengths"], [426, 3, 1, "", "test_hasBurnup"]], "armi.utils.tests.test_utils.TestGeneralUtils": [[426, 3, 1, "", "test_capStrLen"], [426, 3, 1, "", "test_classesInHierarchy"], [426, 3, 1, "", "test_createFormattedStrWithDelimiter"], [426, 3, 1, "", "test_list2str"], [426, 3, 1, "", "test_mergeableDictionary"], [426, 3, 1, "", "test_plotMatrix"], [426, 3, 1, "", "test_prependToList"], [426, 3, 1, "", "test_slantSplit"]], "armi.utils.textProcessors": [[427, 6, 1, "", "DECIMAL_PATTERN"], [427, 6, 1, "", "FLOATING_PATTERN"], [427, 2, 1, "", "FileMark"], [427, 6, 1, "", "SCIENTIFIC_PATTERN"], [427, 2, 1, "", "SequentialReader"], [427, 2, 1, "", "SequentialStringIOReader"], [427, 2, 1, "", "SmartList"], [427, 2, 1, "", "TextProcessor"], [427, 1, 1, "", "findYamlInclusions"], [427, 1, 1, "", "resolveMarkupInclusions"]], "armi.utils.textProcessors.SequentialReader": [[427, 3, 1, "", "consumeLine"], [427, 3, 1, "", "issueWarningOnFindingText"], [427, 3, 1, "", "raiseErrorOnFindingPattern"], [427, 3, 1, "", "raiseErrorOnFindingText"], [427, 3, 1, "", "searchForPattern"], [427, 3, 1, "", "searchForPatternOnNextLine"], [427, 3, 1, "", "searchForText"]], "armi.utils.textProcessors.SmartList": [[427, 3, 1, "", "close"], [427, 3, 1, "", "next"], [427, 3, 1, "", "seek"]], "armi.utils.textProcessors.TextProcessor": [[427, 3, 1, "", "checkErrors"], [427, 4, 1, "", "decimal"], [427, 3, 1, "", "errorChecking"], [427, 3, 1, "", "fsearch"], [427, 4, 1, "", "number"], [427, 3, 1, "", "reset"], [427, 4, 1, "", "scipat"]], "armi.utils.triangle": [[428, 1, 1, "", "checkIfPointIsInTriangle"], [428, 1, 1, "", "getTriangleArea"], [428, 1, 1, "", "getTriangleCentroid"]], "armi.utils.units": [[429, 1, 1, "", "convertAtmToPascal"], [429, 1, 1, "", "convertBarToPascal"], [429, 1, 1, "", "convertMmhgToPascal"], [429, 1, 1, "", "getTc"], [429, 1, 1, "", "getTemperature"], [429, 1, 1, "", "getTf"], [429, 1, 1, "", "getTk"], [429, 1, 1, "", "getTmev"], [429, 1, 1, "", "getXYLineParameters"], [429, 1, 1, "", "sanitizeAngle"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"armi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 469, 471, 472, 477, 478, 480, 481, 482, 496, 497, 498], "packag": [0, 2, 3, 10, 19, 26, 30, 34, 37, 43, 45, 49, 54, 57, 70, 76, 115, 142, 146, 154, 155, 170, 185, 192, 198, 202, 205, 212, 216, 221, 226, 232, 236, 239, 241, 243, 246, 249, 256, 263, 265, 267, 274, 280, 287, 296, 303, 308, 311, 321, 330, 338, 351, 352, 358, 360, 362, 369, 372, 387, 407, 431, 441, 482], "note": [0, 1, 3, 5, 6, 7, 8, 13, 16, 17, 44, 46, 47, 51, 52, 53, 74, 75, 76, 77, 78, 79, 84, 85, 99, 100, 101, 107, 108, 111, 112, 136, 137, 138, 141, 143, 144, 145, 149, 150, 153, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 169, 174, 180, 186, 189, 190, 191, 193, 194, 197, 201, 204, 205, 206, 209, 210, 213, 225, 226, 228, 229, 231, 233, 235, 237, 240, 242, 244, 245, 247, 250, 257, 258, 260, 273, 275, 279, 280, 283, 284, 285, 286, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 310, 312, 318, 323, 325, 326, 327, 328, 333, 336, 337, 340, 341, 346, 349, 361, 366, 367, 370, 372, 378, 387, 388, 391, 392, 393, 394, 398, 400, 401, 403, 404, 420, 427, 428, 429, 471, 472, 473, 477], "subpackag": [0, 2, 3, 19, 34, 43, 45, 57, 76, 142, 154, 155, 192, 202, 205, 216, 226, 232, 239, 246, 274, 280, 303, 351, 352, 360, 387], "submodul": [0, 2, 3, 10, 19, 26, 30, 34, 37, 43, 45, 49, 54, 57, 70, 76, 115, 142, 146, 154, 155, 170, 185, 192, 198, 202, 205, 212, 216, 221, 226, 232, 236, 239, 241, 243, 246, 249, 256, 263, 265, 267, 274, 280, 287, 296, 303, 308, 311, 321, 330, 338, 352, 358, 360, 362, 369, 372, 387, 407, 480], "app": [1, 436, 480], "modul": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 240, 242, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 361, 363, 364, 365, 366, 367, 368, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 441], "histor": [1, 202], "fun": [1, 202], "fact": [1, 202], "bookkeep": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "db": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "when": 3, "updat": [3, 431], "version": [3, 441, 477], "databas": [3, 16, 62, 478, 499], "revis": 3, "changelog": 3, "comparedb3": 4, "database3": 5, "databaseinterfac": 6, "factori": [7, 483], "layout": 8, "permiss": 9, "test": [10, 11, 12, 13, 14, 26, 27, 28, 30, 31, 32, 33, 37, 38, 39, 49, 50, 51, 54, 55, 56, 70, 71, 72, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 146, 147, 148, 149, 150, 151, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 198, 199, 200, 201, 212, 213, 214, 215, 221, 222, 223, 224, 236, 237, 238, 241, 242, 249, 250, 251, 256, 257, 258, 259, 260, 261, 262, 265, 266, 287, 288, 289, 290, 291, 292, 293, 294, 295, 311, 312, 313, 314, 315, 316, 317, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 358, 359, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 433, 440, 441, 476, 477], "test_comparedb3": 11, "test_database3": 12, "test_databaseinterfac": 13, "test_layout": 14, "typedef": 15, "historytrack": 16, "get": [16, 434, 469, 470, 475, 505], "histori": [16, 469, 496, 499], "inform": 16, "us": [16, 155, 431, 437, 440, 469, 477], "base": [16, 142, 353, 436, 480], "tracker": 16, "specifi": [16, 484], "paramet": [16, 218, 253, 269, 279, 330, 331, 332, 333, 334, 434, 440, 483, 488, 489, 490, 491, 504], "add": 16, "eol": 16, "report": [16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 254, 439, 477, 487, 497], "block": [16, 279, 448, 453, 455, 484, 485, 489, 493, 502], "assembli": [16, 275, 484, 485, 488, 493, 494, 496], "track": 16, "maininterfac": 17, "memoryprofil": 18, "data": [20, 440, 475, 477, 482, 498], "html": [21, 439], "newreportutil": 22, "newreport": 23, "reportinterfac": 24, "reportingutil": 25, "test_newreport": 27, "test_report": 28, "snapshotinterfac": 29, "test_historytrack": 31, "test_memoryprofil": 32, "test_snapshot": 33, "visual": [34, 35, 36, 37, 38, 39, 40, 41, 42], "dumper": 35, "entrypoint": [36, 63], "test_vi": 38, "test_xdmf": 39, "util": [40, 225, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429], "vtk": 41, "limit": 41, "xdmf": [42, 480], "case": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 469, 496], "todo": 44, "inputmodifi": [45, 46, 47, 48, 49, 50, 51], "neutronicsmodifi": 47, "pintypeinputmodifi": 48, "test_inputmodifi": 50, "test_pintypeinputmodifi": 51, "suit": 52, "suitebuild": 53, "test_cas": 55, "test_suitebuild": 56, "cli": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "checkinput": 58, "cleantemp": 59, "clone": 60, "comparecas": 61, "gridgui": 64, "migrateinput": 65, "modifi": [66, 478, 483], "reportsentrypoint": 67, "run": [68, 440, 480, 494], "runsuit": 69, "test_runentrypoint": 71, "test_runsuit": 72, "conftest": 73, "context": 74, "interfac": [75, 434, 476, 480], "materi": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 447, 462, 480, 481], "air": 77, "alloy200": 78, "b4c": 79, "be9": 80, "cah2": 81, "californium": 82, "concret": 83, "copper": 84, "c": 85, "custom": [86, 273, 480, 485, 493], "graphit": 87, "hafnium": 88, "hastelloyn": 89, "ht9": 90, "inconel": 91, "inconel600": 92, "inconel625": 93, "inconel800": 94, "inconelpe16": 95, "inconelx750": 96, "lead": 97, "leadbismuth": 98, "lithium": [99, 482], "magnesium": 100, "mgo": 102, "mixtur": 103, "molybdenum": 104, "mox": [105, 485], "nz": 106, "potassium": 107, "scandiumoxid": 108, "sic": 109, "sodium": 110, "sodiumchlorid": 111, "sulfur": 112, "tzm": 113, "tantalum": 114, "test__init__": 116, "test_air": 117, "test_b4c": 118, "test_be9": 119, "test_graphit": 120, "test_lithium": 121, "test_materi": 122, "test_sic": 123, "test_sulfur": 124, "test_thoriumoxid": 125, "test_uzr": 126, "test_wat": 127, "thu": 128, "thorium": 129, "thoriumoxid": 130, "uthzr": 131, "uzr": 132, "uranium": 133, "uraniumoxid": 134, "void": 135, "water": 136, "yttriumoxid": 137, "zincoxid": 138, "zr": 139, "meta": 140, "mpiaction": 141, "sampl": 141, "mpi": [141, 437], "action": [141, 477], "workflow": 141, "nucdirectori": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "element": [142, 143, 439, 482], "nuclid": [142, 145, 454, 482, 485, 493], "name": [142, 440, 493], "label": [142, 164], "id": 142, "indic": 142, "rapid": 142, "access": [142, 482, 487, 498], "list": [143, 145, 462, 480, 493], "nucdir": 144, "nuclidebas": 145, "test_el": 147, "test_nucdirectori": 148, "test_nuclidebas": 149, "test_thermalscatt": 150, "test_transmut": 151, "thermalscatt": 152, "transmut": [153, 465], "nucleardataio": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "cccc": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "system": [155, 469, 485, 493], "implement": [155, 436, 475, 477], "detail": [155, 436, 454, 496], "discuss": 155, "compx": 157, "dif3d": 158, "dlayx": 159, "fixsrc": 160, "gamiso": 161, "geodst": 162, "isotx": [163, 460], "nhflux": 165, "pmatrx": 166, "pwdint": 167, "rtflux": 168, "rzflux": 169, "test_cccc": 171, "test_compx": 172, "test_dif3d": 173, "test_dlayx": 174, "test_gamiso": 175, "test_geodst": 176, "test_isotx": 177, "test_label": 178, "test_nhflux": 179, "test_pmatrx": 180, "test_pwdint": 181, "test_rtflux": 182, "test_rzflux": 183, "nuclearfilemetadata": 184, "test_xscollect": 186, "test_xslibrari": 187, "test_xsnuclid": 188, "xscollect": 189, "xslibrari": 190, "xsnuclid": 191, "oper": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 434, 469, 494], "operatormpi": 194, "runtyp": 195, "settingsvalid": 196, "snapshot": [197, 434], "test_inspector": 199, "test_operatorsnapshot": 200, "test_oper": 201, "physic": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 469, 480, 502], "constant": [203, 324], "execut": [204, 217], "fuelcycl": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "assemblyrotationalgorithm": 206, "fuelhandlerfactori": 207, "fuelhandlerinterfac": 208, "fuelhandl": 209, "hexassemblyfuelmgmtutil": 210, "set": [211, 220, 255, 264, 271, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 475, 480, 484, 485, 496, 497, 498, 499], "test_assemblyrotationalgorithm": 213, "test_fuelhandl": 214, "test_hexassemblyfuelmgmtutil": 215, "fuelperform": [216, 217, 218, 219, 220, 221, 222, 223, 224, 225], "plugin": [219, 270, 273, 431, 434, 436, 480, 493], "test_execut": [222, 266], "test_fuelperformanceplugin": 223, "test_fuelperformanceutil": 224, "neutron": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "const": [227, 268], "crosssectiongroupmanag": 228, "crosssectionset": 229, "diffisotx": 230, "energygroup": 231, "fissionproductmodel": [232, 233, 234, 235, 236, 237, 238], "fissionproductmodelset": 234, "lumpedfissionproduct": 235, "test_fissionproductmodel": 237, "test_lumpedfissionproduct": 238, "globalflux": [239, 240, 241, 242], "globalfluxinterfac": 240, "test_globalfluxinterfac": 242, "isotopicdeplet": [243, 244, 245], "crosssectiont": 244, "isotopicdepletioninterfac": 245, "latticephys": [246, 247, 248, 249, 250, 251], "latticephysicsinterfac": 247, "latticephysicswrit": 248, "test_latticeinterfac": 250, "test_latticewrit": 251, "macroxsgenerationinterfac": 252, "test_crosssectionmanag": 257, "test_crosssectionset": 258, "test_crosssectiont": 259, "test_energygroup": 260, "test_macroxsgenerationinterfac": 261, "test_neutronicsplugin": 262, "safeti": [263, 264, 475], "thermalhydraul": [267, 268, 269, 270, 271], "pluginmanag": 272, "other": 273, "point": [273, 432, 434, 480, 487], "reactor": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 434, 449, 463, 464, 475, 478, 483, 484, 485, 499, 504], "assemblylist": 276, "assemblyparamet": 277, "blockparamet": 278, "blueprint": [280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 434, 475, 484, 485, 493, 499], "assemblyblueprint": 281, "blockblueprint": 282, "componentblueprint": 283, "gridblueprint": 284, "isotopicopt": 285, "reactorblueprint": 286, "test_assemblyblueprint": 288, "test_blockblueprint": 289, "test_blueprint": 290, "test_componentblueprint": 291, "test_customisotop": 292, "test_gridblueprint": 293, "test_materialmodif": 294, "test_reactorblueprint": 295, "compon": [296, 297, 298, 299, 300, 301, 453, 490, 493], "basicshap": 297, "complexshap": 298, "componentparamet": 300, "volumetricshap": 301, "composit": 302, "convert": [303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 434], "axialexpansionchang": 304, "blockconvert": 305, "geometryconvert": 306, "meshconvert": 307, "parametersweep": [308, 309], "generalparametersweepconvert": 309, "pintypeblockconvert": 310, "test_axialexpansionchang": 312, "test_blockconvert": 313, "test_geometryconvert": 314, "test_meshconvert": 315, "test_pintypeblockconvert": 316, "test_uniformmesh": 317, "uniformmesh": 318, "requir": [318, 441, 469, 474, 475, 476, 477], "flag": [319, 396, 485, 493], "geometri": [320, 448, 449], "grid": [321, 322, 323, 324, 325, 326, 327, 328, 329, 457, 458, 459, 485, 493], "axial": [322, 503], "cartesian": [323, 458], "hexagon": [326, 398], "locat": 327, "structuredgrid": 328, "thetarz": 329, "exampl": [330, 437, 494], "basic": 330, "usag": [330, 401], "design": [330, 475, 476, 483], "consider": 330, "except": [331, 440], "parametercollect": 332, "parameterdefinit": 333, "resolvecollect": 334, "reactorparamet": 335, "systemlayoutinput": 337, "test_assembli": 339, "test_block": 340, "test_compon": 341, "test_composit": 342, "test_flag": [343, 414], "test_geometri": 344, "test_paramet": 345, "test_reactor": 346, "test_rz_reactor": 347, "test_zon": 348, "zone": 349, "runlog": 350, "script": [351, 352, 353, 354, 355, 356, 357, 358, 359], "migrat": [352, 353, 354, 355, 356, 357, 358, 359], "crosssectionblueprintstoset": 354, "m0_1_0_newdbformat": 355, "m0_1_3": 356, "m0_1_6_locationlabel": 357, "test_m0_1_6_locationlabel": 359, "caseset": 361, "fwset": [362, 363, 364, 365, 366], "databaseset": 363, "globalset": 364, "reportset": 365, "tightcouplingset": 366, "settingsio": 368, "test_set": 370, "test_settingsio": 371, "mockrunlog": 373, "refsmallreactorshufflelog": 374, "test_app": 375, "test_armitesthelp": 376, "test_cartesian": 377, "test_interfac": 378, "test_lwrinput": 379, "test_mpiact": 380, "test_mpifeatur": 381, "test_notebook": 382, "test_plugin": 383, "test_runlog": 384, "test_test": 385, "test_user_plugin": 386, "asciimap": 388, "codetim": 389, "customexcept": 390, "densitytool": 391, "directorychang": 392, "directorychangersmpi": 393, "dochelp": 394, "dynamicimport": 395, "grideditor": 397, "iter": 399, "mathemat": 400, "outputcach": 401, "api": [401, 471], "pars": 402, "pathtool": 403, "plot": [404, 454, 460, 461, 464, 482], "properti": 405, "reportplot": 406, "test_asciimap": 408, "test_codetim": 409, "test_custom_except": 410, "test_densitytool": 411, "test_directorychang": 412, "test_dochelp": 413, "test_iter": 415, "test_mathemat": 416, "test_outputcach": 417, "test_pars": 418, "test_pathtool": 419, "test_plot": 420, "test_properti": 421, "test_reportplot": 422, "test_textprocessor": 423, "test_triangl": 424, "test_unit": 425, "test_util": 426, "textprocessor": 427, "triangl": 428, "unit": [429, 440], "document": [431, 441, 475, 476], "build": [431, 463, 484, 485], "link": [431, 469, 493], "from": [431, 460, 478, 488, 489, 490, 491, 504], "automat": [431, 453], "apidoc": 431, "namespac": 431, "galleri": [431, 442, 467, 486], "jupyt": 431, "notebook": 431, "entri": [432, 434, 480, 487], "first": [433, 480], "time": [433, 450, 466], "contributor": 433, "guid": 433, "help": [433, 469], "want": 433, "submit": 433, "chang": [433, 471, 472], "licens": [433, 441, 469], "tool": [433, 441], "framework": [434, 445, 452, 467, 482, 486, 488, 489, 490, 491, 504], "architectur": 434, "The": [434, 439, 469, 470, 475, 481, 482, 485, 493, 496, 499, 501, 505], "model": [434, 440, 477, 478], "find": 434, "object": 434, "standard": [434, 440, 501], "stack": 434, "interact": 434, "hook": [434, 439], "ad": [434, 480], "new": [434, 441, 469, 472, 480], "how": [434, 482, 484], "call": 434, "develop": [435, 470, 505], "doc": [435, 492], "make": [436, 457, 458, 459, 480, 493], "head": 436, "up": [436, 482, 484, 485], "some": [436, 496, 498], "your": [436, 480], "own": 436, "applic": [436, 444, 451, 467, 476, 486], "parallel": 437, "code": [437, 440, 470, 505], "commun": [437, 469], "crash": 437, "cours": 437, "within": [437, 440], "bcast": 437, "scatter": [437, 461], "A": [437, 483], "simplifi": 437, "approach": 437, "profil": 438, "getreportcont": 439, "what": [439, 472, 480, 485], "i": [439, 441, 476], "reportcont": 439, "section": [439, 493], "tabl": 439, "imag": 439, "timeseri": 439, "summari": 439, "practic": 440, "format": [440, 480, 499], "black": 440, "remov": 440, "comment": 440, "out": 440, "avoid": 440, "hard": 440, "global": 440, "keyword": 440, "convent": 440, "meaning": 440, "gener": 440, "quick": [440, 469], "refer": 440, "common": 440, "prefer": 440, "shorter": 440, "method": 440, "repeat": 440, "public": 440, "should": 440, "have": 440, "docstr": 440, "import": 440, "statement": 440, "order": 440, "don": [440, 441], "t": [440, 441], "creat": [440, 480], "nake": 440, "input": [440, 463, 470, 475, 477, 484, 485, 493, 494, 495, 496, 505], "file": [440, 480, 484, 485, 493, 496, 499], "address": 440, "ruff": 440, "warn": 440, "do": 440, "": [440, 472, 475], "infrastructur": 441, "good": 441, "commit": 441, "messag": 441, "pull": 441, "request": 441, "One": 441, "idea": 441, "pr": 441, "open": [441, 476], "until": 441, "readi": 441, "It": 441, "depend": 441, "manag": [441, 456, 478, 484, 485, 494], "setup": [441, 470, 505], "py": [441, 480], "txt": 441, "third": 441, "parti": 441, "releas": [441, 471, 472, 473], "level": 441, "log": 441, "analysi": [443, 446, 467, 469, 486], "write": 447, "mcnp": 447, "card": 447, "hex": [448, 449, 457], "rz": [448, 449], "convers": [448, 449], "comput": [450, 453, 455, 466, 475, 477], "volum": [453, 475], "fraction": [453, 475], "thermal": [453, 480, 485, 503], "expans": [453, 503], "chart": [454, 482], "more": 454, "reaction": [455, 465], "rate": 455, "fuel": [456, 478, 484, 485, 494], "lwr": 456, "theta": 459, "r": 459, "z": 459, "multi": [460, 461], "group": [460, 461], "x": 460, "matrix": 461, "librari": [462, 470, 481, 505], "programmat": 463, "facemap": 464, "decai": 465, "glossari": 468, "start": [469, 480], "background": 469, "coupl": [469, 502], "autom": [469, 477], "capabl": 469, "research": 469, "scientist": 469, "nuclear": 469, "startup": 469, "engin": 469, "vendor": 469, "enthusiast": 469, "disclaim": 469, "instal": [470, 505], "prerequisit": [470, 505], "right": [470, 505], "python": [470, 480, 505], "command": [470, 505], "prepar": [470, 505], "virtual": [470, 505], "environ": [470, 477, 496, 505], "option": [470, 505], "1": [470, 471, 472, 478, 505], "2": [470, 471, 472, 505], "repositori": [470, 505], "verifi": [470, 505], "gui": [470, 496, 505], "output": [470, 477, 480, 500, 501, 505], "v0": [471, 472], "7": [471, 472, 482], "bug": [471, 472], "fix": [471, 472], "6": [471, 472], "deprec": 471, "bugfix": 471, "5": [471, 472], "user": [471, 475, 492], "face": 471, "enhanc": 471, "backend": 471, "4": [471, 472], "3": [471, 472, 485], "hotfix": 471, "0": [471, 472], "9": 472, "8": 472, "backward": 472, "incompat": 472, "softwar": [475, 476, 477], "sdid": 475, "overview": [475, 477], "keep": 475, "experi": 475, "simpl": [475, 483], "dictionari": 475, "like": 475, "behavior": [475, 493], "improv": 475, "around": 475, "error": 475, "non": [475, 484], "dynam": 475, "type": [475, 493], "customiz": 475, "spatial": 475, "arrang": [475, 484], "state": [475, 478, 498, 499], "variabl": [475, 498], "averag": 475, "over": 475, "children": 475, "homogen": 475, "number": [475, 478], "densiti": [475, 478], "calcul": 475, "Of": 475, "hot": 475, "dimens": 475, "review": 475, "specif": 476, "srsd": 476, "busi": 476, "impact": 476, "function": 476, "perform": 476, "attribut": [476, 482], "constraint": 476, "o": 476, "item": 476, "assumpt": [476, 477], "appendic": 476, "str": 477, "introduct": 477, "result": [477, 483], "platform": 477, "hardwar": 477, "equip": 477, "calibr": 477, "runtim": 477, "date": 477, "tester": 477, "simul": 477, "applicablil": 477, "taken": 477, "connect": 477, "ani": 477, "deviat": 477, "acceptabiltii": 477, "verif": 477, "valid": 477, "plan": 477, "hand": 478, "termin": 478, "initi": 478, "explor": [478, 482], "quiz": 478, "question": 478, "save": 478, "disk": 478, "load": [478, 499], "tutori": 479, "regist": 480, "defin": [480, 482, 484, 485, 493], "class": 480, "v": 480, "ar": [480, 482, 484], "again": 480, "kernel": 480, "dummi": 480, "flux": 480, "hydraul": 480, "debug": 480, "window": 480, "tip": [480, 494], "yet": 480, "anoth": 480, "wai": 480, "why": 480, "__main__": 480, "check": 480, "fanci": 480, "bonu": 480, "hoc": 480, "userplugin": 480, "individu": 482, "mani": 482, "total": 482, "look": 482, "u": 482, "235": 482, "li": 482, "sweep": 483, "one": 483, "dimension": 483, "full": 483, "post": 483, "process": 483, "fast": 484, "radial": [484, 503], "shield": 484, "reflector": 484, "control": 484, "plenum": 484, "core": [484, 491], "map": 484, "isotop": [485, 493], "vector": 485, "uo2": 485, "moder": 485, "d": 485, "definit": 485, "ok": 485, "so": 485, "now": 485, "thermalhydraulicsplugin": 489, "fuelperformanceplugin": 489, "neutronicsplugin": [489, 491], "pin": 493, "lattic": 493, "advanc": 493, "topic": 493, "overlap": 493, "shape": 493, "area": 493, "modif": 493, "put": 493, "all": 493, "togeth": 493, "unshap": 493, "swapassembli": 494, "dischargeswap": 494, "swapcascad": 494, "choos": 494, "move": 494, "converg": 494, "diverg": 494, "branch": 494, "search": 494, "clicker": 496, "tab": 496, "special": 496, "kinet": 496, "cycl": 496, "restart": 496, "interest": 498, "info": 498, "extract": 499, "structur": 499, "loos": 502, "tight": 502, "eigenvalu": 502, "wise": 502, "power": 502, "contract": 503}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"armi package": [[0, "module-armi"]], "Notes": [[0, null], [1, null], [1, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [5, null], [5, null], [5, null], [5, null], [5, null], [6, null], [6, null], [6, null], [6, null], [7, null], [8, null], [8, null], [13, null], [16, null], [16, null], [17, null], [44, null], [44, null], [44, null], [44, null], [44, null], [44, null], [46, null], [47, null], [51, null], [52, null], [52, null], [53, null], [74, null], [74, null], [75, null], [75, null], [75, null], [75, null], [75, null], [75, null], [75, null], [75, null], [75, null], [75, null], [76, null], [77, null], [77, null], [78, null], [79, null], [79, null], [79, null], [84, null], [85, null], [99, null], [100, null], [101, null], [101, null], [101, null], [101, null], [101, null], [101, null], [101, null], [101, null], [101, null], [101, null], [107, null], [108, null], [111, null], [111, null], [112, null], [136, null], [136, null], [136, null], [136, null], [136, null], [136, null], [136, null], [137, null], [138, null], [141, null], [141, null], [141, null], [141, null], [141, null], [141, null], [141, null], [141, null], [143, null], [143, null], [143, null], [144, null], [145, null], [145, null], [145, null], [145, null], [145, null], [145, null], [145, null], [145, null], [145, null], [149, null], [150, null], [153, null], [153, null], [153, null], [153, null], [155, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [157, null], [157, null], [159, null], [161, null], [162, null], [163, null], [163, null], [163, null], [164, null], [165, null], [165, null], [165, null], [166, null], [169, null], [174, null], [180, null], [186, null], [186, null], [189, null], [189, null], [189, null], [189, null], [189, null], [190, null], [190, null], [191, null], [191, null], [191, null], [191, null], [193, null], [193, null], [193, null], [193, null], [193, null], [193, null], [194, null], [194, null], [197, null], [201, null], [204, null], [205, null], [206, null], [206, null], [209, null], [209, null], [209, null], [209, null], [209, null], [209, null], [209, null], [209, null], [209, null], [210, null], [210, null], [210, null], [213, null], [225, null], [226, null], [228, null], [228, null], [228, null], [228, null], [228, null], [228, null], [228, null], [228, null], [229, null], [229, null], [229, null], [229, null], [229, null], [229, null], [231, null], [233, null], [233, null], [233, null], [235, null], [237, null], [240, null], [240, null], [240, null], [240, null], [242, null], [244, null], [245, null], [245, null], [247, null], [247, null], [250, null], [250, null], [257, null], [258, null], [260, null], [273, null], [273, null], [273, null], [273, null], [273, null], [273, null], [273, null], [273, null], [273, null], [275, null], [275, null], [275, null], [275, null], [275, null], [275, null], [275, null], [275, null], [275, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [279, null], [280, null], [280, null], [283, null], [284, null], [285, null], [285, null], [285, null], [286, null], [296, null], [296, null], [296, null], [296, null], [297, null], [297, null], [297, null], [297, null], [297, null], [298, null], [299, null], [299, null], [299, null], [299, null], [299, null], [299, null], [299, null], [299, null], [299, null], [301, null], [302, null], [302, null], [302, null], [302, null], [302, null], [302, null], [302, null], [302, null], [302, null], [302, null], [302, null], [302, null], [302, null], [302, null], [304, null], [304, null], [304, null], [304, null], [304, null], [304, null], [304, null], [304, null], [304, null], [304, null], [305, null], [305, null], [305, null], [306, null], [306, null], [306, null], [306, null], [306, null], [307, null], [310, null], [310, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [312, null], [318, null], [318, null], [318, null], [318, null], [318, null], [318, null], [318, null], [323, null], [323, null], [323, null], [325, null], [326, null], [326, null], [326, null], [326, null], [326, null], [327, null], [327, null], [328, null], [328, null], [333, null], [333, null], [333, null], [333, null], [333, null], [336, null], [336, null], [336, null], [336, null], [336, null], [336, null], [336, null], [336, null], [336, null], [336, null], [336, null], [336, null], [336, null], [336, null], [336, null], [336, null], [337, null], [337, null], [340, null], [340, null], [340, null], [341, null], [341, null], [346, null], [346, null], [349, null], [349, null], [361, null], [361, null], [361, null], [361, null], [361, null], [366, null], [366, null], [366, null], [367, null], [367, null], [370, null], [372, null], [378, null], [387, null], [387, null], [387, null], [387, null], [387, null], [387, null], [387, null], [387, null], [387, null], [387, null], [387, null], [387, null], [388, null], [391, null], [392, null], [393, null], [394, null], [398, null], [400, null], [400, null], [401, null], [401, null], [401, null], [401, null], [403, null], [403, null], [404, null], [404, null], [404, null], [404, null], [420, null], [427, null], [427, null], [427, null], [427, null], [427, null], [427, null], [428, null], [428, null], [429, null]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [3, "subpackages"], [19, "subpackages"], [34, "subpackages"], [43, "subpackages"], [45, "subpackages"], [57, "subpackages"], [76, "subpackages"], [142, "subpackages"], [154, "subpackages"], [155, "subpackages"], [192, "subpackages"], [202, "subpackages"], [205, "subpackages"], [216, "subpackages"], [226, "subpackages"], [232, "subpackages"], [239, "subpackages"], [246, "subpackages"], [274, "subpackages"], [280, "subpackages"], [303, "subpackages"], [351, "subpackages"], [352, "subpackages"], [360, "subpackages"], [387, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [10, "submodules"], [19, "submodules"], [26, "submodules"], [30, "submodules"], [34, "submodules"], [37, "submodules"], [43, "submodules"], [45, "submodules"], [49, "submodules"], [54, "submodules"], [57, "submodules"], [70, "submodules"], [76, "submodules"], [115, "submodules"], [142, "submodules"], [146, "submodules"], [154, "submodules"], [155, "submodules"], [170, "submodules"], [185, "submodules"], [192, "submodules"], [198, "submodules"], [202, "submodules"], [205, "submodules"], [212, "submodules"], [216, "submodules"], [221, "submodules"], [226, "submodules"], [232, "submodules"], [236, "submodules"], [239, "submodules"], [241, "submodules"], [243, "submodules"], [246, "submodules"], [249, "submodules"], [256, "submodules"], [263, "submodules"], [265, "submodules"], [267, "submodules"], [274, "submodules"], [280, "submodules"], [287, "submodules"], [296, "submodules"], [303, "submodules"], [308, "submodules"], [311, "submodules"], [321, "submodules"], [330, "submodules"], [338, "submodules"], [352, "submodules"], [358, "submodules"], [360, "submodules"], [362, "submodules"], [369, "submodules"], [372, "submodules"], [387, "submodules"], [407, "submodules"]], "armi.apps module": [[1, "module-armi.apps"]], "Historical Fun Fact": [[1, null]], "armi.bookkeeping package": [[2, "module-armi.bookkeeping"]], "armi.bookkeeping.db package": [[3, "module-armi.bookkeeping.db"]], "When updating a db version": [[3, "when-updating-a-db-version"]], "Database revision changelog": [[3, "database-revision-changelog"]], "armi.bookkeeping.db.compareDB3 module": [[4, "module-armi.bookkeeping.db.compareDB3"]], "armi.bookkeeping.db.database3 module": [[5, "module-armi.bookkeeping.db.database3"]], "armi.bookkeeping.db.databaseInterface module": [[6, "module-armi.bookkeeping.db.databaseInterface"]], "armi.bookkeeping.db.factory module": [[7, "module-armi.bookkeeping.db.factory"]], "armi.bookkeeping.db.layout module": [[8, "module-armi.bookkeeping.db.layout"]], "armi.bookkeeping.db.permissions module": [[9, "module-armi.bookkeeping.db.permissions"]], "armi.bookkeeping.db.tests package": [[10, "module-armi.bookkeeping.db.tests"]], "armi.bookkeeping.db.tests.test_comparedb3 module": [[11, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "armi.bookkeeping.db.tests.test_database3 module": [[12, "module-armi.bookkeeping.db.tests.test_database3"]], "armi.bookkeeping.db.tests.test_databaseInterface module": [[13, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "armi.bookkeeping.db.tests.test_layout module": [[14, "module-armi.bookkeeping.db.tests.test_layout"]], "armi.bookkeeping.db.typedefs module": [[15, "module-armi.bookkeeping.db.typedefs"]], "armi.bookkeeping.historyTracker module": [[16, "module-armi.bookkeeping.historyTracker"]], "Getting history information": [[16, "getting-history-information"]], "Using the database-based history trackers": [[16, "using-the-database-based-history-trackers"]], "Specifying parameters to add to the EOL history report": [[16, "specifying-parameters-to-add-to-the-eol-history-report"]], "Specifying blocks and assemblies to track": [[16, "specifying-blocks-and-assemblies-to-track"]], "armi.bookkeeping.mainInterface module": [[17, "module-armi.bookkeeping.mainInterface"]], "armi.bookkeeping.memoryProfiler module": [[18, "module-armi.bookkeeping.memoryProfiler"]], "armi.bookkeeping.report package": [[19, "module-armi.bookkeeping.report"]], "armi.bookkeeping.report.data module": [[20, "module-armi.bookkeeping.report.data"]], "armi.bookkeeping.report.html module": [[21, "module-armi.bookkeeping.report.html"]], "armi.bookkeeping.report.newReportUtils module": [[22, "module-armi.bookkeeping.report.newReportUtils"]], "armi.bookkeeping.report.newReports module": [[23, "module-armi.bookkeeping.report.newReports"]], "armi.bookkeeping.report.reportInterface module": [[24, "module-armi.bookkeeping.report.reportInterface"]], "armi.bookkeeping.report.reportingUtils module": [[25, "module-armi.bookkeeping.report.reportingUtils"]], "armi.bookkeeping.report.tests package": [[26, "module-armi.bookkeeping.report.tests"]], "armi.bookkeeping.report.tests.test_newReport module": [[27, "module-armi.bookkeeping.report.tests.test_newReport"]], "armi.bookkeeping.report.tests.test_report module": [[28, "module-armi.bookkeeping.report.tests.test_report"]], "armi.bookkeeping.snapshotInterface module": [[29, "module-armi.bookkeeping.snapshotInterface"]], "armi.bookkeeping.tests package": [[30, "module-armi.bookkeeping.tests"]], "armi.bookkeeping.tests.test_historyTracker module": [[31, "module-armi.bookkeeping.tests.test_historyTracker"]], "armi.bookkeeping.tests.test_memoryProfiler module": [[32, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "armi.bookkeeping.tests.test_snapshot module": [[33, "module-armi.bookkeeping.tests.test_snapshot"]], "armi.bookkeeping.visualization package": [[34, "module-armi.bookkeeping.visualization"]], "armi.bookkeeping.visualization.dumper module": [[35, "module-armi.bookkeeping.visualization.dumper"]], "armi.bookkeeping.visualization.entryPoint module": [[36, "module-armi.bookkeeping.visualization.entryPoint"]], "armi.bookkeeping.visualization.tests package": [[37, "module-armi.bookkeeping.visualization.tests"]], "armi.bookkeeping.visualization.tests.test_vis module": [[38, "module-armi.bookkeeping.visualization.tests.test_vis"]], "armi.bookkeeping.visualization.tests.test_xdmf module": [[39, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "armi.bookkeeping.visualization.utils module": [[40, "module-armi.bookkeeping.visualization.utils"]], "armi.bookkeeping.visualization.vtk module": [[41, "module-armi.bookkeeping.visualization.vtk"]], "Limitations": [[41, "limitations"]], "armi.bookkeeping.visualization.xdmf module": [[42, "module-armi.bookkeeping.visualization.xdmf"]], "armi.cases package": [[43, "module-armi.cases"]], "armi.cases.case module": [[44, "module-armi.cases.case"]], "Todo": [[44, "id1"]], "armi.cases.inputModifiers package": [[45, "module-armi.cases.inputModifiers"]], "armi.cases.inputModifiers.inputModifiers module": [[46, "module-armi.cases.inputModifiers.inputModifiers"]], "armi.cases.inputModifiers.neutronicsModifiers module": [[47, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "armi.cases.inputModifiers.pinTypeInputModifiers module": [[48, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputModifiers.tests package": [[49, "module-armi.cases.inputModifiers.tests"]], "armi.cases.inputModifiers.tests.test_inputModifiers module": [[50, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers module": [[51, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "armi.cases.suite module": [[52, "module-armi.cases.suite"]], "armi.cases.suiteBuilder module": [[53, "module-armi.cases.suiteBuilder"]], "armi.cases.tests package": [[54, "module-armi.cases.tests"]], "armi.cases.tests.test_cases module": [[55, "module-armi.cases.tests.test_cases"]], "armi.cases.tests.test_suiteBuilder module": [[56, "module-armi.cases.tests.test_suiteBuilder"]], "armi.cli package": [[57, "module-armi.cli"]], "armi.cli.checkInputs module": [[58, "module-armi.cli.checkInputs"]], "armi.cli.cleanTemps module": [[59, "module-armi.cli.cleanTemps"]], "armi.cli.clone module": [[60, "module-armi.cli.clone"]], "armi.cli.compareCases module": [[61, "module-armi.cli.compareCases"]], "armi.cli.database module": [[62, "module-armi.cli.database"]], "armi.cli.entryPoint module": [[63, "module-armi.cli.entryPoint"]], "armi.cli.gridGui module": [[64, "module-armi.cli.gridGui"]], "armi.cli.migrateInputs module": [[65, "module-armi.cli.migrateInputs"]], "armi.cli.modify module": [[66, "module-armi.cli.modify"]], "armi.cli.reportsEntryPoint module": [[67, "module-armi.cli.reportsEntryPoint"]], "armi.cli.run module": [[68, "module-armi.cli.run"]], "armi.cli.runSuite module": [[69, "module-armi.cli.runSuite"]], "armi.cli.tests package": [[70, "module-armi.cli.tests"]], "armi.cli.tests.test_runEntryPoint module": [[71, "module-armi.cli.tests.test_runEntryPoint"]], "armi.cli.tests.test_runSuite module": [[72, "module-armi.cli.tests.test_runSuite"]], "armi.conftest module": [[73, "module-armi.conftest"]], "armi.context module": [[74, "module-armi.context"]], "armi.interfaces module": [[75, "module-armi.interfaces"]], "armi.materials package": [[76, "module-armi.materials"]], "armi.materials.air module": [[77, "module-armi.materials.air"]], "armi.materials.alloy200 module": [[78, "module-armi.materials.alloy200"]], "armi.materials.b4c module": [[79, "module-armi.materials.b4c"]], "armi.materials.be9 module": [[80, "module-armi.materials.be9"]], "armi.materials.caH2 module": [[81, "module-armi.materials.caH2"]], "armi.materials.californium module": [[82, "module-armi.materials.californium"]], "armi.materials.concrete module": [[83, "module-armi.materials.concrete"]], "armi.materials.copper module": [[84, "module-armi.materials.copper"]], "armi.materials.cs module": [[85, "module-armi.materials.cs"]], "armi.materials.custom module": [[86, "module-armi.materials.custom"]], "armi.materials.graphite module": [[87, "module-armi.materials.graphite"]], "armi.materials.hafnium module": [[88, "module-armi.materials.hafnium"]], "armi.materials.hastelloyN module": [[89, "module-armi.materials.hastelloyN"]], "armi.materials.ht9 module": [[90, "module-armi.materials.ht9"]], "armi.materials.inconel module": [[91, "module-armi.materials.inconel"]], "armi.materials.inconel600 module": [[92, "module-armi.materials.inconel600"]], "armi.materials.inconel625 module": [[93, "module-armi.materials.inconel625"]], "armi.materials.inconel800 module": [[94, "module-armi.materials.inconel800"]], "armi.materials.inconelPE16 module": [[95, "module-armi.materials.inconelPE16"]], "armi.materials.inconelX750 module": [[96, "module-armi.materials.inconelX750"]], "armi.materials.lead module": [[97, "module-armi.materials.lead"]], "armi.materials.leadBismuth module": [[98, "module-armi.materials.leadBismuth"]], "armi.materials.lithium module": [[99, "module-armi.materials.lithium"]], "armi.materials.magnesium module": [[100, "module-armi.materials.magnesium"]], "armi.materials.material module": [[101, "module-armi.materials.material"]], "armi.materials.mgO module": [[102, "module-armi.materials.mgO"]], "armi.materials.mixture module": [[103, "module-armi.materials.mixture"]], "armi.materials.molybdenum module": [[104, "module-armi.materials.molybdenum"]], "armi.materials.mox module": [[105, "module-armi.materials.mox"]], "armi.materials.nZ module": [[106, "module-armi.materials.nZ"]], "armi.materials.potassium module": [[107, "module-armi.materials.potassium"]], "armi.materials.scandiumOxide module": [[108, "module-armi.materials.scandiumOxide"]], "armi.materials.siC module": [[109, "module-armi.materials.siC"]], "armi.materials.sodium module": [[110, "module-armi.materials.sodium"]], "armi.materials.sodiumChloride module": [[111, "module-armi.materials.sodiumChloride"]], "armi.materials.sulfur module": [[112, "module-armi.materials.sulfur"]], "armi.materials.tZM module": [[113, "module-armi.materials.tZM"]], "armi.materials.tantalum module": [[114, "module-armi.materials.tantalum"]], "armi.materials.tests package": [[115, "module-armi.materials.tests"]], "armi.materials.tests.test__init__ module": [[116, "module-armi.materials.tests.test__init__"]], "armi.materials.tests.test_air module": [[117, "module-armi.materials.tests.test_air"]], "armi.materials.tests.test_b4c module": [[118, "module-armi.materials.tests.test_b4c"]], "armi.materials.tests.test_be9 module": [[119, "module-armi.materials.tests.test_be9"]], "armi.materials.tests.test_graphite module": [[120, "module-armi.materials.tests.test_graphite"]], "armi.materials.tests.test_lithium module": [[121, "module-armi.materials.tests.test_lithium"]], "armi.materials.tests.test_materials module": [[122, "module-armi.materials.tests.test_materials"]], "armi.materials.tests.test_sic module": [[123, "module-armi.materials.tests.test_sic"]], "armi.materials.tests.test_sulfur module": [[124, "module-armi.materials.tests.test_sulfur"]], "armi.materials.tests.test_thoriumOxide module": [[125, "module-armi.materials.tests.test_thoriumOxide"]], "armi.materials.tests.test_uZr module": [[126, "module-armi.materials.tests.test_uZr"]], "armi.materials.tests.test_water module": [[127, "module-armi.materials.tests.test_water"]], "armi.materials.thU module": [[128, "module-armi.materials.thU"]], "armi.materials.thorium module": [[129, "module-armi.materials.thorium"]], "armi.materials.thoriumOxide module": [[130, "module-armi.materials.thoriumOxide"]], "armi.materials.uThZr module": [[131, "module-armi.materials.uThZr"]], "armi.materials.uZr module": [[132, "module-armi.materials.uZr"]], "armi.materials.uranium module": [[133, "module-armi.materials.uranium"]], "armi.materials.uraniumOxide module": [[134, "module-armi.materials.uraniumOxide"]], "armi.materials.void module": [[135, "module-armi.materials.void"]], "armi.materials.water module": [[136, "module-armi.materials.water"]], "armi.materials.yttriumOxide module": [[137, "module-armi.materials.yttriumOxide"]], "armi.materials.zincOxide module": [[138, "module-armi.materials.zincOxide"]], "armi.materials.zr module": [[139, "module-armi.materials.zr"]], "armi.meta module": [[140, "module-armi.meta"]], "armi.mpiActions module": [[141, "module-armi.mpiActions"]], "Sample MPI Action Workflow": [[141, "id1"]], "armi.nucDirectory package": [[142, "module-armi.nucDirectory"]], "Elements": [[142, "elements"]], "Nuclide Bases": [[142, "nuclide-bases"]], "Nuclide names, labels, and IDs": [[142, "nuclide-names-labels-and-ids"]], "Indices - rapid access": [[142, "indices-rapid-access"]], "armi.nucDirectory.elements module": [[143, "module-armi.nucDirectory.elements"]], "List of elements": [[143, "id1"]], "armi.nucDirectory.nucDir module": [[144, "module-armi.nucDirectory.nucDir"]], "armi.nucDirectory.nuclideBases module": [[145, "module-armi.nucDirectory.nuclideBases"]], "List of nuclides": [[145, "id1"]], "armi.nucDirectory.tests package": [[146, "module-armi.nucDirectory.tests"]], "armi.nucDirectory.tests.test_elements module": [[147, "module-armi.nucDirectory.tests.test_elements"]], "armi.nucDirectory.tests.test_nucDirectory module": [[148, "module-armi.nucDirectory.tests.test_nucDirectory"]], "armi.nucDirectory.tests.test_nuclideBases module": [[149, "module-armi.nucDirectory.tests.test_nuclideBases"]], "armi.nucDirectory.tests.test_thermalScattering module": [[150, "module-armi.nucDirectory.tests.test_thermalScattering"]], "armi.nucDirectory.tests.test_transmutations module": [[151, "module-armi.nucDirectory.tests.test_transmutations"]], "armi.nucDirectory.thermalScattering module": [[152, "module-armi.nucDirectory.thermalScattering"]], "armi.nucDirectory.transmutations module": [[153, "module-armi.nucDirectory.transmutations"]], "armi.nuclearDataIO package": [[154, "module-armi.nuclearDataIO"]], "armi.nuclearDataIO.cccc package": [[155, "module-armi.nuclearDataIO.cccc"]], "Using the system": [[155, "using-the-system"]], "Implementation details": [[155, "implementation-details"]], "Discussion": [[155, "discussion"]], "armi.nuclearDataIO.cccc.cccc module": [[156, "module-armi.nuclearDataIO.cccc.cccc"]], "armi.nuclearDataIO.cccc.compxs module": [[157, "module-armi.nuclearDataIO.cccc.compxs"]], "armi.nuclearDataIO.cccc.dif3d module": [[158, "module-armi.nuclearDataIO.cccc.dif3d"]], "armi.nuclearDataIO.cccc.dlayxs module": [[159, "module-armi.nuclearDataIO.cccc.dlayxs"]], "armi.nuclearDataIO.cccc.fixsrc module": [[160, "module-armi.nuclearDataIO.cccc.fixsrc"]], "armi.nuclearDataIO.cccc.gamiso module": [[161, "module-armi.nuclearDataIO.cccc.gamiso"]], "armi.nuclearDataIO.cccc.geodst module": [[162, "module-armi.nuclearDataIO.cccc.geodst"]], "armi.nuclearDataIO.cccc.isotxs module": [[163, "module-armi.nuclearDataIO.cccc.isotxs"]], "armi.nuclearDataIO.cccc.labels module": [[164, "module-armi.nuclearDataIO.cccc.labels"]], "armi.nuclearDataIO.cccc.nhflux module": [[165, "module-armi.nuclearDataIO.cccc.nhflux"]], "armi.nuclearDataIO.cccc.pmatrx module": [[166, "module-armi.nuclearDataIO.cccc.pmatrx"]], "armi.nuclearDataIO.cccc.pwdint module": [[167, "module-armi.nuclearDataIO.cccc.pwdint"]], "armi.nuclearDataIO.cccc.rtflux module": [[168, "module-armi.nuclearDataIO.cccc.rtflux"]], "armi.nuclearDataIO.cccc.rzflux module": [[169, "module-armi.nuclearDataIO.cccc.rzflux"]], "armi.nuclearDataIO.cccc.tests package": [[170, "module-armi.nuclearDataIO.cccc.tests"]], "armi.nuclearDataIO.cccc.tests.test_cccc module": [[171, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "armi.nuclearDataIO.cccc.tests.test_compxs module": [[172, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "armi.nuclearDataIO.cccc.tests.test_dif3d module": [[173, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "armi.nuclearDataIO.cccc.tests.test_dlayxs module": [[174, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "armi.nuclearDataIO.cccc.tests.test_gamiso module": [[175, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "armi.nuclearDataIO.cccc.tests.test_geodst module": [[176, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "armi.nuclearDataIO.cccc.tests.test_isotxs module": [[177, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "armi.nuclearDataIO.cccc.tests.test_labels module": [[178, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "armi.nuclearDataIO.cccc.tests.test_nhflux module": [[179, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "armi.nuclearDataIO.cccc.tests.test_pmatrx module": [[180, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "armi.nuclearDataIO.cccc.tests.test_pwdint module": [[181, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "armi.nuclearDataIO.cccc.tests.test_rtflux module": [[182, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "armi.nuclearDataIO.cccc.tests.test_rzflux module": [[183, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "armi.nuclearDataIO.nuclearFileMetadata module": [[184, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "armi.nuclearDataIO.tests package": [[185, "module-armi.nuclearDataIO.tests"]], "armi.nuclearDataIO.tests.test_xsCollections module": [[186, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "armi.nuclearDataIO.tests.test_xsLibraries module": [[187, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "armi.nuclearDataIO.tests.test_xsNuclides module": [[188, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "armi.nuclearDataIO.xsCollections module": [[189, "module-armi.nuclearDataIO.xsCollections"]], "armi.nuclearDataIO.xsLibraries module": [[190, "module-armi.nuclearDataIO.xsLibraries"]], "armi.nuclearDataIO.xsNuclides module": [[191, "module-armi.nuclearDataIO.xsNuclides"]], "armi.operators package": [[192, "module-armi.operators"]], "armi.operators.operator module": [[193, "module-armi.operators.operator"]], "armi.operators.operatorMPI module": [[194, "module-armi.operators.operatorMPI"]], "armi.operators.runTypes module": [[195, "module-armi.operators.runTypes"]], "armi.operators.settingsValidation module": [[196, "module-armi.operators.settingsValidation"]], "armi.operators.snapshots module": [[197, "module-armi.operators.snapshots"]], "armi.operators.tests package": [[198, "module-armi.operators.tests"]], "armi.operators.tests.test_inspectors module": [[199, "module-armi.operators.tests.test_inspectors"]], "armi.operators.tests.test_operatorSnapshots module": [[200, "module-armi.operators.tests.test_operatorSnapshots"]], "armi.operators.tests.test_operators module": [[201, "module-armi.operators.tests.test_operators"]], "armi.physics package": [[202, "module-armi.physics"]], "Historical fun fact": [[202, null]], "armi.physics.constants module": [[203, "module-armi.physics.constants"]], "armi.physics.executers module": [[204, "module-armi.physics.executers"]], "armi.physics.fuelCycle package": [[205, "module-armi.physics.fuelCycle"]], "armi.physics.fuelCycle.assemblyRotationAlgorithms module": [[206, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.fuelHandlerFactory module": [[207, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "armi.physics.fuelCycle.fuelHandlerInterface module": [[208, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "armi.physics.fuelCycle.fuelHandlers module": [[209, "module-armi.physics.fuelCycle.fuelHandlers"]], "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils module": [[210, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelCycle.settings module": [[211, "module-armi.physics.fuelCycle.settings"]], "armi.physics.fuelCycle.tests package": [[212, "module-armi.physics.fuelCycle.tests"]], "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms module": [[213, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "armi.physics.fuelCycle.tests.test_fuelHandlers module": [[214, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils module": [[215, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "armi.physics.fuelPerformance package": [[216, "module-armi.physics.fuelPerformance"]], "armi.physics.fuelPerformance.executers module": [[217, "module-armi.physics.fuelPerformance.executers"]], "armi.physics.fuelPerformance.parameters module": [[218, "module-armi.physics.fuelPerformance.parameters"]], "armi.physics.fuelPerformance.plugin module": [[219, "module-armi.physics.fuelPerformance.plugin"]], "armi.physics.fuelPerformance.settings module": [[220, "module-armi.physics.fuelPerformance.settings"]], "armi.physics.fuelPerformance.tests package": [[221, "module-armi.physics.fuelPerformance.tests"]], "armi.physics.fuelPerformance.tests.test_executers module": [[222, "module-armi.physics.fuelPerformance.tests.test_executers"]], "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin module": [[223, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils module": [[224, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "armi.physics.fuelPerformance.utils module": [[225, "module-armi.physics.fuelPerformance.utils"]], "armi.physics.neutronics package": [[226, "module-armi.physics.neutronics"]], "armi.physics.neutronics.const module": [[227, "module-armi.physics.neutronics.const"]], "armi.physics.neutronics.crossSectionGroupManager module": [[228, "module-armi.physics.neutronics.crossSectionGroupManager"]], "armi.physics.neutronics.crossSectionSettings module": [[229, "module-armi.physics.neutronics.crossSectionSettings"]], "armi.physics.neutronics.diffIsotxs module": [[230, "module-armi.physics.neutronics.diffIsotxs"]], "armi.physics.neutronics.energyGroups module": [[231, "module-armi.physics.neutronics.energyGroups"]], "armi.physics.neutronics.fissionProductModel package": [[232, "module-armi.physics.neutronics.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModel module": [[233, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings module": [[234, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct module": [[235, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "armi.physics.neutronics.fissionProductModel.tests package": [[236, "module-armi.physics.neutronics.fissionProductModel.tests"]], "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel module": [[237, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct module": [[238, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "armi.physics.neutronics.globalFlux package": [[239, "module-armi.physics.neutronics.globalFlux"]], "armi.physics.neutronics.globalFlux.globalFluxInterface module": [[240, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "armi.physics.neutronics.globalFlux.tests package": [[241, "module-armi.physics.neutronics.globalFlux.tests"]], "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface module": [[242, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "armi.physics.neutronics.isotopicDepletion package": [[243, "module-armi.physics.neutronics.isotopicDepletion"]], "armi.physics.neutronics.isotopicDepletion.crossSectionTable module": [[244, "module-armi.physics.neutronics.isotopicDepletion.crossSectionTable"]], "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface module": [[245, "module-armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface"]], "armi.physics.neutronics.latticePhysics package": [[246, "module-armi.physics.neutronics.latticePhysics"]], "armi.physics.neutronics.latticePhysics.latticePhysicsInterface module": [[247, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "armi.physics.neutronics.latticePhysics.latticePhysicsWriter module": [[248, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "armi.physics.neutronics.latticePhysics.tests package": [[249, "module-armi.physics.neutronics.latticePhysics.tests"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface module": [[250, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter module": [[251, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "armi.physics.neutronics.macroXSGenerationInterface module": [[252, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "armi.physics.neutronics.parameters module": [[253, "module-armi.physics.neutronics.parameters"]], "armi.physics.neutronics.reports module": [[254, "module-armi.physics.neutronics.reports"]], "armi.physics.neutronics.settings module": [[255, "module-armi.physics.neutronics.settings"]], "armi.physics.neutronics.tests package": [[256, "module-armi.physics.neutronics.tests"]], "armi.physics.neutronics.tests.test_crossSectionManager module": [[257, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "armi.physics.neutronics.tests.test_crossSectionSettings module": [[258, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "armi.physics.neutronics.tests.test_crossSectionTable module": [[259, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "armi.physics.neutronics.tests.test_energyGroups module": [[260, "module-armi.physics.neutronics.tests.test_energyGroups"]], "armi.physics.neutronics.tests.test_macroXSGenerationInterface module": [[261, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_neutronicsPlugin module": [[262, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "armi.physics.safety package": [[263, "module-armi.physics.safety"]], "armi.physics.safety.settings module": [[264, "module-armi.physics.safety.settings"]], "armi.physics.tests package": [[265, "module-armi.physics.tests"]], "armi.physics.tests.test_executers module": [[266, "module-armi.physics.tests.test_executers"]], "armi.physics.thermalHydraulics package": [[267, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalHydraulics.const module": [[268, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalHydraulics.parameters module": [[269, "module-armi.physics.thermalHydraulics.parameters"]], "armi.physics.thermalHydraulics.plugin module": [[270, "module-armi.physics.thermalHydraulics.plugin"]], "armi.physics.thermalHydraulics.settings module": [[271, "module-armi.physics.thermalHydraulics.settings"]], "armi.pluginManager module": [[272, "module-armi.pluginManager"]], "armi.plugins module": [[273, "module-armi.plugins"]], "Other customization points": [[273, "other-customization-points"]], "armi.reactor package": [[274, "module-armi.reactor"]], "armi.reactor.assemblies module": [[275, "module-armi.reactor.assemblies"]], "armi.reactor.assemblyLists module": [[276, "module-armi.reactor.assemblyLists"]], "armi.reactor.assemblyParameters module": [[277, "module-armi.reactor.assemblyParameters"]], "armi.reactor.blockParameters module": [[278, "module-armi.reactor.blockParameters"]], "armi.reactor.blocks module": [[279, "module-armi.reactor.blocks"]], "Parameter": [[279, "parameter"]], "armi.reactor.blueprints package": [[280, "module-armi.reactor.blueprints"]], "armi.reactor.blueprints.assemblyBlueprint module": [[281, "module-armi.reactor.blueprints.assemblyBlueprint"]], "armi.reactor.blueprints.blockBlueprint module": [[282, "module-armi.reactor.blueprints.blockBlueprint"]], "armi.reactor.blueprints.componentBlueprint module": [[283, "module-armi.reactor.blueprints.componentBlueprint"]], "armi.reactor.blueprints.gridBlueprint module": [[284, "module-armi.reactor.blueprints.gridBlueprint"]], "armi.reactor.blueprints.isotopicOptions module": [[285, "module-armi.reactor.blueprints.isotopicOptions"]], "armi.reactor.blueprints.reactorBlueprint module": [[286, "module-armi.reactor.blueprints.reactorBlueprint"]], "armi.reactor.blueprints.tests package": [[287, "module-armi.reactor.blueprints.tests"]], "armi.reactor.blueprints.tests.test_assemblyBlueprints module": [[288, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "armi.reactor.blueprints.tests.test_blockBlueprints module": [[289, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "armi.reactor.blueprints.tests.test_blueprints module": [[290, "module-armi.reactor.blueprints.tests.test_blueprints"]], "armi.reactor.blueprints.tests.test_componentBlueprint module": [[291, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "armi.reactor.blueprints.tests.test_customIsotopics module": [[292, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "armi.reactor.blueprints.tests.test_gridBlueprints module": [[293, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "armi.reactor.blueprints.tests.test_materialModifications module": [[294, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "armi.reactor.blueprints.tests.test_reactorBlueprints module": [[295, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "armi.reactor.components package": [[296, "module-armi.reactor.components"]], "armi.reactor.components.basicShapes module": [[297, "module-armi.reactor.components.basicShapes"]], "armi.reactor.components.complexShapes module": [[298, "module-armi.reactor.components.complexShapes"]], "armi.reactor.components.component module": [[299, "module-armi.reactor.components.component"]], "armi.reactor.components.componentParameters module": [[300, "module-armi.reactor.components.componentParameters"]], "armi.reactor.components.volumetricShapes module": [[301, "module-armi.reactor.components.volumetricShapes"]], "armi.reactor.composites module": [[302, "module-armi.reactor.composites"]], "armi.reactor.converters package": [[303, "module-armi.reactor.converters"]], "armi.reactor.converters.axialExpansionChanger module": [[304, "module-armi.reactor.converters.axialExpansionChanger"]], "armi.reactor.converters.blockConverters module": [[305, "module-armi.reactor.converters.blockConverters"]], "armi.reactor.converters.geometryConverters module": [[306, "module-armi.reactor.converters.geometryConverters"]], "armi.reactor.converters.meshConverters module": [[307, "module-armi.reactor.converters.meshConverters"]], "armi.reactor.converters.parameterSweeps package": [[308, "module-armi.reactor.converters.parameterSweeps"]], "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters module": [[309, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "armi.reactor.converters.pinTypeBlockConverters module": [[310, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests package": [[311, "module-armi.reactor.converters.tests"]], "armi.reactor.converters.tests.test_axialExpansionChanger module": [[312, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "armi.reactor.converters.tests.test_blockConverter module": [[313, "module-armi.reactor.converters.tests.test_blockConverter"]], "armi.reactor.converters.tests.test_geometryConverters module": [[314, "module-armi.reactor.converters.tests.test_geometryConverters"]], "armi.reactor.converters.tests.test_meshConverters module": [[315, "module-armi.reactor.converters.tests.test_meshConverters"]], "armi.reactor.converters.tests.test_pinTypeBlockConverters module": [[316, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "armi.reactor.converters.tests.test_uniformMesh module": [[317, "module-armi.reactor.converters.tests.test_uniformMesh"]], "armi.reactor.converters.uniformMesh module": [[318, "module-armi.reactor.converters.uniformMesh"]], "Requirements": [[318, "requirements"], [474, "requirements"]], "armi.reactor.flags module": [[319, "module-armi.reactor.flags"]], "armi.reactor.geometry module": [[320, "module-armi.reactor.geometry"]], "armi.reactor.grids package": [[321, "module-armi.reactor.grids"]], "armi.reactor.grids.axial module": [[322, "module-armi.reactor.grids.axial"]], "armi.reactor.grids.cartesian module": [[323, "module-armi.reactor.grids.cartesian"]], "armi.reactor.grids.constants module": [[324, "module-armi.reactor.grids.constants"]], "armi.reactor.grids.grid module": [[325, "module-armi.reactor.grids.grid"]], "armi.reactor.grids.hexagonal module": [[326, "module-armi.reactor.grids.hexagonal"]], "armi.reactor.grids.locations module": [[327, "module-armi.reactor.grids.locations"]], "armi.reactor.grids.structuredgrid module": [[328, "module-armi.reactor.grids.structuredgrid"]], "armi.reactor.grids.thetarz module": [[329, "module-armi.reactor.grids.thetarz"]], "armi.reactor.parameters package": [[330, "module-armi.reactor.parameters"]], "Example Parameters": [[330, "id1"]], "Basic Usage": [[330, "basic-usage"]], "Design Considerations": [[330, "design-considerations"]], "Design considerations": [[330, "id2"]], "armi.reactor.parameters.exceptions module": [[331, "module-armi.reactor.parameters.exceptions"]], "armi.reactor.parameters.parameterCollections module": [[332, "module-armi.reactor.parameters.parameterCollections"]], "armi.reactor.parameters.parameterDefinitions module": [[333, "module-armi.reactor.parameters.parameterDefinitions"]], "armi.reactor.parameters.resolveCollections module": [[334, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorParameters module": [[335, "module-armi.reactor.reactorParameters"]], "armi.reactor.reactors module": [[336, "module-armi.reactor.reactors"]], "armi.reactor.systemLayoutInput module": [[337, "module-armi.reactor.systemLayoutInput"]], "armi.reactor.tests package": [[338, "module-armi.reactor.tests"]], "armi.reactor.tests.test_assemblies module": [[339, "module-armi.reactor.tests.test_assemblies"]], "armi.reactor.tests.test_blocks module": [[340, "module-armi.reactor.tests.test_blocks"]], "armi.reactor.tests.test_components module": [[341, "module-armi.reactor.tests.test_components"]], "armi.reactor.tests.test_composites module": [[342, "module-armi.reactor.tests.test_composites"]], "armi.reactor.tests.test_flags module": [[343, "module-armi.reactor.tests.test_flags"]], "armi.reactor.tests.test_geometry module": [[344, "module-armi.reactor.tests.test_geometry"]], "armi.reactor.tests.test_parameters module": [[345, "module-armi.reactor.tests.test_parameters"]], "armi.reactor.tests.test_reactors module": [[346, "module-armi.reactor.tests.test_reactors"]], "armi.reactor.tests.test_rz_reactors module": [[347, "module-armi.reactor.tests.test_rz_reactors"]], "armi.reactor.tests.test_zones module": [[348, "module-armi.reactor.tests.test_zones"]], "armi.reactor.zones module": [[349, "module-armi.reactor.zones"]], "armi.runLog module": [[350, "module-armi.runLog"]], "armi.scripts package": [[351, "module-armi.scripts"]], "armi.scripts.migration package": [[352, "module-armi.scripts.migration"]], "armi.scripts.migration.base module": [[353, "module-armi.scripts.migration.base"]], "armi.scripts.migration.crossSectionBlueprintsToSettings module": [[354, "module-armi.scripts.migration.crossSectionBlueprintsToSettings"]], "armi.scripts.migration.m0_1_0_newDbFormat module": [[355, "module-armi.scripts.migration.m0_1_0_newDbFormat"]], "armi.scripts.migration.m0_1_3 module": [[356, "module-armi.scripts.migration.m0_1_3"]], "armi.scripts.migration.m0_1_6_locationLabels module": [[357, "module-armi.scripts.migration.m0_1_6_locationLabels"]], "armi.scripts.migration.tests package": [[358, "module-armi.scripts.migration.tests"]], "armi.scripts.migration.tests.test_m0_1_6_locationLabels module": [[359, "module-armi.scripts.migration.tests.test_m0_1_6_locationLabels"]], "armi.settings package": [[360, "module-armi.settings"]], "armi.settings.caseSettings module": [[361, "module-armi.settings.caseSettings"]], "armi.settings.fwSettings package": [[362, "module-armi.settings.fwSettings"]], "armi.settings.fwSettings.databaseSettings module": [[363, "module-armi.settings.fwSettings.databaseSettings"]], "armi.settings.fwSettings.globalSettings module": [[364, "module-armi.settings.fwSettings.globalSettings"]], "armi.settings.fwSettings.reportSettings module": [[365, "module-armi.settings.fwSettings.reportSettings"]], "armi.settings.fwSettings.tightCouplingSettings module": [[366, "module-armi.settings.fwSettings.tightCouplingSettings"]], "armi.settings.setting module": [[367, "module-armi.settings.setting"]], "armi.settings.settingsIO module": [[368, "module-armi.settings.settingsIO"]], "armi.settings.tests package": [[369, "module-armi.settings.tests"]], "armi.settings.tests.test_settings module": [[370, "module-armi.settings.tests.test_settings"]], "armi.settings.tests.test_settingsIO module": [[371, "module-armi.settings.tests.test_settingsIO"]], "armi.tests package": [[372, "module-armi.tests"]], "armi.tests.mockRunLogs module": [[373, "module-armi.tests.mockRunLogs"]], "armi.tests.refSmallReactorShuffleLogic module": [[374, "module-armi.tests.refSmallReactorShuffleLogic"]], "armi.tests.test_apps module": [[375, "module-armi.tests.test_apps"]], "armi.tests.test_armiTestHelper module": [[376, "module-armi.tests.test_armiTestHelper"]], "armi.tests.test_cartesian module": [[377, "module-armi.tests.test_cartesian"]], "armi.tests.test_interfaces module": [[378, "module-armi.tests.test_interfaces"]], "armi.tests.test_lwrInputs module": [[379, "module-armi.tests.test_lwrInputs"]], "armi.tests.test_mpiActions module": [[380, "module-armi.tests.test_mpiActions"]], "armi.tests.test_mpiFeatures module": [[381, "module-armi.tests.test_mpiFeatures"]], "armi.tests.test_notebooks module": [[382, "module-armi.tests.test_notebooks"]], "armi.tests.test_plugins module": [[383, "module-armi.tests.test_plugins"]], "armi.tests.test_runLog module": [[384, "module-armi.tests.test_runLog"]], "armi.tests.test_tests module": [[385, "module-armi.tests.test_tests"]], "armi.tests.test_user_plugins module": [[386, "module-armi.tests.test_user_plugins"]], "armi.utils package": [[387, "module-armi.utils"]], "armi.utils.asciimaps module": [[388, "module-armi.utils.asciimaps"]], "armi.utils.codeTiming module": [[389, "module-armi.utils.codeTiming"]], "armi.utils.customExceptions module": [[390, "module-armi.utils.customExceptions"]], "armi.utils.densityTools module": [[391, "module-armi.utils.densityTools"]], "armi.utils.directoryChangers module": [[392, "module-armi.utils.directoryChangers"]], "armi.utils.directoryChangersMpi module": [[393, "module-armi.utils.directoryChangersMpi"]], "armi.utils.dochelpers module": [[394, "module-armi.utils.dochelpers"]], "armi.utils.dynamicImporter module": [[395, "module-armi.utils.dynamicImporter"]], "armi.utils.flags module": [[396, "module-armi.utils.flags"]], "armi.utils.gridEditor module": [[397, "armi-utils-grideditor-module"]], "armi.utils.hexagon module": [[398, "module-armi.utils.hexagon"]], "armi.utils.iterables module": [[399, "module-armi.utils.iterables"]], "armi.utils.mathematics module": [[400, "module-armi.utils.mathematics"]], "armi.utils.outputCache module": [[401, "module-armi.utils.outputCache"]], "API usage": [[401, "api-usage"]], "armi.utils.parsing module": [[402, "module-armi.utils.parsing"]], "armi.utils.pathTools module": [[403, "module-armi.utils.pathTools"]], "armi.utils.plotting module": [[404, "module-armi.utils.plotting"]], "armi.utils.properties module": [[405, "module-armi.utils.properties"]], "armi.utils.reportPlotting module": [[406, "module-armi.utils.reportPlotting"]], "armi.utils.tests package": [[407, "module-armi.utils.tests"]], "armi.utils.tests.test_asciimaps module": [[408, "module-armi.utils.tests.test_asciimaps"]], "armi.utils.tests.test_codeTiming module": [[409, "module-armi.utils.tests.test_codeTiming"]], "armi.utils.tests.test_custom_exceptions module": [[410, "module-armi.utils.tests.test_custom_exceptions"]], "armi.utils.tests.test_densityTools module": [[411, "module-armi.utils.tests.test_densityTools"]], "armi.utils.tests.test_directoryChangers module": [[412, "module-armi.utils.tests.test_directoryChangers"]], "armi.utils.tests.test_dochelpers module": [[413, "module-armi.utils.tests.test_dochelpers"]], "armi.utils.tests.test_flags module": [[414, "module-armi.utils.tests.test_flags"]], "armi.utils.tests.test_iterables module": [[415, "module-armi.utils.tests.test_iterables"]], "armi.utils.tests.test_mathematics module": [[416, "module-armi.utils.tests.test_mathematics"]], "armi.utils.tests.test_outputCache module": [[417, "module-armi.utils.tests.test_outputCache"]], "armi.utils.tests.test_parsing module": [[418, "module-armi.utils.tests.test_parsing"]], "armi.utils.tests.test_pathTools module": [[419, "module-armi.utils.tests.test_pathTools"]], "armi.utils.tests.test_plotting module": [[420, "module-armi.utils.tests.test_plotting"]], "armi.utils.tests.test_properties module": [[421, "module-armi.utils.tests.test_properties"]], "armi.utils.tests.test_reportPlotting module": [[422, "module-armi.utils.tests.test_reportPlotting"]], "armi.utils.tests.test_textProcessors module": [[423, "module-armi.utils.tests.test_textProcessors"]], "armi.utils.tests.test_triangle module": [[424, "module-armi.utils.tests.test_triangle"]], "armi.utils.tests.test_units module": [[425, "module-armi.utils.tests.test_units"]], "armi.utils.tests.test_utils module": [[426, "module-armi.utils.tests.test_utils"]], "armi.utils.textProcessors module": [[427, "module-armi.utils.textProcessors"]], "armi.utils.triangle module": [[428, "module-armi.utils.triangle"]], "armi.utils.units module": [[429, "module-armi.utils.units"]], "armi": [[430, "armi"]], "Documenting ARMI": [[431, "documenting-armi"]], "Building the documentation": [[431, "building-the-documentation"]], "Documentation for ARMI plugins": [[431, "documentation-for-armi-plugins"]], "Linking to ARMI documentation from plugins": [[431, "linking-to-armi-documentation-from-plugins"]], "Automatically building apidocs of namespace packages": [[431, "automatically-building-apidocs-of-namespace-packages"]], "Updating the Gallery": [[431, "updating-the-gallery"]], "Using Jupyter notebooks": [[431, "using-jupyter-notebooks"]], "Entry Points": [[432, "entry-points"], [434, "entry-points"]], "First Time Contributors Guide": [[433, "first-time-contributors-guide"]], "Help Wanted": [[433, "help-wanted"]], "Testing": [[433, "testing"]], "Submitting Changes": [[433, "submitting-changes"]], "Licensing of Tools": [[433, "licensing-of-tools"]], "Framework Architecture": [[434, "framework-architecture"]], "The Reactor Model": [[434, "the-reactor-model"]], "Finding objects in a model": [[434, "finding-objects-in-a-model"]], "Parameters": [[434, "parameters"]], "Converters": [[434, "converters"]], "Blueprints": [[434, "blueprints"]], "Operators": [[434, "operators"]], "The Standard Operator": [[434, "the-standard-operator"]], "The Snapshots Operator": [[434, "the-snapshots-operator"]], "The Interface Stack": [[434, "the-interface-stack"]], "Interface Interaction Hooks": [[434, "interface-interaction-hooks"]], "Adding a new interface": [[434, "adding-a-new-interface"]], "How interfaces get called": [[434, "how-interfaces-get-called"]], "Plugins": [[434, "plugins"]], "Developer Docs": [[435, "developer-docs"]], "Making ARMI-based Apps": [[436, "making-armi-based-apps"]], "Heads up": [[436, null]], "ARMI Plugins": [[436, "armi-plugins"]], "Some implementation details": [[436, "some-implementation-details"]], "Making your own Plugin": [[436, "making-your-own-plugin"]], "ARMI-Based Applications": [[436, "armi-based-applications"]], "Parallel Code in ARMI": [[437, "parallel-code-in-armi"]], "MPI communication crash course": [[437, "mpi-communication-crash-course"]], "MPI Communication within ARMI": [[437, "mpi-communication-within-armi"]], "Example using bcast": [[437, "example-using-bcast"]], "Example using scatter": [[437, "example-using-scatter"]], "A simplified approach": [[437, "a-simplified-approach"]], "Profiling ARMI": [[438, "profiling-armi"]], "Reports in ARMI": [[439, "reports-in-armi"]], "The Hook: getReportContents()": [[439, "the-hook-getreportcontents"]], "What is ReportContent?": [[439, "what-is-reportcontent"]], "Sections": [[439, "sections"]], "Tables": [[439, "tables"]], "Images": [[439, "images"]], "TimeSeries": [[439, "timeseries"]], "HTML Elements": [[439, "html-elements"]], "Summary": [[439, "summary"]], "Standards and Practices for Coding": [[440, "standards-and-practices-for-coding"]], "Code formatting with Black": [[440, "code-formatting-with-black"]], "Remove commented-out code": [[440, "remove-commented-out-code"]], "Avoid hard-coding run parameters": [[440, "avoid-hard-coding-run-parameters"]], "Avoid the global keyword": [[440, "avoid-the-global-keyword"]], "Naming conventions": [[440, "naming-conventions"]], "Use meaningful names": [[440, "use-meaningful-names"]], "General conventions": [[440, "general-conventions"]], "Naming quick-reference": [[440, "naming-quick-reference"]], "Common naming conventions within ARMI": [[440, "common-naming-conventions-within-armi"]], "Prefer shorter methods": [[440, "prefer-shorter-methods"]], "Avoid repeating code": [[440, "avoid-repeating-code"]], "Public methods should have docstrings": [[440, "public-methods-should-have-docstrings"]], "Unit tests": [[440, "unit-tests"]], "Import statements": [[440, "import-statements"]], "Import ordering": [[440, "import-ordering"]], "Don\u2019t create naked exceptions.": [[440, "don-t-create-naked-exceptions"]], "Data model": [[440, "data-model"]], "Input files": [[440, "input-files"]], "Address the ruff warnings": [[440, "address-the-ruff-warnings"]], "General do\u2019s and don\u2019ts": [[440, "general-do-s-and-don-ts"]], "Tooling and Infrastructure": [[441, "tooling-and-infrastructure"]], "Good Commit Messages": [[441, "good-commit-messages"]], "Good Pull Requests": [[441, "good-pull-requests"]], "One Idea = One PR": [[441, "one-idea-one-pr"]], "Don\u2019t open until it is ready": [[441, "don-t-open-until-it-is-ready"]], "Test It": [[441, "test-it"]], "Document It": [[441, "document-it"]], "Packaging and dependency management": [[441, "packaging-and-dependency-management"]], "setup.py": [[441, "setup-py"]], "requirements.txt": [[441, "requirements-txt"]], "Third-Party Licensing": [[441, "third-party-licensing"]], "Releasing a New Version of ARMI": [[441, "releasing-a-new-version-of-armi"]], "Module-Level Logging": [[441, "module-level-logging"]], "Gallery": [[442, "gallery"], [467, "gallery"], [486, "gallery"]], "Analysis": [[443, "analysis"], [446, "analysis"], [467, "analysis"], [486, "analysis"]], "Applications": [[444, "applications"], [451, "applications"], [467, "applications"], [486, "applications"]], "Framework": [[445, "framework"], [452, "framework"], [467, "framework"], [486, "framework"]], "Write MCNP Material Cards": [[447, "write-mcnp-material-cards"]], "Hex block to RZ geometry conversion": [[448, "hex-block-to-rz-geometry-conversion"]], "Hex reactor to RZ geometry conversion": [[449, "hex-reactor-to-rz-geometry-conversion"]], "Computation times": [[450, "computation-times"], [466, "computation-times"]], "Computing Component Volume Fractions on a Block with Automatic Thermal Expansion": [[453, "computing-component-volume-fractions-on-a-block-with-automatic-thermal-expansion"]], "Plot a chart of the nuclides.": [[454, "plot-a-chart-of-the-nuclides"]], "More details": [[454, null]], "Computing Reaction Rates on a Block.": [[455, "computing-reaction-rates-on-a-block"]], "Fuel management in a LWR.": [[456, "fuel-management-in-a-lwr"]], "Make a hex grid.": [[457, "make-a-hex-grid"]], "Make a Cartesian grid.": [[458, "make-a-cartesian-grid"]], "Make a Theta-R-Z grid.": [[459, "make-a-theta-r-z-grid"]], "Plotting Multi-group XS from ISOTXS.": [[460, "plotting-multi-group-xs-from-isotxs"]], "Plotting a multi-group scatter matrix.": [[461, "plotting-a-multi-group-scatter-matrix"]], "Listing of Material Library.": [[462, "listing-of-material-library"]], "Build Reactor Inputs Programmatically.": [[463, "build-reactor-inputs-programmatically"]], "Plot a reactor facemap.": [[464, "plot-a-reactor-facemap"]], "Transmutation and decay reactions.": [[465, "transmutation-and-decay-reactions"]], "Glossary": [[468, "glossary"]], "ARMI": [[469, "armi"]], "Quick links": [[469, "id3"]], "Quick start": [[469, "quick-start"]], "Background": [[469, "background"]], "Communication and coupling": [[469, "communication-and-coupling"]], "Automation": [[469, "automation"]], "New analysis and physics capabilities": [[469, "new-analysis-and-physics-capabilities"]], "Use cases": [[469, "use-cases"]], "The Research Scientist": [[469, "the-research-scientist"]], "The Nuclear Startup Engineer": [[469, "the-nuclear-startup-engineer"]], "Operating and Vendor Engineers": [[469, "operating-and-vendor-engineers"]], "The Enthusiast": [[469, "the-enthusiast"]], "History of ARMI": [[469, "history-of-armi"]], "System Requirements": [[469, "system-requirements"]], "Getting help": [[469, "getting-help"]], "Disclaimers": [[469, "disclaimers"]], "License": [[469, "license"]], "Installation": [[470, "installation"], [505, "installation"]], "Prerequisites": [[470, "prerequisites"], [505, "prerequisites"]], "The right Python command": [[470, null], [505, null]], "Preparing a Virtual Environment": [[470, "preparing-a-virtual-environment"], [505, "preparing-a-virtual-environment"]], "Getting the code": [[470, "getting-the-code"], [505, "getting-the-code"]], "Option 1: Install as a library": [[470, "option-1-install-as-a-library"], [505, "option-1-install-as-a-library"]], "Option 2: Install as a repository (for developers)": [[470, "option-2-install-as-a-repository-for-developers"], [505, "option-2-install-as-a-repository-for-developers"]], "Verifying installation": [[470, "verifying-installation"], [505, "verifying-installation"]], "Optional Setup": [[470, "optional-setup"], [505, "optional-setup"]], "GUI input": [[470, "gui-input"], [505, "gui-input"]], "GUI output": [[470, "gui-output"], [505, "gui-output"]], "ARMI v0.1 Release Notes": [[471, "armi-v0-1-release-notes"]], "ARMI v0.1.7": [[471, "armi-v0-1-7"]], "API changes": [[471, "api-changes"]], "Bug fixes": [[471, "bug-fixes"], [472, "bug-fixes"], [472, "id2"], [472, "id5"], [472, "id9"], [472, "id12"], [472, "id15"], [472, "id20"], [472, "id22"], [472, "id24"], [472, "id27"]], "ARMI v0.1.6": [[471, "armi-v0-1-6"]], "Deprecations": [[471, "deprecations"]], "Bugfixes": [[471, "bugfixes"], [471, "id1"], [471, "id2"], [471, "id4"]], "ARMI v0.1.5": [[471, "armi-v0-1-5"]], "User-facing enhancements": [[471, "user-facing-enhancements"], [471, "id3"], [471, "id6"]], "Backend changes": [[471, "backend-changes"], [471, "id5"], [471, "id7"]], "ARMI v0.1.4": [[471, "armi-v0-1-4"]], "ARMI v0.1.3": [[471, "armi-v0-1-3"]], "ARMI v0.1.2": [[471, "armi-v0-1-2"]], "Hotfixes": [[471, "hotfixes"]], "ARMI v0.1.1": [[471, "armi-v0-1-1"]], "ARMI v0.1.0": [[471, "armi-v0-1-0"]], "ARMI v0.2 Release Notes": [[472, "armi-v0-2-release-notes"]], "ARMI v0.2.9": [[472, "armi-v0-2-9"]], "What\u2019s new in ARMI": [[472, "what-s-new-in-armi"], [472, "id1"], [472, "id3"], [472, "id7"], [472, "id11"], [472, "id13"], [472, "id18"]], "ARMI v0.2.8": [[472, "armi-v0-2-8"]], "ARMI v0.2.7": [[472, "armi-v0-2-7"]], "ARMI v0.2.6": [[472, "armi-v0-2-6"]], "ARMI v0.2.5": [[472, "armi-v0-2-5"]], "ARMI v0.2.4": [[472, "armi-v0-2-4"]], "ARMI v0.2.3": [[472, "armi-v0-2-3"]], "ARMI v0.2.2": [[472, "armi-v0-2-2"]], "What\u2019s new in ARMI v0.2.2": [[472, "what-s-new-in-armi-v0-2-2"]], "ARMI v0.2.1": [[472, "armi-v0-2-1"]], "What\u2019s new in ARMI v0.2.1": [[472, "what-s-new-in-armi-v0-2-1"]], "ARMI v0.2.0": [[472, "armi-v0-2-0"]], "What\u2019s new in ARMI v0.2.0": [[472, "what-s-new-in-armi-v0-2-0"]], "Backwards incompatible changes": [[472, "backwards-incompatible-changes"]], "Release Notes": [[473, "release-notes"]], "Software Design and Implementation Document (SDID)": [[475, "software-design-and-implementation-document-sdid"]], "Overview": [[475, "overview"]], "Settings Overview": [[475, "settings-overview"]], "Keep the user\u2019s experience with settings simple": [[475, "keep-the-user-s-experience-with-settings-simple"]], "Reactor Overview": [[475, "reactor-overview"]], "Design": [[475, "design"]], "Blueprints Design": [[475, "blueprints-design"]], "Settings Design": [[475, "settings-design"]], "Dictionary-like behavior": [[475, "dictionary-like-behavior"]], "Improve safety around settings errors": [[475, "improve-safety-around-settings-errors"]], "Non-dynamic data typing": [[475, "non-dynamic-data-typing"]], "The customizability of settings": [[475, "the-customizability-of-settings"]], "Reactor Design": [[475, "reactor-design"]], "Spatial Arrangements": [[475, "spatial-arrangements"]], "Setting and getting state variables": [[475, "setting-and-getting-state-variables"]], "Averaging over children": [[475, "averaging-over-children"]], "Computing Homogenized Number Densities": [[475, "computing-homogenized-number-densities"]], "Calculation Of Volume Fractions": [[475, "calculation-of-volume-fractions"]], "Hot and input dimensions": [[475, "hot-and-input-dimensions"]], "Requirements Review": [[475, "requirements-review"]], "Software Requirement Specification Document (SRSD)": [[476, "software-requirement-specification-document-srsd"]], "Business Impact": [[476, "business-impact"]], "Applicable Documents": [[476, "applicable-documents"]], "Functional Requirements": [[476, "functional-requirements"]], "Performance Requirements": [[476, "performance-requirements"]], "Software Attributes": [[476, "software-attributes"]], "Software Design Constraints": [[476, "software-design-constraints"]], "Interface I/O Requirements": [[476, "interface-i-o-requirements"]], "Testing Requirements": [[476, "testing-requirements"]], "Open-Items and Assumptions": [[476, "open-items-and-assumptions"]], "Appendices": [[476, "appendices"]], "Software Test Report (STR)": [[477, "software-test-report-str"]], "Introduction": [[477, "introduction"]], "Overview, Assumptions, and Results": [[477, "overview-assumptions-and-results"]], "ARMI Version tested": [[477, "armi-version-tested"]], "Computer/platform hardware": [[477, "computer-platform-hardware"]], "Test equipment and calibration": [[477, "test-equipment-and-calibration"]], "Runtime Environment": [[477, "runtime-environment"]], "Date of the test": [[477, "date-of-the-test"]], "Tester": [[477, "tester"]], "Input and Output Data": [[477, "input-and-output-data"]], "Simulation model used": [[477, "simulation-model-used"]], "Tests, Requirements, and Implementation": [[477, "tests-requirements-and-implementation"]], "Results and applicablility": [[477, "results-and-applicablility"]], "Action taken in connection with any deviations noted": [[477, "action-taken-in-connection-with-any-deviations-noted"]], "Acceptabiltiy": [[477, "acceptabiltiy"]], "Verification and Validation Plan": [[477, "verification-and-validation-plan"]], "Verification Plan": [[477, "verification-plan"]], "Validation Plan": [[477, "validation-plan"]], "Test Automation": [[477, "test-automation"]], "Hands-on at the ARMI Terminal": [[478, "Hands-on-at-the-ARMI-Terminal"]], "Initializing and Exploring the ARMI Model": [[478, "Initializing-and-Exploring-the-ARMI-Model"]], "Quiz Question 1": [[478, null]], "Exploring the state of the reactor": [[478, "Exploring-the-state-of-the-reactor"]], "Modifying the state of the reactor": [[478, "Modifying-the-state-of-the-reactor"]], "Modifying number densities": [[478, "Modifying-number-densities"]], "Saving state to disk": [[478, "Saving-state-to-disk"]], "Fuel management": [[478, "Fuel-management"]], "Loading from the database": [[478, "Loading-from-the-database"]], "Tutorials": [[479, "tutorials"]], "Making your first ARMI-based App": [[480, "making-your-first-armi-based-app"]], "Starting a new app": [[480, "starting-a-new-app"]], "Registering the app with ARMI": [[480, "registering-the-app-with-armi"]], "Defining the app class": [[480, "defining-the-app-class"]], "Apps vs. plugins vs. interfaces": [[480, null]], "Defining the physics plugin": [[480, "defining-the-physics-plugin"]], "What are plugins again?": [[480, null]], "Defining custom settings": [[480, "defining-custom-settings"]], "Creating the physics kernels": [[480, "creating-the-physics-kernels"]], "Making the (dummy) flux kernel": [[480, "making-the-dummy-flux-kernel"]], "Making the thermal/hydraulics kernel": [[480, "making-the-thermal-hydraulics-kernel"]], "Adding entry points": [[480, "adding-entry-points"]], "Running the app and debugging": [[480, "running-the-app-and-debugging"]], "Windows tip": [[480, null]], "Submodule tip": [[480, null]], "Yet another way": [[480, null]], "Adding a new material": [[480, "adding-a-new-material"]], "Why __main__.py?": [[480, null]], "Checking the output": [[480, "checking-the-output"]], "Fancy XDMF format": [[480, null]], "Bonus: Ad-hoc UserPlugins": [[480, "bonus-ad-hoc-userplugins"]], "Define the UserPlugin in Python": [[480, "define-the-userplugin-in-python"]], "Define a list of UserPlugins in the Settings File": [[480, "define-a-list-of-userplugins-in-the-settings-file"]], "The ARMI Material Library": [[481, "The-ARMI-Material-Library"]], "The ARMI Nuclide and Element Packages": [[482, "The-ARMI-Nuclide-and-Element-Packages"]], "Accessing Individual Nuclide Data/Attributes": [[482, "Accessing-Individual-Nuclide-Data/Attributes"]], "How many total nuclides and elements are defined in the framework?": [[482, "How-many-total-nuclides-and-elements-are-defined-in-the-framework?"]], "Looking up nuclide and elemental data for U-235": [[482, "Looking-up-nuclide-and-elemental-data-for-U-235"]], "Looking up nuclide and elemental data for Li-7": [[482, "Looking-up-nuclide-and-elemental-data-for-Li-7"]], "Exploring elemental Lithium data": [[482, "Exploring-elemental-Lithium-data"]], "Plotting the Chart of the Nuclides": [[482, "Plotting-the-Chart-of-the-Nuclides"]], "Parameter sweeps": [[483, "Parameter-sweeps"]], "A simple one-dimensional parameter sweep": [[483, "A-simple-one-dimensional-parameter-sweep"]], "Modifying the reactor design": [[483, "Modifying-the-reactor-design"]], "A full factorial parameter sweep": [[483, "A-full-factorial-parameter-sweep"]], "Post-processing the results of the sweep": [[483, "Post-processing-the-results-of-the-sweep"]], "Building input files for a fast reactor": [[484, "building-input-files-for-a-fast-reactor"]], "Setting up the blueprints": [[484, "setting-up-the-blueprints"], [485, "setting-up-the-blueprints"]], "Defining non-fuel blocks": [[484, "defining-non-fuel-blocks"]], "Radial Shields": [[484, "radial-shields"]], "Reflectors": [[484, "reflectors"]], "Control": [[484, "control"]], "Plenum": [[484, "plenum"]], "Defining how the blocks are arranged into assemblies": [[484, "defining-how-the-blocks-are-arranged-into-assemblies"]], "Defining the fuel assemblies": [[484, "defining-the-fuel-assemblies"]], "Defining the non-fuel assemblies": [[484, "defining-the-non-fuel-assemblies"]], "Specifying the core map": [[484, "specifying-the-core-map"]], "Specifying settings": [[484, "specifying-settings"]], "Defining fuel management": [[484, "defining-fuel-management"], [485, "defining-fuel-management"]], "Building input files for a thermal reactor": [[485, "building-input-files-for-a-thermal-reactor"]], "Custom isotopic vectors": [[485, "custom-isotopic-vectors"]], "The UO2 block": [[485, "the-uo2-block"]], "The MOX block": [[485, "the-mox-block"]], "The moderator block": [[485, "the-moderator-block"]], "The 3-D Assembly definitions": [[485, "the-3-d-assembly-definitions"]], "The Systems definition": [[485, "the-systems-definition"]], "The Grids definitions": [[485, "the-grids-definitions"]], "Nuclide Flags": [[485, "nuclide-flags"], [493, "nuclide-flags"]], "The settings file": [[485, "the-settings-file"]], "Ok, so now what?": [[485, "ok-so-now-what"]], "Accessing Entry Points": [[487, "accessing-entry-points"]], "Reports Entry Point": [[487, "reports-entry-point"]], "Assembly Parameters": [[488, "assembly-parameters"]], "Assembly Parameters from Framework": [[488, "id1"]], "Block Parameters": [[489, "block-parameters"]], "Block Parameters from Framework": [[489, "id13"]], "Block Parameters from ThermalHydraulicsPlugin": [[489, "id14"]], "Block Parameters from FuelPerformancePlugin": [[489, "id15"]], "Block Parameters from NeutronicsPlugin": [[489, "id16"]], "Component Parameters": [[490, "component-parameters"]], "Component Parameters from Framework": [[490, "id1"]], "Core Parameters": [[491, "core-parameters"]], "Core Parameters from Framework": [[491, "id9"]], "Core Parameters from NeutronicsPlugin": [[491, "id10"]], "User Docs": [[492, "user-docs"]], "The Blueprints Input File": [[493, "the-blueprints-input-file"]], "Blueprint sections": [[493, "blueprint-sections"]], "Blocks and Components": [[493, "blocks-and-components"]], "Defining a Component": [[493, "defining-a-component"]], "Component Types": [[493, "component-types"]], "Component list": [[493, "id8"]], "Component Links": [[493, "component-links"]], "Pin lattices": [[493, "pin-lattices"]], "Flags and naming": [[493, "flags-and-naming"]], "Assemblies": [[493, "assemblies"]], "Systems": [[493, "systems"]], "Plugin Behavior": [[493, "plugin-behavior"]], "Grids": [[493, "grids"]], "Custom Isotopics": [[493, "custom-isotopics"]], "Advanced topics": [[493, "advanced-topics"]], "Overlapping shapes": [[493, "overlapping-shapes"]], "Component area modifications": [[493, "component-area-modifications"]], "Putting it all together to make a Block": [[493, "putting-it-all-together-to-make-a-block"]], "Making blocks with unshaped components": [[493, "making-blocks-with-unshaped-components"]], "Fuel Management Input": [[494, "fuel-management-input"]], "Fuel Management Operations": [[494, "fuel-management-operations"]], "swapAssemblies": [[494, "swapassemblies"]], "dischargeSwap": [[494, "dischargeswap"]], "swapCascade": [[494, "swapcascade"]], "Choosing Assemblies to Move": [[494, "choosing-assemblies-to-move"]], "Fuel Management Examples": [[494, "fuel-management-examples"]], "Convergent-Divergent": [[494, "convergent-divergent"]], "Fuel Management Tips": [[494, "fuel-management-tips"]], "Running a branch search": [[494, "running-a-branch-search"]], "Inputs": [[495, "inputs"]], "The Settings Input File": [[496, "the-settings-input-file"]], "The ARMI GUI": [[496, "the-armi-gui"]], "The assembly clicker": [[496, "the-assembly-clicker"]], "The ARMI Environment Tab": [[496, "the-armi-environment-tab"]], "Some special settings": [[496, "some-special-settings"]], "Detail assemblies": [[496, "detail-assemblies"]], "Kinetics settings": [[496, "kinetics-settings"]], "Cycle history": [[496, "cycle-history"]], "Restart cases": [[496, "restart-cases"]], "Settings Report": [[497, "settings-report"]], "ARMI Settings": [[497, "id1"]], "Accessing Data in ARMI": [[498, "accessing-data-in-armi"]], "Settings and State Variables": [[498, "settings-and-state-variables"]], "Accessing Some Interesting Info": [[498, "accessing-some-interesting-info"]], "The Database File": [[499, "the-database-file"]], "Loading Reactor State": [[499, "loading-reactor-state"]], "Extracting Reactor History": [[499, "extracting-reactor-history"]], "Extracting Settings and Blueprints": [[499, "extracting-settings-and-blueprints"]], "File format": [[499, "file-format"]], "Database Structure": [[499, "database-structure"]], "Database structure": [[499, "id1"]], "Outputs": [[500, "outputs"]], "The Standard Output": [[501, "the-standard-output"]], "Physics Coupling": [[502, "physics-coupling"]], "Loose Coupling": [[502, "loose-coupling"]], "Tight Coupling": [[502, "tight-coupling"]], "Eigenvalue": [[502, "eigenvalue"]], "Block-wise Power": [[502, "block-wise-power"]], "Radial and Axial Expansion and Contraction": [[503, "radial-and-axial-expansion-and-contraction"]], "Thermal Expansion": [[503, "thermal-expansion"]], "Radial Expansion": [[503, "radial-expansion"]], "Axial Expansion": [[503, "axial-expansion"]], "Reactor Parameters": [[504, "reactor-parameters"]], "Reactor Parameters from Framework": [[504, "id1"]]}, "indexentries": {"applyasynciowindowsworkaround() (in module armi)": [[0, "armi.applyAsyncioWindowsWorkaround"]], "armi": [[0, "module-armi"], [468, "term-ARMI"]], "configure() (in module armi)": [[0, "armi.configure"]], "disablefutureconfigures() (in module armi)": [[0, "armi.disableFutureConfigures"]], "getapp() (in module armi)": [[0, "armi.getApp"]], "getdefaultpluginmanager() (in module armi)": [[0, "armi.getDefaultPluginManager"]], "getdefaultplugins() (in module armi)": [[0, "armi.getDefaultPlugins"]], "getpluginmanager() (in module armi)": [[0, "armi.getPluginManager"]], "getpluginmanagerorfail() (in module armi)": [[0, "armi.getPluginManagerOrFail"]], "init() (in module armi)": [[0, "armi.init"]], "isconfigured() (in module armi)": [[0, "armi.isConfigured"]], "isstablereleaseversion() (in module armi)": [[0, "armi.isStableReleaseVersion"]], "module": [[0, "module-armi"], [1, "module-armi.apps"], [2, "module-armi.bookkeeping"], [3, "module-armi.bookkeeping.db"], [4, "module-armi.bookkeeping.db.compareDB3"], [5, "module-armi.bookkeeping.db.database3"], [6, "module-armi.bookkeeping.db.databaseInterface"], [7, "module-armi.bookkeeping.db.factory"], [8, "module-armi.bookkeeping.db.layout"], [9, "module-armi.bookkeeping.db.permissions"], [10, "module-armi.bookkeeping.db.tests"], [11, "module-armi.bookkeeping.db.tests.test_comparedb3"], [12, "module-armi.bookkeeping.db.tests.test_database3"], [13, "module-armi.bookkeeping.db.tests.test_databaseInterface"], [14, "module-armi.bookkeeping.db.tests.test_layout"], [15, "module-armi.bookkeeping.db.typedefs"], [16, "module-armi.bookkeeping.historyTracker"], [17, "module-armi.bookkeeping.mainInterface"], [18, "module-armi.bookkeeping.memoryProfiler"], [19, "module-armi.bookkeeping.report"], [20, "module-armi.bookkeeping.report.data"], [21, "module-armi.bookkeeping.report.html"], [22, "module-armi.bookkeeping.report.newReportUtils"], [23, "module-armi.bookkeeping.report.newReports"], [24, "module-armi.bookkeeping.report.reportInterface"], [25, "module-armi.bookkeeping.report.reportingUtils"], [26, "module-armi.bookkeeping.report.tests"], [27, "module-armi.bookkeeping.report.tests.test_newReport"], [28, "module-armi.bookkeeping.report.tests.test_report"], [29, "module-armi.bookkeeping.snapshotInterface"], [30, "module-armi.bookkeeping.tests"], [31, "module-armi.bookkeeping.tests.test_historyTracker"], [32, "module-armi.bookkeeping.tests.test_memoryProfiler"], [33, "module-armi.bookkeeping.tests.test_snapshot"], [34, "module-armi.bookkeeping.visualization"], [35, "module-armi.bookkeeping.visualization.dumper"], [36, "module-armi.bookkeeping.visualization.entryPoint"], [37, "module-armi.bookkeeping.visualization.tests"], [38, "module-armi.bookkeeping.visualization.tests.test_vis"], [39, "module-armi.bookkeeping.visualization.tests.test_xdmf"], [40, "module-armi.bookkeeping.visualization.utils"], [41, "module-armi.bookkeeping.visualization.vtk"], [42, "module-armi.bookkeeping.visualization.xdmf"], [43, "module-armi.cases"], [44, "module-armi.cases.case"], [45, "module-armi.cases.inputModifiers"], [46, "module-armi.cases.inputModifiers.inputModifiers"], [47, "module-armi.cases.inputModifiers.neutronicsModifiers"], [48, "module-armi.cases.inputModifiers.pinTypeInputModifiers"], [49, "module-armi.cases.inputModifiers.tests"], [50, "module-armi.cases.inputModifiers.tests.test_inputModifiers"], [51, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"], [52, "module-armi.cases.suite"], [53, "module-armi.cases.suiteBuilder"], [54, "module-armi.cases.tests"], [55, "module-armi.cases.tests.test_cases"], [56, "module-armi.cases.tests.test_suiteBuilder"], [57, "module-armi.cli"], [58, "module-armi.cli.checkInputs"], [59, "module-armi.cli.cleanTemps"], [60, "module-armi.cli.clone"], [61, "module-armi.cli.compareCases"], [62, "module-armi.cli.database"], [63, "module-armi.cli.entryPoint"], [64, "module-armi.cli.gridGui"], [65, "module-armi.cli.migrateInputs"], [66, "module-armi.cli.modify"], [67, "module-armi.cli.reportsEntryPoint"], [68, "module-armi.cli.run"], [69, "module-armi.cli.runSuite"], [70, "module-armi.cli.tests"], [71, "module-armi.cli.tests.test_runEntryPoint"], [72, "module-armi.cli.tests.test_runSuite"], [73, "module-armi.conftest"], [74, "module-armi.context"], [75, "module-armi.interfaces"], [76, "module-armi.materials"], [77, "module-armi.materials.air"], [78, "module-armi.materials.alloy200"], [79, "module-armi.materials.b4c"], [80, "module-armi.materials.be9"], [81, "module-armi.materials.caH2"], [82, "module-armi.materials.californium"], [83, "module-armi.materials.concrete"], [84, "module-armi.materials.copper"], [85, "module-armi.materials.cs"], [86, "module-armi.materials.custom"], [87, "module-armi.materials.graphite"], [88, "module-armi.materials.hafnium"], [89, "module-armi.materials.hastelloyN"], [90, "module-armi.materials.ht9"], [91, "module-armi.materials.inconel"], [92, "module-armi.materials.inconel600"], [93, "module-armi.materials.inconel625"], [94, "module-armi.materials.inconel800"], [95, "module-armi.materials.inconelPE16"], [96, "module-armi.materials.inconelX750"], [97, "module-armi.materials.lead"], [98, "module-armi.materials.leadBismuth"], [99, "module-armi.materials.lithium"], [100, "module-armi.materials.magnesium"], [101, "module-armi.materials.material"], [102, "module-armi.materials.mgO"], [103, "module-armi.materials.mixture"], [104, "module-armi.materials.molybdenum"], [105, "module-armi.materials.mox"], [106, "module-armi.materials.nZ"], [107, "module-armi.materials.potassium"], [108, "module-armi.materials.scandiumOxide"], [109, "module-armi.materials.siC"], [110, "module-armi.materials.sodium"], [111, "module-armi.materials.sodiumChloride"], [112, "module-armi.materials.sulfur"], [113, "module-armi.materials.tZM"], [114, "module-armi.materials.tantalum"], [115, "module-armi.materials.tests"], [116, "module-armi.materials.tests.test__init__"], [117, "module-armi.materials.tests.test_air"], [118, "module-armi.materials.tests.test_b4c"], [119, "module-armi.materials.tests.test_be9"], [120, "module-armi.materials.tests.test_graphite"], [121, "module-armi.materials.tests.test_lithium"], [122, "module-armi.materials.tests.test_materials"], [123, "module-armi.materials.tests.test_sic"], [124, "module-armi.materials.tests.test_sulfur"], [125, "module-armi.materials.tests.test_thoriumOxide"], [126, "module-armi.materials.tests.test_uZr"], [127, "module-armi.materials.tests.test_water"], [128, "module-armi.materials.thU"], [129, "module-armi.materials.thorium"], [130, "module-armi.materials.thoriumOxide"], [131, "module-armi.materials.uThZr"], [132, "module-armi.materials.uZr"], [133, "module-armi.materials.uranium"], [134, "module-armi.materials.uraniumOxide"], [135, "module-armi.materials.void"], [136, "module-armi.materials.water"], [137, "module-armi.materials.yttriumOxide"], [138, "module-armi.materials.zincOxide"], [139, "module-armi.materials.zr"], [140, "module-armi.meta"], [141, "module-armi.mpiActions"], [142, "module-armi.nucDirectory"], [143, "module-armi.nucDirectory.elements"], [144, "module-armi.nucDirectory.nucDir"], [145, "module-armi.nucDirectory.nuclideBases"], [146, "module-armi.nucDirectory.tests"], [147, "module-armi.nucDirectory.tests.test_elements"], [148, "module-armi.nucDirectory.tests.test_nucDirectory"], [149, "module-armi.nucDirectory.tests.test_nuclideBases"], [150, "module-armi.nucDirectory.tests.test_thermalScattering"], [151, "module-armi.nucDirectory.tests.test_transmutations"], [152, "module-armi.nucDirectory.thermalScattering"], [153, "module-armi.nucDirectory.transmutations"], [154, "module-armi.nuclearDataIO"], [155, "module-armi.nuclearDataIO.cccc"], [156, "module-armi.nuclearDataIO.cccc.cccc"], [157, "module-armi.nuclearDataIO.cccc.compxs"], [158, "module-armi.nuclearDataIO.cccc.dif3d"], [159, "module-armi.nuclearDataIO.cccc.dlayxs"], [160, "module-armi.nuclearDataIO.cccc.fixsrc"], [161, "module-armi.nuclearDataIO.cccc.gamiso"], [162, "module-armi.nuclearDataIO.cccc.geodst"], [163, "module-armi.nuclearDataIO.cccc.isotxs"], [164, "module-armi.nuclearDataIO.cccc.labels"], [165, "module-armi.nuclearDataIO.cccc.nhflux"], [166, "module-armi.nuclearDataIO.cccc.pmatrx"], [167, "module-armi.nuclearDataIO.cccc.pwdint"], [168, "module-armi.nuclearDataIO.cccc.rtflux"], [169, "module-armi.nuclearDataIO.cccc.rzflux"], [170, "module-armi.nuclearDataIO.cccc.tests"], [171, "module-armi.nuclearDataIO.cccc.tests.test_cccc"], [172, "module-armi.nuclearDataIO.cccc.tests.test_compxs"], [173, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"], [174, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"], [175, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"], [176, "module-armi.nuclearDataIO.cccc.tests.test_geodst"], [177, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"], [178, "module-armi.nuclearDataIO.cccc.tests.test_labels"], [179, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"], [180, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"], [181, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"], [182, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"], [183, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"], [184, "module-armi.nuclearDataIO.nuclearFileMetadata"], [185, "module-armi.nuclearDataIO.tests"], [186, "module-armi.nuclearDataIO.tests.test_xsCollections"], [187, "module-armi.nuclearDataIO.tests.test_xsLibraries"], [188, "module-armi.nuclearDataIO.tests.test_xsNuclides"], [189, "module-armi.nuclearDataIO.xsCollections"], [190, "module-armi.nuclearDataIO.xsLibraries"], [191, "module-armi.nuclearDataIO.xsNuclides"], [192, "module-armi.operators"], [193, "module-armi.operators.operator"], [194, "module-armi.operators.operatorMPI"], [195, "module-armi.operators.runTypes"], [196, "module-armi.operators.settingsValidation"], [197, "module-armi.operators.snapshots"], [198, "module-armi.operators.tests"], [199, "module-armi.operators.tests.test_inspectors"], [200, "module-armi.operators.tests.test_operatorSnapshots"], [201, "module-armi.operators.tests.test_operators"], [202, "module-armi.physics"], [203, "module-armi.physics.constants"], [204, "module-armi.physics.executers"], [205, "module-armi.physics.fuelCycle"], [206, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"], [207, "module-armi.physics.fuelCycle.fuelHandlerFactory"], [208, "module-armi.physics.fuelCycle.fuelHandlerInterface"], [209, "module-armi.physics.fuelCycle.fuelHandlers"], [210, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"], [211, "module-armi.physics.fuelCycle.settings"], [212, "module-armi.physics.fuelCycle.tests"], [213, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"], [214, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"], [215, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"], [216, "module-armi.physics.fuelPerformance"], [217, "module-armi.physics.fuelPerformance.executers"], [218, "module-armi.physics.fuelPerformance.parameters"], [219, "module-armi.physics.fuelPerformance.plugin"], [220, "module-armi.physics.fuelPerformance.settings"], [221, "module-armi.physics.fuelPerformance.tests"], [222, "module-armi.physics.fuelPerformance.tests.test_executers"], [223, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"], [224, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"], [225, "module-armi.physics.fuelPerformance.utils"], [226, "module-armi.physics.neutronics"], [227, "module-armi.physics.neutronics.const"], [228, "module-armi.physics.neutronics.crossSectionGroupManager"], [229, "module-armi.physics.neutronics.crossSectionSettings"], [230, "module-armi.physics.neutronics.diffIsotxs"], [231, "module-armi.physics.neutronics.energyGroups"], [232, "module-armi.physics.neutronics.fissionProductModel"], [233, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"], [234, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"], [235, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"], [236, "module-armi.physics.neutronics.fissionProductModel.tests"], [237, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"], [238, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"], [239, "module-armi.physics.neutronics.globalFlux"], [240, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"], [241, "module-armi.physics.neutronics.globalFlux.tests"], [242, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"], [243, "module-armi.physics.neutronics.isotopicDepletion"], [244, "module-armi.physics.neutronics.isotopicDepletion.crossSectionTable"], [245, "module-armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface"], [246, "module-armi.physics.neutronics.latticePhysics"], [247, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"], [248, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"], [249, "module-armi.physics.neutronics.latticePhysics.tests"], [250, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"], [251, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"], [252, "module-armi.physics.neutronics.macroXSGenerationInterface"], [253, "module-armi.physics.neutronics.parameters"], [254, "module-armi.physics.neutronics.reports"], [255, "module-armi.physics.neutronics.settings"], [256, "module-armi.physics.neutronics.tests"], [257, "module-armi.physics.neutronics.tests.test_crossSectionManager"], [258, "module-armi.physics.neutronics.tests.test_crossSectionSettings"], [259, "module-armi.physics.neutronics.tests.test_crossSectionTable"], [260, "module-armi.physics.neutronics.tests.test_energyGroups"], [261, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"], [262, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"], [263, "module-armi.physics.safety"], [264, "module-armi.physics.safety.settings"], [265, "module-armi.physics.tests"], [266, "module-armi.physics.tests.test_executers"], [267, "module-armi.physics.thermalHydraulics"], [268, "module-armi.physics.thermalHydraulics.const"], [269, "module-armi.physics.thermalHydraulics.parameters"], [270, "module-armi.physics.thermalHydraulics.plugin"], [271, "module-armi.physics.thermalHydraulics.settings"], [272, "module-armi.pluginManager"], [273, "module-armi.plugins"], [274, "module-armi.reactor"], [275, "module-armi.reactor.assemblies"], [276, "module-armi.reactor.assemblyLists"], [277, "module-armi.reactor.assemblyParameters"], [278, "module-armi.reactor.blockParameters"], [279, "module-armi.reactor.blocks"], [280, "module-armi.reactor.blueprints"], [281, "module-armi.reactor.blueprints.assemblyBlueprint"], [282, "module-armi.reactor.blueprints.blockBlueprint"], [283, "module-armi.reactor.blueprints.componentBlueprint"], [284, "module-armi.reactor.blueprints.gridBlueprint"], [285, "module-armi.reactor.blueprints.isotopicOptions"], [286, "module-armi.reactor.blueprints.reactorBlueprint"], [287, "module-armi.reactor.blueprints.tests"], [288, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"], [289, "module-armi.reactor.blueprints.tests.test_blockBlueprints"], [290, "module-armi.reactor.blueprints.tests.test_blueprints"], [291, "module-armi.reactor.blueprints.tests.test_componentBlueprint"], [292, "module-armi.reactor.blueprints.tests.test_customIsotopics"], [293, "module-armi.reactor.blueprints.tests.test_gridBlueprints"], [294, "module-armi.reactor.blueprints.tests.test_materialModifications"], [295, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"], [296, "module-armi.reactor.components"], [297, "module-armi.reactor.components.basicShapes"], [298, "module-armi.reactor.components.complexShapes"], [299, "module-armi.reactor.components.component"], [300, "module-armi.reactor.components.componentParameters"], [301, "module-armi.reactor.components.volumetricShapes"], [302, "module-armi.reactor.composites"], [303, "module-armi.reactor.converters"], [304, "module-armi.reactor.converters.axialExpansionChanger"], [305, "module-armi.reactor.converters.blockConverters"], [306, "module-armi.reactor.converters.geometryConverters"], [307, "module-armi.reactor.converters.meshConverters"], [308, "module-armi.reactor.converters.parameterSweeps"], [309, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"], [310, "module-armi.reactor.converters.pinTypeBlockConverters"], [311, "module-armi.reactor.converters.tests"], [312, "module-armi.reactor.converters.tests.test_axialExpansionChanger"], [313, "module-armi.reactor.converters.tests.test_blockConverter"], [314, "module-armi.reactor.converters.tests.test_geometryConverters"], [315, "module-armi.reactor.converters.tests.test_meshConverters"], [316, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"], [317, "module-armi.reactor.converters.tests.test_uniformMesh"], [318, "module-armi.reactor.converters.uniformMesh"], [319, "module-armi.reactor.flags"], [320, "module-armi.reactor.geometry"], [321, "module-armi.reactor.grids"], [322, "module-armi.reactor.grids.axial"], [323, "module-armi.reactor.grids.cartesian"], [324, "module-armi.reactor.grids.constants"], [325, "module-armi.reactor.grids.grid"], [326, "module-armi.reactor.grids.hexagonal"], [327, "module-armi.reactor.grids.locations"], [328, "module-armi.reactor.grids.structuredgrid"], [329, "module-armi.reactor.grids.thetarz"], [330, "module-armi.reactor.parameters"], [331, "module-armi.reactor.parameters.exceptions"], [332, "module-armi.reactor.parameters.parameterCollections"], [333, "module-armi.reactor.parameters.parameterDefinitions"], [334, "module-armi.reactor.parameters.resolveCollections"], [335, "module-armi.reactor.reactorParameters"], [336, "module-armi.reactor.reactors"], [337, "module-armi.reactor.systemLayoutInput"], [338, "module-armi.reactor.tests"], [339, "module-armi.reactor.tests.test_assemblies"], [340, "module-armi.reactor.tests.test_blocks"], [341, "module-armi.reactor.tests.test_components"], [342, "module-armi.reactor.tests.test_composites"], [343, "module-armi.reactor.tests.test_flags"], [344, "module-armi.reactor.tests.test_geometry"], [345, "module-armi.reactor.tests.test_parameters"], [346, "module-armi.reactor.tests.test_reactors"], [347, "module-armi.reactor.tests.test_rz_reactors"], [348, "module-armi.reactor.tests.test_zones"], [349, "module-armi.reactor.zones"], [350, "module-armi.runLog"], [351, "module-armi.scripts"], [352, "module-armi.scripts.migration"], [353, "module-armi.scripts.migration.base"], [354, "module-armi.scripts.migration.crossSectionBlueprintsToSettings"], [355, "module-armi.scripts.migration.m0_1_0_newDbFormat"], [356, "module-armi.scripts.migration.m0_1_3"], [357, "module-armi.scripts.migration.m0_1_6_locationLabels"], [358, "module-armi.scripts.migration.tests"], [359, "module-armi.scripts.migration.tests.test_m0_1_6_locationLabels"], [360, "module-armi.settings"], [361, "module-armi.settings.caseSettings"], [362, "module-armi.settings.fwSettings"], [363, "module-armi.settings.fwSettings.databaseSettings"], [364, "module-armi.settings.fwSettings.globalSettings"], [365, "module-armi.settings.fwSettings.reportSettings"], [366, "module-armi.settings.fwSettings.tightCouplingSettings"], [367, "module-armi.settings.setting"], [368, "module-armi.settings.settingsIO"], [369, "module-armi.settings.tests"], [370, "module-armi.settings.tests.test_settings"], [371, "module-armi.settings.tests.test_settingsIO"], [372, "module-armi.tests"], [373, "module-armi.tests.mockRunLogs"], [374, "module-armi.tests.refSmallReactorShuffleLogic"], [375, "module-armi.tests.test_apps"], [376, "module-armi.tests.test_armiTestHelper"], [377, "module-armi.tests.test_cartesian"], [378, "module-armi.tests.test_interfaces"], [379, "module-armi.tests.test_lwrInputs"], [380, "module-armi.tests.test_mpiActions"], [381, "module-armi.tests.test_mpiFeatures"], [382, "module-armi.tests.test_notebooks"], [383, "module-armi.tests.test_plugins"], [384, "module-armi.tests.test_runLog"], [385, "module-armi.tests.test_tests"], [386, "module-armi.tests.test_user_plugins"], [387, "module-armi.utils"], [388, "module-armi.utils.asciimaps"], [389, "module-armi.utils.codeTiming"], [390, "module-armi.utils.customExceptions"], [391, "module-armi.utils.densityTools"], [392, "module-armi.utils.directoryChangers"], [393, "module-armi.utils.directoryChangersMpi"], [394, "module-armi.utils.dochelpers"], [395, "module-armi.utils.dynamicImporter"], [396, "module-armi.utils.flags"], [398, "module-armi.utils.hexagon"], [399, "module-armi.utils.iterables"], [400, "module-armi.utils.mathematics"], [401, "module-armi.utils.outputCache"], [402, "module-armi.utils.parsing"], [403, "module-armi.utils.pathTools"], [404, "module-armi.utils.plotting"], [405, "module-armi.utils.properties"], [406, "module-armi.utils.reportPlotting"], [407, "module-armi.utils.tests"], [408, "module-armi.utils.tests.test_asciimaps"], [409, "module-armi.utils.tests.test_codeTiming"], [410, "module-armi.utils.tests.test_custom_exceptions"], [411, "module-armi.utils.tests.test_densityTools"], [412, "module-armi.utils.tests.test_directoryChangers"], [413, "module-armi.utils.tests.test_dochelpers"], [414, "module-armi.utils.tests.test_flags"], [415, "module-armi.utils.tests.test_iterables"], [416, "module-armi.utils.tests.test_mathematics"], [417, "module-armi.utils.tests.test_outputCache"], [418, "module-armi.utils.tests.test_parsing"], [419, "module-armi.utils.tests.test_pathTools"], [420, "module-armi.utils.tests.test_plotting"], [421, "module-armi.utils.tests.test_properties"], [422, "module-armi.utils.tests.test_reportPlotting"], [423, "module-armi.utils.tests.test_textProcessors"], [424, "module-armi.utils.tests.test_triangle"], [425, "module-armi.utils.tests.test_units"], [426, "module-armi.utils.tests.test_utils"], [427, "module-armi.utils.textProcessors"], [428, "module-armi.utils.triangle"], [429, "module-armi.utils.units"]], "app (class in armi.apps)": [[1, "armi.apps.App"]], "armi.apps": [[1, "module-armi.apps"]], "getparamrenames() (armi.apps.app method)": [[1, "armi.apps.App.getParamRenames"]], "getsettings() (armi.apps.app method)": [[1, "armi.apps.App.getSettings"]], "name (armi.apps.app attribute)": [[1, "armi.apps.App.name"]], "pluginmanager (armi.apps.app property)": [[1, "armi.apps.App.pluginManager"]], "registerpluginflags() (armi.apps.app method)": [[1, "armi.apps.App.registerPluginFlags"]], "registeruserplugins() (armi.apps.app method)": [[1, "armi.apps.App.registerUserPlugins"]], "splashtext (armi.apps.app property)": [[1, "armi.apps.App.splashText"]], "version (armi.apps.app property)": [[1, "armi.apps.App.version"]], "bookkeepingplugin (class in armi.bookkeeping)": [[2, "armi.bookkeeping.BookkeepingPlugin"]], "armi.bookkeeping": [[2, "module-armi.bookkeeping"]], "definecasedependencies() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.defineEntryPoints"]], "exposeinterfaces() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.exposeInterfaces"]], "getreportcontents() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.bookkeeping.bookkeepingplugin static method)": [[2, "armi.bookkeeping.BookkeepingPlugin.mpiActionRequiresReset"]], "create_file_fie (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.CREATE_FILE_FIE"]], "create_file_fie2 (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.CREATE_FILE_FIE2"]], "create_file_tie (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.CREATE_FILE_TIE"]], "default (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.DEFAULT"]], "database3 (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.Database3"]], "databaseinterface (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.DatabaseInterface"]], "permissions (class in armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.Permissions"]], "read_only_fme (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.READ_ONLY_FME"]], "read_write_create (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.READ_WRITE_CREATE"]], "read_write_fme (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.READ_WRITE_FME"]], "all (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.all"]], "armi.bookkeeping.db": [[3, "module-armi.bookkeeping.db"]], "close() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.close"]], "comparedatabases() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.compareDatabases"]], "convertdatabase() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.convertDatabase"]], "create (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.create"]], "database (armi.bookkeeping.db.databaseinterface property)": [[3, "armi.bookkeeping.db.DatabaseInterface.database"]], "databasefactory() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.databaseFactory"]], "distributable() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.distributable"]], "filename (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database3 static method)": [[3, "armi.bookkeeping.db.Database3.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getH5Group"]], "gethistories() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistories"]], "gethistories() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistory"]], "gethistory() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database3 static method)": [[3, "armi.bookkeeping.db.Database3.grabLocalCommitHash"]], "hastimestep() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.hasTimeStep"]], "initdb() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.interactEveryNode"]], "keys() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.keys"]], "load() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.load"]], "loadblueprints() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.loadGeometry"]], "loadoperator() (in module armi.bookkeeping.db)": [[3, "armi.bookkeeping.db.loadOperator"]], "loadstate() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.loadState"]], "mergehistory() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.mergeHistory"]], "name (armi.bookkeeping.db.databaseinterface attribute)": [[3, "armi.bookkeeping.db.DatabaseInterface.name"]], "open() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.open"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.prepRestartRun"]], "read (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.read"]], "readinputsfromdb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database3 attribute)": [[3, "armi.bookkeeping.db.Database3.timeNodeGroupPattern"]], "version (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.version"]], "versionmajor (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.versionMajor"]], "versionminor (armi.bookkeeping.db.database3 property)": [[3, "armi.bookkeeping.db.Database3.versionMinor"]], "write (armi.bookkeeping.db.permissions attribute)": [[3, "armi.bookkeeping.db.Permissions.write"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface method)": [[3, "armi.bookkeeping.db.DatabaseInterface.writeDBEveryNode"]], "writeinputstodb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.writeInputsToDB"]], "writetodb() (armi.bookkeeping.db.database3 method)": [[3, "armi.bookkeeping.db.Database3.writeToDB"]], "diffresults (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults"]], "outputwriter (class in armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter"]], "adddiff() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addDiff"]], "addstructurediffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addStructureDiffs"]], "addtimestep() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.addTimeStep"]], "armi.bookkeeping.db.comparedb3": [[4, "module-armi.bookkeeping.db.compareDB3"]], "comparedatabases() (in module armi.bookkeeping.db.comparedb3)": [[4, "armi.bookkeeping.db.compareDB3.compareDatabases"]], "ndiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.nDiffs"]], "reportdiffs() (armi.bookkeeping.db.comparedb3.diffresults method)": [[4, "armi.bookkeeping.db.compareDB3.DiffResults.reportDiffs"]], "writeln() (armi.bookkeeping.db.comparedb3.outputwriter method)": [[4, "armi.bookkeeping.db.compareDB3.OutputWriter.writeln"]], "database3 (class in armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.Database3"]], "armi.bookkeeping.db.database3": [[5, "module-armi.bookkeeping.db.database3"]], "close() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.close"]], "collectblocknumberdensities() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.collectBlockNumberDensities"]], "filename (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.fileName"]], "genauxiliarydata() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genAuxiliaryData"]], "gentimestepgroups() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genTimeStepGroups"]], "gentimesteps() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.genTimeSteps"]], "getauxiliarydatapath() (armi.bookkeeping.db.database3.database3 static method)": [[5, "armi.bookkeeping.db.database3.Database3.getAuxiliaryDataPath"]], "geth5group() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getH5Group"]], "geth5groupname() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.getH5GroupName"]], "gethistories() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistories"]], "gethistoriesbylocation() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistoriesByLocation"]], "gethistory() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistory"]], "gethistorybylocation() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getHistoryByLocation"]], "getlayout() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.getLayout"]], "grablocalcommithash() (armi.bookkeeping.db.database3.database3 static method)": [[5, "armi.bookkeeping.db.database3.Database3.grabLocalCommitHash"]], "h5db (armi.bookkeeping.db.database3.database3 attribute)": [[5, "armi.bookkeeping.db.database3.Database3.h5db"]], "hastimestep() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.hasTimeStep"]], "keys() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.keys"]], "load() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.load"]], "loadblueprints() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadBlueprints"]], "loadcs() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadCS"]], "loadgeometry() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.loadGeometry"]], "mergehistory() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.mergeHistory"]], "open() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.open"]], "packspecialdata() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.packSpecialData"]], "readinputsfromdb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.readInputsFromDB"]], "splitdatabase() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.splitDatabase"]], "synctosharedfolder() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.syncToSharedFolder"]], "timenodegrouppattern (armi.bookkeeping.db.database3.database3 attribute)": [[5, "armi.bookkeeping.db.database3.Database3.timeNodeGroupPattern"]], "unpackspecialdata() (in module armi.bookkeeping.db.database3)": [[5, "armi.bookkeeping.db.database3.unpackSpecialData"]], "version (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.version"]], "versionmajor (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.versionMajor"]], "versionminor (armi.bookkeeping.db.database3.database3 property)": [[5, "armi.bookkeeping.db.database3.Database3.versionMinor"]], "writeinputstodb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.writeInputsToDB"]], "writetodb() (armi.bookkeeping.db.database3.database3 method)": [[5, "armi.bookkeeping.db.database3.Database3.writeToDB"]], "databaseinterface (class in armi.bookkeeping.db.databaseinterface)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface"]], "armi.bookkeeping.db.databaseinterface": [[6, "module-armi.bookkeeping.db.databaseInterface"]], "database (armi.bookkeeping.db.databaseinterface.databaseinterface property)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.database"]], "describeinterfaces() (in module armi.bookkeeping.db.databaseinterface)": [[6, "armi.bookkeeping.db.databaseInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.distributable"]], "gethistories() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistories"]], "gethistory() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.getHistory"]], "initdb() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.initDB"]], "interactbol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactBOL"]], "interactdistributestate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactDistributeState"]], "interacteoc() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOC"]], "interacteol() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEOL"]], "interacterror() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactError"]], "interacteverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.interactEveryNode"]], "loadstate() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.loadState"]], "name (armi.bookkeeping.db.databaseinterface.databaseinterface attribute)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.name"]], "preprestartrun() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.prepRestartRun"]], "writedbeverynode() (armi.bookkeeping.db.databaseinterface.databaseinterface method)": [[6, "armi.bookkeeping.db.databaseInterface.DatabaseInterface.writeDBEveryNode"]], "armi.bookkeeping.db.factory": [[7, "module-armi.bookkeeping.db.factory"]], "databasefactory() (in module armi.bookkeeping.db.factory)": [[7, "armi.bookkeeping.db.factory.databaseFactory"]], "layout (class in armi.bookkeeping.db.layout)": [[8, "armi.bookkeeping.db.layout.Layout"]], "allsubclasses() (armi.bookkeeping.db.layout.layout static method)": [[8, "armi.bookkeeping.db.layout.Layout.allSubclasses"]], "armi.bookkeeping.db.layout": [[8, "module-armi.bookkeeping.db.layout"]], "computeancestors() (armi.bookkeeping.db.layout.layout static method)": [[8, "armi.bookkeeping.db.layout.Layout.computeAncestors"]], "replacenoneswithnonsense() (in module armi.bookkeeping.db.layout)": [[8, "armi.bookkeeping.db.layout.replaceNonesWithNonsense"]], "replacenonsensewithnones() (in module armi.bookkeeping.db.layout)": [[8, "armi.bookkeeping.db.layout.replaceNonsenseWithNones"]], "writetodb() (armi.bookkeeping.db.layout.layout method)": [[8, "armi.bookkeeping.db.layout.Layout.writeToDB"]], "create_file_fie (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE"]], "create_file_fie2 (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_FIE2"]], "create_file_tie (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.CREATE_FILE_TIE"]], "default (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.DEFAULT"]], "permissions (class in armi.bookkeeping.db.permissions)": [[9, "armi.bookkeeping.db.permissions.Permissions"]], "read_only_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.READ_ONLY_FME"]], "read_write_create (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_CREATE"]], "read_write_fme (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.READ_WRITE_FME"]], "all (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.all"]], "armi.bookkeeping.db.permissions": [[9, "module-armi.bookkeeping.db.permissions"]], "create (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.create"]], "read (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.read"]], "write (armi.bookkeeping.db.permissions.permissions attribute)": [[9, "armi.bookkeeping.db.permissions.Permissions.write"]], "armi.bookkeeping.db.tests": [[10, "module-armi.bookkeeping.db.tests"]], "testcomparedb3 (class in armi.bookkeeping.db.tests.test_comparedb3)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3"]], "armi.bookkeeping.db.tests.test_comparedb3": [[11, "module-armi.bookkeeping.db.tests.test_comparedb3"]], "test_compareauxdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareAuxData"]], "test_comparedatabaseduplicate() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseDuplicate"]], "test_comparedatabasesim() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareDatabaseSim"]], "test_comparesets() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_compareSets"]], "test_diffresultsbasic() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffResultsBasic"]], "test_diffsimpledata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSimpleData"]], "test_diffspecialdata() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_diffSpecialData"]], "test_outputwriter() (armi.bookkeeping.db.tests.test_comparedb3.testcomparedb3 method)": [[11, "armi.bookkeeping.db.tests.test_comparedb3.TestCompareDB3.test_outputWriter"]], "testdatabase3 (class in armi.bookkeeping.db.tests.test_database3)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3"]], "armi.bookkeeping.db.tests.test_database3": [[12, "module-armi.bookkeeping.db.tests.test_database3"]], "makehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.makeHistory"]], "makeshufflehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.makeShuffleHistory"]], "test_auxdata() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_auxData"]], "test_computeparents() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_computeParents"]], "test_deleting() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_deleting"]], "test_filename() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_fileName"]], "test_geth5file() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_getH5File"]], "test_grablocalcommithash() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_grabLocalCommitHash"]], "test_history() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_history"]], "test_load() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_load"]], "test_loadblueprints() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_loadBlueprints"]], "test_loadcs() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_loadCS"]], "test_loadsortsetting() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_loadSortSetting"]], "test_mergehistory() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_mergeHistory"]], "test_open() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_open"]], "test_preprestartrun() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_prepRestartRun"]], "test_readinputsfromdb() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_readInputsFromDB"]], "test_replacenones() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_replaceNones"]], "test_splitdatabase() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_splitDatabase"]], "test_writetodb() (armi.bookkeeping.db.tests.test_database3.testdatabase3 method)": [[12, "armi.bookkeeping.db.tests.test_database3.TestDatabase3.test_writeToDB"]], "mockinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface"]], "testbadname (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName"]], "testdatabaseinterface (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface"]], "testdatabasereading (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading"]], "testdatabasewriter (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter"]], "teststandardfollowon (class in armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn"]], "armi.bookkeeping.db.tests.test_databaseinterface": [[13, "module-armi.bookkeeping.db.tests.test_databaseInterface"]], "getsimpledboperator() (in module armi.bookkeeping.db.tests.test_databaseinterface)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.getSimpleDBOperator"]], "interacteverynode() (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.interactEveryNode"]], "name (armi.bookkeeping.db.tests.test_databaseinterface.mockinterface attribute)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.MockInterface.name"]], "test_baddbname() (armi.bookkeeping.db.tests.test_databaseinterface.testbadname method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestBadName.test_badDBName"]], "test_distributable() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_distributable"]], "test_gethistory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistory"]], "test_gethistorybylocation() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_getHistoryByLocation"]], "test_growtofullcore() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCore"]], "test_growtofullcorefromfactory() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactory"]], "test_growtofullcorefromfactorywithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreFromFactoryWithCS"]], "test_growtofullcorewithcs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_growToFullCoreWithCS"]], "test_interactbol() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_interactBOL"]], "test_interacteverynodereturn() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_interactEveryNodeReturn"]], "test_metadataendfail() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaDataEndFail"]], "test_metadata_endsuccessfully() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasewriter method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseWriter.test_metaData_endSuccessfully"]], "test_readwithoutinputs() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWithoutInputs"]], "test_readwritten() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_readWritten"]], "test_standardrestart() (armi.bookkeeping.db.tests.test_databaseinterface.teststandardfollowon method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestStandardFollowOn.test_standardRestart"]], "test_timenodeloop_tightcoupling() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabaseinterface method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseInterface.test_timeNodeLoop_tightCoupling"]], "test_varioustypeswork() (armi.bookkeeping.db.tests.test_databaseinterface.testdatabasereading method)": [[13, "armi.bookkeeping.db.tests.test_databaseInterface.TestDatabaseReading.test_variousTypesWork"]], "testlocationpacking (class in armi.bookkeeping.db.tests.test_layout)": [[14, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking"]], "armi.bookkeeping.db.tests.test_layout": [[14, "module-armi.bookkeeping.db.tests.test_layout"]], "test_close() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[14, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_close"]], "test_locationpacking() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[14, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPacking"]], "test_locationpackingoldversion() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[14, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOldVersion"]], "test_locationpackingolderversions() (armi.bookkeeping.db.tests.test_layout.testlocationpacking method)": [[14, "armi.bookkeeping.db.tests.test_layout.TestLocationPacking.test_locationPackingOlderVersions"]], "armi.bookkeeping.db.typedefs": [[15, "module-armi.bookkeeping.db.typedefs"]], "historytrackerinterface (class in armi.bookkeeping.historytracker)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface"]], "addallfuelassems() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addAllFuelAssems"]], "adddetailassembliesbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembliesBOL"]], "adddetailassembly() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssembly"]], "adddetailassemsbyassemnums() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.addDetailAssemsByAssemNums"]], "armi.bookkeeping.historytracker": [[16, "module-armi.bookkeeping.historyTracker"]], "describeinterfaces() (in module armi.bookkeeping.historytracker)": [[16, "armi.bookkeeping.historyTracker.describeInterfaces"]], "filtertimeindices() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.filterTimeIndices"]], "getblockhistoryval() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getBlockHistoryVal"]], "getdetailassemblies() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailAssemblies"]], "getdetailblocks() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getDetailBlocks"]], "gettimesteps() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTimeSteps"]], "gettrackedparams() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.getTrackedParams"]], "interactboc() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOC"]], "interactbol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactBOL"]], "interacteol() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.interactEOL"]], "name (armi.bookkeeping.historytracker.historytrackerinterface attribute)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.name"]], "preloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.preloadBlockHistoryVals"]], "unloadblockhistoryvals() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.unloadBlockHistoryVals"]], "writeassemhistory() (armi.bookkeeping.historytracker.historytrackerinterface method)": [[16, "armi.bookkeeping.historyTracker.HistoryTrackerInterface.writeAssemHistory"]], "maininterface (class in armi.bookkeeping.maininterface)": [[17, "armi.bookkeeping.mainInterface.MainInterface"]], "armi.bookkeeping.maininterface": [[17, "module-armi.bookkeeping.mainInterface"]], "cleanarmifiles() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.cleanARMIFiles"]], "cleanlastcyclefiles() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.cleanLastCycleFiles"]], "describeinterfaces() (in module armi.bookkeeping.maininterface)": [[17, "armi.bookkeeping.mainInterface.describeInterfaces"]], "interactboc() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.interactBOC"]], "interactbol() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.interactBOL"]], "interacteol() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.maininterface.maininterface method)": [[17, "armi.bookkeeping.mainInterface.MainInterface.interactEveryNode"]], "name (armi.bookkeeping.maininterface.maininterface attribute)": [[17, "armi.bookkeeping.mainInterface.MainInterface.name"]], "instancecounter (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.InstanceCounter"]], "klasscounter (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.KlassCounter"]], "memoryprofiler (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler"]], "printsystemmemoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction"]], "profilememoryusageaction (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction"]], "systemandprocessmemoryusage (class in armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.SystemAndProcessMemoryUsage"]], "add() (armi.bookkeeping.memoryprofiler.instancecounter method)": [[18, "armi.bookkeeping.memoryProfiler.InstanceCounter.add"]], "armi.bookkeeping.memoryprofiler": [[18, "module-armi.bookkeeping.memoryProfiler"]], "checkforduplicateobjectsonarmimodel() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.checkForDuplicateObjectsOnArmiModel"]], "countobjects() (armi.bookkeeping.memoryprofiler.klasscounter method)": [[18, "armi.bookkeeping.memoryProfiler.KlassCounter.countObjects"]], "describeinterfaces() (in module armi.bookkeeping.memoryprofiler)": [[18, "armi.bookkeeping.memoryProfiler.describeInterfaces"]], "displaymemoryusage() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.displayMemoryUsage"]], "getreferrers() (armi.bookkeeping.memoryprofiler.memoryprofiler static method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.getReferrers"]], "interactbol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactBOL"]], "interacteol() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEOL"]], "interacteverynode() (armi.bookkeeping.memoryprofiler.memoryprofiler method)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.interactEveryNode"]], "invokehook() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[18, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.invokeHook"]], "invokehook() (armi.bookkeeping.memoryprofiler.profilememoryusageaction method)": [[18, "armi.bookkeeping.memoryProfiler.ProfileMemoryUsageAction.invokeHook"]], "maxprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[18, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.maxProcessMemoryInMB"]], "minprocessmemoryinmb (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction property)": [[18, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.minProcessMemoryInMB"]], "name (armi.bookkeeping.memoryprofiler.memoryprofiler attribute)": [[18, "armi.bookkeeping.memoryProfiler.MemoryProfiler.name"]], "printusage() (armi.bookkeeping.memoryprofiler.printsystemmemoryusageaction method)": [[18, "armi.bookkeeping.memoryProfiler.PrintSystemMemoryUsageAction.printUsage"]], "armi.bookkeeping.report": [[19, "module-armi.bookkeeping.report"]], "setdata() (in module armi.bookkeeping.report)": [[19, "armi.bookkeeping.report.setData"]], "group (class in armi.bookkeeping.report.data)": [[20, "armi.bookkeeping.report.data.Group"]], "image (class in armi.bookkeeping.report.data)": [[20, "armi.bookkeeping.report.data.Image"]], "report (class in armi.bookkeeping.report.data)": [[20, "armi.bookkeeping.report.data.Report"]], "table (class in armi.bookkeeping.report.data)": [[20, "armi.bookkeeping.report.data.Table"]], "addtoreport() (armi.bookkeeping.report.data.report method)": [[20, "armi.bookkeeping.report.data.Report.addToReport"]], "armi.bookkeeping.report.data": [[20, "module-armi.bookkeeping.report.data"]], "componentwellgroups (armi.bookkeeping.report.data.report attribute)": [[20, "armi.bookkeeping.report.data.Report.componentWellGroups"]], "count (armi.bookkeeping.report.data.image attribute)": [[20, "armi.bookkeeping.report.data.Image.count"]], "groupsorderfirst (armi.bookkeeping.report.data.report attribute)": [[20, "armi.bookkeeping.report.data.Report.groupsOrderFirst"]], "writegroupshtml() (armi.bookkeeping.report.data.report method)": [[20, "armi.bookkeeping.report.data.Report.writeGroupsHTML"]], "writehtml() (armi.bookkeeping.report.data.group method)": [[20, "armi.bookkeeping.report.data.Group.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.image method)": [[20, "armi.bookkeeping.report.data.Image.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.report method)": [[20, "armi.bookkeeping.report.data.Report.writeHTML"]], "writehtml() (armi.bookkeeping.report.data.table method)": [[20, "armi.bookkeeping.report.data.Table.writeHTML"]], "a (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.A"]], "b (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.B"]], "body (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Body"]], "caption (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Caption"]], "div (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Div"]], "footer (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Footer"]], "h1 (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.H1"]], "h2 (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.H2"]], "h3 (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.H3"]], "h4 (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.H4"]], "htmlfile (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.HTMLFile"]], "head (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Head"]], "html (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Html"]], "img (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Img"]], "li (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.LI"]], "link (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Link"]], "p (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.P"]], "script (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Script"]], "span (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Span"]], "style (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Style"]], "tbody (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.TBody"]], "td (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.TD"]], "th (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.TH"]], "thead (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.THead"]], "tr (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.TR"]], "table (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Table"]], "tag (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Tag"]], "title (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.Title"]], "ul (class in armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.UL"]], "armi.bookkeeping.report.html": [[21, "module-armi.bookkeeping.report.html"]], "encode64() (in module armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.encode64"]], "tag (armi.bookkeeping.report.html.a attribute)": [[21, "armi.bookkeeping.report.html.A.tag"]], "tag (armi.bookkeeping.report.html.b attribute)": [[21, "armi.bookkeeping.report.html.B.tag"]], "tag (armi.bookkeeping.report.html.body attribute)": [[21, "armi.bookkeeping.report.html.Body.tag"]], "tag (armi.bookkeeping.report.html.caption attribute)": [[21, "armi.bookkeeping.report.html.Caption.tag"]], "tag (armi.bookkeeping.report.html.div attribute)": [[21, "armi.bookkeeping.report.html.Div.tag"]], "tag (armi.bookkeeping.report.html.footer attribute)": [[21, "armi.bookkeeping.report.html.Footer.tag"]], "tag (armi.bookkeeping.report.html.h1 attribute)": [[21, "armi.bookkeeping.report.html.H1.tag"]], "tag (armi.bookkeeping.report.html.h2 attribute)": [[21, "armi.bookkeeping.report.html.H2.tag"]], "tag (armi.bookkeeping.report.html.h3 attribute)": [[21, "armi.bookkeeping.report.html.H3.tag"]], "tag (armi.bookkeeping.report.html.h4 attribute)": [[21, "armi.bookkeeping.report.html.H4.tag"]], "tag (armi.bookkeeping.report.html.head attribute)": [[21, "armi.bookkeeping.report.html.Head.tag"]], "tag (armi.bookkeeping.report.html.html attribute)": [[21, "armi.bookkeeping.report.html.Html.tag"]], "tag (armi.bookkeeping.report.html.img attribute)": [[21, "armi.bookkeeping.report.html.Img.tag"]], "tag (armi.bookkeeping.report.html.li attribute)": [[21, "armi.bookkeeping.report.html.LI.tag"]], "tag (armi.bookkeeping.report.html.link attribute)": [[21, "armi.bookkeeping.report.html.Link.tag"]], "tag (armi.bookkeeping.report.html.p attribute)": [[21, "armi.bookkeeping.report.html.P.tag"]], "tag (armi.bookkeeping.report.html.script attribute)": [[21, "armi.bookkeeping.report.html.Script.tag"]], "tag (armi.bookkeeping.report.html.span attribute)": [[21, "armi.bookkeeping.report.html.Span.tag"]], "tag (armi.bookkeeping.report.html.style attribute)": [[21, "armi.bookkeeping.report.html.Style.tag"]], "tag (armi.bookkeeping.report.html.tbody attribute)": [[21, "armi.bookkeeping.report.html.TBody.tag"]], "tag (armi.bookkeeping.report.html.td attribute)": [[21, "armi.bookkeeping.report.html.TD.tag"]], "tag (armi.bookkeeping.report.html.th attribute)": [[21, "armi.bookkeeping.report.html.TH.tag"]], "tag (armi.bookkeeping.report.html.thead attribute)": [[21, "armi.bookkeeping.report.html.THead.tag"]], "tag (armi.bookkeeping.report.html.tr attribute)": [[21, "armi.bookkeeping.report.html.TR.tag"]], "tag (armi.bookkeeping.report.html.table attribute)": [[21, "armi.bookkeeping.report.html.Table.tag"]], "tag (armi.bookkeeping.report.html.tag attribute)": [[21, "armi.bookkeeping.report.html.Tag.tag"]], "tag (armi.bookkeeping.report.html.title attribute)": [[21, "armi.bookkeeping.report.html.Title.tag"]], "tag (armi.bookkeeping.report.html.ul attribute)": [[21, "armi.bookkeeping.report.html.UL.tag"]], "write() (armi.bookkeeping.report.html.htmlfile method)": [[21, "armi.bookkeeping.report.html.HTMLFile.write"]], "writeescaped() (armi.bookkeeping.report.html.htmlfile method)": [[21, "armi.bookkeeping.report.html.HTMLFile.writeEscaped"]], "writestandardreporttemplate() (in module armi.bookkeeping.report.html)": [[21, "armi.bookkeeping.report.html.writeStandardReportTemplate"]], "design (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.DESIGN"]], "armi.bookkeeping.report.newreportutils": [[22, "module-armi.bookkeeping.report.newReportUtils"]], "comprehensivebolcontent() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.comprehensiveBOLContent"]], "createdimensionreport() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.createDimensionReport"]], "getpindesigntable() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.getPinDesignTable"]], "insertareafractionsreport() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertAreaFractionsReport"]], "insertblockdesignreport() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertBlockDesignReport"]], "insertblockdiagrams() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertBlockDiagrams"]], "insertblueprintcontent() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertBlueprintContent"]], "insertcoreandassemblymaps() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertCoreAndAssemblyMaps"]], "insertcoredesignreport() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertCoreDesignReport"]], "insertdesigncontent() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertDesignContent"]], "insertendoflifecontent() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertEndOfLifeContent"]], "insertgeneralreportcontent() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertGeneralReportContent"]], "insertmetatable() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertMetaTable"]], "insertsettingsdata() (in module armi.bookkeeping.report.newreportutils)": [[22, "armi.bookkeeping.report.newReportUtils.insertSettingsData"]], "begin (armi.bookkeeping.report.newreports.reportstage attribute)": [[23, "armi.bookkeeping.report.newReports.ReportStage.Begin"]], "end (armi.bookkeeping.report.newreports.reportstage attribute)": [[23, "armi.bookkeeping.report.newReports.ReportStage.End"]], "image (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.Image"]], "reportcontent (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.ReportContent"]], "reportnode (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.ReportNode"]], "reportstage (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.ReportStage"]], "section (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.Section"]], "standard (armi.bookkeeping.report.newreports.reportstage attribute)": [[23, "armi.bookkeeping.report.newReports.ReportStage.Standard"]], "table (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.Table"]], "timeseries (class in armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.TimeSeries"]], "add() (armi.bookkeeping.report.newreports.timeseries method)": [[23, "armi.bookkeeping.report.newReports.TimeSeries.add"]], "addchildelement() (armi.bookkeeping.report.newreports.section method)": [[23, "armi.bookkeeping.report.newReports.Section.addChildElement"]], "addrow() (armi.bookkeeping.report.newreports.table method)": [[23, "armi.bookkeeping.report.newReports.Table.addRow"]], "armi.bookkeeping.report.newreports": [[23, "module-armi.bookkeeping.report.newReports"]], "encode64() (in module armi.bookkeeping.report.newreports)": [[23, "armi.bookkeeping.report.newReports.encode64"]], "get() (armi.bookkeeping.report.newreports.reportcontent method)": [[23, "armi.bookkeeping.report.newReports.ReportContent.get"]], "get() (armi.bookkeeping.report.newreports.section method)": [[23, "armi.bookkeeping.report.newReports.Section.get"]], "items() (armi.bookkeeping.report.newreports.section method)": [[23, "armi.bookkeeping.report.newReports.Section.items"]], "leveldict (armi.bookkeeping.report.newreports.reportnode attribute)": [[23, "armi.bookkeeping.report.newReports.ReportNode.levelDict"]], "plot() (armi.bookkeeping.report.newreports.timeseries method)": [[23, "armi.bookkeeping.report.newReports.TimeSeries.plot"]], "render() (armi.bookkeeping.report.newreports.image method)": [[23, "armi.bookkeeping.report.newReports.Image.render"]], "render() (armi.bookkeeping.report.newreports.reportnode method)": [[23, "armi.bookkeeping.report.newReports.ReportNode.render"]], "render() (armi.bookkeeping.report.newreports.section method)": [[23, "armi.bookkeeping.report.newReports.Section.render"]], "render() (armi.bookkeeping.report.newreports.table method)": [[23, "armi.bookkeeping.report.newReports.Table.render"]], "render() (armi.bookkeeping.report.newreports.timeseries method)": [[23, "armi.bookkeeping.report.newReports.TimeSeries.render"]], "tableofcontents() (armi.bookkeeping.report.newreports.reportcontent method)": [[23, "armi.bookkeeping.report.newReports.ReportContent.tableOfContents"]], "writereports() (armi.bookkeeping.report.newreports.reportcontent method)": [[23, "armi.bookkeeping.report.newReports.ReportContent.writeReports"]], "reportinterface (class in armi.bookkeeping.report.reportinterface)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface"]], "armi.bookkeeping.report.reportinterface": [[24, "module-armi.bookkeeping.report.reportInterface"]], "describeinterfaces() (in module armi.bookkeeping.report.reportinterface)": [[24, "armi.bookkeeping.report.reportInterface.describeInterfaces"]], "distributable() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.distributable"]], "generatedesignreport() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.generateDesignReport"]], "interactboc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOC"]], "interactbol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.interactBOL"]], "interacteoc() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOC"]], "interacteol() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEOL"]], "interacteverynode() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.interactEveryNode"]], "name (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.name"]], "printreports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.printReports"]], "reports (armi.bookkeeping.report.reportinterface.reportinterface attribute)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.reports"]], "writereports() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.writeReports"]], "writerunsummary() (armi.bookkeeping.report.reportinterface.reportinterface method)": [[24, "armi.bookkeeping.report.reportInterface.ReportInterface.writeRunSummary"]], "armi.bookkeeping.report.reportingutils": [[25, "module-armi.bookkeeping.report.reportingUtils"]], "getinterfacestacksummary() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.getInterfaceStackSummary"]], "makeblockdesignreport() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.makeBlockDesignReport"]], "makecoreandassemblymaps() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.makeCoreAndAssemblyMaps"]], "makecoredesignreport() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.makeCoreDesignReport"]], "setneutronbalancesreport() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.setNeutronBalancesReport"]], "summarizepindesign() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.summarizePinDesign"]], "summarizepower() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.summarizePower"]], "summarizepowerpeaking() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.summarizePowerPeaking"]], "writeassemblymasssummary() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.writeAssemblyMassSummary"]], "writecyclesummary() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.writeCycleSummary"]], "writetightcouplingconvergencesummary() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.writeTightCouplingConvergenceSummary"]], "writewelcomeheaders() (in module armi.bookkeeping.report.reportingutils)": [[25, "armi.bookkeeping.report.reportingUtils.writeWelcomeHeaders"]], "armi.bookkeeping.report.tests": [[26, "module-armi.bookkeeping.report.tests"]], "testreportcontentcreation (class in armi.bookkeeping.report.tests.test_newreport)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation"]], "armi.bookkeeping.report.tests.test_newreport": [[27, "module-armi.bookkeeping.report.tests.test_newReport"]], "test_neutronicsplotfunctions() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_neutronicsPlotFunctions"]], "test_reportbasics() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportBasics"]], "test_reportcontents() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContents"]], "test_reportcontentsend() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportContentsEnd"]], "test_reportlogs() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_reportLogs"]], "test_tablecreation() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_tableCreation"]], "test_timeseries() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_timeSeries"]], "test_writereports() (armi.bookkeeping.report.tests.test_newreport.testreportcontentcreation method)": [[27, "armi.bookkeeping.report.tests.test_newReport.TestReportContentCreation.test_writeReports"]], "testreport (class in armi.bookkeeping.report.tests.test_report)": [[28, "armi.bookkeeping.report.tests.test_report.TestReport"]], "testreportinterface (class in armi.bookkeeping.report.tests.test_report)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface"]], "armi.bookkeeping.report.tests.test_report": [[28, "module-armi.bookkeeping.report.tests.test_report"]], "test_distributablereportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_distributableReportInt"]], "test_getdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReport.test_getData"]], "test_interactboc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOC"]], "test_interactbolreportint() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactBOLReportInt"]], "test_interacteoc() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOC"]], "test_interacteol() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEOL"]], "test_interacteverynode() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_interactEveryNode"]], "test_printreports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_printReports"]], "test_reactorspecificreporting() (armi.bookkeeping.report.tests.test_report.testreport method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReport.test_reactorSpecificReporting"]], "test_setdata() (armi.bookkeeping.report.tests.test_report.testreport method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReport.test_setData"]], "test_writereports() (armi.bookkeeping.report.tests.test_report.testreportinterface method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReportInterface.test_writeReports"]], "test_writewelcomeheaders() (armi.bookkeeping.report.tests.test_report.testreport method)": [[28, "armi.bookkeeping.report.tests.test_report.TestReport.test_writeWelcomeHeaders"]], "snapshotinterface (class in armi.bookkeeping.snapshotinterface)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface"]], "activatedefaultsnapshots() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface.activateDefaultSnapshots"]], "armi.bookkeeping.snapshotinterface": [[29, "module-armi.bookkeeping.snapshotInterface"]], "describeinterfaces() (in module armi.bookkeeping.snapshotinterface)": [[29, "armi.bookkeeping.snapshotInterface.describeInterfaces"]], "extractcyclenodefromstamp() (in module armi.bookkeeping.snapshotinterface)": [[29, "armi.bookkeeping.snapshotInterface.extractCycleNodeFromStamp"]], "getcyclenodestamp() (in module armi.bookkeeping.snapshotinterface)": [[29, "armi.bookkeeping.snapshotInterface.getCycleNodeStamp"]], "interactbol() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactBOL"]], "interactcoupled() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactCoupled"]], "interacteverynode() (armi.bookkeeping.snapshotinterface.snapshotinterface method)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface.interactEveryNode"]], "name (armi.bookkeeping.snapshotinterface.snapshotinterface attribute)": [[29, "armi.bookkeeping.snapshotInterface.SnapshotInterface.name"]], "armi.bookkeeping.tests": [[30, "module-armi.bookkeeping.tests"]], "testhistorytracker (class in armi.bookkeeping.tests.test_historytracker)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker"]], "testhistorytrackernomodel (class in armi.bookkeeping.tests.test_historytracker)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel"]], "armi.bookkeeping.tests.test_historytracker": [[31, "module-armi.bookkeeping.tests.test_historyTracker"]], "runtutorialnotebook() (in module armi.bookkeeping.tests.test_historytracker)": [[31, "armi.bookkeeping.tests.test_historyTracker.runTutorialNotebook"]], "test_blockname() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_blockName"]], "test_calcmgfluence() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_calcMGFluence"]], "test_getblockinassembly() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_getBlockInAssembly"]], "test_historyreport() (armi.bookkeeping.tests.test_historytracker.testhistorytracker method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTracker.test_historyReport"]], "test_timestepfiltering() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFiltering"]], "test_timestepfilteringwithgap() (armi.bookkeeping.tests.test_historytracker.testhistorytrackernomodel method)": [[31, "armi.bookkeeping.tests.test_historyTracker.TestHistoryTrackerNoModel.test_timestepFilteringWithGap"]], "klasscountertests (class in armi.bookkeeping.tests.test_memoryprofiler)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests"]], "testmemoryprofiler (class in armi.bookkeeping.tests.test_memoryprofiler)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler"]], "armi.bookkeeping.tests.test_memoryprofiler": [[32, "module-armi.bookkeeping.tests.test_memoryProfiler"]], "get_containers() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.get_containers"]], "test_checkforduplicateobjectsonarmimodel() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_checkForDuplicateObjectsOnArmiModel"]], "test_counthandlesrecursion() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_countHandlesRecursion"]], "test_displaymemoryusage() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_displayMemoryUsage"]], "test_expandcontainer() (armi.bookkeeping.tests.test_memoryprofiler.klasscountertests method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.KlassCounterTests.test_expandContainer"]], "test_fullbreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_fullBreakdown"]], "test_getreferrers() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_getReferrers"]], "test_printfullmemorybreakdown() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_printFullMemoryBreakdown"]], "test_profilememoryusageaction() (armi.bookkeeping.tests.test_memoryprofiler.testmemoryprofiler method)": [[32, "armi.bookkeeping.tests.test_memoryProfiler.TestMemoryProfiler.test_profileMemoryUsageAction"]], "mockreactor (class in armi.bookkeeping.tests.test_snapshot)": [[33, "armi.bookkeeping.tests.test_snapshot.MockReactor"]], "mockreactorparams (class in armi.bookkeeping.tests.test_snapshot)": [[33, "armi.bookkeeping.tests.test_snapshot.MockReactorParams"]], "testsnapshotinterface (class in armi.bookkeeping.tests.test_snapshot)": [[33, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface"]], "armi.bookkeeping.tests.test_snapshot": [[33, "module-armi.bookkeeping.tests.test_snapshot"]], "test_activeatedefaultsnapshots_17cycles5burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[33, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_17cycles5BurnSteps"]], "test_activeatedefaultsnapshots_30cycles2burnsteps() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[33, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_activeateDefaultSnapshots_30cycles2BurnSteps"]], "test_interactcoupled() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[33, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactCoupled"]], "test_interacteverynode() (armi.bookkeeping.tests.test_snapshot.testsnapshotinterface method)": [[33, "armi.bookkeeping.tests.test_snapshot.TestSnapshotInterface.test_interactEveryNode"]], "armi.bookkeeping.visualization": [[34, "module-armi.bookkeeping.visualization"]], "visfiledumper (class in armi.bookkeeping.visualization.dumper)": [[35, "armi.bookkeeping.visualization.dumper.VisFileDumper"]], "armi.bookkeeping.visualization.dumper": [[35, "module-armi.bookkeeping.visualization.dumper"]], "dumpstate() (armi.bookkeeping.visualization.dumper.visfiledumper method)": [[35, "armi.bookkeeping.visualization.dumper.VisFileDumper.dumpState"]], "visfileentrypoint (class in armi.bookkeeping.visualization.entrypoint)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint"]], "addoptions() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.addOptions"]], "armi.bookkeeping.visualization.entrypoint": [[36, "module-armi.bookkeeping.visualization.entryPoint"]], "description (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.description"]], "invoke() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.invoke"]], "name (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.name"]], "parse() (armi.bookkeeping.visualization.entrypoint.visfileentrypoint method)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.parse"]], "settingsargument (armi.bookkeeping.visualization.entrypoint.visfileentrypoint attribute)": [[36, "armi.bookkeeping.visualization.entryPoint.VisFileEntryPoint.settingsArgument"]], "armi.bookkeeping.visualization.tests": [[37, "module-armi.bookkeeping.visualization.tests"]], "testvisdump (class in armi.bookkeeping.visualization.tests.test_vis)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump"]], "testvtkmesh (class in armi.bookkeeping.visualization.tests.test_vis)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh"]], "armi.bookkeeping.visualization.tests.test_vis": [[38, "module-armi.bookkeeping.visualization.tests.test_vis"]], "test_cartesianmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_cartesianMesh"]], "test_dumpreactorvtk() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorVtk"]], "test_dumpreactorxdmf() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_dumpReactorXdmf"]], "test_hexmesh() (armi.bookkeeping.visualization.tests.test_vis.testvisdump method)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVisDump.test_hexMesh"]], "test_testvtkmesh() (armi.bookkeeping.visualization.tests.test_vis.testvtkmesh method)": [[38, "armi.bookkeeping.visualization.tests.test_vis.TestVtkMesh.test_testVtkMesh"]], "testxdmf (class in armi.bookkeeping.visualization.tests.test_xdmf)": [[39, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf"]], "armi.bookkeeping.visualization.tests.test_xdmf": [[39, "module-armi.bookkeeping.visualization.tests.test_xdmf"]], "test_deduptimes() (armi.bookkeeping.visualization.tests.test_xdmf.testxdmf method)": [[39, "armi.bookkeeping.visualization.tests.test_xdmf.TestXdmf.test_dedupTimes"]], "vtkmesh (class in armi.bookkeeping.visualization.utils)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh"]], "append() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.append"]], "armi.bookkeeping.visualization.utils": [[40, "module-armi.bookkeeping.visualization.utils"]], "createassemmesh() (in module armi.bookkeeping.visualization.utils)": [[40, "armi.bookkeeping.visualization.utils.createAssemMesh"]], "createblockmesh() (in module armi.bookkeeping.visualization.utils)": [[40, "armi.bookkeeping.visualization.utils.createBlockMesh"]], "createreactorassemmesh() (in module armi.bookkeeping.visualization.utils)": [[40, "armi.bookkeeping.visualization.utils.createReactorAssemMesh"]], "createreactorblockmesh() (in module armi.bookkeeping.visualization.utils)": [[40, "armi.bookkeeping.visualization.utils.createReactorBlockMesh"]], "empty() (armi.bookkeeping.visualization.utils.vtkmesh static method)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.empty"]], "write() (armi.bookkeeping.visualization.utils.vtkmesh method)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.write"]], "x (armi.bookkeeping.visualization.utils.vtkmesh property)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.x"]], "y (armi.bookkeeping.visualization.utils.vtkmesh property)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.y"]], "z (armi.bookkeeping.visualization.utils.vtkmesh property)": [[40, "armi.bookkeeping.visualization.utils.VtkMesh.z"]], "vtkdumper (class in armi.bookkeeping.visualization.vtk)": [[41, "armi.bookkeeping.visualization.vtk.VtkDumper"]], "armi.bookkeeping.visualization.vtk": [[41, "module-armi.bookkeeping.visualization.vtk"]], "dumpstate() (armi.bookkeeping.visualization.vtk.vtkdumper method)": [[41, "armi.bookkeeping.visualization.vtk.VtkDumper.dumpState"]], "xdmfdumper (class in armi.bookkeeping.visualization.xdmf)": [[42, "armi.bookkeeping.visualization.xdmf.XdmfDumper"]], "armi.bookkeeping.visualization.xdmf": [[42, "module-armi.bookkeeping.visualization.xdmf"]], "dumpstate() (armi.bookkeeping.visualization.xdmf.xdmfdumper method)": [[42, "armi.bookkeeping.visualization.xdmf.XdmfDumper.dumpState"]], "armi.cases": [[43, "module-armi.cases"]], "case (class in armi.cases.case)": [[44, "armi.cases.case.Case"]], "addexplicitdependency() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.addExplicitDependency"]], "armi.cases.case": [[44, "module-armi.cases.case"]], "bp (armi.cases.case.case property)": [[44, "armi.cases.case.Case.bp"]], "buildcommand() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.buildCommand"]], "checkinputs() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.checkInputs"]], "clone() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.clone"]], "compare() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.compare"]], "copyinterfaceinputs() (in module armi.cases.case)": [[44, "armi.cases.case.copyInterfaceInputs"]], "dbname (armi.cases.case.case property)": [[44, "armi.cases.case.Case.dbName"]], "dependencies (armi.cases.case.case property)": [[44, "armi.cases.case.Case.dependencies"]], "directory (armi.cases.case.case property)": [[44, "armi.cases.case.Case.directory"]], "geom (armi.cases.case.case property)": [[44, "armi.cases.case.Case.geom"]], "getpotentialparentfromsettingvalue() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.getPotentialParentFromSettingValue"]], "independentvariables (armi.cases.case.case property)": [[44, "armi.cases.case.Case.independentVariables"]], "initializeoperator() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.initializeOperator"]], "run() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.run"]], "setuptaskdependence() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.setUpTaskDependence"]], "summarizedesign() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.summarizeDesign"]], "title (armi.cases.case.case property)": [[44, "armi.cases.case.Case.title"]], "writeinputs() (armi.cases.case.case method)": [[44, "armi.cases.case.Case.writeInputs"]], "armi.cases.inputmodifiers": [[45, "module-armi.cases.inputModifiers"]], "blueprintblockmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.BluePrintBlockModifier"]], "fail_if_after (armi.cases.inputmodifiers.inputmodifiers.inputmodifier attribute)": [[46, "armi.cases.inputModifiers.inputModifiers.InputModifier.FAIL_IF_AFTER"]], "fullcoremodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.FullCoreModifier"]], "inputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.InputModifier"]], "multisettingmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.MultiSettingModifier"]], "samplinginputmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.SamplingInputModifier"]], "settingsmodifier (class in armi.cases.inputmodifiers.inputmodifiers)": [[46, "armi.cases.inputModifiers.inputModifiers.SettingsModifier"]], "armi.cases.inputmodifiers.inputmodifiers": [[46, "module-armi.cases.inputModifiers.inputModifiers"]], "neutronicconvergencemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[47, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicConvergenceModifier"]], "neutronicmeshssizemodifier (class in armi.cases.inputmodifiers.neutronicsmodifiers)": [[47, "armi.cases.inputModifiers.neutronicsModifiers.NeutronicMeshsSizeModifier"]], "armi.cases.inputmodifiers.neutronicsmodifiers": [[47, "module-armi.cases.inputModifiers.neutronicsModifiers"]], "cladthicknessbyidmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[48, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier"]], "cladthicknessbyodmodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[48, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyidmodifier attribute)": [[48, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByIDModifier.FAIL_IF_AFTER"]], "fail_if_after (armi.cases.inputmodifiers.pintypeinputmodifiers.cladthicknessbyodmodifier attribute)": [[48, "armi.cases.inputModifiers.pinTypeInputModifiers.CladThicknessByODModifier.FAIL_IF_AFTER"]], "smeardensitymodifier (class in armi.cases.inputmodifiers.pintypeinputmodifiers)": [[48, "armi.cases.inputModifiers.pinTypeInputModifiers.SmearDensityModifier"]], "armi.cases.inputmodifiers.pintypeinputmodifiers": [[48, "module-armi.cases.inputModifiers.pinTypeInputModifiers"]], "armi.cases.inputmodifiers.tests": [[49, "module-armi.cases.inputModifiers.tests"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom"]], "neutronicskernelopts (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.NeutronicsKernelOpts"]], "testfullcoremodifier (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier"]], "testsettingsmodifiers (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers"]], "testsuitebuilderintegrations (class in armi.cases.inputmodifiers.tests.test_inputmodifiers)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations"]], "armi.cases.inputmodifiers.tests.test_inputmodifiers": [[50, "module-armi.cases.inputModifiers.tests.test_inputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_inputmodifiers.mockgeom attribute)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.MockGeom.geomType"]], "test_neutronicconvergencemodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsettingsmodifiers method)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestSettingsModifiers.test_NeutronicConvergenceModifier"]], "test_blueprintblockmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_bluePrintBlockModifier"]], "test_fullcoreconversion() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testfullcoremodifier method)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestFullCoreModifier.test_fullCoreConversion"]], "test_settingsmodifier() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_settingsModifier"]], "test_smeardensityfail() (armi.cases.inputmodifiers.tests.test_inputmodifiers.testsuitebuilderintegrations method)": [[50, "armi.cases.inputModifiers.tests.test_inputModifiers.TestsuiteBuilderIntegrations.test_smearDensityFail"]], "mockgeom (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom"]], "testblueprintmodifiers (class in armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers"]], "armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers": [[51, "module-armi.cases.inputModifiers.tests.test_pinTypeInputModifiers"]], "geomtype (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.mockgeom attribute)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.MockGeom.geomType"]], "test_adjustsmeardensity() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_AdjustSmearDensity"]], "test_cladthickenessbyidmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByIDModifier"]], "test_cladthickenessbyodmodifier() (armi.cases.inputmodifiers.tests.test_pintypeinputmodifiers.testblueprintmodifiers method)": [[51, "armi.cases.inputModifiers.tests.test_pinTypeInputModifiers.TestBlueprintModifiers.test_CladThickenessByODModifier"]], "casesuite (class in armi.cases.suite)": [[52, "armi.cases.suite.CaseSuite"]], "add() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.add"]], "armi.cases.suite": [[52, "module-armi.cases.suite"]], "clone() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.clone"]], "compare() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.compare"]], "discover() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.discover"]], "echoconfiguration() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.echoConfiguration"]], "remove() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.remove"]], "run() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.run"]], "writeinputs() (armi.cases.suite.casesuite method)": [[52, "armi.cases.suite.CaseSuite.writeInputs"]], "writetable() (armi.cases.suite.casesuite static method)": [[52, "armi.cases.suite.CaseSuite.writeTable"]], "fullfactorialsuitebuilder (class in armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder"]], "fullfactorialsuitebuildernoisy (class in armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy"]], "latinhypercubesuitebuilder (class in armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder"]], "separateeffectssuitebuilder (class in armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder"]], "suitebuilder (class in armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.SuiteBuilder"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuilder method)": [[53, "armi.cases.suiteBuilder.FullFactorialSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.fullfactorialsuitebuildernoisy method)": [[53, "armi.cases.suiteBuilder.FullFactorialSuiteBuilderNoisy.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[53, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.separateeffectssuitebuilder method)": [[53, "armi.cases.suiteBuilder.SeparateEffectsSuiteBuilder.addDegreeOfFreedom"]], "adddegreeoffreedom() (armi.cases.suitebuilder.suitebuilder method)": [[53, "armi.cases.suiteBuilder.SuiteBuilder.addDegreeOfFreedom"]], "addmodifierset() (armi.cases.suitebuilder.suitebuilder method)": [[53, "armi.cases.suiteBuilder.SuiteBuilder.addModifierSet"]], "armi.cases.suitebuilder": [[53, "module-armi.cases.suiteBuilder"]], "buildsuite() (armi.cases.suitebuilder.latinhypercubesuitebuilder method)": [[53, "armi.cases.suiteBuilder.LatinHyperCubeSuiteBuilder.buildSuite"]], "buildsuite() (armi.cases.suitebuilder.suitebuilder method)": [[53, "armi.cases.suiteBuilder.SuiteBuilder.buildSuite"]], "getinputmodifiers() (in module armi.cases.suitebuilder)": [[53, "armi.cases.suiteBuilder.getInputModifiers"]], "armi.cases.tests": [[54, "module-armi.cases.tests"]], "multifilesinterfaces (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.MultiFilesInterfaces"]], "testarmicase (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.TestArmiCase"]], "testcasesuitedependencies (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies"]], "testcopyinterfaceinputs (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs"]], "testextrainputwriting (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.TestExtraInputWriting"]], "testpluginforcopyinterfacesmultiplefiles (class in armi.cases.tests.test_cases)": [[55, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles"]], "armi.cases.tests.test_cases": [[55, "module-armi.cases.tests.test_cases"]], "definesettings() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[55, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.defineSettings"]], "exposeinterfaces() (armi.cases.tests.test_cases.testpluginforcopyinterfacesmultiplefiles static method)": [[55, "armi.cases.tests.test_cases.TestPluginForCopyInterfacesMultipleFiles.exposeInterfaces"]], "name (armi.cases.tests.test_cases.multifilesinterfaces attribute)": [[55, "armi.cases.tests.test_cases.MultiFilesInterfaces.name"]], "specifyinputs() (armi.cases.tests.test_cases.multifilesinterfaces static method)": [[55, "armi.cases.tests.test_cases.MultiFilesInterfaces.specifyInputs"]], "test_buildcommand() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_buildCommand"]], "test_clone() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_clone"]], "test_clone() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_clone"]], "test_copyinputshelper() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInputsHelper"]], "test_copyinterfaceinputs_abspath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_absPath"]], "test_copyinterfaceinputs_multiplefiles() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_multipleFiles"]], "test_copyinterfaceinputs_nonfilepath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_nonFilePath"]], "test_copyinterfaceinputs_relpath() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_relPath"]], "test_copyinterfaceinputs_singlefile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_singleFile"]], "test_copyinterfaceinputs_wildcardfile() (armi.cases.tests.test_cases.testcopyinterfaceinputs method)": [[55, "armi.cases.tests.test_cases.TestCopyInterfaceInputs.test_copyInterfaceInputs_wildcardFile"]], "test_dependencieswithobscurepaths() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependenciesWithObscurePaths"]], "test_dependencyfromdbname() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromDBName"]], "test_dependencyfromexplictrepeatshuffles() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_dependencyFromExplictRepeatShuffles"]], "test_endcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_endCoverage"]], "test_endprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_endProfiling"]], "test_explicitdependency() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_explicitDependency"]], "test_getcoveragercfile() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_getCoverageRcFile"]], "test_independentvariables() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_independentVariables"]], "test_run() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_run"]], "test_setuptaskdependence() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_setUpTaskDependence"]], "test_startcoverage() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_startCoverage"]], "test_startprofiling() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_startProfiling"]], "test_summarizedesign() (armi.cases.tests.test_cases.testarmicase method)": [[55, "armi.cases.tests.test_cases.TestArmiCase.test_summarizeDesign"]], "test_titlesettergetter() (armi.cases.tests.test_cases.testcasesuitedependencies method)": [[55, "armi.cases.tests.test_cases.TestCaseSuiteDependencies.test_titleSetterGetter"]], "test_writeinput() (armi.cases.tests.test_cases.testextrainputwriting method)": [[55, "armi.cases.tests.test_cases.TestExtraInputWriting.test_writeInput"]], "latinhypercubemodifier (class in armi.cases.tests.test_suitebuilder)": [[56, "armi.cases.tests.test_suiteBuilder.LatinHyperCubeModifier"]], "testlatinhypercubesuitebuilder (class in armi.cases.tests.test_suitebuilder)": [[56, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder"]], "armi.cases.tests.test_suitebuilder": [[56, "module-armi.cases.tests.test_suiteBuilder"]], "test_adddegreeoffreedom() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[56, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_addDegreeOfFreedom"]], "test_buildsuite() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[56, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_buildSuite"]], "test_initialize() (armi.cases.tests.test_suitebuilder.testlatinhypercubesuitebuilder method)": [[56, "armi.cases.tests.test_suiteBuilder.TestLatinHyperCubeSuiteBuilder.test_initialize"]], "armicli (class in armi.cli)": [[57, "armi.cli.ArmiCLI"]], "armiparser (class in armi.cli)": [[57, "armi.cli.ArmiParser"]], "entrypointsplugin (class in armi.cli)": [[57, "armi.cli.EntryPointsPlugin"]], "armi.cli": [[57, "module-armi.cli"]], "defineentrypoints() (armi.cli.entrypointsplugin static method)": [[57, "armi.cli.EntryPointsPlugin.defineEntryPoints"]], "executecommand() (armi.cli.armicli method)": [[57, "armi.cli.ArmiCLI.executeCommand"]], "listcommands() (armi.cli.armicli method)": [[57, "armi.cli.ArmiCLI.listCommands"]], "print_help() (armi.cli.armiparser method)": [[57, "armi.cli.ArmiParser.print_help"]], "run() (armi.cli.armicli method)": [[57, "armi.cli.ArmiCLI.run"]], "showversion() (armi.cli.armicli static method)": [[57, "armi.cli.ArmiCLI.showVersion"]], "splash() (in module armi.cli)": [[57, "armi.cli.splash"]], "checkinputentrypoint (class in armi.cli.checkinputs)": [[58, "armi.cli.checkInputs.CheckInputEntryPoint"]], "expandblueprints (class in armi.cli.checkinputs)": [[58, "armi.cli.checkInputs.ExpandBlueprints"]], "addoptions() (armi.cli.checkinputs.checkinputentrypoint method)": [[58, "armi.cli.checkInputs.CheckInputEntryPoint.addOptions"]], "addoptions() (armi.cli.checkinputs.expandblueprints method)": [[58, "armi.cli.checkInputs.ExpandBlueprints.addOptions"]], "armi.cli.checkinputs": [[58, "module-armi.cli.checkInputs"]], "invoke() (armi.cli.checkinputs.checkinputentrypoint method)": [[58, "armi.cli.checkInputs.CheckInputEntryPoint.invoke"]], "invoke() (armi.cli.checkinputs.expandblueprints method)": [[58, "armi.cli.checkInputs.ExpandBlueprints.invoke"]], "name (armi.cli.checkinputs.checkinputentrypoint attribute)": [[58, "armi.cli.checkInputs.CheckInputEntryPoint.name"]], "name (armi.cli.checkinputs.expandblueprints attribute)": [[58, "armi.cli.checkInputs.ExpandBlueprints.name"]], "settingsargument (armi.cli.checkinputs.checkinputentrypoint attribute)": [[58, "armi.cli.checkInputs.CheckInputEntryPoint.settingsArgument"]], "settingsargument (armi.cli.checkinputs.expandblueprints attribute)": [[58, "armi.cli.checkInputs.ExpandBlueprints.settingsArgument"]], "splash (armi.cli.checkinputs.expandblueprints attribute)": [[58, "armi.cli.checkInputs.ExpandBlueprints.splash"]], "cleantemps (class in armi.cli.cleantemps)": [[59, "armi.cli.cleanTemps.CleanTemps"]], "armi.cli.cleantemps": [[59, "module-armi.cli.cleanTemps"]], "invoke() (armi.cli.cleantemps.cleantemps method)": [[59, "armi.cli.cleanTemps.CleanTemps.invoke"]], "name (armi.cli.cleantemps.cleantemps attribute)": [[59, "armi.cli.cleanTemps.CleanTemps.name"]], "settingsargument (armi.cli.cleantemps.cleantemps attribute)": [[59, "armi.cli.cleanTemps.CleanTemps.settingsArgument"]], "clonearmiruncommandbatch (class in armi.cli.clone)": [[60, "armi.cli.clone.CloneArmiRunCommandBatch"]], "clonearmiruncommandinteractive (class in armi.cli.clone)": [[60, "armi.cli.clone.CloneArmiRunCommandInteractive"]], "clonesuitecommand (class in armi.cli.clone)": [[60, "armi.cli.clone.CloneSuiteCommand"]], "addoptions() (armi.cli.clone.clonearmiruncommandbatch method)": [[60, "armi.cli.clone.CloneArmiRunCommandBatch.addOptions"]], "addoptions() (armi.cli.clone.clonesuitecommand method)": [[60, "armi.cli.clone.CloneSuiteCommand.addOptions"]], "armi.cli.clone": [[60, "module-armi.cli.clone"]], "invoke() (armi.cli.clone.clonearmiruncommandbatch method)": [[60, "armi.cli.clone.CloneArmiRunCommandBatch.invoke"]], "invoke() (armi.cli.clone.clonesuitecommand method)": [[60, "armi.cli.clone.CloneSuiteCommand.invoke"]], "name (armi.cli.clone.clonearmiruncommandbatch attribute)": [[60, "armi.cli.clone.CloneArmiRunCommandBatch.name"]], "name (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[60, "armi.cli.clone.CloneArmiRunCommandInteractive.name"]], "name (armi.cli.clone.clonesuitecommand attribute)": [[60, "armi.cli.clone.CloneSuiteCommand.name"]], "settingsargument (armi.cli.clone.clonearmiruncommandbatch attribute)": [[60, "armi.cli.clone.CloneArmiRunCommandBatch.settingsArgument"]], "settingsargument (armi.cli.clone.clonearmiruncommandinteractive attribute)": [[60, "armi.cli.clone.CloneArmiRunCommandInteractive.settingsArgument"]], "settingsargument (armi.cli.clone.clonesuitecommand attribute)": [[60, "armi.cli.clone.CloneSuiteCommand.settingsArgument"]], "comparecases (class in armi.cli.comparecases)": [[61, "armi.cli.compareCases.CompareCases"]], "comparesuites (class in armi.cli.comparecases)": [[61, "armi.cli.compareCases.CompareSuites"]], "addoptions() (armi.cli.comparecases.comparecases method)": [[61, "armi.cli.compareCases.CompareCases.addOptions"]], "addoptions() (armi.cli.comparecases.comparesuites method)": [[61, "armi.cli.compareCases.CompareSuites.addOptions"]], "armi.cli.comparecases": [[61, "module-armi.cli.compareCases"]], "invoke() (armi.cli.comparecases.comparecases method)": [[61, "armi.cli.compareCases.CompareCases.invoke"]], "invoke() (armi.cli.comparecases.comparesuites method)": [[61, "armi.cli.compareCases.CompareSuites.invoke"]], "name (armi.cli.comparecases.comparecases attribute)": [[61, "armi.cli.compareCases.CompareCases.name"]], "name (armi.cli.comparecases.comparesuites attribute)": [[61, "armi.cli.compareCases.CompareSuites.name"]], "parse() (armi.cli.comparecases.comparecases method)": [[61, "armi.cli.compareCases.CompareCases.parse"]], "settingsargument (armi.cli.comparecases.comparecases attribute)": [[61, "armi.cli.compareCases.CompareCases.settingsArgument"]], "settingsargument (armi.cli.comparecases.comparesuites attribute)": [[61, "armi.cli.compareCases.CompareSuites.settingsArgument"]], "convertdb (class in armi.cli.database)": [[62, "armi.cli.database.ConvertDB"]], "extractinputs (class in armi.cli.database)": [[62, "armi.cli.database.ExtractInputs"]], "injectinputs (class in armi.cli.database)": [[62, "armi.cli.database.InjectInputs"]], "addoptions() (armi.cli.database.convertdb method)": [[62, "armi.cli.database.ConvertDB.addOptions"]], "addoptions() (armi.cli.database.extractinputs method)": [[62, "armi.cli.database.ExtractInputs.addOptions"]], "addoptions() (armi.cli.database.injectinputs method)": [[62, "armi.cli.database.InjectInputs.addOptions"]], "armi.cli.database": [[62, "module-armi.cli.database"]], "invoke() (armi.cli.database.convertdb method)": [[62, "armi.cli.database.ConvertDB.invoke"]], "invoke() (armi.cli.database.extractinputs method)": [[62, "armi.cli.database.ExtractInputs.invoke"]], "invoke() (armi.cli.database.injectinputs method)": [[62, "armi.cli.database.InjectInputs.invoke"]], "mode (armi.cli.database.convertdb attribute)": [[62, "armi.cli.database.ConvertDB.mode"]], "mode (armi.cli.database.extractinputs attribute)": [[62, "armi.cli.database.ExtractInputs.mode"]], "mode (armi.cli.database.injectinputs attribute)": [[62, "armi.cli.database.InjectInputs.mode"]], "name (armi.cli.database.convertdb attribute)": [[62, "armi.cli.database.ConvertDB.name"]], "name (armi.cli.database.extractinputs attribute)": [[62, "armi.cli.database.ExtractInputs.name"]], "name (armi.cli.database.injectinputs attribute)": [[62, "armi.cli.database.InjectInputs.name"]], "parse_args() (armi.cli.database.convertdb method)": [[62, "armi.cli.database.ConvertDB.parse_args"]], "parse_args() (armi.cli.database.extractinputs method)": [[62, "armi.cli.database.ExtractInputs.parse_args"]], "settingsargument (armi.cli.database.convertdb attribute)": [[62, "armi.cli.database.ConvertDB.settingsArgument"]], "settingsargument (armi.cli.database.extractinputs attribute)": [[62, "armi.cli.database.ExtractInputs.settingsArgument"]], "settingsargument (armi.cli.database.injectinputs attribute)": [[62, "armi.cli.database.InjectInputs.settingsArgument"]], "entrypoint (class in armi.cli.entrypoint)": [[63, "armi.cli.entryPoint.EntryPoint"]], "addoptions() (armi.cli.entrypoint.entrypoint method)": [[63, "armi.cli.entryPoint.EntryPoint.addOptions"]], "armi.cli.entrypoint": [[63, "module-armi.cli.entryPoint"]], "createoptionfromsetting() (armi.cli.entrypoint.entrypoint method)": [[63, "armi.cli.entryPoint.EntryPoint.createOptionFromSetting"]], "description (armi.cli.entrypoint.entrypoint attribute)": [[63, "armi.cli.entryPoint.EntryPoint.description"]], "invoke() (armi.cli.entrypoint.entrypoint method)": [[63, "armi.cli.entryPoint.EntryPoint.invoke"]], "loadsettings() (in module armi.cli.entrypoint)": [[63, "armi.cli.entryPoint.loadSettings"]], "mode (armi.cli.entrypoint.entrypoint attribute)": [[63, "armi.cli.entryPoint.EntryPoint.mode"]], "name (armi.cli.entrypoint.entrypoint attribute)": [[63, "armi.cli.entryPoint.EntryPoint.name"]], "parse() (armi.cli.entrypoint.entrypoint method)": [[63, "armi.cli.entryPoint.EntryPoint.parse"]], "parse_args() (armi.cli.entrypoint.entrypoint method)": [[63, "armi.cli.entryPoint.EntryPoint.parse_args"]], "setcasetitle() (in module armi.cli.entrypoint)": [[63, "armi.cli.entryPoint.setCaseTitle"]], "setsetting() (in module armi.cli.entrypoint)": [[63, "armi.cli.entryPoint.setSetting"]], "settingsargument (armi.cli.entrypoint.entrypoint attribute)": [[63, "armi.cli.entryPoint.EntryPoint.settingsArgument"]], "splash (armi.cli.entrypoint.entrypoint attribute)": [[63, "armi.cli.entryPoint.EntryPoint.splash"]], "storebool() (in module armi.cli.entrypoint)": [[63, "armi.cli.entryPoint.storeBool"]], "gridguientrypoint (class in armi.cli.gridgui)": [[64, "armi.cli.gridGui.GridGuiEntryPoint"]], "addoptions() (armi.cli.gridgui.gridguientrypoint method)": [[64, "armi.cli.gridGui.GridGuiEntryPoint.addOptions"]], "armi.cli.gridgui": [[64, "module-armi.cli.gridGui"]], "invoke() (armi.cli.gridgui.gridguientrypoint method)": [[64, "armi.cli.gridGui.GridGuiEntryPoint.invoke"]], "name (armi.cli.gridgui.gridguientrypoint attribute)": [[64, "armi.cli.gridGui.GridGuiEntryPoint.name"]], "settingsargument (armi.cli.gridgui.gridguientrypoint attribute)": [[64, "armi.cli.gridGui.GridGuiEntryPoint.settingsArgument"]], "migrateinputs (class in armi.cli.migrateinputs)": [[65, "armi.cli.migrateInputs.MigrateInputs"]], "addoptions() (armi.cli.migrateinputs.migrateinputs method)": [[65, "armi.cli.migrateInputs.MigrateInputs.addOptions"]], "armi.cli.migrateinputs": [[65, "module-armi.cli.migrateInputs"]], "invoke() (armi.cli.migrateinputs.migrateinputs method)": [[65, "armi.cli.migrateInputs.MigrateInputs.invoke"]], "name (armi.cli.migrateinputs.migrateinputs attribute)": [[65, "armi.cli.migrateInputs.MigrateInputs.name"]], "settingsargument (armi.cli.migrateinputs.migrateinputs attribute)": [[65, "armi.cli.migrateInputs.MigrateInputs.settingsArgument"]], "modifycasesettingscommand (class in armi.cli.modify)": [[66, "armi.cli.modify.ModifyCaseSettingsCommand"]], "addoptions() (armi.cli.modify.modifycasesettingscommand method)": [[66, "armi.cli.modify.ModifyCaseSettingsCommand.addOptions"]], "armi.cli.modify": [[66, "module-armi.cli.modify"]], "invoke() (armi.cli.modify.modifycasesettingscommand method)": [[66, "armi.cli.modify.ModifyCaseSettingsCommand.invoke"]], "name (armi.cli.modify.modifycasesettingscommand attribute)": [[66, "armi.cli.modify.ModifyCaseSettingsCommand.name"]], "settingsargument (armi.cli.modify.modifycasesettingscommand attribute)": [[66, "armi.cli.modify.ModifyCaseSettingsCommand.settingsArgument"]], "reportsentrypoint (class in armi.cli.reportsentrypoint)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint"]], "addoptions() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint.addOptions"]], "armi.cli.reportsentrypoint": [[67, "module-armi.cli.reportsEntryPoint"]], "createreportfromsettings() (in module armi.cli.reportsentrypoint)": [[67, "armi.cli.reportsEntryPoint.createReportFromSettings"]], "description (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint.description"]], "invoke() (armi.cli.reportsentrypoint.reportsentrypoint method)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint.invoke"]], "name (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint.name"]], "settingsargument (armi.cli.reportsentrypoint.reportsentrypoint attribute)": [[67, "armi.cli.reportsEntryPoint.ReportsEntryPoint.settingsArgument"]], "runentrypoint (class in armi.cli.run)": [[68, "armi.cli.run.RunEntryPoint"]], "addoptions() (armi.cli.run.runentrypoint method)": [[68, "armi.cli.run.RunEntryPoint.addOptions"]], "armi.cli.run": [[68, "module-armi.cli.run"]], "invoke() (armi.cli.run.runentrypoint method)": [[68, "armi.cli.run.RunEntryPoint.invoke"]], "name (armi.cli.run.runentrypoint attribute)": [[68, "armi.cli.run.RunEntryPoint.name"]], "settingsargument (armi.cli.run.runentrypoint attribute)": [[68, "armi.cli.run.RunEntryPoint.settingsArgument"]], "runsuitecommand (class in armi.cli.runsuite)": [[69, "armi.cli.runSuite.RunSuiteCommand"]], "addoptions() (armi.cli.runsuite.runsuitecommand method)": [[69, "armi.cli.runSuite.RunSuiteCommand.addOptions"]], "armi.cli.runsuite": [[69, "module-armi.cli.runSuite"]], "invoke() (armi.cli.runsuite.runsuitecommand method)": [[69, "armi.cli.runSuite.RunSuiteCommand.invoke"]], "name (armi.cli.runsuite.runsuitecommand attribute)": [[69, "armi.cli.runSuite.RunSuiteCommand.name"]], "settingsargument (armi.cli.runsuite.runsuitecommand attribute)": [[69, "armi.cli.runSuite.RunSuiteCommand.settingsArgument"]], "armi.cli.tests": [[70, "module-armi.cli.tests"]], "testcheckinputentrypoint (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint"]], "testclonearmiruncommandbatch (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch"]], "testclonesuitecommand (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand"]], "testcomparecases (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareCases"]], "testcompareisotxslibsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint"]], "testcomparesuites (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareSuites"]], "testconvertdb (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestConvertDB"]], "testexpandblueprints (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints"]], "testextractinputs (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestExtractInputs"]], "testinitializationentrypoints (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints"]], "testinjectinputs (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestInjectInputs"]], "testmigrateinputs (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs"]], "testmodifycasesettingscommand (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand"]], "testreportsentrypoint (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint"]], "testrunentrypoint (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint"]], "testrunsuitecommand (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand"]], "testvisfileentrypointcommand (class in armi.cli.tests.test_runentrypoint)": [[71, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand"]], "armi.cli.tests.test_runentrypoint": [[71, "module-armi.cli.tests.test_runEntryPoint"]], "test_checkinputentrypointbasics() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointBasics"]], "test_checkinputentrypointinvoke() (armi.cli.tests.test_runentrypoint.testcheckinputentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCheckInputEntryPoint.test_checkInputEntryPointInvoke"]], "test_clonearmiruncommandbatchbasics() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchBasics"]], "test_clonearmiruncommandbatchinvokemedium() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeMedium"]], "test_clonearmiruncommandbatchinvokeshort() (armi.cli.tests.test_runentrypoint.testclonearmiruncommandbatch method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneArmiRunCommandBatch.test_cloneArmiRunCommandBatchInvokeShort"]], "test_clonesuitecommandbasics() (armi.cli.tests.test_runentrypoint.testclonesuitecommand method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCloneSuiteCommand.test_cloneSuiteCommandBasics"]], "test_comparecasesbasics() (armi.cli.tests.test_runentrypoint.testcomparecases method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareCases.test_compareCasesBasics"]], "test_compareisotxslibsbasics() (armi.cli.tests.test_runentrypoint.testcompareisotxslibsentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareIsotxsLibsEntryPoint.test_compareIsotxsLibsBasics"]], "test_comparesuitesbasics() (armi.cli.tests.test_runentrypoint.testcomparesuites method)": [[71, "armi.cli.tests.test_runEntryPoint.TestCompareSuites.test_compareSuitesBasics"]], "test_convertdbbasics() (armi.cli.tests.test_runentrypoint.testconvertdb method)": [[71, "armi.cli.tests.test_runEntryPoint.TestConvertDB.test_convertDbBasics"]], "test_convertdboutputnodes() (armi.cli.tests.test_runentrypoint.testconvertdb method)": [[71, "armi.cli.tests.test_runEntryPoint.TestConvertDB.test_convertDbOutputNodes"]], "test_convertdboutputversion() (armi.cli.tests.test_runentrypoint.testconvertdb method)": [[71, "armi.cli.tests.test_runEntryPoint.TestConvertDB.test_convertDbOutputVersion"]], "test_entrypointinitialization() (armi.cli.tests.test_runentrypoint.testinitializationentrypoints method)": [[71, "armi.cli.tests.test_runEntryPoint.TestInitializationEntryPoints.test_entryPointInitialization"]], "test_executecommand() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_executeCommand"]], "test_expandblueprintsbasics() (armi.cli.tests.test_runentrypoint.testexpandblueprints method)": [[71, "armi.cli.tests.test_runEntryPoint.TestExpandBlueprints.test_expandBlueprintsBasics"]], "test_extractinputsbasics() (armi.cli.tests.test_runentrypoint.testextractinputs method)": [[71, "armi.cli.tests.test_runEntryPoint.TestExtractInputs.test_extractInputsBasics"]], "test_injectinputsbasics() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[71, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsBasics"]], "test_injectinputsinvokeignore() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[71, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeIgnore"]], "test_injectinputsinvokenodata() (armi.cli.tests.test_runentrypoint.testinjectinputs method)": [[71, "armi.cli.tests.test_runEntryPoint.TestInjectInputs.test_injectInputsInvokeNoData"]], "test_migrateinputsbasics() (armi.cli.tests.test_runentrypoint.testmigrateinputs method)": [[71, "armi.cli.tests.test_runEntryPoint.TestMigrateInputs.test_migrateInputsBasics"]], "test_modifycasesettingscommandbasics() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[71, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandBasics"]], "test_modifycasesettingscommandinvoke() (armi.cli.tests.test_runentrypoint.testmodifycasesettingscommand method)": [[71, "armi.cli.tests.test_runEntryPoint.TestModifyCaseSettingsCommand.test_modifyCaseSettingsCommandInvoke"]], "test_reportsentrypointbasics() (armi.cli.tests.test_runentrypoint.testreportsentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestReportsEntryPoint.test_reportsEntryPointBasics"]], "test_runcommandhelp() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runCommandHelp"]], "test_runentrypointbasics() (armi.cli.tests.test_runentrypoint.testrunentrypoint method)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunEntryPoint.test_runEntryPointBasics"]], "test_runsuitecommandbasics() (armi.cli.tests.test_runentrypoint.testrunsuitecommand method)": [[71, "armi.cli.tests.test_runEntryPoint.TestRunSuiteCommand.test_runSuiteCommandBasics"]], "test_visfileentrypointbasics() (armi.cli.tests.test_runentrypoint.testvisfileentrypointcommand method)": [[71, "armi.cli.tests.test_runEntryPoint.TestVisFileEntryPointCommand.test_visFileEntryPointBasics"]], "testrunsuitesuite (class in armi.cli.tests.test_runsuite)": [[72, "armi.cli.tests.test_runSuite.TestRunSuiteSuite"]], "armi.cli.tests.test_runsuite": [[72, "module-armi.cli.tests.test_runSuite"]], "test_listcommand() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[72, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_listCommand"]], "test_showversion() (armi.cli.tests.test_runsuite.testrunsuitesuite method)": [[72, "armi.cli.tests.test_runSuite.TestRunSuiteSuite.test_showVersion"]], "armi.conftest": [[73, "module-armi.conftest"]], "bootstraparmitestenv() (in module armi.conftest)": [[73, "armi.conftest.bootstrapArmiTestEnv"]], "pytest_sessionstart() (in module armi.conftest)": [[73, "armi.conftest.pytest_sessionstart"]], "batch (armi.context.mode attribute)": [[74, "armi.context.Mode.BATCH"]], "gui (armi.context.mode attribute)": [[74, "armi.context.Mode.GUI"]], "interactive (armi.context.mode attribute)": [[74, "armi.context.Mode.INTERACTIVE"]], "mode (class in armi.context)": [[74, "armi.context.Mode"]], "activatelocalfastpath() (in module armi.context)": [[74, "armi.context.activateLocalFastPath"]], "armi.context": [[74, "module-armi.context"]], "cleanallarmitempdirs() (in module armi.context)": [[74, "armi.context.cleanAllArmiTempDirs"]], "cleantempdirs() (in module armi.context)": [[74, "armi.context.cleanTempDirs"]], "disconnectallhdfdbs() (in module armi.context)": [[74, "armi.context.disconnectAllHdfDBs"]], "getfastpath() (in module armi.context)": [[74, "armi.context.getFastPath"]], "setmode() (armi.context.mode class method)": [[74, "armi.context.Mode.setMode"]], "after (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.AFTER"]], "before (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.BEFORE"]], "bookkeeping (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.BOOKKEEPING"]], "critical_control (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.CRITICAL_CONTROL"]], "cross_sections (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.CROSS_SECTIONS"]], "depletion (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.DEPLETION"]], "duplicate (armi.interfaces.interface.distribute attribute)": [[75, "armi.interfaces.Interface.Distribute.DUPLICATE"]], "flux (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.FLUX"]], "fuel_management (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.FUEL_MANAGEMENT"]], "fuel_performance (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.FUEL_PERFORMANCE"]], "inputwriter (class in armi.interfaces)": [[75, "armi.interfaces.InputWriter"]], "interface (class in armi.interfaces)": [[75, "armi.interfaces.Interface"]], "interface.distribute (class in armi.interfaces)": [[75, "armi.interfaces.Interface.Distribute"]], "interfaceinfo (class in armi.interfaces)": [[75, "armi.interfaces.InterfaceInfo"]], "new (armi.interfaces.interface.distribute attribute)": [[75, "armi.interfaces.Interface.Distribute.NEW"]], "outputreader (class in armi.interfaces)": [[75, "armi.interfaces.OutputReader"]], "postprocessing (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.POSTPROCESSING"]], "preprocessing (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.PREPROCESSING"]], "reactivity_coeffs (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.REACTIVITY_COEFFS"]], "skip (armi.interfaces.interface.distribute attribute)": [[75, "armi.interfaces.Interface.Distribute.SKIP"]], "stack_order (class in armi.interfaces)": [[75, "armi.interfaces.STACK_ORDER"]], "thermal_hydraulics (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.THERMAL_HYDRAULICS"]], "transient (armi.interfaces.stack_order attribute)": [[75, "armi.interfaces.STACK_ORDER.TRANSIENT"]], "tightcoupler (class in armi.interfaces)": [[75, "armi.interfaces.TightCoupler"]], "apply() (armi.interfaces.outputreader method)": [[75, "armi.interfaces.OutputReader.apply"]], "armi.interfaces": [[75, "module-armi.interfaces"]], "attachreactor() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.attachReactor"]], "bolforce() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.bolForce"]], "detachreactor() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.detachReactor"]], "distributable() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.distributable"]], "duplicate() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.duplicate"]], "enabled() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.enabled"]], "function (armi.interfaces.interface attribute)": [[75, "armi.interfaces.Interface.function"]], "getactiveinterfaceinfo() (in module armi.interfaces)": [[75, "armi.interfaces.getActiveInterfaceInfo"]], "getdependencies() (armi.interfaces.interface class method)": [[75, "armi.interfaces.Interface.getDependencies"]], "gethistoryparams() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.getHistoryParams"]], "getinputfiles() (armi.interfaces.interface class method)": [[75, "armi.interfaces.Interface.getInputFiles"]], "getinterface() (armi.interfaces.inputwriter method)": [[75, "armi.interfaces.InputWriter.getInterface"]], "getinterface() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.getInterface"]], "getinterface() (armi.interfaces.outputreader method)": [[75, "armi.interfaces.OutputReader.getInterface"]], "getlistdimension() (armi.interfaces.tightcoupler static method)": [[75, "armi.interfaces.TightCoupler.getListDimension"]], "gettightcouplingvalue() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.getTightCouplingValue"]], "interactboc() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactBOC"]], "interactbol() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactBOL"]], "interactcoupled() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactCoupled"]], "interactdistributestate() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactDistributeState"]], "interacteoc() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactEOC"]], "interacteol() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactEOL"]], "interacterror() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactError"]], "interacteverynode() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactEveryNode"]], "interactinit() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.interactInit"]], "interfacecls (armi.interfaces.interfaceinfo attribute)": [[75, "armi.interfaces.InterfaceInfo.interfaceCls"]], "isconverged() (armi.interfaces.tightcoupler method)": [[75, "armi.interfaces.TightCoupler.isConverged"]], "isinterfaceactive() (in module armi.interfaces)": [[75, "armi.interfaces.isInterfaceActive"]], "isrequesteddetailpoint() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.isRequestedDetailPoint"]], "kwargs (armi.interfaces.interfaceinfo attribute)": [[75, "armi.interfaces.InterfaceInfo.kwargs"]], "name (armi.interfaces.interface attribute)": [[75, "armi.interfaces.Interface.name"]], "namecontains() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.nameContains"]], "order (armi.interfaces.interfaceinfo attribute)": [[75, "armi.interfaces.InterfaceInfo.order"]], "postdistributestate() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.postDistributeState"]], "predistributestate() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.preDistributeState"]], "read() (armi.interfaces.outputreader method)": [[75, "armi.interfaces.OutputReader.read"]], "readoutput() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.readOutput"]], "specifyinputs() (armi.interfaces.interface static method)": [[75, "armi.interfaces.Interface.specifyInputs"]], "storepreviousiterationvalue() (armi.interfaces.tightcoupler method)": [[75, "armi.interfaces.TightCoupler.storePreviousIterationValue"]], "updatephysicscouplingcontrol() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.updatePhysicsCouplingControl"]], "workeroperate() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.workerOperate"]], "write() (armi.interfaces.inputwriter method)": [[75, "armi.interfaces.InputWriter.write"]], "writeinput() (armi.interfaces.interface method)": [[75, "armi.interfaces.Interface.writeInput"]], "armi.materials": [[76, "module-armi.materials"]], "importmaterialsintomodulenamespace() (in module armi.materials)": [[76, "armi.materials.importMaterialsIntoModuleNamespace"]], "iterallmaterialclassesinnamespace() (in module armi.materials)": [[76, "armi.materials.iterAllMaterialClassesInNamespace"]], "resolvematerialclassbyname() (in module armi.materials)": [[76, "armi.materials.resolveMaterialClassByName"]], "setmaterialnamespaceorder() (in module armi.materials)": [[76, "armi.materials.setMaterialNamespaceOrder"]], "air (class in armi.materials.air)": [[77, "armi.materials.air.Air"]], "armi.materials.air": [[77, "module-armi.materials.air"]], "heatcapacity() (armi.materials.air.air method)": [[77, "armi.materials.air.Air.heatCapacity"]], "propertyvalidtemperature (armi.materials.air.air attribute)": [[77, "armi.materials.air.Air.propertyValidTemperature"]], "pseudodensity() (armi.materials.air.air method)": [[77, "armi.materials.air.Air.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.air.air method)": [[77, "armi.materials.air.Air.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.air.air method)": [[77, "armi.materials.air.Air.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.air.air method)": [[77, "armi.materials.air.Air.thermalConductivity"]], "alloy200 (class in armi.materials.alloy200)": [[78, "armi.materials.alloy200.Alloy200"]], "armi.materials.alloy200": [[78, "module-armi.materials.alloy200"]], "linearexpansion() (armi.materials.alloy200.alloy200 method)": [[78, "armi.materials.alloy200.Alloy200.linearExpansion"]], "linearexpansiontable (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.linearExpansionTable"]], "linearexpansiontablek (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.linearExpansionTableK"]], "modelconst (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.modelConst"]], "propertyvalidtemperature (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.propertyValidTemperature"]], "referencemaxpercentimpurites (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.referenceMaxPercentImpurites"]], "references (armi.materials.alloy200.alloy200 attribute)": [[78, "armi.materials.alloy200.Alloy200.references"]], "setdefaultmassfracs() (armi.materials.alloy200.alloy200 method)": [[78, "armi.materials.alloy200.Alloy200.setDefaultMassFracs"]], "b4c (class in armi.materials.b4c)": [[79, "armi.materials.b4c.B4C"]], "applyinputparams() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.applyInputParams"]], "armi.materials.b4c": [[79, "module-armi.materials.b4c"]], "density() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.density"]], "enrichednuclide (armi.materials.b4c.b4c attribute)": [[79, "armi.materials.b4c.B4C.enrichedNuclide"]], "getmassenrichmentfromnumenrich() (armi.materials.b4c.b4c static method)": [[79, "armi.materials.b4c.B4C.getMassEnrichmentFromNumEnrich"]], "linearexpansionpercent() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.b4c.b4c attribute)": [[79, "armi.materials.b4c.B4C.propertyValidTemperature"]], "pseudodensity() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.setDefaultMassFracs"]], "setnewmassfracsfrommassenrich() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.setNewMassFracsFromMassEnrich"]], "updatetd() (armi.materials.b4c.b4c method)": [[79, "armi.materials.b4c.B4C.updateTD"]], "be9 (class in armi.materials.be9)": [[80, "armi.materials.be9.Be9"]], "armi.materials.be9": [[80, "module-armi.materials.be9"]], "linearexpansionpercent() (armi.materials.be9.be9 method)": [[80, "armi.materials.be9.Be9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.be9.be9 attribute)": [[80, "armi.materials.be9.Be9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.be9.be9 method)": [[80, "armi.materials.be9.Be9.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.be9.be9 attribute)": [[80, "armi.materials.be9.Be9.thermalScatteringLaws"]], "cah2 (class in armi.materials.cah2)": [[81, "armi.materials.caH2.CaH2"]], "armi.materials.cah2": [[81, "module-armi.materials.caH2"]], "density() (armi.materials.cah2.cah2 method)": [[81, "armi.materials.caH2.CaH2.density"]], "setdefaultmassfracs() (armi.materials.cah2.cah2 method)": [[81, "armi.materials.caH2.CaH2.setDefaultMassFracs"]], "californium (class in armi.materials.californium)": [[82, "armi.materials.californium.Californium"]], "armi.materials.californium": [[82, "module-armi.materials.californium"]], "density() (armi.materials.californium.californium method)": [[82, "armi.materials.californium.Californium.density"]], "setdefaultmassfracs() (armi.materials.californium.californium method)": [[82, "armi.materials.californium.Californium.setDefaultMassFracs"]], "concrete (class in armi.materials.concrete)": [[83, "armi.materials.concrete.Concrete"]], "armi.materials.concrete": [[83, "module-armi.materials.concrete"]], "density() (armi.materials.concrete.concrete method)": [[83, "armi.materials.concrete.Concrete.density"]], "setdefaultmassfracs() (armi.materials.concrete.concrete method)": [[83, "armi.materials.concrete.Concrete.setDefaultMassFracs"]], "cu (class in armi.materials.copper)": [[84, "armi.materials.copper.Cu"]], "armi.materials.copper": [[84, "module-armi.materials.copper"]], "density() (armi.materials.copper.cu method)": [[84, "armi.materials.copper.Cu.density"]], "linearexpansionpercent() (armi.materials.copper.cu method)": [[84, "armi.materials.copper.Cu.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.copper.cu attribute)": [[84, "armi.materials.copper.Cu.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.copper.cu method)": [[84, "armi.materials.copper.Cu.setDefaultMassFracs"]], "cs (class in armi.materials.cs)": [[85, "armi.materials.cs.Cs"]], "armi.materials.cs": [[85, "module-armi.materials.cs"]], "meltingpoint() (armi.materials.cs.cs method)": [[85, "armi.materials.cs.Cs.meltingPoint"]], "pseudodensity() (armi.materials.cs.cs method)": [[85, "armi.materials.cs.Cs.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.cs.cs method)": [[85, "armi.materials.cs.Cs.setDefaultMassFracs"]], "custom (class in armi.materials.custom)": [[86, "armi.materials.custom.Custom"]], "armi.materials.custom": [[86, "module-armi.materials.custom"]], "enrichednuclide (armi.materials.custom.custom attribute)": [[86, "armi.materials.custom.Custom.enrichedNuclide"]], "pseudodensity() (armi.materials.custom.custom method)": [[86, "armi.materials.custom.Custom.pseudoDensity"]], "setmassfrac() (armi.materials.custom.custom method)": [[86, "armi.materials.custom.Custom.setMassFrac"]], "graphite (class in armi.materials.graphite)": [[87, "armi.materials.graphite.Graphite"]], "armi.materials.graphite": [[87, "module-armi.materials.graphite"]], "linearexpansionpercent() (armi.materials.graphite.graphite method)": [[87, "armi.materials.graphite.Graphite.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.graphite.graphite method)": [[87, "armi.materials.graphite.Graphite.setDefaultMassFracs"]], "thermalscatteringlaws (armi.materials.graphite.graphite attribute)": [[87, "armi.materials.graphite.Graphite.thermalScatteringLaws"]], "hafnium (class in armi.materials.hafnium)": [[88, "armi.materials.hafnium.Hafnium"]], "armi.materials.hafnium": [[88, "module-armi.materials.hafnium"]], "density() (armi.materials.hafnium.hafnium method)": [[88, "armi.materials.hafnium.Hafnium.density"]], "setdefaultmassfracs() (armi.materials.hafnium.hafnium method)": [[88, "armi.materials.hafnium.Hafnium.setDefaultMassFracs"]], "hastelloyn (class in armi.materials.hastelloyn)": [[89, "armi.materials.hastelloyN.HastelloyN"]], "armi.materials.hastelloyn": [[89, "module-armi.materials.hastelloyN"]], "heatcapacity() (armi.materials.hastelloyn.hastelloyn method)": [[89, "armi.materials.hastelloyN.HastelloyN.heatCapacity"]], "linearexpansionpercent() (armi.materials.hastelloyn.hastelloyn method)": [[89, "armi.materials.hastelloyN.HastelloyN.linearExpansionPercent"]], "materialintro (armi.materials.hastelloyn.hastelloyn attribute)": [[89, "armi.materials.hastelloyN.HastelloyN.materialIntro"]], "meancoefficientthermalexpansion() (armi.materials.hastelloyn.hastelloyn method)": [[89, "armi.materials.hastelloyN.HastelloyN.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.hastelloyn.hastelloyn attribute)": [[89, "armi.materials.hastelloyN.HastelloyN.propertyValidTemperature"]], "reftempk (armi.materials.hastelloyn.hastelloyn attribute)": [[89, "armi.materials.hastelloyN.HastelloyN.refTempK"]], "setdefaultmassfracs() (armi.materials.hastelloyn.hastelloyn method)": [[89, "armi.materials.hastelloyN.HastelloyN.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.hastelloyn.hastelloyn method)": [[89, "armi.materials.hastelloyN.HastelloyN.thermalConductivity"]], "ht9 (class in armi.materials.ht9)": [[90, "armi.materials.ht9.HT9"]], "armi.materials.ht9": [[90, "module-armi.materials.ht9"]], "linearexpansionpercent() (armi.materials.ht9.ht9 method)": [[90, "armi.materials.ht9.HT9.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.ht9.ht9 attribute)": [[90, "armi.materials.ht9.HT9.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.ht9.ht9 method)": [[90, "armi.materials.ht9.HT9.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.ht9.ht9 method)": [[90, "armi.materials.ht9.HT9.thermalConductivity"]], "inconel (class in armi.materials.inconel)": [[91, "armi.materials.inconel.Inconel"]], "inconel617 (class in armi.materials.inconel)": [[91, "armi.materials.inconel.Inconel617"]], "armi.materials.inconel": [[91, "module-armi.materials.inconel"]], "density() (armi.materials.inconel.inconel method)": [[91, "armi.materials.inconel.Inconel.density"]], "references (armi.materials.inconel.inconel attribute)": [[91, "armi.materials.inconel.Inconel.references"]], "setdefaultmassfracs() (armi.materials.inconel.inconel method)": [[91, "armi.materials.inconel.Inconel.setDefaultMassFracs"]], "inconel600 (class in armi.materials.inconel600)": [[92, "armi.materials.inconel600.Inconel600"]], "armi.materials.inconel600": [[92, "module-armi.materials.inconel600"]], "heatcapacity() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.heatCapacity"]], "linearexpansion() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel600.inconel600 attribute)": [[92, "armi.materials.inconel600.Inconel600.propertyValidTemperature"]], "reftempk (armi.materials.inconel600.inconel600 attribute)": [[92, "armi.materials.inconel600.Inconel600.refTempK"]], "references (armi.materials.inconel600.inconel600 attribute)": [[92, "armi.materials.inconel600.Inconel600.references"]], "setdefaultmassfracs() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel600.inconel600 method)": [[92, "armi.materials.inconel600.Inconel600.thermalConductivity"]], "inconel625 (class in armi.materials.inconel625)": [[93, "armi.materials.inconel625.Inconel625"]], "armi.materials.inconel625": [[93, "module-armi.materials.inconel625"]], "heatcapacity() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.heatCapacity"]], "linearexpansion() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconel625.inconel625 attribute)": [[93, "armi.materials.inconel625.Inconel625.propertyValidTemperature"]], "reftempk (armi.materials.inconel625.inconel625 attribute)": [[93, "armi.materials.inconel625.Inconel625.refTempK"]], "references (armi.materials.inconel625.inconel625 attribute)": [[93, "armi.materials.inconel625.Inconel625.references"]], "setdefaultmassfracs() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconel625.inconel625 method)": [[93, "armi.materials.inconel625.Inconel625.thermalConductivity"]], "inconel800 (class in armi.materials.inconel800)": [[94, "armi.materials.inconel800.Inconel800"]], "armi.materials.inconel800": [[94, "module-armi.materials.inconel800"]], "linearexpansionpercent() (armi.materials.inconel800.inconel800 method)": [[94, "armi.materials.inconel800.Inconel800.linearExpansionPercent"]], "meancoefficientthermalexpansion() (armi.materials.inconel800.inconel800 method)": [[94, "armi.materials.inconel800.Inconel800.meanCoefficientThermalExpansion"]], "propertyvalidtemperature (armi.materials.inconel800.inconel800 attribute)": [[94, "armi.materials.inconel800.Inconel800.propertyValidTemperature"]], "reftempk (armi.materials.inconel800.inconel800 attribute)": [[94, "armi.materials.inconel800.Inconel800.refTempK"]], "setdefaultmassfracs() (armi.materials.inconel800.inconel800 method)": [[94, "armi.materials.inconel800.Inconel800.setDefaultMassFracs"]], "inconelpe16 (class in armi.materials.inconelpe16)": [[95, "armi.materials.inconelPE16.InconelPE16"]], "armi.materials.inconelpe16": [[95, "module-armi.materials.inconelPE16"]], "density() (armi.materials.inconelpe16.inconelpe16 method)": [[95, "armi.materials.inconelPE16.InconelPE16.density"]], "references (armi.materials.inconelpe16.inconelpe16 attribute)": [[95, "armi.materials.inconelPE16.InconelPE16.references"]], "setdefaultmassfracs() (armi.materials.inconelpe16.inconelpe16 method)": [[95, "armi.materials.inconelPE16.InconelPE16.setDefaultMassFracs"]], "inconelx750 (class in armi.materials.inconelx750)": [[96, "armi.materials.inconelX750.InconelX750"]], "armi.materials.inconelx750": [[96, "module-armi.materials.inconelX750"]], "heatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.heatCapacity"]], "linearexpansion() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.linearExpansion"]], "linearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.linearExpansionPercent"]], "polyfitheatcapacity() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.polyfitHeatCapacity"]], "polyfitlinearexpansionpercent() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.polyfitLinearExpansionPercent"]], "polyfitthermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.polyfitThermalConductivity"]], "propertyvalidtemperature (armi.materials.inconelx750.inconelx750 attribute)": [[96, "armi.materials.inconelX750.InconelX750.propertyValidTemperature"]], "reftempk (armi.materials.inconelx750.inconelx750 attribute)": [[96, "armi.materials.inconelX750.InconelX750.refTempK"]], "references (armi.materials.inconelx750.inconelx750 attribute)": [[96, "armi.materials.inconelX750.InconelX750.references"]], "setdefaultmassfracs() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.inconelx750.inconelx750 method)": [[96, "armi.materials.inconelX750.InconelX750.thermalConductivity"]], "lead (class in armi.materials.lead)": [[97, "armi.materials.lead.Lead"]], "armi.materials.lead": [[97, "module-armi.materials.lead"]], "heatcapacity() (armi.materials.lead.lead method)": [[97, "armi.materials.lead.Lead.heatCapacity"]], "propertyvalidtemperature (armi.materials.lead.lead attribute)": [[97, "armi.materials.lead.Lead.propertyValidTemperature"]], "pseudodensity() (armi.materials.lead.lead method)": [[97, "armi.materials.lead.Lead.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.lead.lead method)": [[97, "armi.materials.lead.Lead.setDefaultMassFracs"]], "volumetricexpansion() (armi.materials.lead.lead method)": [[97, "armi.materials.lead.Lead.volumetricExpansion"]], "leadbismuth (class in armi.materials.leadbismuth)": [[98, "armi.materials.leadBismuth.LeadBismuth"]], "armi.materials.leadbismuth": [[98, "module-armi.materials.leadBismuth"]], "dynamicvisc() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.dynamicVisc"]], "heatcapacity() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.heatCapacity"]], "propertyvalidtemperature (armi.materials.leadbismuth.leadbismuth attribute)": [[98, "armi.materials.leadBismuth.LeadBismuth.propertyValidTemperature"]], "pseudodensity() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.thermalConductivity"]], "volumetricexpansion() (armi.materials.leadbismuth.leadbismuth method)": [[98, "armi.materials.leadBismuth.LeadBismuth.volumetricExpansion"]], "lithium (class in armi.materials.lithium)": [[99, "armi.materials.lithium.Lithium"]], "applyinputparams() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.applyInputParams"]], "armi.materials.lithium": [[99, "module-armi.materials.lithium"]], "boilingpoint() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.boilingPoint"]], "enrichednuclide (armi.materials.lithium.lithium attribute)": [[99, "armi.materials.lithium.Lithium.enrichedNuclide"]], "heatcapacity() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.heatCapacity"]], "meltingpoint() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.meltingPoint"]], "pseudodensity() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.pseudoDensity"]], "references (armi.materials.lithium.lithium attribute)": [[99, "armi.materials.lithium.Lithium.references"]], "setdefaultmassfracs() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.lithium.lithium method)": [[99, "armi.materials.lithium.Lithium.thermalConductivity"]], "magnesium (class in armi.materials.magnesium)": [[100, "armi.materials.magnesium.Magnesium"]], "armi.materials.magnesium": [[100, "module-armi.materials.magnesium"]], "propertyvalidtemperature (armi.materials.magnesium.magnesium attribute)": [[100, "armi.materials.magnesium.Magnesium.propertyValidTemperature"]], "pseudodensity() (armi.materials.magnesium.magnesium method)": [[100, "armi.materials.magnesium.Magnesium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.magnesium.magnesium method)": [[100, "armi.materials.magnesium.Magnesium.setDefaultMassFracs"]], "data_source (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.DATA_SOURCE"]], "fluid (class in armi.materials.material)": [[101, "armi.materials.material.Fluid"]], "fuelmaterial (class in armi.materials.material)": [[101, "armi.materials.material.FuelMaterial"]], "material (class in armi.materials.material)": [[101, "armi.materials.material.Material"]], "simplesolid (class in armi.materials.material)": [[101, "armi.materials.material.SimpleSolid"]], "adjustmassenrichment() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.adjustMassEnrichment"]], "adjustmassfrac() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.adjustMassFrac"]], "adjusttd() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.adjustTD"]], "applyinputparams() (armi.materials.material.fuelmaterial method)": [[101, "armi.materials.material.FuelMaterial.applyInputParams"]], "applyinputparams() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.applyInputParams"]], "armi.materials.material": [[101, "module-armi.materials.material"]], "backup() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.backUp"]], "checkpropertytemprange() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.checkPropertyTempRange"]], "checktemprange() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.checkTempRange"]], "class1_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.class1_custom_isotopics"]], "class1_wt_frac (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.class1_wt_frac"]], "class2_custom_isotopics (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.class2_custom_isotopics"]], "clearcache() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.clearCache"]], "clearmassfrac() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.clearMassFrac"]], "density() (armi.materials.material.fluid method)": [[101, "armi.materials.material.Fluid.density"]], "density() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.density"]], "density() (armi.materials.material.simplesolid method)": [[101, "armi.materials.material.SimpleSolid.density"]], "densitykgm3() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.densityKgM3"]], "densitytimesheatcapacity() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.densityTimesHeatCapacity"]], "duplicate() (armi.materials.material.fuelmaterial method)": [[101, "armi.materials.material.FuelMaterial.duplicate"]], "duplicate() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.duplicate"]], "enrichednuclide (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.enrichedNuclide"]], "gasporosity (armi.materials.material.material property)": [[101, "armi.materials.material.Material.gasPorosity"]], "getchildren() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getChildren"]], "getchildrenwithflags() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getChildrenWithFlags"]], "getcorrosionrate() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getCorrosionRate"]], "getmassfrac() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getMassFrac"]], "getmassfraccopy() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getMassFracCopy"]], "getname() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getName"]], "getnuclides() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getNuclides"]], "getproperty() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getProperty"]], "gettd() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getTD"]], "gettempchangefordensitychange() (armi.materials.material.fluid method)": [[101, "armi.materials.material.Fluid.getTempChangeForDensityChange"]], "gettempchangefordensitychange() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getTempChangeForDensityChange"]], "gettemperatureatdensity() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getTemperatureAtDensity"]], "getthermalexpansiondensityreduction() (armi.materials.material.fluid method)": [[101, "armi.materials.material.Fluid.getThermalExpansionDensityReduction"]], "getthermalexpansiondensityreduction() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.getThermalExpansionDensityReduction"]], "heatcapacity() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.heatCapacity"]], "linearexpansion() (armi.materials.material.fluid method)": [[101, "armi.materials.material.Fluid.linearExpansion"]], "linearexpansion() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.linearExpansion"]], "linearexpansionfactor() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.linearExpansionFactor"]], "linearexpansionpercent() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.linearExpansionPercent"]], "linearexpansionpercent() (armi.materials.material.simplesolid method)": [[101, "armi.materials.material.SimpleSolid.linearExpansionPercent"]], "liquidporosity (armi.materials.material.material property)": [[101, "armi.materials.material.Material.liquidPorosity"]], "modelconst (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.modelConst"]], "name (armi.materials.material.material property)": [[101, "armi.materials.material.Material.name"]], "propertyvalidtemperature (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.propertyValidTemperature"]], "pseudodensity() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.pseudoDensity"]], "pseudodensity() (armi.materials.material.simplesolid method)": [[101, "armi.materials.material.SimpleSolid.pseudoDensity"]], "pseudodensitykgm3() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.pseudoDensityKgM3"]], "pufrac (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.puFrac"]], "reftempk (armi.materials.material.simplesolid attribute)": [[101, "armi.materials.material.SimpleSolid.refTempK"]], "references (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.references"]], "removenucmassfrac() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.removeNucMassFrac"]], "restorebackup() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.restoreBackup"]], "setdefaultmassfracs() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.setDefaultMassFracs"]], "setmassfrac() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.setMassFrac"]], "thermalconductivity() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.thermalConductivity"]], "thermalscatteringlaws (armi.materials.material.material attribute)": [[101, "armi.materials.material.Material.thermalScatteringLaws"]], "ufrac (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.uFrac"]], "volumetricexpansion() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.volumetricExpansion"]], "yieldstrength() (armi.materials.material.material method)": [[101, "armi.materials.material.Material.yieldStrength"]], "zrfrac (armi.materials.material.fuelmaterial attribute)": [[101, "armi.materials.material.FuelMaterial.zrFrac"]], "mgo (class in armi.materials.mgo)": [[102, "armi.materials.mgO.MgO"]], "armi.materials.mgo": [[102, "module-armi.materials.mgO"]], "linearexpansionpercent() (armi.materials.mgo.mgo method)": [[102, "armi.materials.mgO.MgO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.mgo.mgo attribute)": [[102, "armi.materials.mgO.MgO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.mgo.mgo method)": [[102, "armi.materials.mgO.MgO.setDefaultMassFracs"]], "armi.materials.mixture": [[103, "module-armi.materials.mixture"]], "molybdenum (class in armi.materials.molybdenum)": [[104, "armi.materials.molybdenum.Molybdenum"]], "armi.materials.molybdenum": [[104, "module-armi.materials.molybdenum"]], "density() (armi.materials.molybdenum.molybdenum method)": [[104, "armi.materials.molybdenum.Molybdenum.density"]], "setdefaultmassfracs() (armi.materials.molybdenum.molybdenum method)": [[104, "armi.materials.molybdenum.Molybdenum.setDefaultMassFracs"]], "mox (class in armi.materials.mox)": [[105, "armi.materials.mox.MOX"]], "applyinputparams() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.applyInputParams"]], "armi.materials.mox": [[105, "module-armi.materials.mox"]], "enrichednuclide (armi.materials.mox.mox attribute)": [[105, "armi.materials.mox.MOX.enrichedNuclide"]], "getmassfracpuo2() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.getMassFracPuO2"]], "getmolfracpuo2() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.getMolFracPuO2"]], "meltingpoint() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.meltingPoint"]], "setdefaultmassfracs() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.setDefaultMassFracs"]], "setmassfracpuo2() (armi.materials.mox.mox method)": [[105, "armi.materials.mox.MOX.setMassFracPuO2"]], "nz (class in armi.materials.nz)": [[106, "armi.materials.nZ.NZ"]], "armi.materials.nz": [[106, "module-armi.materials.nZ"]], "density() (armi.materials.nz.nz method)": [[106, "armi.materials.nZ.NZ.density"]], "setdefaultmassfracs() (armi.materials.nz.nz method)": [[106, "armi.materials.nZ.NZ.setDefaultMassFracs"]], "potassium (class in armi.materials.potassium)": [[107, "armi.materials.potassium.Potassium"]], "armi.materials.potassium": [[107, "module-armi.materials.potassium"]], "propertyvalidtemperature (armi.materials.potassium.potassium attribute)": [[107, "armi.materials.potassium.Potassium.propertyValidTemperature"]], "pseudodensity() (armi.materials.potassium.potassium method)": [[107, "armi.materials.potassium.Potassium.pseudoDensity"]], "sc2o3 (class in armi.materials.scandiumoxide)": [[108, "armi.materials.scandiumOxide.Sc2O3"]], "armi.materials.scandiumoxide": [[108, "module-armi.materials.scandiumOxide"]], "linearexpansionpercent() (armi.materials.scandiumoxide.sc2o3 method)": [[108, "armi.materials.scandiumOxide.Sc2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.scandiumoxide.sc2o3 attribute)": [[108, "armi.materials.scandiumOxide.Sc2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.scandiumoxide.sc2o3 method)": [[108, "armi.materials.scandiumOxide.Sc2O3.setDefaultMassFracs"]], "sic (class in armi.materials.sic)": [[109, "armi.materials.siC.SiC"]], "armi.materials.sic": [[109, "module-armi.materials.siC"]], "cumulativelinearexpansion() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.cumulativeLinearExpansion"]], "heatcapacity() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.heatCapacity"]], "meltingpoint() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.meltingPoint"]], "propertyequation (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.propertyEquation"]], "propertynotes (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.propertyNotes"]], "propertyunits (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.propertyUnits"]], "propertyvalidtemperature (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.propertyValidTemperature"]], "pseudodensity() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.pseudoDensity"]], "reftempk (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.refTempK"]], "references (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.references"]], "setdefaultmassfracs() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.sic.sic method)": [[109, "armi.materials.siC.SiC.thermalConductivity"]], "thermalscatteringlaws (armi.materials.sic.sic attribute)": [[109, "armi.materials.siC.SiC.thermalScatteringLaws"]], "sodium (class in armi.materials.sodium)": [[110, "armi.materials.sodium.Sodium"]], "armi.materials.sodium": [[110, "module-armi.materials.sodium"]], "enthalpy() (armi.materials.sodium.sodium method)": [[110, "armi.materials.sodium.Sodium.enthalpy"]], "propertyvalidtemperature (armi.materials.sodium.sodium attribute)": [[110, "armi.materials.sodium.Sodium.propertyValidTemperature"]], "pseudodensity() (armi.materials.sodium.sodium method)": [[110, "armi.materials.sodium.Sodium.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sodium.sodium method)": [[110, "armi.materials.sodium.Sodium.setDefaultMassFracs"]], "specificvolumeliquid() (armi.materials.sodium.sodium method)": [[110, "armi.materials.sodium.Sodium.specificVolumeLiquid"]], "thermalconductivity() (armi.materials.sodium.sodium method)": [[110, "armi.materials.sodium.Sodium.thermalConductivity"]], "nacl (class in armi.materials.sodiumchloride)": [[111, "armi.materials.sodiumChloride.NaCl"]], "armi.materials.sodiumchloride": [[111, "module-armi.materials.sodiumChloride"]], "density() (armi.materials.sodiumchloride.nacl method)": [[111, "armi.materials.sodiumChloride.NaCl.density"]], "setdefaultmassfracs() (armi.materials.sodiumchloride.nacl method)": [[111, "armi.materials.sodiumChloride.NaCl.setDefaultMassFracs"]], "sulfur (class in armi.materials.sulfur)": [[112, "armi.materials.sulfur.Sulfur"]], "applyinputparams() (armi.materials.sulfur.sulfur method)": [[112, "armi.materials.sulfur.Sulfur.applyInputParams"]], "armi.materials.sulfur": [[112, "module-armi.materials.sulfur"]], "propertyvalidtemperature (armi.materials.sulfur.sulfur attribute)": [[112, "armi.materials.sulfur.Sulfur.propertyValidTemperature"]], "pseudodensity() (armi.materials.sulfur.sulfur method)": [[112, "armi.materials.sulfur.Sulfur.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.sulfur.sulfur method)": [[112, "armi.materials.sulfur.Sulfur.setDefaultMassFracs"]], "updatetd() (armi.materials.sulfur.sulfur method)": [[112, "armi.materials.sulfur.Sulfur.updateTD"]], "volumetricexpansion() (armi.materials.sulfur.sulfur method)": [[112, "armi.materials.sulfur.Sulfur.volumetricExpansion"]], "tzm (class in armi.materials.tzm)": [[113, "armi.materials.tZM.TZM"]], "armi.materials.tzm": [[113, "module-armi.materials.tZM"]], "linearexpansionpercent() (armi.materials.tzm.tzm method)": [[113, "armi.materials.tZM.TZM.linearExpansionPercent"]], "percentthermalexpansion (armi.materials.tzm.tzm attribute)": [[113, "armi.materials.tZM.TZM.percentThermalExpansion"]], "propertyvalidtemperature (armi.materials.tzm.tzm attribute)": [[113, "armi.materials.tZM.TZM.propertyValidTemperature"]], "references (armi.materials.tzm.tzm attribute)": [[113, "armi.materials.tZM.TZM.references"]], "setdefaultmassfracs() (armi.materials.tzm.tzm method)": [[113, "armi.materials.tZM.TZM.setDefaultMassFracs"]], "temperaturec (armi.materials.tzm.tzm attribute)": [[113, "armi.materials.tZM.TZM.temperatureC"]], "tantalum (class in armi.materials.tantalum)": [[114, "armi.materials.tantalum.Tantalum"]], "armi.materials.tantalum": [[114, "module-armi.materials.tantalum"]], "density() (armi.materials.tantalum.tantalum method)": [[114, "armi.materials.tantalum.Tantalum.density"]], "setdefaultmassfracs() (armi.materials.tantalum.tantalum method)": [[114, "armi.materials.tantalum.Tantalum.setDefaultMassFracs"]], "armi.materials.tests": [[115, "module-armi.materials.tests"]], "materials__init__tests (class in armi.materials.tests.test__init__)": [[116, "armi.materials.tests.test__init__.Materials__init__Tests"]], "armi.materials.tests.test__init__": [[116, "module-armi.materials.tests.test__init__"]], "bettersubclasscheck() (in module armi.materials.tests.test__init__)": [[116, "armi.materials.tests.test__init__.betterSubClassCheck"]], "test_canaccessclassesfrompackage() (armi.materials.tests.test__init__.materials__init__tests method)": [[116, "armi.materials.tests.test__init__.Materials__init__Tests.test_canAccessClassesFromPackage"]], "test_packageclassesequalmoduleclasses() (armi.materials.tests.test__init__.materials__init__tests method)": [[116, "armi.materials.tests.test__init__.Materials__init__Tests.test_packageClassesEqualModuleClasses"]], "test_air (class in armi.materials.tests.test_air)": [[117, "armi.materials.tests.test_air.Test_Air"]], "armi.materials.tests.test_air": [[117, "module-armi.materials.tests.test_air"]], "test_heatcapacity() (armi.materials.tests.test_air.test_air method)": [[117, "armi.materials.tests.test_air.Test_Air.test_heatCapacity"]], "test_massfrac() (armi.materials.tests.test_air.test_air method)": [[117, "armi.materials.tests.test_air.Test_Air.test_massFrac"]], "test_pseudodensity() (armi.materials.tests.test_air.test_air method)": [[117, "armi.materials.tests.test_air.Test_Air.test_pseudoDensity"]], "test_thermalconductivity() (armi.materials.tests.test_air.test_air method)": [[117, "armi.materials.tests.test_air.Test_Air.test_thermalConductivity"]], "test_validranges() (armi.materials.tests.test_air.test_air method)": [[117, "armi.materials.tests.test_air.Test_Air.test_validRanges"]], "b4c_testcase (class in armi.materials.tests.test_b4c)": [[118, "armi.materials.tests.test_b4c.B4C_TestCase"]], "mat_class (armi.materials.tests.test_b4c.b4c_testcase attribute)": [[118, "armi.materials.tests.test_b4c.B4C_TestCase.MAT_CLASS"]], "armi.materials.tests.test_b4c": [[118, "module-armi.materials.tests.test_b4c"]], "test_propertyvalidtemperature() (armi.materials.tests.test_b4c.b4c_testcase method)": [[118, "armi.materials.tests.test_b4c.B4C_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_b4c.b4c_testcase method)": [[118, "armi.materials.tests.test_b4c.B4C_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_be9.test_be9 attribute)": [[119, "armi.materials.tests.test_be9.Test_Be9.MAT_CLASS"]], "test_be9 (class in armi.materials.tests.test_be9)": [[119, "armi.materials.tests.test_be9.Test_Be9"]], "armi.materials.tests.test_be9": [[119, "module-armi.materials.tests.test_be9"]], "test_propertyvalidtemperature() (armi.materials.tests.test_be9.test_be9 method)": [[119, "armi.materials.tests.test_be9.Test_Be9.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_be9.test_be9 method)": [[119, "armi.materials.tests.test_be9.Test_Be9.test_pseudoDensity"]], "graphite_testcase (class in armi.materials.tests.test_graphite)": [[120, "armi.materials.tests.test_graphite.Graphite_TestCase"]], "mat_class (armi.materials.tests.test_graphite.graphite_testcase attribute)": [[120, "armi.materials.tests.test_graphite.Graphite_TestCase.MAT_CLASS"]], "armi.materials.tests.test_graphite": [[120, "module-armi.materials.tests.test_graphite"]], "test_density() (armi.materials.tests.test_graphite.graphite_testcase method)": [[120, "armi.materials.tests.test_graphite.Graphite_TestCase.test_density"]], "test_linearexpansionpercent() (armi.materials.tests.test_graphite.graphite_testcase method)": [[120, "armi.materials.tests.test_graphite.Graphite_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_graphite.graphite_testcase method)": [[120, "armi.materials.tests.test_graphite.Graphite_TestCase.test_propertyValidTemperature"]], "lithium_testcase (class in armi.materials.tests.test_lithium)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase"]], "mat_class (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.MAT_CLASS"]], "armi.materials.tests.test_lithium": [[121, "module-armi.materials.tests.test_lithium"]], "defaultmassfrac (armi.materials.tests.test_lithium.lithium_testcase attribute)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.defaultMassFrac"]], "test_lithium_material_modifications() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_Lithium_material_modifications"]], "test_boilingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_boilingPoint"]], "test_heatcapacity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_lithium.lithium_testcase method)": [[121, "armi.materials.tests.test_lithium.Lithium_TestCase.test_pseudoDensity"]], "alloy200_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase"]], "cah2_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.CaH2_TestCase"]], "californium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Californium_TestCase"]], "cesium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Cesium_TestCase"]], "copper_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Copper_TestCase"]], "fuelmaterial_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.FuelMaterial_TestCase"]], "hafnium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Hafnium_TestCase"]], "hastelloyn_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase"]], "inconel600_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase"]], "inconel625_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase"]], "inconelx750_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase"]], "inconel_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Inconel_TestCase"]], "leadbismuth_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase"]], "lead_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Lead_TestCase"]], "mat_class (armi.materials.tests.test_materials.alloy200_testcase attribute)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cah2_testcase attribute)": [[122, "armi.materials.tests.test_materials.CaH2_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.californium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Californium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.cesium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Cesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.copper_testcase attribute)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hafnium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Hafnium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.hastelloyn_testcase attribute)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel600_testcase attribute)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconel625_testcase attribute)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.inconelx750_testcase attribute)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.leadbismuth_testcase attribute)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.lead_testcase attribute)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mox_testcase attribute)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesiumoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.magnesium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Magnesium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.mixture_testcase attribute)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.molybdenum_testcase attribute)": [[122, "armi.materials.tests.test_materials.Molybdenum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.nacl_testcase attribute)": [[122, "armi.materials.tests.test_materials.NaCl_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.niobiumzirconium_testcase attribute)": [[122, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.potassium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Potassium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.scandiumoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sodium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.sulfur_testcase attribute)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tzm_testcase attribute)": [[122, "armi.materials.tests.test_materials.TZM_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.tantalum_testcase attribute)": [[122, "armi.materials.tests.test_materials.Tantalum_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thoriumuraniummetal_testcase attribute)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.thorium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uraniumoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.uranium_testcase attribute)": [[122, "armi.materials.tests.test_materials.Uranium_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.void_testcase attribute)": [[122, "armi.materials.tests.test_materials.Void_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.yttriumoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.YttriumOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zincoxide_testcase attribute)": [[122, "armi.materials.tests.test_materials.ZincOxide_TestCase.MAT_CLASS"]], "mat_class (armi.materials.tests.test_materials.zr_testcase attribute)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.MAT_CLASS"]], "mox_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.MOX_TestCase"]], "magnesiumoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase"]], "magnesium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Magnesium_TestCase"]], "materialconstructiontests (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.MaterialConstructionTests"]], "materialfindingtests (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.MaterialFindingTests"]], "mixture_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase"]], "molybdenum_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Molybdenum_TestCase"]], "nacl_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.NaCl_TestCase"]], "niobiumzirconium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase"]], "potassium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Potassium_TestCase"]], "scandiumoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.ScandiumOxide_TestCase"]], "sodium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase"]], "sulfur_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase"]], "tzm_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.TZM_TestCase"]], "tantalum_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Tantalum_TestCase"]], "thoriumoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase"]], "thoriumuraniummetal_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase"]], "thorium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase"]], "uraniumoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase"]], "uranium_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Uranium_TestCase"]], "void_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Void_TestCase"]], "yttriumoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.YttriumOxide_TestCase"]], "zincoxide_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.ZincOxide_TestCase"]], "zr_testcase (class in armi.materials.tests.test_materials)": [[122, "armi.materials.tests.test_materials.Zr_TestCase"]], "armi.materials.tests.test_materials": [[122, "module-armi.materials.tests.test_materials"]], "baseinput (armi.materials.tests.test_materials.fuelmaterial_testcase attribute)": [[122, "armi.materials.tests.test_materials.FuelMaterial_TestCase.baseInput"]], "loadassembly() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[122, "armi.materials.tests.test_materials.FuelMaterial_TestCase.loadAssembly"]], "test_00_applyinputparams() (armi.materials.tests.test_materials.tzm_testcase method)": [[122, "armi.materials.tests.test_materials.TZM_TestCase.test_00_applyInputParams"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_00_setDefaultMassFracs"]], "test_00_setdefaultmassfracs() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_00_setDefaultMassFracs"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_01_linearExpansionPercent"]], "test_01_linearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_01_linearExpansionPercent"]], "test_01_pseudodensity() (armi.materials.tests.test_materials.tzm_testcase method)": [[122, "armi.materials.tests.test_materials.TZM_TestCase.test_01_pseudoDensity"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_02_linearExpansion"]], "test_02_linearexpansion() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_02_linearExpansion"]], "test_02_linearexpansionpercent() (armi.materials.tests.test_materials.tzm_testcase method)": [[122, "armi.materials.tests.test_materials.TZM_TestCase.test_02_linearExpansionPercent"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_03_pseudoDensity"]], "test_03_pseudodensity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_03_pseudoDensity"]], "test_iconel800_linearexpansion() (armi.materials.tests.test_materials.inconel_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel_TestCase.test_Iconel800_linearExpansion"]], "test_adjustmassenrichment() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_adjustMassEnrichment"]], "test_applyinputparams() (armi.materials.tests.test_materials.mox_testcase method)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_applyInputParams"]], "test_applyinputparams() (armi.materials.tests.test_materials.uranium_testcase method)": [[122, "armi.materials.tests.test_materials.Uranium_TestCase.test_applyInputParams"]], "test_class1class2_class1_wt_frac() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[122, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_class1_wt_frac"]], "test_class1class2_classx_custom_isotopics() (armi.materials.tests.test_materials.fuelmaterial_testcase method)": [[122, "armi.materials.tests.test_materials.FuelMaterial_TestCase.test_class1Class2_classX_custom_isotopics"]], "test_density() (armi.materials.tests.test_materials.mox_testcase method)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.mixture_testcase method)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.nacl_testcase method)": [[122, "armi.materials.tests.test_materials.NaCl_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.void_testcase method)": [[122, "armi.materials.tests.test_materials.Void_TestCase.test_density"]], "test_density() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_density"]], "test_densityneverchanges() (armi.materials.tests.test_materials.copper_testcase method)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.test_densityNeverChanges"]], "test_densitytimesheatcapactiy() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_densityTimesHeatCapactiy"]], "test_duplicate() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_duplicate"]], "test_dynamicvisc() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_dynamicVisc"]], "test_enthalpy() (armi.materials.tests.test_materials.sodium_testcase method)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.test_enthalpy"]], "test_findmaterial() (armi.materials.tests.test_materials.materialfindingtests method)": [[122, "armi.materials.tests.test_materials.MaterialFindingTests.test_findMaterial"]], "test_getchildren() (armi.materials.tests.test_materials.copper_testcase method)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildren"]], "test_getchildrenwithflags() (armi.materials.tests.test_materials.copper_testcase method)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.test_getChildrenWithFlags"]], "test_getcorrosionrate() (armi.materials.tests.test_materials.californium_testcase method)": [[122, "armi.materials.tests.test_materials.Californium_TestCase.test_getCorrosionRate"]], "test_getdensityexpansion3d() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getDensityExpansion3D"]], "test_getmassfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.test_getMassFracPuO2"]], "test_getmeltingpoint() (armi.materials.tests.test_materials.mox_testcase method)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.test_getMeltingPoint"]], "test_getmolfracpuo2() (armi.materials.tests.test_materials.mox_testcase method)": [[122, "armi.materials.tests.test_materials.MOX_TestCase.test_getMolFracPuO2"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_getTempChangeForDensityChange"]], "test_gettempchangefordensitychange() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTempChangeForDensityChange"]], "test_gettemperatureatdensity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_getTemperatureAtDensity"]], "test_heatcapacity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_heatCapacity"]], "test_heatcapacity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_heatCapacity"]], "test_linearexpansion() (armi.materials.tests.test_materials.alloy200_testcase method)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.mixture_testcase method)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.void_testcase method)": [[122, "armi.materials.tests.test_materials.Void_TestCase.test_linearExpansion"]], "test_linearexpansion() (armi.materials.tests.test_materials.zr_testcase method)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansion"]], "test_linearexpansionhotter() (armi.materials.tests.test_materials.alloy200_testcase method)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase.test_linearExpansionHotter"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.copper_testcase method)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_linearExpansionPercent"]], "test_linearexpansionpercent() (armi.materials.tests.test_materials.zr_testcase method)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.test_linearExpansionPercent"]], "test_material_initialization() (armi.materials.tests.test_materials.materialconstructiontests method)": [[122, "armi.materials.tests.test_materials.MaterialConstructionTests.test_material_initialization"]], "test_meancoefficientthermalexpansion() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_meanCoefficientThermalExpansion"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_meltingPoint"]], "test_meltingpoint() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_meltingPoint"]], "test_nicklecontent() (armi.materials.tests.test_materials.alloy200_testcase method)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase.test_nickleContent"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitHeatCapacity"]], "test_polyfitheatcapacity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitHeatCapacity"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitlinearexpansionpercent() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitLinearExpansionPercent"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_polyfitThermalConductivity"]], "test_polyfitthermalconductivity() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_polyfitThermalConductivity"]], "test_porosities() (armi.materials.tests.test_materials.californium_testcase method)": [[122, "armi.materials.tests.test_materials.Californium_TestCase.test_porosities"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.alloy200_testcase method)": [[122, "armi.materials.tests.test_materials.Alloy200_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cah2_testcase method)": [[122, "armi.materials.tests.test_materials.CaH2_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.californium_testcase method)": [[122, "armi.materials.tests.test_materials.Californium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.cesium_testcase method)": [[122, "armi.materials.tests.test_materials.Cesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hafnium_testcase method)": [[122, "armi.materials.tests.test_materials.Hafnium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel600_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel600_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel625_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel625_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconelx750_testcase method)": [[122, "armi.materials.tests.test_materials.InconelX750_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.inconel_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.magnesium_testcase method)": [[122, "armi.materials.tests.test_materials.Magnesium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.mixture_testcase method)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[122, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.nacl_testcase method)": [[122, "armi.materials.tests.test_materials.NaCl_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[122, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.potassium_testcase method)": [[122, "armi.materials.tests.test_materials.Potassium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sodium_testcase method)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.sulfur_testcase method)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tzm_testcase method)": [[122, "armi.materials.tests.test_materials.TZM_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.tantalum_testcase method)": [[122, "armi.materials.tests.test_materials.Tantalum_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.uranium_testcase method)": [[122, "armi.materials.tests.test_materials.Uranium_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.void_testcase method)": [[122, "armi.materials.tests.test_materials.Void_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zincoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ZincOxide_TestCase.test_propertyValidTemperature"]], "test_propertyvalidtemperature() (armi.materials.tests.test_materials.zr_testcase method)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_materials.cah2_testcase method)": [[122, "armi.materials.tests.test_materials.CaH2_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.californium_testcase method)": [[122, "armi.materials.tests.test_materials.Californium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.cesium_testcase method)": [[122, "armi.materials.tests.test_materials.Cesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.hafnium_testcase method)": [[122, "armi.materials.tests.test_materials.Hafnium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.inconel_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.MagnesiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.magnesium_testcase method)": [[122, "armi.materials.tests.test_materials.Magnesium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.molybdenum_testcase method)": [[122, "armi.materials.tests.test_materials.Molybdenum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.niobiumzirconium_testcase method)": [[122, "armi.materials.tests.test_materials.NiobiumZirconium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.potassium_testcase method)": [[122, "armi.materials.tests.test_materials.Potassium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.scandiumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ScandiumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sodium_testcase method)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.sulfur_testcase method)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.tantalum_testcase method)": [[122, "armi.materials.tests.test_materials.Tantalum_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.void_testcase method)": [[122, "armi.materials.tests.test_materials.Void_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.yttriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.YttriumOxide_TestCase.test_pseudoDensity"]], "test_pseudodensity() (armi.materials.tests.test_materials.zr_testcase method)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.test_pseudoDensity"]], "test_removenucmassfrac() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_removeNucMassFrac"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.copper_testcase method)": [[122, "armi.materials.tests.test_materials.Copper_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.inconel_testcase method)": [[122, "armi.materials.tests.test_materials.Inconel_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.mixture_testcase method)": [[122, "armi.materials.tests.test_materials.Mixture_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.sulfur_testcase method)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase.test_setDefaultMassFracs"]], "test_setdefaultmassfracs() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_setDefaultMassFracs"]], "test_specificvolumeliquid() (armi.materials.tests.test_materials.sodium_testcase method)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.test_specificVolumeLiquid"]], "test_thermalconductivity() (armi.materials.tests.test_materials.hastelloyn_testcase method)": [[122, "armi.materials.tests.test_materials.HastelloyN_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.sodium_testcase method)": [[122, "armi.materials.tests.test_materials.Sodium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thoriumuraniummetal_testcase method)": [[122, "armi.materials.tests.test_materials.ThoriumUraniumMetal_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.thorium_testcase method)": [[122, "armi.materials.tests.test_materials.Thorium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uraniumoxide_testcase method)": [[122, "armi.materials.tests.test_materials.UraniumOxide_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.uranium_testcase method)": [[122, "armi.materials.tests.test_materials.Uranium_TestCase.test_thermalConductivity"]], "test_thermalconductivity() (armi.materials.tests.test_materials.zr_testcase method)": [[122, "armi.materials.tests.test_materials.Zr_TestCase.test_thermalConductivity"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.leadbismuth_testcase method)": [[122, "armi.materials.tests.test_materials.LeadBismuth_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.lead_testcase method)": [[122, "armi.materials.tests.test_materials.Lead_TestCase.test_volumetricExpansion"]], "test_volumetricexpansion() (armi.materials.tests.test_materials.sulfur_testcase method)": [[122, "armi.materials.tests.test_materials.Sulfur_TestCase.test_volumetricExpansion"]], "mat_class (armi.materials.tests.test_sic.test_sic attribute)": [[123, "armi.materials.tests.test_sic.Test_SiC.MAT_CLASS"]], "test_sic (class in armi.materials.tests.test_sic)": [[123, "armi.materials.tests.test_sic.Test_SiC"]], "armi.materials.tests.test_sic": [[123, "module-armi.materials.tests.test_sic"]], "test_heatcapacity() (armi.materials.tests.test_sic.test_sic method)": [[123, "armi.materials.tests.test_sic.Test_SiC.test_heatCapacity"]], "test_meltingpoint() (armi.materials.tests.test_sic.test_sic method)": [[123, "armi.materials.tests.test_sic.Test_SiC.test_meltingPoint"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sic.test_sic method)": [[123, "armi.materials.tests.test_sic.Test_SiC.test_propertyValidTemperature"]], "test_pseudodensity() (armi.materials.tests.test_sic.test_sic method)": [[123, "armi.materials.tests.test_sic.Test_SiC.test_pseudoDensity"]], "mat_class (armi.materials.tests.test_sulfur.sulfur_testcase attribute)": [[124, "armi.materials.tests.test_sulfur.Sulfur_TestCase.MAT_CLASS"]], "sulfur_testcase (class in armi.materials.tests.test_sulfur)": [[124, "armi.materials.tests.test_sulfur.Sulfur_TestCase"]], "armi.materials.tests.test_sulfur": [[124, "module-armi.materials.tests.test_sulfur"]], "test_propertyvalidtemperature() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[124, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_propertyValidTemperature"]], "test_sulfur_density_frac() (armi.materials.tests.test_sulfur.sulfur_testcase method)": [[124, "armi.materials.tests.test_sulfur.Sulfur_TestCase.test_sulfur_density_frac"]], "mat_class (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase attribute)": [[125, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.MAT_CLASS"]], "thoriumoxide_testcase (class in armi.materials.tests.test_thoriumoxide)": [[125, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase"]], "armi.materials.tests.test_thoriumoxide": [[125, "module-armi.materials.tests.test_thoriumOxide"]], "test_linearexpansionpercent() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_linearExpansionPercent"]], "test_propertyvalidtemperature() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_propertyValidTemperature"]], "test_theoretical_pseudodensity() (armi.materials.tests.test_thoriumoxide.thoriumoxide_testcase method)": [[125, "armi.materials.tests.test_thoriumOxide.ThoriumOxide_TestCase.test_theoretical_pseudoDensity"]], "mat_class (armi.materials.tests.test_uzr.uzr_testcase attribute)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.MAT_CLASS"]], "uzr_testcase (class in armi.materials.tests.test_uzr)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase"]], "armi.materials.tests.test_uzr": [[126, "module-armi.materials.tests.test_uZr"]], "test_density() (armi.materials.tests.test_uzr.uzr_testcase method)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.test_density"]], "test_propertyvalidtemperature() (armi.materials.tests.test_uzr.uzr_testcase method)": [[126, "armi.materials.tests.test_uZr.UZR_TestCase.test_propertyValidTemperature"]], "test_water (class in armi.materials.tests.test_water)": [[127, "armi.materials.tests.test_water.Test_Water"]], "armi.materials.tests.test_water": [[127, "module-armi.materials.tests.test_water"]], "test_massfrac() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_massFrac"]], "test_propertyvalidtemperature() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_propertyValidTemperature"]], "test_validatenames() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_validateNames"]], "test_water_at_boiling() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_water_at_boiling"]], "test_water_at_critcalpoint() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_water_at_critcalPoint"]], "test_water_at_freezing() (armi.materials.tests.test_water.test_water method)": [[127, "armi.materials.tests.test_water.Test_Water.test_water_at_freezing"]], "thu (class in armi.materials.thu)": [[128, "armi.materials.thU.ThU"]], "applyinputparams() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.applyInputParams"]], "armi.materials.thu": [[128, "module-armi.materials.thU"]], "enrichednuclide (armi.materials.thu.thu attribute)": [[128, "armi.materials.thU.ThU.enrichedNuclide"]], "getenrichment() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.getEnrichment"]], "linearexpansion() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.linearExpansion"]], "meltingpoint() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.meltingPoint"]], "propertyvalidtemperature (armi.materials.thu.thu attribute)": [[128, "armi.materials.thU.ThU.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thu.thu method)": [[128, "armi.materials.thU.ThU.thermalConductivity"]], "thorium (class in armi.materials.thorium)": [[129, "armi.materials.thorium.Thorium"]], "armi.materials.thorium": [[129, "module-armi.materials.thorium"]], "linearexpansion() (armi.materials.thorium.thorium method)": [[129, "armi.materials.thorium.Thorium.linearExpansion"]], "meltingpoint() (armi.materials.thorium.thorium method)": [[129, "armi.materials.thorium.Thorium.meltingPoint"]], "propertyvalidtemperature (armi.materials.thorium.thorium attribute)": [[129, "armi.materials.thorium.Thorium.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thorium.thorium method)": [[129, "armi.materials.thorium.Thorium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thorium.thorium method)": [[129, "armi.materials.thorium.Thorium.thermalConductivity"]], "tho2 (class in armi.materials.thoriumoxide)": [[130, "armi.materials.thoriumOxide.ThO2"]], "thoriumoxide (class in armi.materials.thoriumoxide)": [[130, "armi.materials.thoriumOxide.ThoriumOxide"]], "applyinputparams() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.applyInputParams"]], "armi.materials.thoriumoxide": [[130, "module-armi.materials.thoriumOxide"]], "density() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.density"]], "linearexpansion() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.meltingPoint"]], "propertyvalidtemperature (armi.materials.thoriumoxide.thoriumoxide attribute)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.thoriumoxide.thoriumoxide method)": [[130, "armi.materials.thoriumOxide.ThoriumOxide.thermalConductivity"]], "uthzr (class in armi.materials.uthzr)": [[131, "armi.materials.uThZr.UThZr"]], "applyinputparams() (armi.materials.uthzr.uthzr method)": [[131, "armi.materials.uThZr.UThZr.applyInputParams"]], "armi.materials.uthzr": [[131, "module-armi.materials.uThZr"]], "enrichednuclide (armi.materials.uthzr.uthzr attribute)": [[131, "armi.materials.uThZr.UThZr.enrichedNuclide"]], "pseudodensity() (armi.materials.uthzr.uthzr method)": [[131, "armi.materials.uThZr.UThZr.pseudoDensity"]], "setdefaultmassfracs() (armi.materials.uthzr.uthzr method)": [[131, "armi.materials.uThZr.UThZr.setDefaultMassFracs"]], "uzr (class in armi.materials.uzr)": [[132, "armi.materials.uZr.UZr"]], "applyinputparams() (armi.materials.uzr.uzr method)": [[132, "armi.materials.uZr.UZr.applyInputParams"]], "armi.materials.uzr": [[132, "module-armi.materials.uZr"]], "enrichednuclide (armi.materials.uzr.uzr attribute)": [[132, "armi.materials.uZr.UZr.enrichedNuclide"]], "linearexpansionpercent() (armi.materials.uzr.uzr method)": [[132, "armi.materials.uZr.UZr.linearExpansionPercent"]], "setdefaultmassfracs() (armi.materials.uzr.uzr method)": [[132, "armi.materials.uZr.UZr.setDefaultMassFracs"]], "ufracdefault (armi.materials.uzr.uzr attribute)": [[132, "armi.materials.uZr.UZr.uFracDefault"]], "zrfracdefault (armi.materials.uzr.uzr attribute)": [[132, "armi.materials.uZr.UZr.zrFracDefault"]], "uranium (class in armi.materials.uranium)": [[133, "armi.materials.uranium.Uranium"]], "applyinputparams() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.applyInputParams"]], "armi.materials.uranium": [[133, "module-armi.materials.uranium"]], "density() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.density"]], "enrichednuclide (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.enrichedNuclide"]], "heatcapacity() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.heatCapacity"]], "linearexpansion() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.linearExpansion"]], "linearexpansionpercent() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.linearExpansionPercent"]], "materialintro (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.materialIntro"]], "meltingpoint() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.meltingPoint"]], "propertyequation (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.propertyEquation"]], "propertynotes (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.propertyNotes"]], "propertyrawdata (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.propertyRawData"]], "propertyunits (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.propertyUnits"]], "propertyvalidtemperature (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.propertyValidTemperature"]], "pseudodensity() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.pseudoDensity"]], "refdens (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.refDens"]], "references (armi.materials.uranium.uranium attribute)": [[133, "armi.materials.uranium.Uranium.references"]], "setdefaultmassfracs() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uranium.uranium method)": [[133, "armi.materials.uranium.Uranium.thermalConductivity"]], "ea (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants.Ea"]], "heatcapacityconstants (class in armi.materials.uraniumoxide)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants"]], "reference_temperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.REFERENCE_TEMPERATURE"]], "uo2 (class in armi.materials.uraniumoxide)": [[134, "armi.materials.uraniumOxide.UO2"]], "uraniumoxide (class in armi.materials.uraniumoxide)": [[134, "armi.materials.uraniumOxide.UraniumOxide"]], "applyinputparams() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.applyInputParams"]], "armi.materials.uraniumoxide": [[134, "module-armi.materials.uraniumOxide"]], "c1 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants.c1"]], "c2 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants.c2"]], "c3 (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants.c3"]], "density() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.density"]], "enrichednuclide (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.enrichedNuclide"]], "heatcapacity() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.heatCapacity"]], "heatcapacityconstants (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.heatCapacityConstants"]], "linearexpansion() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.linearExpansion"]], "linearexpansionpercent() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.linearExpansionPercent"]], "meltingpoint() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.meltingPoint"]], "propertyunits (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.propertyUnits"]], "propertyvalidtemperature (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.propertyValidTemperature"]], "references (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.references"]], "setdefaultmassfracs() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.uraniumoxide.uraniumoxide method)": [[134, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivity"]], "thermalconductivitytable (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTable"]], "thermalconductivitytablek (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.thermalConductivityTableK"]], "thermalscatteringlaws (armi.materials.uraniumoxide.uraniumoxide attribute)": [[134, "armi.materials.uraniumOxide.UraniumOxide.thermalScatteringLaws"]], "theta (armi.materials.uraniumoxide.heatcapacityconstants attribute)": [[134, "armi.materials.uraniumOxide.HeatCapacityConstants.theta"]], "void (class in armi.materials.void)": [[135, "armi.materials.void.Void"]], "armi.materials.void": [[135, "module-armi.materials.void"]], "density() (armi.materials.void.void method)": [[135, "armi.materials.void.Void.density"]], "pseudodensity() (armi.materials.void.void method)": [[135, "armi.materials.void.Void.pseudoDensity"]], "alpha_0 (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.ALPHA_0"]], "density_critical_gpercubiccentimeter (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.DENSITY_CRITICAL_GPERCUBICCENTIMETER"]], "density_critical_kgpercubicmeter (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.DENSITY_CRITICAL_KGPERCUBICMETER"]], "phi_0 (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.PHI_0"]], "saturatedsteam (class in armi.materials.water)": [[136, "armi.materials.water.SaturatedSteam"]], "saturatedwater (class in armi.materials.water)": [[136, "armi.materials.water.SaturatedWater"]], "temperature_critical_k (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.TEMPERATURE_CRITICAL_K"]], "vapor_pressure_critical_mpa (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_MPA"]], "vapor_pressure_critical_pa (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.VAPOR_PRESSURE_CRITICAL_PA"]], "water (class in armi.materials.water)": [[136, "armi.materials.water.Water"]], "armi.materials.water": [[136, "module-armi.materials.water"]], "auxiliaryquantityspecificenthalpy() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.auxiliaryQuantitySpecificEnthalpy"]], "auxiliaryquantityspecificentropy() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.auxiliaryQuantitySpecificEntropy"]], "d (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.d"]], "enthalpy() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.enthalpy"]], "entropy() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.entropy"]], "pseudodensity() (armi.materials.water.saturatedsteam method)": [[136, "armi.materials.water.SaturatedSteam.pseudoDensity"]], "pseudodensity() (armi.materials.water.saturatedwater method)": [[136, "armi.materials.water.SaturatedWater.pseudoDensity"]], "pseudodensity() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.pseudoDensity"]], "references (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.references"]], "setdefaultmassfracs() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.setDefaultMassFracs"]], "tau() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.tau"]], "thermalscatteringlaws (armi.materials.water.water attribute)": [[136, "armi.materials.water.Water.thermalScatteringLaws"]], "theta() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.theta"]], "vaporpressure() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.vaporPressure"]], "vaporpressureprime() (armi.materials.water.water method)": [[136, "armi.materials.water.Water.vaporPressurePrime"]], "y2o3 (class in armi.materials.yttriumoxide)": [[137, "armi.materials.yttriumOxide.Y2O3"]], "armi.materials.yttriumoxide": [[137, "module-armi.materials.yttriumOxide"]], "linearexpansionpercent() (armi.materials.yttriumoxide.y2o3 method)": [[137, "armi.materials.yttriumOxide.Y2O3.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.yttriumoxide.y2o3 attribute)": [[137, "armi.materials.yttriumOxide.Y2O3.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.yttriumoxide.y2o3 method)": [[137, "armi.materials.yttriumOxide.Y2O3.setDefaultMassFracs"]], "zno (class in armi.materials.zincoxide)": [[138, "armi.materials.zincOxide.ZnO"]], "armi.materials.zincoxide": [[138, "module-armi.materials.zincOxide"]], "density() (armi.materials.zincoxide.zno method)": [[138, "armi.materials.zincOxide.ZnO.density"]], "linearexpansionpercent() (armi.materials.zincoxide.zno method)": [[138, "armi.materials.zincOxide.ZnO.linearExpansionPercent"]], "propertyvalidtemperature (armi.materials.zincoxide.zno attribute)": [[138, "armi.materials.zincOxide.ZnO.propertyValidTemperature"]], "setdefaultmassfracs() (armi.materials.zincoxide.zno method)": [[138, "armi.materials.zincOxide.ZnO.setDefaultMassFracs"]], "zr (class in armi.materials.zr)": [[139, "armi.materials.zr.Zr"]], "armi.materials.zr": [[139, "module-armi.materials.zr"]], "linearexpansion() (armi.materials.zr.zr method)": [[139, "armi.materials.zr.Zr.linearExpansion"]], "linearexpansionpercent() (armi.materials.zr.zr method)": [[139, "armi.materials.zr.Zr.linearExpansionPercent"]], "linearexpansiontable (armi.materials.zr.zr attribute)": [[139, "armi.materials.zr.Zr.linearExpansionTable"]], "linearexpansiontablek (armi.materials.zr.zr attribute)": [[139, "armi.materials.zr.Zr.linearExpansionTableK"]], "propertyvalidtemperature (armi.materials.zr.zr attribute)": [[139, "armi.materials.zr.Zr.propertyValidTemperature"]], "reftempk (armi.materials.zr.zr attribute)": [[139, "armi.materials.zr.Zr.refTempK"]], "references (armi.materials.zr.zr attribute)": [[139, "armi.materials.zr.Zr.references"]], "setdefaultmassfracs() (armi.materials.zr.zr method)": [[139, "armi.materials.zr.Zr.setDefaultMassFracs"]], "thermalconductivity() (armi.materials.zr.zr method)": [[139, "armi.materials.zr.Zr.thermalConductivity"]], "armi.meta": [[140, "module-armi.meta"]], "distributestateaction (class in armi.mpiactions)": [[141, "armi.mpiActions.DistributeStateAction"]], "distributionaction (class in armi.mpiactions)": [[141, "armi.mpiActions.DistributionAction"]], "mpiaction (class in armi.mpiactions)": [[141, "armi.mpiActions.MpiAction"]], "mpiactionerror": [[141, "armi.mpiActions.MpiActionError"]], "armi.mpiactions": [[141, "module-armi.mpiActions"]], "broadcast() (armi.mpiactions.mpiaction method)": [[141, "armi.mpiActions.MpiAction.broadcast"]], "gather() (armi.mpiactions.mpiaction method)": [[141, "armi.mpiActions.MpiAction.gather"]], "invoke() (armi.mpiactions.mpiaction method)": [[141, "armi.mpiActions.MpiAction.invoke"]], "invokeasmaster() (armi.mpiactions.mpiaction class method)": [[141, "armi.mpiActions.MpiAction.invokeAsMaster"]], "invokehook() (armi.mpiactions.distributestateaction method)": [[141, "armi.mpiActions.DistributeStateAction.invokeHook"]], "invokehook() (armi.mpiactions.distributionaction method)": [[141, "armi.mpiActions.DistributionAction.invokeHook"]], "invokehook() (armi.mpiactions.mpiaction method)": [[141, "armi.mpiActions.MpiAction.invokeHook"]], "mpiflatten() (armi.mpiactions.mpiaction static method)": [[141, "armi.mpiActions.MpiAction.mpiFlatten"]], "mpiiter() (armi.mpiactions.mpiaction static method)": [[141, "armi.mpiActions.MpiAction.mpiIter"]], "parallel (armi.mpiactions.mpiaction property)": [[141, "armi.mpiActions.MpiAction.parallel"]], "runactions() (in module armi.mpiactions)": [[141, "armi.mpiActions.runActions"]], "runactionsinserial() (in module armi.mpiactions)": [[141, "armi.mpiActions.runActionsInSerial"]], "armi.nucdirectory": [[142, "module-armi.nucDirectory"]], "actinide (armi.nucdirectory.elements.chemicalgroup attribute)": [[143, "armi.nucDirectory.elements.ChemicalGroup.ACTINIDE"]], "alkaline_earth_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[143, "armi.nucDirectory.elements.ChemicalGroup.ALKALINE_EARTH_METAL"]], "alkali_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[143, "armi.nucDirectory.elements.ChemicalGroup.ALKALI_METAL"]], "chemicalgroup (class in armi.nucdirectory.elements)": [[143, "armi.nucDirectory.elements.ChemicalGroup"]], "chemicalphase (class in armi.nucdirectory.elements)": [[143, "armi.nucDirectory.elements.ChemicalPhase"]], "element (class in armi.nucdirectory.elements)": [[143, "armi.nucDirectory.elements.Element"]], "gas (armi.nucdirectory.elements.chemicalphase attribute)": [[143, "armi.nucDirectory.elements.ChemicalPhase.GAS"]], "halogen (armi.nucdirectory.elements.chemicalgroup attribute)": [[143, "armi.nucDirectory.elements.ChemicalGroup.HALOGEN"]], "lanthanide (armi.nucdirectory.elements.chemicalgroup attribute)": [[143, "armi.nucDirectory.elements.ChemicalGroup.LANTHANIDE"]], "liquid (armi.nucdirectory.elements.chemicalphase attribute)": [[143, "armi.nucDirectory.elements.ChemicalPhase.LIQUID"]], "metalloid (armi.nucdirectory.elements.chemicalgroup attribute)": [[143, "armi.nucDirectory.elements.ChemicalGroup.METALLOID"]], "noble_gas (armi.nucdirectory.elements.chemicalgroup attribute)": [[143, "armi.nucDirectory.elements.ChemicalGroup.NOBLE_GAS"]], "nonmetal (armi.nucdirectory.elements.chemicalgroup attribute)": [[143, "armi.nucDirectory.elements.ChemicalGroup.NONMETAL"]], "post_transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[143, "armi.nucDirectory.elements.ChemicalGroup.POST_TRANSITION_METAL"]], "solid (armi.nucdirectory.elements.chemicalphase attribute)": [[143, "armi.nucDirectory.elements.ChemicalPhase.SOLID"]], "transition_metal (armi.nucdirectory.elements.chemicalgroup attribute)": [[143, "armi.nucDirectory.elements.ChemicalGroup.TRANSITION_METAL"]], "unknown (armi.nucdirectory.elements.chemicalgroup attribute)": [[143, "armi.nucDirectory.elements.ChemicalGroup.UNKNOWN"]], "unknown (armi.nucdirectory.elements.chemicalphase attribute)": [[143, "armi.nucDirectory.elements.ChemicalPhase.UNKNOWN"]], "addglobalelement() (in module armi.nucdirectory.elements)": [[143, "armi.nucDirectory.elements.addGlobalElement"]], "append() (armi.nucdirectory.elements.element method)": [[143, "armi.nucDirectory.elements.Element.append"]], "armi.nucdirectory.elements": [[143, "module-armi.nucDirectory.elements"]], "destroyglobalelements() (in module armi.nucdirectory.elements)": [[143, "armi.nucDirectory.elements.destroyGlobalElements"]], "factory() (in module armi.nucdirectory.elements)": [[143, "armi.nucDirectory.elements.factory"]], "getelementz() (in module armi.nucdirectory.elements)": [[143, "armi.nucDirectory.elements.getElementZ"]], "getelementsbychemicalgroup() (in module armi.nucdirectory.elements)": [[143, "armi.nucDirectory.elements.getElementsByChemicalGroup"]], "getelementsbychemicalphase() (in module armi.nucdirectory.elements)": [[143, "armi.nucDirectory.elements.getElementsByChemicalPhase"]], "getname() (in module armi.nucdirectory.elements)": [[143, "armi.nucDirectory.elements.getName"]], "getnaturalisotopics() (armi.nucdirectory.elements.element method)": [[143, "armi.nucDirectory.elements.Element.getNaturalIsotopics"]], "getsymbol() (in module armi.nucdirectory.elements)": [[143, "armi.nucDirectory.elements.getSymbol"]], "isheavymetal() (armi.nucdirectory.elements.element method)": [[143, "armi.nucDirectory.elements.Element.isHeavyMetal"]], "isnaturallyoccurring() (armi.nucdirectory.elements.element method)": [[143, "armi.nucDirectory.elements.Element.isNaturallyOccurring"]], "armi.nucdirectory.nucdir": [[144, "module-armi.nucDirectory.nucDir"]], "getatomicweight() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.getAtomicWeight"]], "getelementname() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.getElementName"]], "getelementsymbol() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.getElementSymbol"]], "getmc2label() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.getMc2Label"]], "getnaturalisotopics() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.getNaturalIsotopics"]], "getnaturalmassisotopics() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.getNaturalMassIsotopics"]], "getnuclide() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.getNuclide"]], "getnuclidefromname() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.getNuclideFromName"]], "getnuclidenames() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.getNuclideNames"]], "getnuclides() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.getNuclides"]], "getthresholddisplacementenergy() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.getThresholdDisplacementEnergy"]], "isfissile() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.isFissile"]], "isheavymetal() (in module armi.nucdirectory.nucdir)": [[144, "armi.nucDirectory.nucDir.isHeavyMetal"]], "decay (armi.nucdirectory.nuclidebases.inuclide attribute)": [[145, "armi.nucDirectory.nuclideBases.INuclide.DECAY"]], "dummynuclidebase (class in armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.DummyNuclideBase"]], "imcnpnuclide (class in armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.IMcnpNuclide"]], "inuclide (class in armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.INuclide"]], "lumpnuclidebase (class in armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.LumpNuclideBase"]], "naturalnuclidebase (class in armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.NaturalNuclideBase"]], "nuclidebase (class in armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.NuclideBase"]], "nuclideinterface (class in armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.NuclideInterface"]], "nuclidewrapper (class in armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.NuclideWrapper"]], "spontaneous_fission (armi.nucdirectory.nuclidebases.inuclide attribute)": [[145, "armi.nucDirectory.nuclideBases.INuclide.SPONTANEOUS_FISSION"]], "transmutation (armi.nucdirectory.nuclidebases.inuclide attribute)": [[145, "armi.nucDirectory.nuclideBases.INuclide.TRANSMUTATION"]], "addglobalnuclide() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.addGlobalNuclide"]], "armi.nucdirectory.nuclidebases": [[145, "module-armi.nucDirectory.nuclideBases"]], "changelabel() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.changeLabel"]], "destroyglobalnuclides() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.destroyGlobalNuclides"]], "factory() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.factory"]], "fissile (armi.nucdirectory.nuclidebases.inuclide attribute)": [[145, "armi.nucDirectory.nuclideBases.INuclide.fissile"]], "fromname() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.fromName"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[145, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getAAAZZZSId"]], "getaaazzzsid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NuclideBase.getAAAZZZSId"]], "getdatabasename() (armi.nucdirectory.nuclidebases.inuclide method)": [[145, "armi.nucDirectory.nuclideBases.INuclide.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[145, "armi.nucDirectory.nuclideBases.NuclideInterface.getDatabaseName"]], "getdatabasename() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[145, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDatabaseName"]], "getdecay() (armi.nucdirectory.nuclidebases.inuclide method)": [[145, "armi.nucDirectory.nuclideBases.INuclide.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[145, "armi.nucDirectory.nuclideBases.NuclideInterface.getDecay"]], "getdecay() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[145, "armi.nucDirectory.nuclideBases.NuclideWrapper.getDecay"]], "getdepletablenuclides() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.getDepletableNuclides"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getEndfMatNum"]], "getendfmatnum() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NuclideBase.getEndfMatNum"]], "getisotopics() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.getIsotopics"]], "getmcc2id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[145, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc2Id"]], "getmcc2id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[145, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc2Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NuclideBase.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[145, "armi.nucDirectory.nuclideBases.NuclideInterface.getMcc3Id"]], "getmcc3id() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[145, "armi.nucDirectory.nuclideBases.NuclideWrapper.getMcc3Id"]], "getmcnpid() (armi.nucdirectory.nuclidebases.imcnpnuclide method)": [[145, "armi.nucDirectory.nuclideBases.IMcnpNuclide.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getMcnpId"]], "getmcnpid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NuclideBase.getMcnpId"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.DummyNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.inuclide method)": [[145, "armi.nucDirectory.nuclideBases.INuclide.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.LumpNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NuclideBase.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[145, "armi.nucDirectory.nuclideBases.NuclideInterface.getNaturalIsotopics"]], "getnaturalisotopics() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[145, "armi.nucDirectory.nuclideBases.NuclideWrapper.getNaturalIsotopics"]], "getserpentid() (armi.nucdirectory.nuclidebases.naturalnuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NaturalNuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.NuclideBase.getSerpentId"]], "getserpentid() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[145, "armi.nucDirectory.nuclideBases.NuclideInterface.getSerpentId"]], "imposeburnchain() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.imposeBurnChain"]], "initreachableactivenuclidesthroughburnchain() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.initReachableActiveNuclidesThroughBurnChain"]], "isfissile() (armi.nucdirectory.nuclidebases.inuclide method)": [[145, "armi.nucDirectory.nuclideBases.INuclide.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[145, "armi.nucDirectory.nuclideBases.NuclideInterface.isFissile"]], "isfissile() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[145, "armi.nucDirectory.nuclideBases.NuclideWrapper.isFissile"]], "isheavymetal() (armi.nucdirectory.nuclidebases.dummynuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.DummyNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.inuclide method)": [[145, "armi.nucDirectory.nuclideBases.INuclide.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.lumpnuclidebase method)": [[145, "armi.nucDirectory.nuclideBases.LumpNuclideBase.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclideinterface method)": [[145, "armi.nucDirectory.nuclideBases.NuclideInterface.isHeavyMetal"]], "isheavymetal() (armi.nucdirectory.nuclidebases.nuclidewrapper method)": [[145, "armi.nucDirectory.nuclideBases.NuclideWrapper.isHeavyMetal"]], "ismonoisotopicelement() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.isMonoIsotopicElement"]], "isotopes() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.isotopes"]], "name (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[145, "armi.nucDirectory.nuclideBases.NuclideWrapper.name"]], "single() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.single"]], "weight (armi.nucdirectory.nuclidebases.nuclidewrapper property)": [[145, "armi.nucDirectory.nuclideBases.NuclideWrapper.weight"]], "where() (in module armi.nucdirectory.nuclidebases)": [[145, "armi.nucDirectory.nuclideBases.where"]], "armi.nucdirectory.tests": [[146, "module-armi.nucDirectory.tests"]], "testelement (class in armi.nucdirectory.tests.test_elements)": [[147, "armi.nucDirectory.tests.test_elements.TestElement"]], "armi.nucdirectory.tests.test_elements": [[147, "module-armi.nucDirectory.tests.test_elements"]], "test_abundancesaddtoone() (armi.nucdirectory.tests.test_elements.testelement method)": [[147, "armi.nucDirectory.tests.test_elements.TestElement.test_abundancesAddToOne"]], "test_element_addexistingelementfails() (armi.nucdirectory.tests.test_elements.testelement method)": [[147, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addExistingElementFails"]], "test_element_addedelementappearsinelementlist() (armi.nucdirectory.tests.test_elements.testelement method)": [[147, "armi.nucDirectory.tests.test_elements.TestElement.test_element_addedElementAppearsInElementList"]], "test_element_elementbynamereturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[147, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByNameReturnsElement"]], "test_element_elementbysymbolreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[147, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementBySymbolReturnsElement"]], "test_element_elementbyzreturnselement() (armi.nucdirectory.tests.test_elements.testelement method)": [[147, "armi.nucDirectory.tests.test_elements.TestElement.test_element_elementByZReturnsElement"]], "test_element_getnatrualisotpicsonlyretrievesabundacegt0() (armi.nucdirectory.tests.test_elements.testelement method)": [[147, "armi.nucDirectory.tests.test_elements.TestElement.test_element_getNatrualIsotpicsOnlyRetrievesAbundaceGt0"]], "test_element_isnaturallyoccurring() (armi.nucdirectory.tests.test_elements.testelement method)": [[147, "armi.nucDirectory.tests.test_elements.TestElement.test_element_isNaturallyOccurring"]], "test_elements_elementbulkproperties() (armi.nucdirectory.tests.test_elements.testelement method)": [[147, "armi.nucDirectory.tests.test_elements.TestElement.test_elements_elementBulkProperties"]], "test_isheavymetal() (armi.nucdirectory.tests.test_elements.testelement method)": [[147, "armi.nucDirectory.tests.test_elements.TestElement.test_isHeavyMetal"]], "testnucdirectory (class in armi.nucdirectory.tests.test_nucdirectory)": [[148, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory"]], "armi.nucdirectory.tests.test_nucdirectory": [[148, "module-armi.nucDirectory.tests.test_nucDirectory"]], "test_getdisplacementenergy() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[148, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_getDisplacementEnergy"]], "test_nucdir_getnameforolddashednames() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[148, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNameForOldDashedNames"]], "test_nucdir_getnuclidefromnuclidesnamereturnsnuclide() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[148, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclideFromNuclidesNameReturnsNuclide"]], "test_nucdir_getnuclidesfromforbadname() (armi.nucdirectory.tests.test_nucdirectory.testnucdirectory method)": [[148, "armi.nucDirectory.tests.test_nucDirectory.TestNucDirectory.test_nucDir_getNuclidesFromForBadName"]], "testnuclide (class in armi.nucdirectory.tests.test_nuclidebases)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide"]], "armi.nucdirectory.tests.test_nuclidebases": [[149, "module-armi.nucDirectory.tests.test_nuclideBases"]], "test_aaazzzsnamegenerator() (armi.nucdirectory.tests.test_nuclidebases.test_getaaazzzsid method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.test_getAAAZZZSId.test_AAAZZZSNameGenerator"]], "test_lumpnuclidebase_getnatrualisotopicsdoesnotfail() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_LumpNuclideBase_getNatrualIsotopicsDoesNotFail"]], "test_naturalnuclidebase_getnatrualisotpics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclideBase_getNatrualIsotpics"]], "test_naturalnuclide_atomicweightisaverageofnaturallyoccuringisotopes() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NaturalNuclide_atomicWeightIsAverageOfNaturallyOccuringIsotopes"]], "test_nonmc2nuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_NonMc2Nuclide"]], "test_curiedefinitionwithra226() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_curieDefinitionWithRa226"]], "test_getaaazzzsid (class in armi.nucdirectory.tests.test_nuclidebases)": [[149, "armi.nucDirectory.tests.test_nuclideBases.test_getAAAZZZSId"]], "test_getdecay() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getDecay"]], "test_getendfmatnum() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_getEndfMatNum"]], "test_kryptondecayconstants() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_kryptonDecayConstants"]], "test_loadmcc2data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc2Data"]], "test_loadmcc3data() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_loadMcc3Data"]], "test_nucbase_allabundancesaddtoone() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBase_AllAbundancesAddToOne"]], "test_nucbases_alldatabasenamesareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllDatabaseNamesAreUnique"]], "test_nucbases_alllabelsareunique() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_AllLabelsAreUnique"]], "test_nucbases_am242m() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Am242m"]], "test_nucbases_mc2elementals() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Mc2Elementals"]], "test_nucbases_negativezraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_NegativeZRaisesException"]], "test_nucbases_z295raisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_Z295RaisesException"]], "test_nucbases_databasenamesstartwith_n() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_databaseNamesStartWith_n"]], "test_nucbases_fromnamebadnameraisesexception() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_fromNameBadNameRaisesException"]], "test_nucbases_imposeburnchaindecaybulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainDecayBulkStatistics"]], "test_nucbases_imposeburnchaintransmutationbulkstatistics() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurnChainTransmutationBulkStatistics"]], "test_nucbases_imposeburn_nusf() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_imposeBurn_nuSF"]], "test_nucbases_isheavymetal() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_isHeavyMetal"]], "test_nucbases_labelandnamecollsionsareforsamenuclide() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_labelAndNameCollsionsAreForSameNuclide"]], "test_nucbases_singlefailswithmultiplematches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithMultipleMatches"]], "test_nucbases_singlefailswithnomatches() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleFailsWithNoMatches"]], "test_nucbases_singleisprettyspecific() (armi.nucdirectory.tests.test_nuclidebases.testnuclide method)": [[149, "armi.nucDirectory.tests.test_nuclideBases.TestNuclide.test_nucBases_singleIsPrettySpecific"]], "testthermalscattering (class in armi.nucdirectory.tests.test_thermalscattering)": [[150, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering"]], "armi.nucdirectory.tests.test_thermalscattering": [[150, "module-armi.nucDirectory.tests.test_thermalScattering"]], "buildblockwithtsl() (in module armi.nucdirectory.tests.test_thermalscattering)": [[150, "armi.nucDirectory.tests.test_thermalScattering.buildBlockWithTSL"]], "getnuclidethermalscatteringdata() (in module armi.nucdirectory.tests.test_thermalscattering)": [[150, "armi.nucDirectory.tests.test_thermalScattering.getNuclideThermalScatteringData"]], "test_acecompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[150, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACECompound"]], "test_aceelementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[150, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEElementInCompound"]], "test_aceisotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[150, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_ACEIsotope"]], "test_endf8compound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[150, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Compound"]], "test_endf8elementincompound() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[150, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8ElementInCompound"]], "test_endf8isotope() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[150, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_endf8Isotope"]], "test_failonmultiple() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[150, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_failOnMultiple"]], "test_graphiteonreactor() (armi.nucdirectory.tests.test_thermalscattering.testthermalscattering method)": [[150, "armi.nucDirectory.tests.test_thermalScattering.TestThermalScattering.test_graphiteOnReactor"]], "decaymodetests (class in armi.nucdirectory.tests.test_transmutations)": [[151, "armi.nucDirectory.tests.test_transmutations.DecayModeTests"]], "transmutationtests (class in armi.nucdirectory.tests.test_transmutations)": [[151, "armi.nucDirectory.tests.test_transmutations.TransmutationTests"]], "armi.nucdirectory.tests.test_transmutations": [[151, "module-armi.nucDirectory.tests.test_transmutations"]], "randomstring() (in module armi.nucdirectory.tests.test_transmutations)": [[151, "armi.nucDirectory.tests.test_transmutations.randomString"]], "test_decaymode_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[151, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_invalidReactionTypes"]], "test_decaymode_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.decaymodetests method)": [[151, "armi.nucDirectory.tests.test_transmutations.DecayModeTests.test_DecayMode_validReactionTypes"]], "test_transmutation_invalidreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[151, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_invalidReactionTypes"]], "test_transmutation_productparticle() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[151, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_productParticle"]], "test_transmutation_validreactiontypes() (armi.nucdirectory.tests.test_transmutations.transmutationtests method)": [[151, "armi.nucDirectory.tests.test_transmutations.TransmutationTests.test_Transmutation_validReactionTypes"]], "thermalscattering (class in armi.nucdirectory.thermalscattering)": [[152, "armi.nucDirectory.thermalScattering.ThermalScattering"]], "armi.nucdirectory.thermalscattering": [[152, "module-armi.nucDirectory.thermalScattering"]], "factory() (in module armi.nucdirectory.thermalscattering)": [[152, "armi.nucDirectory.thermalScattering.factory"]], "getsubjectnuclidebases() (armi.nucdirectory.thermalscattering.thermalscattering method)": [[152, "armi.nucDirectory.thermalScattering.ThermalScattering.getSubjectNuclideBases"]], "decaymode (class in armi.nucdirectory.transmutations)": [[153, "armi.nucDirectory.transmutations.DecayMode"]], "transmutable (class in armi.nucdirectory.transmutations)": [[153, "armi.nucDirectory.transmutations.Transmutable"]], "transmutation (class in armi.nucdirectory.transmutations)": [[153, "armi.nucDirectory.transmutations.Transmutation"]], "armi.nucdirectory.transmutations": [[153, "module-armi.nucDirectory.transmutations"]], "getpreferredproduct() (armi.nucdirectory.transmutations.transmutable method)": [[153, "armi.nucDirectory.transmutations.Transmutable.getPreferredProduct"]], "armi.nucleardataio": [[154, "module-armi.nuclearDataIO"]], "getexpectedcompxsfilename() (in module armi.nucleardataio)": [[154, "armi.nuclearDataIO.getExpectedCOMPXSFileName"]], "getexpectedgamisofilename() (in module armi.nucleardataio)": [[154, "armi.nuclearDataIO.getExpectedGAMISOFileName"]], "getexpectedisotxsfilename() (in module armi.nucleardataio)": [[154, "armi.nuclearDataIO.getExpectedISOTXSFileName"]], "getexpectedpmatrxfilename() (in module armi.nucleardataio)": [[154, "armi.nuclearDataIO.getExpectedPMATRXFileName"]], "armi.nucleardataio.cccc": [[155, "module-armi.nuclearDataIO.cccc"]], "asciirecordreader (class in armi.nucleardataio.cccc.cccc)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader"]], "asciirecordwriter (class in armi.nucleardataio.cccc.cccc)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter"]], "binaryrecordreader (class in armi.nucleardataio.cccc.cccc)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader"]], "binaryrecordwriter (class in armi.nucleardataio.cccc.cccc)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter"]], "datacontainer (class in armi.nucleardataio.cccc.cccc)": [[156, "armi.nuclearDataIO.cccc.cccc.DataContainer"]], "implicit_int (in module armi.nucleardataio.cccc.cccc)": [[156, "armi.nuclearDataIO.cccc.cccc.IMPLICIT_INT"]], "iorecord (class in armi.nucleardataio.cccc.cccc)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord"]], "stream (class in armi.nucleardataio.cccc.cccc)": [[156, "armi.nuclearDataIO.cccc.cccc.Stream"]], "streamwithdatacontainer (class in armi.nucleardataio.cccc.cccc)": [[156, "armi.nuclearDataIO.cccc.cccc.StreamWithDataContainer"]], "armi.nucleardataio.cccc.cccc": [[156, "module-armi.nuclearDataIO.cccc.cccc"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.close"]], "close() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.close"]], "close() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.close"]], "count (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.count"]], "createrecord() (armi.nucleardataio.cccc.cccc.stream method)": [[156, "armi.nuclearDataIO.cccc.cccc.Stream.createRecord"]], "getblockbandwidth() (in module armi.nucleardataio.cccc.cccc)": [[156, "armi.nuclearDataIO.cccc.cccc.getBlockBandwidth"]], "maxsize (armi.nucleardataio.cccc.cccc.iorecord attribute)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.maxsize"]], "open() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.open"]], "open() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.open"]], "open() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.open"]], "readascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[156, "armi.nuclearDataIO.cccc.cccc.Stream.readAscii"]], "readbinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[156, "armi.nuclearDataIO.cccc.cccc.Stream.readBinary"]], "readwrite() (armi.nucleardataio.cccc.cccc.stream method)": [[156, "armi.nuclearDataIO.cccc.cccc.Stream.readWrite"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwBool"]], "rwbool() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.rwBool"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwDouble"]], "rwdouble() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDouble"]], "rwdoublematrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.rwDoubleMatrix"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwFloat"]], "rwfloat() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.rwFloat"]], "rwimplicitlytypedmap() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.rwImplicitlyTypedMap"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwInt"]], "rwint() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.rwInt"]], "rwintmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.rwIntMatrix"]], "rwlist() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.rwList"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwLong"]], "rwlong() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwLong"]], "rwmatrix() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.rwMatrix"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.asciirecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.AsciiRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordreader method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordReader.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.binaryrecordwriter method)": [[156, "armi.nuclearDataIO.cccc.cccc.BinaryRecordWriter.rwString"]], "rwstring() (armi.nucleardataio.cccc.cccc.iorecord method)": [[156, "armi.nuclearDataIO.cccc.cccc.IORecord.rwString"]], "writeascii() (armi.nucleardataio.cccc.cccc.stream class method)": [[156, "armi.nuclearDataIO.cccc.cccc.Stream.writeAscii"]], "writebinary() (armi.nucleardataio.cccc.cccc.stream class method)": [[156, "armi.nuclearDataIO.cccc.cccc.Stream.writeBinary"]], "compxsregion (class in armi.nucleardataio.cccc.compxs)": [[157, "armi.nuclearDataIO.cccc.compxs.CompxsRegion"]], "allocatexs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[157, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.allocateXS"]], "armi.nucleardataio.cccc.compxs": [[157, "module-armi.nuclearDataIO.cccc.compxs"]], "compare() (in module armi.nucleardataio.cccc.compxs)": [[157, "armi.nuclearDataIO.cccc.compxs.compare"]], "getxs() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[157, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.getXS"]], "initmetadata() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[157, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.initMetadata"]], "isfissile (armi.nucleardataio.cccc.compxs.compxsregion property)": [[157, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.isFissile"]], "makescatteringmatrices() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[157, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.makeScatteringMatrices"]], "merge() (armi.nucleardataio.cccc.compxs.compxsregion method)": [[157, "armi.nuclearDataIO.cccc.compxs.CompxsRegion.merge"]], "dif3ddata (class in armi.nucleardataio.cccc.dif3d)": [[158, "armi.nuclearDataIO.cccc.dif3d.Dif3dData"]], "dif3dstream (class in armi.nucleardataio.cccc.dif3d)": [[158, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream"]], "armi.nucleardataio.cccc.dif3d": [[158, "module-armi.nuclearDataIO.cccc.dif3d"]], "readwrite() (armi.nucleardataio.cccc.dif3d.dif3dstream method)": [[158, "armi.nuclearDataIO.cccc.dif3d.Dif3dStream.readWrite"]], "delayedneutrondata (class in armi.nucleardataio.cccc.dlayxs)": [[159, "armi.nuclearDataIO.cccc.dlayxs.DelayedNeutronData"]], "dlayxs (class in armi.nucleardataio.cccc.dlayxs)": [[159, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs"]], "g (armi.nucleardataio.cccc.dlayxs.dlayxs property)": [[159, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.G"]], "armi.nucleardataio.cccc.dlayxs": [[159, "module-armi.nuclearDataIO.cccc.dlayxs"]], "compare() (in module armi.nucleardataio.cccc.dlayxs)": [[159, "armi.nuclearDataIO.cccc.dlayxs.compare"]], "generateaveragedelayedneutronconstants() (armi.nucleardataio.cccc.dlayxs.dlayxs method)": [[159, "armi.nuclearDataIO.cccc.dlayxs.Dlayxs.generateAverageDelayedNeutronConstants"]], "readascii() (in module armi.nucleardataio.cccc.dlayxs)": [[159, "armi.nuclearDataIO.cccc.dlayxs.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.dlayxs)": [[159, "armi.nuclearDataIO.cccc.dlayxs.readBinary"]], "writeascii() (in module armi.nucleardataio.cccc.dlayxs)": [[159, "armi.nuclearDataIO.cccc.dlayxs.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.dlayxs)": [[159, "armi.nuclearDataIO.cccc.dlayxs.writeBinary"]], "fixsrc (class in armi.nucleardataio.cccc.fixsrc)": [[160, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC"]], "armi.nucleardataio.cccc.fixsrc": [[160, "module-armi.nuclearDataIO.cccc.fixsrc"]], "readbinary() (in module armi.nucleardataio.cccc.fixsrc)": [[160, "armi.nuclearDataIO.cccc.fixsrc.readBinary"]], "readwrite() (armi.nucleardataio.cccc.fixsrc.fixsrc method)": [[160, "armi.nuclearDataIO.cccc.fixsrc.FIXSRC.readWrite"]], "writebinary() (in module armi.nucleardataio.cccc.fixsrc)": [[160, "armi.nuclearDataIO.cccc.fixsrc.writeBinary"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.gamiso)": [[161, "armi.nuclearDataIO.cccc.gamiso.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.gamiso": [[161, "module-armi.nuclearDataIO.cccc.gamiso"]], "compare() (in module armi.nucleardataio.cccc.gamiso)": [[161, "armi.nuclearDataIO.cccc.gamiso.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.gamiso)": [[161, "armi.nuclearDataIO.cccc.gamiso.compareNuclideXS"]], "geodstdata (class in armi.nucleardataio.cccc.geodst)": [[162, "armi.nuclearDataIO.cccc.geodst.GeodstData"]], "geodststream (class in armi.nucleardataio.cccc.geodst)": [[162, "armi.nuclearDataIO.cccc.geodst.GeodstStream"]], "armi.nucleardataio.cccc.geodst": [[162, "module-armi.nuclearDataIO.cccc.geodst"]], "readwrite() (armi.nucleardataio.cccc.geodst.geodststream method)": [[162, "armi.nuclearDataIO.cccc.geodst.GeodstStream.readWrite"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.isotxs)": [[163, "armi.nuclearDataIO.cccc.isotxs.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.isotxs": [[163, "module-armi.nuclearDataIO.cccc.isotxs"]], "compare() (in module armi.nucleardataio.cccc.isotxs)": [[163, "armi.nuclearDataIO.cccc.isotxs.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.isotxs)": [[163, "armi.nuclearDataIO.cccc.isotxs.compareNuclideXS"]], "compareset() (in module armi.nucleardataio.cccc.isotxs)": [[163, "armi.nuclearDataIO.cccc.isotxs.compareSet"]], "labelsdata (class in armi.nucleardataio.cccc.labels)": [[164, "armi.nuclearDataIO.cccc.labels.LabelsData"]], "labelsstream (class in armi.nucleardataio.cccc.labels)": [[164, "armi.nuclearDataIO.cccc.labels.LabelsStream"]], "armi.nucleardataio.cccc.labels": [[164, "module-armi.nuclearDataIO.cccc.labels"]], "readwrite() (armi.nucleardataio.cccc.labels.labelsstream method)": [[164, "armi.nuclearDataIO.cccc.labels.LabelsStream.readWrite"]], "nhflux (class in armi.nucleardataio.cccc.nhflux)": [[165, "armi.nuclearDataIO.cccc.nhflux.NHFLUX"]], "nafluxstream (class in armi.nucleardataio.cccc.nhflux)": [[165, "armi.nuclearDataIO.cccc.nhflux.NafluxStream"]], "nafluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[165, "armi.nuclearDataIO.cccc.nhflux.NafluxStreamVariant"]], "nhfluxstream (class in armi.nucleardataio.cccc.nhflux)": [[165, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream"]], "nhfluxstreamvariant (class in armi.nucleardataio.cccc.nhflux)": [[165, "armi.nuclearDataIO.cccc.nhflux.NhfluxStreamVariant"]], "armi.nucleardataio.cccc.nhflux": [[165, "module-armi.nuclearDataIO.cccc.nhflux"]], "fluxmoments (armi.nucleardataio.cccc.nhflux.nhflux property)": [[165, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.fluxMoments"]], "getnhfluxreader() (in module armi.nucleardataio.cccc.nhflux)": [[165, "armi.nuclearDataIO.cccc.nhflux.getNhfluxReader"]], "partialcurrentshex (armi.nucleardataio.cccc.nhflux.nhflux property)": [[165, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex"]], "partialcurrentshex_ext (armi.nucleardataio.cccc.nhflux.nhflux property)": [[165, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsHex_ext"]], "partialcurrentsz (armi.nucleardataio.cccc.nhflux.nhflux property)": [[165, "armi.nuclearDataIO.cccc.nhflux.NHFLUX.partialCurrentsZ"]], "readwrite() (armi.nucleardataio.cccc.nhflux.nhfluxstream method)": [[165, "armi.nuclearDataIO.cccc.nhflux.NhfluxStream.readWrite"]], "adddummynuclidestolibrary() (in module armi.nucleardataio.cccc.pmatrx)": [[166, "armi.nuclearDataIO.cccc.pmatrx.addDummyNuclidesToLibrary"]], "armi.nucleardataio.cccc.pmatrx": [[166, "module-armi.nuclearDataIO.cccc.pmatrx"]], "compare() (in module armi.nucleardataio.cccc.pmatrx)": [[166, "armi.nuclearDataIO.cccc.pmatrx.compare"]], "comparenuclidexs() (in module armi.nucleardataio.cccc.pmatrx)": [[166, "armi.nuclearDataIO.cccc.pmatrx.compareNuclideXS"]], "readascii() (in module armi.nucleardataio.cccc.pmatrx)": [[166, "armi.nuclearDataIO.cccc.pmatrx.readAscii"]], "readbinary() (in module armi.nucleardataio.cccc.pmatrx)": [[166, "armi.nuclearDataIO.cccc.pmatrx.readBinary"]], "writeascii() (in module armi.nucleardataio.cccc.pmatrx)": [[166, "armi.nuclearDataIO.cccc.pmatrx.writeAscii"]], "writebinary() (in module armi.nucleardataio.cccc.pmatrx)": [[166, "armi.nuclearDataIO.cccc.pmatrx.writeBinary"]], "pwdintdata (class in armi.nucleardataio.cccc.pwdint)": [[167, "armi.nuclearDataIO.cccc.pwdint.PwdintData"]], "pwdintstream (class in armi.nucleardataio.cccc.pwdint)": [[167, "armi.nuclearDataIO.cccc.pwdint.PwdintStream"]], "armi.nucleardataio.cccc.pwdint": [[167, "module-armi.nuclearDataIO.cccc.pwdint"]], "readwrite() (armi.nucleardataio.cccc.pwdint.pwdintstream method)": [[167, "armi.nuclearDataIO.cccc.pwdint.PwdintStream.readWrite"]], "atfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[168, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream"]], "rtfluxdata (class in armi.nucleardataio.cccc.rtflux)": [[168, "armi.nuclearDataIO.cccc.rtflux.RtfluxData"]], "rtfluxstream (class in armi.nucleardataio.cccc.rtflux)": [[168, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream"]], "armi.nucleardataio.cccc.rtflux": [[168, "module-armi.nuclearDataIO.cccc.rtflux"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.atfluxstream method)": [[168, "armi.nuclearDataIO.cccc.rtflux.AtfluxStream.getEnergyGroupIndex"]], "getenergygroupindex() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[168, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.getEnergyGroupIndex"]], "getfdfluxreader() (in module armi.nucleardataio.cccc.rtflux)": [[168, "armi.nuclearDataIO.cccc.rtflux.getFDFluxReader"]], "groupfluxes (armi.nucleardataio.cccc.rtflux.rtfluxdata attribute)": [[168, "armi.nuclearDataIO.cccc.rtflux.RtfluxData.groupFluxes"]], "readwrite() (armi.nucleardataio.cccc.rtflux.rtfluxstream method)": [[168, "armi.nuclearDataIO.cccc.rtflux.RtfluxStream.readWrite"]], "converged (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[169, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGED"]], "converging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[169, "armi.nuclearDataIO.cccc.rzflux.Convergence.CONVERGING"]], "convergence (class in armi.nucleardataio.cccc.rzflux)": [[169, "armi.nuclearDataIO.cccc.rzflux.Convergence"]], "diverging (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[169, "armi.nuclearDataIO.cccc.rzflux.Convergence.DIVERGING"]], "no_iterations (armi.nucleardataio.cccc.rzflux.convergence attribute)": [[169, "armi.nuclearDataIO.cccc.rzflux.Convergence.NO_ITERATIONS"]], "rzfluxdata (class in armi.nucleardataio.cccc.rzflux)": [[169, "armi.nuclearDataIO.cccc.rzflux.RzfluxData"]], "rzfluxstream (class in armi.nucleardataio.cccc.rzflux)": [[169, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream"]], "armi.nucleardataio.cccc.rzflux": [[169, "module-armi.nuclearDataIO.cccc.rzflux"]], "readwrite() (armi.nucleardataio.cccc.rzflux.rzfluxstream method)": [[169, "armi.nuclearDataIO.cccc.rzflux.RzfluxStream.readWrite"]], "armi.nucleardataio.cccc.tests": [[170, "module-armi.nuclearDataIO.cccc.tests"]], "ccccasciirecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[171, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccAsciiRecordTests"]], "ccccbinaryrecordtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[171, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests"]], "cccciostreamtests (class in armi.nucleardataio.cccc.tests.test_cccc)": [[171, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests"]], "armi.nucleardataio.cccc.tests.test_cccc": [[171, "module-armi.nuclearDataIO.cccc.tests.test_cccc"]], "test_initwithfilemode() (armi.nucleardataio.cccc.tests.test_cccc.cccciostreamtests method)": [[171, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccIOStreamTests.test_initWithFileMode"]], "test_notreadinganentirerecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[171, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_notReadingAnEntireRecordRaisesException"]], "test_readingbeyondrecordraisesexception() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[171, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_readingBeyondRecordRaisesException"]], "test_writeandreadsimplefloatrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[171, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleFloatRecord"]], "test_writeandreadsimpleintegerrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[171, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleIntegerRecord"]], "test_writeandreadsimplestringrecord() (armi.nucleardataio.cccc.tests.test_cccc.ccccbinaryrecordtests method)": [[171, "armi.nuclearDataIO.cccc.tests.test_cccc.CcccBinaryRecordTests.test_writeAndReadSimpleStringRecord"]], "testcompxs (class in armi.nucleardataio.cccc.tests.test_compxs)": [[172, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs"]], "armi.nucleardataio.cccc.tests.test_compxs": [[172, "module-armi.nuclearDataIO.cccc.tests.test_compxs"]], "asciiwritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[172, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.asciiWritePath"]], "binarywritepath (armi.nucleardataio.cccc.tests.test_compxs.testcompxs property)": [[172, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.binaryWritePath"]], "test_asciirw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[172, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_asciiRW"]], "test_binaryrw() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[172, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_binaryRW"]], "test_getcompxsfilename() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[172, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_getCOMPXSFileName"]], "test_librarydata() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[172, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_libraryData"]], "test_mergecompxslibraries() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[172, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_mergeCompxsLibraries"]], "test_regionprimaryxs() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[172, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_regionPrimaryXS"]], "test_totalscattermatrix() (armi.nucleardataio.cccc.tests.test_compxs.testcompxs method)": [[172, "armi.nuclearDataIO.cccc.tests.test_compxs.TestCompxs.test_totalScatterMatrix"]], "testdif3demptyrecords (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[173, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords"]], "testdif3dsimplehexz (class in armi.nucleardataio.cccc.tests.test_dif3d)": [[173, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz"]], "armi.nucleardataio.cccc.tests.test_dif3d": [[173, "module-armi.nuclearDataIO.cccc.tests.test_dif3d"]], "test__rw2drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[173, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw2DRecord"]], "test__rw3drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[173, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw3DRecord"]], "test__rw4drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[173, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw4DRecord"]], "test__rw5drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[173, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rw5DRecord"]], "test__rwfile1drecord() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[173, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFile1DRecord"]], "test__rwfileid() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[173, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test__rwFileID"]], "test_empty4and5records() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3demptyrecords method)": [[173, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dEmptyRecords.test_empty4and5Records"]], "test_writebinary() (armi.nucleardataio.cccc.tests.test_dif3d.testdif3dsimplehexz method)": [[173, "armi.nuclearDataIO.cccc.tests.test_dif3d.TestDif3dSimpleHexz.test_writeBinary"]], "dlayxstests (class in armi.nucleardataio.cccc.tests.test_dlayxs)": [[174, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests"]], "armi.nucleardataio.cccc.tests.test_dlayxs": [[174, "module-armi.nuclearDataIO.cccc.tests.test_dlayxs"]], "test_endfvii1decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[174, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1DecayConstants"]], "test_endfvii1neutronsperfission() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[174, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_ENDFVII1NeutronsPerFission"]], "test_nudelay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[174, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_NuDelay"]], "test_avg() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[174, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_avg"]], "test_chi_delay() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[174, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delay"]], "test_chi_delaysumsto1() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[174, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_chi_delaySumsTo1"]], "test_compare() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[174, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_compare"]], "test_decayconstants() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[174, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_decayConstants"]], "test_nuclides() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[174, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_nuclides"]], "test_writebinary_mcc3() (armi.nucleardataio.cccc.tests.test_dlayxs.dlayxstests method)": [[174, "armi.nuclearDataIO.cccc.tests.test_dlayxs.DlayxsTests.test_writeBinary_mcc3"]], "testgamiso (class in armi.nucleardataio.cccc.tests.test_gamiso)": [[175, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso"]], "armi.nucleardataio.cccc.tests.test_gamiso": [[175, "module-armi.nuclearDataIO.cccc.tests.test_gamiso"]], "test_adddummynuclidestolibrary() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[175, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_addDummyNuclidesToLibrary"]], "test_compare() (armi.nucleardataio.cccc.tests.test_gamiso.testgamiso method)": [[175, "armi.nuclearDataIO.cccc.tests.test_gamiso.TestGamiso.test_compare"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_geodst)": [[176, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_geodst": [[176, "module-armi.nuclearDataIO.cccc.tests.test_geodst"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[176, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_geodst.testgeodst method)": [[176, "armi.nuclearDataIO.cccc.tests.test_geodst.TestGeodst.test_writeGeodst"]], "isotxs_merge_tests (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[177, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests"]], "testisotxs (class in armi.nucleardataio.cccc.tests.test_isotxs)": [[177, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs"]], "armi.nucleardataio.cccc.tests.test_isotxs": [[177, "module-armi.nuclearDataIO.cccc.tests.test_isotxs"]], "test_getgamisofilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[177, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getGAMISOFileName"]], "test_getisotxsfilename() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[177, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getISOTXSFileName"]], "test_getnuclide() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[177, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getNuclide"]], "test_getscatterweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[177, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatterWeights"]], "test_getscatteringweights() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[177, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_getScatteringWeights"]], "test_isotxsdetaileddata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[177, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsDetailedData"]], "test_isotxsgeneraldata() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[177, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_isotxsGeneralData"]], "test_mergemccv2filesremovesthefilewidechi() (armi.nucleardataio.cccc.tests.test_isotxs.isotxs_merge_tests method)": [[177, "armi.nuclearDataIO.cccc.tests.test_isotxs.Isotxs_merge_Tests.test_mergeMccV2FilesRemovesTheFileWideChi"]], "test_n2nisreactionbased() (armi.nucleardataio.cccc.tests.test_isotxs.testisotxs method)": [[177, "armi.nuclearDataIO.cccc.tests.test_isotxs.TestIsotxs.test_n2nIsReactionBased"]], "testlabels (class in armi.nucleardataio.cccc.tests.test_labels)": [[178, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels"]], "armi.nucleardataio.cccc.tests.test_labels": [[178, "module-armi.nuclearDataIO.cccc.tests.test_labels"]], "test_readlabelsbinary() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[178, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_readLabelsBinary"]], "test_writelabelsascii() (armi.nucleardataio.cccc.tests.test_labels.testlabels method)": [[178, "armi.nuclearDataIO.cccc.tests.test_labels.TestLabels.test_writeLabelsAscii"]], "testnhflux (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[179, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux"]], "testnhfluxvariant (class in armi.nucleardataio.cccc.tests.test_nhflux)": [[179, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant"]], "armi.nucleardataio.cccc.tests.test_nhflux": [[179, "module-armi.nuclearDataIO.cccc.tests.test_nhflux"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[179, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fc"]], "test_fc() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[179, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fc"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[179, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_fluxMoments"]], "test_fluxmoments() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[179, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_fluxMoments"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[179, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_write"]], "test_write() (armi.nucleardataio.cccc.tests.test_nhflux.testnhfluxvariant method)": [[179, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhfluxVariant.test_write"]], "test_xypartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[179, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_xyPartialCurrents"]], "test_zpartialcurrents() (armi.nucleardataio.cccc.tests.test_nhflux.testnhflux method)": [[179, "armi.nuclearDataIO.cccc.tests.test_nhflux.TestNhflux.test_zPartialCurrents"]], "testpmatrx (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx"]], "testpmatrxnuclides (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides"]], "testproductionmatrix_fromwritten (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten"]], "testproductionmatrix_fromwrittenascii (class in armi.nucleardataio.cccc.tests.test_pmatrx)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWrittenAscii"]], "armi.nucleardataio.cccc.tests.test_pmatrx": [[180, "module-armi.nuclearDataIO.cccc.tests.test_pmatrx"]], "test_getpmatrxfilename() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_getPMATRXFileName"]], "test_nuclidedataisdifferent() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_nuclideDataIsDifferent"]], "test_pmatrxdoesnthavedoseconversionfactors() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxDoesntHaveDoseConversionFactors"]], "test_pmatrxgammaenergies() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxGammaEnergies"]], "test_pmatrxneutroneneries() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNeutronEneries"]], "test_pmatrxnuclidedataaa() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAA"]], "test_pmatrxnuclidedataab() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrxnuclides method)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrxNuclides.test_pmatrxNuclideDataAB"]], "test_pmatrxnuclidenames() (armi.nucleardataio.cccc.tests.test_pmatrx.testpmatrx method)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestPmatrx.test_pmatrxNuclideNames"]], "test_writtenisidenticaltooriginal() (armi.nucleardataio.cccc.tests.test_pmatrx.testproductionmatrix_fromwritten method)": [[180, "armi.nuclearDataIO.cccc.tests.test_pmatrx.TestProductionMatrix_FromWritten.test_writtenIsIdenticalToOriginal"]], "testgeodst (class in armi.nucleardataio.cccc.tests.test_pwdint)": [[181, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst"]], "armi.nucleardataio.cccc.tests.test_pwdint": [[181, "module-armi.nuclearDataIO.cccc.tests.test_pwdint"]], "test_readgeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[181, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_readGeodst"]], "test_writegeodst() (armi.nucleardataio.cccc.tests.test_pwdint.testgeodst method)": [[181, "armi.nuclearDataIO.cccc.tests.test_pwdint.TestGeodst.test_writeGeodst"]], "testrtflux (class in armi.nucleardataio.cccc.tests.test_rtflux)": [[182, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux"]], "armi.nucleardataio.cccc.tests.test_rtflux": [[182, "module-armi.nuclearDataIO.cccc.tests.test_rtflux"]], "test_adjoint() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[182, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_adjoint"]], "test_readrtflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[182, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_readrtflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[182, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_rwAscii"]], "test_writertflux() (armi.nucleardataio.cccc.tests.test_rtflux.testrtflux method)": [[182, "armi.nuclearDataIO.cccc.tests.test_rtflux.Testrtflux.test_writertflux"]], "testrzflux (class in armi.nucleardataio.cccc.tests.test_rzflux)": [[183, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux"]], "armi.nucleardataio.cccc.tests.test_rzflux": [[183, "module-armi.nuclearDataIO.cccc.tests.test_rzflux"]], "binaryfilesequal() (in module armi.nucleardataio.cccc.tests.test_rzflux)": [[183, "armi.nuclearDataIO.cccc.tests.test_rzflux.binaryFilesEqual"]], "test_readrzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[183, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_readRzflux"]], "test_rwascii() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[183, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_rwAscii"]], "test_writerzflux() (armi.nucleardataio.cccc.tests.test_rzflux.testrzflux method)": [[183, "armi.nuclearDataIO.cccc.tests.test_rzflux.TestRzflux.test_writeRzflux"]], "filemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[184, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata"]], "nuclidemetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[184, "armi.nuclearDataIO.nuclearFileMetadata.NuclideMetadata"]], "nuclidexsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[184, "armi.nuclearDataIO.nuclearFileMetadata.NuclideXSMetadata"]], "regionxsmetadata (class in armi.nucleardataio.nuclearfilemetadata)": [[184, "armi.nuclearDataIO.nuclearFileMetadata.RegionXSMetadata"]], "armi.nucleardataio.nuclearfilemetadata": [[184, "module-armi.nuclearDataIO.nuclearFileMetadata"]], "update() (armi.nucleardataio.nuclearfilemetadata.filemetadata method)": [[184, "armi.nuclearDataIO.nuclearFileMetadata.FileMetadata.update"]], "armi.nucleardataio.tests": [[185, "module-armi.nuclearDataIO.tests"]], "mockblock (class in armi.nucleardataio.tests.test_xscollections)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock"]], "mockblueprints (class in armi.nucleardataio.tests.test_xscollections)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.MockBlueprints"]], "mockreactor (class in armi.nucleardataio.tests.test_xscollections)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.MockReactor"]], "testxscollections (class in armi.nucleardataio.tests.test_xscollections)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections"]], "armi.nucleardataio.tests.test_xscollections": [[186, "module-armi.nuclearDataIO.tests.test_xsCollections"]], "getnuclidenumberdensities() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclideNumberDensities"]], "getnuclides() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getNuclides"]], "getvolume() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.getVolume"]], "paramcollectiontype (armi.nucleardataio.tests.test_xscollections.mockblock attribute)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.paramCollectionType"]], "r (armi.nucleardataio.tests.test_xscollections.mockblock property)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.r"]], "setnumberdensity() (armi.nucleardataio.tests.test_xscollections.mockblock method)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.MockBlock.setNumberDensity"]], "test_collapsecrosssection() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_collapseCrossSection"]], "test_createmacrosfrommicros() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_createMacrosFromMicros"]], "test_generatetotalscatteringmatrix() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrix"]], "test_generatetotalscatteringmatrixwithmissingdata() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_generateTotalScatteringMatrixWithMissingData"]], "test_plotnucxs() (armi.nucleardataio.tests.test_xscollections.testxscollections method)": [[186, "armi.nuclearDataIO.tests.test_xsCollections.TestXsCollections.test_plotNucXs"]], "combined_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_merge_Tests"]], "gamiso_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests"]], "isotxs_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests"]], "pmatrx_merge_tests (class in armi.nucleardataio.tests.test_xslibraries)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests"]], "tempfilemixin (class in armi.nucleardataio.tests.test_xslibraries)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin"]], "testxslibrary (class in armi.nucleardataio.tests.test_xslibraries)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary"]], "test_getisotxsfilesinworkingdirectory (class in armi.nucleardataio.tests.test_xslibraries)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Test_GetISOTXSFilesInWorkingDirectory"]], "armi.nucleardataio.tests.test_xslibraries": [[187, "module-armi.nuclearDataIO.tests.test_xsLibraries"]], "assert_contains_only() (armi.nucleardataio.tests.test_xslibraries.test_getisotxsfilesinworkingdirectory method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Test_GetISOTXSFilesInWorkingDirectory.assert_contains_only"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getErrorType"]], "geterrortype() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getErrorType"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getLibAAPath"]], "getlibaapath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getLibAAPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getLibAA_ABPath"]], "getlibaa_abpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getLibAA_ABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getLibABPath"]], "getlibabpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getLibABPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getLibLumpedPath"]], "getliblumpedpath() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getLibLumpedPath"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getReadFunc"]], "getreadfunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getReadFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.gamiso_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Gamiso_merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.isotxs_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Isotxs_merge_Tests.getWriteFunc"]], "getwritefunc() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.getWriteFunc"]], "testfilename (armi.nucleardataio.tests.test_xslibraries.tempfilemixin property)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TempFileMixin.testFileName"]], "test_canpickleandunpicklegamiso() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleGAMISO"]], "test_canpickleandunpickleisotxs() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpickleISOTXS"]], "test_canpickleandunpicklepmatrx() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canPickleAndUnpicklePMATRX"]], "test_canremoveisotopes() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.test_canRemoveIsotopes"]], "test_canwritegamisofromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteGamisoFromCombinedXSLibrary"]], "test_canwriteisotxsfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWriteIsotxsFromCombinedXSLibrary"]], "test_canwritepmatrxfromcombinedxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_canWritePmatrxFromCombinedXSLibrary"]], "test_cannotmergexslibswithdifferentgammagroupstructures() (armi.nucleardataio.tests.test_xslibraries.pmatrx_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Pmatrx_merge_Tests.test_cannotMergeXSLibsWithDifferentGammaGroupStructures"]], "test_comparedifferentcomponentsofanxslibrary() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareDifferentComponentsOfAnXSLibrary"]], "test_compareworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_compareWorks"]], "test_gamisolibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_gamisoLibraryAttributes"]], "test_getisotxsfileswithlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.test_getisotxsfilesinworkingdirectory method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Test_GetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithLibrarySuffix"]], "test_getisotxsfileswithoutlibrarysuffix() (armi.nucleardataio.tests.test_xslibraries.test_getisotxsfilesinworkingdirectory method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Test_GetISOTXSFilesInWorkingDirectory.test_getISOTXSFilesWithoutLibrarySuffix"]], "test_isotxslibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_isotxsLibraryAttributes"]], "test_mergeallxslibfiles() (armi.nucleardataio.tests.test_xslibraries.combined_merge_tests method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.Combined_merge_Tests.test_mergeAllXSLibFiles"]], "test_mergefailswithnonisotxsfiles() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeFailsWithNonIsotxsFiles"]], "test_mergexslibrarieswithdifferentdataworks() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_mergeXSLibrariesWithDifferentDataWorks"]], "test_pmatrxlibraryattributes() (armi.nucleardataio.tests.test_xslibraries.testxslibrary method)": [[187, "armi.nuclearDataIO.tests.test_xsLibraries.TestXSLibrary.test_pmatrxLibraryAttributes"]], "nuclidetests (class in armi.nucleardataio.tests.test_xsnuclides)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests"]], "armi.nucleardataio.tests.test_xsnuclides": [[188, "module-armi.nuclearDataIO.tests.test_xsNuclides"]], "test_getmicroxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getMicroXS"]], "test_getxs() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_getXS"]], "test_nuclide_2dxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_2dXsArrangementIsCorrect"]], "test_nuclide_createfromlabelfailsonbadname() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_createFromLabelFailsOnBadName"]], "test_nuclide_creatingnuclidesdoesnotmesswithunderlyingnuclidedict() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_creatingNuclidesDoesNotMessWithUnderlyingNuclideDict"]], "test_nuclide_isoaadetails() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_isoaaDetails"]], "test_nuclide_modifyingnuclideattributesupdatestheisotxsnuclide() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_modifyingNuclideAttributesUpdatesTheIsotxsNuclide"]], "test_nuclide_newlabelsdontcausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_newLabelsDontCauseWarnings"]], "test_nuclide_nuclidebasemethodsshouldnotfail() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_nuclideBaseMethodsShouldNotFail"]], "test_nuclide_oldlabelscausewarnings() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_oldLabelsCauseWarnings"]], "test_nuclide_scatterxsarrangementiscorrect() (armi.nucleardataio.tests.test_xsnuclides.nuclidetests method)": [[188, "armi.nuclearDataIO.tests.test_xsNuclides.NuclideTests.test_nuclide_scatterXsArrangementIsCorrect"]], "macroscopiccrosssectioncreator (class in armi.nucleardataio.xscollections)": [[189, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator"]], "xscollection (class in armi.nucleardataio.xscollections)": [[189, "armi.nuclearDataIO.xsCollections.XSCollection"]], "armi.nucleardataio.xscollections": [[189, "module-armi.nuclearDataIO.xsCollections"]], "clear() (armi.nucleardataio.xscollections.xscollection method)": [[189, "armi.nuclearDataIO.xsCollections.XSCollection.clear"]], "collapsecrosssection() (armi.nucleardataio.xscollections.xscollection static method)": [[189, "armi.nuclearDataIO.xsCollections.XSCollection.collapseCrossSection"]], "compare() (armi.nucleardataio.xscollections.xscollection method)": [[189, "armi.nuclearDataIO.xsCollections.XSCollection.compare"]], "computeblockaveragechi() (in module armi.nucleardataio.xscollections)": [[189, "armi.nuclearDataIO.xsCollections.computeBlockAverageChi"]], "computecaptureenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[189, "armi.nuclearDataIO.xsCollections.computeCaptureEnergyGenerationConstants"]], "computefissionenergygenerationconstants() (in module armi.nucleardataio.xscollections)": [[189, "armi.nuclearDataIO.xsCollections.computeFissionEnergyGenerationConstants"]], "computegammaenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[189, "armi.nuclearDataIO.xsCollections.computeGammaEnergyDepositionConstants"]], "computemacroscopicgroupconstants() (in module armi.nucleardataio.xscollections)": [[189, "armi.nuclearDataIO.xsCollections.computeMacroscopicGroupConstants"]], "computeneutronenergydepositionconstants() (in module armi.nucleardataio.xscollections)": [[189, "armi.nuclearDataIO.xsCollections.computeNeutronEnergyDepositionConstants"]], "createmacrosfrommicros() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[189, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosFromMicros"]], "createmacrosonblocklist() (armi.nucleardataio.xscollections.macroscopiccrosssectioncreator method)": [[189, "armi.nuclearDataIO.xsCollections.MacroscopicCrossSectionCreator.createMacrosOnBlocklist"]], "get() (armi.nucleardataio.xscollections.xscollection method)": [[189, "armi.nuclearDataIO.xsCollections.XSCollection.get"]], "getabsorptionxs() (armi.nucleardataio.xscollections.xscollection method)": [[189, "armi.nuclearDataIO.xsCollections.XSCollection.getAbsorptionXS"]], "getdefaultxs() (armi.nucleardataio.xscollections.xscollection class method)": [[189, "armi.nuclearDataIO.xsCollections.XSCollection.getDefaultXs"]], "gettotalscattermatrix() (armi.nucleardataio.xscollections.xscollection method)": [[189, "armi.nuclearDataIO.xsCollections.XSCollection.getTotalScatterMatrix"]], "merge() (armi.nucleardataio.xscollections.xscollection method)": [[189, "armi.nuclearDataIO.xsCollections.XSCollection.merge"]], "compxslibrary (class in armi.nucleardataio.xslibraries)": [[190, "armi.nuclearDataIO.xsLibraries.CompxsLibrary"]], "isotxslibrary (class in armi.nucleardataio.xslibraries)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary"]], "armi.nucleardataio.xslibraries": [[190, "module-armi.nuclearDataIO.xsLibraries"]], "compare() (in module armi.nucleardataio.xslibraries)": [[190, "armi.nuclearDataIO.xsLibraries.compare"]], "comparelibraryneutronenergies() (in module armi.nucleardataio.xslibraries)": [[190, "armi.nuclearDataIO.xsLibraries.compareLibraryNeutronEnergies"]], "comparexslibraryattribute() (in module armi.nucleardataio.xslibraries)": [[190, "armi.nuclearDataIO.xsLibraries.compareXSLibraryAttribute"]], "gammadoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaDoseConversionFactors"]], "gammaenergyupperbounds (armi.nucleardataio.xslibraries.isotxslibrary property)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.gammaEnergyUpperBounds"]], "get() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.get"]], "getisotxslibrariestomerge() (in module armi.nucleardataio.xslibraries)": [[190, "armi.nuclearDataIO.xsLibraries.getISOTXSLibrariesToMerge"]], "getnuclide() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclide"]], "getnuclides() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getNuclides"]], "getscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.getScatterWeights"]], "getsuffixfromnuclidelabel() (in module armi.nucleardataio.xslibraries)": [[190, "armi.nuclearDataIO.xsLibraries.getSuffixFromNuclideLabel"]], "merge() (armi.nucleardataio.xslibraries.compxslibrary method)": [[190, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.merge"]], "merge() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.merge"]], "mergexslibrariesinworkingdirectory() (in module armi.nucleardataio.xslibraries)": [[190, "armi.nuclearDataIO.xsLibraries.mergeXSLibrariesInWorkingDirectory"]], "neutrondoseconversionfactors (armi.nucleardataio.xslibraries.isotxslibrary property)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.neutronDoseConversionFactors"]], "nuclidelabels (armi.nucleardataio.xslibraries.isotxslibrary property)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclideLabels"]], "nuclides (armi.nucleardataio.xslibraries.isotxslibrary property)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.nuclides"]], "numgroups (armi.nucleardataio.xslibraries.isotxslibrary property)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroups"]], "numgroupsgamma (armi.nucleardataio.xslibraries.isotxslibrary property)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.numGroupsGamma"]], "purgefissionproducts() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.purgeFissionProducts"]], "regionlabels (armi.nucleardataio.xslibraries.compxslibrary property)": [[190, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regionLabels"]], "regions (armi.nucleardataio.xslibraries.compxslibrary property)": [[190, "armi.nuclearDataIO.xsLibraries.CompxsLibrary.regions"]], "resetscatterweights() (armi.nucleardataio.xslibraries.isotxslibrary method)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.resetScatterWeights"]], "xsids (armi.nucleardataio.xslibraries.isotxslibrary property)": [[190, "armi.nuclearDataIO.xsLibraries.IsotxsLibrary.xsIDs"]], "xsnuclide (class in armi.nucleardataio.xsnuclides)": [[191, "armi.nuclearDataIO.xsNuclides.XSNuclide"]], "armi.nucleardataio.xsnuclides": [[191, "module-armi.nuclearDataIO.xsNuclides"]], "buildnormalizedscattercolumns() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[191, "armi.nuclearDataIO.xsNuclides.XSNuclide.buildNormalizedScatterColumns"]], "decays (armi.nucleardataio.xsnuclides.xsnuclide property)": [[191, "armi.nuclearDataIO.xsNuclides.XSNuclide.decays"]], "getmicroxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[191, "armi.nuclearDataIO.xsNuclides.XSNuclide.getMicroXS"]], "getxs() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[191, "armi.nuclearDataIO.xsNuclides.XSNuclide.getXS"]], "merge() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[191, "armi.nuclearDataIO.xsNuclides.XSNuclide.merge"]], "plotcomparescattermatrix() (in module armi.nucleardataio.xsnuclides)": [[191, "armi.nuclearDataIO.xsNuclides.plotCompareScatterMatrix"]], "plotscattermatrix() (in module armi.nucleardataio.xsnuclides)": [[191, "armi.nuclearDataIO.xsNuclides.plotScatterMatrix"]], "trans (armi.nucleardataio.xsnuclides.xsnuclide property)": [[191, "armi.nuclearDataIO.xsNuclides.XSNuclide.trans"]], "updatebasenuclide() (armi.nucleardataio.xsnuclides.xsnuclide method)": [[191, "armi.nuclearDataIO.xsNuclides.XSNuclide.updateBaseNuclide"]], "armi.operators": [[192, "module-armi.operators"]], "factory() (in module armi.operators)": [[192, "armi.operators.factory"]], "getoperatorclassfromsettings() (in module armi.operators)": [[192, "armi.operators.getOperatorClassFromSettings"]], "operator (class in armi.operators.operator)": [[193, "armi.operators.operator.Operator"]], "addinterface() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.addInterface"]], "armi.operators.operator": [[193, "module-armi.operators.operator"]], "ateol (armi.operators.operator.operator property)": [[193, "armi.operators.operator.Operator.atEOL"]], "availabilityfactors (armi.operators.operator.operator property)": [[193, "armi.operators.operator.Operator.availabilityFactors"]], "burnsteps (armi.operators.operator.operator property)": [[193, "armi.operators.operator.Operator.burnSteps"]], "couplingisactive() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.couplingIsActive"]], "createinterfaces() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.createInterfaces"]], "cyclelengths (armi.operators.operator.operator property)": [[193, "armi.operators.operator.Operator.cycleLengths"]], "cyclenames (armi.operators.operator.operator property)": [[193, "armi.operators.operator.Operator.cycleNames"]], "detach() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.detach"]], "getinterface() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.getInterface"]], "getinterfaces() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.getInterfaces"]], "initializeinterfaces() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.initializeInterfaces"]], "inspector (armi.operators.operator.operator attribute)": [[193, "armi.operators.operator.Operator.inspector"]], "interactallboc() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.interactAllBOC"]], "interactallbol() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.interactAllBOL"]], "interactallcoupled() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.interactAllCoupled"]], "interactalleoc() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.interactAllEOC"]], "interactalleol() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.interactAllEOL"]], "interactallerror() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.interactAllError"]], "interactalleverynode() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.interactAllEveryNode"]], "interactallinit() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.interactAllInit"]], "interfaceisactive() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.interfaceIsActive"]], "loadstate() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.loadState"]], "maxburnsteps (armi.operators.operator.operator property)": [[193, "armi.operators.operator.Operator.maxBurnSteps"]], "operate() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.operate"]], "powerfractions (armi.operators.operator.operator property)": [[193, "armi.operators.operator.Operator.powerFractions"]], "printinterfacesummary() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.printInterfaceSummary"]], "reattach() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.reattach"]], "removeallinterfaces() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.removeAllInterfaces"]], "removeinterface() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.removeInterface"]], "setstatetodefault() (armi.operators.operator.operator static method)": [[193, "armi.operators.operator.Operator.setStateToDefault"]], "snapshotrequest() (armi.operators.operator.operator method)": [[193, "armi.operators.operator.Operator.snapshotRequest"]], "steplengths (armi.operators.operator.operator property)": [[193, "armi.operators.operator.Operator.stepLengths"]], "operatormpi (class in armi.operators.operatormpi)": [[194, "armi.operators.operatorMPI.OperatorMPI"]], "armi.operators.operatormpi": [[194, "module-armi.operators.operatorMPI"]], "collapseallstderrs() (armi.operators.operatormpi.operatormpi method)": [[194, "armi.operators.operatorMPI.OperatorMPI.collapseAllStderrs"]], "operate() (armi.operators.operatormpi.operatormpi method)": [[194, "armi.operators.operatorMPI.OperatorMPI.operate"]], "workeroperate() (armi.operators.operatormpi.operatormpi method)": [[194, "armi.operators.operatorMPI.OperatorMPI.workerOperate"]], "workerquit() (armi.operators.operatormpi.operatormpi static method)": [[194, "armi.operators.operatorMPI.OperatorMPI.workerQuit"]], "equilibrium (armi.operators.runtypes.runtypes attribute)": [[195, "armi.operators.runTypes.RunTypes.EQUILIBRIUM"]], "runtypes (class in armi.operators.runtypes)": [[195, "armi.operators.runTypes.RunTypes"]], "snapshots (armi.operators.runtypes.runtypes attribute)": [[195, "armi.operators.runTypes.RunTypes.SNAPSHOTS"]], "standard (armi.operators.runtypes.runtypes attribute)": [[195, "armi.operators.runTypes.RunTypes.STANDARD"]], "armi.operators.runtypes": [[195, "module-armi.operators.runTypes"]], "inspector (class in armi.operators.settingsvalidation)": [[196, "armi.operators.settingsValidation.Inspector"]], "no_action() (armi.operators.settingsvalidation.inspector static method)": [[196, "armi.operators.settingsValidation.Inspector.NO_ACTION"]], "query (class in armi.operators.settingsvalidation)": [[196, "armi.operators.settingsValidation.Query"]], "addquery() (armi.operators.settingsvalidation.inspector method)": [[196, "armi.operators.settingsValidation.Inspector.addQuery"]], "addquerybadlocationwilllikelyfail() (armi.operators.settingsvalidation.inspector method)": [[196, "armi.operators.settingsValidation.Inspector.addQueryBadLocationWillLikelyFail"]], "addquerycurrentsettingmaynotsupportfeatures() (armi.operators.settingsvalidation.inspector method)": [[196, "armi.operators.settingsValidation.Inspector.addQueryCurrentSettingMayNotSupportFeatures"]], "armi.operators.settingsvalidation": [[196, "module-armi.operators.settingsValidation"]], "createqueryrevertbadpathtodefault() (in module armi.operators.settingsvalidation)": [[196, "armi.operators.settingsValidation.createQueryRevertBadPathToDefault"]], "iscorrective() (armi.operators.settingsvalidation.query method)": [[196, "armi.operators.settingsValidation.Query.isCorrective"]], "resolve() (armi.operators.settingsvalidation.query method)": [[196, "armi.operators.settingsValidation.Query.resolve"]], "run() (armi.operators.settingsvalidation.inspector method)": [[196, "armi.operators.settingsValidation.Inspector.run"]], "validateversion() (in module armi.operators.settingsvalidation)": [[196, "armi.operators.settingsValidation.validateVersion"]], "operatorsnapshots (class in armi.operators.snapshots)": [[197, "armi.operators.snapshots.OperatorSnapshots"]], "armi.operators.snapshots": [[197, "module-armi.operators.snapshots"]], "ateol (armi.operators.snapshots.operatorsnapshots property)": [[197, "armi.operators.snapshots.OperatorSnapshots.atEOL"]], "createinterfaces() (armi.operators.snapshots.operatorsnapshots method)": [[197, "armi.operators.snapshots.OperatorSnapshots.createInterfaces"]], "setstatetodefault() (armi.operators.snapshots.operatorsnapshots static method)": [[197, "armi.operators.snapshots.OperatorSnapshots.setStateToDefault"]], "armi.operators.tests": [[198, "module-armi.operators.tests"]], "testinspector (class in armi.operators.tests.test_inspectors)": [[199, "armi.operators.tests.test_inspectors.TestInspector"]], "armi.operators.tests.test_inspectors": [[199, "module-armi.operators.tests.test_inspectors"]], "test_assigncs() (armi.operators.tests.test_inspectors.testinspector method)": [[199, "armi.operators.tests.test_inspectors.TestInspector.test_assignCS"]], "test_callablecorrectioncheck() (armi.operators.tests.test_inspectors.testinspector method)": [[199, "armi.operators.tests.test_inspectors.TestInspector.test_callableCorrectionCheck"]], "test_changeofcs() (armi.operators.tests.test_inspectors.testinspector method)": [[199, "armi.operators.tests.test_inspectors.TestInspector.test_changeOfCS"]], "test_checkforbothsimpleanddetailedcyclesinputs() (armi.operators.tests.test_inspectors.testinspector method)": [[199, "armi.operators.tests.test_inspectors.TestInspector.test_checkForBothSimpleAndDetailedCyclesInputs"]], "test_correctcyclestozeroburnup() (armi.operators.tests.test_inspectors.testinspector method)": [[199, "armi.operators.tests.test_inspectors.TestInspector.test_correctCyclesToZeroBurnup"]], "test_createqueryrevertbadpathtodefault() (armi.operators.tests.test_inspectors.testinspector method)": [[199, "armi.operators.tests.test_inspectors.TestInspector.test_createQueryRevertBadPathToDefault"]], "test_noncorrectivequery() (armi.operators.tests.test_inspectors.testinspector method)": [[199, "armi.operators.tests.test_inspectors.TestInspector.test_nonCorrectiveQuery"]], "test_overwritesettingscorrectivequery() (armi.operators.tests.test_inspectors.testinspector method)": [[199, "armi.operators.tests.test_inspectors.TestInspector.test_overwriteSettingsCorrectiveQuery"]], "test_query() (armi.operators.tests.test_inspectors.testinspector method)": [[199, "armi.operators.tests.test_inspectors.TestInspector.test_query"]], "testoperatorsnapshots (class in armi.operators.tests.test_operatorsnapshots)": [[200, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots"]], "testoperatorsnapshotssettings (class in armi.operators.tests.test_operatorsnapshots)": [[200, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings"]], "armi.operators.tests.test_operatorsnapshots": [[200, "module-armi.operators.tests.test_operatorSnapshots"]], "test_ateol() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[200, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_atEOL"]], "test_createinterfaces() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[200, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfaces"]], "test_createinterfacesdisabled() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[200, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_createInterfacesDisabled"]], "test_getoperatorclassfromsettings() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshotssettings method)": [[200, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshotsSettings.test_getOperatorClassFromSettings"]], "test_mainoperate() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[200, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_mainOperate"]], "test_setstatetodefault() (armi.operators.tests.test_operatorsnapshots.testoperatorsnapshots method)": [[200, "armi.operators.tests.test_operatorSnapshots.TestOperatorSnapshots.test_setStateToDefault"]], "cyclessettingstests (class in armi.operators.tests.test_operators)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests"]], "interfacea (class in armi.operators.tests.test_operators)": [[201, "armi.operators.tests.test_operators.InterfaceA"]], "interfaceb (class in armi.operators.tests.test_operators)": [[201, "armi.operators.tests.test_operators.InterfaceB"]], "interfacec (class in armi.operators.tests.test_operators)": [[201, "armi.operators.tests.test_operators.InterfaceC"]], "operatortests (class in armi.operators.tests.test_operators)": [[201, "armi.operators.tests.test_operators.OperatorTests"]], "testinterfaceandeventheaders (class in armi.operators.tests.test_operators)": [[201, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders"]], "testtightcoupling (class in armi.operators.tests.test_operators)": [[201, "armi.operators.tests.test_operators.TestTightCoupling"]], "armi.operators.tests.test_operators": [[201, "module-armi.operators.tests.test_operators"]], "availabilityfactorssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.availabilityFactorsSolution"]], "burnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.burnStepsSolution"]], "cyclelengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleLengthsSolution"]], "cyclenamessolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.cycleNamesSolution"]], "dbwriteforcoupling() (armi.operators.tests.test_operators.testtightcoupling method)": [[201, "armi.operators.tests.test_operators.TestTightCoupling.dbWriteForCoupling"]], "detailedcyclessettings (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.detailedCyclesSettings"]], "function (armi.operators.tests.test_operators.interfacea attribute)": [[201, "armi.operators.tests.test_operators.InterfaceA.function"]], "function (armi.operators.tests.test_operators.interfaceb attribute)": [[201, "armi.operators.tests.test_operators.InterfaceB.function"]], "function (armi.operators.tests.test_operators.interfacec attribute)": [[201, "armi.operators.tests.test_operators.InterfaceC.function"]], "maxburnstepssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.maxBurnStepsSolution"]], "name (armi.operators.tests.test_operators.interfacea attribute)": [[201, "armi.operators.tests.test_operators.InterfaceA.name"]], "name (armi.operators.tests.test_operators.interfaceb attribute)": [[201, "armi.operators.tests.test_operators.InterfaceB.name"]], "name (armi.operators.tests.test_operators.interfacec attribute)": [[201, "armi.operators.tests.test_operators.InterfaceC.name"]], "powerfractionssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.powerFractionsSolution"]], "steplengthssolution (armi.operators.tests.test_operators.cyclessettingstests attribute)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.stepLengthsSolution"]], "test_addinterfacesubclasscollision() (armi.operators.tests.test_operators.operatortests method)": [[201, "armi.operators.tests.test_operators.OperatorTests.test_addInterfaceSubclassCollision"]], "test_checkcsconsistency() (armi.operators.tests.test_operators.operatortests method)": [[201, "armi.operators.tests.test_operators.OperatorTests.test_checkCsConsistency"]], "test_computetightcouplingconvergence() (armi.operators.tests.test_operators.testtightcoupling method)": [[201, "armi.operators.tests.test_operators.TestTightCoupling.test_computeTightCouplingConvergence"]], "test_couplingisactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[201, "armi.operators.tests.test_operators.TestTightCoupling.test_couplingIsActive"]], "test_expandcycleandtimenodeargs_empty() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[201, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_Empty"]], "test_expandcycleandtimenodeargs_onearg() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[201, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_OneArg"]], "test_expandcycleandtimenodeargs_twoarg() (armi.operators.tests.test_operators.testinterfaceandeventheaders method)": [[201, "armi.operators.tests.test_operators.TestInterfaceAndEventHeaders.test_expandCycleAndTimeNodeArgs_TwoArg"]], "test_getavailabilityfactors() (armi.operators.tests.test_operators.cyclessettingstests method)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getBurnSteps"]], "test_getcyclelengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.operators.tests.test_operators.cyclessettingstests method)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getCycleNames"]], "test_getmaxburnsteps() (armi.operators.tests.test_operators.cyclessettingstests method)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getpowerfractions() (armi.operators.tests.test_operators.cyclessettingstests method)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getPowerFractions"]], "test_getsteplengths() (armi.operators.tests.test_operators.cyclessettingstests method)": [[201, "armi.operators.tests.test_operators.CyclesSettingsTests.test_getStepLengths"]], "test_interfaceisactive() (armi.operators.tests.test_operators.operatortests method)": [[201, "armi.operators.tests.test_operators.OperatorTests.test_interfaceIsActive"]], "test_loadstateerror() (armi.operators.tests.test_operators.operatortests method)": [[201, "armi.operators.tests.test_operators.OperatorTests.test_loadStateError"]], "test_performtightcoupling_inactive() (armi.operators.tests.test_operators.testtightcoupling method)": [[201, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_Inactive"]], "test_performtightcoupling_nowritedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[201, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_NoWriteDB"]], "test_performtightcoupling_writedb() (armi.operators.tests.test_operators.testtightcoupling method)": [[201, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_WriteDB"]], "test_performtightcoupling_notconverged() (armi.operators.tests.test_operators.testtightcoupling method)": [[201, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_notConverged"]], "test_performtightcoupling_skip() (armi.operators.tests.test_operators.testtightcoupling method)": [[201, "armi.operators.tests.test_operators.TestTightCoupling.test_performTightCoupling_skip"]], "test_setstatetodefault() (armi.operators.tests.test_operators.operatortests method)": [[201, "armi.operators.tests.test_operators.OperatorTests.test_setStateToDefault"]], "test_snapshotrequest() (armi.operators.tests.test_operators.operatortests method)": [[201, "armi.operators.tests.test_operators.OperatorTests.test_snapshotRequest"]], "armi.physics": [[202, "module-armi.physics"]], "dpa_cross_sections (in module armi.physics.constants)": [[203, "armi.physics.constants.DPA_CROSS_SECTIONS"]], "armi.physics.constants": [[203, "module-armi.physics.constants"]], "defaultexecuter (class in armi.physics.executers)": [[204, "armi.physics.executers.DefaultExecuter"]], "executer (class in armi.physics.executers)": [[204, "armi.physics.executers.Executer"]], "executionoptions (class in armi.physics.executers)": [[204, "armi.physics.executers.ExecutionOptions"]], "armi.physics.executers": [[204, "module-armi.physics.executers"]], "describe() (armi.physics.executers.executionoptions method)": [[204, "armi.physics.executers.ExecutionOptions.describe"]], "fromreactor() (armi.physics.executers.executionoptions method)": [[204, "armi.physics.executers.ExecutionOptions.fromReactor"]], "fromusersettings() (armi.physics.executers.executionoptions method)": [[204, "armi.physics.executers.ExecutionOptions.fromUserSettings"]], "resolvederivedoptions() (armi.physics.executers.executionoptions method)": [[204, "armi.physics.executers.ExecutionOptions.resolveDerivedOptions"]], "run() (armi.physics.executers.defaultexecuter method)": [[204, "armi.physics.executers.DefaultExecuter.run"]], "run() (armi.physics.executers.executer method)": [[204, "armi.physics.executers.Executer.run"]], "setrundirfromcasetitle() (armi.physics.executers.executionoptions method)": [[204, "armi.physics.executers.ExecutionOptions.setRunDirFromCaseTitle"]], "writeinput() (armi.physics.executers.defaultexecuter method)": [[204, "armi.physics.executers.DefaultExecuter.writeInput"]], "fuelhandlerplugin (class in armi.physics.fuelcycle)": [[205, "armi.physics.fuelCycle.FuelHandlerPlugin"]], "armi.physics.fuelcycle": [[205, "module-armi.physics.fuelCycle"]], "definesettings() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[205, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[205, "armi.physics.fuelCycle.FuelHandlerPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelcycle.fuelhandlerplugin static method)": [[205, "armi.physics.fuelCycle.FuelHandlerPlugin.exposeInterfaces"]], "armi.physics.fuelcycle.assemblyrotationalgorithms": [[206, "module-armi.physics.fuelCycle.assemblyRotationAlgorithms"]], "bureducingassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[206, "armi.physics.fuelCycle.assemblyRotationAlgorithms.buReducingAssemblyRotation"]], "simpleassemblyrotation() (in module armi.physics.fuelcycle.assemblyrotationalgorithms)": [[206, "armi.physics.fuelCycle.assemblyRotationAlgorithms.simpleAssemblyRotation"]], "armi.physics.fuelcycle.fuelhandlerfactory": [[207, "module-armi.physics.fuelCycle.fuelHandlerFactory"]], "fuelhandlerfactory() (in module armi.physics.fuelcycle.fuelhandlerfactory)": [[207, "armi.physics.fuelCycle.fuelHandlerFactory.fuelHandlerFactory"]], "fuelhandlerinterface (class in armi.physics.fuelcycle.fuelhandlerinterface)": [[208, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface"]], "armi.physics.fuelcycle.fuelhandlerinterface": [[208, "module-armi.physics.fuelCycle.fuelHandlerInterface"]], "interactboc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[208, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactBOC"]], "interacteoc() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[208, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOC"]], "interacteol() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[208, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.interactEOL"]], "makeshufflereport() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[208, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.makeShuffleReport"]], "managefuel() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[208, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.manageFuel"]], "name (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface attribute)": [[208, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.name"]], "specifyinputs() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface static method)": [[208, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.specifyInputs"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlerinterface.fuelhandlerinterface method)": [[208, "armi.physics.fuelCycle.fuelHandlerInterface.FuelHandlerInterface.workerOperate"]], "fuelhandler (class in armi.physics.fuelcycle.fuelhandlers)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler"]], "armi.physics.fuelcycle.fuelhandlers": [[209, "module-armi.physics.fuelCycle.fuelHandlers"]], "chooseswaps() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.chooseSwaps"]], "cs (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cs"]], "cycle (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.cycle"]], "dischargeswap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.dischargeSwap"]], "dorepeatshuffle() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.doRepeatShuffle"]], "findassembly() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.findAssembly"]], "getfactorlist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.getFactorList"]], "makeshufflearrows() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.makeShuffleArrows"]], "outage() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.outage"]], "prepcore() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepCore"]], "prepsearch() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepSearch"]], "prepshufflemap() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.prepShuffleMap"]], "processmovelist() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.processMoveList"]], "r (armi.physics.fuelcycle.fuelhandlers.fuelhandler property)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.r"]], "readmoves() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.readMoves"]], "repeatshufflepattern() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.repeatShufflePattern"]], "swapassemblies() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapAssemblies"]], "swapcascade() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.swapCascade"]], "trackchain() (armi.physics.fuelcycle.fuelhandlers.fuelhandler static method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.trackChain"]], "workeroperate() (armi.physics.fuelcycle.fuelhandlers.fuelhandler method)": [[209, "armi.physics.fuelCycle.fuelHandlers.FuelHandler.workerOperate"]], "armi.physics.fuelcycle.hexassemblyfuelmgmtutils": [[210, "module-armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils"]], "buildconvergentringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[210, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildConvergentRingSchedule"]], "buildeqringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[210, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildEqRingSchedule"]], "buildringschedule() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[210, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.buildRingSchedule"]], "getoptimalassemblyorientation() (in module armi.physics.fuelcycle.hexassemblyfuelmgmtutils)": [[210, "armi.physics.fuelCycle.hexAssemblyFuelMgmtUtils.getOptimalAssemblyOrientation"]], "armi.physics.fuelcycle.settings": [[211, "module-armi.physics.fuelCycle.settings"]], "getfuelcyclesettingvalidators() (in module armi.physics.fuelcycle.settings)": [[211, "armi.physics.fuelCycle.settings.getFuelCycleSettingValidators"]], "getfuelcyclesettings() (in module armi.physics.fuelcycle.settings)": [[211, "armi.physics.fuelCycle.settings.getFuelCycleSettings"]], "armi.physics.fuelcycle.tests": [[212, "module-armi.physics.fuelCycle.tests"]], "testfuelhandlermgmttools (class in armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms)": [[213, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools"]], "armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms": [[213, "module-armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms"]], "test_bureducingassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[213, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_buReducingAssemblyRotation"]], "test_simpleassemblyrotation() (armi.physics.fuelcycle.tests.test_assemblyrotationalgorithms.testfuelhandlermgmttools method)": [[213, "armi.physics.fuelCycle.tests.test_assemblyRotationAlgorithms.TestFuelHandlerMgmtTools.test_simpleAssemblyRotation"]], "fuelhandlertesthelper (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.FuelHandlerTestHelper"]], "mocklatticephysicsinterface (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface"]], "mockxsgm (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM"]], "testfuelhandler (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler"]], "testfuelplugin (class in armi.physics.fuelcycle.tests.test_fuelhandlers)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin"]], "addsomedetailassemblies() (in module armi.physics.fuelcycle.tests.test_fuelhandlers)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.addSomeDetailAssemblies"]], "armi.physics.fuelcycle.tests.test_fuelhandlers": [[214, "module-armi.physics.fuelCycle.tests.test_fuelHandlers"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.interactBOC"]], "interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.mockxsgm method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockXSGM.interactBOC"]], "name (armi.physics.fuelcycle.tests.test_fuelhandlers.mocklatticephysicsinterface attribute)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.MockLatticePhysicsInterface.name"]], "runshuffling() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.runShuffling"]], "test_dischargeswap() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwap"]], "test_dischargeswapincompatiblestationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_dischargeSwapIncompatibleStationaryBlocks"]], "test_findbycoords() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findByCoords"]], "test_findhighbu() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findHighBu"]], "test_findinsfp() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findInSFP"]], "test_findmany() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findMany"]], "test_findwithminmax() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_findWithMinMax"]], "test_getfactorlist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_getFactorList"]], "test_interactboc() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_interactBOC"]], "test_linpowbypin() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPin"]], "test_linpowbypingamma() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinGamma"]], "test_linpowbypinneutron() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_linPowByPinNeutron"]], "test_processmovelist() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_processMoveList"]], "test_readmoves() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_readMoves"]], "test_repeatshuffles() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_repeatShuffles"]], "test_settingsarediscovered() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelplugin method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelPlugin.test_settingsAreDiscovered"]], "test_transferdifferentnumberstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferDifferentNumberStationaryBlocks"]], "test_transferincompatibleheightstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferIncompatibleHeightStationaryBlocks"]], "test_transferstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferStationaryBlocks"]], "test_transferunalignedlocationstationaryblocks() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_transferUnalignedLocationStationaryBlocks"]], "test_width() (armi.physics.fuelcycle.tests.test_fuelhandlers.testfuelhandler method)": [[214, "armi.physics.fuelCycle.tests.test_fuelHandlers.TestFuelHandler.test_width"]], "testhexassemmgmttools (class in armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils)": [[215, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools"]], "armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils": [[215, "module-armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils"]], "test_buildconvergentringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[215, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildConvergentRingSchedule"]], "test_buildeqringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[215, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildEqRingSchedule"]], "test_buildeqringschedulehelper() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[215, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildEqRingScheduleHelper"]], "test_buildringschedule() (armi.physics.fuelcycle.tests.test_hexassemblyfuelmgmtutils.testhexassemmgmttools method)": [[215, "armi.physics.fuelCycle.tests.test_hexAssemblyFuelMgmtUtils.TestHexAssemMgmtTools.test_buildRingSchedule"]], "armi.physics.fuelperformance": [[216, "module-armi.physics.fuelPerformance"]], "fuelperformanceexecuter (class in armi.physics.fuelperformance.executers)": [[217, "armi.physics.fuelPerformance.executers.FuelPerformanceExecuter"]], "fuelperformanceoptions (class in armi.physics.fuelperformance.executers)": [[217, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions"]], "armi.physics.fuelperformance.executers": [[217, "module-armi.physics.fuelPerformance.executers"]], "fromreactor() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[217, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromReactor"]], "fromusersettings() (armi.physics.fuelperformance.executers.fuelperformanceoptions method)": [[217, "armi.physics.fuelPerformance.executers.FuelPerformanceOptions.fromUserSettings"]], "armi.physics.fuelperformance.parameters": [[218, "module-armi.physics.fuelPerformance.parameters"]], "getfuelperformanceparameterdefinitions() (in module armi.physics.fuelperformance.parameters)": [[218, "armi.physics.fuelPerformance.parameters.getFuelPerformanceParameterDefinitions"]], "fuelperformanceplugin (class in armi.physics.fuelperformance.plugin)": [[219, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin"]], "armi.physics.fuelperformance.plugin": [[219, "module-armi.physics.fuelPerformance.plugin"]], "defineparameters() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[219, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineParameters"]], "definesettings() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[219, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[219, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.fuelperformance.plugin.fuelperformanceplugin static method)": [[219, "armi.physics.fuelPerformance.plugin.FuelPerformancePlugin.exposeInterfaces"]], "armi.physics.fuelperformance.settings": [[220, "module-armi.physics.fuelPerformance.settings"]], "definesettings() (in module armi.physics.fuelperformance.settings)": [[220, "armi.physics.fuelPerformance.settings.defineSettings"]], "definevalidators() (in module armi.physics.fuelperformance.settings)": [[220, "armi.physics.fuelPerformance.settings.defineValidators"]], "armi.physics.fuelperformance.tests": [[221, "module-armi.physics.fuelPerformance.tests"]], "testfuelperformanceoptions (class in armi.physics.fuelperformance.tests.test_executers)": [[222, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions"]], "armi.physics.fuelperformance.tests.test_executers": [[222, "module-armi.physics.fuelPerformance.tests.test_executers"]], "test_fuelperformanceoptions() (armi.physics.fuelperformance.tests.test_executers.testfuelperformanceoptions method)": [[222, "armi.physics.fuelPerformance.tests.test_executers.TestFuelPerformanceOptions.test_fuelPerformanceOptions"]], "testfuelperformanceplugin (class in armi.physics.fuelperformance.tests.test_fuelperformanceplugin)": [[223, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin"]], "armi.physics.fuelperformance.tests.test_fuelperformanceplugin": [[223, "module-armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin"]], "plugin (armi.physics.fuelperformance.tests.test_fuelperformanceplugin.testfuelperformanceplugin attribute)": [[223, "armi.physics.fuelPerformance.tests.test_fuelPerformancePlugin.TestFuelPerformancePlugin.plugin"]], "testfuelperformanceutils (class in armi.physics.fuelperformance.tests.test_fuelperformanceutils)": [[224, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils"]], "armi.physics.fuelperformance.tests.test_fuelperformanceutils": [[224, "module-armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils"]], "test_applyfueldisplacement() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[224, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_applyFuelDisplacement"]], "test_gasconductivitycorrection_morph0() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[224, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph0"]], "test_gasconductivitycorrection_morph1() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[224, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph1"]], "test_gasconductivitycorrection_morph2() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[224, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph2"]], "test_gasconductivitycorrection_morph3() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[224, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph3"]], "test_gasconductivitycorrection_morph4() (armi.physics.fuelperformance.tests.test_fuelperformanceutils.testfuelperformanceutils method)": [[224, "armi.physics.fuelPerformance.tests.test_fuelPerformanceUtils.TestFuelPerformanceUtils.test_gasConductivityCorrection_morph4"]], "applyfueldisplacement() (in module armi.physics.fuelperformance.utils)": [[225, "armi.physics.fuelPerformance.utils.applyFuelDisplacement"]], "armi.physics.fuelperformance.utils": [[225, "module-armi.physics.fuelPerformance.utils"]], "gasconductivitycorrection() (in module armi.physics.fuelperformance.utils)": [[225, "armi.physics.fuelPerformance.utils.gasConductivityCorrection"]], "boc (armi.physics.neutronics.latticephysicsfrequency attribute)": [[226, "armi.physics.neutronics.LatticePhysicsFrequency.BOC"]], "bol (armi.physics.neutronics.latticephysicsfrequency attribute)": [[226, "armi.physics.neutronics.LatticePhysicsFrequency.BOL"]], "latticephysicsfrequency (class in armi.physics.neutronics)": [[226, "armi.physics.neutronics.LatticePhysicsFrequency"]], "neutronicsplugin (class in armi.physics.neutronics)": [[226, "armi.physics.neutronics.NeutronicsPlugin"]], "adjointcalculationrequested() (in module armi.physics.neutronics)": [[226, "armi.physics.neutronics.adjointCalculationRequested"]], "all (armi.physics.neutronics.latticephysicsfrequency attribute)": [[226, "armi.physics.neutronics.LatticePhysicsFrequency.all"]], "applyeffectivedelayedneutronfractiontocore() (in module armi.physics.neutronics)": [[226, "armi.physics.neutronics.applyEffectiveDelayedNeutronFractionToCore"]], "armi.physics.neutronics": [[226, "module-armi.physics.neutronics"]], "defineentrypoints() (armi.physics.neutronics.neutronicsplugin static method)": [[226, "armi.physics.neutronics.NeutronicsPlugin.defineEntryPoints"]], "defineparameters() (armi.physics.neutronics.neutronicsplugin static method)": [[226, "armi.physics.neutronics.NeutronicsPlugin.defineParameters"]], "definesettings() (armi.physics.neutronics.neutronicsplugin static method)": [[226, "armi.physics.neutronics.NeutronicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.neutronics.neutronicsplugin static method)": [[226, "armi.physics.neutronics.NeutronicsPlugin.defineSettingsValidators"]], "everynode (armi.physics.neutronics.latticephysicsfrequency attribute)": [[226, "armi.physics.neutronics.LatticePhysicsFrequency.everyNode"]], "exposeinterfaces() (armi.physics.neutronics.neutronicsplugin static method)": [[226, "armi.physics.neutronics.NeutronicsPlugin.exposeInterfaces"]], "firstcouplediteration (armi.physics.neutronics.latticephysicsfrequency attribute)": [[226, "armi.physics.neutronics.LatticePhysicsFrequency.firstCoupledIteration"]], "gammatransportisrequested() (in module armi.physics.neutronics)": [[226, "armi.physics.neutronics.gammaTransportIsRequested"]], "gammaxsarerequested() (in module armi.physics.neutronics)": [[226, "armi.physics.neutronics.gammaXsAreRequested"]], "getreportcontents() (armi.physics.neutronics.neutronicsplugin static method)": [[226, "armi.physics.neutronics.NeutronicsPlugin.getReportContents"]], "never (armi.physics.neutronics.latticephysicsfrequency attribute)": [[226, "armi.physics.neutronics.LatticePhysicsFrequency.never"]], "onprocesscoreloading() (armi.physics.neutronics.neutronicsplugin static method)": [[226, "armi.physics.neutronics.NeutronicsPlugin.onProcessCoreLoading"]], "realcalculationrequested() (in module armi.physics.neutronics)": [[226, "armi.physics.neutronics.realCalculationRequested"]], "armi.physics.neutronics.const": [[227, "module-armi.physics.neutronics.const"]], "averageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.AverageBlockCollection"]], "blockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection"]], "crosssectiongroupmanager (class in armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager"]], "cylindricalcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CylindricalComponentsAverageBlockCollection"]], "fluxweightedaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.FluxWeightedAverageBlockCollection"]], "medianblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.MedianBlockCollection"]], "slabcomponentsaverageblockcollection (class in armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.SlabComponentsAverageBlockCollection"]], "armi.physics.neutronics.crosssectiongroupmanager": [[228, "module-armi.physics.neutronics.crossSectionGroupManager"]], "blockcollectionfactory() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.blockCollectionFactory"]], "calcavgnuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.calcAvgNuclideTemperatures"]], "clearrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.clearRepresentativeBlocks"]], "createrepresentativeblock() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.createRepresentativeBlock"]], "createrepresentativeblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocks"]], "createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.createRepresentativeBlocksUsingExistingBlocks"]], "describeinterfaces() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.describeInterfaces"]], "disablebugroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.disableBuGroupUpdates"]], "enablebugroupupdates() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.enableBuGroupUpdates"]], "fluxsolutionispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.fluxSolutionIsPregenerated"]], "getblocknuclidetemperatureavgterms() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.getBlockNuclideTemperatureAvgTerms"]], "getcandidateblocks() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getCandidateBlocks"]], "getnextavailablexstypes() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNextAvailableXsTypes"]], "getnuctemperature() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.getNucTemperature"]], "getweight() (armi.physics.neutronics.crosssectiongroupmanager.blockcollection method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.BlockCollection.getWeight"]], "getxstypelabelfromnumber() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeLabelFromNumber"]], "getxstypenumberfromlabel() (in module armi.physics.neutronics.crosssectiongroupmanager)": [[228, "armi.physics.neutronics.crossSectionGroupManager.getXSTypeNumberFromLabel"]], "interactboc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOC"]], "interactbol() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactBOL"]], "interactcoupled() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactCoupled"]], "interacteoc() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEOC"]], "interacteverynode() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.interactEveryNode"]], "makecrosssectiongroups() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.makeCrossSectionGroups"]], "name (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager attribute)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.name"]], "updatenuclidetemperatures() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.updateNuclideTemperatures"]], "xstypeispregenerated() (armi.physics.neutronics.crosssectiongroupmanager.crosssectiongroupmanager method)": [[228, "armi.physics.neutronics.crossSectionGroupManager.CrossSectionGroupManager.xsTypeIsPregenerated"]], "one_dimensional_cylinder (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[229, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_CYLINDER"]], "one_dimensional_slab (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[229, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ONE_DIMENSIONAL_SLAB"]], "two_dimensional_hex (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[229, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.TWO_DIMENSIONAL_HEX"]], "xsgeometrytypes (class in armi.physics.neutronics.crosssectionsettings)": [[229, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes"]], "xsmodelingoptions (class in armi.physics.neutronics.crosssectionsettings)": [[229, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions"]], "xssettingdef (class in armi.physics.neutronics.crosssectionsettings)": [[229, "armi.physics.neutronics.crossSectionSettings.XSSettingDef"]], "xssettings (class in armi.physics.neutronics.crosssectionsettings)": [[229, "armi.physics.neutronics.crossSectionSettings.XSSettings"]], "zero_dimensional (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes attribute)": [[229, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.ZERO_DIMENSIONAL"]], "armi.physics.neutronics.crosssectionsettings": [[229, "module-armi.physics.neutronics.crossSectionSettings"]], "bugroup (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[229, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.buGroup"]], "dump() (armi.physics.neutronics.crosssectionsettings.xssettingdef method)": [[229, "armi.physics.neutronics.crossSectionSettings.XSSettingDef.dump"]], "fluxispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[229, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.fluxIsPregenerated"]], "getstr() (armi.physics.neutronics.crosssectionsettings.xsgeometrytypes class method)": [[229, "armi.physics.neutronics.crossSectionSettings.XSGeometryTypes.getStr"]], "serialize() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[229, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.serialize"]], "serializexssettings() (in module armi.physics.neutronics.crosssectionsettings)": [[229, "armi.physics.neutronics.crossSectionSettings.serializeXSSettings"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[229, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.setDefaults"]], "setdefaults() (armi.physics.neutronics.crosssectionsettings.xssettings method)": [[229, "armi.physics.neutronics.crossSectionSettings.XSSettings.setDefaults"]], "validate() (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions method)": [[229, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.validate"]], "xsispregenerated (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[229, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsIsPregenerated"]], "xssettingsvalidator() (in module armi.physics.neutronics.crosssectionsettings)": [[229, "armi.physics.neutronics.crossSectionSettings.xsSettingsValidator"]], "xstype (armi.physics.neutronics.crosssectionsettings.xsmodelingoptions property)": [[229, "armi.physics.neutronics.crossSectionSettings.XSModelingOptions.xsType"]], "compareisotxslibraries (class in armi.physics.neutronics.diffisotxs)": [[230, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries"]], "addoptions() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[230, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.addOptions"]], "armi.physics.neutronics.diffisotxs": [[230, "module-armi.physics.neutronics.diffIsotxs"]], "invoke() (armi.physics.neutronics.diffisotxs.compareisotxslibraries method)": [[230, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.invoke"]], "name (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[230, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.name"]], "settingsargument (armi.physics.neutronics.diffisotxs.compareisotxslibraries attribute)": [[230, "armi.physics.neutronics.diffIsotxs.CompareIsotxsLibraries.settingsArgument"]], "group_structure (in module armi.physics.neutronics.energygroups)": [[231, "armi.physics.neutronics.energyGroups.GROUP_STRUCTURE"]], "armi.physics.neutronics.energygroups": [[231, "module-armi.physics.neutronics.energyGroups"]], "getfastfluxgroupcutoff() (in module armi.physics.neutronics.energygroups)": [[231, "armi.physics.neutronics.energyGroups.getFastFluxGroupCutoff"]], "getgroupstructure() (in module armi.physics.neutronics.energygroups)": [[231, "armi.physics.neutronics.energyGroups.getGroupStructure"]], "getgroupstructuretype() (in module armi.physics.neutronics.energygroups)": [[231, "armi.physics.neutronics.energyGroups.getGroupStructureType"]], "armi.physics.neutronics.fissionproductmodel": [[232, "module-armi.physics.neutronics.fissionProductModel"]], "fissionproductmodel (class in armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodel": [[233, "module-armi.physics.neutronics.fissionProductModel.fissionProductModel"]], "describeinterfaces() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodel)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.describeInterfaces"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getAllFissionProductNames"]], "getgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.getGlobalLumpedFissionProducts"]], "interactboc() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOC"]], "interactbol() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactBOL"]], "interactdistributestate() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.interactDistributeState"]], "name (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel attribute)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.name"]], "removefissiongasesfromblocks() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.removeFissionGasesFromBlocks"]], "setallblocklfps() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllBlockLFPs"]], "setallcomponentfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setAllComponentFissionProducts"]], "setgloballumpedfissionproducts() (armi.physics.neutronics.fissionproductmodel.fissionproductmodel.fissionproductmodel method)": [[233, "armi.physics.neutronics.fissionProductModel.fissionProductModel.FissionProductModel.setGlobalLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings": [[234, "module-armi.physics.neutronics.fissionProductModel.fissionProductModelSettings"]], "definesettings() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[234, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.defineSettings"]], "getfissionproductmodelsettingvalidators() (in module armi.physics.neutronics.fissionproductmodel.fissionproductmodelsettings)": [[234, "armi.physics.neutronics.fissionProductModel.fissionProductModelSettings.getFissionProductModelSettingValidators"]], "fissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile"]], "lumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct"]], "lumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection"]], "armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct": [[235, "module-armi.physics.neutronics.fissionProductModel.lumpedFissionProduct"]], "createlfpsfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createLFPsFromFile"]], "createsinglelfpfromfile() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.fissionproductdefinitionfile method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.FissionProductDefinitionFile.createSingleLFPFromFile"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.duplicate"]], "duplicate() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.duplicate"]], "getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNames"]], "getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getAllFissionProductNuclideBases"]], "getgaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getGaseousYieldFraction"]], "getlumpedfissionproductnames() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getLumpedFissionProductNames"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFrac"]], "getmassfrac() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getMassFrac"]], "getmassfracdenom() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracDenom"]], "getmassfracs() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getMassFracs"]], "getnumberdensities() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproductcollection method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProductCollection.getNumberDensities"]], "gettotalyield() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.getTotalYield"]], "isgas() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.isGas"]], "items() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.items"]], "keys() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.keys"]], "lumpedfissionproductfactory() (in module armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.lumpedFissionProductFactory"]], "printdensities() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.printDensities"]], "values() (armi.physics.neutronics.fissionproductmodel.lumpedfissionproduct.lumpedfissionproduct method)": [[235, "armi.physics.neutronics.fissionProductModel.lumpedFissionProduct.LumpedFissionProduct.values"]], "armi.physics.neutronics.fissionproductmodel.tests": [[236, "module-armi.physics.neutronics.fissionProductModel.tests"]], "testfissionproductmodelexplicitmc2library (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[237, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library"]], "testfissionproductmodellumpedfissionproducts (class in armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel)": [[237, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts"]], "armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel": [[237, "module-armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel"]], "test_fpapplication() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[237, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_fpApplication"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[237, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_getAllFissionProductNames"]], "test_loadgloballfpsfromfile() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodellumpedfissionproducts method)": [[237, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelLumpedFissionProducts.test_loadGlobalLFPsFromFile"]], "test_nuclideflags() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[237, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclideFlags"]], "test_nuclidesinmodelalldepletableblocks() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[237, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclidesInModelAllDepletableBlocks"]], "test_nuclidesinmodelfuel() (armi.physics.neutronics.fissionproductmodel.tests.test_fissionproductmodel.testfissionproductmodelexplicitmc2library method)": [[237, "armi.physics.neutronics.fissionProductModel.tests.test_fissionProductModel.TestFissionProductModelExplicitMC2Library.test_nuclidesInModelFuel"]], "testfissionproductdefinitionfile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile"]], "testlumpedfissionproduct (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct"]], "testlumpedfissionproductcollection (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection"]], "testlumpedfissionproductsexplicit (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit"]], "testlumpedfissionproductsfromreferencefile (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile"]], "testmo99lfp (class in armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP"]], "armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct": [[238, "module-armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct"]], "getdummylfpfile() (in module armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.getDummyLFPFile"]], "test_createlfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createLFPs"]], "test_createreferencelfps() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testfissionproductdefinitionfile method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestFissionProductDefinitionFile.test_createReferenceLFPs"]], "test_duplicate() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_duplicate"]], "test_explicitfissionproducts() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsexplicit method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsExplicit.test_explicitFissionProducts"]], "test_fissionproductyields() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductsfromreferencefile method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductsFromReferenceFile.test_fissionProductYields"]], "test_gaseousyieldfraction() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_gaseousYieldFraction"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNames"]], "test_getallfissionproductnames() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testmo99lfp method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestMo99LFP.test_getAllFissionProductNames"]], "test_getallfissionproductnuclidebases() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getAllFissionProductNuclideBases"]], "test_getmassfrac() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getMassFrac"]], "test_getnumberdensities() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproductcollection method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProductCollection.test_getNumberDensities"]], "test_getyield() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_getYield"]], "test_isgas() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_isGas"]], "test_printdensities() (armi.physics.neutronics.fissionproductmodel.tests.test_lumpedfissionproduct.testlumpedfissionproduct method)": [[238, "armi.physics.neutronics.fissionProductModel.tests.test_lumpedFissionProduct.TestLumpedFissionProduct.test_printDensities"]], "armi.physics.neutronics.globalflux": [[239, "module-armi.physics.neutronics.globalFlux"]], "doseresultsmapper (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper"]], "globalfluxexecuter (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter"]], "globalfluxinterface (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface"]], "globalfluxinterfaceusingexecuters (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters"]], "globalfluxoptions (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions"]], "globalfluxresultmapper (class in armi.physics.neutronics.globalflux.globalfluxinterface)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper"]], "apply() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.apply"]], "armi.physics.neutronics.globalflux.globalfluxinterface": [[240, "module-armi.physics.neutronics.globalFlux.globalFluxInterface"]], "calcreactionrates() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.calcReactionRates"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.calculateKeff"]], "calculatekeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.calculateKeff"]], "clearflux() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.clearFlux"]], "computedparate() (in module armi.physics.neutronics.globalflux.globalfluxinterface)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.computeDpaRate"]], "edgeassembliesareneeded() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxexecuter method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxExecuter.edgeAssembliesAreNeeded"]], "fromreactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromReactor"]], "fromusersettings() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxoptions method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxOptions.fromUserSettings"]], "function (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.function"]], "getburnuppeakingfactor() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getBurnupPeakingFactor"]], "getdpaxs() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getDpaXs"]], "getexecuter() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuter"]], "getexecutercls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getExecuterOptions"]], "gethistoryparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface static method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getHistoryParams"]], "getiofilenames() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.getIOFileNames"]], "getkeff() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.getKeff"]], "getlabel() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getLabel"]], "getoptionscls() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters static method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getOptionsCls"]], "gettightcouplingvalue() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.getTightCouplingValue"]], "interactboc() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactBOC"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactCoupled"]], "interactcoupled() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactCoupled"]], "interacteoc() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactEOC"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.interactEveryNode"]], "interacteverynode() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterfaceusingexecuters method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterfaceUsingExecuters.interactEveryNode"]], "name (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxinterface attribute)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxInterface.name"]], "updatecycledoseparams() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.updateCycleDoseParams"]], "updatedparate() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateDpaRate"]], "updatefluenceanddpa() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.updateFluenceAndDpa"]], "updateloadpaddose() (armi.physics.neutronics.globalflux.globalfluxinterface.doseresultsmapper method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.DoseResultsMapper.updateLoadpadDose"]], "updatemaxdpaparams() (armi.physics.neutronics.globalflux.globalfluxinterface.globalfluxresultmapper method)": [[240, "armi.physics.neutronics.globalFlux.globalFluxInterface.GlobalFluxResultMapper.updateMaxDpaParams"]], "armi.physics.neutronics.globalflux.tests": [[241, "module-armi.physics.neutronics.globalFlux.tests"]], "mockcore (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCore"]], "mockcoreparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockCoreParams"]], "mockglobalfluxexecuter (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxExecuter"]], "mockglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface"]], "mockglobalfluxwithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters"]], "mockglobalfluxwithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform"]], "mockreactor (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactor"]], "mockreactorparams (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockReactorParams"]], "testglobalfluxinterface (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface"]], "testglobalfluxinterfacewithexecuters (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters"]], "testglobalfluxinterfacewithexecutersnonuniform (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform"]], "testglobalfluxoptions (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions"]], "testglobalfluxresultmapper (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper"]], "testglobalfluxutils (class in armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils"]], "applydummyflux() (in module armi.physics.neutronics.globalflux.tests.test_globalfluxinterface)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.applyDummyFlux"]], "armi.physics.neutronics.globalflux.tests.test_globalfluxinterface": [[242, "module-armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface"]], "getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecuters method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecuters.getExecuterCls"]], "getexecuteroptions() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxwithexecutersnonuniform method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxWithExecutersNonUniform.getExecuterOptions"]], "interactboc() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactBOC"]], "interacteverynode() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.mockglobalfluxinterface method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.MockGlobalFluxInterface.interactEveryNode"]], "test_calcreactionrates() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxutils method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxUtils.test_calcReactionRates"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_calculateKeff"]], "test_calculatekeff() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_calculateKeff"]], "test_checkenergybalance() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_checkEnergyBalance"]], "test_executerinteraction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_executerInteraction"]], "test_executerinteractionnonuniformassems() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_executerInteractionNonUniformAssems"]], "test_getburnuppeakingfactor() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactor"]], "test_getburnuppeakingfactorzero() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getBurnupPeakingFactorZero"]], "test_getdpaxs() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_getDpaXs"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getExecuterCls"]], "test_getexecutercls() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecutersnonuniform method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecutersNonUniform.test_getExecuterCls"]], "test_gethistoryparams() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getHistoryParams"]], "test_getiofilenames() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_getIOFileNames"]], "test_gettightcouplingvalue() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_getTightCouplingValue"]], "test_interaction() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterface method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterface.test_interaction"]], "test_mapper() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxresultmapper method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxResultMapper.test_mapper"]], "test_readfromreactors() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromReactors"]], "test_readfromsettings() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_readFromSettings"]], "test_savephysicsfiles() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxoptions method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxOptions.test_savePhysicsFiles"]], "test_settightcouplingdefaults() (armi.physics.neutronics.globalflux.tests.test_globalfluxinterface.testglobalfluxinterfacewithexecuters method)": [[242, "armi.physics.neutronics.globalFlux.tests.test_globalFluxInterface.TestGlobalFluxInterfaceWithExecuters.test_setTightCouplingDefaults"]], "armi.physics.neutronics.isotopicdepletion": [[243, "module-armi.physics.neutronics.isotopicDepletion"]], "crosssectiontable (class in armi.physics.neutronics.isotopicdepletion.crosssectiontable)": [[244, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable"]], "add() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[244, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.add"]], "addmultigroupxs() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[244, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.addMultiGroupXS"]], "armi.physics.neutronics.isotopicdepletion.crosssectiontable": [[244, "module-armi.physics.neutronics.isotopicDepletion.crossSectionTable"]], "getname() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[244, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.getName"]], "getxsectable() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[244, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.getXsecTable"]], "hasvalues() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[244, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.hasValues"]], "makereactionratetable() (in module armi.physics.neutronics.isotopicdepletion.crosssectiontable)": [[244, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.makeReactionRateTable"]], "ratetypes (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable attribute)": [[244, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.rateTypes"]], "setname() (armi.physics.neutronics.isotopicdepletion.crosssectiontable.crosssectiontable method)": [[244, "armi.physics.neutronics.isotopicDepletion.crossSectionTable.CrossSectionTable.setName"]], "abstractisotopicdepleter (class in armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter"]], "abstractisotopicdepletionreader (class in armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepletionReader"]], "csrc (class in armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.Csrc"]], "addtodeplete() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter method)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.addToDeplete"]], "armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface": [[245, "module-armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface"]], "function (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter attribute)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.function"]], "getchemicalvector() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.csrc method)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.Csrc.getChemicalVector"]], "gettodeplete() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter method)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.getToDeplete"]], "isdepletable() (in module armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.isDepletable"]], "makexsectable() (in module armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.makeXsecTable"]], "name (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter attribute)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.name"]], "read() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepletionreader method)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepletionReader.read"]], "run() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter method)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.run"]], "setchemicalvector() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.csrc method)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.Csrc.setChemicalVector"]], "settodeplete() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.abstractisotopicdepleter method)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.AbstractIsotopicDepleter.setToDeplete"]], "write() (armi.physics.neutronics.isotopicdepletion.isotopicdepletioninterface.csrc method)": [[245, "armi.physics.neutronics.isotopicDepletion.isotopicDepletionInterface.Csrc.write"]], "armi.physics.neutronics.latticephysics": [[246, "module-armi.physics.neutronics.latticePhysics"]], "latticephysicsinterface (class in armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface"]], "armi.physics.neutronics.latticephysics.latticephysicsinterface": [[247, "module-armi.physics.neutronics.latticePhysics.latticePhysicsInterface"]], "clearxs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.clearXS"]], "computecrosssections() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.computeCrossSections"]], "function (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface attribute)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.function"]], "generatelatticephysicsinputs() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.generateLatticePhysicsInputs"]], "getreader() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getReader"]], "getrepresentativeblocks() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getRepresentativeBlocks"]], "getwriters() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.getWriters"]], "interactboc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOC"]], "interactbol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactBOL"]], "interactcoupled() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactCoupled"]], "interacteoc() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEOC"]], "interacteverynode() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.interactEveryNode"]], "makecyclexsfilesasbasefiles() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.makeCycleXSFilesAsBaseFiles"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.readExistingXSLibraries"]], "setblockneutronvelocities() (in module armi.physics.neutronics.latticephysics.latticephysicsinterface)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.setBlockNeutronVelocities"]], "updatephysicscouplingcontrol() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updatePhysicsCouplingControl"]], "updatexslibrary() (armi.physics.neutronics.latticephysics.latticephysicsinterface.latticephysicsinterface method)": [[247, "armi.physics.neutronics.latticePhysics.latticePhysicsInterface.LatticePhysicsInterface.updateXSLibrary"]], "coolant_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[248, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.COOLANT_CATEGORY"]], "depletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[248, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.DEPLETABLE"]], "fission_product_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[248, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FISSION_PRODUCT_CATEGORY"]], "fuel_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[248, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.FUEL_CATEGORY"]], "latticephysicswriter (class in armi.physics.neutronics.latticephysics.latticephysicswriter)": [[248, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter"]], "represented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[248, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.REPRESENTED"]], "structure_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[248, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.STRUCTURE_CATEGORY"]], "undepletable (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[248, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNDEPLETABLE"]], "unrepresented (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[248, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNREPRESENTED"]], "unused_category (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter attribute)": [[248, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.UNUSED_CATEGORY"]], "armi.physics.neutronics.latticephysics.latticephysicswriter": [[248, "module-armi.physics.neutronics.latticePhysics.latticePhysicsWriter"]], "write() (armi.physics.neutronics.latticephysics.latticephysicswriter.latticephysicswriter method)": [[248, "armi.physics.neutronics.latticePhysics.latticePhysicsWriter.LatticePhysicsWriter.write"]], "armi.physics.neutronics.latticephysics.tests": [[249, "module-armi.physics.neutronics.latticePhysics.tests"]], "latticeinterfacetester (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester"]], "latticeinterfacetesterlibfalse (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTesterLibFalse"]], "testlatticephysicsinterface (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface"]], "testlatticephysicsinterfacebase (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterfaceBase"]], "testlatticephysicslibrarycreation (class in armi.physics.neutronics.latticephysics.tests.test_latticeinterface)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation"]], "armi.physics.neutronics.latticephysics.tests.test_latticeinterface": [[250, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeInterface"]], "readexistingxslibraries() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.latticeinterfacetester method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.LatticeInterfaceTester.readExistingXSLibraries"]], "test_latticephysicsinterface() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_LatticePhysicsInterface"]], "test_interactall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactAll"]], "test_interactboc() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNode"]], "test_interacteverynodeall() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeAll"]], "test_interacteverynodefirstcoupled() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactEveryNodeFirstCoupled"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicsinterface method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsInterface.test_interactFirstCoupledIteration"]], "test_libcreation_genxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS"]], "test_libcreation_genxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_2"]], "test_libcreation_genxs_3() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_GenXS_3"]], "test_libcreation_nogenxs() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS"]], "test_libcreation_nogenxs_2() (armi.physics.neutronics.latticephysics.tests.test_latticeinterface.testlatticephysicslibrarycreation method)": [[250, "armi.physics.neutronics.latticePhysics.tests.test_latticeInterface.TestLatticePhysicsLibraryCreation.test_libCreation_NoGenXS_2"]], "fakelatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter"]], "testlatticephysicswriter (class in armi.physics.neutronics.latticephysics.tests.test_latticewriter)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter"]], "armi.physics.neutronics.latticephysics.tests.test_latticewriter": [[251, "module-armi.physics.neutronics.latticePhysics.tests.test_latticeWriter"]], "test_getallnuclidesbytemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInC"]], "test_getallnuclidesbytemperatureincexplicitfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCExplicitFissionProducts"]], "test_getallnuclidesbytemperatureincnone() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAllNuclidesByTemperatureInCNone"]], "test_getavgnuclidetemperatureinc() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getAvgNuclideTemperatureInC"]], "test_getdetailedfpdensities() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFPDensities"]], "test_getdetailedfissionproducts() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProducts"]], "test_getdetailedfissionproductspass() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDetailedFissionProductsPass"]], "test_getdriverblock() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getDriverBlock"]], "test_getfueltemperature() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_getFuelTemperature"]], "test_iscriticalbucklingsearchactive() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isCriticalBucklingSearchActive"]], "test_isgammaxsgenerationenabled() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isGammaXSGenerationEnabled"]], "test_issourcedriven() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_isSourceDriven"]], "test_latticephysicswriter() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_latticePhysicsWriter"]], "test_writetitle() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.testlatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.TestLatticePhysicsWriter.test_writeTitle"]], "write() (armi.physics.neutronics.latticephysics.tests.test_latticewriter.fakelatticephysicswriter method)": [[251, "armi.physics.neutronics.latticePhysics.tests.test_latticeWriter.FakeLatticePhysicsWriter.write"]], "macroxsgenerationinterface (class in armi.physics.neutronics.macroxsgenerationinterface)": [[252, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface"]], "macroxsgenerator (class in armi.physics.neutronics.macroxsgenerationinterface)": [[252, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator"]], "armi.physics.neutronics.macroxsgenerationinterface": [[252, "module-armi.physics.neutronics.macroXSGenerationInterface"]], "buildmacros() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface method)": [[252, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.buildMacros"]], "invokehook() (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerator method)": [[252, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerator.invokeHook"]], "name (armi.physics.neutronics.macroxsgenerationinterface.macroxsgenerationinterface attribute)": [[252, "armi.physics.neutronics.macroXSGenerationInterface.MacroXSGenerationInterface.name"]], "armi.physics.neutronics.parameters": [[253, "module-armi.physics.neutronics.parameters"]], "getneutronicsparameterdefinitions() (in module armi.physics.neutronics.parameters)": [[253, "armi.physics.neutronics.parameters.getNeutronicsParameterDefinitions"]], "pd_plot (in module armi.physics.neutronics.reports)": [[254, "armi.physics.neutronics.reports.PD_PLOT"]], "armi.physics.neutronics.reports": [[254, "module-armi.physics.neutronics.reports"]], "generatelineplot() (in module armi.physics.neutronics.reports)": [[254, "armi.physics.neutronics.reports.generateLinePlot"]], "insertinitialcorefuelassem() (in module armi.physics.neutronics.reports)": [[254, "armi.physics.neutronics.reports.insertInitialCoreFuelAssem"]], "insertneutronicsbolcontent() (in module armi.physics.neutronics.reports)": [[254, "armi.physics.neutronics.reports.insertNeutronicsBOLContent"]], "insertneutronicsreport() (in module armi.physics.neutronics.reports)": [[254, "armi.physics.neutronics.reports.insertNeutronicsReport"]], "neutronicsplotting() (in module armi.physics.neutronics.reports)": [[254, "armi.physics.neutronics.reports.neutronicsPlotting"]], "armi.physics.neutronics.settings": [[255, "module-armi.physics.neutronics.settings"]], "definesettings() (in module armi.physics.neutronics.settings)": [[255, "armi.physics.neutronics.settings.defineSettings"]], "getneutronicssettingvalidators() (in module armi.physics.neutronics.settings)": [[255, "armi.physics.neutronics.settings.getNeutronicsSettingValidators"]], "armi.physics.neutronics.tests": [[256, "module-armi.physics.neutronics.tests"]], "testblockcollection (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection"]], "testblockcollectionaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage"]], "testblockcollectioncomponentaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage"]], "testblockcollectioncomponentaverage1dcylinder (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder"]], "testblockcollectionfluxweightedaverage (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage"]], "testblockcollectionmedian (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian"]], "testxsnumberconverters (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters"]], "test_crosssectiongroupmanager (class in armi.physics.neutronics.tests.test_crosssectionmanager)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager"]], "armi.physics.neutronics.tests.test_crosssectionmanager": [[257, "module-armi.physics.neutronics.tests.test_crossSectionManager"]], "makeblocks() (in module armi.physics.neutronics.tests.test_crosssectionmanager)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.makeBlocks"]], "test_componentaverage1dcylinder() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_ComponentAverage1DCylinder"]], "test_componentaveragerepblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage.test_ComponentAverageRepBlock"]], "test_add() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_add"]], "test_addxsgroupsfromblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_addXsGroupsFromBlocks"]], "test_calcweightedburnup() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_calcWeightedBurnup"]], "test_checkcomponentconsistency() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectioncomponentaverage1dcylinder method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionComponentAverage1DCylinder.test_checkComponentConsistency"]], "test_conversion() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion"]], "test_conversion_2digit() (armi.physics.neutronics.tests.test_crosssectionmanager.testxsnumberconverters method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestXSNumberConverters.test_conversion_2digit"]], "test_copypregeneratedfiles() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_copyPregeneratedFiles"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionaverage method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_createRepresentativeBlock"]], "test_createrepresentativeblock() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionmedian method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionMedian.test_createRepresentativeBlock"]], "test_createrepresentativeblocksusingexistingblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_createRepresentativeBlocksUsingExistingBlocks"]], "test_getblocksingroup() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_getBlocksInGroup"]], "test_getnextavailablexstype() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_getNextAvailableXsType"]], "test_getrepresentativeblocks() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_getRepresentativeBlocks"]], "test_interactallcoupled() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_interactAllCoupled"]], "test_interactboc() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_interactBOC"]], "test_interactbol() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_interactBOL"]], "test_interacteverynode() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_interactEveryNode"]], "test_interactfirstcouplediteration() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_interactFirstCoupledIteration"]], "test_invalidweights() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollectionfluxweightedaverage method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollectionFluxWeightedAverage.test_invalidWeights"]], "test_is_pickleable() (armi.physics.neutronics.tests.test_crosssectionmanager.testblockcollection method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.TestBlockCollection.test_is_pickleable"]], "test_setbugroupbounds() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_setBuGroupBounds"]], "test_updateburnupgroups() (armi.physics.neutronics.tests.test_crosssectionmanager.test_crosssectiongroupmanager method)": [[257, "armi.physics.neutronics.tests.test_crossSectionManager.Test_CrossSectionGroupManager.test_updateBurnupGroups"]], "testcrosssectionsettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings"]], "test_xssettings (class in armi.physics.neutronics.tests.test_crosssectionsettings)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.Test_XSSettings"]], "armi.physics.neutronics.tests.test_crosssectionsettings": [[258, "module-armi.physics.neutronics.tests.test_crossSectionSettings"]], "test_badcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_badCrossSections"]], "test_casesettings() (armi.physics.neutronics.tests.test_crosssectionsettings.test_xssettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.Test_XSSettings.test_caseSettings"]], "test_crosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_crossSections"]], "test_csblockrepresentation() (armi.physics.neutronics.tests.test_crosssectionsettings.test_xssettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.Test_XSSettings.test_csBlockRepresentation"]], "test_csblockrepresentationfilelocation() (armi.physics.neutronics.tests.test_crosssectionsettings.test_xssettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.Test_XSSettings.test_csBlockRepresentationFileLocation"]], "test_homogeneousxsdefaultsettingassignment() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_homogeneousXsDefaultSettingAssignment"]], "test_optionalkey() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_optionalKey"]], "test_pregeneratedcrosssections() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedCrossSections"]], "test_pregeneratedfluxinputs() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_pregeneratedFluxInputs"]], "test_prioritization() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_prioritization"]], "test_setdefaultsettingsbylowestbugrouphomogeneous() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestBuGroupHomogeneous"]], "test_setdefaultsettingsbylowestbugrouponedimensional() (armi.physics.neutronics.tests.test_crosssectionsettings.testcrosssectionsettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.TestCrossSectionSettings.test_setDefaultSettingsByLowestBuGroupOneDimensional"]], "test_xssettingssetdefault() (armi.physics.neutronics.tests.test_crosssectionsettings.test_xssettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.Test_XSSettings.test_xsSettingsSetDefault"]], "test_yamlio() (armi.physics.neutronics.tests.test_crosssectionsettings.test_xssettings method)": [[258, "armi.physics.neutronics.tests.test_crossSectionSettings.Test_XSSettings.test_yamlIO"]], "testcrosssectiontable (class in armi.physics.neutronics.tests.test_crosssectiontable)": [[259, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable"]], "armi.physics.neutronics.tests.test_crosssectiontable": [[259, "module-armi.physics.neutronics.tests.test_crossSectionTable"]], "test_isotopicdepletioninterface() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[259, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_isotopicDepletionInterface"]], "test_maketable() (armi.physics.neutronics.tests.test_crosssectiontable.testcrosssectiontable method)": [[259, "armi.physics.neutronics.tests.test_crossSectionTable.TestCrossSectionTable.test_makeTable"]], "testenergygroups (class in armi.physics.neutronics.tests.test_energygroups)": [[260, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups"]], "armi.physics.neutronics.tests.test_energygroups": [[260, "module-armi.physics.neutronics.tests.test_energyGroups"]], "test_consistenciesbetweengroupstructureandgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[260, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_consistenciesBetweenGroupStructureAndGroupStructureType"]], "test_invalidgroupstructuretype() (armi.physics.neutronics.tests.test_energygroups.testenergygroups method)": [[260, "armi.physics.neutronics.tests.test_energyGroups.TestEnergyGroups.test_invalidGroupStructureType"]], "testmacroxsgenerationinterface (class in armi.physics.neutronics.tests.test_macroxsgenerationinterface)": [[261, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface"]], "armi.physics.neutronics.tests.test_macroxsgenerationinterface": [[261, "module-armi.physics.neutronics.tests.test_macroXSGenerationInterface"]], "test_macroxsgenerationinterface() (armi.physics.neutronics.tests.test_macroxsgenerationinterface.testmacroxsgenerationinterface method)": [[261, "armi.physics.neutronics.tests.test_macroXSGenerationInterface.TestMacroXSGenerationInterface.test_macroXSGenerationInterface"]], "neutronicsreactortests (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[262, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests"]], "test_neutronicsplugin (class in armi.physics.neutronics.tests.test_neutronicsplugin)": [[262, "armi.physics.neutronics.tests.test_neutronicsPlugin.Test_NeutronicsPlugin"]], "armi.physics.neutronics.tests.test_neutronicsplugin": [[262, "module-armi.physics.neutronics.tests.test_neutronicsPlugin"]], "plugin (armi.physics.neutronics.tests.test_neutronicsplugin.test_neutronicsplugin attribute)": [[262, "armi.physics.neutronics.tests.test_neutronicsPlugin.Test_NeutronicsPlugin.plugin"]], "test_customsettingobjectio() (armi.physics.neutronics.tests.test_neutronicsplugin.test_neutronicsplugin method)": [[262, "armi.physics.neutronics.tests.test_neutronicsPlugin.Test_NeutronicsPlugin.test_customSettingObjectIO"]], "test_customsettingroundtrip() (armi.physics.neutronics.tests.test_neutronicsplugin.test_neutronicsplugin method)": [[262, "armi.physics.neutronics.tests.test_neutronicsPlugin.Test_NeutronicsPlugin.test_customSettingRoundTrip"]], "test_kineticsparameterassignment() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[262, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_kineticsParameterAssignment"]], "test_neutronicssettingsloaded() (armi.physics.neutronics.tests.test_neutronicsplugin.test_neutronicsplugin method)": [[262, "armi.physics.neutronics.tests.test_neutronicsPlugin.Test_NeutronicsPlugin.test_neutronicsSettingsLoaded"]], "test_neutronicssettingsvalidators() (armi.physics.neutronics.tests.test_neutronicsplugin.neutronicsreactortests method)": [[262, "armi.physics.neutronics.tests.test_neutronicsPlugin.NeutronicsReactorTests.test_neutronicsSettingsValidators"]], "safetyplugin (class in armi.physics.safety)": [[263, "armi.physics.safety.SafetyPlugin"]], "armi.physics.safety": [[263, "module-armi.physics.safety"]], "definesettings() (armi.physics.safety.safetyplugin static method)": [[263, "armi.physics.safety.SafetyPlugin.defineSettings"]], "armi.physics.safety.settings": [[264, "module-armi.physics.safety.settings"]], "definesettings() (in module armi.physics.safety.settings)": [[264, "armi.physics.safety.settings.defineSettings"]], "armi.physics.tests": [[265, "module-armi.physics.tests"]], "mockcore (class in armi.physics.tests.test_executers)": [[266, "armi.physics.tests.test_executers.MockCore"]], "mockcoreparams (class in armi.physics.tests.test_executers)": [[266, "armi.physics.tests.test_executers.MockCoreParams"]], "mockreactor (class in armi.physics.tests.test_executers)": [[266, "armi.physics.tests.test_executers.MockReactor"]], "mockreactorparams (class in armi.physics.tests.test_executers)": [[266, "armi.physics.tests.test_executers.MockReactorParams"]], "testexecuters (class in armi.physics.tests.test_executers)": [[266, "armi.physics.tests.test_executers.TestExecuters"]], "testexecutionoptions (class in armi.physics.tests.test_executers)": [[266, "armi.physics.tests.test_executers.TestExecutionOptions"]], "armi.physics.tests.test_executers": [[266, "module-armi.physics.tests.test_executers"]], "test_collectinputsandoutputs() (armi.physics.tests.test_executers.testexecuters method)": [[266, "armi.physics.tests.test_executers.TestExecuters.test_collectInputsAndOutputs"]], "test_runningdirectorypath() (armi.physics.tests.test_executers.testexecutionoptions method)": [[266, "armi.physics.tests.test_executers.TestExecutionOptions.test_runningDirectoryPath"]], "test_updaterundir() (armi.physics.tests.test_executers.testexecuters method)": [[266, "armi.physics.tests.test_executers.TestExecuters.test_updateRunDir"]], "armi.physics.thermalhydraulics": [[267, "module-armi.physics.thermalHydraulics"]], "armi.physics.thermalhydraulics.const": [[268, "module-armi.physics.thermalHydraulics.const"]], "armi.physics.thermalhydraulics.parameters": [[269, "module-armi.physics.thermalHydraulics.parameters"]], "getparameterdefinitions() (in module armi.physics.thermalhydraulics.parameters)": [[269, "armi.physics.thermalHydraulics.parameters.getParameterDefinitions"]], "thermalhydraulicsplugin (class in armi.physics.thermalhydraulics.plugin)": [[270, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin"]], "afterconstructionofassemblies() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[270, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.afterConstructionOfAssemblies"]], "armi.physics.thermalhydraulics.plugin": [[270, "module-armi.physics.thermalHydraulics.plugin"]], "defineparameters() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[270, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineParameters"]], "definesettings() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[270, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettings"]], "definesettingsvalidators() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[270, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.defineSettingsValidators"]], "exposeinterfaces() (armi.physics.thermalhydraulics.plugin.thermalhydraulicsplugin static method)": [[270, "armi.physics.thermalHydraulics.plugin.ThermalHydraulicsPlugin.exposeInterfaces"]], "armi.physics.thermalhydraulics.settings": [[271, "module-armi.physics.thermalHydraulics.settings"]], "definesettings() (in module armi.physics.thermalhydraulics.settings)": [[271, "armi.physics.thermalHydraulics.settings.defineSettings"]], "definevalidators() (in module armi.physics.thermalhydraulics.settings)": [[271, "armi.physics.thermalHydraulics.settings.defineValidators"]], "armipluginmanager (class in armi.pluginmanager)": [[272, "armi.pluginManager.ArmiPluginManager"]], "armi.pluginmanager": [[272, "module-armi.pluginManager"]], "counter (armi.pluginmanager.armipluginmanager property)": [[272, "armi.pluginManager.ArmiPluginManager.counter"]], "register() (armi.pluginmanager.armipluginmanager method)": [[272, "armi.pluginManager.ArmiPluginManager.register"]], "unregister() (armi.pluginmanager.armipluginmanager method)": [[272, "armi.pluginManager.ArmiPluginManager.unregister"]], "armiplugin (class in armi.plugins)": [[273, "armi.plugins.ArmiPlugin"]], "pluginerror": [[273, "armi.plugins.PluginError"]], "userplugin (class in armi.plugins)": [[273, "armi.plugins.UserPlugin"]], "afterconstructionofassemblies() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.afterConstructionOfAssemblies"]], "armi.plugins": [[273, "module-armi.plugins"]], "collectinterfacedescriptions() (in module armi.plugins)": [[273, "armi.plugins.collectInterfaceDescriptions"]], "defineassemblytypes() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineBlockTypes"]], "defineblueprintssections() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineBlueprintsSections"]], "definecasedependencies() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineCaseDependencies"]], "defineentrypoints() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineEntryPoints"]], "defineflags() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineFlags"]], "defineguiwidgets() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineGuiWidgets"]], "defineparameterrenames() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineParameterRenames"]], "defineparameterrenames() (armi.plugins.userplugin static method)": [[273, "armi.plugins.UserPlugin.defineParameterRenames"]], "defineparameters() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineParameters"]], "defineparameters() (armi.plugins.userplugin static method)": [[273, "armi.plugins.UserPlugin.defineParameters"]], "definesettings() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineSettings"]], "definesettings() (armi.plugins.userplugin static method)": [[273, "armi.plugins.UserPlugin.defineSettings"]], "definesettingsvalidators() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineSettingsValidators"]], "definesettingsvalidators() (armi.plugins.userplugin static method)": [[273, "armi.plugins.UserPlugin.defineSettingsValidators"]], "definesystembuilders() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.defineSystemBuilders"]], "exposeinterfaces() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.exposeInterfaces"]], "getnewpluginmanager() (in module armi.plugins)": [[273, "armi.plugins.getNewPluginManager"]], "getoperatorclassfromruntype() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.getOperatorClassFromRunType"]], "getreportcontents() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.getReportContents"]], "mpiactionrequiresreset() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.mpiActionRequiresReset"]], "onprocesscoreloading() (armi.plugins.armiplugin static method)": [[273, "armi.plugins.ArmiPlugin.onProcessCoreLoading"]], "reactorplugin (class in armi.reactor)": [[274, "armi.reactor.ReactorPlugin"]], "armi.reactor": [[274, "module-armi.reactor"]], "defineassemblytypes() (armi.reactor.reactorplugin static method)": [[274, "armi.reactor.ReactorPlugin.defineAssemblyTypes"]], "defineblocktypes() (armi.reactor.reactorplugin static method)": [[274, "armi.reactor.ReactorPlugin.defineBlockTypes"]], "definesystembuilders() (armi.reactor.reactorplugin static method)": [[274, "armi.reactor.ReactorPlugin.defineSystemBuilders"]], "assembly (class in armi.reactor.assemblies)": [[275, "armi.reactor.assemblies.Assembly"]], "cartesianassembly (class in armi.reactor.assemblies)": [[275, "armi.reactor.assemblies.CartesianAssembly"]], "database (armi.reactor.assemblies.assembly attribute)": [[275, "armi.reactor.assemblies.Assembly.DATABASE"]], "hexassembly (class in armi.reactor.assemblies)": [[275, "armi.reactor.assemblies.HexAssembly"]], "load_queue (armi.reactor.assemblies.assembly attribute)": [[275, "armi.reactor.assemblies.Assembly.LOAD_QUEUE"]], "not_in_core (armi.reactor.assemblies.assembly attribute)": [[275, "armi.reactor.assemblies.Assembly.NOT_IN_CORE"]], "rzassembly (class in armi.reactor.assemblies)": [[275, "armi.reactor.assemblies.RZAssembly"]], "spent_fuel_pool (armi.reactor.assemblies.assembly attribute)": [[275, "armi.reactor.assemblies.Assembly.SPENT_FUEL_POOL"]], "thrzassembly (class in armi.reactor.assemblies)": [[275, "armi.reactor.assemblies.ThRZAssembly"]], "add() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.add"]], "adjustresolution() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.adjustResolution"]], "armi.reactor.assemblies": [[275, "module-armi.reactor.assemblies"]], "calculatezcoords() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.calculateZCoords"]], "coords() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.coords"]], "countblockswithflags() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.countBlocksWithFlags"]], "doubleresolution() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.doubleResolution"]], "dump() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.dump"]], "getage() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getAge"]], "getarea() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getArea"]], "getaverageplenumtemperature() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getAveragePlenumTemperature"]], "getaxialmesh() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getAxialMesh"]], "getbindexfromzindex() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getBIndexFromZIndex"]], "getblockatelevation() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getBlockAtElevation"]], "getblocks() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getBlocks"]], "getblocksandz() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getBlocksAndZ"]], "getblocksbetweenelevations() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getBlocksBetweenElevations"]], "getdim() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getDim"]], "getelevationboundariesbyblocktype() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getElevationBoundariesByBlockType"]], "getelevationsmatchingparamvalue() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getElevationsMatchingParamValue"]], "getfirstblock() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getFirstBlock"]], "getfirstblockbytype() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getFirstBlockByType"]], "getheight() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getHeight"]], "getlocation() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getLocation"]], "getnum() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getNum"]], "getparamofzfunction() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getParamOfZFunction"]], "getparamvaluesatz() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getParamValuesAtZ"]], "getpinplenumvolumeincubicmeters() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getPinPlenumVolumeInCubicMeters"]], "getreactiveheight() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getReactiveHeight"]], "getsymmetryfactor() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getSymmetryFactor"]], "gettotalheight() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getTotalHeight"]], "getvolume() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.getVolume"]], "hascontinuouscoolantchannel() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.hasContinuousCoolantChannel"]], "insert() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.insert"]], "makeaxialsnaplist() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.makeAxialSnapList"]], "makenamefromassemnum() (armi.reactor.assemblies.assembly static method)": [[275, "armi.reactor.assemblies.Assembly.makeNameFromAssemNum"]], "makeunique() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.makeUnique"]], "moveto() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.moveTo"]], "pdefs (armi.reactor.assemblies.assembly attribute)": [[275, "armi.reactor.assemblies.Assembly.pDefs"]], "paramcollectiontype (armi.reactor.assemblies.assembly attribute)": [[275, "armi.reactor.assemblies.Assembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.cartesianassembly attribute)": [[275, "armi.reactor.assemblies.CartesianAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.hexassembly attribute)": [[275, "armi.reactor.assemblies.HexAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.rzassembly attribute)": [[275, "armi.reactor.assemblies.RZAssembly.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblies.thrzassembly attribute)": [[275, "armi.reactor.assemblies.ThRZAssembly.paramCollectionType"]], "radialinner() (armi.reactor.assemblies.rzassembly method)": [[275, "armi.reactor.assemblies.RZAssembly.radialInner"]], "radialouter() (armi.reactor.assemblies.rzassembly method)": [[275, "armi.reactor.assemblies.RZAssembly.radialOuter"]], "reestablishblockorder() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.reestablishBlockOrder"]], "renameblocksaccordingtoassemblynum() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.renameBlocksAccordingToAssemblyNum"]], "renumber() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.renumber"]], "rotate() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.rotate"]], "rotatepins() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.rotatePins"]], "setblockheights() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.setBlockHeights"]], "setblockmesh() (armi.reactor.assemblies.assembly method)": [[275, "armi.reactor.assemblies.Assembly.setBlockMesh"]], "thetainner() (armi.reactor.assemblies.rzassembly method)": [[275, "armi.reactor.assemblies.RZAssembly.thetaInner"]], "thetaouter() (armi.reactor.assemblies.rzassembly method)": [[275, "armi.reactor.assemblies.RZAssembly.thetaOuter"]], "assemblylist (class in armi.reactor.assemblylists)": [[276, "armi.reactor.assemblyLists.AssemblyList"]], "autofiller (class in armi.reactor.assemblylists)": [[276, "armi.reactor.assemblyLists.AutoFiller"]], "rowmajorautofiller (class in armi.reactor.assemblylists)": [[276, "armi.reactor.assemblyLists.RowMajorAutoFiller"]], "spentfuelpool (class in armi.reactor.assemblylists)": [[276, "armi.reactor.assemblyLists.SpentFuelPool"]], "add() (armi.reactor.assemblylists.assemblylist method)": [[276, "armi.reactor.assemblyLists.AssemblyList.add"]], "add() (armi.reactor.assemblylists.spentfuelpool method)": [[276, "armi.reactor.assemblyLists.SpentFuelPool.add"]], "armi.reactor.assemblylists": [[276, "module-armi.reactor.assemblyLists"]], "assemblyadded() (armi.reactor.assemblylists.autofiller method)": [[276, "armi.reactor.assemblyLists.AutoFiller.assemblyAdded"]], "assemblyadded() (armi.reactor.assemblylists.rowmajorautofiller method)": [[276, "armi.reactor.assemblyLists.RowMajorAutoFiller.assemblyAdded"]], "count() (armi.reactor.assemblylists.assemblylist method)": [[276, "armi.reactor.assemblyLists.AssemblyList.count"]], "getassembly() (armi.reactor.assemblylists.assemblylist method)": [[276, "armi.reactor.assemblyLists.AssemblyList.getAssembly"]], "getnextlocation() (armi.reactor.assemblylists.autofiller method)": [[276, "armi.reactor.assemblyLists.AutoFiller.getNextLocation"]], "getnextlocation() (armi.reactor.assemblylists.rowmajorautofiller method)": [[276, "armi.reactor.assemblyLists.RowMajorAutoFiller.getNextLocation"]], "normalizenames() (armi.reactor.assemblylists.spentfuelpool method)": [[276, "armi.reactor.assemblyLists.SpentFuelPool.normalizeNames"]], "paramcollectiontype (armi.reactor.assemblylists.assemblylist attribute)": [[276, "armi.reactor.assemblyLists.AssemblyList.paramCollectionType"]], "paramcollectiontype (armi.reactor.assemblylists.spentfuelpool attribute)": [[276, "armi.reactor.assemblyLists.SpentFuelPool.paramCollectionType"]], "r (armi.reactor.assemblylists.assemblylist property)": [[276, "armi.reactor.assemblyLists.AssemblyList.r"]], "report() (armi.reactor.assemblylists.spentfuelpool method)": [[276, "armi.reactor.assemblyLists.SpentFuelPool.report"]], "armi.reactor.assemblyparameters": [[277, "module-armi.reactor.assemblyParameters"]], "getassemblyparameterdefinitions() (in module armi.reactor.assemblyparameters)": [[277, "armi.reactor.assemblyParameters.getAssemblyParameterDefinitions"]], "armi.reactor.blockparameters": [[278, "module-armi.reactor.blockParameters"]], "getblockparameterdefinitions() (in module armi.reactor.blockparameters)": [[278, "armi.reactor.blockParameters.getBlockParameterDefinitions"]], "block (class in armi.reactor.blocks)": [[279, "armi.reactor.blocks.Block"]], "cartesianblock (class in armi.reactor.blocks)": [[279, "armi.reactor.blocks.CartesianBlock"]], "hexblock (class in armi.reactor.blocks)": [[279, "armi.reactor.blocks.HexBlock"]], "pitch_component_type (armi.reactor.blocks.block attribute)": [[279, "armi.reactor.blocks.Block.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.cartesianblock attribute)": [[279, "armi.reactor.blocks.CartesianBlock.PITCH_COMPONENT_TYPE"]], "pitch_component_type (armi.reactor.blocks.hexblock attribute)": [[279, "armi.reactor.blocks.HexBlock.PITCH_COMPONENT_TYPE"]], "pitch_dimension (armi.reactor.blocks.block attribute)": [[279, "armi.reactor.blocks.Block.PITCH_DIMENSION"]], "pitch_dimension (armi.reactor.blocks.cartesianblock attribute)": [[279, "armi.reactor.blocks.CartesianBlock.PITCH_DIMENSION"]], "thrzblock (class in armi.reactor.blocks)": [[279, "armi.reactor.blocks.ThRZBlock"]], "add() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.add"]], "adjustdensity() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.adjustDensity"]], "adjustuenrich() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.adjustUEnrich"]], "armi.reactor.blocks": [[279, "module-armi.reactor.blocks"]], "autocreatespatialgrids() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.autoCreateSpatialGrids"]], "autocreatespatialgrids() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.autoCreateSpatialGrids"]], "axialinner() (armi.reactor.blocks.thrzblock method)": [[279, "armi.reactor.blocks.ThRZBlock.axialInner"]], "axialouter() (armi.reactor.blocks.thrzblock method)": [[279, "armi.reactor.blocks.ThRZBlock.axialOuter"]], "breakfuelcomponentsintoindividuals() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.breakFuelComponentsIntoIndividuals"]], "completeinitialloading() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.completeInitialLoading"]], "coords() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.coords"]], "coords() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.coords"]], "core (armi.reactor.blocks.block property)": [[279, "armi.reactor.blocks.Block.core"]], "getarea() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getArea"]], "getblocks() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getBlocks"]], "getcomponentareafrac() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getComponentAreaFrac"]], "getcomponentsinlinkedorder() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getComponentsInLinkedOrder"]], "getcomponentsthatarelinkedto() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getComponentsThatAreLinkedTo"]], "getdim() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getDim"]], "getdimensions() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getDimensions"]], "getductip() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.getDuctIP"]], "getductop() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.getDuctOP"]], "getflowarea() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.getFlowArea"]], "getflowareaperpin() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getFlowAreaPerPin"]], "getheight() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getHeight"]], "gethydraulicdiameter() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getHydraulicDiameter"]], "gethydraulicdiameter() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.getHydraulicDiameter"]], "getintegratedmgflux() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getIntegratedMgFlux"]], "getlargestcomponent() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getLargestComponent"]], "getlocation() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getLocation"]], "getlumpedfissionproductcollection() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getLumpedFissionProductCollection"]], "getmaxarea() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.cartesianblock method)": [[279, "armi.reactor.blocks.CartesianBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.getMaxArea"]], "getmaxarea() (armi.reactor.blocks.thrzblock method)": [[279, "armi.reactor.blocks.ThRZBlock.getMaxArea"]], "getmaxvolume() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getMaxVolume"]], "getmfp() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getMfp"]], "getmgflux() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getMgFlux"]], "getmicrosuffix() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getMicroSuffix"]], "getnumpins() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getNumPins"]], "getpincenterflattoflat() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.cartesianblock method)": [[279, "armi.reactor.blocks.CartesianBlock.getPinCenterFlatToFlat"]], "getpincenterflattoflat() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.getPinCenterFlatToFlat"]], "getpincoordinates() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getPinCoordinates"]], "getpinpitch() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getPinPitch"]], "getpinpitch() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.getPinPitch"]], "getpintoductgap() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.getPinToDuctGap"]], "getpitch() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getPitch"]], "getplenumpin() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getPlenumPin"]], "getrotationnum() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.getRotationNum"]], "getsmeardensity() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getSmearDensity"]], "getsortedcomponentsinsideofcomponent() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getSortedComponentsInsideOfComponent"]], "getsymmetryfactor() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.cartesianblock method)": [[279, "armi.reactor.blocks.CartesianBlock.getSymmetryFactor"]], "getsymmetryfactor() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.getSymmetryFactor"]], "getvolume() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getVolume"]], "getwettedperimeter() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getWettedPerimeter"]], "getwettedperimeter() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.getWettedPerimeter"]], "getwirewrapcladgap() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.getWireWrapCladGap"]], "haspinpitch() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.hasPinPitch"]], "haspinpitch() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.hasPinPitch"]], "initializepinlocations() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.initializePinLocations"]], "isonwhichsymmetryline() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.isOnWhichSymmetryLine"]], "isplenumpin() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.isPlenumPin"]], "makename() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.makeName"]], "mergewithblock() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.mergeWithBlock"]], "pdefs (armi.reactor.blocks.block attribute)": [[279, "armi.reactor.blocks.Block.pDefs"]], "paramcollectiontype (armi.reactor.blocks.block attribute)": [[279, "armi.reactor.blocks.Block.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.cartesianblock attribute)": [[279, "armi.reactor.blocks.CartesianBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.hexblock attribute)": [[279, "armi.reactor.blocks.HexBlock.paramCollectionType"]], "paramcollectiontype (armi.reactor.blocks.thrzblock attribute)": [[279, "armi.reactor.blocks.ThRZBlock.paramCollectionType"]], "plotflux() (armi.reactor.blocks.block static method)": [[279, "armi.reactor.blocks.Block.plotFlux"]], "r (armi.reactor.blocks.block property)": [[279, "armi.reactor.blocks.Block.r"]], "radialinner() (armi.reactor.blocks.thrzblock method)": [[279, "armi.reactor.blocks.ThRZBlock.radialInner"]], "radialouter() (armi.reactor.blocks.thrzblock method)": [[279, "armi.reactor.blocks.ThRZBlock.radialOuter"]], "remove() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.remove"]], "removeall() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.removeAll"]], "replaceblockwithblock() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.replaceBlockWithBlock"]], "rotate() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.rotate"]], "rotate() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.rotate"]], "rotatepins() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.rotatePins"]], "setareafractionsreport() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.setAreaFractionsReport"]], "setaxialexptargetcomp() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.setAxialExpTargetComp"]], "setb10volparam() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.setB10VolParam"]], "setbulimitinfo() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.setBuLimitInfo"]], "setheight() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.setHeight"]], "setpinmgfluxes() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.setPinMgFluxes"]], "setpinpowers() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.setPinPowers"]], "setpitch() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.setPitch"]], "setpitch() (armi.reactor.blocks.cartesianblock method)": [[279, "armi.reactor.blocks.CartesianBlock.setPitch"]], "setrotationnum() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.setRotationNum"]], "thetainner() (armi.reactor.blocks.thrzblock method)": [[279, "armi.reactor.blocks.ThRZBlock.thetaInner"]], "thetaouter() (armi.reactor.blocks.thrzblock method)": [[279, "armi.reactor.blocks.ThRZBlock.thetaOuter"]], "uniqid (armi.reactor.blocks.block attribute)": [[279, "armi.reactor.blocks.Block.uniqID"]], "updatecomponentdims() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.updateComponentDims"]], "verifyblockdims() (armi.reactor.blocks.block method)": [[279, "armi.reactor.blocks.Block.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.hexblock method)": [[279, "armi.reactor.blocks.HexBlock.verifyBlockDims"]], "verifyblockdims() (armi.reactor.blocks.thrzblock method)": [[279, "armi.reactor.blocks.ThRZBlock.verifyBlockDims"]], "blueprints (class in armi.reactor.blueprints)": [[280, "armi.reactor.blueprints.Blueprints"]], "adddefaultsfp() (armi.reactor.blueprints.blueprints method)": [[280, "armi.reactor.blueprints.Blueprints.addDefaultSFP"]], "armi.reactor.blueprints": [[280, "module-armi.reactor.blueprints"]], "attributes (armi.reactor.blueprints.blueprints attribute)": [[280, "armi.reactor.blueprints.Blueprints.attributes"]], "constructassem() (armi.reactor.blueprints.blueprints method)": [[280, "armi.reactor.blueprints.Blueprints.constructAssem"]], "load() (armi.reactor.blueprints.blueprints class method)": [[280, "armi.reactor.blueprints.Blueprints.load"]], "loadfromcs() (in module armi.reactor.blueprints)": [[280, "armi.reactor.blueprints.loadFromCs"]], "migrate() (armi.reactor.blueprints.blueprints class method)": [[280, "armi.reactor.blueprints.Blueprints.migrate"]], "migrate() (in module armi.reactor.blueprints)": [[280, "armi.reactor.blueprints.migrate"]], "assemblyblueprint (class in armi.reactor.blueprints.assemblyblueprint)": [[281, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint"]], "assemblykeyedlist (class in armi.reactor.blueprints.assemblyblueprint)": [[281, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList"]], "bycomponentmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[281, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications"]], "materialmodifications (class in armi.reactor.blueprints.assemblyblueprint)": [[281, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications"]], "modifications (class in armi.reactor.blueprints.assemblyblueprint)": [[281, "armi.reactor.blueprints.assemblyBlueprint.Modifications"]], "armi.reactor.blueprints.assemblyblueprint": [[281, "module-armi.reactor.blueprints.assemblyBlueprint"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.attributes"]], "attributes (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.Modifications.attributes"]], "byspecifier (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist property)": [[281, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.bySpecifier"]], "construct() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint method)": [[281, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.construct"]], "getassemclass() (armi.reactor.blueprints.assemblyblueprint.assemblyblueprint class method)": [[281, "armi.reactor.blueprints.assemblyBlueprint.AssemblyBlueprint.getAssemClass"]], "item_type (armi.reactor.blueprints.assemblyblueprint.assemblykeyedlist attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.AssemblyKeyedList.item_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.key_type"]], "key_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.Modifications.key_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.bycomponentmodifications attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.ByComponentModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.materialmodifications attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.MaterialModifications.value_type"]], "value_type (armi.reactor.blueprints.assemblyblueprint.modifications attribute)": [[281, "armi.reactor.blueprints.assemblyBlueprint.Modifications.value_type"]], "blockblueprint (class in armi.reactor.blueprints.blockblueprint)": [[282, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint"]], "blockkeyedlist (class in armi.reactor.blueprints.blockblueprint)": [[282, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList"]], "blocklist (class in armi.reactor.blueprints.blockblueprint)": [[282, "armi.reactor.blueprints.blockBlueprint.BlockList"]], "armi.reactor.blueprints.blockblueprint": [[282, "module-armi.reactor.blueprints.blockBlueprint"]], "attributes (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[282, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.attributes"]], "attributes (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[282, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.attributes"]], "construct() (armi.reactor.blueprints.blockblueprint.blockblueprint method)": [[282, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.construct"]], "item_type (armi.reactor.blueprints.blockblueprint.blockblueprint attribute)": [[282, "armi.reactor.blueprints.blockBlueprint.BlockBlueprint.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blockkeyedlist attribute)": [[282, "armi.reactor.blueprints.blockBlueprint.BlockKeyedList.item_type"]], "item_type (armi.reactor.blueprints.blockblueprint.blocklist attribute)": [[282, "armi.reactor.blueprints.blockBlueprint.BlockList.item_type"]], "componentblueprint (class in armi.reactor.blueprints.componentblueprint)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint"]], "componentdimension (class in armi.reactor.blueprints.componentblueprint)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentDimension"]], "componentgroup (class in armi.reactor.blueprints.componentblueprint)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentGroup"]], "componentgroups (class in armi.reactor.blueprints.componentblueprint)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentGroups"]], "componentkeyedlist (class in armi.reactor.blueprints.componentblueprint)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList"]], "groupedcomponent (class in armi.reactor.blueprints.componentblueprint)": [[283, "armi.reactor.blueprints.componentBlueprint.GroupedComponent"]], "armi.reactor.blueprints.componentblueprint": [[283, "module-armi.reactor.blueprints.componentBlueprint"]], "attributes (armi.reactor.blueprints.componentblueprint.componentblueprint attribute)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentdimension attribute)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.attributes"]], "attributes (armi.reactor.blueprints.componentblueprint.groupedcomponent attribute)": [[283, "armi.reactor.blueprints.componentBlueprint.GroupedComponent.attributes"]], "construct() (armi.reactor.blueprints.componentblueprint.componentblueprint method)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentBlueprint.construct"]], "expandelementals() (in module armi.reactor.blueprints.componentblueprint)": [[283, "armi.reactor.blueprints.componentBlueprint.expandElementals"]], "from_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.from_yaml"]], "insertdepletablenuclidekeys() (in module armi.reactor.blueprints.componentblueprint)": [[283, "armi.reactor.blueprints.componentBlueprint.insertDepletableNuclideKeys"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroup attribute)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentGroup.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentgroups attribute)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentGroups.item_type"]], "item_type (armi.reactor.blueprints.componentblueprint.componentkeyedlist attribute)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentKeyedList.item_type"]], "to_yaml() (armi.reactor.blueprints.componentblueprint.componentdimension class method)": [[283, "armi.reactor.blueprints.componentBlueprint.ComponentDimension.to_yaml"]], "gridblueprint (class in armi.reactor.blueprints.gridblueprint)": [[284, "armi.reactor.blueprints.gridBlueprint.GridBlueprint"]], "grids (class in armi.reactor.blueprints.gridblueprint)": [[284, "armi.reactor.blueprints.gridBlueprint.Grids"]], "triplet (class in armi.reactor.blueprints.gridblueprint)": [[284, "armi.reactor.blueprints.gridBlueprint.Triplet"]], "armi.reactor.blueprints.gridblueprint": [[284, "module-armi.reactor.blueprints.gridBlueprint"]], "attributes (armi.reactor.blueprints.gridblueprint.gridblueprint attribute)": [[284, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.grids attribute)": [[284, "armi.reactor.blueprints.gridBlueprint.Grids.attributes"]], "attributes (armi.reactor.blueprints.gridblueprint.triplet attribute)": [[284, "armi.reactor.blueprints.gridBlueprint.Triplet.attributes"]], "construct() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[284, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.construct"]], "expandtofull() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[284, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.expandToFull"]], "getlocators() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[284, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getLocators"]], "getmultilocator() (armi.reactor.blueprints.gridblueprint.gridblueprint method)": [[284, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.getMultiLocator"]], "item_type (armi.reactor.blueprints.gridblueprint.grids attribute)": [[284, "armi.reactor.blueprints.gridBlueprint.Grids.item_type"]], "readfromlatticemap (armi.reactor.blueprints.gridblueprint.gridblueprint property)": [[284, "armi.reactor.blueprints.gridBlueprint.GridBlueprint.readFromLatticeMap"]], "savetostream() (in module armi.reactor.blueprints.gridblueprint)": [[284, "armi.reactor.blueprints.gridBlueprint.saveToStream"]], "customisotopic (class in armi.reactor.blueprints.isotopicoptions)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic"]], "customisotopics (class in armi.reactor.blueprints.isotopicoptions)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics"]], "nuclideflag (class in armi.reactor.blueprints.isotopicoptions)": [[285, "armi.reactor.blueprints.isotopicOptions.NuclideFlag"]], "nuclideflags (class in armi.reactor.blueprints.isotopicoptions)": [[285, "armi.reactor.blueprints.isotopicOptions.NuclideFlags"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopic method)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.apply"]], "apply() (armi.reactor.blueprints.isotopicoptions.customisotopics method)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.apply"]], "armi.reactor.blueprints.isotopicoptions": [[285, "module-armi.reactor.blueprints.isotopicOptions"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflag attribute)": [[285, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.attributes"]], "attributes (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[285, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.attributes"]], "autoupdatenuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[285, "armi.reactor.blueprints.isotopicOptions.autoUpdateNuclideFlags"]], "density (armi.reactor.blueprints.isotopicoptions.customisotopic property)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.density"]], "eleexpandinfobasedoncodeendf() (in module armi.reactor.blueprints.isotopicoptions)": [[285, "armi.reactor.blueprints.isotopicOptions.eleExpandInfoBasedOnCodeENDF"]], "fileasactiveorinert() (armi.reactor.blueprints.isotopicoptions.nuclideflag method)": [[285, "armi.reactor.blueprints.isotopicOptions.NuclideFlag.fileAsActiveOrInert"]], "from_yaml() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml"]], "from_yaml_key_val() (armi.reactor.blueprints.isotopicoptions.customisotopic class method)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.from_yaml_key_val"]], "gendefaultnucflags() (in module armi.reactor.blueprints.isotopicoptions)": [[285, "armi.reactor.blueprints.isotopicOptions.genDefaultNucFlags"]], "getallnuclidebasesbylibrary() (in module armi.reactor.blueprints.isotopicoptions)": [[285, "armi.reactor.blueprints.isotopicOptions.getAllNuclideBasesByLibrary"]], "getdefaultnuclideflags() (in module armi.reactor.blueprints.isotopicoptions)": [[285, "armi.reactor.blueprints.isotopicOptions.getDefaultNuclideFlags"]], "item_type (armi.reactor.blueprints.isotopicoptions.customisotopics attribute)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopics.item_type"]], "item_type (armi.reactor.blueprints.isotopicoptions.nuclideflags attribute)": [[285, "armi.reactor.blueprints.isotopicOptions.NuclideFlags.item_type"]], "key_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.key_type"]], "value_type (armi.reactor.blueprints.isotopicoptions.customisotopic attribute)": [[285, "armi.reactor.blueprints.isotopicOptions.CustomIsotopic.value_type"]], "systemblueprint (class in armi.reactor.blueprints.reactorblueprint)": [[286, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint"]], "systems (class in armi.reactor.blueprints.reactorblueprint)": [[286, "armi.reactor.blueprints.reactorBlueprint.Systems"]], "armi.reactor.blueprints.reactorblueprint": [[286, "module-armi.reactor.blueprints.reactorBlueprint"]], "attributes (armi.reactor.blueprints.reactorblueprint.systemblueprint attribute)": [[286, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.attributes"]], "attributes (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[286, "armi.reactor.blueprints.reactorBlueprint.Systems.attributes"]], "construct() (armi.reactor.blueprints.reactorblueprint.systemblueprint method)": [[286, "armi.reactor.blueprints.reactorBlueprint.SystemBlueprint.construct"]], "item_type (armi.reactor.blueprints.reactorblueprint.systems attribute)": [[286, "armi.reactor.blueprints.reactorBlueprint.Systems.item_type"]], "summarizematerialdata() (in module armi.reactor.blueprints.reactorblueprint)": [[286, "armi.reactor.blueprints.reactorBlueprint.summarizeMaterialData"]], "armi.reactor.blueprints.tests": [[287, "module-armi.reactor.blueprints.tests"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_assemblyblueprints)": [[288, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_assemblyblueprints": [[288, "module-armi.reactor.blueprints.tests.test_assemblyBlueprints"]], "loadcustomassembly() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[288, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.loadCustomAssembly"]], "test_checkparamconsistency() (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications method)": [[288, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.test_checkParamConsistency"]], "twoblockinput_correct (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[288, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_correct"]], "twoblockinput_wrongheights (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[288, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongHeights"]], "twoblockinput_wrongmatmods (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[288, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMatMods"]], "twoblockinput_wrongmeshpoints (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[288, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongMeshPoints"]], "twoblockinput_wrongxstypes (armi.reactor.blueprints.tests.test_assemblyblueprints.testmaterialmodifications attribute)": [[288, "armi.reactor.blueprints.tests.test_assemblyBlueprints.TestMaterialModifications.twoBlockInput_wrongXSTypes"]], "testgriddedblock (class in armi.reactor.blueprints.tests.test_blockblueprints)": [[289, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock"]], "armi.reactor.blueprints.tests.test_blockblueprints": [[289, "module-armi.reactor.blueprints.tests.test_blockBlueprints"]], "test_blocklattice() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[289, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_blockLattice"]], "test_constructspatialgrid() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[289, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_constructSpatialGrid"]], "test_densityconsistentwithcomponentconstructor() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[289, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_densityConsistentWithComponentConstructor"]], "test_explicitflags() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[289, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_explicitFlags"]], "test_getlocatorsatlatticepositions() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[289, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_getLocatorsAtLatticePositions"]], "test_nonlatticecomponenthasrightmult() (armi.reactor.blueprints.tests.test_blockblueprints.testgriddedblock method)": [[289, "armi.reactor.blueprints.tests.test_blockBlueprints.TestGriddedBlock.test_nonLatticeComponentHasRightMult"]], "testblueprints (class in armi.reactor.blueprints.tests.test_blueprints)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints"]], "testblueprintsschema (class in armi.reactor.blueprints.tests.test_blueprints)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema"]], "armi.reactor.blueprints.tests.test_blueprints": [[290, "module-armi.reactor.blueprints.tests.test_blueprints"]], "test_assemblyparameters() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_assemblyParameters"]], "test_cladding_invalid() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_cladding_invalid"]], "test_componentdimensions() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_componentDimensions"]], "test_componentgroupinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_componentGroupInput"]], "test_components() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_components"]], "test_customisotopics() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_customIsotopics"]], "test_getassemblytypebyspecifier() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_getAssemblyTypeBySpecifier"]], "test_merge() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_merge"]], "test_noduplicatekeysinyamlblueprints() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_noDuplicateKeysInYamlBlueprints"]], "test_nuclideflags() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclideFlags"]], "test_nuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_nuclides"]], "test_nuclidesmc2v2() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v2"]], "test_nuclidesmc2v3() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_nuclidesMc2v3"]], "test_specialisotopicvectors() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_specialIsotopicVectors"]], "test_toplevelcomponentinput() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_topLevelComponentInput"]], "test_tracenuclides() (armi.reactor.blueprints.tests.test_blueprints.testblueprints method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprints.test_traceNuclides"]], "test_withoutblocks() (armi.reactor.blueprints.tests.test_blueprints.testblueprintsschema method)": [[290, "armi.reactor.blueprints.tests.test_blueprints.TestBlueprintsSchema.test_withoutBlocks"]], "testcomponentblueprint (class in armi.reactor.blueprints.tests.test_componentblueprint)": [[291, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint"]], "armi.reactor.blueprints.tests.test_componentblueprint": [[291, "module-armi.reactor.blueprints.tests.test_componentBlueprint"]], "componentstring (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint attribute)": [[291, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.componentString"]], "test_autodepletable() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[291, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_autoDepletable"]], "test_componentinitializationamericiumcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[291, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationAmericiumCustomIsotopics"]], "test_componentinitializationcontrolcustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[291, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationControlCustomIsotopics"]], "test_componentinitializationincompleteburnchain() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[291, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationIncompleteBurnChain"]], "test_componentinitializationthoriumburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[291, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumBurnCustomIsotopics"]], "test_componentinitializationthoriumnoburncustomisotopics() (armi.reactor.blueprints.tests.test_componentblueprint.testcomponentblueprint method)": [[291, "armi.reactor.blueprints.tests.test_componentBlueprint.TestComponentBlueprint.test_componentInitializationThoriumNoBurnCustomIsotopics"]], "testcustomisotopics (class in armi.reactor.blueprints.tests.test_customisotopics)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics"]], "testcustomisotopics_errorconditions (class in armi.reactor.blueprints.tests.test_customisotopics)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions"]], "testnuclideflagsexpansion (class in armi.reactor.blueprints.tests.test_customisotopics)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion"]], "armi.reactor.blueprints.tests.test_customisotopics": [[292, "module-armi.reactor.blueprints.tests.test_customIsotopics"]], "test_densitymustbepositive() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_densityMustBePositive"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_expandedNatural"]], "test_expandednatural() (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion method)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.test_expandedNatural"]], "test_massfractionsareapplied() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_massFractionsAreApplied"]], "test_nonconformantelementname() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_nonConformantElementName"]], "test_numberdensities() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensities"]], "test_numberdensitiesanchor() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberDensitiesAnchor"]], "test_numberdensitiescannotspecifydensity() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics_errorconditions method)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics_ErrorConditions.test_numberDensitiesCannotSpecifyDensity"]], "test_numberfractions() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_numberFractions"]], "test_unmodified() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unmodified"]], "test_unrepresentedareonlynatural() (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics method)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.test_unrepresentedAreOnlyNatural"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testcustomisotopics attribute)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestCustomIsotopics.yamlString"]], "yamlstring (armi.reactor.blueprints.tests.test_customisotopics.testnuclideflagsexpansion attribute)": [[292, "armi.reactor.blueprints.tests.test_customIsotopics.TestNuclideFlagsExpansion.yamlString"]], "testgridblueprintssection (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[293, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection"]], "testrztgridblueprint (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[293, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint"]], "testroundtrip (class in armi.reactor.blueprints.tests.test_gridblueprints)": [[293, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRoundTrip"]], "armi.reactor.blueprints.tests.test_gridblueprints": [[293, "module-armi.reactor.blueprints.tests.test_gridBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[293, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_construct"]], "test_contents() (armi.reactor.blueprints.tests.test_gridblueprints.testroundtrip method)": [[293, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRoundTrip.test_contents"]], "test_geomfile() (armi.reactor.blueprints.tests.test_gridblueprints.testrztgridblueprint method)": [[293, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRZTGridBlueprint.test_geomFile"]], "test_roundtrip() (armi.reactor.blueprints.tests.test_gridblueprints.testroundtrip method)": [[293, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRoundTrip.test_roundTrip"]], "test_simpleread() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[293, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleRead"]], "test_simplereadlatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[293, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadLatticeMap"]], "test_simplereadnolatticemap() (armi.reactor.blueprints.tests.test_gridblueprints.testgridblueprintssection method)": [[293, "armi.reactor.blueprints.tests.test_gridBlueprints.TestGridBlueprintsSection.test_simpleReadNoLatticeMap"]], "test_tiny_map() (armi.reactor.blueprints.tests.test_gridblueprints.testroundtrip method)": [[293, "armi.reactor.blueprints.tests.test_gridBlueprints.TestRoundTrip.test_tiny_map"]], "testmaterialmodifications (class in armi.reactor.blueprints.tests.test_materialmodifications)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications"]], "armi.reactor.blueprints.tests.test_materialmodifications": [[294, "module-armi.reactor.blueprints.tests.test_materialModifications"]], "boroninput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.boronInput"]], "loaduzrassembly() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.loadUZrAssembly"]], "test_both_u235_zr_wt_frac_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_both_u235_zr_wt_frac_modification"]], "test_checkbycomponentmaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_checkByComponentMaterialInput"]], "test_filtermaterialinput() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_filterMaterialInput"]], "test_invalidmatmodname() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalidMatModName"]], "test_invalid_component_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_invalid_component_modification"]], "test_matmodsupthemro() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_matModsUpTheMRO"]], "test_nomaterialmodifications() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_noMaterialModifications"]], "test_u235_wt_frac_bycomponent_modification1() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification1"]], "test_u235_wt_frac_bycomponent_modification2() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_byComponent_modification2"]], "test_u235_wt_frac_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_u235_wt_frac_modification"]], "test_zr_wt_frac_modification() (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications method)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.test_zr_wt_frac_modification"]], "uzrinput (armi.reactor.blueprints.tests.test_materialmodifications.testmaterialmodifications attribute)": [[294, "armi.reactor.blueprints.tests.test_materialModifications.TestMaterialModifications.uZrInput"]], "testreactorblueprints (class in armi.reactor.blueprints.tests.test_reactorblueprints)": [[295, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints"]], "armi.reactor.blueprints.tests.test_reactorblueprints": [[295, "module-armi.reactor.blueprints.tests.test_reactorBlueprints"]], "test_construct() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[295, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_construct"]], "test_materialdatasummary() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[295, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_materialDataSummary"]], "test_simple_read() (armi.reactor.blueprints.tests.test_reactorblueprints.testreactorblueprints method)": [[295, "armi.reactor.blueprints.tests.test_reactorBlueprints.TestReactorBlueprints.test_simple_read"]], "dimension_names (armi.reactor.components.derivedshape attribute)": [[296, "armi.reactor.components.DerivedShape.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.nullcomponent attribute)": [[296, "armi.reactor.components.NullComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[296, "armi.reactor.components.PositiveOrNegativeVolumeComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedcomponent attribute)": [[296, "armi.reactor.components.UnshapedComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[296, "armi.reactor.components.UnshapedVolumetricComponent.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.zeromasscomponent attribute)": [[296, "armi.reactor.components.ZeroMassComponent.DIMENSION_NAMES"]], "derivedshape (class in armi.reactor.components)": [[296, "armi.reactor.components.DerivedShape"]], "init_signature (armi.reactor.components.derivedshape attribute)": [[296, "armi.reactor.components.DerivedShape.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.nullcomponent attribute)": [[296, "armi.reactor.components.NullComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[296, "armi.reactor.components.PositiveOrNegativeVolumeComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedcomponent attribute)": [[296, "armi.reactor.components.UnshapedComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[296, "armi.reactor.components.UnshapedVolumetricComponent.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.zeromasscomponent attribute)": [[296, "armi.reactor.components.ZeroMassComponent.INIT_SIGNATURE"]], "nullcomponent (class in armi.reactor.components)": [[296, "armi.reactor.components.NullComponent"]], "positiveornegativevolumecomponent (class in armi.reactor.components)": [[296, "armi.reactor.components.PositiveOrNegativeVolumeComponent"]], "unshapedcomponent (class in armi.reactor.components)": [[296, "armi.reactor.components.UnshapedComponent"]], "unshapedvolumetriccomponent (class in armi.reactor.components)": [[296, "armi.reactor.components.UnshapedVolumetricComponent"]], "zeromasscomponent (class in armi.reactor.components)": [[296, "armi.reactor.components.ZeroMassComponent"]], "armi.reactor.components": [[296, "module-armi.reactor.components"]], "computevolume() (armi.reactor.components.derivedshape method)": [[296, "armi.reactor.components.DerivedShape.computeVolume"]], "factory() (in module armi.reactor.components)": [[296, "armi.reactor.components.factory"]], "fromcomponent() (armi.reactor.components.unshapedcomponent static method)": [[296, "armi.reactor.components.UnshapedComponent.fromComponent"]], "getboundingcircleouterdiameter() (armi.reactor.components.derivedshape method)": [[296, "armi.reactor.components.DerivedShape.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.nullcomponent method)": [[296, "armi.reactor.components.NullComponent.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.unshapedcomponent method)": [[296, "armi.reactor.components.UnshapedComponent.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.derivedshape method)": [[296, "armi.reactor.components.DerivedShape.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedcomponent method)": [[296, "armi.reactor.components.UnshapedComponent.getComponentArea"]], "getcomponentarea() (armi.reactor.components.unshapedvolumetriccomponent method)": [[296, "armi.reactor.components.UnshapedVolumetricComponent.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[296, "armi.reactor.components.UnshapedVolumetricComponent.getComponentVolume"]], "getdimension() (armi.reactor.components.nullcomponent method)": [[296, "armi.reactor.components.NullComponent.getDimension"]], "getnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[296, "armi.reactor.components.ZeroMassComponent.getNumberDensity"]], "getvolume() (armi.reactor.components.derivedshape method)": [[296, "armi.reactor.components.DerivedShape.getVolume"]], "is3d (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[296, "armi.reactor.components.UnshapedVolumetricComponent.is3D"]], "pdefs (armi.reactor.components.unshapedcomponent attribute)": [[296, "armi.reactor.components.UnshapedComponent.pDefs"]], "paramcollectiontype (armi.reactor.components.derivedshape attribute)": [[296, "armi.reactor.components.DerivedShape.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.nullcomponent attribute)": [[296, "armi.reactor.components.NullComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.positiveornegativevolumecomponent attribute)": [[296, "armi.reactor.components.PositiveOrNegativeVolumeComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedcomponent attribute)": [[296, "armi.reactor.components.UnshapedComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.unshapedvolumetriccomponent attribute)": [[296, "armi.reactor.components.UnshapedVolumetricComponent.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.zeromasscomponent attribute)": [[296, "armi.reactor.components.ZeroMassComponent.paramCollectionType"]], "setnumberdensity() (armi.reactor.components.zeromasscomponent method)": [[296, "armi.reactor.components.ZeroMassComponent.setNumberDensity"]], "setvolume() (armi.reactor.components.unshapedvolumetriccomponent method)": [[296, "armi.reactor.components.UnshapedVolumetricComponent.setVolume"]], "circle (class in armi.reactor.components.basicshapes)": [[297, "armi.reactor.components.basicShapes.Circle"]], "dimension_names (armi.reactor.components.basicshapes.circle attribute)": [[297, "armi.reactor.components.basicShapes.Circle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.hexagon attribute)": [[297, "armi.reactor.components.basicShapes.Hexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.rectangle attribute)": [[297, "armi.reactor.components.basicShapes.Rectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.solidrectangle attribute)": [[297, "armi.reactor.components.basicShapes.SolidRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.square attribute)": [[297, "armi.reactor.components.basicShapes.Square.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.basicshapes.triangle attribute)": [[297, "armi.reactor.components.basicShapes.Triangle.DIMENSION_NAMES"]], "hexagon (class in armi.reactor.components.basicshapes)": [[297, "armi.reactor.components.basicShapes.Hexagon"]], "init_signature (armi.reactor.components.basicshapes.circle attribute)": [[297, "armi.reactor.components.basicShapes.Circle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.hexagon attribute)": [[297, "armi.reactor.components.basicShapes.Hexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.rectangle attribute)": [[297, "armi.reactor.components.basicShapes.Rectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.solidrectangle attribute)": [[297, "armi.reactor.components.basicShapes.SolidRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.square attribute)": [[297, "armi.reactor.components.basicShapes.Square.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.basicshapes.triangle attribute)": [[297, "armi.reactor.components.basicShapes.Triangle.INIT_SIGNATURE"]], "rectangle (class in armi.reactor.components.basicshapes)": [[297, "armi.reactor.components.basicShapes.Rectangle"]], "solidrectangle (class in armi.reactor.components.basicshapes)": [[297, "armi.reactor.components.basicShapes.SolidRectangle"]], "square (class in armi.reactor.components.basicshapes)": [[297, "armi.reactor.components.basicShapes.Square"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.circle attribute)": [[297, "armi.reactor.components.basicShapes.Circle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.hexagon attribute)": [[297, "armi.reactor.components.basicShapes.Hexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.rectangle attribute)": [[297, "armi.reactor.components.basicShapes.Rectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.solidrectangle attribute)": [[297, "armi.reactor.components.basicShapes.SolidRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.basicshapes.triangle attribute)": [[297, "armi.reactor.components.basicShapes.Triangle.THERMAL_EXPANSION_DIMS"]], "triangle (class in armi.reactor.components.basicshapes)": [[297, "armi.reactor.components.basicShapes.Triangle"]], "armi.reactor.components.basicshapes": [[297, "module-armi.reactor.components.basicShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.circle method)": [[297, "armi.reactor.components.basicShapes.Circle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[297, "armi.reactor.components.basicShapes.Hexagon.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[297, "armi.reactor.components.basicShapes.Rectangle.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.basicshapes.square method)": [[297, "armi.reactor.components.basicShapes.Square.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.circle method)": [[297, "armi.reactor.components.basicShapes.Circle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.hexagon method)": [[297, "armi.reactor.components.basicShapes.Hexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.rectangle method)": [[297, "armi.reactor.components.basicShapes.Rectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.basicshapes.square method)": [[297, "armi.reactor.components.basicShapes.Square.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.basicshapes.circle method)": [[297, "armi.reactor.components.basicShapes.Circle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.hexagon method)": [[297, "armi.reactor.components.basicShapes.Hexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.rectangle method)": [[297, "armi.reactor.components.basicShapes.Rectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.solidrectangle method)": [[297, "armi.reactor.components.basicShapes.SolidRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.square method)": [[297, "armi.reactor.components.basicShapes.Square.getComponentArea"]], "getcomponentarea() (armi.reactor.components.basicshapes.triangle method)": [[297, "armi.reactor.components.basicShapes.Triangle.getComponentArea"]], "getperimeter() (armi.reactor.components.basicshapes.hexagon method)": [[297, "armi.reactor.components.basicShapes.Hexagon.getPerimeter"]], "getpitchdata() (armi.reactor.components.basicshapes.hexagon method)": [[297, "armi.reactor.components.basicShapes.Hexagon.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.rectangle method)": [[297, "armi.reactor.components.basicShapes.Rectangle.getPitchData"]], "getpitchdata() (armi.reactor.components.basicshapes.square method)": [[297, "armi.reactor.components.basicShapes.Square.getPitchData"]], "is3d (armi.reactor.components.basicshapes.circle attribute)": [[297, "armi.reactor.components.basicShapes.Circle.is3D"]], "is3d (armi.reactor.components.basicshapes.hexagon attribute)": [[297, "armi.reactor.components.basicShapes.Hexagon.is3D"]], "is3d (armi.reactor.components.basicshapes.rectangle attribute)": [[297, "armi.reactor.components.basicShapes.Rectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.solidrectangle attribute)": [[297, "armi.reactor.components.basicShapes.SolidRectangle.is3D"]], "is3d (armi.reactor.components.basicshapes.square attribute)": [[297, "armi.reactor.components.basicShapes.Square.is3D"]], "is3d (armi.reactor.components.basicshapes.triangle attribute)": [[297, "armi.reactor.components.basicShapes.Triangle.is3D"]], "isencapsulatedby() (armi.reactor.components.basicshapes.circle method)": [[297, "armi.reactor.components.basicShapes.Circle.isEncapsulatedBy"]], "islatticecomponent() (armi.reactor.components.basicshapes.rectangle method)": [[297, "armi.reactor.components.basicShapes.Rectangle.isLatticeComponent"]], "pdefs (armi.reactor.components.basicshapes.circle attribute)": [[297, "armi.reactor.components.basicShapes.Circle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.hexagon attribute)": [[297, "armi.reactor.components.basicShapes.Hexagon.pDefs"]], "pdefs (armi.reactor.components.basicshapes.rectangle attribute)": [[297, "armi.reactor.components.basicShapes.Rectangle.pDefs"]], "pdefs (armi.reactor.components.basicshapes.triangle attribute)": [[297, "armi.reactor.components.basicShapes.Triangle.pDefs"]], "paramcollectiontype (armi.reactor.components.basicshapes.circle attribute)": [[297, "armi.reactor.components.basicShapes.Circle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.hexagon attribute)": [[297, "armi.reactor.components.basicShapes.Hexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.rectangle attribute)": [[297, "armi.reactor.components.basicShapes.Rectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.solidrectangle attribute)": [[297, "armi.reactor.components.basicShapes.SolidRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.square attribute)": [[297, "armi.reactor.components.basicShapes.Square.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.basicshapes.triangle attribute)": [[297, "armi.reactor.components.basicShapes.Triangle.paramCollectionType"]], "dimension_names (armi.reactor.components.complexshapes.helix attribute)": [[298, "armi.reactor.components.complexShapes.Helix.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[298, "armi.reactor.components.complexShapes.HexHoledCircle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedhexagon attribute)": [[298, "armi.reactor.components.complexShapes.HoledHexagon.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedrectangle attribute)": [[298, "armi.reactor.components.complexShapes.HoledRectangle.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.complexshapes.holedsquare attribute)": [[298, "armi.reactor.components.complexShapes.HoledSquare.DIMENSION_NAMES"]], "helix (class in armi.reactor.components.complexshapes)": [[298, "armi.reactor.components.complexShapes.Helix"]], "hexholedcircle (class in armi.reactor.components.complexshapes)": [[298, "armi.reactor.components.complexShapes.HexHoledCircle"]], "holedhexagon (class in armi.reactor.components.complexshapes)": [[298, "armi.reactor.components.complexShapes.HoledHexagon"]], "holedrectangle (class in armi.reactor.components.complexshapes)": [[298, "armi.reactor.components.complexShapes.HoledRectangle"]], "holedsquare (class in armi.reactor.components.complexshapes)": [[298, "armi.reactor.components.complexShapes.HoledSquare"]], "init_signature (armi.reactor.components.complexshapes.helix attribute)": [[298, "armi.reactor.components.complexShapes.Helix.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[298, "armi.reactor.components.complexShapes.HexHoledCircle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedhexagon attribute)": [[298, "armi.reactor.components.complexShapes.HoledHexagon.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedrectangle attribute)": [[298, "armi.reactor.components.complexShapes.HoledRectangle.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.complexshapes.holedsquare attribute)": [[298, "armi.reactor.components.complexShapes.HoledSquare.INIT_SIGNATURE"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.helix attribute)": [[298, "armi.reactor.components.complexShapes.Helix.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[298, "armi.reactor.components.complexShapes.HexHoledCircle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedhexagon attribute)": [[298, "armi.reactor.components.complexShapes.HoledHexagon.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedrectangle attribute)": [[298, "armi.reactor.components.complexShapes.HoledRectangle.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.complexshapes.holedsquare attribute)": [[298, "armi.reactor.components.complexShapes.HoledSquare.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.complexshapes": [[298, "module-armi.reactor.components.complexShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.complexshapes.helix method)": [[298, "armi.reactor.components.complexShapes.Helix.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.helix method)": [[298, "armi.reactor.components.complexShapes.Helix.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.hexholedcircle method)": [[298, "armi.reactor.components.complexShapes.HexHoledCircle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedhexagon method)": [[298, "armi.reactor.components.complexShapes.HoledHexagon.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedrectangle method)": [[298, "armi.reactor.components.complexShapes.HoledRectangle.getCircleInnerDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.complexshapes.holedsquare method)": [[298, "armi.reactor.components.complexShapes.HoledSquare.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.complexshapes.helix method)": [[298, "armi.reactor.components.complexShapes.Helix.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.hexholedcircle method)": [[298, "armi.reactor.components.complexShapes.HexHoledCircle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedhexagon method)": [[298, "armi.reactor.components.complexShapes.HoledHexagon.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedrectangle method)": [[298, "armi.reactor.components.complexShapes.HoledRectangle.getComponentArea"]], "getcomponentarea() (armi.reactor.components.complexshapes.holedsquare method)": [[298, "armi.reactor.components.complexShapes.HoledSquare.getComponentArea"]], "is3d (armi.reactor.components.complexshapes.helix attribute)": [[298, "armi.reactor.components.complexShapes.Helix.is3D"]], "pdefs (armi.reactor.components.complexshapes.helix attribute)": [[298, "armi.reactor.components.complexShapes.Helix.pDefs"]], "pdefs (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[298, "armi.reactor.components.complexShapes.HexHoledCircle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedhexagon attribute)": [[298, "armi.reactor.components.complexShapes.HoledHexagon.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedrectangle attribute)": [[298, "armi.reactor.components.complexShapes.HoledRectangle.pDefs"]], "pdefs (armi.reactor.components.complexshapes.holedsquare attribute)": [[298, "armi.reactor.components.complexShapes.HoledSquare.pDefs"]], "paramcollectiontype (armi.reactor.components.complexshapes.helix attribute)": [[298, "armi.reactor.components.complexShapes.Helix.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.hexholedcircle attribute)": [[298, "armi.reactor.components.complexShapes.HexHoledCircle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedhexagon attribute)": [[298, "armi.reactor.components.complexShapes.HoledHexagon.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedrectangle attribute)": [[298, "armi.reactor.components.complexShapes.HoledRectangle.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.complexshapes.holedsquare attribute)": [[298, "armi.reactor.components.complexShapes.HoledSquare.paramCollectionType"]], "component (class in armi.reactor.components.component)": [[299, "armi.reactor.components.component.Component"]], "componenttype (class in armi.reactor.components.component)": [[299, "armi.reactor.components.component.ComponentType"]], "dimension_names (armi.reactor.components.component.component attribute)": [[299, "armi.reactor.components.component.Component.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.component.shapedcomponent attribute)": [[299, "armi.reactor.components.component.ShapedComponent.DIMENSION_NAMES"]], "init_signature (armi.reactor.components.component.component attribute)": [[299, "armi.reactor.components.component.Component.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.component.shapedcomponent attribute)": [[299, "armi.reactor.components.component.ShapedComponent.INIT_SIGNATURE"]], "non_dimension_names (armi.reactor.components.component.componenttype attribute)": [[299, "armi.reactor.components.component.ComponentType.NON_DIMENSION_NAMES"]], "shapedcomponent (class in armi.reactor.components.component)": [[299, "armi.reactor.components.component.ShapedComponent"]], "thermal_expansion_dims (armi.reactor.components.component.component attribute)": [[299, "armi.reactor.components.component.Component.THERMAL_EXPANSION_DIMS"]], "types (armi.reactor.components.component.componenttype attribute)": [[299, "armi.reactor.components.component.ComponentType.TYPES"]], "adjustdensityforheightexpansion() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.adjustDensityForHeightExpansion"]], "adjustmassenrichment() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.adjustMassEnrichment"]], "applymaterialmassfracstonumberdensities() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.applyMaterialMassFracsToNumberDensities"]], "armi.reactor.components.component": [[299, "module-armi.reactor.components.component"]], "backup() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.backUp"]], "clearcache() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.clearCache"]], "clearlinkedcache() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.clearLinkedCache"]], "componenttypeisvalid() (in module armi.reactor.components.component)": [[299, "armi.reactor.components.component.componentTypeIsValid"]], "computevolume() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.computeVolume"]], "containssolidmaterial() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.containsSolidMaterial"]], "containsvoidmaterial() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.containsVoidMaterial"]], "density() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.density"]], "dimensionislinked() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.dimensionIsLinked"]], "gasporosity (armi.reactor.components.component.component property)": [[299, "armi.reactor.components.component.Component.gasPorosity"]], "getarea() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getArea"]], "getboundingcircleouterdiameter() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getBoundingCircleOuterDiameter"]], "getcircleinnerdiameter() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getCircleInnerDiameter"]], "getcomponentarea() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getComponentVolume"]], "getdimension() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getDimension"]], "getdimensionnameslinkedto() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getDimensionNamesLinkedTo"]], "getenrichment() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getEnrichment"]], "getfuelmass() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getFuelMass"]], "getheightfactor() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getHeightFactor"]], "getintegratedmgflux() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getIntegratedMgFlux"]], "getlinkedcomponents() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getLinkedComponents"]], "getlumpedfissionproductcollection() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getLumpedFissionProductCollection"]], "getmass() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getMass"]], "getmassenrichment() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getMassEnrichment"]], "getmicrosuffix() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getMicroSuffix"]], "getnuclidenumberdensities() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getNuclides"]], "getnumberdensity() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getNumberDensity"]], "getpitchdata() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getPitchData"]], "getproperties() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getProperties"]], "getthermalexpansionfactor() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getThermalExpansionFactor"]], "getvolume() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.getVolume"]], "is3d (armi.reactor.components.component.component attribute)": [[299, "armi.reactor.components.component.Component.is3D"]], "itercomponents() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.iterComponents"]], "liquidporosity (armi.reactor.components.component.component property)": [[299, "armi.reactor.components.component.Component.liquidPorosity"]], "mergenuclidesinto() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.mergeNuclidesInto"]], "pdefs (armi.reactor.components.component.component attribute)": [[299, "armi.reactor.components.component.Component.pDefs"]], "paramcollectiontype (armi.reactor.components.component.component attribute)": [[299, "armi.reactor.components.component.Component.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.component.shapedcomponent attribute)": [[299, "armi.reactor.components.component.ShapedComponent.paramCollectionType"]], "printcontents() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.printContents"]], "resolvelinkeddims() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.resolveLinkedDims"]], "restorebackup() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.restoreBackup"]], "setarea() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.setArea"]], "setdimension() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.setDimension"]], "setdimensionreport() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.setDimensionReport"]], "setlink() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.setLink"]], "setlumpedfissionproducts() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.setLumpedFissionProducts"]], "setname() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.setName"]], "setnumberdensities() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.setNumberDensities"]], "setnumberdensity() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.setNumberDensity"]], "setproperties() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.setProperties"]], "settemperature() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.setTemperature"]], "setvolume() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.setVolume"]], "temperatureinc (armi.reactor.components.component.component property)": [[299, "armi.reactor.components.component.Component.temperatureInC"]], "temperatureink (armi.reactor.components.component.component property)": [[299, "armi.reactor.components.component.Component.temperatureInK"]], "updatedims() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.updateDims"]], "updatenumberdensities() (armi.reactor.components.component.component method)": [[299, "armi.reactor.components.component.Component.updateNumberDensities"]], "armi.reactor.components.componentparameters": [[300, "module-armi.reactor.components.componentParameters"]], "getcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getCircleParameterDefinitions"]], "getcomponentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getComponentParameterDefinitions"]], "getcubeparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getCubeParameterDefinitions"]], "gethelixparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getHelixParameterDefinitions"]], "gethexholedcircleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getHexHoledCircleParameterDefinitions"]], "gethexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getHexagonParameterDefinitions"]], "getholedhexagonparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getHoledHexagonParameterDefinitions"]], "getholedrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getHoledRectangleParameterDefinitions"]], "getradialsegmentparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getRadialSegmentParameterDefinitions"]], "getrectangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getRectangleParameterDefinitions"]], "gettriangleparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getTriangleParameterDefinitions"]], "getunshapedparameterdefinitions() (in module armi.reactor.components.componentparameters)": [[300, "armi.reactor.components.componentParameters.getUnshapedParameterDefinitions"]], "cube (class in armi.reactor.components.volumetricshapes)": [[301, "armi.reactor.components.volumetricShapes.Cube"]], "dimension_names (armi.reactor.components.volumetricshapes.cube attribute)": [[301, "armi.reactor.components.volumetricShapes.Cube.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[301, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[301, "armi.reactor.components.volumetricShapes.RadialSegment.DIMENSION_NAMES"]], "dimension_names (armi.reactor.components.volumetricshapes.sphere attribute)": [[301, "armi.reactor.components.volumetricShapes.Sphere.DIMENSION_NAMES"]], "differentialradialsegment (class in armi.reactor.components.volumetricshapes)": [[301, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment"]], "init_signature (armi.reactor.components.volumetricshapes.cube attribute)": [[301, "armi.reactor.components.volumetricShapes.Cube.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[301, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[301, "armi.reactor.components.volumetricShapes.RadialSegment.INIT_SIGNATURE"]], "init_signature (armi.reactor.components.volumetricshapes.sphere attribute)": [[301, "armi.reactor.components.volumetricShapes.Sphere.INIT_SIGNATURE"]], "radialsegment (class in armi.reactor.components.volumetricshapes)": [[301, "armi.reactor.components.volumetricShapes.RadialSegment"]], "sphere (class in armi.reactor.components.volumetricshapes)": [[301, "armi.reactor.components.volumetricShapes.Sphere"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.cube attribute)": [[301, "armi.reactor.components.volumetricShapes.Cube.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[301, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[301, "armi.reactor.components.volumetricShapes.RadialSegment.THERMAL_EXPANSION_DIMS"]], "thermal_expansion_dims (armi.reactor.components.volumetricshapes.sphere attribute)": [[301, "armi.reactor.components.volumetricShapes.Sphere.THERMAL_EXPANSION_DIMS"]], "armi.reactor.components.volumetricshapes": [[301, "module-armi.reactor.components.volumetricShapes"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.radialsegment method)": [[301, "armi.reactor.components.volumetricShapes.RadialSegment.getBoundingCircleOuterDiameter"]], "getboundingcircleouterdiameter() (armi.reactor.components.volumetricshapes.sphere method)": [[301, "armi.reactor.components.volumetricShapes.Sphere.getBoundingCircleOuterDiameter"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.cube method)": [[301, "armi.reactor.components.volumetricShapes.Cube.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[301, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.radialsegment method)": [[301, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentArea"]], "getcomponentarea() (armi.reactor.components.volumetricshapes.sphere method)": [[301, "armi.reactor.components.volumetricShapes.Sphere.getComponentArea"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.cube method)": [[301, "armi.reactor.components.volumetricShapes.Cube.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[301, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.radialsegment method)": [[301, "armi.reactor.components.volumetricShapes.RadialSegment.getComponentVolume"]], "getcomponentvolume() (armi.reactor.components.volumetricshapes.sphere method)": [[301, "armi.reactor.components.volumetricShapes.Sphere.getComponentVolume"]], "is3d (armi.reactor.components.volumetricshapes.cube attribute)": [[301, "armi.reactor.components.volumetricShapes.Cube.is3D"]], "is3d (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[301, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[301, "armi.reactor.components.volumetricShapes.RadialSegment.is3D"]], "is3d (armi.reactor.components.volumetricshapes.sphere attribute)": [[301, "armi.reactor.components.volumetricShapes.Sphere.is3D"]], "pdefs (armi.reactor.components.volumetricshapes.cube attribute)": [[301, "armi.reactor.components.volumetricShapes.Cube.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[301, "armi.reactor.components.volumetricShapes.RadialSegment.pDefs"]], "pdefs (armi.reactor.components.volumetricshapes.sphere attribute)": [[301, "armi.reactor.components.volumetricShapes.Sphere.pDefs"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.cube attribute)": [[301, "armi.reactor.components.volumetricShapes.Cube.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.differentialradialsegment attribute)": [[301, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.radialsegment attribute)": [[301, "armi.reactor.components.volumetricShapes.RadialSegment.paramCollectionType"]], "paramcollectiontype (armi.reactor.components.volumetricshapes.sphere attribute)": [[301, "armi.reactor.components.volumetricShapes.Sphere.paramCollectionType"]], "updatedims() (armi.reactor.components.volumetricshapes.differentialradialsegment method)": [[301, "armi.reactor.components.volumetricShapes.DifferentialRadialSegment.updateDims"]], "armiobject (class in armi.reactor.composites)": [[302, "armi.reactor.composites.ArmiObject"]], "composite (class in armi.reactor.composites)": [[302, "armi.reactor.composites.Composite"]], "compositemodeltype (class in armi.reactor.composites)": [[302, "armi.reactor.composites.CompositeModelType"]], "flagserializer (class in armi.reactor.composites)": [[302, "armi.reactor.composites.FlagSerializer"]], "stateretainer (class in armi.reactor.composites)": [[302, "armi.reactor.composites.StateRetainer"]], "types (armi.reactor.composites.compositemodeltype attribute)": [[302, "armi.reactor.composites.CompositeModelType.TYPES"]], "add() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.add"]], "addmass() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.addMass"]], "addmasses() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.addMasses"]], "adjustmassenrichment() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.adjustMassEnrichment"]], "adjustmassfrac() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.adjustMassFrac"]], "append() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.append"]], "armi.reactor.composites": [[302, "module-armi.reactor.composites"]], "backup() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.backUp"]], "calcavgparam() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.calcAvgParam"]], "calctotalparam() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.calcTotalParam"]], "changendensbyfactor() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.changeNDensByFactor"]], "clearcache() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.clearCache"]], "clearnumberdensities() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.clearNumberDensities"]], "constituentreport() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.constituentReport"]], "containsatleastonechildwithflags() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.containsAtLeastOneChildWithFlags"]], "containsheavymetal() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.containsHeavyMetal"]], "containsonlychildrenwithflags() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.containsOnlyChildrenWithFlags"]], "copyparamsfrom() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.copyParamsFrom"]], "copyparamstochildren() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.copyParamsToChildren"]], "density() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.density"]], "dochildrenhaveflags() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.doChildrenHaveFlags"]], "duplicate() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.duplicate"]], "expandallelementalstoisotopics() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.expandAllElementalsToIsotopics"]], "expandelementaltoisotopics() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.expandElementalToIsotopics"]], "extend() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.extend"]], "gathermaterialsbyvolume() (in module armi.reactor.composites)": [[302, "armi.reactor.composites.gatherMaterialsByVolume"]], "getancestor() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getAncestor"]], "getancestoranddistance() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getAncestorAndDistance"]], "getancestorwithflags() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getAncestorWithFlags"]], "getarea() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getArea"]], "getatomicweight() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getAtomicWeight"]], "getaveragetempinc() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getAverageTempInC"]], "getboronmassenrich() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getBoronMassEnrich"]], "getboundingcircleouterdiameter() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.getBoundingCircleOuterDiameter"]], "getboundingindices() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getBoundingIndices"]], "getcaptureenergygenerationconstants() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getCaptureEnergyGenerationConstants"]], "getchildparamvalues() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getChildParamValues"]], "getchildren() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getChildren"]], "getchildren() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.getChildren"]], "getchildrenoftype() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.getChildrenOfType"]], "getchildrenwithflags() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getChildrenWithFlags"]], "getchildrenwithflags() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.getChildrenWithFlags"]], "getchildrenwithnuclides() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getChildrenWithNuclides"]], "getcomponent() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getComponent"]], "getcomponentbyname() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getComponentByName"]], "getcomponentnames() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getComponentNames"]], "getcomponents() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getComponents"]], "getcomponents() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.getComponents"]], "getcomponentsofmaterial() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getComponentsOfMaterial"]], "getcomponentsofshape() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getComponentsOfShape"]], "getdominantmaterial() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getDominantMaterial"]], "getdominantmaterial() (in module armi.reactor.composites)": [[302, "armi.reactor.composites.getDominantMaterial"]], "getfpmass() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getFPMass"]], "getfissilemass() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getFissileMass"]], "getfissilemassenrich() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getFissileMassEnrich"]], "getfissionenergygenerationconstants() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getFissionEnergyGenerationConstants"]], "getfuelmass() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getFuelMass"]], "getgammaenergydepositionconstants() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getGammaEnergyDepositionConstants"]], "gethmdens() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getHMDens"]], "gethmmass() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getHMMass"]], "gethmmoles() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getHMMoles"]], "getintegratedmgflux() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getIntegratedMgFlux"]], "getintegratedmgflux() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.getIntegratedMgFlux"]], "getlumpedfissionproductcollection() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getLumpedFissionProductCollection"]], "getlumpedfissionproductcollection() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.getLumpedFissionProductCollection"]], "getlumpedfissionproductsifnecessary() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.getLumpedFissionProductsIfNecessary"]], "getmass() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getMass"]], "getmassfrac() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getMassFrac"]], "getmassfracs() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getMassFracs"]], "getmasses() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getMasses"]], "getmaxarea() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getMaxArea"]], "getmaxparam() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getMaxParam"]], "getmaxuraniummassenrich() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getMaxUraniumMassEnrich"]], "getmaxvolume() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getMaxVolume"]], "getmgflux() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getMgFlux"]], "getmicrosuffix() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getMicroSuffix"]], "getminparam() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getMinParam"]], "getname() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getName"]], "getneutronenergydepositionconstants() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getNeutronEnergyDepositionConstants"]], "getnuclidenumberdensities() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getNuclideNumberDensities"]], "getnuclides() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getNuclides"]], "getnumcomponents() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getNumComponents"]], "getnumberdensities() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getNumberDensities"]], "getnumberdensity() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getNumberDensity"]], "getnumberofatoms() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getNumberOfAtoms"]], "getparamnames() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getParamNames"]], "getparametercollection() (armi.reactor.composites.armiobject class method)": [[302, "armi.reactor.composites.ArmiObject.getParameterCollection"]], "getpufrac() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getPuFrac"]], "getpumass() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getPuMass"]], "getpumoles() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getPuMoles"]], "getpun() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getPuN"]], "getreactionratedict() (in module armi.reactor.composites)": [[302, "armi.reactor.composites.getReactionRateDict"]], "getreactionrates() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.getReactionRates"]], "getsymmetryfactor() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getSymmetryFactor"]], "gettotalenergygenerationconstants() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getTotalEnergyGenerationConstants"]], "gettotalndens() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getTotalNDens"]], "gettype() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getType"]], "geturaniummassenrich() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getUraniumMassEnrich"]], "geturaniumnumenrich() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getUraniumNumEnrich"]], "getvolume() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getVolume"]], "getvolumefraction() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getVolumeFraction"]], "getvolumefractions() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getVolumeFractions"]], "getzrfrac() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.getZrFrac"]], "hascomponents() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.hasComponents"]], "hasflags() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.hasFlags"]], "index() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.index"]], "insert() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.insert"]], "isfuel() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.isFuel"]], "isonwhichsymmetryline() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.isOnWhichSymmetryLine"]], "itercomponents() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.iterComponents"]], "itercomponents() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.iterComponents"]], "moveto() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.moveTo"]], "namecontains() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.nameContains"]], "pdefs (armi.reactor.composites.armiobject attribute)": [[302, "armi.reactor.composites.ArmiObject.pDefs"]], "pack() (armi.reactor.composites.flagserializer static method)": [[302, "armi.reactor.composites.FlagSerializer.pack"]], "paramcollectiontype (armi.reactor.composites.armiobject attribute)": [[302, "armi.reactor.composites.ArmiObject.paramCollectionType"]], "paramcollectiontype (armi.reactor.composites.composite attribute)": [[302, "armi.reactor.composites.Composite.paramCollectionType"]], "printcontents() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.printContents"]], "printdensities() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.printDensities"]], "remove() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.remove"]], "removeall() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.removeAll"]], "removemass() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.removeMass"]], "requireslumpedfissionproducts() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.requiresLumpedFissionProducts"]], "resolvelinkeddims() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.resolveLinkedDims"]], "restorebackup() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.restoreBackup"]], "retainstate() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.retainState"]], "setchildren() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.setChildren"]], "setchildrenlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.setChildrenLumpedFissionProducts"]], "setcomponentdimensionsreport() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.setComponentDimensionsReport"]], "setlumpedfissionproducts() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.setLumpedFissionProducts"]], "setmass() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.setMass"]], "setmassfrac() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.setMassFrac"]], "setmassfracs() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.setMassFracs"]], "setmasses() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.setMasses"]], "setname() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.setName"]], "setnumberdensities() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.setNumberDensities"]], "setnumberdensity() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.setNumberDensity"]], "settype() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.setType"]], "sort() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.sort"]], "syncmpistate() (armi.reactor.composites.composite method)": [[302, "armi.reactor.composites.Composite.syncMpiState"]], "unpack() (armi.reactor.composites.flagserializer class method)": [[302, "armi.reactor.composites.FlagSerializer.unpack"]], "updatenumberdensities() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.updateNumberDensities"]], "updateparamsfrom() (armi.reactor.composites.armiobject method)": [[302, "armi.reactor.composites.ArmiObject.updateParamsFrom"]], "version (armi.reactor.composites.flagserializer attribute)": [[302, "armi.reactor.composites.FlagSerializer.version"]], "armi.reactor.converters": [[303, "module-armi.reactor.converters"]], "assemblyaxiallinkage (class in armi.reactor.converters.axialexpansionchanger)": [[304, "armi.reactor.converters.axialExpansionChanger.AssemblyAxialLinkage"]], "axialexpansionchanger (class in armi.reactor.converters.axialexpansionchanger)": [[304, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger"]], "expansiondata (class in armi.reactor.converters.axialexpansionchanger)": [[304, "armi.reactor.converters.axialExpansionChanger.ExpansionData"]], "applycoldheightmassincrease() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[304, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.applyColdHeightMassIncrease"]], "armi.reactor.converters.axialexpansionchanger": [[304, "module-armi.reactor.converters.axialExpansionChanger"]], "axiallyexpandassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[304, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.axiallyExpandAssembly"]], "computethermalexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[304, "armi.reactor.converters.axialExpansionChanger.ExpansionData.computeThermalExpansionFactors"]], "determinetargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[304, "armi.reactor.converters.axialExpansionChanger.ExpansionData.determineTargetComponent"]], "expandcolddimstohot() (in module armi.reactor.converters.axialexpansionchanger)": [[304, "armi.reactor.converters.axialExpansionChanger.expandColdDimsToHot"]], "getdefaultreferenceassem() (in module armi.reactor.converters.axialexpansionchanger)": [[304, "armi.reactor.converters.axialExpansionChanger.getDefaultReferenceAssem"]], "getexpansionfactor() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[304, "armi.reactor.converters.axialExpansionChanger.ExpansionData.getExpansionFactor"]], "getsolidcomponents() (in module armi.reactor.converters.axialexpansionchanger)": [[304, "armi.reactor.converters.axialExpansionChanger.getSolidComponents"]], "istargetcomponent() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[304, "armi.reactor.converters.axialExpansionChanger.ExpansionData.isTargetComponent"]], "makeassemsabletosnaptouniformmesh() (in module armi.reactor.converters.axialexpansionchanger)": [[304, "armi.reactor.converters.axialExpansionChanger.makeAssemsAbleToSnapToUniformMesh"]], "managecoremesh() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[304, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.manageCoreMesh"]], "performprescribedaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[304, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.performPrescribedAxialExpansion"]], "performthermalaxialexpansion() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[304, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.performThermalAxialExpansion"]], "reset() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[304, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.reset"]], "setassembly() (armi.reactor.converters.axialexpansionchanger.axialexpansionchanger method)": [[304, "armi.reactor.converters.axialExpansionChanger.AxialExpansionChanger.setAssembly"]], "setexpansionfactors() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[304, "armi.reactor.converters.axialExpansionChanger.ExpansionData.setExpansionFactors"]], "updatecomponenttemp() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[304, "armi.reactor.converters.axialExpansionChanger.ExpansionData.updateComponentTemp"]], "updatecomponenttempsby1dtempfield() (armi.reactor.converters.axialexpansionchanger.expansiondata method)": [[304, "armi.reactor.converters.axialExpansionChanger.ExpansionData.updateComponentTempsBy1DTempField"]], "blockavgtocylconverter (class in armi.reactor.converters.blockconverters)": [[305, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter"]], "blockconverter (class in armi.reactor.converters.blockconverters)": [[305, "armi.reactor.converters.blockConverters.BlockConverter"]], "componentmerger (class in armi.reactor.converters.blockconverters)": [[305, "armi.reactor.converters.blockConverters.ComponentMerger"]], "hexcomponentstocylconverter (class in armi.reactor.converters.blockconverters)": [[305, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter"]], "multiplecomponentmerger (class in armi.reactor.converters.blockconverters)": [[305, "armi.reactor.converters.blockConverters.MultipleComponentMerger"]], "armi.reactor.converters.blockconverters": [[305, "module-armi.reactor.converters.blockConverters"]], "convert() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[305, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.blockconverter method)": [[305, "armi.reactor.converters.blockConverters.BlockConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.componentmerger method)": [[305, "armi.reactor.converters.blockConverters.ComponentMerger.convert"]], "convert() (armi.reactor.converters.blockconverters.hexcomponentstocylconverter method)": [[305, "armi.reactor.converters.blockConverters.HexComponentsToCylConverter.convert"]], "convert() (armi.reactor.converters.blockconverters.multiplecomponentmerger method)": [[305, "armi.reactor.converters.blockConverters.MultipleComponentMerger.convert"]], "dissolvecomponentintocomponent() (armi.reactor.converters.blockconverters.blockconverter method)": [[305, "armi.reactor.converters.blockConverters.BlockConverter.dissolveComponentIntoComponent"]], "getouterdiamfromidandarea() (in module armi.reactor.converters.blockconverters)": [[305, "armi.reactor.converters.blockConverters.getOuterDiamFromIDAndArea"]], "plotconvertedblock() (armi.reactor.converters.blockconverters.blockavgtocylconverter method)": [[305, "armi.reactor.converters.blockConverters.BlockAvgToCylConverter.plotConvertedBlock"]], "radiifromhexpitches() (in module armi.reactor.converters.blockconverters)": [[305, "armi.reactor.converters.blockConverters.radiiFromHexPitches"]], "radiifromhexsides() (in module armi.reactor.converters.blockconverters)": [[305, "armi.reactor.converters.blockConverters.radiiFromHexSides"]], "radiifromringofrods() (in module armi.reactor.converters.blockconverters)": [[305, "armi.reactor.converters.blockConverters.radiiFromRingOfRods"]], "restablishlinks() (armi.reactor.converters.blockconverters.blockconverter method)": [[305, "armi.reactor.converters.blockConverters.BlockConverter.restablishLinks"]], "expected_input_symmetry (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger attribute)": [[306, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.EXPECTED_INPUT_SYMMETRY"]], "edgeassemblychanger (class in armi.reactor.converters.geometryconverters)": [[306, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger"]], "fuelassemnummodifier (class in armi.reactor.converters.geometryconverters)": [[306, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier"]], "geometrychanger (class in armi.reactor.converters.geometryconverters)": [[306, "armi.reactor.converters.geometryConverters.GeometryChanger"]], "geometryconverter (class in armi.reactor.converters.geometryconverters)": [[306, "armi.reactor.converters.geometryConverters.GeometryConverter"]], "hextorzconverter (class in armi.reactor.converters.geometryconverters)": [[306, "armi.reactor.converters.geometryConverters.HexToRZConverter"]], "hextorzthetaconverter (class in armi.reactor.converters.geometryconverters)": [[306, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter"]], "thirdcorehextofullcorechanger (class in armi.reactor.converters.geometryconverters)": [[306, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger"]], "addedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[306, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.addEdgeAssemblies"]], "addring() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[306, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.addRing"]], "armi.reactor.converters.geometryconverters": [[306, "module-armi.reactor.converters.geometryConverters"]], "convert() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[306, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.convert"]], "convert() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[306, "armi.reactor.converters.geometryConverters.GeometryChanger.convert"]], "convert() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[306, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.convert"]], "convert() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[306, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.convert"]], "createhomogenizedrztblock() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[306, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.createHomogenizedRZTBlock"]], "plotconvertedreactor() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[306, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.plotConvertedReactor"]], "removeedgeassemblies() (armi.reactor.converters.geometryconverters.edgeassemblychanger method)": [[306, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.removeEdgeAssemblies"]], "reset() (armi.reactor.converters.geometryconverters.fuelassemnummodifier method)": [[306, "armi.reactor.converters.geometryConverters.FuelAssemNumModifier.reset"]], "reset() (armi.reactor.converters.geometryconverters.geometrychanger method)": [[306, "armi.reactor.converters.geometryConverters.GeometryChanger.reset"]], "reset() (armi.reactor.converters.geometryconverters.hextorzthetaconverter method)": [[306, "armi.reactor.converters.geometryConverters.HexToRZThetaConverter.reset"]], "restorepreviousgeometry() (armi.reactor.converters.geometryconverters.thirdcorehextofullcorechanger method)": [[306, "armi.reactor.converters.geometryConverters.ThirdCoreHexToFullCoreChanger.restorePreviousGeometry"]], "scaleparamsrelatedtosymmetry() (armi.reactor.converters.geometryconverters.edgeassemblychanger static method)": [[306, "armi.reactor.converters.geometryConverters.EdgeAssemblyChanger.scaleParamsRelatedToSymmetry"]], "meshconverter (class in armi.reactor.converters.meshconverters)": [[307, "armi.reactor.converters.meshConverters.MeshConverter"]], "rzthetareactormeshconverter (class in armi.reactor.converters.meshconverters)": [[307, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter"]], "rzthetareactormeshconverterbyringcompositionaxialbins (class in armi.reactor.converters.meshconverters)": [[307, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialBins"]], "rzthetareactormeshconverterbyringcompositionaxialcoordinates (class in armi.reactor.converters.meshconverters)": [[307, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialCoordinates"]], "rzthetareactormeshconverterbyringcompositionaxialflags (class in armi.reactor.converters.meshconverters)": [[307, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverterByRingCompositionAxialFlags"]], "armi.reactor.converters.meshconverters": [[307, "module-armi.reactor.converters.meshConverters"]], "checklastvalueinlist() (in module armi.reactor.converters.meshconverters)": [[307, "armi.reactor.converters.meshConverters.checkLastValueInList"]], "checklistbounds() (in module armi.reactor.converters.meshconverters)": [[307, "armi.reactor.converters.meshConverters.checkListBounds"]], "generatebins() (in module armi.reactor.converters.meshconverters)": [[307, "armi.reactor.converters.meshConverters.generateBins"]], "generatemesh() (armi.reactor.converters.meshconverters.meshconverter method)": [[307, "armi.reactor.converters.meshConverters.MeshConverter.generateMesh"]], "generatemesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[307, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.generateMesh"]], "setaxialmesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[307, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setAxialMesh"]], "setringstoconvert() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[307, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setRingsToConvert"]], "setthetamesh() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[307, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.setThetaMesh"]], "writemeshdata() (armi.reactor.converters.meshconverters.meshconverter method)": [[307, "armi.reactor.converters.meshConverters.MeshConverter.writeMeshData"]], "writemeshdata() (armi.reactor.converters.meshconverters.rzthetareactormeshconverter method)": [[307, "armi.reactor.converters.meshConverters.RZThetaReactorMeshConverter.writeMeshData"]], "armi.reactor.converters.parametersweeps": [[308, "module-armi.reactor.converters.parameterSweeps"]], "custommodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[309, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier"]], "neutronicconvergencemodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[309, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier"]], "priority (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter attribute)": [[309, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.PRIORITY"]], "parametersweepconverter (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[309, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter"]], "settingsmodifier (class in armi.reactor.converters.parametersweeps.generalparametersweepconverters)": [[309, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier"]], "armi.reactor.converters.parametersweeps.generalparametersweepconverters": [[309, "module-armi.reactor.converters.parameterSweeps.generalParameterSweepConverters"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.custommodifier method)": [[309, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.CustomModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.neutronicconvergencemodifier method)": [[309, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.NeutronicConvergenceModifier.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.parametersweepconverter method)": [[309, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.ParameterSweepConverter.convert"]], "convert() (armi.reactor.converters.parametersweeps.generalparametersweepconverters.settingsmodifier method)": [[309, "armi.reactor.converters.parameterSweeps.generalParameterSweepConverters.SettingsModifier.convert"]], "adjustcladthicknessbyid() (in module armi.reactor.converters.pintypeblockconverters)": [[310, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByID"]], "adjustcladthicknessbyod() (in module armi.reactor.converters.pintypeblockconverters)": [[310, "armi.reactor.converters.pinTypeBlockConverters.adjustCladThicknessByOD"]], "adjustsmeardensity() (in module armi.reactor.converters.pintypeblockconverters)": [[310, "armi.reactor.converters.pinTypeBlockConverters.adjustSmearDensity"]], "armi.reactor.converters.pintypeblockconverters": [[310, "module-armi.reactor.converters.pinTypeBlockConverters"]], "armi.reactor.converters.tests": [[311, "module-armi.reactor.converters.tests"]], "axialexpansiontestbase (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase"]], "fakemat (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat"]], "fakematexception (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException"]], "steel_component_lst (armi.reactor.converters.tests.test_axialexpansionchanger.axialexpansiontestbase attribute)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.AxialExpansionTestBase.Steel_Component_Lst"]], "temperature (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.Temperature"]], "testaxialexpansionheight (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight"]], "testconservation (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation"]], "testdeterminetargetcomponent (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent"]], "testexceptions (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions"]], "testgetsolidcomponents (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents"]], "testinputheightsconsideredhot (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot"]], "testlinkage (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage"]], "testmanagecoremesh (class in armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh"]], "armi.reactor.converters.tests.test_axialexpansionchanger": [[312, "module-armi.reactor.converters.tests.test_axialExpansionChanger"]], "buildtestassemblywithfakematerial() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.buildTestAssemblyWithFakeMaterial"]], "checkcoldblockheight() (in module armi.reactor.converters.tests.test_axialexpansionchanger)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.checkColdBlockHeight"]], "checkcoldheightblockmass() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.checkColdHeightBlockMass"]], "complexconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.complexConservationTest"]], "expandassemformassconservationtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.expandAssemForMassConservationTest"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.linearExpansionPercent"]], "linearexpansionpercent() (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.linearExpansionPercent"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakemat attribute)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMat.name"]], "name (armi.reactor.converters.tests.test_axialexpansionchanger.fakematexception attribute)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.FakeMatException.name"]], "runtest() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.runTest"]], "test_annularhexoverlappingthickannularhex() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_AnnularHexOverlappingThickAnnularHex"]], "test_assemblyaxialexpansionexception() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_AssemblyAxialExpansionException"]], "test_assemblyaxialexpansionheight() (armi.reactor.converters.tests.test_axialexpansionchanger.testaxialexpansionheight method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestAxialExpansionHeight.test_AssemblyAxialExpansionHeight"]], "test_nomovementaclp() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_NoMovementACLP"]], "test_prescribedexpansioncontractionconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_PrescribedExpansionContractionConservation"]], "test_targetcomponentmassconservation() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_TargetComponentMassConservation"]], "test_thermalexpansioncontractionconservation_complex() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_ThermalExpansionContractionConservation_Complex"]], "test_thermalexpansioncontractionconservation_simple() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_ThermalExpansionContractionConservation_Simple"]], "test_annularpinnotoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_annularPinNotOverlappingWithAnnulus"]], "test_annularpinoverlappingwithannuls() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_annularPinOverlappingWithAnnuls"]], "test_coldassemblyexpansion() (armi.reactor.converters.tests.test_axialexpansionchanger.testinputheightsconsideredhot method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestInputHeightsConsideredHot.test_coldAssemblyExpansion"]], "test_computethermalexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_computeThermalExpansionFactors"]], "test_determinelinked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_determineLinked"]], "test_determinetargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponent"]], "test_determinetargetcomponentblockwithmultipleflags() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_determineTargetComponentBlockWithMultipleFlags"]], "test_differentmultnotoverlapping() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_differentMultNotOverlapping"]], "test_getlinkedcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_getLinkedComponents"]], "test_getsolidcomponents() (armi.reactor.converters.tests.test_axialexpansionchanger.testgetsolidcomponents method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestGetSolidComponents.test_getSolidComponents"]], "test_isfuellocked() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isFuelLocked"]], "test_istopdummyblockpresent() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_isTopDummyBlockPresent"]], "test_liquids() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_liquids"]], "test_managecoremesh() (armi.reactor.converters.tests.test_axialexpansionchanger.testmanagecoremesh method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestManageCoreMesh.test_manageCoreMesh"]], "test_manuallysettargetcomponent() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_manuallySetTargetComponent"]], "test_overlappingsolidpins() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_overlappingSolidPins"]], "test_reset() (armi.reactor.converters.tests.test_axialexpansionchanger.testconservation method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestConservation.test_reset"]], "test_setexpansionfactors() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_setExpansionFactors"]], "test_solidpinnotoverlappingannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_solidPinNotOverlappingAnnulus"]], "test_solidpinoverlappingwithannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_solidPinOverlappingWithAnnulus"]], "test_specifytargetcomponent_notfound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_NotFound"]], "test_specifytargetcomponent_singlesolid() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponent_singleSolid"]], "test_specifytargetcomponet_multiplefound() (armi.reactor.converters.tests.test_axialexpansionchanger.testdeterminetargetcomponent method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestDetermineTargetComponent.test_specifyTargetComponet_MultipleFound"]], "test_thinannularpinoverlappingwiththickannulus() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_thinAnnularPinOverlappingWithThickAnnulus"]], "test_unshapedcomponentandcircle() (armi.reactor.converters.tests.test_axialexpansionchanger.testlinkage method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestLinkage.test_unshapedComponentAndCircle"]], "test_updatecomponenttempsby1dtempfieldruntimeerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldRuntimeError"]], "test_updatecomponenttempsby1dtempfieldvalueerror() (armi.reactor.converters.tests.test_axialexpansionchanger.testexceptions method)": [[312, "armi.reactor.converters.tests.test_axialExpansionChanger.TestExceptions.test_updateComponentTempsBy1DTempFieldValueError"]], "testblockconverter (class in armi.reactor.converters.tests.test_blockconverter)": [[313, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter"]], "testtocircles (class in armi.reactor.converters.tests.test_blockconverter)": [[313, "armi.reactor.converters.tests.test_blockConverter.TestToCircles"]], "armi.reactor.converters.tests.test_blockconverter": [[313, "module-armi.reactor.converters.tests.test_blockConverter"]], "buildcontrolblockwithlinkednegativeareacomponent() (in module armi.reactor.converters.tests.test_blockconverter)": [[313, "armi.reactor.converters.tests.test_blockConverter.buildControlBlockWithLinkedNegativeAreaComponent"]], "test_build_nthring() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[313, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_build_NthRing"]], "test_convert() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[313, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convert"]], "test_convertcartesianlatticewithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[313, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertCartesianLatticeWithFuelDriver"]], "test_converthexwithfueldriver() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[313, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriver"]], "test_converthexwithfueldriveronnegativecomponentareablock() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[313, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_convertHexWithFuelDriverOnNegativeComponentAreaBlock"]], "test_dissolvelinerintoclad() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[313, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveLinerIntoClad"]], "test_dissolvewireintocoolant() (armi.reactor.converters.tests.test_blockconverter.testblockconverter method)": [[313, "armi.reactor.converters.tests.test_blockConverter.TestBlockConverter.test_dissolveWireIntoCoolant"]], "test_fromhex() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[313, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromHex"]], "test_fromringofrods() (armi.reactor.converters.tests.test_blockconverter.testtocircles method)": [[313, "armi.reactor.converters.tests.test_blockConverter.TestToCircles.test_fromRingOfRods"]], "testedgeassemblychanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger"]], "testgeometryconverters (class in armi.reactor.converters.tests.test_geometryconverters)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters"]], "testhextorzconverter (class in armi.reactor.converters.tests.test_geometryconverters)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter"]], "testthirdcorehextofullcorechanger (class in armi.reactor.converters.tests.test_geometryconverters)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger"]], "armi.reactor.converters.tests.test_geometryconverters": [[314, "module-armi.reactor.converters.tests.test_geometryConverters"]], "test_addring() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_addRing"]], "test_convert() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_convert"]], "test_createhomogenizedrztblock() (armi.reactor.converters.tests.test_geometryconverters.testhextorzconverter method)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestHexToRZConverter.test_createHomogenizedRZTBlock"]], "test_edgeassemblies() (armi.reactor.converters.tests.test_geometryconverters.testedgeassemblychanger method)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestEdgeAssemblyChanger.test_edgeAssemblies"]], "test_getassembliesinsector() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_getAssembliesInSector"]], "test_growtofullcorefromthirdcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_growToFullCoreFromThirdCore"]], "test_initnewfullreactor() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_initNewFullReactor"]], "test_setnumberoffuelassems() (armi.reactor.converters.tests.test_geometryconverters.testgeometryconverters method)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestGeometryConverters.test_setNumberOfFuelAssems"]], "test_skipgrowtofullcorewhenalreadyfullcore() (armi.reactor.converters.tests.test_geometryconverters.testthirdcorehextofullcorechanger method)": [[314, "armi.reactor.converters.tests.test_geometryConverters.TestThirdCoreHexToFullCoreChanger.test_skipGrowToFullCoreWhenAlreadyFullCore"]], "testrzreactormeshconverter (class in armi.reactor.converters.tests.test_meshconverters)": [[315, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter"]], "armi.reactor.converters.tests.test_meshconverters": [[315, "module-armi.reactor.converters.tests.test_meshConverters"]], "test_meshbyringcompositionaxialbinslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[315, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsLargeCore"]], "test_meshbyringcompositionaxialbinssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[315, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialBinsSmallCore"]], "test_meshbyringcompositionaxialcoordinateslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[315, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesLargeCore"]], "test_meshbyringcompositionaxialcoordinatessmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[315, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialCoordinatesSmallCore"]], "test_meshbyringcompositionaxialflagslargecore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[315, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsLargeCore"]], "test_meshbyringcompositionaxialflagssmallcore() (armi.reactor.converters.tests.test_meshconverters.testrzreactormeshconverter method)": [[315, "armi.reactor.converters.tests.test_meshConverters.TestRZReactorMeshConverter.test_meshByRingCompositionAxialFlagsSmallCore"]], "massconservationtests (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[316, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests"]], "testpintypeconverters (class in armi.reactor.converters.tests.test_pintypeblockconverters)": [[316, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters"]], "armi.reactor.converters.tests.test_pintypeblockconverters": [[316, "module-armi.reactor.converters.tests.test_pinTypeBlockConverters"]], "test_adjustcladthicknessbyid() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[316, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByID"]], "test_adjustcladthicknessbyod() (armi.reactor.converters.tests.test_pintypeblockconverters.testpintypeconverters method)": [[316, "armi.reactor.converters.tests.test_pinTypeBlockConverters.TestPinTypeConverters.test_adjustCladThicknessByOD"]], "test_adjustsmeardensity() (armi.reactor.converters.tests.test_pintypeblockconverters.massconservationtests method)": [[316, "armi.reactor.converters.tests.test_pinTypeBlockConverters.MassConservationTests.test_adjustSmearDensity"]], "dummyfluxoptions (class in armi.reactor.converters.tests.test_uniformmesh)": [[317, "armi.reactor.converters.tests.test_uniformMesh.DummyFluxOptions"]], "testassemblyuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh"]], "testconverterfactory (class in armi.reactor.converters.tests.test_uniformmesh)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory"]], "testgammauniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh"]], "testparamconversion (class in armi.reactor.converters.tests.test_uniformmesh)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion"]], "testuniformmesh (class in armi.reactor.converters.tests.test_uniformmesh)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh"]], "testuniformmeshcomponents (class in armi.reactor.converters.tests.test_uniformmesh)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents"]], "testuniformmeshgenerator (class in armi.reactor.converters.tests.test_uniformmesh)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator"]], "testuniformmeshnonuniformassemflags (class in armi.reactor.converters.tests.test_uniformmesh)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags"]], "applynonuniformheightdistribution() (in module armi.reactor.converters.tests.test_uniformmesh)": [[317, "armi.reactor.converters.tests.test_uniformMesh.applyNonUniformHeightDistribution"]], "armi.reactor.converters.tests.test_uniformmesh": [[317, "module-armi.reactor.converters.tests.test_uniformMesh"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_applyStateToOriginal"]], "test_applystatetooriginal() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_applyStateToOriginal"]], "test_blueprintcopy() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshcomponents method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshComponents.test_blueprintCopy"]], "test_clearassemblystate() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_clearAssemblyState"]], "test_computeaverageaxialmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_computeAverageAxialMesh"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testgammauniformmesh method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestGammaUniformMesh.test_convertNumberDensities"]], "test_convertnumberdensities() (armi.reactor.converters.tests.test_uniformmesh.testuniformmesh method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMesh.test_convertNumberDensities"]], "test_converterfactory() (armi.reactor.converters.tests.test_uniformmesh.testconverterfactory method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestConverterFactory.test_converterFactory"]], "test_filtermesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filterMesh"]], "test_filteredtopandbottom() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_filteredTopAndBottom"]], "test_generatecommonmesh() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshgenerator method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshGenerator.test_generateCommonMesh"]], "test_makeassemuniformmeshparammappingsamemesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemUniformMeshParamMappingSameMesh"]], "test_makeassemwithuniformmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMesh"]], "test_makeassemwithuniformmeshsubmesh() (armi.reactor.converters.tests.test_uniformmesh.testassemblyuniformmesh method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestAssemblyUniformMesh.test_makeAssemWithUniformMeshSubmesh"]], "test_reactorconversion() (armi.reactor.converters.tests.test_uniformmesh.testuniformmeshnonuniformassemflags method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestUniformMeshNonUniformAssemFlags.test_reactorConversion"]], "test_setstatefromoverlaps() (armi.reactor.converters.tests.test_uniformmesh.testparamconversion method)": [[317, "armi.reactor.converters.tests.test_uniformMesh.TestParamConversion.test_setStateFromOverlaps"]], "gammauniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[318, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter"]], "neutronicsuniformmeshconverter (class in armi.reactor.converters.uniformmesh)": [[318, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter"]], "parammapper (class in armi.reactor.converters.uniformmesh)": [[318, "armi.reactor.converters.uniformMesh.ParamMapper"]], "uniformmeshgenerator (class in armi.reactor.converters.uniformmesh)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGenerator"]], "uniformmeshgeometryconverter (class in armi.reactor.converters.uniformmesh)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter"]], "applystatetooriginal() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.applyStateToOriginal"]], "armi.reactor.converters.uniformmesh": [[318, "module-armi.reactor.converters.uniformMesh"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[318, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[318, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.blockParamMappingCategories"]], "blockparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.blockParamMappingCategories"]], "clearstateonassemblies() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.clearStateOnAssemblies"]], "convert() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.convert"]], "converterfactory() (in module armi.reactor.converters.uniformmesh)": [[318, "armi.reactor.converters.uniformMesh.converterFactory"]], "generatecommonmesh() (armi.reactor.converters.uniformmesh.uniformmeshgenerator method)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGenerator.generateCommonMesh"]], "initnewreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.initNewReactor"]], "makeassemwithuniformmesh() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.makeAssemWithUniformMesh"]], "paramgetter() (armi.reactor.converters.uniformmesh.parammapper method)": [[318, "armi.reactor.converters.uniformMesh.ParamMapper.paramGetter"]], "paramsetter() (armi.reactor.converters.uniformmesh.parammapper static method)": [[318, "armi.reactor.converters.uniformMesh.ParamMapper.paramSetter"]], "plotconvertedreactor() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.plotConvertedReactor"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.gammauniformmeshconverter attribute)": [[318, "armi.reactor.converters.uniformMesh.GammaUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.neutronicsuniformmeshconverter attribute)": [[318, "armi.reactor.converters.uniformMesh.NeutronicsUniformMeshConverter.reactorParamMappingCategories"]], "reactorparammappingcategories (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter attribute)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reactorParamMappingCategories"]], "reset() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.reset"]], "setassemblystatefromoverlaps() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter static method)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.setAssemblyStateFromOverlaps"]], "setnumberdensitiesfromoverlaps() (in module armi.reactor.converters.uniformmesh)": [[318, "armi.reactor.converters.uniformMesh.setNumberDensitiesFromOverlaps"]], "updatereactionrates() (armi.reactor.converters.uniformmesh.uniformmeshgeometryconverter method)": [[318, "armi.reactor.converters.uniformMesh.UniformMeshGeometryConverter.updateReactionRates"]], "a (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.A"]], "aclp (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.ACLP"]], "annular (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.ANNULAR"]], "axial (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.AXIAL"]], "b (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.B"]], "batchmassaddition (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.BATCHMASSADDITION"]], "blanket (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.BLANKET"]], "bond (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.BOND"]], "booster (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.BOOSTER"]], "c (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.C"]], "clad (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.CLAD"]], "control (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.CONTROL"]], "coolant (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.COOLANT"]], "core (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.CORE"]], "core_barrel (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.CORE_BARREL"]], "d (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.D"]], "depletable (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.DEPLETABLE"]], "driver (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.DRIVER"]], "dspacerinside (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.DSPACERINSIDE"]], "duct (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.DUCT"]], "dummy (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.DUMMY"]], "e (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.E"]], "feed (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.FEED"]], "fission_chamber (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.FISSION_CHAMBER"]], "fuel (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.FUEL"]], "flags (class in armi.reactor.flags)": [[319, "armi.reactor.flags.Flags"]], "gap (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.GAP"]], "grid_plate (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.GRID_PLATE"]], "guide_tube (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.GUIDE_TUBE"]], "handling_socket (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.HANDLING_SOCKET"]], "high (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.HIGH"]], "igniter (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.IGNITER"]], "inlet_nozzle (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.INLET_NOZZLE"]], "inner (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.INNER"]], "intercoolant (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.INTERCOOLANT"]], "interductcoolant (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.INTERDUCTCOOLANT"]], "invalidflagserror": [[319, "armi.reactor.flags.InvalidFlagsError"]], "liner (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.LINER"]], "load_pad (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.LOAD_PAD"]], "low (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.LOW"]], "lower (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.LOWER"]], "material (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.MATERIAL"]], "medium (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.MEDIUM"]], "middle (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.MIDDLE"]], "moderator (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.MODERATOR"]], "moveable (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.MOVEABLE"]], "mox (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.MOX"]], "outer (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.OUTER"]], "pin (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.PIN"]], "plenum (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.PLENUM"]], "poison (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.POISON"]], "primary (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.PRIMARY"]], "radial (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.RADIAL"]], "reactor (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.REACTOR"]], "reflector (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.REFLECTOR"]], "secondary (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.SECONDARY"]], "shield (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.SHIELD"]], "shield_block (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.SHIELD_BLOCK"]], "shutdown (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.SHUTDOWN"]], "skid (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.SKID"]], "slug (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.SLUG"]], "starter (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.STARTER"]], "structure (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.STRUCTURE"]], "target (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.TARGET"]], "tertiary (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.TERTIARY"]], "test (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.TEST"]], "ultimate (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.ULTIMATE"]], "upper (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.UPPER"]], "void (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.VOID"]], "wire (armi.reactor.flags.flags attribute)": [[319, "armi.reactor.flags.Flags.WIRE"]], "armi.reactor.flags": [[319, "module-armi.reactor.flags"]], "fromstring() (armi.reactor.flags.flags class method)": [[319, "armi.reactor.flags.Flags.fromString"]], "fromstringignoreerrors() (armi.reactor.flags.flags class method)": [[319, "armi.reactor.flags.Flags.fromStringIgnoreErrors"]], "tostring() (armi.reactor.flags.flags class method)": [[319, "armi.reactor.flags.Flags.toString"]], "boundarytype (class in armi.reactor.geometry)": [[320, "armi.reactor.geometry.BoundaryType"]], "cartesian (armi.reactor.geometry.geomtype attribute)": [[320, "armi.reactor.geometry.GeomType.CARTESIAN"]], "domaintype (class in armi.reactor.geometry)": [[320, "armi.reactor.geometry.DomainType"]], "eighth_core (armi.reactor.geometry.domaintype attribute)": [[320, "armi.reactor.geometry.DomainType.EIGHTH_CORE"]], "full_core (armi.reactor.geometry.domaintype attribute)": [[320, "armi.reactor.geometry.DomainType.FULL_CORE"]], "geomtype (class in armi.reactor.geometry)": [[320, "armi.reactor.geometry.GeomType"]], "hex (armi.reactor.geometry.geomtype attribute)": [[320, "armi.reactor.geometry.GeomType.HEX"]], "no_symmetry (armi.reactor.geometry.boundarytype attribute)": [[320, "armi.reactor.geometry.BoundaryType.NO_SYMMETRY"]], "null (armi.reactor.geometry.domaintype attribute)": [[320, "armi.reactor.geometry.DomainType.NULL"]], "periodic (armi.reactor.geometry.boundarytype attribute)": [[320, "armi.reactor.geometry.BoundaryType.PERIODIC"]], "quarter_core (armi.reactor.geometry.domaintype attribute)": [[320, "armi.reactor.geometry.DomainType.QUARTER_CORE"]], "reflective (armi.reactor.geometry.boundarytype attribute)": [[320, "armi.reactor.geometry.BoundaryType.REFLECTIVE"]], "rz (armi.reactor.geometry.geomtype attribute)": [[320, "armi.reactor.geometry.GeomType.RZ"]], "rzt (armi.reactor.geometry.geomtype attribute)": [[320, "armi.reactor.geometry.GeomType.RZT"]], "sixteenth_core (armi.reactor.geometry.domaintype attribute)": [[320, "armi.reactor.geometry.DomainType.SIXTEENTH_CORE"]], "symmetrytype (class in armi.reactor.geometry)": [[320, "armi.reactor.geometry.SymmetryType"]], "third_core (armi.reactor.geometry.domaintype attribute)": [[320, "armi.reactor.geometry.DomainType.THIRD_CORE"]], "valid_symmetry (armi.reactor.geometry.symmetrytype attribute)": [[320, "armi.reactor.geometry.SymmetryType.VALID_SYMMETRY"]], "armi.reactor.geometry": [[320, "module-armi.reactor.geometry"]], "checkvalidgeomsymmetrycombo() (in module armi.reactor.geometry)": [[320, "armi.reactor.geometry.checkValidGeomSymmetryCombo"]], "checkvalidsymmetry() (armi.reactor.geometry.symmetrytype method)": [[320, "armi.reactor.geometry.SymmetryType.checkValidSymmetry"]], "createvalidsymmetrystrings() (armi.reactor.geometry.symmetrytype class method)": [[320, "armi.reactor.geometry.SymmetryType.createValidSymmetryStrings"]], "fromany() (armi.reactor.geometry.boundarytype class method)": [[320, "armi.reactor.geometry.BoundaryType.fromAny"]], "fromany() (armi.reactor.geometry.domaintype class method)": [[320, "armi.reactor.geometry.DomainType.fromAny"]], "fromany() (armi.reactor.geometry.geomtype class method)": [[320, "armi.reactor.geometry.GeomType.fromAny"]], "fromany() (armi.reactor.geometry.symmetrytype class method)": [[320, "armi.reactor.geometry.SymmetryType.fromAny"]], "fromstr() (armi.reactor.geometry.boundarytype class method)": [[320, "armi.reactor.geometry.BoundaryType.fromStr"]], "fromstr() (armi.reactor.geometry.domaintype class method)": [[320, "armi.reactor.geometry.DomainType.fromStr"]], "fromstr() (armi.reactor.geometry.geomtype class method)": [[320, "armi.reactor.geometry.GeomType.fromStr"]], "fromstr() (armi.reactor.geometry.symmetrytype class method)": [[320, "armi.reactor.geometry.SymmetryType.fromStr"]], "hassymmetry() (armi.reactor.geometry.boundarytype method)": [[320, "armi.reactor.geometry.BoundaryType.hasSymmetry"]], "label (armi.reactor.geometry.boundarytype property)": [[320, "armi.reactor.geometry.BoundaryType.label"]], "label (armi.reactor.geometry.domaintype property)": [[320, "armi.reactor.geometry.DomainType.label"]], "label (armi.reactor.geometry.geomtype property)": [[320, "armi.reactor.geometry.GeomType.label"]], "symmetryfactor() (armi.reactor.geometry.domaintype method)": [[320, "armi.reactor.geometry.DomainType.symmetryFactor"]], "symmetryfactor() (armi.reactor.geometry.symmetrytype method)": [[320, "armi.reactor.geometry.SymmetryType.symmetryFactor"]], "armi.reactor.grids": [[321, "module-armi.reactor.grids"]], "locatorlabeltoindices() (in module armi.reactor.grids)": [[321, "armi.reactor.grids.locatorLabelToIndices"]], "axialgrid (class in armi.reactor.grids.axial)": [[322, "armi.reactor.grids.axial.AxialGrid"]], "armi.reactor.grids.axial": [[322, "module-armi.reactor.grids.axial"]], "armiobject (armi.reactor.grids.axial.axialgrid attribute)": [[322, "armi.reactor.grids.axial.AxialGrid.armiObject"]], "axialunitgrid() (in module armi.reactor.grids.axial)": [[322, "armi.reactor.grids.axial.axialUnitGrid"]], "fromncells() (armi.reactor.grids.axial.axialgrid class method)": [[322, "armi.reactor.grids.axial.AxialGrid.fromNCells"]], "getindicesfromringandpos() (armi.reactor.grids.axial.axialgrid static method)": [[322, "armi.reactor.grids.axial.AxialGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.axial.axialgrid static method)": [[322, "armi.reactor.grids.axial.AxialGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.axial.axialgrid static method)": [[322, "armi.reactor.grids.axial.AxialGrid.getPositionsInRing"]], "getsymmetricequivalents() (armi.reactor.grids.axial.axialgrid static method)": [[322, "armi.reactor.grids.axial.AxialGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.axial.axialgrid static method)": [[322, "armi.reactor.grids.axial.AxialGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.axial.axialgrid static method)": [[322, "armi.reactor.grids.axial.AxialGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.axial.axialgrid property)": [[322, "armi.reactor.grids.axial.AxialGrid.pitch"]], "cartesiangrid (class in armi.reactor.grids.cartesian)": [[323, "armi.reactor.grids.cartesian.CartesianGrid"]], "armi.reactor.grids.cartesian": [[323, "module-armi.reactor.grids.cartesian"]], "armiobject (armi.reactor.grids.cartesian.cartesiangrid attribute)": [[323, "armi.reactor.grids.cartesian.CartesianGrid.armiObject"]], "changepitch() (armi.reactor.grids.cartesian.cartesiangrid method)": [[323, "armi.reactor.grids.cartesian.CartesianGrid.changePitch"]], "fromrectangle() (armi.reactor.grids.cartesian.cartesiangrid class method)": [[323, "armi.reactor.grids.cartesian.CartesianGrid.fromRectangle"]], "getindicesfromringandpos() (armi.reactor.grids.cartesian.cartesiangrid static method)": [[323, "armi.reactor.grids.cartesian.CartesianGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.cartesian.cartesiangrid method)": [[323, "armi.reactor.grids.cartesian.CartesianGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.cartesian.cartesiangrid method)": [[323, "armi.reactor.grids.cartesian.CartesianGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.cartesian.cartesiangrid method)": [[323, "armi.reactor.grids.cartesian.CartesianGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.cartesian.cartesiangrid method)": [[323, "armi.reactor.grids.cartesian.CartesianGrid.getSymmetricEquivalents"]], "locatorindomain() (armi.reactor.grids.cartesian.cartesiangrid method)": [[323, "armi.reactor.grids.cartesian.CartesianGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.cartesian.cartesiangrid method)": [[323, "armi.reactor.grids.cartesian.CartesianGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.cartesian.cartesiangrid property)": [[323, "armi.reactor.grids.cartesian.CartesianGrid.pitch"]], "armi.reactor.grids.constants": [[324, "module-armi.reactor.grids.constants"]], "grid (class in armi.reactor.grids.grid)": [[325, "armi.reactor.grids.grid.Grid"]], "armi.reactor.grids.grid": [[325, "module-armi.reactor.grids.grid"]], "armiobject (armi.reactor.grids.grid.grid attribute)": [[325, "armi.reactor.grids.grid.Grid.armiObject"]], "backup() (armi.reactor.grids.grid.grid method)": [[325, "armi.reactor.grids.grid.Grid.backUp"]], "geomtype (armi.reactor.grids.grid.grid property)": [[325, "armi.reactor.grids.grid.Grid.geomType"]], "getcellbase() (armi.reactor.grids.grid.grid method)": [[325, "armi.reactor.grids.grid.Grid.getCellBase"]], "getcelltop() (armi.reactor.grids.grid.grid method)": [[325, "armi.reactor.grids.grid.Grid.getCellTop"]], "getcoordinates() (armi.reactor.grids.grid.grid method)": [[325, "armi.reactor.grids.grid.Grid.getCoordinates"]], "getlabel() (armi.reactor.grids.grid.grid static method)": [[325, "armi.reactor.grids.grid.Grid.getLabel"]], "getsymmetricequivalents() (armi.reactor.grids.grid.grid method)": [[325, "armi.reactor.grids.grid.Grid.getSymmetricEquivalents"]], "isaxialonly (armi.reactor.grids.grid.grid property)": [[325, "armi.reactor.grids.grid.Grid.isAxialOnly"]], "items() (armi.reactor.grids.grid.grid method)": [[325, "armi.reactor.grids.grid.Grid.items"]], "locatorindomain() (armi.reactor.grids.grid.grid method)": [[325, "armi.reactor.grids.grid.Grid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.grid.grid method)": [[325, "armi.reactor.grids.grid.Grid.overlapsWhichSymmetryLine"]], "reduce() (armi.reactor.grids.grid.grid method)": [[325, "armi.reactor.grids.grid.Grid.reduce"]], "restorebackup() (armi.reactor.grids.grid.grid method)": [[325, "armi.reactor.grids.grid.Grid.restoreBackup"]], "symmetry (armi.reactor.grids.grid.grid property)": [[325, "armi.reactor.grids.grid.Grid.symmetry"]], "hexgrid (class in armi.reactor.grids.hexagonal)": [[326, "armi.reactor.grids.hexagonal.HexGrid"]], "allpositionsinthird() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.allPositionsInThird"]], "armi.reactor.grids.hexagonal": [[326, "module-armi.reactor.grids.hexagonal"]], "armiobject (armi.reactor.grids.hexagonal.hexgrid attribute)": [[326, "armi.reactor.grids.hexagonal.HexGrid.armiObject"]], "changepitch() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.changePitch"]], "frompitch() (armi.reactor.grids.hexagonal.hexgrid static method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.fromPitch"]], "generatesortedhexlocationlist() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.generateSortedHexLocationList"]], "getindicesfromringandpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.getIndicesFromRingAndPos"]], "getlabel() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.getLabel"]], "getminimumrings() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.getSymmetricEquivalents"]], "indicestoringpos() (armi.reactor.grids.hexagonal.hexgrid static method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.indicesToRingPos"]], "isinfirstthird() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.isInFirstThird"]], "locatorindomain() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.overlapsWhichSymmetryLine"]], "pitch (armi.reactor.grids.hexagonal.hexgrid property)": [[326, "armi.reactor.grids.hexagonal.HexGrid.pitch"]], "trianglecoords() (armi.reactor.grids.hexagonal.hexgrid method)": [[326, "armi.reactor.grids.hexagonal.HexGrid.triangleCoords"]], "coordinatelocation (class in armi.reactor.grids.locations)": [[327, "armi.reactor.grids.locations.CoordinateLocation"]], "indexlocation (class in armi.reactor.grids.locations)": [[327, "armi.reactor.grids.locations.IndexLocation"]], "locationbase (class in armi.reactor.grids.locations)": [[327, "armi.reactor.grids.locations.LocationBase"]], "multiindexlocation (class in armi.reactor.grids.locations)": [[327, "armi.reactor.grids.locations.MultiIndexLocation"]], "addingisvalid() (in module armi.reactor.grids.locations)": [[327, "armi.reactor.grids.locations.addingIsValid"]], "append() (armi.reactor.grids.locations.multiindexlocation method)": [[327, "armi.reactor.grids.locations.MultiIndexLocation.append"]], "armi.reactor.grids.locations": [[327, "module-armi.reactor.grids.locations"]], "associate() (armi.reactor.grids.locations.locationbase method)": [[327, "armi.reactor.grids.locations.LocationBase.associate"]], "associate() (armi.reactor.grids.locations.multiindexlocation method)": [[327, "armi.reactor.grids.locations.MultiIndexLocation.associate"]], "detachedcopy() (armi.reactor.grids.locations.indexlocation method)": [[327, "armi.reactor.grids.locations.IndexLocation.detachedCopy"]], "detachedcopy() (armi.reactor.grids.locations.multiindexlocation method)": [[327, "armi.reactor.grids.locations.MultiIndexLocation.detachedCopy"]], "distanceto() (armi.reactor.grids.locations.indexlocation method)": [[327, "armi.reactor.grids.locations.IndexLocation.distanceTo"]], "extend() (armi.reactor.grids.locations.multiindexlocation method)": [[327, "armi.reactor.grids.locations.MultiIndexLocation.extend"]], "getcompleteindices() (armi.reactor.grids.locations.coordinatelocation method)": [[327, "armi.reactor.grids.locations.CoordinateLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.indexlocation method)": [[327, "armi.reactor.grids.locations.IndexLocation.getCompleteIndices"]], "getcompleteindices() (armi.reactor.grids.locations.multiindexlocation method)": [[327, "armi.reactor.grids.locations.MultiIndexLocation.getCompleteIndices"]], "getglobalcellbase() (armi.reactor.grids.locations.coordinatelocation method)": [[327, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellBase"]], "getglobalcellbase() (armi.reactor.grids.locations.indexlocation method)": [[327, "armi.reactor.grids.locations.IndexLocation.getGlobalCellBase"]], "getglobalcelltop() (armi.reactor.grids.locations.coordinatelocation method)": [[327, "armi.reactor.grids.locations.CoordinateLocation.getGlobalCellTop"]], "getglobalcelltop() (armi.reactor.grids.locations.indexlocation method)": [[327, "armi.reactor.grids.locations.IndexLocation.getGlobalCellTop"]], "getglobalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[327, "armi.reactor.grids.locations.IndexLocation.getGlobalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.coordinatelocation method)": [[327, "armi.reactor.grids.locations.CoordinateLocation.getLocalCoordinates"]], "getlocalcoordinates() (armi.reactor.grids.locations.indexlocation method)": [[327, "armi.reactor.grids.locations.IndexLocation.getLocalCoordinates"]], "getringpos() (armi.reactor.grids.locations.indexlocation method)": [[327, "armi.reactor.grids.locations.IndexLocation.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.locations.indexlocation method)": [[327, "armi.reactor.grids.locations.IndexLocation.getSymmetricEquivalents"]], "grid (armi.reactor.grids.locations.locationbase property)": [[327, "armi.reactor.grids.locations.LocationBase.grid"]], "i (armi.reactor.grids.locations.locationbase property)": [[327, "armi.reactor.grids.locations.LocationBase.i"]], "indices (armi.reactor.grids.locations.indexlocation property)": [[327, "armi.reactor.grids.locations.IndexLocation.indices"]], "indices (armi.reactor.grids.locations.locationbase property)": [[327, "armi.reactor.grids.locations.LocationBase.indices"]], "indices (armi.reactor.grids.locations.multiindexlocation property)": [[327, "armi.reactor.grids.locations.MultiIndexLocation.indices"]], "j (armi.reactor.grids.locations.locationbase property)": [[327, "armi.reactor.grids.locations.LocationBase.j"]], "k (armi.reactor.grids.locations.locationbase property)": [[327, "armi.reactor.grids.locations.LocationBase.k"]], "parentlocation (armi.reactor.grids.locations.indexlocation property)": [[327, "armi.reactor.grids.locations.IndexLocation.parentLocation"]], "pop() (armi.reactor.grids.locations.multiindexlocation method)": [[327, "armi.reactor.grids.locations.MultiIndexLocation.pop"]], "gridparameters (class in armi.reactor.grids.structuredgrid)": [[328, "armi.reactor.grids.structuredgrid.GridParameters"]], "structuredgrid (class in armi.reactor.grids.structuredgrid)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid"]], "armi.reactor.grids.structuredgrid": [[328, "module-armi.reactor.grids.structuredgrid"]], "armiobject (armi.reactor.grids.structuredgrid.structuredgrid attribute)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.armiObject"]], "backup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.backUp"]], "bounds (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[328, "armi.reactor.grids.structuredgrid.GridParameters.bounds"]], "geomtype (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[328, "armi.reactor.grids.structuredgrid.GridParameters.geomType"]], "getaboveandbelowcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getAboveAndBelowCellIndices"]], "getallindices() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getAllIndices"]], "getbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getBounds"]], "getcellbase() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getCellBase"]], "getcelltop() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getCellTop"]], "getcoordinates() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getCoordinates"]], "getindexbounds() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getIndexBounds"]], "getindicesfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getIndicesFromRingAndPos"]], "getlocatorfromringandpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getLocatorFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getMinimumRings"]], "getneighboringcellindices() (armi.reactor.grids.structuredgrid.structuredgrid static method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getNeighboringCellIndices"]], "getpositionsinring() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.getRingPos"]], "isaxialonly (armi.reactor.grids.structuredgrid.structuredgrid property)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.isAxialOnly"]], "items() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.items"]], "offset (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[328, "armi.reactor.grids.structuredgrid.GridParameters.offset"]], "offset (armi.reactor.grids.structuredgrid.structuredgrid property)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.offset"]], "pitch (armi.reactor.grids.structuredgrid.structuredgrid property)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.pitch"]], "reduce() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.reduce"]], "restorebackup() (armi.reactor.grids.structuredgrid.structuredgrid method)": [[328, "armi.reactor.grids.structuredgrid.StructuredGrid.restoreBackup"]], "symmetry (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[328, "armi.reactor.grids.structuredgrid.GridParameters.symmetry"]], "unitsteplimits (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[328, "armi.reactor.grids.structuredgrid.GridParameters.unitStepLimits"]], "unitsteps (armi.reactor.grids.structuredgrid.gridparameters attribute)": [[328, "armi.reactor.grids.structuredgrid.GridParameters.unitSteps"]], "thetarzgrid (class in armi.reactor.grids.thetarz)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid"]], "armi.reactor.grids.thetarz": [[329, "module-armi.reactor.grids.thetarz"]], "armiobject (armi.reactor.grids.thetarz.thetarzgrid attribute)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.armiObject"]], "fromgeom() (armi.reactor.grids.thetarz.thetarzgrid class method)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.fromGeom"]], "getcoordinates() (armi.reactor.grids.thetarz.thetarzgrid method)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.getCoordinates"]], "getindicesfromringandpos() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.getIndicesFromRingAndPos"]], "getminimumrings() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.getMinimumRings"]], "getpositionsinring() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.getPositionsInRing"]], "getringpos() (armi.reactor.grids.thetarz.thetarzgrid method)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.getRingPos"]], "getsymmetricequivalents() (armi.reactor.grids.thetarz.thetarzgrid method)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.getSymmetricEquivalents"]], "indicesofbounds() (armi.reactor.grids.thetarz.thetarzgrid method)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.indicesOfBounds"]], "locatorindomain() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.locatorInDomain"]], "overlapswhichsymmetryline() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.overlapsWhichSymmetryLine"]], "pitch() (armi.reactor.grids.thetarz.thetarzgrid static method)": [[329, "armi.reactor.grids.thetarz.ThetaRZGrid.pitch"]], "armi.reactor.parameters": [[330, "module-armi.reactor.parameters"]], "reset() (in module armi.reactor.parameters)": [[330, "armi.reactor.parameters.reset"]], "parameterdefinitionerror": [[331, "armi.reactor.parameters.exceptions.ParameterDefinitionError"]], "parametererror": [[331, "armi.reactor.parameters.exceptions.ParameterError"]], "unknownparametererror": [[331, "armi.reactor.parameters.exceptions.UnknownParameterError"]], "armi.reactor.parameters.exceptions": [[331, "module-armi.reactor.parameters.exceptions"]], "global_serial_num (in module armi.reactor.parameters.parametercollections)": [[332, "armi.reactor.parameters.parameterCollections.GLOBAL_SERIAL_NUM"]], "parametercollection (class in armi.reactor.parameters.parametercollections)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection"]], "applyallparameters() (in module armi.reactor.parameters.parametercollections)": [[332, "armi.reactor.parameters.parameterCollections.applyAllParameters"]], "applyparameters() (armi.reactor.parameters.parametercollections.parametercollection class method)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.applyParameters"]], "armi.reactor.parameters.parametercollections": [[332, "module-armi.reactor.parameters.parameterCollections"]], "backup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.backUp"]], "collectpluginparameters() (in module armi.reactor.parameters.parametercollections)": [[332, "armi.reactor.parameters.parameterCollections.collectPluginParameters"]], "get() (armi.reactor.parameters.parametercollections.parametercollection method)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.get"]], "getsyncdata() (armi.reactor.parameters.parametercollections.parametercollection method)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.getSyncData"]], "items() (armi.reactor.parameters.parametercollections.parametercollection method)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.items"]], "keys() (armi.reactor.parameters.parametercollections.parametercollection method)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.keys"]], "pdefs (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.pDefs"]], "paramdefs (armi.reactor.parameters.parametercollections.parametercollection property)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.paramDefs"]], "restorebackup() (armi.reactor.parameters.parametercollections.parametercollection method)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.restoreBackup"]], "serialnum (armi.reactor.parameters.parametercollections.parametercollection attribute)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.serialNum"]], "update() (armi.reactor.parameters.parametercollections.parametercollection method)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.update"]], "values() (armi.reactor.parameters.parametercollections.parametercollection method)": [[332, "armi.reactor.parameters.parameterCollections.ParameterCollection.values"]], "average (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.ParamLocation.AVERAGE"]], "bottom (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.ParamLocation.BOTTOM"]], "centroid (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CENTROID"]], "children (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CHILDREN"]], "corners (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.ParamLocation.CORNERS"]], "category (class in armi.reactor.parameters.parameterdefinitions)": [[333, "armi.reactor.parameters.parameterDefinitions.Category"]], "edges (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.ParamLocation.EDGES"]], "max (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.ParamLocation.MAX"]], "nodefault (class in armi.reactor.parameters.parameterdefinitions)": [[333, "armi.reactor.parameters.parameterDefinitions.NoDefault"]], "paramlocation (class in armi.reactor.parameters.parameterdefinitions)": [[333, "armi.reactor.parameters.parameterDefinitions.ParamLocation"]], "parameter (class in armi.reactor.parameters.parameterdefinitions)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter"]], "parameterbuilder (class in armi.reactor.parameters.parameterdefinitions)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder"]], "parameterdefinitioncollection (class in armi.reactor.parameters.parameterdefinitions)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection"]], "serializer (class in armi.reactor.parameters.parameterdefinitions)": [[333, "armi.reactor.parameters.parameterDefinitions.Serializer"]], "top (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.ParamLocation.TOP"]], "volume_integrated (armi.reactor.parameters.parameterdefinitions.paramlocation attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.ParamLocation.VOLUME_INTEGRATED"]], "add() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.add"]], "armi.reactor.parameters.parameterdefinitions": [[333, "module-armi.reactor.parameters.parameterDefinitions"]], "assigninblueprints (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.assignInBlueprints"]], "assigned (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.assigned"]], "associateparameterdefinitioncollection() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.associateParameterDefinitionCollection"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.atLocation"]], "atlocation() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.atLocation"]], "backup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.backUp"]], "bynameandcollectiontype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndCollectionType"]], "bynameandtype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.byNameAndType"]], "categories (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.categories"]], "categories (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.categories"]], "collectiontype (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.collectionType"]], "createbuilder() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.createBuilder"]], "cumulative (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.cumulative"]], "cumulativeovercycle (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.cumulativeOverCycle"]], "defparam() (armi.reactor.parameters.parameterdefinitions.parameterbuilder method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterBuilder.defParam"]], "default (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.default"]], "depletion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.depletion"]], "description (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.description"]], "detailedaxialexpansion (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.detailedAxialExpansion"]], "extend() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.extend"]], "fieldname (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.fieldName"]], "fluxquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.fluxQuantities"]], "fortype() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.forType"]], "gamma (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.gamma"]], "incategory() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.inCategory"]], "isnumpyarray() (in module armi.reactor.parameters.parameterdefinitions)": [[333, "armi.reactor.parameters.parameterDefinitions.isNumpyArray"]], "items() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.items"]], "location (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.location"]], "lock() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.lock"]], "locked (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.locked"]], "multigroupquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.multiGroupQuantities"]], "name (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.name"]], "names (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection property)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.names"]], "neutronics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.neutronics"]], "pack() (armi.reactor.parameters.parameterdefinitions.serializer static method)": [[333, "armi.reactor.parameters.parameterDefinitions.Serializer.pack"]], "pinquantities (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.pinQuantities"]], "reactivitycoefficients (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.reactivityCoefficients"]], "resetassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.resetAssignmentFlag"]], "restorebackup() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.restoreBackup"]], "retainonreplacement (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.retainOnReplacement"]], "savetodb (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.saveToDB"]], "serializer (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.serializer"]], "setassignmentflag() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.setAssignmentFlag"]], "setter() (armi.reactor.parameters.parameterdefinitions.parameter method)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.setter"]], "since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.since"]], "thermalhydraulics (armi.reactor.parameters.parameterdefinitions.category attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Category.thermalHydraulics"]], "towritetodb() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.toWriteToDB"]], "unchanged_since() (armi.reactor.parameters.parameterdefinitions.parameterdefinitioncollection method)": [[333, "armi.reactor.parameters.parameterDefinitions.ParameterDefinitionCollection.unchanged_since"]], "units (armi.reactor.parameters.parameterdefinitions.parameter attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Parameter.units"]], "unpack() (armi.reactor.parameters.parameterdefinitions.serializer class method)": [[333, "armi.reactor.parameters.parameterDefinitions.Serializer.unpack"]], "version (armi.reactor.parameters.parameterdefinitions.serializer attribute)": [[333, "armi.reactor.parameters.parameterDefinitions.Serializer.version"]], "resolveparametersmeta (class in armi.reactor.parameters.resolvecollections)": [[334, "armi.reactor.parameters.resolveCollections.ResolveParametersMeta"]], "armi.reactor.parameters.resolvecollections": [[334, "module-armi.reactor.parameters.resolveCollections"]], "armi.reactor.reactorparameters": [[335, "module-armi.reactor.reactorParameters"]], "definecoreparameters() (in module armi.reactor.reactorparameters)": [[335, "armi.reactor.reactorParameters.defineCoreParameters"]], "definereactorparameters() (in module armi.reactor.reactorparameters)": [[335, "armi.reactor.reactorParameters.defineReactorParameters"]], "core (class in armi.reactor.reactors)": [[336, "armi.reactor.reactors.Core"]], "reactor (class in armi.reactor.reactors)": [[336, "armi.reactor.reactors.Reactor"]], "add() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.add"]], "add() (armi.reactor.reactors.reactor method)": [[336, "armi.reactor.reactors.Reactor.add"]], "addmorenodes() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.addMoreNodes"]], "armi.reactor.reactors": [[336, "module-armi.reactor.reactors"]], "buildcircularringdictionary() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.buildCircularRingDictionary"]], "buildmanualzones() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.buildManualZones"]], "calcblockmaxes() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.calcBlockMaxes"]], "countblockswithflags() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.countBlocksWithFlags"]], "countfuelaxialblocks() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.countFuelAxialBlocks"]], "createassemblyoftype() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.createAssemblyOfType"]], "createfreshfeed() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.createFreshFeed"]], "factory() (in module armi.reactor.reactors)": [[336, "armi.reactor.reactors.factory"]], "findallaxialmeshpoints() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.findAllAxialMeshPoints"]], "findallazimeshpoints() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.findAllAziMeshPoints"]], "findallmeshpoints() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.findAllMeshPoints"]], "findallradmeshpoints() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.findAllRadMeshPoints"]], "findaxialmeshindexof() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.findAxialMeshIndexOf"]], "findneighbors() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.findNeighbors"]], "genassembliesaddedthiscycle() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.genAssembliesAddedThisCycle"]], "genblocksbylocname() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.genBlocksByLocName"]], "geomtype (armi.reactor.reactors.core property)": [[336, "armi.reactor.reactors.Core.geomType"]], "getallnuclidesin() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAllNuclidesIn"]], "getallxssuffixes() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAllXsSuffixes"]], "getassemblies() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAssemblies"]], "getassembliesincircularring() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAssembliesInCircularRing"]], "getassembliesinring() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAssembliesInRing"]], "getassembliesinsquareorhexring() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAssembliesInSquareOrHexRing"]], "getassembliesoftype() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAssembliesOfType"]], "getassembliesonsymmetryline() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAssembliesOnSymmetryLine"]], "getassembly() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAssembly"]], "getassemblybyname() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAssemblyByName"]], "getassemblypitch() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAssemblyPitch"]], "getassemblywithassemnum() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAssemblyWithAssemNum"]], "getassemblywithstringlocation() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAssemblyWithStringLocation"]], "getavgtemp() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getAvgTemp"]], "getblockbyname() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getBlockByName"]], "getblocks() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getBlocks"]], "getblocksbyindices() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getBlocksByIndices"]], "getcoreradius() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getCoreRadius"]], "getfirstassembly() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getFirstAssembly"]], "getfirstblock() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getFirstBlock"]], "getfirstfuelblockaxialnode() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getFirstFuelBlockAxialNode"]], "getfluxvector() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getFluxVector"]], "getfuelbottomheight() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getFuelBottomHeight"]], "getlocationcontents() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getLocationContents"]], "getmaxassembliesinhexring() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getMaxAssembliesInHexRing"]], "getmaxblockparam() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getMaxBlockParam"]], "getmaxnumpins() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getMaxNumPins"]], "getminimumpercentfluxinfuel() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getMinimumPercentFluxInFuel"]], "getnozzletypes() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getNozzleTypes"]], "getnuclidecategories() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getNuclideCategories"]], "getnumassemblieswithallringsfilledout() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getNumAssembliesWithAllRingsFilledOut"]], "getnumenergygroups() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getNumEnergyGroups"]], "getnumhexrings() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getNumHexRings"]], "getnumrings() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getNumRings"]], "getscalarevolution() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getScalarEvolution"]], "gettotalblockparam() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.getTotalBlockParam"]], "growtofullcore() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.growToFullCore"]], "incrementassemnum() (armi.reactor.reactors.reactor method)": [[336, "armi.reactor.reactors.Reactor.incrementAssemNum"]], "isfullcore (armi.reactor.reactors.core property)": [[336, "armi.reactor.reactors.Core.isFullCore"]], "lib (armi.reactor.reactors.core property)": [[336, "armi.reactor.reactors.Core.lib"]], "loadfromcs() (in module armi.reactor.reactors)": [[336, "armi.reactor.reactors.loadFromCs"]], "locateallassemblies() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.locateAllAssemblies"]], "makelocationlookup() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.makeLocationLookup"]], "normalizeinternalbookeeping() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.normalizeInternalBookeeping"]], "normalizenames() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.normalizeNames"]], "normalizenames() (armi.reactor.reactors.reactor method)": [[336, "armi.reactor.reactors.Reactor.normalizeNames"]], "pdefs (armi.reactor.reactors.core attribute)": [[336, "armi.reactor.reactors.Core.pDefs"]], "pdefs (armi.reactor.reactors.reactor attribute)": [[336, "armi.reactor.reactors.Reactor.pDefs"]], "paramcollectiontype (armi.reactor.reactors.core attribute)": [[336, "armi.reactor.reactors.Core.paramCollectionType"]], "paramcollectiontype (armi.reactor.reactors.reactor attribute)": [[336, "armi.reactor.reactors.Reactor.paramCollectionType"]], "powermultiplier (armi.reactor.reactors.core property)": [[336, "armi.reactor.reactors.Core.powerMultiplier"]], "processloading() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.processLoading"]], "r (armi.reactor.reactors.core property)": [[336, "armi.reactor.reactors.Core.r"]], "refassem (armi.reactor.reactors.core property)": [[336, "armi.reactor.reactors.Core.refAssem"]], "regenassemblylists() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.regenAssemblyLists"]], "removeallassemblies() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.removeAllAssemblies"]], "removeassembliesinring() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.removeAssembliesInRing"]], "removeassembly() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.removeAssembly"]], "saveallflux() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.saveAllFlux"]], "setblockmassparams() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.setBlockMassParams"]], "setmovelist() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.setMoveList"]], "setoptionsfromcs() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.setOptionsFromCs"]], "setpitchuniform() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.setPitchUniform"]], "setpowerfromdensity() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.setPowerFromDensity"]], "setpowerifnecessary() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.setPowerIfNecessary"]], "sortassemsbyring() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.sortAssemsByRing"]], "summarizenuclidecategories() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.summarizeNuclideCategories"]], "summarizereactorstats() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.summarizeReactorStats"]], "symmetry (armi.reactor.reactors.core property)": [[336, "armi.reactor.reactors.Core.symmetry"]], "updateaxialmesh() (armi.reactor.reactors.core method)": [[336, "armi.reactor.reactors.Core.updateAxialMesh"]], "root_tag (armi.reactor.systemlayoutinput.systemlayoutinput attribute)": [[337, "armi.reactor.systemLayoutInput.SystemLayoutInput.ROOT_TAG"]], "systemlayoutinput (class in armi.reactor.systemlayoutinput)": [[337, "armi.reactor.systemLayoutInput.SystemLayoutInput"]], "armi.reactor.systemlayoutinput": [[337, "module-armi.reactor.systemLayoutInput"]], "fromreactor() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[337, "armi.reactor.systemLayoutInput.SystemLayoutInput.fromReactor"]], "growtofullcore() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[337, "armi.reactor.systemLayoutInput.SystemLayoutInput.growToFullCore"]], "loadfromcs() (armi.reactor.systemlayoutinput.systemlayoutinput class method)": [[337, "armi.reactor.systemLayoutInput.SystemLayoutInput.loadFromCs"]], "modifyeqpaths() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[337, "armi.reactor.systemLayoutInput.SystemLayoutInput.modifyEqPaths"]], "readgeomfromfile() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[337, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromFile"]], "readgeomfromstream() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[337, "armi.reactor.systemLayoutInput.SystemLayoutInput.readGeomFromStream"]], "togridblueprints() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[337, "armi.reactor.systemLayoutInput.SystemLayoutInput.toGridBlueprints"]], "writegeom() (armi.reactor.systemlayoutinput.systemlayoutinput method)": [[337, "armi.reactor.systemLayoutInput.SystemLayoutInput.writeGeom"]], "armi.reactor.tests": [[338, "module-armi.reactor.tests"]], "annularfueltestcase (class in armi.reactor.tests.test_assemblies)": [[339, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase"]], "assemblyinreactor_testcase (class in armi.reactor.tests.test_assemblies)": [[339, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase"]], "assembly_testcase (class in armi.reactor.tests.test_assemblies)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase"]], "materialinassembly_testcase (class in armi.reactor.tests.test_assemblies)": [[339, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase"]], "armi.reactor.tests.test_assemblies": [[339, "module-armi.reactor.tests.test_assemblies"]], "buildtestassemblies() (in module armi.reactor.tests.test_assemblies)": [[339, "armi.reactor.tests.test_assemblies.buildTestAssemblies"]], "maketestassembly() (in module armi.reactor.tests.test_assemblies)": [[339, "armi.reactor.tests.test_assemblies.makeTestAssembly"]], "test_uthzrmaterial() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_UThZrMaterial"]], "test_add() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_add"]], "test_adjustresolution() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_adjustResolution"]], "test_append() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_append"]], "test_areacheck() (armi.reactor.tests.test_assemblies.annularfueltestcase method)": [[339, "armi.reactor.tests.test_assemblies.AnnularFuelTestCase.test_areaCheck"]], "test_averageplenumtemperature() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_averagePlenumTemperature"]], "test_calcavgparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcAvgParam"]], "test_calctotalparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calcTotalParam"]], "test_calculatezcoords() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_calculateZCoords"]], "test_carestiancoordinates() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_carestianCoordinates"]], "test_countblocksoftype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_countBlocksOfType"]], "test_doubleresolution() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_doubleResolution"]], "test_duplicate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_duplicate"]], "test_extend() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_extend"]], "test_getage() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAge"]], "test_getarea() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getArea"]], "test_getaxialmesh() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getAxialMesh"]], "test_getblockdata() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlockData"]], "test_getblocks() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocks"]], "test_getblocksandz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksAndZ"]], "test_getblocksbetweenelevations() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getBlocksBetweenElevations"]], "test_getdim() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDim"]], "test_getdominantmaterial() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getDominantMaterial"]], "test_getelevationsmatchingparamvalue() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getElevationsMatchingParamValue"]], "test_getfirstblock() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlock"]], "test_getfirstblockbytype() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFirstBlockByType"]], "test_getfissilemass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getFissileMass"]], "test_getheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getHeight"]], "test_getlocation() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getLocation"]], "test_getmass() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMass"]], "test_getmaxparam() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMaxParam"]], "test_getmaxuraniummassenrich() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getMaxUraniumMassEnrich"]], "test_getname() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getName"]], "test_getnum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getNum"]], "test_getparamvaluesatz() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getParamValuesAtZ"]], "test_getpufrac() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getPuFrac"]], "test_getreactiveheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getReactiveHeight"]], "test_gettotalheight() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getTotalHeight"]], "test_getvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getVolume"]], "test_getzrfrac() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_getZrFrac"]], "test_hascontinuouscoolantchannel() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasContinuousCoolantChannel"]], "test_hasflags() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_hasFlags"]], "test_iter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iter"]], "test_iteration() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_iteration"]], "test_len() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_len"]], "test_makeaxialsnaplist() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_makeAxialSnapList"]], "test_moveto() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_moveTo"]], "test_notesparameter() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_notesParameter"]], "test_pinplenumvolume() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_pinPlenumVolume"]], "test_reattach() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reattach"]], "test_reestablishblockorder() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_reestablishBlockOrder"]], "test_renameblocksaccordingtoassemblynum() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_renameBlocksAccordingToAssemblyNum"]], "test_rotate() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_rotate"]], "test_snapaxialmeshtoreference() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_snapAxialMeshToReference"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockigniter() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[339, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockIgniter"]], "test_snapaxialmeshtoreferenceconservingmassbasedonblockshield() (armi.reactor.tests.test_assemblies.assemblyinreactor_testcase method)": [[339, "armi.reactor.tests.test_assemblies.AssemblyInReactor_TestCase.test_snapAxialMeshToReferenceConservingMassBasedOnBlockShield"]], "test_sortnolocator() (armi.reactor.tests.test_assemblies.materialinassembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.MaterialInAssembly_TestCase.test_sortNoLocator"]], "test_updatefromassembly() (armi.reactor.tests.test_assemblies.assembly_testcase method)": [[339, "armi.reactor.tests.test_assemblies.Assembly_TestCase.test_updateFromAssembly"]], "block_testcase (class in armi.reactor.tests.test_blocks)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase"]], "cartesianblock_testcase (class in armi.reactor.tests.test_blocks)": [[340, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase"]], "hexblock_testcase (class in armi.reactor.tests.test_blocks)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase"]], "massconservationtests (class in armi.reactor.tests.test_blocks)": [[340, "armi.reactor.tests.test_blocks.MassConservationTests"]], "pitch (armi.reactor.tests.test_blocks.cartesianblock_testcase attribute)": [[340, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.PITCH"]], "test_negativevolume (class in armi.reactor.tests.test_blocks)": [[340, "armi.reactor.tests.test_blocks.Test_NegativeVolume"]], "thrzblock_testcase (class in armi.reactor.tests.test_blocks)": [[340, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase"]], "applydummydata() (in module armi.reactor.tests.test_blocks)": [[340, "armi.reactor.tests.test_blocks.applyDummyData"]], "armi.reactor.tests.test_blocks": [[340, "module-armi.reactor.tests.test_blocks"]], "buildsimplefuelblock() (in module armi.reactor.tests.test_blocks)": [[340, "armi.reactor.tests.test_blocks.buildSimpleFuelBlock"]], "getcomponentdata() (in module armi.reactor.tests.test_blocks)": [[340, "armi.reactor.tests.test_blocks.getComponentData"]], "loadtestblock() (in module armi.reactor.tests.test_blocks)": [[340, "armi.reactor.tests.test_blocks.loadTestBlock"]], "test_100_getpinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_100_getPinPitch"]], "test_101_getpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_101_getPitch"]], "test_102_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_102_setPitch"]], "test_106_getareafractions() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_106_getAreaFractions"]], "test_27b_setbugroup() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_27b_setBuGroup"]], "test_add() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_add"]], "test_adjustdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustDensity"]], "test_adjustuenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_adjustUEnrich"]], "test_axial() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_axial"]], "test_breakfuelcomponentsintoindividuals() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_breakFuelComponentsIntoIndividuals"]], "test_cleardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_clearDensity"]], "test_coldmass() (armi.reactor.tests.test_blocks.massconservationtests method)": [[340, "armi.reactor.tests.test_blocks.MassConservationTests.test_coldMass"]], "test_completeinitialloading() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_completeInitialLoading"]], "test_consistentareawithoverlappingcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentAreaWithOverlappingComponents"]], "test_consistentmassdensityvolumebetweencoldblockandcoldcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenColdBlockAndColdComponents"]], "test_consistentmassdensityvolumebetweenhotblockandhotcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_consistentMassDensityVolumeBetweenHotBlockAndHotComponents"]], "test_coords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_coords"]], "test_dimensionductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[340, "armi.reactor.tests.test_blocks.MassConservationTests.test_dimensionDuctHeatup"]], "test_duplicate() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_duplicate"]], "test_expandallelementalstoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandAllElementalsToIsotopics"]], "test_expandelementaltoisotopics() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_expandElementalToIsotopics"]], "test_getarea() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getArea"]], "test_getcartesiangrid() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getCartesianGrid"]], "test_getcomponent() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponent"]], "test_getcomponentareafrac() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentAreaFrac"]], "test_getcomponentbyname() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentByName"]], "test_getcomponentnames() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentNames"]], "test_getcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponents"]], "test_getcomponentsinlinkedorder() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsInLinkedOrder"]], "test_getcomponentsofmaterial() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfMaterial"]], "test_getcomponentsofshape() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getComponentsOfShape"]], "test_getdimensions() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getDimensions"]], "test_getductpitch() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getDuctPitch"]], "test_getfissilemassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFissileMassEnrich"]], "test_getflowarea() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowArea"]], "test_getflowareaperpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getFlowAreaPerPin"]], "test_gethmdens() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHMDens"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getHydraulicDiameter"]], "test_gethydraulicdiameter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getHydraulicDiameter"]], "test_getmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMass"]], "test_getmasses() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMasses"]], "test_getmfp() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMfp"]], "test_getmicrosuffix() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getMicroSuffix"]], "test_getnumcomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumComponents"]], "test_getnumpins() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumPins"]], "test_getnumpins() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getNumPins"]], "test_getnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberDensity"]], "test_getnumberofatoms() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getNumberOfAtoms"]], "test_getpincenterflattoflat() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCenterFlatToFlat"]], "test_getpincoords() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPinCoords"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchhomogeneousblock() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_getPitchHomogeneousBlock"]], "test_getpitchsquare() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getPitchSquare"]], "test_getplenumpin() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPlenumPin"]], "test_getpu() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getPu"]], "test_getreactionrates() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getReactionRates"]], "test_getsmeardensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensity"]], "test_getsmeardensitymultipleliner() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSmearDensityMultipleLiner"]], "test_getsortedcomponentsinsideofcomponent() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponent"]], "test_getsortedcomponentsinsideofcomponentspecifiedtypes() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getSortedComponentsInsideOfComponentSpecifiedTypes"]], "test_getthetarzgrid() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getThetaRZGrid"]], "test_gettotalmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalMass"]], "test_gettotalndens() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getTotalNDens"]], "test_gettype() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getType"]], "test_geturaniummassenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumMassEnrich"]], "test_geturaniumnumenrich() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getUraniumNumEnrich"]], "test_getvolumefractionwithoutparent() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionWithoutParent"]], "test_getvolumefractionswithzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getVolumeFractionsWithZeroHeight"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.cartesianblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.CartesianBlock_TestCase.test_getWettedPerimeter"]], "test_getwettedperimeter() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_getWettedPerimeter"]], "test_getxstype() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_getXsType"]], "test_gridcreation() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridCreation"]], "test_gridnotcreatedmultiplemultiplicities() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNotCreatedMultipleMultiplicities"]], "test_gridnumpinsandlocations() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_gridNumPinsAndLocations"]], "test_hascomponents() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasComponents"]], "test_hasflags() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasFlags"]], "test_haspinpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_hasPinPitch"]], "test_heightexpansiondifferences() (armi.reactor.tests.test_blocks.massconservationtests method)": [[340, "armi.reactor.tests.test_blocks.MassConservationTests.test_heightExpansionDifferences"]], "test_homogenizedmixture() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_homogenizedMixture"]], "test_masscladheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[340, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCladHeatup"]], "test_massconsistency() (armi.reactor.tests.test_blocks.massconservationtests method)": [[340, "armi.reactor.tests.test_blocks.MassConservationTests.test_massConsistency"]], "test_masscoolheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[340, "armi.reactor.tests.test_blocks.MassConservationTests.test_massCoolHeatup"]], "test_massductheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[340, "armi.reactor.tests.test_blocks.MassConservationTests.test_massDuctHeatup"]], "test_massfuelheatup() (armi.reactor.tests.test_blocks.massconservationtests method)": [[340, "armi.reactor.tests.test_blocks.MassConservationTests.test_massFuelHeatup"]], "test_mergewithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_mergeWithBlock"]], "test_negativevolume() (armi.reactor.tests.test_blocks.test_negativevolume method)": [[340, "armi.reactor.tests.test_blocks.Test_NegativeVolume.test_negativeVolume"]], "test_pinmgfluxes() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_pinMgFluxes"]], "test_radii() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_radii"]], "test_removemass() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_removeMass"]], "test_replaceblockwithblock() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_replaceBlockWithBlock"]], "test_retainstate() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_retainState"]], "test_rotatepins() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_rotatePins"]], "test_setbulimitinfo() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_setBuLimitInfo"]], "test_setlinpowbypin() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLinPowByPin"]], "test_setlocation() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_setLocation"]], "test_setmass() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_setMass"]], "test_setnumberdensities() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensities"]], "test_setnumberdensity() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_setNumberDensity"]], "test_setpitch() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_setPitch"]], "test_settype() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_setType"]], "test_setzeroheight() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_setZeroHeight"]], "test_symmetryfactor() (armi.reactor.tests.test_blocks.hexblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.HexBlock_TestCase.test_symmetryFactor"]], "test_theta() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_theta"]], "test_timenodeparams() (armi.reactor.tests.test_blocks.block_testcase method)": [[340, "armi.reactor.tests.test_blocks.Block_TestCase.test_timeNodeParams"]], "test_verifyblockdims() (armi.reactor.tests.test_blocks.thrzblock_testcase method)": [[340, "armi.reactor.tests.test_blocks.ThRZBlock_TestCase.test_verifyBlockDims"]], "testcircle (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestCircle"]], "testcomponent (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestComponent"]], "testcomponentexpansion (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion"]], "testcomponentfactory (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestComponentFactory"]], "testcube (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestCube"]], "testderivedshape (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestDerivedShape"]], "testdifferentialradialsegment (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestDifferentialRadialSegment"]], "testgeneralcomponents (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestGeneralComponents"]], "testhelix (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestHelix"]], "testhexholedcircle (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestHexHoledCircle"]], "testhexagon (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestHexagon"]], "testholedhexagon (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestHoledHexagon"]], "testholedrectangle (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestHoledRectangle"]], "testholedsquare (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestHoledSquare"]], "testmaterialadjustments (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestMaterialAdjustments"]], "testnullcomponent (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestNullComponent"]], "testradialsegment (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestRadialSegment"]], "testrectangle (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestRectangle"]], "testshapedcomponent (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestShapedComponent"]], "testsolidrectangle (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestSolidRectangle"]], "testsphere (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestSphere"]], "testsquare (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestSquare"]], "testtriangle (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestTriangle"]], "testunshapedcomponent (class in armi.reactor.tests.test_components)": [[341, "armi.reactor.tests.test_components.TestUnshapedComponent"]], "armi.reactor.tests.test_components": [[341, "module-armi.reactor.tests.test_components"]], "coldouterdiameter (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion.coldOuterDiameter"]], "componentcls (armi.reactor.tests.test_components.testcircle attribute)": [[341, "armi.reactor.tests.test_components.TestCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcomponent attribute)": [[341, "armi.reactor.tests.test_components.TestComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testcube attribute)": [[341, "armi.reactor.tests.test_components.TestCube.componentCls"]], "componentcls (armi.reactor.tests.test_components.testderivedshape attribute)": [[341, "armi.reactor.tests.test_components.TestDerivedShape.componentCls"]], "componentcls (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[341, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[341, "armi.reactor.tests.test_components.TestGeneralComponents.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhelix attribute)": [[341, "armi.reactor.tests.test_components.TestHelix.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[341, "armi.reactor.tests.test_components.TestHexHoledCircle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testhexagon attribute)": [[341, "armi.reactor.tests.test_components.TestHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedhexagon attribute)": [[341, "armi.reactor.tests.test_components.TestHoledHexagon.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedrectangle attribute)": [[341, "armi.reactor.tests.test_components.TestHoledRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testholedsquare attribute)": [[341, "armi.reactor.tests.test_components.TestHoledSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testnullcomponent attribute)": [[341, "armi.reactor.tests.test_components.TestNullComponent.componentCls"]], "componentcls (armi.reactor.tests.test_components.testradialsegment attribute)": [[341, "armi.reactor.tests.test_components.TestRadialSegment.componentCls"]], "componentcls (armi.reactor.tests.test_components.testrectangle attribute)": [[341, "armi.reactor.tests.test_components.TestRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[341, "armi.reactor.tests.test_components.TestSolidRectangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsphere attribute)": [[341, "armi.reactor.tests.test_components.TestSphere.componentCls"]], "componentcls (armi.reactor.tests.test_components.testsquare attribute)": [[341, "armi.reactor.tests.test_components.TestSquare.componentCls"]], "componentcls (armi.reactor.tests.test_components.testtriangle attribute)": [[341, "armi.reactor.tests.test_components.TestTriangle.componentCls"]], "componentcls (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[341, "armi.reactor.tests.test_components.TestUnshapedComponent.componentCls"]], "componentdims (armi.reactor.tests.test_components.testcircle attribute)": [[341, "armi.reactor.tests.test_components.TestCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testcube attribute)": [[341, "armi.reactor.tests.test_components.TestCube.componentDims"]], "componentdims (armi.reactor.tests.test_components.testderivedshape attribute)": [[341, "armi.reactor.tests.test_components.TestDerivedShape.componentDims"]], "componentdims (armi.reactor.tests.test_components.testdifferentialradialsegment attribute)": [[341, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[341, "armi.reactor.tests.test_components.TestGeneralComponents.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhelix attribute)": [[341, "armi.reactor.tests.test_components.TestHelix.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexholedcircle attribute)": [[341, "armi.reactor.tests.test_components.TestHexHoledCircle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testhexagon attribute)": [[341, "armi.reactor.tests.test_components.TestHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedhexagon attribute)": [[341, "armi.reactor.tests.test_components.TestHoledHexagon.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedrectangle attribute)": [[341, "armi.reactor.tests.test_components.TestHoledRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testholedsquare attribute)": [[341, "armi.reactor.tests.test_components.TestHoledSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testradialsegment attribute)": [[341, "armi.reactor.tests.test_components.TestRadialSegment.componentDims"]], "componentdims (armi.reactor.tests.test_components.testrectangle attribute)": [[341, "armi.reactor.tests.test_components.TestRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsolidrectangle attribute)": [[341, "armi.reactor.tests.test_components.TestSolidRectangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsphere attribute)": [[341, "armi.reactor.tests.test_components.TestSphere.componentDims"]], "componentdims (armi.reactor.tests.test_components.testsquare attribute)": [[341, "armi.reactor.tests.test_components.TestSquare.componentDims"]], "componentdims (armi.reactor.tests.test_components.testtriangle attribute)": [[341, "armi.reactor.tests.test_components.TestTriangle.componentDims"]], "componentdims (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[341, "armi.reactor.tests.test_components.TestUnshapedComponent.componentDims"]], "componentmassindependentofinputtemp() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion.componentMassIndependentOfInputTemp"]], "componentmaterial (armi.reactor.tests.test_components.testderivedshape attribute)": [[341, "armi.reactor.tests.test_components.TestDerivedShape.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testgeneralcomponents attribute)": [[341, "armi.reactor.tests.test_components.TestGeneralComponents.componentMaterial"]], "componentmaterial (armi.reactor.tests.test_components.testunshapedcomponent attribute)": [[341, "armi.reactor.tests.test_components.TestUnshapedComponent.componentMaterial"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedrectangle attribute)": [[341, "armi.reactor.tests.test_components.TestHoledRectangle.dimsToTestExpansion"]], "dimstotestexpansion (armi.reactor.tests.test_components.testholedsquare attribute)": [[341, "armi.reactor.tests.test_components.TestHoledSquare.dimsToTestExpansion"]], "expansionconservationcoldheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationColdHeightDefined"]], "expansionconservationhotheightdefined() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion.expansionConservationHotHeightDefined"]], "getcirclefueldict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[341, "armi.reactor.tests.test_components.TestComponentFactory.getCircleFuelDict"]], "getcirclevoiddict() (armi.reactor.tests.test_components.testcomponentfactory method)": [[341, "armi.reactor.tests.test_components.TestComponentFactory.getCircleVoidDict"]], "runexpansiontests() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion.runExpansionTests"]], "setclassdims() (armi.reactor.tests.test_components.testholedrectangle method)": [[341, "armi.reactor.tests.test_components.TestHoledRectangle.setClassDims"]], "setclassdims() (armi.reactor.tests.test_components.testholedsquare method)": [[341, "armi.reactor.tests.test_components.TestHoledSquare.setClassDims"]], "tcold (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion.tCold"]], "thot (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion.tHot"]], "twarm (armi.reactor.tests.test_components.testcomponentexpansion attribute)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion.tWarm"]], "test_b4cexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion.test_B4CExpansion"]], "test_ht9expansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion.test_HT9Expansion"]], "test_uzrexpansion() (armi.reactor.tests.test_components.testcomponentexpansion method)": [[341, "armi.reactor.tests.test_components.TestComponentExpansion.test_UZrExpansion"]], "test_adjustmassenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[341, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassEnrichment"]], "test_adjustmassfrac_u() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[341, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U"]], "test_adjustmassfrac_u235() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[341, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_U235"]], "test_adjustmassfrac_clear_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[341, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_clear_ZR"]], "test_adjustmassfrac_invalid() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[341, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_invalid"]], "test_adjustmassfrac_leave_same() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[341, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_leave_same"]], "test_adjustmassfrac_set_zr() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[341, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_adjustMassFrac_set_ZR"]], "test_badcomponentname() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_badComponentName"]], "test_changenumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_changeNumberDensities"]], "test_cmp() (armi.reactor.tests.test_components.testnullcomponent method)": [[341, "armi.reactor.tests.test_components.TestNullComponent.test_cmp"]], "test_componentinitializationandduplication() (armi.reactor.tests.test_components.testcomponentfactory method)": [[341, "armi.reactor.tests.test_components.TestComponentFactory.test_componentInitializationAndDuplication"]], "test_componentinteractionslinkingbydimensions() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingByDimensions"]], "test_componentinteractionslinkingbysubtraction() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_componentInteractionsLinkingBySubtraction"]], "test_density() (armi.reactor.tests.test_components.testshapedcomponent method)": [[341, "armi.reactor.tests.test_components.TestShapedComponent.test_density"]], "test_densityconsistent() (armi.reactor.tests.test_components.testshapedcomponent method)": [[341, "armi.reactor.tests.test_components.TestShapedComponent.test_densityConsistent"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[341, "armi.reactor.tests.test_components.TestHelix.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[341, "armi.reactor.tests.test_components.TestHexHoledCircle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[341, "armi.reactor.tests.test_components.TestHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[341, "armi.reactor.tests.test_components.TestHoledHexagon.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[341, "armi.reactor.tests.test_components.TestHoledRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[341, "armi.reactor.tests.test_components.TestRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[341, "armi.reactor.tests.test_components.TestSolidRectangle.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[341, "armi.reactor.tests.test_components.TestSquare.test_dimensionThermallyExpands"]], "test_dimensionthermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[341, "armi.reactor.tests.test_components.TestTriangle.test_dimensionThermallyExpands"]], "test_factory() (armi.reactor.tests.test_components.testcomponentfactory method)": [[341, "armi.reactor.tests.test_components.TestComponentFactory.test_factory"]], "test_factorybadshapename() (armi.reactor.tests.test_components.testcomponentfactory method)": [[341, "armi.reactor.tests.test_components.TestComponentFactory.test_factoryBadShapeName"]], "test_fromcomponent() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[341, "armi.reactor.tests.test_components.TestUnshapedComponent.test_fromComponent"]], "test_fuelmass() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_fuelMass"]], "test_getarea() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhelix method)": [[341, "armi.reactor.tests.test_components.TestHelix.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexholedcircle method)": [[341, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testhexagon method)": [[341, "armi.reactor.tests.test_components.TestHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedhexagon method)": [[341, "armi.reactor.tests.test_components.TestHoledHexagon.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testholedrectangle method)": [[341, "armi.reactor.tests.test_components.TestHoledRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testrectangle method)": [[341, "armi.reactor.tests.test_components.TestRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsolidrectangle method)": [[341, "armi.reactor.tests.test_components.TestSolidRectangle.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testsquare method)": [[341, "armi.reactor.tests.test_components.TestSquare.test_getArea"]], "test_getarea() (armi.reactor.tests.test_components.testtriangle method)": [[341, "armi.reactor.tests.test_components.TestTriangle.test_getArea"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testderivedshape method)": [[341, "armi.reactor.tests.test_components.TestDerivedShape.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[341, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhelix method)": [[341, "armi.reactor.tests.test_components.TestHelix.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[341, "armi.reactor.tests.test_components.TestHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[341, "armi.reactor.tests.test_components.TestHoledHexagon.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[341, "armi.reactor.tests.test_components.TestHoledRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testradialsegment method)": [[341, "armi.reactor.tests.test_components.TestRadialSegment.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[341, "armi.reactor.tests.test_components.TestRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsolidrectangle method)": [[341, "armi.reactor.tests.test_components.TestSolidRectangle.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testsquare method)": [[341, "armi.reactor.tests.test_components.TestSquare.test_getBoundingCircleOuterDiameter"]], "test_getboundingcircleouterdiameter() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[341, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getBoundingCircleOuterDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhelix method)": [[341, "armi.reactor.tests.test_components.TestHelix.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexholedcircle method)": [[341, "armi.reactor.tests.test_components.TestHexHoledCircle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testhexagon method)": [[341, "armi.reactor.tests.test_components.TestHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedhexagon method)": [[341, "armi.reactor.tests.test_components.TestHoledHexagon.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedrectangle method)": [[341, "armi.reactor.tests.test_components.TestHoledRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testholedsquare method)": [[341, "armi.reactor.tests.test_components.TestHoledSquare.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testrectangle method)": [[341, "armi.reactor.tests.test_components.TestRectangle.test_getCircleInnerDiameter"]], "test_getcircleinnerdiameter() (armi.reactor.tests.test_components.testsquare method)": [[341, "armi.reactor.tests.test_components.TestSquare.test_getCircleInnerDiameter"]], "test_getcomponentarea() (armi.reactor.tests.test_components.testunshapedcomponent method)": [[341, "armi.reactor.tests.test_components.TestUnshapedComponent.test_getComponentArea"]], "test_getdimension() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_getDimension"]], "test_getdimension() (armi.reactor.tests.test_components.testnullcomponent method)": [[341, "armi.reactor.tests.test_components.TestNullComponent.test_getDimension"]], "test_getenrichment() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[341, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_getEnrichment"]], "test_getnumberdensities() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_getNumberDensities"]], "test_getperimeter() (armi.reactor.tests.test_components.testhexagon method)": [[341, "armi.reactor.tests.test_components.TestHexagon.test_getPerimeter"]], "test_getthermalexpansionfactorconservedmassbylinearexpansionpercent() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_getThermalExpansionFactorConservedMassByLinearExpansionPercent"]], "test_getvolume() (armi.reactor.tests.test_components.testcube method)": [[341, "armi.reactor.tests.test_components.TestCube.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[341, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testradialsegment method)": [[341, "armi.reactor.tests.test_components.TestRadialSegment.test_getVolume"]], "test_getvolume() (armi.reactor.tests.test_components.testsphere method)": [[341, "armi.reactor.tests.test_components.TestSphere.test_getVolume"]], "test_initializecomponent() (armi.reactor.tests.test_components.testcomponent method)": [[341, "armi.reactor.tests.test_components.TestComponent.test_initializeComponent"]], "test_invalidcoolantcomponentassignment() (armi.reactor.tests.test_components.testcomponentfactory method)": [[341, "armi.reactor.tests.test_components.TestComponentFactory.test_invalidCoolantComponentAssignment"]], "test_negativearea() (armi.reactor.tests.test_components.testrectangle method)": [[341, "armi.reactor.tests.test_components.TestRectangle.test_negativeArea"]], "test_negativearea() (armi.reactor.tests.test_components.testsquare method)": [[341, "armi.reactor.tests.test_components.TestSquare.test_negativeArea"]], "test_negativevolume() (armi.reactor.tests.test_components.testcube method)": [[341, "armi.reactor.tests.test_components.TestCube.test_negativeVolume"]], "test_nonzero() (armi.reactor.tests.test_components.testnullcomponent method)": [[341, "armi.reactor.tests.test_components.TestNullComponent.test_nonzero"]], "test_preservemassduringthermalexpansion() (armi.reactor.tests.test_components.testshapedcomponent method)": [[341, "armi.reactor.tests.test_components.TestShapedComponent.test_preserveMassDuringThermalExpansion"]], "test_setmassfrac() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[341, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFrac"]], "test_setmassfraconcomponentmaterial() (armi.reactor.tests.test_components.testmaterialadjustments method)": [[341, "armi.reactor.tests.test_components.TestMaterialAdjustments.test_setMassFracOnComponentMaterial"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcircle method)": [[341, "armi.reactor.tests.test_components.TestCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testcube method)": [[341, "armi.reactor.tests.test_components.TestCube.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[341, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhelix method)": [[341, "armi.reactor.tests.test_components.TestHelix.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexholedcircle method)": [[341, "armi.reactor.tests.test_components.TestHexHoledCircle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testhexagon method)": [[341, "armi.reactor.tests.test_components.TestHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedhexagon method)": [[341, "armi.reactor.tests.test_components.TestHoledHexagon.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedrectangle method)": [[341, "armi.reactor.tests.test_components.TestHoledRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testholedsquare method)": [[341, "armi.reactor.tests.test_components.TestHoledSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testradialsegment method)": [[341, "armi.reactor.tests.test_components.TestRadialSegment.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testrectangle method)": [[341, "armi.reactor.tests.test_components.TestRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsolidrectangle method)": [[341, "armi.reactor.tests.test_components.TestSolidRectangle.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsphere method)": [[341, "armi.reactor.tests.test_components.TestSphere.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testsquare method)": [[341, "armi.reactor.tests.test_components.TestSquare.test_thermallyExpands"]], "test_thermallyexpands() (armi.reactor.tests.test_components.testtriangle method)": [[341, "armi.reactor.tests.test_components.TestTriangle.test_thermallyExpands"]], "test_updatedims() (armi.reactor.tests.test_components.testdifferentialradialsegment method)": [[341, "armi.reactor.tests.test_components.TestDifferentialRadialSegment.test_updateDims"]], "test_validparameters() (armi.reactor.tests.test_components.testhelix method)": [[341, "armi.reactor.tests.test_components.TestHelix.test_validParameters"]], "test_volumeafterclearcache() (armi.reactor.tests.test_components.testshapedcomponent method)": [[341, "armi.reactor.tests.test_components.TestShapedComponent.test_volumeAfterClearCache"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.A"]], "a (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.A"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.B"]], "b (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.B"]], "bprime (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.BPRIME"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.C"]], "c (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.C"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsa attribute)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA.D"]], "d (armi.reactor.tests.test_composites.testflagserializer.testflagsb attribute)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB.D"]], "dummycomposite (class in armi.reactor.tests.test_composites)": [[342, "armi.reactor.tests.test_composites.DummyComposite"]], "dummyleaf (class in armi.reactor.tests.test_composites)": [[342, "armi.reactor.tests.test_composites.DummyLeaf"]], "mockbp (class in armi.reactor.tests.test_composites)": [[342, "armi.reactor.tests.test_composites.MockBP"]], "testcompositepattern (class in armi.reactor.tests.test_composites)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern"]], "testcompositetree (class in armi.reactor.tests.test_composites)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree"]], "testflagserializer (class in armi.reactor.tests.test_composites)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer"]], "testflagserializer.testflagsa (class in armi.reactor.tests.test_composites)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsA"]], "testflagserializer.testflagsb (class in armi.reactor.tests.test_composites)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.TestFlagsB"]], "testgetreactionratedict (class in armi.reactor.tests.test_composites)": [[342, "armi.reactor.tests.test_composites.TestGetReactionRateDict"]], "testmiscmethods (class in armi.reactor.tests.test_composites)": [[342, "armi.reactor.tests.test_composites.TestMiscMethods"]], "activenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[342, "armi.reactor.tests.test_composites.MockBP.activeNuclides"]], "allnuclidesinproblem (armi.reactor.tests.test_composites.mockbp attribute)": [[342, "armi.reactor.tests.test_composites.MockBP.allNuclidesInProblem"]], "armi.reactor.tests.test_composites": [[342, "module-armi.reactor.tests.test_composites"]], "blueprintyaml (armi.reactor.tests.test_composites.testcompositetree attribute)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.blueprintYaml"]], "customisotopics (armi.reactor.tests.test_composites.mockbp attribute)": [[342, "armi.reactor.tests.test_composites.MockBP.customIsotopics"]], "elementstoexpand (armi.reactor.tests.test_composites.mockbp attribute)": [[342, "armi.reactor.tests.test_composites.MockBP.elementsToExpand"]], "getboundingcircleouterdiameter() (armi.reactor.tests.test_composites.dummyleaf method)": [[342, "armi.reactor.tests.test_composites.DummyLeaf.getBoundingCircleOuterDiameter"]], "getchildren() (armi.reactor.tests.test_composites.dummyleaf method)": [[342, "armi.reactor.tests.test_composites.DummyLeaf.getChildren"]], "getchildrenwithflags() (armi.reactor.tests.test_composites.dummyleaf method)": [[342, "armi.reactor.tests.test_composites.DummyLeaf.getChildrenWithFlags"]], "getdummyparamdefs() (in module armi.reactor.tests.test_composites)": [[342, "armi.reactor.tests.test_composites.getDummyParamDefs"]], "inactivenuclides (armi.reactor.tests.test_composites.mockbp attribute)": [[342, "armi.reactor.tests.test_composites.MockBP.inactiveNuclides"]], "itercomponents() (armi.reactor.tests.test_composites.dummyleaf method)": [[342, "armi.reactor.tests.test_composites.DummyLeaf.iterComponents"]], "pdefs (armi.reactor.tests.test_composites.dummycomposite attribute)": [[342, "armi.reactor.tests.test_composites.DummyComposite.pDefs"]], "pdefs (armi.reactor.tests.test_composites.dummyleaf attribute)": [[342, "armi.reactor.tests.test_composites.DummyLeaf.pDefs"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummycomposite attribute)": [[342, "armi.reactor.tests.test_composites.DummyComposite.paramCollectionType"]], "paramcollectiontype (armi.reactor.tests.test_composites.dummyleaf attribute)": [[342, "armi.reactor.tests.test_composites.DummyLeaf.paramCollectionType"]], "test_composite() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_Composite"]], "test_arechildernoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_areChildernOfType"]], "test_constituentreport() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_constituentReport"]], "test_containsatleastonechildoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsAtLeastOneChildOfType"]], "test_containsheavymetal() (armi.reactor.tests.test_composites.testmiscmethods method)": [[342, "armi.reactor.tests.test_composites.TestMiscMethods.test_containsHeavyMetal"]], "test_containsonlychildrenoftype() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_containsOnlyChildrenOfType"]], "test_copyparamsfrom() (armi.reactor.tests.test_composites.testmiscmethods method)": [[342, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsFrom"]], "test_copyparamstochildren() (armi.reactor.tests.test_composites.testmiscmethods method)": [[342, "armi.reactor.tests.test_composites.TestMiscMethods.test_copyParamsToChildren"]], "test_dimensionreport() (armi.reactor.tests.test_composites.testmiscmethods method)": [[342, "armi.reactor.tests.test_composites.TestMiscMethods.test_dimensionReport"]], "test_expandlfps() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_expandLFPs"]], "test_flagconversion() (armi.reactor.tests.test_composites.testflagserializer method)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagConversion"]], "test_flagserialization() (armi.reactor.tests.test_composites.testflagserializer method)": [[342, "armi.reactor.tests.test_composites.TestFlagSerializer.test_flagSerialization"]], "test_getatomicweight() (armi.reactor.tests.test_composites.testmiscmethods method)": [[342, "armi.reactor.tests.test_composites.TestMiscMethods.test_getAtomicWeight"]], "test_getboundingcirlceouterdiameter() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_getBoundingCirlceOuterDiameter"]], "test_getchildren() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_getChildren"]], "test_getchildrenincludematerials() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_getChildrenIncludeMaterials"]], "test_getfpmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFPMass"]], "test_getfissilemass() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFissileMass"]], "test_getfuelmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_getFuelMass"]], "test_getgammaenergydepositionconstants() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_getGammaEnergyDepositionConstants"]], "test_gethmmass() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_getHMMass"]], "test_getintegratedmgflux() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_getIntegratedMgFlux"]], "test_getmaxparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMaxParam"]], "test_getminparam() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_getMinParam"]], "test_getneutronenergydepositionconstants() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_getNeutronEnergyDepositionConstants"]], "test_getnuclides() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_getNuclides"]], "test_getparamnames() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_getParamNames"]], "test_getreactionratedict() (armi.reactor.tests.test_composites.testgetreactionratedict method)": [[342, "armi.reactor.tests.test_composites.TestGetReactionRateDict.test_getReactionRateDict"]], "test_getreactionrates() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_getReactionRates"]], "test_hasflags() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlags"]], "test_hasflagsnotypespecified() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsNoTypeSpecified"]], "test_hasflagssubstring() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_hasFlagsSubstring"]], "test_itercomponents() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_iterComponents"]], "test_namecontains() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_nameContains"]], "test_nucspec() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_nucSpec"]], "test_ordering() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_ordering"]], "test_printdensities() (armi.reactor.tests.test_composites.testmiscmethods method)": [[342, "armi.reactor.tests.test_composites.TestMiscMethods.test_printDensities"]], "test_setmass() (armi.reactor.tests.test_composites.testmiscmethods method)": [[342, "armi.reactor.tests.test_composites.TestMiscMethods.test_setMass"]], "test_sort() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_sort"]], "test_summing() (armi.reactor.tests.test_composites.testcompositetree method)": [[342, "armi.reactor.tests.test_composites.TestCompositeTree.test_summing"]], "test_syncparameters() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_syncParameters"]], "test_updatevolume() (armi.reactor.tests.test_composites.testcompositepattern method)": [[342, "armi.reactor.tests.test_composites.TestCompositePattern.test_updateVolume"]], "testflags (class in armi.reactor.tests.test_flags)": [[343, "armi.reactor.tests.test_flags.TestFlags"]], "armi.reactor.tests.test_flags": [[343, "module-armi.reactor.tests.test_flags"]], "test_convertsstringswithnonflags() (armi.reactor.tests.test_flags.testflags method)": [[343, "armi.reactor.tests.test_flags.TestFlags.test_convertsStringsWithNonFlags"]], "test_defaultisfalse() (armi.reactor.tests.test_flags.testflags method)": [[343, "armi.reactor.tests.test_flags.TestFlags.test_defaultIsFalse"]], "test_fromstring() (armi.reactor.tests.test_flags.testflags method)": [[343, "armi.reactor.tests.test_flags.TestFlags.test_fromString"]], "test_fromstringstrict() (armi.reactor.tests.test_flags.testflags method)": [[343, "armi.reactor.tests.test_flags.TestFlags.test_fromStringStrict"]], "test_ispickleable() (armi.reactor.tests.test_flags.testflags method)": [[343, "armi.reactor.tests.test_flags.TestFlags.test_isPickleable"]], "test_lookup() (armi.reactor.tests.test_flags.testflags method)": [[343, "armi.reactor.tests.test_flags.TestFlags.test_lookup"]], "test_tostring() (armi.reactor.tests.test_flags.testflags method)": [[343, "armi.reactor.tests.test_flags.TestFlags.test_toString"]], "testgeomtype (class in armi.reactor.tests.test_geometry)": [[344, "armi.reactor.tests.test_geometry.TestGeomType"]], "testsymmetrytype (class in armi.reactor.tests.test_geometry)": [[344, "armi.reactor.tests.test_geometry.TestSymmetryType"]], "testsystemlayoutinput (class in armi.reactor.tests.test_geometry)": [[344, "armi.reactor.tests.test_geometry.TestSystemLayoutInput"]], "testsystemlayoutinputtrz (class in armi.reactor.tests.test_geometry)": [[344, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ"]], "armi.reactor.tests.test_geometry": [[344, "module-armi.reactor.tests.test_geometry"]], "test_symmetryfactor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[344, "armi.reactor.tests.test_geometry.TestSymmetryType.test_SymmetryFactor"]], "test_trzyamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[344, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_TRZyamlIO"]], "test_asciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[344, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_asciimap"]], "test_baseconstructor() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[344, "armi.reactor.tests.test_geometry.TestSymmetryType.test_baseConstructor"]], "test_checkvalidgeomsymmetrycombo() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[344, "armi.reactor.tests.test_geometry.TestSymmetryType.test_checkValidGeomSymmetryCombo"]], "test_domaintypenulls() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[344, "armi.reactor.tests.test_geometry.TestSymmetryType.test_domainTypeNulls"]], "test_fromany() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[344, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromAny"]], "test_fromstr() (armi.reactor.tests.test_geometry.testgeomtype method)": [[344, "armi.reactor.tests.test_geometry.TestGeomType.test_fromStr"]], "test_fromstr() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[344, "armi.reactor.tests.test_geometry.TestSymmetryType.test_fromStr"]], "test_growtofullcore() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[344, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_growToFullCore"]], "test_label() (armi.reactor.tests.test_geometry.testgeomtype method)": [[344, "armi.reactor.tests.test_geometry.TestGeomType.test_label"]], "test_label() (armi.reactor.tests.test_geometry.testsymmetrytype method)": [[344, "armi.reactor.tests.test_geometry.TestSymmetryType.test_label"]], "test_readasciimap() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[344, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readAsciimap"]], "test_readhexgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[344, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readHexGeomXML"]], "test_readreactor() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[344, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_readReactor"]], "test_readtrzgeomxml() (armi.reactor.tests.test_geometry.testsystemlayoutinputtrz method)": [[344, "armi.reactor.tests.test_geometry.TestSystemLayoutInputTRZ.test_readTRZGeomXML"]], "test_str() (armi.reactor.tests.test_geometry.testgeomtype method)": [[344, "armi.reactor.tests.test_geometry.TestGeomType.test_str"]], "test_yamlio() (armi.reactor.tests.test_geometry.testsystemlayoutinput method)": [[344, "armi.reactor.tests.test_geometry.TestSystemLayoutInput.test_yamlIO"]], "mockcomposite (class in armi.reactor.tests.test_parameters)": [[345, "armi.reactor.tests.test_parameters.MockComposite"]], "mockcompositechild (class in armi.reactor.tests.test_parameters)": [[345, "armi.reactor.tests.test_parameters.MockCompositeChild"]], "mockcompositegrandparent (class in armi.reactor.tests.test_parameters)": [[345, "armi.reactor.tests.test_parameters.MockCompositeGrandParent"]], "mockcompositeparent (class in armi.reactor.tests.test_parameters)": [[345, "armi.reactor.tests.test_parameters.MockCompositeParent"]], "mocksyncpc (class in armi.reactor.tests.test_parameters)": [[345, "armi.reactor.tests.test_parameters.MockSyncPC"]], "parametertests (class in armi.reactor.tests.test_parameters)": [[345, "armi.reactor.tests.test_parameters.ParameterTests"]], "synchronizationtests (class in armi.reactor.tests.test_parameters)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests"]], "armi.reactor.tests.test_parameters": [[345, "module-armi.reactor.tests.test_parameters"]], "assertequal() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.assertEqual"]], "assertnotequal() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.assertNotEqual"]], "assertraises() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.assertRaises"]], "makecomp() (in module armi.reactor.tests.test_parameters)": [[345, "armi.reactor.tests.test_parameters.makeComp"]], "mpitest_conflictsmaintainwithstateretainer() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.mpitest_conflictsMaintainWithStateRetainer"]], "mpitest_noconflicts() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.mpitest_noConflicts"]], "mpitest_noconflictsmaintainwithstateretainer() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.mpitest_noConflictsMaintainWithStateRetainer"]], "mpitest_noconflicts_setbystring() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.mpitest_noConflicts_setByString"]], "mpitest_rxcoeffsprocess() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.mpitest_rxCoeffsProcess"]], "mpitest_withconflicts() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.mpitest_withConflicts"]], "mpitest_withconflictsbutsamevalue() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.mpitest_withConflictsButSameValue"]], "pdefs (armi.reactor.tests.test_parameters.mocksyncpc attribute)": [[345, "armi.reactor.tests.test_parameters.MockSyncPC.pDefs"]], "pb (armi.reactor.tests.test_parameters.mocksyncpc attribute)": [[345, "armi.reactor.tests.test_parameters.MockSyncPC.pb"]], "run() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.run"]], "test_attemptingtosetparamwithoutsetterfails() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_attemptingToSetParamWithoutSetterFails"]], "test_cannotcreateattrbuteonparametercollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateAttrbuteOnParameterCollectionSubclass"]], "test_cannotcreateinstanceof_nodefault() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_NoDefault"]], "test_cannotcreateinstanceof_undefined() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotCreateInstanceOf_Undefined"]], "test_cannotdefineparameterwithsamename() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameName"]], "test_cannotdefineparameterwithsamenameforcollectionsubclass() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_cannotDefineParameterWithSameNameForCollectionSubclass"]], "test_categories() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_categories"]], "test_defaultlocation() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_defaultLocation"]], "test_getwithoutdefaultraisesparametererror() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_getWithoutDefaultRaisesParameterError"]], "test_mutabledefaultsnotsupported() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_mutableDefaultsNotSupported"]], "test_paramdefinitionscompose() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_paramDefinitionsCompose"]], "test_parampropertydoesnotconflict() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflict"]], "test_parampropertydoesnotconflictwithnonedefault() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_paramPropertyDoesNotConflictWithNoneDefault"]], "test_parametercollectionshave__slots__() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_parameterCollectionsHave__slots__"]], "test_setter() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_setter"]], "test_settergetterbasics() (armi.reactor.tests.test_parameters.parametertests method)": [[345, "armi.reactor.tests.test_parameters.ParameterTests.test_setterGetterBasics"]], "write() (armi.reactor.tests.test_parameters.synchronizationtests method)": [[345, "armi.reactor.tests.test_parameters.SynchronizationTests.write"]], "cartesianreactortests (class in armi.reactor.tests.test_reactors)": [[346, "armi.reactor.tests.test_reactors.CartesianReactorTests"]], "hexreactortests (class in armi.reactor.tests.test_reactors)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests"]], "reactortests (class in armi.reactor.tests.test_reactors)": [[346, "armi.reactor.tests.test_reactors.ReactorTests"]], "armi.reactor.tests.test_reactors": [[346, "module-armi.reactor.tests.test_reactors"]], "buildoperatorofemptycartesianblocks() (in module armi.reactor.tests.test_reactors)": [[346, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyCartesianBlocks"]], "buildoperatorofemptyhexblocks() (in module armi.reactor.tests.test_reactors)": [[346, "armi.reactor.tests.test_reactors.buildOperatorOfEmptyHexBlocks"]], "loadtestreactor() (in module armi.reactor.tests.test_reactors)": [[346, "armi.reactor.tests.test_reactors.loadTestReactor"]], "reducetestreactorrings() (in module armi.reactor.tests.test_reactors)": [[346, "armi.reactor.tests.test_reactors.reduceTestReactorRings"]], "test_addmorenodes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_addMoreNodes"]], "test_applythermalexpansion_coreconstruct() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_applyThermalExpansion_CoreConstruct"]], "test_buildmanualzones() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZones"]], "test_buildmanualzonesempty() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_buildManualZonesEmpty"]], "test_countblocksoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_countBlocksOfType"]], "test_countfuelaxialblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_countFuelAxialBlocks"]], "test_createassemblyoftype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfType"]], "test_createassemblyoftypeexpandedcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_createAssemblyOfTypeExpandedCore"]], "test_createfreshfeed() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_createFreshFeed"]], "test_differentnuclidemodels() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_differentNuclideModels"]], "test_factorysortsetting() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_factorySortSetting"]], "test_findallaxialmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints"]], "test_findallaxialmeshpoints_wsubmesh() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAxialMeshPoints_wSubmesh"]], "test_findallazimeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllAziMeshPoints"]], "test_findallradmeshpoints() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAllRadMeshPoints"]], "test_findaxialmeshindexof() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_findAxialMeshIndexOf"]], "test_findneighbors() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_findNeighbors"]], "test_genassembliesaddedthiscycle() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_genAssembliesAddedThisCycle"]], "test_geomtype() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_geomType"]], "test_getallxssuffixes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAllXsSuffixes"]], "test_getassembliesincircularring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInCircularRing"]], "test_getassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesInHexRing"]], "test_getassembliesinsquarering() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[346, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssembliesInSquareRing"]], "test_getassembliesonsymmetryline() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembliesOnSymmetryLine"]], "test_getassembly() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssembly"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[346, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getAssemblyPitch"]], "test_getassemblypitch() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAssemblyPitch"]], "test_getavgtemp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getAvgTemp"]], "test_getblocksbyindices() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getBlocksByIndices"]], "test_getdominantmaterial() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getDominantMaterial"]], "test_getfirstfuelblockaxialnode() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFirstFuelBlockAxialNode"]], "test_getfluxvector() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFluxVector"]], "test_getfuelbottomheight() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getFuelBottomHeight"]], "test_getgridbounds() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getGridBounds"]], "test_getmass() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMass"]], "test_getmaxassembliesinhexring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxAssembliesInHexRing"]], "test_getmaxnumpins() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMaxNumPins"]], "test_getminimumpercentfluxinfuel() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getMinimumPercentFluxInFuel"]], "test_getnozzletypes() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNozzleTypes"]], "test_getnuclidecategories() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNuclideCategories"]], "test_getnuclidecategorieslogging() (armi.reactor.tests.test_reactors.cartesianreactortests method)": [[346, "armi.reactor.tests.test_reactors.CartesianReactorTests.test_getNuclideCategoriesLogging"]], "test_getnumassemblieswithallringsfilledout() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumAssembliesWithAllRingsFilledOut"]], "test_getnumenergygroups() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getNumEnergyGroups"]], "test_getscalarevolution() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getScalarEvolution"]], "test_getsymmetryfactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getSymmetryFactor"]], "test_gettotalparam() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_getTotalParam"]], "test_growtofullcore() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_growToFullCore"]], "test_ifmissingspatialgrid() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_ifMissingSpatialGrid"]], "test_ispickleable() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_isPickleable"]], "test_locations() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_locations"]], "test_nonuniformassems() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_nonUniformAssems"]], "test_normalizenames() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_normalizeNames"]], "test_pincoordsallblocks() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_pinCoordsAllBlocks"]], "test_removeallassemblies() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAllAssemblies"]], "test_removeassembliesinring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRing"]], "test_removeassembliesinringbycount() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingByCount"]], "test_removeassembliesinringhex() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembliesInRingHex"]], "test_removeassembly() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssembly"]], "test_removeassemblynosfp() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_removeAssemblyNoSfp"]], "test_restorereactor() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_restoreReactor"]], "test_saveallflux() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_saveAllFlux"]], "test_setb10voloncreation() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_setB10VolOnCreation"]], "test_setpowerifnecessary() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_setPowerIfNecessary"]], "test_sortassembyring() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortAssemByRing"]], "test_sortchildren() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_sortChildren"]], "test_updateblockbolheights_dbload() (armi.reactor.tests.test_reactors.hexreactortests method)": [[346, "armi.reactor.tests.test_reactors.HexReactorTests.test_updateBlockBOLHeights_DBLoad"]], "test_rzt_reactor (class in armi.reactor.tests.test_rz_reactors)": [[347, "armi.reactor.tests.test_rz_reactors.Test_RZT_Reactor"]], "test_rzt_reactor_modern (class in armi.reactor.tests.test_rz_reactors)": [[347, "armi.reactor.tests.test_rz_reactors.Test_RZT_Reactor_modern"]], "armi.reactor.tests.test_rz_reactors": [[347, "module-armi.reactor.tests.test_rz_reactors"]], "test_findallmeshpoints() (armi.reactor.tests.test_rz_reactors.test_rzt_reactor method)": [[347, "armi.reactor.tests.test_rz_reactors.Test_RZT_Reactor.test_findAllMeshPoints"]], "test_loadrzt() (armi.reactor.tests.test_rz_reactors.test_rzt_reactor method)": [[347, "armi.reactor.tests.test_rz_reactors.Test_RZT_Reactor.test_loadRZT"]], "test_loadrzt_reactor() (armi.reactor.tests.test_rz_reactors.test_rzt_reactor_modern method)": [[347, "armi.reactor.tests.test_rz_reactors.Test_RZT_Reactor_modern.test_loadRZT_reactor"]], "testzone (class in armi.reactor.tests.test_zones)": [[348, "armi.reactor.tests.test_zones.TestZone"]], "testzones (class in armi.reactor.tests.test_zones)": [[348, "armi.reactor.tests.test_zones.TestZones"]], "armi.reactor.tests.test_zones": [[348, "module-armi.reactor.tests.test_zones"]], "test_additem() (armi.reactor.tests.test_zones.testzone method)": [[348, "armi.reactor.tests.test_zones.TestZone.test_addItem"]], "test_additems() (armi.reactor.tests.test_zones.testzone method)": [[348, "armi.reactor.tests.test_zones.TestZone.test_addItems"]], "test_addloc() (armi.reactor.tests.test_zones.testzone method)": [[348, "armi.reactor.tests.test_zones.TestZone.test_addLoc"]], "test_addlocs() (armi.reactor.tests.test_zones.testzone method)": [[348, "armi.reactor.tests.test_zones.TestZone.test_addLocs"]], "test_blocks() (armi.reactor.tests.test_zones.testzone method)": [[348, "armi.reactor.tests.test_zones.TestZone.test_blocks"]], "test_dictionaryinterface() (armi.reactor.tests.test_zones.testzones method)": [[348, "armi.reactor.tests.test_zones.TestZones.test_dictionaryInterface"]], "test_findzoneitisin() (armi.reactor.tests.test_zones.testzones method)": [[348, "armi.reactor.tests.test_zones.TestZones.test_findZoneItIsIn"]], "test_getalllocations() (armi.reactor.tests.test_zones.testzones method)": [[348, "armi.reactor.tests.test_zones.TestZones.test_getAllLocations"]], "test_getzonelocations() (armi.reactor.tests.test_zones.testzones method)": [[348, "armi.reactor.tests.test_zones.TestZones.test_getZoneLocations"]], "test_iteration() (armi.reactor.tests.test_zones.testzone method)": [[348, "armi.reactor.tests.test_zones.TestZone.test_iteration"]], "test_removeitem() (armi.reactor.tests.test_zones.testzone method)": [[348, "armi.reactor.tests.test_zones.TestZone.test_removeItem"]], "test_removeitems() (armi.reactor.tests.test_zones.testzone method)": [[348, "armi.reactor.tests.test_zones.TestZone.test_removeItems"]], "test_removeloc() (armi.reactor.tests.test_zones.testzone method)": [[348, "armi.reactor.tests.test_zones.TestZone.test_removeLoc"]], "test_removelocs() (armi.reactor.tests.test_zones.testzone method)": [[348, "armi.reactor.tests.test_zones.TestZone.test_removeLocs"]], "test_repr() (armi.reactor.tests.test_zones.testzone method)": [[348, "armi.reactor.tests.test_zones.TestZone.test_repr"]], "test_sortzones() (armi.reactor.tests.test_zones.testzones method)": [[348, "armi.reactor.tests.test_zones.TestZones.test_sortZones"]], "test_summary() (armi.reactor.tests.test_zones.testzones method)": [[348, "armi.reactor.tests.test_zones.TestZones.test_summary"]], "valid_types (armi.reactor.zones.zone attribute)": [[349, "armi.reactor.zones.Zone.VALID_TYPES"]], "zone (class in armi.reactor.zones)": [[349, "armi.reactor.zones.Zone"]], "zones (class in armi.reactor.zones)": [[349, "armi.reactor.zones.Zones"]], "additem() (armi.reactor.zones.zone method)": [[349, "armi.reactor.zones.Zone.addItem"]], "additems() (armi.reactor.zones.zone method)": [[349, "armi.reactor.zones.Zone.addItems"]], "addloc() (armi.reactor.zones.zone method)": [[349, "armi.reactor.zones.Zone.addLoc"]], "addlocs() (armi.reactor.zones.zone method)": [[349, "armi.reactor.zones.Zone.addLocs"]], "addzone() (armi.reactor.zones.zones method)": [[349, "armi.reactor.zones.Zones.addZone"]], "addzones() (armi.reactor.zones.zones method)": [[349, "armi.reactor.zones.Zones.addZones"]], "armi.reactor.zones": [[349, "module-armi.reactor.zones"]], "checkduplicates() (armi.reactor.zones.zones method)": [[349, "armi.reactor.zones.Zones.checkDuplicates"]], "findzoneitisin() (armi.reactor.zones.zones method)": [[349, "armi.reactor.zones.Zones.findZoneItIsIn"]], "getalllocations() (armi.reactor.zones.zones method)": [[349, "armi.reactor.zones.Zones.getAllLocations"]], "getzonelocations() (armi.reactor.zones.zones method)": [[349, "armi.reactor.zones.Zones.getZoneLocations"]], "names (armi.reactor.zones.zones property)": [[349, "armi.reactor.zones.Zones.names"]], "removeitem() (armi.reactor.zones.zone method)": [[349, "armi.reactor.zones.Zone.removeItem"]], "removeitems() (armi.reactor.zones.zone method)": [[349, "armi.reactor.zones.Zone.removeItems"]], "removeloc() (armi.reactor.zones.zone method)": [[349, "armi.reactor.zones.Zone.removeLoc"]], "removelocs() (armi.reactor.zones.zone method)": [[349, "armi.reactor.zones.Zone.removeLocs"]], "removezone() (armi.reactor.zones.zones method)": [[349, "armi.reactor.zones.Zones.removeZone"]], "removezones() (armi.reactor.zones.zones method)": [[349, "armi.reactor.zones.Zones.removeZones"]], "sortzones() (armi.reactor.zones.zones method)": [[349, "armi.reactor.zones.Zones.sortZones"]], "summary() (armi.reactor.zones.zones method)": [[349, "armi.reactor.zones.Zones.summary"]], "deduplicationfilter (class in armi.runlog)": [[350, "armi.runLog.DeduplicationFilter"]], "fmt (armi.runlog.runlogger attribute)": [[350, "armi.runLog.RunLogger.FMT"]], "nulllogger (class in armi.runlog)": [[350, "armi.runLog.NullLogger"]], "runlogger (class in armi.runlog)": [[350, "armi.runLog.RunLogger"]], "addhandler() (armi.runlog.nulllogger method)": [[350, "armi.runLog.NullLogger.addHandler"]], "allowstopduplicates() (armi.runlog.runlogger method)": [[350, "armi.runLog.RunLogger.allowStopDuplicates"]], "armi.runlog": [[350, "module-armi.runLog"]], "close() (armi.runlog.runlogger method)": [[350, "armi.runLog.RunLogger.close"]], "close() (in module armi.runlog)": [[350, "armi.runLog.close"]], "concatenatelogs() (in module armi.runlog)": [[350, "armi.runLog.concatenateLogs"]], "createlogdir() (in module armi.runlog)": [[350, "armi.runLog.createLogDir"]], "debug() (in module armi.runlog)": [[350, "armi.runLog.debug"]], "error() (in module armi.runlog)": [[350, "armi.runLog.error"]], "extra() (in module armi.runlog)": [[350, "armi.runLog.extra"]], "filter() (armi.runlog.deduplicationfilter method)": [[350, "armi.runLog.DeduplicationFilter.filter"]], "flush() (armi.runlog.runlogger method)": [[350, "armi.runLog.RunLogger.flush"]], "getduplicatesfilter() (armi.runlog.runlogger method)": [[350, "armi.runLog.RunLogger.getDuplicatesFilter"]], "getverbosity() (in module armi.runlog)": [[350, "armi.runLog.getVerbosity"]], "header() (in module armi.runlog)": [[350, "armi.runLog.header"]], "important() (in module armi.runlog)": [[350, "armi.runLog.important"]], "info() (in module armi.runlog)": [[350, "armi.runLog.info"]], "log() (armi.runlog.runlogger method)": [[350, "armi.runLog.RunLogger.log"]], "logfactory() (in module armi.runlog)": [[350, "armi.runLog.logFactory"]], "raw() (in module armi.runlog)": [[350, "armi.runLog.raw"]], "setverbosity() (armi.runlog.runlogger method)": [[350, "armi.runLog.RunLogger.setVerbosity"]], "setverbosity() (in module armi.runlog)": [[350, "armi.runLog.setVerbosity"]], "warning() (in module armi.runlog)": [[350, "armi.runLog.warning"]], "warningreport() (armi.runlog.runlogger method)": [[350, "armi.runLog.RunLogger.warningReport"]], "warningreport() (in module armi.runlog)": [[350, "armi.runLog.warningReport"]], "write() (armi.runlog.runlogger method)": [[350, "armi.runLog.RunLogger.write"]], "armi.scripts": [[351, "module-armi.scripts"]], "armi.scripts.migration": [[352, "module-armi.scripts.migration"]], "blueprintsmigration (class in armi.scripts.migration.base)": [[353, "armi.scripts.migration.base.BlueprintsMigration"]], "databasemigration (class in armi.scripts.migration.base)": [[353, "armi.scripts.migration.base.DatabaseMigration"]], "geommigration (class in armi.scripts.migration.base)": [[353, "armi.scripts.migration.base.GeomMigration"]], "migration (class in armi.scripts.migration.base)": [[353, "armi.scripts.migration.base.Migration"]], "settingsmigration (class in armi.scripts.migration.base)": [[353, "armi.scripts.migration.base.SettingsMigration"]], "apply() (armi.scripts.migration.base.migration method)": [[353, "armi.scripts.migration.base.Migration.apply"]], "armi.scripts.migration.base": [[353, "module-armi.scripts.migration.base"]], "fromversion (armi.scripts.migration.base.migration attribute)": [[353, "armi.scripts.migration.base.Migration.fromVersion"]], "toversion (armi.scripts.migration.base.migration attribute)": [[353, "armi.scripts.migration.base.Migration.toVersion"]], "movecrosssectionsfromblueprints (class in armi.scripts.migration.crosssectionblueprintstosettings)": [[354, "armi.scripts.migration.crossSectionBlueprintsToSettings.MoveCrossSectionsFromBlueprints"]], "armi.scripts.migration.crosssectionblueprintstosettings": [[354, "module-armi.scripts.migration.crossSectionBlueprintsToSettings"]], "fromversion (armi.scripts.migration.crosssectionblueprintstosettings.movecrosssectionsfromblueprints attribute)": [[354, "armi.scripts.migration.crossSectionBlueprintsToSettings.MoveCrossSectionsFromBlueprints.fromVersion"]], "migratecrosssectionsfromblueprints() (in module armi.scripts.migration.crosssectionblueprintstosettings)": [[354, "armi.scripts.migration.crossSectionBlueprintsToSettings.migrateCrossSectionsFromBlueprints"]], "toversion (armi.scripts.migration.crosssectionblueprintstosettings.movecrosssectionsfromblueprints attribute)": [[354, "armi.scripts.migration.crossSectionBlueprintsToSettings.MoveCrossSectionsFromBlueprints.toVersion"]], "convertdb2todb3 (class in armi.scripts.migration.m0_1_0_newdbformat)": [[355, "armi.scripts.migration.m0_1_0_newDbFormat.ConvertDB2toDB3"]], "apply() (armi.scripts.migration.m0_1_0_newdbformat.convertdb2todb3 method)": [[355, "armi.scripts.migration.m0_1_0_newDbFormat.ConvertDB2toDB3.apply"]], "armi.scripts.migration.m0_1_0_newdbformat": [[355, "module-armi.scripts.migration.m0_1_0_newDbFormat"]], "removecentersfromblueprints (class in armi.scripts.migration.m0_1_3)": [[356, "armi.scripts.migration.m0_1_3.RemoveCentersFromBlueprints"]], "updateelementalnuclides (class in armi.scripts.migration.m0_1_3)": [[356, "armi.scripts.migration.m0_1_3.UpdateElementalNuclides"]], "armi.scripts.migration.m0_1_3": [[356, "module-armi.scripts.migration.m0_1_3"]], "deletions (armi.scripts.migration.m0_1_3.updateelementalnuclides attribute)": [[356, "armi.scripts.migration.m0_1_3.UpdateElementalNuclides.deletions"]], "fromversion (armi.scripts.migration.m0_1_3.removecentersfromblueprints attribute)": [[356, "armi.scripts.migration.m0_1_3.RemoveCentersFromBlueprints.fromVersion"]], "fromversion (armi.scripts.migration.m0_1_3.updateelementalnuclides attribute)": [[356, "armi.scripts.migration.m0_1_3.UpdateElementalNuclides.fromVersion"]], "swaps (armi.scripts.migration.m0_1_3.updateelementalnuclides attribute)": [[356, "armi.scripts.migration.m0_1_3.UpdateElementalNuclides.swaps"]], "toversion (armi.scripts.migration.m0_1_3.removecentersfromblueprints attribute)": [[356, "armi.scripts.migration.m0_1_3.RemoveCentersFromBlueprints.toVersion"]], "toversion (armi.scripts.migration.m0_1_3.updateelementalnuclides attribute)": [[356, "armi.scripts.migration.m0_1_3.UpdateElementalNuclides.toVersion"]], "convertalphanumlocationsettingstonum (class in armi.scripts.migration.m0_1_6_locationlabels)": [[357, "armi.scripts.migration.m0_1_6_locationLabels.ConvertAlphanumLocationSettingsToNum"]], "armi.scripts.migration.m0_1_6_locationlabels": [[357, "module-armi.scripts.migration.m0_1_6_locationLabels"]], "fromversion (armi.scripts.migration.m0_1_6_locationlabels.convertalphanumlocationsettingstonum attribute)": [[357, "armi.scripts.migration.m0_1_6_locationLabels.ConvertAlphanumLocationSettingsToNum.fromVersion"]], "getindicesfromdif3dstylelocatorlabel() (in module armi.scripts.migration.m0_1_6_locationlabels)": [[357, "armi.scripts.migration.m0_1_6_locationLabels.getIndicesFromDIF3DStyleLocatorLabel"]], "toversion (armi.scripts.migration.m0_1_6_locationlabels.convertalphanumlocationsettingstonum attribute)": [[357, "armi.scripts.migration.m0_1_6_locationLabels.ConvertAlphanumLocationSettingsToNum.toVersion"]], "armi.scripts.migration.tests": [[358, "module-armi.scripts.migration.tests"]], "testmigration (class in armi.scripts.migration.tests.test_m0_1_6_locationlabels)": [[359, "armi.scripts.migration.tests.test_m0_1_6_locationLabels.TestMigration"]], "armi.scripts.migration.tests.test_m0_1_6_locationlabels": [[359, "module-armi.scripts.migration.tests.test_m0_1_6_locationLabels"]], "test_locationlabelmigration() (armi.scripts.migration.tests.test_m0_1_6_locationlabels.testmigration method)": [[359, "armi.scripts.migration.tests.test_m0_1_6_locationLabels.TestMigration.test_locationLabelMigration"]], "armi.settings": [[360, "module-armi.settings"]], "getmastercs() (in module armi.settings)": [[360, "armi.settings.getMasterCs"]], "isboolsetting() (in module armi.settings)": [[360, "armi.settings.isBoolSetting"]], "promptforsettingsfile() (in module armi.settings)": [[360, "armi.settings.promptForSettingsFile"]], "recursivelyloadsettingsfiles() (in module armi.settings)": [[360, "armi.settings.recursivelyLoadSettingsFiles"]], "setmastercs() (in module armi.settings)": [[360, "armi.settings.setMasterCs"]], "settings (class in armi.settings.casesettings)": [[361, "armi.settings.caseSettings.Settings"]], "armi.settings.casesettings": [[361, "module-armi.settings.caseSettings"]], "casetitle (armi.settings.casesettings.settings property)": [[361, "armi.settings.caseSettings.Settings.caseTitle"]], "defaultcasetitle (armi.settings.casesettings.settings attribute)": [[361, "armi.settings.caseSettings.Settings.defaultCaseTitle"]], "duplicate() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.duplicate"]], "environmentsettings (armi.settings.casesettings.settings property)": [[361, "armi.settings.caseSettings.Settings.environmentSettings"]], "failonload() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.failOnLoad"]], "getsetting() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.getSetting"]], "getsettingssetbyuser() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.getSettingsSetByUser"]], "initlogverbosity() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.initLogVerbosity"]], "inputdirectory (armi.settings.casesettings.settings property)": [[361, "armi.settings.caseSettings.Settings.inputDirectory"]], "instance (armi.settings.casesettings.settings attribute)": [[361, "armi.settings.caseSettings.Settings.instance"]], "items() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.items"]], "keys() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.keys"]], "loadfrominputfile() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.loadFromInputFile"]], "loadfromstring() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.loadFromString"]], "modified() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.modified"]], "registeruserplugins() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.registerUserPlugins"]], "reverttodefaults() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.revertToDefaults"]], "setmoduleverbosities() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.setModuleVerbosities"]], "updateenvironmentsettingsfrom() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.updateEnvironmentSettingsFrom"]], "values() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.values"]], "writetoyamlfile() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.writeToYamlFile"]], "writetoyamlstream() (armi.settings.casesettings.settings method)": [[361, "armi.settings.caseSettings.Settings.writeToYamlStream"]], "armi.settings.fwsettings": [[362, "module-armi.settings.fwSettings"]], "getframeworksettings() (in module armi.settings.fwsettings)": [[362, "armi.settings.fwSettings.getFrameworkSettings"]], "armi.settings.fwsettings.databasesettings": [[363, "module-armi.settings.fwSettings.databaseSettings"]], "definesettings() (in module armi.settings.fwsettings.databasesettings)": [[363, "armi.settings.fwSettings.databaseSettings.defineSettings"]], "armi.settings.fwsettings.globalsettings": [[364, "module-armi.settings.fwSettings.globalSettings"]], "definesettings() (in module armi.settings.fwsettings.globalsettings)": [[364, "armi.settings.fwSettings.globalSettings.defineSettings"]], "armi.settings.fwsettings.reportsettings": [[365, "module-armi.settings.fwSettings.reportSettings"]], "definesettings() (in module armi.settings.fwsettings.reportsettings)": [[365, "armi.settings.fwSettings.reportSettings.defineSettings"]], "tightcouplingsettingdef (class in armi.settings.fwsettings.tightcouplingsettings)": [[366, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef"]], "tightcouplingsettings (class in armi.settings.fwsettings.tightcouplingsettings)": [[366, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettings"]], "armi.settings.fwsettings.tightcouplingsettings": [[366, "module-armi.settings.fwSettings.tightCouplingSettings"]], "dump() (armi.settings.fwsettings.tightcouplingsettings.tightcouplingsettingdef method)": [[366, "armi.settings.fwSettings.tightCouplingSettings.TightCouplingSettingDef.dump"]], "serializetightcouplingsettings() (in module armi.settings.fwsettings.tightcouplingsettings)": [[366, "armi.settings.fwSettings.tightCouplingSettings.serializeTightCouplingSettings"]], "tightcouplingsettingsvalidator() (in module armi.settings.fwsettings.tightcouplingsettings)": [[366, "armi.settings.fwSettings.tightCouplingSettings.tightCouplingSettingsValidator"]], "default (class in armi.settings.setting)": [[367, "armi.settings.setting.Default"]], "flaglistsetting (class in armi.settings.setting)": [[367, "armi.settings.setting.FlagListSetting"]], "option (class in armi.settings.setting)": [[367, "armi.settings.setting.Option"]], "setting (class in armi.settings.setting)": [[367, "armi.settings.setting.Setting"]], "addoption() (armi.settings.setting.setting method)": [[367, "armi.settings.setting.Setting.addOption"]], "addoptions() (armi.settings.setting.setting method)": [[367, "armi.settings.setting.Setting.addOptions"]], "armi.settings.setting": [[367, "module-armi.settings.setting"]], "changedefault() (armi.settings.setting.setting method)": [[367, "armi.settings.setting.Setting.changeDefault"]], "containedtype (armi.settings.setting.setting property)": [[367, "armi.settings.setting.Setting.containedType"]], "default (armi.settings.setting.setting property)": [[367, "armi.settings.setting.Setting.default"]], "dump() (armi.settings.setting.flaglistsetting method)": [[367, "armi.settings.setting.FlagListSetting.dump"]], "dump() (armi.settings.setting.setting method)": [[367, "armi.settings.setting.Setting.dump"]], "getcustomattributes() (armi.settings.setting.setting method)": [[367, "armi.settings.setting.Setting.getCustomAttributes"]], "getdefaultattributes() (armi.settings.setting.setting method)": [[367, "armi.settings.setting.Setting.getDefaultAttributes"]], "isdefault() (armi.settings.setting.setting method)": [[367, "armi.settings.setting.Setting.isDefault"]], "offdefault (armi.settings.setting.setting property)": [[367, "armi.settings.setting.Setting.offDefault"]], "option (armi.settings.setting.option attribute)": [[367, "armi.settings.setting.Option.option"]], "reverttodefault() (armi.settings.setting.setting method)": [[367, "armi.settings.setting.Setting.revertToDefault"]], "schema() (armi.settings.setting.flaglistsetting static method)": [[367, "armi.settings.setting.FlagListSetting.schema"]], "setvalue() (armi.settings.setting.setting method)": [[367, "armi.settings.setting.Setting.setValue"]], "settingname (armi.settings.setting.default attribute)": [[367, "armi.settings.setting.Default.settingName"]], "settingname (armi.settings.setting.option attribute)": [[367, "armi.settings.setting.Option.settingName"]], "underlyingtype (armi.settings.setting.setting property)": [[367, "armi.settings.setting.Setting.underlyingType"]], "value (armi.settings.setting.default attribute)": [[367, "armi.settings.setting.Default.value"]], "value (armi.settings.setting.setting property)": [[367, "armi.settings.setting.Setting.value"]], "custom (armi.settings.settingsio.roots attribute)": [[368, "armi.settings.settingsIO.Roots.CUSTOM"]], "roots (class in armi.settings.settingsio)": [[368, "armi.settings.settingsIO.Roots"]], "runlogpromptcancel": [[368, "armi.settings.settingsIO.RunLogPromptCancel"]], "runlogpromptunresolvable": [[368, "armi.settings.settingsIO.RunLogPromptUnresolvable"]], "settingrenamer (class in armi.settings.settingsio)": [[368, "armi.settings.settingsIO.SettingRenamer"]], "settingsreader (class in armi.settings.settingsio)": [[368, "armi.settings.settingsIO.SettingsReader"]], "settingsreader.settingsinputformat (class in armi.settings.settingsio)": [[368, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat"]], "settingswriter (class in armi.settings.settingsio)": [[368, "armi.settings.settingsIO.SettingsWriter"]], "version (armi.settings.settingsio.roots attribute)": [[368, "armi.settings.settingsIO.Roots.VERSION"]], "yaml (armi.settings.settingsio.settingsreader.settingsinputformat attribute)": [[368, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.YAML"]], "armi.settings.settingsio": [[368, "module-armi.settings.settingsIO"]], "fromext() (armi.settings.settingsio.settingsreader.settingsinputformat class method)": [[368, "armi.settings.settingsIO.SettingsReader.SettingsInputFormat.fromExt"]], "prompt() (in module armi.settings.settingsio)": [[368, "armi.settings.settingsIO.prompt"]], "readfromfile() (armi.settings.settingsio.settingsreader method)": [[368, "armi.settings.settingsIO.SettingsReader.readFromFile"]], "readfromstream() (armi.settings.settingsio.settingsreader method)": [[368, "armi.settings.settingsIO.SettingsReader.readFromStream"]], "renamesetting() (armi.settings.settingsio.settingrenamer method)": [[368, "armi.settings.settingsIO.SettingRenamer.renameSetting"]], "writeyaml() (armi.settings.settingsio.settingswriter method)": [[368, "armi.settings.settingsIO.SettingsWriter.writeYaml"]], "armi.settings.tests": [[369, "module-armi.settings.tests"]], "dummyplugin1 (class in armi.settings.tests.test_settings)": [[370, "armi.settings.tests.test_settings.DummyPlugin1"]], "dummyplugin2 (class in armi.settings.tests.test_settings)": [[370, "armi.settings.tests.test_settings.DummyPlugin2"]], "pluginaddsoptions (class in armi.settings.tests.test_settings)": [[370, "armi.settings.tests.test_settings.PluginAddsOptions"]], "testaddingoptions (class in armi.settings.tests.test_settings)": [[370, "armi.settings.tests.test_settings.TestAddingOptions"]], "testcasesettings (class in armi.settings.tests.test_settings)": [[370, "armi.settings.tests.test_settings.TestCaseSettings"]], "testflaglistsetting (class in armi.settings.tests.test_settings)": [[370, "armi.settings.tests.test_settings.TestFlagListSetting"]], "testsettings2 (class in armi.settings.tests.test_settings)": [[370, "armi.settings.tests.test_settings.TestSettings2"]], "testsettingsutils (class in armi.settings.tests.test_settings)": [[370, "armi.settings.tests.test_settings.TestSettingsUtils"]], "testsettingsvalidationutils (class in armi.settings.tests.test_settings)": [[370, "armi.settings.tests.test_settings.TestSettingsValidationUtils"]], "armi.settings.tests.test_settings": [[370, "module-armi.settings.tests.test_settings"]], "definesettings() (armi.settings.tests.test_settings.dummyplugin1 static method)": [[370, "armi.settings.tests.test_settings.DummyPlugin1.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.dummyplugin2 static method)": [[370, "armi.settings.tests.test_settings.DummyPlugin2.defineSettings"]], "definesettings() (armi.settings.tests.test_settings.pluginaddsoptions static method)": [[370, "armi.settings.tests.test_settings.PluginAddsOptions.defineSettings"]], "test_addingoptions() (armi.settings.tests.test_settings.testaddingoptions method)": [[370, "armi.settings.tests.test_settings.TestAddingOptions.test_addingOptions"]], "test_copysetting() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_copySetting"]], "test_copysettingnotdefault() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_copySettingNotDefault"]], "test_csworks() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_csWorks"]], "test_default() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_default"]], "test_empty() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_empty"]], "test_flaglistsetting() (armi.settings.tests.test_settings.testflaglistsetting method)": [[370, "armi.settings.tests.test_settings.TestFlagListSetting.test_flagListSetting"]], "test_getfailures() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_getFailures"]], "test_getsettingssetbyuser() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_getSettingsSetByUser"]], "test_invalidflaglisttypeerror() (armi.settings.tests.test_settings.testflaglistsetting method)": [[370, "armi.settings.tests.test_settings.TestFlagListSetting.test_invalidFlagListTypeError"]], "test_listcoercion() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_listCoercion"]], "test_listsmutable() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_listsMutable"]], "test_modified() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_modified"]], "test_pluginsettings() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_pluginSettings"]], "test_pluginvalidatorsarediscovered() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_pluginValidatorsAreDiscovered"]], "test_prompt() (armi.settings.tests.test_settings.testsettingsutils method)": [[370, "armi.settings.tests.test_settings.TestSettingsUtils.test_prompt"]], "test_recursivescan() (armi.settings.tests.test_settings.testsettingsutils method)": [[370, "armi.settings.tests.test_settings.TestSettingsUtils.test_recursiveScan"]], "test_schemacheckstype() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_schemaChecksType"]], "test_setmoduleverbosities() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_setModuleVerbosities"]], "test_settingisokaytograb() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_settingIsOkayToGrab"]], "test_typedetection() (armi.settings.tests.test_settings.testsettings2 method)": [[370, "armi.settings.tests.test_settings.TestSettings2.test_typeDetection"]], "test_updateenvironmentsettingsfrom() (armi.settings.tests.test_settings.testcasesettings method)": [[370, "armi.settings.tests.test_settings.TestCaseSettings.test_updateEnvironmentSettingsFrom"]], "test_validateversion() (armi.settings.tests.test_settings.testsettingsvalidationutils method)": [[370, "armi.settings.tests.test_settings.TestSettingsValidationUtils.test_validateVersion"]], "mockentrypoint (class in armi.settings.tests.test_settingsio)": [[371, "armi.settings.tests.test_settingsIO.MockEntryPoint"]], "settingargstests (class in armi.settings.tests.test_settingsio)": [[371, "armi.settings.tests.test_settingsIO.SettingArgsTests"]], "settingsfailuretests (class in armi.settings.tests.test_settingsio)": [[371, "armi.settings.tests.test_settingsIO.SettingsFailureTests"]], "settingsreadertests (class in armi.settings.tests.test_settingsio)": [[371, "armi.settings.tests.test_settingsIO.SettingsReaderTests"]], "settingsrenametests (class in armi.settings.tests.test_settingsio)": [[371, "armi.settings.tests.test_settingsIO.SettingsRenameTests"]], "settingswritertests (class in armi.settings.tests.test_settingsio)": [[371, "armi.settings.tests.test_settingsIO.SettingsWriterTests"]], "armi.settings.tests.test_settingsio": [[371, "module-armi.settings.tests.test_settingsIO"]], "name (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[371, "armi.settings.tests.test_settingsIO.MockEntryPoint.name"]], "settingsargument (armi.settings.tests.test_settingsio.mockentrypoint attribute)": [[371, "armi.settings.tests.test_settingsIO.MockEntryPoint.settingsArgument"]], "testsettings (armi.settings.tests.test_settingsio.settingsrenametests attribute)": [[371, "armi.settings.tests.test_settingsIO.SettingsRenameTests.testSettings"]], "test_basicsettingsreader() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_basicSettingsReader"]], "test_cannotloadsettingsafterparsingcommandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[371, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_cannotLoadSettingsAfterParsingCommandLineSetting"]], "test_collidingrenames() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_collidingRenames"]], "test_commandlinesetting() (armi.settings.tests.test_settingsio.settingargstests method)": [[371, "armi.settings.tests.test_settingsIO.SettingArgsTests.test_commandLineSetting"]], "test_errorsettingswriter() (armi.settings.tests.test_settingsio.settingswritertests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_errorSettingsWriter"]], "test_invalidfile() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_invalidFile"]], "test_loadfromyamlfailsonbadnames() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_loadFromYamlFailsOnBadNames"]], "test_readfromfile() (armi.settings.tests.test_settingsio.settingsreadertests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsReaderTests.test_readFromFile"]], "test_rename() (armi.settings.tests.test_settingsio.settingsrenametests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsRenameTests.test_rename"]], "test_settingsobjsetting() (armi.settings.tests.test_settingsio.settingsfailuretests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsFailureTests.test_settingsObjSetting"]], "test_writefull() (armi.settings.tests.test_settingsio.settingswritertests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeFull"]], "test_writemedium() (armi.settings.tests.test_settingsio.settingswritertests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeMedium"]], "test_writeshort() (armi.settings.tests.test_settingsio.settingswritertests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeShort"]], "test_writeyaml() (armi.settings.tests.test_settingsio.settingswritertests method)": [[371, "armi.settings.tests.test_settingsIO.SettingsWriterTests.test_writeYaml"]], "armitesthelper (class in armi.tests)": [[372, "armi.tests.ArmiTestHelper"]], "fixture (class in armi.tests)": [[372, "armi.tests.Fixture"]], "armi.tests": [[372, "module-armi.tests"]], "comparefileslinebyline() (armi.tests.armitesthelper method)": [[372, "armi.tests.ArmiTestHelper.compareFilesLineByLine"]], "comparelines() (armi.tests.armitesthelper static method)": [[372, "armi.tests.ArmiTestHelper.compareLines"]], "fixture() (in module armi.tests)": [[372, "armi.tests.fixture"]], "getemptycartesianreactor() (in module armi.tests)": [[372, "armi.tests.getEmptyCartesianReactor"]], "getemptyhexreactor() (in module armi.tests)": [[372, "armi.tests.getEmptyHexReactor"]], "rebaselinetextcomparisons() (in module armi.tests)": [[372, "armi.tests.rebaselineTextComparisons"]], "requires_fixture() (in module armi.tests)": [[372, "armi.tests.requires_fixture"]], "bufferlog (class in armi.tests.mockrunlogs)": [[373, "armi.tests.mockRunLogs.BufferLog"]], "logcounter (class in armi.tests.mockrunlogs)": [[373, "armi.tests.mockRunLogs.LogCounter"]], "armi.tests.mockrunlogs": [[373, "module-armi.tests.mockRunLogs"]], "clearsinglewarnings() (armi.tests.mockrunlogs.bufferlog method)": [[373, "armi.tests.mockRunLogs.BufferLog.clearSingleWarnings"]], "emptystdout() (armi.tests.mockrunlogs.bufferlog method)": [[373, "armi.tests.mockRunLogs.BufferLog.emptyStdout"]], "getstderrvalue() (armi.tests.mockrunlogs.bufferlog method)": [[373, "armi.tests.mockRunLogs.BufferLog.getStderrValue"]], "getstdout() (armi.tests.mockrunlogs.bufferlog method)": [[373, "armi.tests.mockRunLogs.BufferLog.getStdout"]], "log() (armi.tests.mockrunlogs.bufferlog method)": [[373, "armi.tests.mockRunLogs.BufferLog.log"]], "log() (armi.tests.mockrunlogs.logcounter method)": [[373, "armi.tests.mockRunLogs.LogCounter.log"]], "equilibriumshuffler (class in armi.tests.refsmallreactorshufflelogic)": [[374, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler"]], "armi.tests.refsmallreactorshufflelogic": [[374, "module-armi.tests.refSmallReactorShuffleLogic"]], "chooseswaps() (armi.tests.refsmallreactorshufflelogic.equilibriumshuffler method)": [[374, "armi.tests.refSmallReactorShuffleLogic.EquilibriumShuffler.chooseSwaps"]], "getfactorlist() (in module armi.tests.refsmallreactorshufflelogic)": [[374, "armi.tests.refSmallReactorShuffleLogic.getFactorList"]], "testapps (class in armi.tests.test_apps)": [[375, "armi.tests.test_apps.TestApps"]], "testarmi (class in armi.tests.test_apps)": [[375, "armi.tests.test_apps.TestArmi"]], "testplugin1 (class in armi.tests.test_apps)": [[375, "armi.tests.test_apps.TestPlugin1"]], "testplugin2 (class in armi.tests.test_apps)": [[375, "armi.tests.test_apps.TestPlugin2"]], "testplugin3 (class in armi.tests.test_apps)": [[375, "armi.tests.test_apps.TestPlugin3"]], "testplugin4 (class in armi.tests.test_apps)": [[375, "armi.tests.test_apps.TestPlugin4"]], "armi.tests.test_apps": [[375, "module-armi.tests.test_apps"]], "defineparameterrenames() (armi.tests.test_apps.testplugin1 static method)": [[375, "armi.tests.test_apps.TestPlugin1.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin2 static method)": [[375, "armi.tests.test_apps.TestPlugin2.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin3 static method)": [[375, "armi.tests.test_apps.TestPlugin3.defineParameterRenames"]], "defineparameterrenames() (armi.tests.test_apps.testplugin4 static method)": [[375, "armi.tests.test_apps.TestPlugin4.defineParameterRenames"]], "test_disablefutureconfigures() (armi.tests.test_apps.testapps method)": [[375, "armi.tests.test_apps.TestApps.test_disableFutureConfigures"]], "test_getdefaultplugman() (armi.tests.test_apps.testarmi method)": [[375, "armi.tests.test_apps.TestArmi.test_getDefaultPlugMan"]], "test_getparamrenames() (armi.tests.test_apps.testapps method)": [[375, "armi.tests.test_apps.TestApps.test_getParamRenames"]], "test_getparamrenamesinvalids() (armi.tests.test_apps.testapps method)": [[375, "armi.tests.test_apps.TestApps.test_getParamRenamesInvalids"]], "test_getsettings() (armi.tests.test_apps.testapps method)": [[375, "armi.tests.test_apps.TestApps.test_getSettings"]], "test_isstablereleaseversion() (armi.tests.test_apps.testapps method)": [[375, "armi.tests.test_apps.TestApps.test_isStableReleaseVersion"]], "test_main() (armi.tests.test_apps.testarmi method)": [[375, "armi.tests.test_apps.TestArmi.test_main"]], "test_overconfigured() (armi.tests.test_apps.testarmi method)": [[375, "armi.tests.test_apps.TestArmi.test_overConfigured"]], "test_registerpluginflags() (armi.tests.test_apps.testapps method)": [[375, "armi.tests.test_apps.TestApps.test_registerPluginFlags"]], "test_splashtext() (armi.tests.test_apps.testapps method)": [[375, "armi.tests.test_apps.TestApps.test_splashText"]], "test_splashtextdifferentapp() (armi.tests.test_apps.testapps method)": [[375, "armi.tests.test_apps.TestApps.test_splashTextDifferentApp"]], "test_version() (armi.tests.test_apps.testapps method)": [[375, "armi.tests.test_apps.TestApps.test_version"]], "testarmitesthelper (class in armi.tests.test_armitesthelper)": [[376, "armi.tests.test_armiTestHelper.TestArmiTestHelper"]], "armi.tests.test_armitesthelper": [[376, "module-armi.tests.test_armiTestHelper"]], "test_comparefilesfail() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[376, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesFail"]], "test_comparefilessucceedfalsenegative() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[376, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucceedFalseNegative"]], "test_comparefilessucess() (armi.tests.test_armitesthelper.testarmitesthelper method)": [[376, "armi.tests.test_armiTestHelper.TestArmiTestHelper.test_compareFilesSucess"]], "cartesianreactortests (class in armi.tests.test_cartesian)": [[377, "armi.tests.test_cartesian.CartesianReactorTests"]], "armi.tests.test_cartesian": [[377, "module-armi.tests.test_cartesian"]], "test_custom() (armi.tests.test_cartesian.cartesianreactortests method)": [[377, "armi.tests.test_cartesian.CartesianReactorTests.test_custom"]], "dummyinterface (class in armi.tests.test_interfaces)": [[378, "armi.tests.test_interfaces.DummyInterface"]], "testcodeinterface (class in armi.tests.test_interfaces)": [[378, "armi.tests.test_interfaces.TestCodeInterface"]], "testtextprocessor (class in armi.tests.test_interfaces)": [[378, "armi.tests.test_interfaces.TestTextProcessor"]], "testtightcoupler (class in armi.tests.test_interfaces)": [[378, "armi.tests.test_interfaces.TestTightCoupler"]], "armi.tests.test_interfaces": [[378, "module-armi.tests.test_interfaces"]], "function (armi.tests.test_interfaces.dummyinterface attribute)": [[378, "armi.tests.test_interfaces.DummyInterface.function"]], "name (armi.tests.test_interfaces.dummyinterface attribute)": [[378, "armi.tests.test_interfaces.DummyInterface.name"]], "test_coupleractive() (armi.tests.test_interfaces.testtightcoupler method)": [[378, "armi.tests.test_interfaces.TestTightCoupler.test_couplerActive"]], "test_distributable() (armi.tests.test_interfaces.testcodeinterface method)": [[378, "armi.tests.test_interfaces.TestCodeInterface.test_distributable"]], "test_duplicate() (armi.tests.test_interfaces.testcodeinterface method)": [[378, "armi.tests.test_interfaces.TestCodeInterface.test_duplicate"]], "test_enabled() (armi.tests.test_interfaces.testcodeinterface method)": [[378, "armi.tests.test_interfaces.TestCodeInterface.test_enabled"]], "test_fsearch() (armi.tests.test_interfaces.testtextprocessor method)": [[378, "armi.tests.test_interfaces.TestTextProcessor.test_fsearch"]], "test_fsearch_text() (armi.tests.test_interfaces.testtextprocessor method)": [[378, "armi.tests.test_interfaces.TestTextProcessor.test_fsearch_text"]], "test_getlistdimension() (armi.tests.test_interfaces.testtightcoupler method)": [[378, "armi.tests.test_interfaces.TestTightCoupler.test_getListDimension"]], "test_isconverged() (armi.tests.test_interfaces.testtightcoupler method)": [[378, "armi.tests.test_interfaces.TestTightCoupler.test_isConverged"]], "test_isconvergedruntimeerror() (armi.tests.test_interfaces.testtightcoupler method)": [[378, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedRuntimeError"]], "test_isconvergedvalueerror() (armi.tests.test_interfaces.testtightcoupler method)": [[378, "armi.tests.test_interfaces.TestTightCoupler.test_isConvergedValueError"]], "test_isrequesteddetailpoint() (armi.tests.test_interfaces.testcodeinterface method)": [[378, "armi.tests.test_interfaces.TestCodeInterface.test_isRequestedDetailPoint"]], "test_namecontains() (armi.tests.test_interfaces.testcodeinterface method)": [[378, "armi.tests.test_interfaces.TestCodeInterface.test_nameContains"]], "test_predistributestate() (armi.tests.test_interfaces.testcodeinterface method)": [[378, "armi.tests.test_interfaces.TestCodeInterface.test_preDistributeState"]], "test_storepreviousiterationvalue() (armi.tests.test_interfaces.testtightcoupler method)": [[378, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValue"]], "test_storepreviousiterationvalueexception() (armi.tests.test_interfaces.testtightcoupler method)": [[378, "armi.tests.test_interfaces.TestTightCoupler.test_storePreviousIterationValueException"]], "c5g7reactortests (class in armi.tests.test_lwrinputs)": [[379, "armi.tests.test_lwrInputs.C5G7ReactorTests"]], "armi.tests.test_lwrinputs": [[379, "module-armi.tests.test_lwrInputs"]], "test_loadc5g7() (armi.tests.test_lwrinputs.c5g7reactortests method)": [[379, "armi.tests.test_lwrInputs.C5G7ReactorTests.test_loadC5G7"]], "test_runandloadc5g7() (armi.tests.test_lwrinputs.c5g7reactortests method)": [[379, "armi.tests.test_lwrInputs.C5G7ReactorTests.test_runAndLoadC5G7"]], "mpiitertests (class in armi.tests.test_mpiactions)": [[380, "armi.tests.test_mpiActions.MpiIterTests"]], "queueactionstests (class in armi.tests.test_mpiactions)": [[380, "armi.tests.test_mpiActions.QueueActionsTests"]], "armi.tests.test_mpiactions": [[380, "module-armi.tests.test_mpiActions"]], "passer() (in module armi.tests.test_mpiactions)": [[380, "armi.tests.test_mpiActions.passer"]], "test_diagnosepickleerrortestreactor() (armi.tests.test_mpiactions.mpiitertests method)": [[380, "armi.tests.test_mpiActions.MpiIterTests.test_diagnosePickleErrorTestReactor"]], "test_disableforexclusivetasks() (armi.tests.test_mpiactions.queueactionstests method)": [[380, "armi.tests.test_mpiActions.QueueActionsTests.test_disableForExclusiveTasks"]], "test_excessprocesses() (armi.tests.test_mpiactions.mpiitertests method)": [[380, "armi.tests.test_mpiActions.MpiIterTests.test_excessProcesses"]], "test_makequeue() (armi.tests.test_mpiactions.queueactionstests method)": [[380, "armi.tests.test_mpiActions.QueueActionsTests.test_makeQueue"]], "test_mpiiter() (armi.tests.test_mpiactions.mpiitertests method)": [[380, "armi.tests.test_mpiActions.MpiIterTests.test_mpiIter"]], "test_parallel() (armi.tests.test_mpiactions.mpiitertests method)": [[380, "armi.tests.test_mpiActions.MpiIterTests.test_parallel"]], "test_perfectbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[380, "armi.tests.test_mpiActions.MpiIterTests.test_perfectBalancing"]], "test_runactionsdistributestateaction() (armi.tests.test_mpiactions.mpiitertests method)": [[380, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributeStateAction"]], "test_runactionsdistributionaction() (armi.tests.test_mpiactions.mpiitertests method)": [[380, "armi.tests.test_mpiActions.MpiIterTests.test_runActionsDistributionAction"]], "test_serialgather() (armi.tests.test_mpiactions.mpiitertests method)": [[380, "armi.tests.test_mpiActions.MpiIterTests.test_serialGather"]], "test_typicalbalancing() (armi.tests.test_mpiactions.mpiitertests method)": [[380, "armi.tests.test_mpiActions.MpiIterTests.test_typicalBalancing"]], "bcastaction1 (class in armi.tests.test_mpifeatures)": [[381, "armi.tests.test_mpiFeatures.BcastAction1"]], "bcastaction2 (class in armi.tests.test_mpifeatures)": [[381, "armi.tests.test_mpiFeatures.BcastAction2"]], "failinginterface1 (class in armi.tests.test_mpifeatures)": [[381, "armi.tests.test_mpiFeatures.FailingInterface1"]], "failinginterface2 (class in armi.tests.test_mpifeatures)": [[381, "armi.tests.test_mpiFeatures.FailingInterface2"]], "failinginterface3 (class in armi.tests.test_mpifeatures)": [[381, "armi.tests.test_mpiFeatures.FailingInterface3"]], "mpidistributestatetests (class in armi.tests.test_mpifeatures)": [[381, "armi.tests.test_mpiFeatures.MpiDistributeStateTests"]], "mpioperatortests (class in armi.tests.test_mpifeatures)": [[381, "armi.tests.test_mpiFeatures.MpiOperatorTests"]], "mpipathtoolstests (class in armi.tests.test_mpifeatures)": [[381, "armi.tests.test_mpiFeatures.MpiPathToolsTests"]], "armi.tests.test_mpifeatures": [[381, "module-armi.tests.test_mpiFeatures"]], "fail() (armi.tests.test_mpifeatures.failinginterface3 method)": [[381, "armi.tests.test_mpiFeatures.FailingInterface3.fail"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface1 method)": [[381, "armi.tests.test_mpiFeatures.FailingInterface1.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface2 method)": [[381, "armi.tests.test_mpiFeatures.FailingInterface2.interactEveryNode"]], "interacteverynode() (armi.tests.test_mpifeatures.failinginterface3 method)": [[381, "armi.tests.test_mpiFeatures.FailingInterface3.interactEveryNode"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction1 method)": [[381, "armi.tests.test_mpiFeatures.BcastAction1.invokeHook"]], "invokehook() (armi.tests.test_mpifeatures.bcastaction2 method)": [[381, "armi.tests.test_mpiFeatures.BcastAction2.invokeHook"]], "name (armi.tests.test_mpifeatures.failinginterface1 attribute)": [[381, "armi.tests.test_mpiFeatures.FailingInterface1.name"]], "name (armi.tests.test_mpifeatures.failinginterface2 attribute)": [[381, "armi.tests.test_mpiFeatures.FailingInterface2.name"]], "name (armi.tests.test_mpifeatures.failinginterface3 attribute)": [[381, "armi.tests.test_mpiFeatures.FailingInterface3.name"]], "test_basicoperatormpi() (armi.tests.test_mpifeatures.mpioperatortests method)": [[381, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_basicOperatorMPI"]], "test_cleanpathmpi() (armi.tests.test_mpifeatures.mpipathtoolstests method)": [[381, "armi.tests.test_mpiFeatures.MpiPathToolsTests.test_cleanPathMpi"]], "test_compileresults() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[381, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_compileResults"]], "test_distributeinterfaces() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[381, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeInterfaces"]], "test_distributereactor() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[381, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeReactor"]], "test_distributesettings() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[381, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeSettings"]], "test_distributestate() (armi.tests.test_mpifeatures.mpidistributestatetests method)": [[381, "armi.tests.test_mpiFeatures.MpiDistributeStateTests.test_distributeState"]], "test_primarycritical() (armi.tests.test_mpifeatures.mpioperatortests method)": [[381, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryCritical"]], "test_primaryexception() (armi.tests.test_mpifeatures.mpioperatortests method)": [[381, "armi.tests.test_mpiFeatures.MpiOperatorTests.test_primaryException"]], "workeroperate() (armi.tests.test_mpifeatures.failinginterface3 method)": [[381, "armi.tests.test_mpiFeatures.FailingInterface3.workerOperate"]], "notebooktests (class in armi.tests.test_notebooks)": [[382, "armi.tests.test_notebooks.NotebookTests"]], "armi.tests.test_notebooks": [[382, "module-armi.tests.test_notebooks"]], "runnotebook() (in module armi.tests.test_notebooks)": [[382, "armi.tests.test_notebooks.runNotebook"]], "test_rundatamodel() (armi.tests.test_notebooks.notebooktests method)": [[382, "armi.tests.test_notebooks.NotebookTests.test_runDataModel"]], "test_runparamsweep() (armi.tests.test_notebooks.notebooktests method)": [[382, "armi.tests.test_notebooks.NotebookTests.test_runParamSweep"]], "testplugin (class in armi.tests.test_plugins)": [[383, "armi.tests.test_plugins.TestPlugin"]], "armi.tests.test_plugins": [[383, "module-armi.tests.test_plugins"]], "plugin (armi.tests.test_plugins.testplugin attribute)": [[383, "armi.tests.test_plugins.TestPlugin.plugin"]], "test_defineblueprintssections() (armi.tests.test_plugins.testplugin method)": [[383, "armi.tests.test_plugins.TestPlugin.test_defineBlueprintsSections"]], "test_exposeinterfaces() (armi.tests.test_plugins.testplugin method)": [[383, "armi.tests.test_plugins.TestPlugin.test_exposeInterfaces"]], "testrunlog (class in armi.tests.test_runlog)": [[384, "armi.tests.test_runLog.TestRunLog"]], "testrunlogger (class in armi.tests.test_runlog)": [[384, "armi.tests.test_runLog.TestRunLogger"]], "armi.tests.test_runlog": [[384, "module-armi.tests.test_runLog"]], "test_allowstopduplicates() (armi.tests.test_runlog.testrunlogger method)": [[384, "armi.tests.test_runLog.TestRunLogger.test_allowStopDuplicates"]], "test_callingstartlogmultipletimes() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_callingStartLogMultipleTimes"]], "test_closelogging() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_closeLogging"]], "test_concatenatelogs() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_concatenateLogs"]], "test_createlogdir() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_createLogDir"]], "test_getduplicatesfilter() (armi.tests.test_runlog.testrunlogger method)": [[384, "armi.tests.test_runLog.TestRunLogger.test_getDuplicatesFilter"]], "test_getwhitespace() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_getWhiteSpace"]], "test_invalidsetverbositybystring() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_invalidSetVerbosityByString"]], "test_parentrunlogging() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_parentRunLogging"]], "test_setverbosity() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_setVerbosity"]], "test_setverbositybeforestartlog() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_setVerbosityBeforeStartLog"]], "test_setverbosityfrominteger() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromInteger"]], "test_setverbosityfromstring() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_setVerbosityFromString"]], "test_verbosityoutofrange() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_verbosityOutOfRange"]], "test_warningreport() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_warningReport"]], "test_warningreportinvalid() (armi.tests.test_runlog.testrunlog method)": [[384, "armi.tests.test_runLog.TestRunLog.test_warningReportInvalid"]], "test_write() (armi.tests.test_runlog.testrunlogger method)": [[384, "armi.tests.test_runLog.TestRunLogger.test_write"]], "test_comparefiles (class in armi.tests.test_tests)": [[385, "armi.tests.test_tests.Test_CompareFiles"]], "armi.tests.test_tests": [[385, "module-armi.tests.test_tests"]], "test_comparefileline() (armi.tests.test_tests.test_comparefiles method)": [[385, "armi.tests.test_tests.Test_CompareFiles.test_compareFileLine"]], "testuserplugins (class in armi.tests.test_user_plugins)": [[386, "armi.tests.test_user_plugins.TestUserPlugins"]], "upinterface (class in armi.tests.test_user_plugins)": [[386, "armi.tests.test_user_plugins.UpInterface"]], "userpluginbaddefineparameterrenames (class in armi.tests.test_user_plugins)": [[386, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames"]], "userpluginbaddefinessettings (class in armi.tests.test_user_plugins)": [[386, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings"]], "userpluginflags (class in armi.tests.test_user_plugins)": [[386, "armi.tests.test_user_plugins.UserPluginFlags"]], "userpluginflags2 (class in armi.tests.test_user_plugins)": [[386, "armi.tests.test_user_plugins.UserPluginFlags2"]], "userpluginflags3 (class in armi.tests.test_user_plugins)": [[386, "armi.tests.test_user_plugins.UserPluginFlags3"]], "userpluginonprocesscoreloading (class in armi.tests.test_user_plugins)": [[386, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading"]], "userpluginwithinterface (class in armi.tests.test_user_plugins)": [[386, "armi.tests.test_user_plugins.UserPluginWithInterface"]], "armi.tests.test_user_plugins": [[386, "module-armi.tests.test_user_plugins"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags static method)": [[386, "armi.tests.test_user_plugins.UserPluginFlags.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags2 static method)": [[386, "armi.tests.test_user_plugins.UserPluginFlags2.defineFlags"]], "defineflags() (armi.tests.test_user_plugins.userpluginflags3 static method)": [[386, "armi.tests.test_user_plugins.UserPluginFlags3.defineFlags"]], "defineparameterrenames() (armi.tests.test_user_plugins.userpluginbaddefineparameterrenames static method)": [[386, "armi.tests.test_user_plugins.UserPluginBadDefineParameterRenames.defineParameterRenames"]], "definesettings() (armi.tests.test_user_plugins.userpluginbaddefinessettings static method)": [[386, "armi.tests.test_user_plugins.UserPluginBadDefinesSettings.defineSettings"]], "exposeinterfaces() (armi.tests.test_user_plugins.userpluginwithinterface static method)": [[386, "armi.tests.test_user_plugins.UserPluginWithInterface.exposeInterfaces"]], "interacteverynode() (armi.tests.test_user_plugins.upinterface method)": [[386, "armi.tests.test_user_plugins.UpInterface.interactEveryNode"]], "name (armi.tests.test_user_plugins.upinterface attribute)": [[386, "armi.tests.test_user_plugins.UpInterface.name"]], "onprocesscoreloading() (armi.tests.test_user_plugins.userpluginonprocesscoreloading static method)": [[386, "armi.tests.test_user_plugins.UserPluginOnProcessCoreLoading.onProcessCoreLoading"]], "test_registerrepeateduserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[386, "armi.tests.test_user_plugins.TestUserPlugins.test_registerRepeatedUserPlugins"]], "test_registeruserplugins() (armi.tests.test_user_plugins.testuserplugins method)": [[386, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPlugins"]], "test_registeruserpluginsabspath() (armi.tests.test_user_plugins.testuserplugins method)": [[386, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsAbsPath"]], "test_registeruserpluginsfromsettings() (armi.tests.test_user_plugins.testuserplugins method)": [[386, "armi.tests.test_user_plugins.TestUserPlugins.test_registerUserPluginsFromSettings"]], "test_userpluginonprocesscoreloading() (armi.tests.test_user_plugins.testuserplugins method)": [[386, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginOnProcessCoreLoading"]], "test_userpluginwithinterfaces() (armi.tests.test_user_plugins.testuserplugins method)": [[386, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginWithInterfaces"]], "test_userpluginsflags() (armi.tests.test_user_plugins.testuserplugins method)": [[386, "armi.tests.test_user_plugins.TestUserPlugins.test_userPluginsFlags"]], "test_validateuserpluginlimitations() (armi.tests.test_user_plugins.testuserplugins method)": [[386, "armi.tests.test_user_plugins.TestUserPlugins.test_validateUserPluginLimitations"]], "mergeabledict (class in armi.utils)": [[387, "armi.utils.MergeableDict"]], "mypickler (class in armi.utils)": [[387, "armi.utils.MyPickler"]], "armi.utils": [[387, "module-armi.utils"]], "capstrlen() (in module armi.utils)": [[387, "armi.utils.capStrLen"]], "classesinhierarchy() (in module armi.utils)": [[387, "armi.utils.classesInHierarchy"]], "copywithoutblocking() (in module armi.utils)": [[387, "armi.utils.copyWithoutBlocking"]], "createformattedstrwithdelimiter() (in module armi.utils)": [[387, "armi.utils.createFormattedStrWithDelimiter"]], "dotestpickleonallcontents2() (in module armi.utils)": [[387, "armi.utils.doTestPickleOnAllContents2"]], "getavailabilityfactors() (in module armi.utils)": [[387, "armi.utils.getAvailabilityFactors"]], "getburnsteps() (in module armi.utils)": [[387, "armi.utils.getBurnSteps"]], "getcumulativenodenum() (in module armi.utils)": [[387, "armi.utils.getCumulativeNodeNum"]], "getcyclelengths() (in module armi.utils)": [[387, "armi.utils.getCycleLengths"]], "getcyclenames() (in module armi.utils)": [[387, "armi.utils.getCycleNames"]], "getcyclenodefromcumulativenode() (in module armi.utils)": [[387, "armi.utils.getCycleNodeFromCumulativeNode"]], "getcyclenodefromcumulativestep() (in module armi.utils)": [[387, "armi.utils.getCycleNodeFromCumulativeStep"]], "getfilesha1hash() (in module armi.utils)": [[387, "armi.utils.getFileSHA1Hash"]], "getmaxburnsteps() (in module armi.utils)": [[387, "armi.utils.getMaxBurnSteps"]], "getnodespercycle() (in module armi.utils)": [[387, "armi.utils.getNodesPerCycle"]], "getpowerfractions() (in module armi.utils)": [[387, "armi.utils.getPowerFractions"]], "getprevioustimenode() (in module armi.utils)": [[387, "armi.utils.getPreviousTimeNode"]], "getsteplengths() (in module armi.utils)": [[387, "armi.utils.getStepLengths"]], "hasburnup() (in module armi.utils)": [[387, "armi.utils.hasBurnup"]], "list2str() (in module armi.utils)": [[387, "armi.utils.list2str"]], "merge() (armi.utils.mergeabledict method)": [[387, "armi.utils.MergeableDict.merge"]], "plotmatrix() (in module armi.utils)": [[387, "armi.utils.plotMatrix"]], "prependtolist() (in module armi.utils)": [[387, "armi.utils.prependToList"]], "safecopy() (in module armi.utils)": [[387, "armi.utils.safeCopy"]], "save() (armi.utils.mypickler method)": [[387, "armi.utils.MyPickler.save"]], "slantsplit() (in module armi.utils)": [[387, "armi.utils.slantSplit"]], "trypickleonallcontents() (in module armi.utils)": [[387, "armi.utils.tryPickleOnAllContents"]], "trypickleonallcontents3() (in module armi.utils)": [[387, "armi.utils.tryPickleOnAllContents3"]], "username() (in module armi.utils)": [[387, "armi.utils.userName"]], "asciimap (class in armi.utils.asciimaps)": [[388, "armi.utils.asciimaps.AsciiMap"]], "asciimapcartesian (class in armi.utils.asciimaps)": [[388, "armi.utils.asciimaps.AsciiMapCartesian"]], "asciimaphexfullflatsup (class in armi.utils.asciimaps)": [[388, "armi.utils.asciimaps.AsciiMapHexFullFlatsUp"]], "asciimaphexfulltipsup (class in armi.utils.asciimaps)": [[388, "armi.utils.asciimaps.AsciiMapHexFullTipsUp"]], "asciimaphexthirdflatsup (class in armi.utils.asciimaps)": [[388, "armi.utils.asciimaps.AsciiMapHexThirdFlatsUp"]], "armi.utils.asciimaps": [[388, "module-armi.utils.asciimaps"]], "asciilabelbyindices (armi.utils.asciimaps.asciimap attribute)": [[388, "armi.utils.asciimaps.AsciiMap.asciiLabelByIndices"]], "asciilines (armi.utils.asciimaps.asciimap attribute)": [[388, "armi.utils.asciimaps.AsciiMap.asciiLines"]], "asciimapfromgeomanddomain() (in module armi.utils.asciimaps)": [[388, "armi.utils.asciimaps.asciiMapFromGeomAndDomain"]], "asciioffsets (armi.utils.asciimaps.asciimap attribute)": [[388, "armi.utils.asciimaps.AsciiMap.asciiOffsets"]], "fromreactor() (armi.utils.asciimaps.asciimap static method)": [[388, "armi.utils.asciimaps.AsciiMap.fromReactor"]], "gridcontentstoascii() (armi.utils.asciimaps.asciimap method)": [[388, "armi.utils.asciimaps.AsciiMap.gridContentsToAscii"]], "items() (armi.utils.asciimaps.asciimap method)": [[388, "armi.utils.asciimaps.AsciiMap.items"]], "keys() (armi.utils.asciimaps.asciimap method)": [[388, "armi.utils.asciimaps.AsciiMap.keys"]], "readascii() (armi.utils.asciimaps.asciimap method)": [[388, "armi.utils.asciimaps.AsciiMap.readAscii"]], "writeascii() (armi.utils.asciimaps.asciimap method)": [[388, "armi.utils.asciimaps.AsciiMap.writeAscii"]], "mastertimer (class in armi.utils.codetiming)": [[389, "armi.utils.codeTiming.MasterTimer"]], "armi.utils.codetiming": [[389, "module-armi.utils.codeTiming"]], "endtimer() (armi.utils.codetiming.mastertimer static method)": [[389, "armi.utils.codeTiming.MasterTimer.endTimer"]], "getactivetimers() (armi.utils.codetiming.mastertimer static method)": [[389, "armi.utils.codeTiming.MasterTimer.getActiveTimers"]], "getmastertimer() (armi.utils.codetiming.mastertimer static method)": [[389, "armi.utils.codeTiming.MasterTimer.getMasterTimer"]], "getmastertimer() (in module armi.utils.codetiming)": [[389, "armi.utils.codeTiming.getMasterTimer"]], "gettimer() (armi.utils.codetiming.mastertimer static method)": [[389, "armi.utils.codeTiming.MasterTimer.getTimer"]], "report() (armi.utils.codetiming.mastertimer static method)": [[389, "armi.utils.codeTiming.MasterTimer.report"]], "startall() (armi.utils.codetiming.mastertimer static method)": [[389, "armi.utils.codeTiming.MasterTimer.startAll"]], "starttimer() (armi.utils.codetiming.mastertimer static method)": [[389, "armi.utils.codeTiming.MasterTimer.startTimer"]], "stopall() (armi.utils.codetiming.mastertimer static method)": [[389, "armi.utils.codeTiming.MasterTimer.stopAll"]], "time() (armi.utils.codetiming.mastertimer static method)": [[389, "armi.utils.codeTiming.MasterTimer.time"]], "timed() (in module armi.utils.codetiming)": [[389, "armi.utils.codeTiming.timed"]], "timeline() (armi.utils.codetiming.mastertimer static method)": [[389, "armi.utils.codeTiming.MasterTimer.timeline"]], "inputerror": [[390, "armi.utils.customExceptions.InputError"]], "invalidsettingsfileerror": [[390, "armi.utils.customExceptions.InvalidSettingsFileError"]], "invalidsettingsstopprocess": [[390, "armi.utils.customExceptions.InvalidSettingsStopProcess"]], "nonexistentsetting": [[390, "armi.utils.customExceptions.NonexistentSetting"]], "nonexistentsettingsfileerror": [[390, "armi.utils.customExceptions.NonexistentSettingsFileError"]], "settingexception": [[390, "armi.utils.customExceptions.SettingException"]], "armi.utils.customexceptions": [[390, "module-armi.utils.customExceptions"]], "important() (in module armi.utils.customexceptions)": [[390, "armi.utils.customExceptions.important"]], "info() (in module armi.utils.customexceptions)": [[390, "armi.utils.customExceptions.info"]], "warn() (in module armi.utils.customexceptions)": [[390, "armi.utils.customExceptions.warn"]], "warn_when_root() (in module armi.utils.customexceptions)": [[390, "armi.utils.customExceptions.warn_when_root"]], "applyisotopicsmix() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.applyIsotopicsMix"]], "armi.utils.densitytools": [[391, "module-armi.utils.densityTools"]], "calculatemassdensity() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.calculateMassDensity"]], "calculatenumberdensity() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.calculateNumberDensity"]], "expandelementalmassfracstonuclides() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.expandElementalMassFracsToNuclides"]], "expandelementalnuclidemassfracs() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.expandElementalNuclideMassFracs"]], "filternuclidelist() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.filterNuclideList"]], "formatmaterialcard() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.formatMaterialCard"]], "getchemicals() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.getChemicals"]], "getmassfractions() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.getMassFractions"]], "getmassingrams() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.getMassInGrams"]], "getndensfrommasses() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.getNDensFromMasses"]], "normalizenuclidelist() (in module armi.utils.densitytools)": [[391, "armi.utils.densityTools.normalizeNuclideList"]], "directorychanger (class in armi.utils.directorychangers)": [[392, "armi.utils.directoryChangers.DirectoryChanger"]], "forcedcreationdirectorychanger (class in armi.utils.directorychangers)": [[392, "armi.utils.directoryChangers.ForcedCreationDirectoryChanger"]], "getrandomdirectory() (armi.utils.directorychangers.temporarydirectorychanger class method)": [[392, "armi.utils.directoryChangers.TemporaryDirectoryChanger.GetRandomDirectory"]], "temporarydirectorychanger (class in armi.utils.directorychangers)": [[392, "armi.utils.directoryChangers.TemporaryDirectoryChanger"]], "armi.utils.directorychangers": [[392, "module-armi.utils.directoryChangers"]], "close() (armi.utils.directorychangers.directorychanger method)": [[392, "armi.utils.directoryChangers.DirectoryChanger.close"]], "directorychangerfactory() (in module armi.utils.directorychangers)": [[392, "armi.utils.directoryChangers.directoryChangerFactory"]], "movefiles() (armi.utils.directorychangers.directorychanger method)": [[392, "armi.utils.directoryChangers.DirectoryChanger.moveFiles"]], "open() (armi.utils.directorychangers.directorychanger method)": [[392, "armi.utils.directoryChangers.DirectoryChanger.open"]], "retrievefiles() (armi.utils.directorychangers.directorychanger method)": [[392, "armi.utils.directoryChangers.DirectoryChanger.retrieveFiles"]], "mpidirectorychanger (class in armi.utils.directorychangersmpi)": [[393, "armi.utils.directoryChangersMpi.MpiDirectoryChanger"]], "armi.utils.directorychangersmpi": [[393, "module-armi.utils.directoryChangersMpi"]], "close() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[393, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.close"]], "open() (armi.utils.directorychangersmpi.mpidirectorychanger method)": [[393, "armi.utils.directoryChangersMpi.MpiDirectoryChanger.open"]], "execdirective (class in armi.utils.dochelpers)": [[394, "armi.utils.dochelpers.ExecDirective"]], "pyreverse (class in armi.utils.dochelpers)": [[394, "armi.utils.dochelpers.PyReverse"]], "armi.utils.dochelpers": [[394, "module-armi.utils.dochelpers"]], "create_figure() (in module armi.utils.dochelpers)": [[394, "armi.utils.dochelpers.create_figure"]], "create_table() (in module armi.utils.dochelpers)": [[394, "armi.utils.dochelpers.create_table"]], "generateparamtable() (in module armi.utils.dochelpers)": [[394, "armi.utils.dochelpers.generateParamTable"]], "generatepluginsettingstable() (in module armi.utils.dochelpers)": [[394, "armi.utils.dochelpers.generatePluginSettingsTable"]], "has_content (armi.utils.dochelpers.execdirective attribute)": [[394, "armi.utils.dochelpers.ExecDirective.has_content"]], "has_content (armi.utils.dochelpers.pyreverse attribute)": [[394, "armi.utils.dochelpers.PyReverse.has_content"]], "option_spec (armi.utils.dochelpers.pyreverse attribute)": [[394, "armi.utils.dochelpers.PyReverse.option_spec"]], "optional_arguments (armi.utils.dochelpers.pyreverse attribute)": [[394, "armi.utils.dochelpers.PyReverse.optional_arguments"]], "required_arguments (armi.utils.dochelpers.pyreverse attribute)": [[394, "armi.utils.dochelpers.PyReverse.required_arguments"]], "run() (armi.utils.dochelpers.execdirective method)": [[394, "armi.utils.dochelpers.ExecDirective.run"]], "run() (armi.utils.dochelpers.pyreverse method)": [[394, "armi.utils.dochelpers.PyReverse.run"]], "armi.utils.dynamicimporter": [[395, "module-armi.utils.dynamicImporter"]], "getentirefamilytree() (in module armi.utils.dynamicimporter)": [[395, "armi.utils.dynamicImporter.getEntireFamilyTree"]], "flag (class in armi.utils.flags)": [[396, "armi.utils.flags.Flag"]], "armi.utils.flags": [[396, "module-armi.utils.flags"]], "auto (class in armi.utils.flags)": [[396, "armi.utils.flags.auto"]], "extend() (armi.utils.flags.flag class method)": [[396, "armi.utils.flags.Flag.extend"]], "fields() (armi.utils.flags.flag class method)": [[396, "armi.utils.flags.Flag.fields"]], "from_bytes() (armi.utils.flags.flag class method)": [[396, "armi.utils.flags.Flag.from_bytes"]], "sortedfields() (armi.utils.flags.flag class method)": [[396, "armi.utils.flags.Flag.sortedFields"]], "to_bytes() (armi.utils.flags.flag method)": [[396, "armi.utils.flags.Flag.to_bytes"]], "width() (armi.utils.flags.flag class method)": [[396, "armi.utils.flags.Flag.width"]], "area() (in module armi.utils.hexagon)": [[398, "armi.utils.hexagon.area"]], "armi.utils.hexagon": [[398, "module-armi.utils.hexagon"]], "corners() (in module armi.utils.hexagon)": [[398, "armi.utils.hexagon.corners"]], "numpositionsinring() (in module armi.utils.hexagon)": [[398, "armi.utils.hexagon.numPositionsInRing"]], "numringstoholdnumcells() (in module armi.utils.hexagon)": [[398, "armi.utils.hexagon.numRingsToHoldNumCells"]], "pitch() (in module armi.utils.hexagon)": [[398, "armi.utils.hexagon.pitch"]], "side() (in module armi.utils.hexagon)": [[398, "armi.utils.hexagon.side"]], "sequence (class in armi.utils.iterables)": [[399, "armi.utils.iterables.Sequence"]], "append() (armi.utils.iterables.sequence method)": [[399, "armi.utils.iterables.Sequence.append"]], "armi.utils.iterables": [[399, "module-armi.utils.iterables"]], "chunk() (in module armi.utils.iterables)": [[399, "armi.utils.iterables.chunk"]], "copy() (armi.utils.iterables.sequence method)": [[399, "armi.utils.iterables.Sequence.copy"]], "drop() (armi.utils.iterables.sequence method)": [[399, "armi.utils.iterables.Sequence.drop"]], "extend() (armi.utils.iterables.sequence method)": [[399, "armi.utils.iterables.Sequence.extend"]], "flatten() (in module armi.utils.iterables)": [[399, "armi.utils.iterables.flatten"]], "packbinarystrings() (in module armi.utils.iterables)": [[399, "armi.utils.iterables.packBinaryStrings"]], "packhexstrings() (in module armi.utils.iterables)": [[399, "armi.utils.iterables.packHexStrings"]], "select() (armi.utils.iterables.sequence method)": [[399, "armi.utils.iterables.Sequence.select"]], "split() (in module armi.utils.iterables)": [[399, "armi.utils.iterables.split"]], "transform() (armi.utils.iterables.sequence method)": [[399, "armi.utils.iterables.Sequence.transform"]], "unpackbinarystrings() (in module armi.utils.iterables)": [[399, "armi.utils.iterables.unpackBinaryStrings"]], "unpackhexstrings() (in module armi.utils.iterables)": [[399, "armi.utils.iterables.unpackHexStrings"]], "armi.utils.mathematics": [[400, "module-armi.utils.mathematics"]], "average1dwithintolerance() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.average1DWithinTolerance"]], "converttoslice() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.convertToSlice"]], "efmt() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.efmt"]], "expandrepeatedfloats() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.expandRepeatedFloats"]], "findclosest() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.findClosest"]], "findnearestvalue() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.findNearestValue"]], "findnearestvalueandindex() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.findNearestValueAndIndex"]], "fixthreedigitexp() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.fixThreeDigitExp"]], "getfloat() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.getFloat"]], "getstepsfromvalues() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.getStepsFromValues"]], "ismonotonic() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.isMonotonic"]], "linearinterpolation() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.linearInterpolation"]], "minimizescalarfunc() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.minimizeScalarFunc"]], "newtonsmethod() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.newtonsMethod"]], "parabolafrompoints() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.parabolaFromPoints"]], "parabolicinterpolation() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.parabolicInterpolation"]], "relerr() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.relErr"]], "resamplestepwise() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.resampleStepwise"]], "rotatexy() (in module armi.utils.mathematics)": [[400, "armi.utils.mathematics.rotateXY"]], "armi.utils.outputcache": [[401, "module-armi.utils.outputCache"]], "cachecall() (in module armi.utils.outputcache)": [[401, "armi.utils.outputCache.cacheCall"]], "deletecache() (in module armi.utils.outputcache)": [[401, "armi.utils.outputCache.deleteCache"]], "retrieveoutput() (in module armi.utils.outputcache)": [[401, "armi.utils.outputCache.retrieveOutput"]], "store() (in module armi.utils.outputcache)": [[401, "armi.utils.outputCache.store"]], "armi.utils.parsing": [[402, "module-armi.utils.parsing"]], "datetimefromstr() (in module armi.utils.parsing)": [[402, "armi.utils.parsing.datetimeFromStr"]], "parsevalue() (in module armi.utils.parsing)": [[402, "armi.utils.parsing.parseValue"]], "tryliteraleval() (in module armi.utils.parsing)": [[402, "armi.utils.parsing.tryLiteralEval"]], "armi.utils.pathtools": [[403, "module-armi.utils.pathTools"]], "armiabspath() (in module armi.utils.pathtools)": [[403, "armi.utils.pathTools.armiAbsPath"]], "cleanpath() (in module armi.utils.pathtools)": [[403, "armi.utils.pathTools.cleanPath"]], "copyorwarn() (in module armi.utils.pathtools)": [[403, "armi.utils.pathTools.copyOrWarn"]], "importcustompymodule() (in module armi.utils.pathtools)": [[403, "armi.utils.pathTools.importCustomPyModule"]], "isaccessible() (in module armi.utils.pathtools)": [[403, "armi.utils.pathTools.isAccessible"]], "isfilepathnewer() (in module armi.utils.pathtools)": [[403, "armi.utils.pathTools.isFilePathNewer"]], "moduleandattributeexist() (in module armi.utils.pathtools)": [[403, "armi.utils.pathTools.moduleAndAttributeExist"]], "separatemoduleandattribute() (in module armi.utils.pathtools)": [[403, "armi.utils.pathTools.separateModuleAndAttribute"]], "depthslider (class in armi.utils.plotting)": [[404, "armi.utils.plotting.DepthSlider"]], "armi.utils.plotting": [[404, "module-armi.utils.plotting"]], "close() (in module armi.utils.plotting)": [[404, "armi.utils.plotting.close"]], "colorgenerator() (in module armi.utils.plotting)": [[404, "armi.utils.plotting.colorGenerator"]], "makehistogram() (in module armi.utils.plotting)": [[404, "armi.utils.plotting.makeHistogram"]], "next() (armi.utils.plotting.depthslider method)": [[404, "armi.utils.plotting.DepthSlider.next"]], "plotassemblytypes() (in module armi.utils.plotting)": [[404, "armi.utils.plotting.plotAssemblyTypes"]], "plotblockdepthmap() (in module armi.utils.plotting)": [[404, "armi.utils.plotting.plotBlockDepthMap"]], "plotblockdiagram() (in module armi.utils.plotting)": [[404, "armi.utils.plotting.plotBlockDiagram"]], "plotblockflux() (in module armi.utils.plotting)": [[404, "armi.utils.plotting.plotBlockFlux"]], "plotfacemap() (in module armi.utils.plotting)": [[404, "armi.utils.plotting.plotFaceMap"]], "plotnucxs() (in module armi.utils.plotting)": [[404, "armi.utils.plotting.plotNucXs"]], "plottriangleflux() (in module armi.utils.plotting)": [[404, "armi.utils.plotting.plotTriangleFlux"]], "previous() (armi.utils.plotting.depthslider method)": [[404, "armi.utils.plotting.DepthSlider.previous"]], "set_val() (armi.utils.plotting.depthslider method)": [[404, "armi.utils.plotting.DepthSlider.set_val"]], "updatepagedepthcolor() (armi.utils.plotting.depthslider method)": [[404, "armi.utils.plotting.DepthSlider.updatePageDepthColor"]], "immutablepropertyerror": [[405, "armi.utils.properties.ImmutablePropertyError"]], "areequal() (in module armi.utils.properties)": [[405, "armi.utils.properties.areEqual"]], "armi.utils.properties": [[405, "module-armi.utils.properties"]], "createimmutableproperty() (in module armi.utils.properties)": [[405, "armi.utils.properties.createImmutableProperty"]], "lockimmutableproperties() (in module armi.utils.properties)": [[405, "armi.utils.properties.lockImmutableProperties"]], "numpyhackforequal() (in module armi.utils.properties)": [[405, "armi.utils.properties.numpyHackForEqual"]], "unlockimmutableproperties() (in module armi.utils.properties)": [[405, "armi.utils.properties.unlockImmutableProperties"]], "armi.utils.reportplotting": [[406, "module-armi.utils.reportPlotting"]], "buvstime() (in module armi.utils.reportplotting)": [[406, "armi.utils.reportPlotting.buVsTime"]], "createplotmetadata() (in module armi.utils.reportplotting)": [[406, "armi.utils.reportPlotting.createPlotMetaData"]], "keffvstime() (in module armi.utils.reportplotting)": [[406, "armi.utils.reportPlotting.keffVsTime"]], "movesvscycle() (in module armi.utils.reportplotting)": [[406, "armi.utils.reportPlotting.movesVsCycle"]], "plotaxialprofile() (in module armi.utils.reportplotting)": [[406, "armi.utils.reportPlotting.plotAxialProfile"]], "plotcoreoverviewradar() (in module armi.utils.reportplotting)": [[406, "armi.utils.reportPlotting.plotCoreOverviewRadar"]], "plotreactorperformance() (in module armi.utils.reportplotting)": [[406, "armi.utils.reportPlotting.plotReactorPerformance"]], "valuevstime() (in module armi.utils.reportplotting)": [[406, "armi.utils.reportPlotting.valueVsTime"]], "xshistoryvstime() (in module armi.utils.reportplotting)": [[406, "armi.utils.reportPlotting.xsHistoryVsTime"]], "armi.utils.tests": [[407, "module-armi.utils.tests"]], "testasciimaps (class in armi.utils.tests.test_asciimaps)": [[408, "armi.utils.tests.test_asciimaps.TestAsciiMaps"]], "armi.utils.tests.test_asciimaps": [[408, "module-armi.utils.tests.test_asciimaps"]], "test_cartesian() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[408, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_cartesian"]], "test_flathexbases() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[408, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_flatHexBases"]], "test_hexfull() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[408, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFull"]], "test_hexfullflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[408, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexFullFlat"]], "test_hexsmallflat() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[408, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexSmallFlat"]], "test_hexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[408, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexThird"]], "test_hexwithemptyrow() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[408, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithEmptyRow"]], "test_hexwithholes() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[408, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_hexWithHoles"]], "test_troublesomehexthird() (armi.utils.tests.test_asciimaps.testasciimaps method)": [[408, "armi.utils.tests.test_asciimaps.TestAsciiMaps.test_troublesomeHexThird"]], "codetimingtest (class in armi.utils.tests.test_codetiming)": [[409, "armi.utils.tests.test_codeTiming.CodeTimingTest"]], "armi.utils.tests.test_codetiming": [[409, "module-armi.utils.tests.test_codeTiming"]], "test_alternate_usages() (armi.utils.tests.test_codetiming.codetimingtest method)": [[409, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_alternate_usages"]], "test_master() (armi.utils.tests.test_codetiming.codetimingtest method)": [[409, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_master"]], "test_messy_starts_and_stops() (armi.utils.tests.test_codetiming.codetimingtest method)": [[409, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_messy_starts_and_stops"]], "test_method_definitions() (armi.utils.tests.test_codetiming.codetimingtest method)": [[409, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_method_definitions"]], "test_property_access() (armi.utils.tests.test_codetiming.codetimingtest method)": [[409, "armi.utils.tests.test_codeTiming.CodeTimingTest.test_property_access"]], "customexceptiontests (class in armi.utils.tests.test_custom_exceptions)": [[410, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests"]], "armi.utils.tests.test_custom_exceptions": [[410, "module-armi.utils.tests.test_custom_exceptions"]], "exampleimportantmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[410, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleImportantMessage"]], "exampleinfomessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[410, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleInfoMessage"]], "examplewarnmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[410, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnMessage"]], "examplewarnwhenrootmessage() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[410, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.exampleWarnWhenRootMessage"]], "test_important_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[410, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_important_decorator"]], "test_info_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[410, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_info_decorator"]], "test_warn_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[410, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_decorator"]], "test_warn_when_root_decorator() (armi.utils.tests.test_custom_exceptions.customexceptiontests method)": [[410, "armi.utils.tests.test_custom_exceptions.CustomExceptionTests.test_warn_when_root_decorator"]], "test_densitytools (class in armi.utils.tests.test_densitytools)": [[411, "armi.utils.tests.test_densityTools.Test_densityTools"]], "armi.utils.tests.test_densitytools": [[411, "module-armi.utils.tests.test_densityTools"]], "test_applyisotopicsmix() (armi.utils.tests.test_densitytools.test_densitytools method)": [[411, "armi.utils.tests.test_densityTools.Test_densityTools.test_applyIsotopicsMix"]], "test_calculatenumberdensity() (armi.utils.tests.test_densitytools.test_densitytools method)": [[411, "armi.utils.tests.test_densityTools.Test_densityTools.test_calculateNumberDensity"]], "test_expandelement() (armi.utils.tests.test_densitytools.test_densitytools method)": [[411, "armi.utils.tests.test_densityTools.Test_densityTools.test_expandElement"]], "test_expandelementalmassfracstonuclides() (armi.utils.tests.test_densitytools.test_densitytools method)": [[411, "armi.utils.tests.test_densityTools.Test_densityTools.test_expandElementalMassFracsToNuclides"]], "test_expandelementalzeromassfrac() (armi.utils.tests.test_densitytools.test_densitytools method)": [[411, "armi.utils.tests.test_densityTools.Test_densityTools.test_expandElementalZeroMassFrac"]], "test_formatmaterialcard() (armi.utils.tests.test_densitytools.test_densitytools method)": [[411, "armi.utils.tests.test_densityTools.Test_densityTools.test_formatMaterialCard"]], "test_getchemicals() (armi.utils.tests.test_densitytools.test_densitytools method)": [[411, "armi.utils.tests.test_densityTools.Test_densityTools.test_getChemicals"]], "test_getmassfractions() (armi.utils.tests.test_densitytools.test_densitytools method)": [[411, "armi.utils.tests.test_densityTools.Test_densityTools.test_getMassFractions"]], "test_getmassingrams() (armi.utils.tests.test_densitytools.test_densitytools method)": [[411, "armi.utils.tests.test_densityTools.Test_densityTools.test_getMassInGrams"]], "test_normalizenuclidelist() (armi.utils.tests.test_densitytools.test_densitytools method)": [[411, "armi.utils.tests.test_densityTools.Test_densityTools.test_normalizeNuclideList"]], "expectedexception": [[412, "armi.utils.tests.test_directoryChangers.ExpectedException"]], "testdirectorychangers (class in armi.utils.tests.test_directorychangers)": [[412, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers"]], "armi.utils.tests.test_directorychangers": [[412, "module-armi.utils.tests.test_directoryChangers"]], "test_change_to_nonexisting_fails() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[412, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_fails"]], "test_change_to_nonexisting_works_forced() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[412, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_change_to_nonexisting_works_forced"]], "test_exception() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[412, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception"]], "test_exception_disabled() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[412, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_exception_disabled"]], "test_file_retrieval() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[412, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval"]], "test_file_retrieval_missing_file() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[412, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_file_retrieval_missing_file"]], "test_mpiaction() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[412, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiAction"]], "test_mpiactionfailsonnonexistentpath() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[412, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_mpiActionFailsOnNonexistentPath"]], "test_temporary_cleans() (armi.utils.tests.test_directorychangers.testdirectorychangers method)": [[412, "armi.utils.tests.test_directoryChangers.TestDirectoryChangers.test_temporary_cleans"]], "testdochelpers (class in armi.utils.tests.test_dochelpers)": [[413, "armi.utils.tests.test_dochelpers.TestDocHelpers"]], "armi.utils.tests.test_dochelpers": [[413, "module-armi.utils.tests.test_dochelpers"]], "test_createfigure() (armi.utils.tests.test_dochelpers.testdochelpers method)": [[413, "armi.utils.tests.test_dochelpers.TestDocHelpers.test_createFigure"]], "test_createtable() (armi.utils.tests.test_dochelpers.testdochelpers method)": [[413, "armi.utils.tests.test_dochelpers.TestDocHelpers.test_createTable"]], "test_paramtable() (armi.utils.tests.test_dochelpers.testdochelpers method)": [[413, "armi.utils.tests.test_dochelpers.TestDocHelpers.test_paramTable"]], "test_settingstable() (armi.utils.tests.test_dochelpers.testdochelpers method)": [[413, "armi.utils.tests.test_dochelpers.TestDocHelpers.test_settingsTable"]], "bar (armi.utils.tests.test_flags.exampleflag attribute)": [[414, "armi.utils.tests.test_flags.ExampleFlag.BAR"]], "baz (armi.utils.tests.test_flags.exampleflag attribute)": [[414, "armi.utils.tests.test_flags.ExampleFlag.BAZ"]], "exampleflag (class in armi.utils.tests.test_flags)": [[414, "armi.utils.tests.test_flags.ExampleFlag"]], "foo (armi.utils.tests.test_flags.exampleflag attribute)": [[414, "armi.utils.tests.test_flags.ExampleFlag.FOO"]], "testflag (class in armi.utils.tests.test_flags)": [[414, "armi.utils.tests.test_flags.TestFlag"]], "armi.utils.tests.test_flags": [[414, "module-armi.utils.tests.test_flags"]], "test_auto() (armi.utils.tests.test_flags.testflag method)": [[414, "armi.utils.tests.test_flags.TestFlag.test_auto"]], "test_bitwise() (armi.utils.tests.test_flags.testflag method)": [[414, "armi.utils.tests.test_flags.TestFlag.test_bitwise"]], "test_bool() (armi.utils.tests.test_flags.testflag method)": [[414, "armi.utils.tests.test_flags.TestFlag.test_bool"]], "test_collision() (armi.utils.tests.test_flags.testflag method)": [[414, "armi.utils.tests.test_flags.TestFlag.test_collision"]], "test_extend() (armi.utils.tests.test_flags.testflag method)": [[414, "armi.utils.tests.test_flags.TestFlag.test_extend"]], "test_getitem() (armi.utils.tests.test_flags.testflag method)": [[414, "armi.utils.tests.test_flags.TestFlag.test_getitem"]], "test_hashable() (armi.utils.tests.test_flags.testflag method)": [[414, "armi.utils.tests.test_flags.TestFlag.test_hashable"]], "test_inclusion() (armi.utils.tests.test_flags.testflag method)": [[414, "armi.utils.tests.test_flags.TestFlag.test_inclusion"]], "test_iteration() (armi.utils.tests.test_flags.testflag method)": [[414, "armi.utils.tests.test_flags.TestFlag.test_iteration"]], "testiterables (class in armi.utils.tests.test_iterables)": [[415, "armi.utils.tests.test_iterables.TestIterables"]], "armi.utils.tests.test_iterables": [[415, "module-armi.utils.tests.test_iterables"]], "test_addingsequences() (armi.utils.tests.test_iterables.testiterables method)": [[415, "armi.utils.tests.test_iterables.TestIterables.test_addingSequences"]], "test_appendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[415, "armi.utils.tests.test_iterables.TestIterables.test_appendSequence"]], "test_chunk() (armi.utils.tests.test_iterables.testiterables method)": [[415, "armi.utils.tests.test_iterables.TestIterables.test_chunk"]], "test_copysequence() (armi.utils.tests.test_iterables.testiterables method)": [[415, "armi.utils.tests.test_iterables.TestIterables.test_copySequence"]], "test_extendsequence() (armi.utils.tests.test_iterables.testiterables method)": [[415, "armi.utils.tests.test_iterables.TestIterables.test_extendSequence"]], "test_flatten() (armi.utils.tests.test_iterables.testiterables method)": [[415, "armi.utils.tests.test_iterables.TestIterables.test_flatten"]], "test_packingandunpackingbinarystrings() (armi.utils.tests.test_iterables.testiterables method)": [[415, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingBinaryStrings"]], "test_packingandunpackinghexstrings() (armi.utils.tests.test_iterables.testiterables method)": [[415, "armi.utils.tests.test_iterables.TestIterables.test_packingAndUnpackingHexStrings"]], "test_sequence() (armi.utils.tests.test_iterables.testiterables method)": [[415, "armi.utils.tests.test_iterables.TestIterables.test_sequence"]], "test_sequenceinit() (armi.utils.tests.test_iterables.testiterables method)": [[415, "armi.utils.tests.test_iterables.TestIterables.test_sequenceInit"]], "test_split() (armi.utils.tests.test_iterables.testiterables method)": [[415, "armi.utils.tests.test_iterables.TestIterables.test_split"]], "testmath (class in armi.utils.tests.test_mathematics)": [[416, "armi.utils.tests.test_mathematics.TestMath"]], "armi.utils.tests.test_mathematics": [[416, "module-armi.utils.tests.test_mathematics"]], "test_average1dwithintolerance() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinTolerance"]], "test_average1dwithintoleranceinvalid() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_average1DWithinToleranceInvalid"]], "test_converttoslice() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_convertToSlice"]], "test_efmt() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_efmt"]], "test_expandrepeatedfloats() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_expandRepeatedFloats"]], "test_findclosest() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_findClosest"]], "test_findnearestvalue() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_findNearestValue"]], "test_fixthreedigitexp() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_fixThreeDigitExp"]], "test_getfloat() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_getFloat"]], "test_getstepsfromvalues() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_getStepsFromValues"]], "test_ismonotonic() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_isMonotonic"]], "test_linearinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_linearInterpolation"]], "test_minimizescalarfunc() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_minimizeScalarFunc"]], "test_newtonsmethod() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_newtonsMethod"]], "test_parabola() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_parabola"]], "test_parabolicinterpolation() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_parabolicInterpolation"]], "test_relerr() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_relErr"]], "test_resamplestepwiseavg0() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg0"]], "test_resamplestepwiseavg1() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg1"]], "test_resamplestepwiseavg2() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg2"]], "test_resamplestepwiseavg3() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg3"]], "test_resamplestepwiseavg4() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg4"]], "test_resamplestepwiseavg5() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg5"]], "test_resamplestepwiseavg6() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg6"]], "test_resamplestepwiseavg7() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvg7"]], "test_resamplestepwiseavgallnones() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgAllNones"]], "test_resamplestepwiseavgcomplicatednone() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgComplicatedNone"]], "test_resamplestepwiseavgnparray() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArray"]], "test_resamplestepwiseavgnparrayaverage() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgNpArrayAverage"]], "test_resamplestepwiseavgonenone() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseAvgOneNone"]], "test_resamplestepwisesum0() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum0"]], "test_resamplestepwisesum1() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum1"]], "test_resamplestepwisesum2() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum2"]], "test_resamplestepwisesum3() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum3"]], "test_resamplestepwisesum4() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum4"]], "test_resamplestepwisesum5() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum5"]], "test_resamplestepwisesum6() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum6"]], "test_resamplestepwisesum7() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSum7"]], "test_resamplestepwisesumallnones() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumAllNones"]], "test_resamplestepwisesumonenone() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_resampleStepwiseSumOneNone"]], "test_rotatexy() (armi.utils.tests.test_mathematics.testmath method)": [[416, "armi.utils.tests.test_mathematics.TestMath.test_rotateXY"]], "testoutputcache (class in armi.utils.tests.test_outputcache)": [[417, "armi.utils.tests.test_outputCache.TestOutputCache"]], "armi.utils.tests.test_outputcache": [[417, "module-armi.utils.tests.test_outputCache"]], "test_deletecache() (armi.utils.tests.test_outputcache.testoutputcache method)": [[417, "armi.utils.tests.test_outputCache.TestOutputCache.test_deleteCache"]], "test_getcachedfolder() (armi.utils.tests.test_outputcache.testoutputcache method)": [[417, "armi.utils.tests.test_outputCache.TestOutputCache.test_getCachedFolder"]], "test_hashfiles() (armi.utils.tests.test_outputcache.testoutputcache method)": [[417, "armi.utils.tests.test_outputCache.TestOutputCache.test_hashFiles"]], "test_makeoutputmanifest() (armi.utils.tests.test_outputcache.testoutputcache method)": [[417, "armi.utils.tests.test_outputCache.TestOutputCache.test_makeOutputManifest"]], "test_retrieveoutput() (armi.utils.tests.test_outputcache.testoutputcache method)": [[417, "armi.utils.tests.test_outputCache.TestOutputCache.test_retrieveOutput"]], "literalevaltest (class in armi.utils.tests.test_parsing)": [[418, "armi.utils.tests.test_parsing.LiteralEvalTest"]], "armi.utils.tests.test_parsing": [[418, "module-armi.utils.tests.test_parsing"]], "test_parsevalue() (armi.utils.tests.test_parsing.literalevaltest method)": [[418, "armi.utils.tests.test_parsing.LiteralEvalTest.test_parseValue"]], "test_tryliteraleval() (armi.utils.tests.test_parsing.literalevaltest method)": [[418, "armi.utils.tests.test_parsing.LiteralEvalTest.test_tryLiteralEval"]], "pathtoolstests (class in armi.utils.tests.test_pathtools)": [[419, "armi.utils.tests.test_pathTools.PathToolsTests"]], "armi.utils.tests.test_pathtools": [[419, "module-armi.utils.tests.test_pathTools"]], "test_cleanpathnompi() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[419, "armi.utils.tests.test_pathTools.PathToolsTests.test_cleanPathNoMpi"]], "test_importcustommodule() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[419, "armi.utils.tests.test_pathTools.PathToolsTests.test_importCustomModule"]], "test_isaccessible() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[419, "armi.utils.tests.test_pathTools.PathToolsTests.test_isAccessible"]], "test_isfilepathnewer() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[419, "armi.utils.tests.test_pathTools.PathToolsTests.test_isFilePathNewer"]], "test_moduleandattributeexist() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[419, "armi.utils.tests.test_pathTools.PathToolsTests.test_moduleAndAttributeExist"]], "test_separatemoduleandattribute() (armi.utils.tests.test_pathtools.pathtoolstests method)": [[419, "armi.utils.tests.test_pathTools.PathToolsTests.test_separateModuleAndAttribute"]], "testplotting (class in armi.utils.tests.test_plotting)": [[420, "armi.utils.tests.test_plotting.TestPlotting"]], "armi.utils.tests.test_plotting": [[420, "module-armi.utils.tests.test_plotting"]], "test_plotassemblytypes() (armi.utils.tests.test_plotting.testplotting method)": [[420, "armi.utils.tests.test_plotting.TestPlotting.test_plotAssemblyTypes"]], "test_plotblockflux() (armi.utils.tests.test_plotting.testplotting method)": [[420, "armi.utils.tests.test_plotting.TestPlotting.test_plotBlockFlux"]], "test_plotcartesianblock() (armi.utils.tests.test_plotting.testplotting method)": [[420, "armi.utils.tests.test_plotting.TestPlotting.test_plotCartesianBlock"]], "test_plotdepthmap() (armi.utils.tests.test_plotting.testplotting method)": [[420, "armi.utils.tests.test_plotting.TestPlotting.test_plotDepthMap"]], "test_plothexblock() (armi.utils.tests.test_plotting.testplotting method)": [[420, "armi.utils.tests.test_plotting.TestPlotting.test_plotHexBlock"]], "immutableclass (class in armi.utils.tests.test_properties)": [[421, "armi.utils.tests.test_properties.ImmutableClass"]], "immutablepropertytests (class in armi.utils.tests.test_properties)": [[421, "armi.utils.tests.test_properties.ImmutablePropertyTests"]], "armi.utils.tests.test_properties": [[421, "module-armi.utils.tests.test_properties"]], "initialize() (armi.utils.tests.test_properties.immutableclass method)": [[421, "armi.utils.tests.test_properties.ImmutableClass.initialize"]], "mynum (armi.utils.tests.test_properties.immutableclass property)": [[421, "armi.utils.tests.test_properties.ImmutableClass.myNum"]], "test_cannotassignvaluetoimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[421, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_cannotAssignValueToImmutableProperty"]], "test_retreivingunassignedvalueraiseserror() (armi.utils.tests.test_properties.immutablepropertytests method)": [[421, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_retreivingUnassignedValueRaisesError"]], "test_unlockdoesnotpermitsreassignmentofanimmutableproperty() (armi.utils.tests.test_properties.immutablepropertytests method)": [[421, "armi.utils.tests.test_properties.ImmutablePropertyTests.test_unlockDoesNotPermitsReassignmentOfAnImmutableProperty"]], "testradar (class in armi.utils.tests.test_reportplotting)": [[422, "armi.utils.tests.test_reportPlotting.TestRadar"]], "armi.utils.tests.test_reportplotting": [[422, "module-armi.utils.tests.test_reportPlotting"]], "test_buvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[422, "armi.utils.tests.test_reportPlotting.TestRadar.test_buVsTime"]], "test_createplotmetadata() (armi.utils.tests.test_reportplotting.testradar method)": [[422, "armi.utils.tests.test_reportPlotting.TestRadar.test_createPlotMetaData"]], "test_keffvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[422, "armi.utils.tests.test_reportPlotting.TestRadar.test_keffVsTime"]], "test_movesvscycle() (armi.utils.tests.test_reportplotting.testradar method)": [[422, "armi.utils.tests.test_reportPlotting.TestRadar.test_movesVsCycle"]], "test_plotaxialprofile() (armi.utils.tests.test_reportplotting.testradar method)": [[422, "armi.utils.tests.test_reportPlotting.TestRadar.test_plotAxialProfile"]], "test_radar() (armi.utils.tests.test_reportplotting.testradar method)": [[422, "armi.utils.tests.test_reportPlotting.TestRadar.test_radar"]], "test_valuevstime() (armi.utils.tests.test_reportplotting.testradar method)": [[422, "armi.utils.tests.test_reportPlotting.TestRadar.test_valueVsTime"]], "test_xshistoryvstime() (armi.utils.tests.test_reportplotting.testradar method)": [[422, "armi.utils.tests.test_reportPlotting.TestRadar.test_xsHistoryVsTime"]], "sequentialreadertests (class in armi.utils.tests.test_textprocessors)": [[423, "armi.utils.tests.test_textProcessors.SequentialReaderTests"]], "yamlincludetest (class in armi.utils.tests.test_textprocessors)": [[423, "armi.utils.tests.test_textProcessors.YamlIncludeTest"]], "armi.utils.tests.test_textprocessors": [[423, "module-armi.utils.tests.test_textProcessors"]], "test_findincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[423, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_findIncludes"]], "test_readfile() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[423, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFile"]], "test_readfilewithpattern() (armi.utils.tests.test_textprocessors.sequentialreadertests method)": [[423, "armi.utils.tests.test_textProcessors.SequentialReaderTests.test_readFileWithPattern"]], "test_resolveincludes() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[423, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes"]], "test_resolveincludes_stringio() (armi.utils.tests.test_textprocessors.yamlincludetest method)": [[423, "armi.utils.tests.test_textProcessors.YamlIncludeTest.test_resolveIncludes_StringIO"]], "textstream (armi.utils.tests.test_textprocessors.sequentialreadertests attribute)": [[423, "armi.utils.tests.test_textProcessors.SequentialReaderTests.textStream"]], "testtriangle (class in armi.utils.tests.test_triangle)": [[424, "armi.utils.tests.test_triangle.TestTriangle"]], "armi.utils.tests.test_triangle": [[424, "module-armi.utils.tests.test_triangle"]], "test_checkifpointisintriangle() (armi.utils.tests.test_triangle.testtriangle method)": [[424, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle"]], "test_checkifpointisintriangle2() (armi.utils.tests.test_triangle.testtriangle method)": [[424, "armi.utils.tests.test_triangle.TestTriangle.test_checkIfPointIsInTriangle2"]], "test_gettrianglearea() (armi.utils.tests.test_triangle.testtriangle method)": [[424, "armi.utils.tests.test_triangle.TestTriangle.test_getTriangleArea"]], "testunits (class in armi.utils.tests.test_units)": [[425, "armi.utils.tests.test_units.TestUnits"]], "armi.utils.tests.test_units": [[425, "module-armi.utils.tests.test_units"]], "test_convertxtopascal() (armi.utils.tests.test_units.testunits method)": [[425, "armi.utils.tests.test_units.TestUnits.test_convertXtoPascal"]], "test_gettc() (armi.utils.tests.test_units.testunits method)": [[425, "armi.utils.tests.test_units.TestUnits.test_getTc"]], "test_gettemperature() (armi.utils.tests.test_units.testunits method)": [[425, "armi.utils.tests.test_units.TestUnits.test_getTemperature"]], "test_gettf() (armi.utils.tests.test_units.testunits method)": [[425, "armi.utils.tests.test_units.TestUnits.test_getTf"]], "test_gettk() (armi.utils.tests.test_units.testunits method)": [[425, "armi.utils.tests.test_units.TestUnits.test_getTk"]], "test_gettmev() (armi.utils.tests.test_units.testunits method)": [[425, "armi.utils.tests.test_units.TestUnits.test_getTmev"]], "test_getxylineparameters() (armi.utils.tests.test_units.testunits method)": [[425, "armi.utils.tests.test_units.TestUnits.test_getXYLineParameters"]], "test_pressure_converter() (armi.utils.tests.test_units.testunits method)": [[425, "armi.utils.tests.test_units.TestUnits.test_pressure_converter"]], "test_sanitizeangle() (armi.utils.tests.test_units.testunits method)": [[425, "armi.utils.tests.test_units.TestUnits.test_sanitizeAngle"]], "cyclessettingstests (class in armi.utils.tests.test_utils)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests"]], "testgeneralutils (class in armi.utils.tests.test_utils)": [[426, "armi.utils.tests.test_utils.TestGeneralUtils"]], "armi.utils.tests.test_utils": [[426, "module-armi.utils.tests.test_utils"]], "availabilityfactorsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsDetailedSolution"]], "availabilityfactorssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.availabilityFactorsSimpleSolution"]], "burnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsDetailedSolution"]], "burnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.burnStepsSimpleSolution"]], "cyclelengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsDetailedSolution"]], "cyclelengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleLengthsSimpleSolution"]], "cyclenamesdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesDetailedSolution"]], "cyclenamessimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.cycleNamesSimpleSolution"]], "detailedcyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.detailedCyclesSettings"]], "maxburnstepsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsDetailedSolution"]], "maxburnstepssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.maxBurnStepsSimpleSolution"]], "nodespercycledetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleDetailedSolution"]], "nodespercyclesimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.nodesPerCycleSimpleSolution"]], "powerfractionsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsDetailedSolution"]], "powerfractionssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.powerFractionsSimpleSolution"]], "simplecyclessettings (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.simpleCyclesSettings"]], "steplengthsdetailedsolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsDetailedSolution"]], "steplengthssimplesolution (armi.utils.tests.test_utils.cyclessettingstests attribute)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.stepLengthsSimpleSolution"]], "test_capstrlen() (armi.utils.tests.test_utils.testgeneralutils method)": [[426, "armi.utils.tests.test_utils.TestGeneralUtils.test_capStrLen"]], "test_classesinhierarchy() (armi.utils.tests.test_utils.testgeneralutils method)": [[426, "armi.utils.tests.test_utils.TestGeneralUtils.test_classesInHierarchy"]], "test_createformattedstrwithdelimiter() (armi.utils.tests.test_utils.testgeneralutils method)": [[426, "armi.utils.tests.test_utils.TestGeneralUtils.test_createFormattedStrWithDelimiter"]], "test_getavailabilityfactors() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getAvailabilityFactors"]], "test_getburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getBurnSteps"]], "test_getcumulativenodenum() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCumulativeNodeNum"]], "test_getcyclelengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleLengths"]], "test_getcyclenames() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNames"]], "test_getcyclenodefromcumulativenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeNode"]], "test_getcyclenodefromcumulativestep() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getCycleNodeFromCumulativeStep"]], "test_getmaxburnsteps() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getMaxBurnSteps"]], "test_getnodespercycle() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getNodesPerCycle"]], "test_getpowerfractions() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPowerFractions"]], "test_getprevioustimenode() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getPreviousTimeNode"]], "test_getsteplengths() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_getStepLengths"]], "test_hasburnup() (armi.utils.tests.test_utils.cyclessettingstests method)": [[426, "armi.utils.tests.test_utils.CyclesSettingsTests.test_hasBurnup"]], "test_list2str() (armi.utils.tests.test_utils.testgeneralutils method)": [[426, "armi.utils.tests.test_utils.TestGeneralUtils.test_list2str"]], "test_mergeabledictionary() (armi.utils.tests.test_utils.testgeneralutils method)": [[426, "armi.utils.tests.test_utils.TestGeneralUtils.test_mergeableDictionary"]], "test_plotmatrix() (armi.utils.tests.test_utils.testgeneralutils method)": [[426, "armi.utils.tests.test_utils.TestGeneralUtils.test_plotMatrix"]], "test_prependtolist() (armi.utils.tests.test_utils.testgeneralutils method)": [[426, "armi.utils.tests.test_utils.TestGeneralUtils.test_prependToList"]], "test_slantsplit() (armi.utils.tests.test_utils.testgeneralutils method)": [[426, "armi.utils.tests.test_utils.TestGeneralUtils.test_slantSplit"]], "decimal_pattern (in module armi.utils.textprocessors)": [[427, "armi.utils.textProcessors.DECIMAL_PATTERN"]], "floating_pattern (in module armi.utils.textprocessors)": [[427, "armi.utils.textProcessors.FLOATING_PATTERN"]], "filemark (class in armi.utils.textprocessors)": [[427, "armi.utils.textProcessors.FileMark"]], "scientific_pattern (in module armi.utils.textprocessors)": [[427, "armi.utils.textProcessors.SCIENTIFIC_PATTERN"]], "sequentialreader (class in armi.utils.textprocessors)": [[427, "armi.utils.textProcessors.SequentialReader"]], "sequentialstringioreader (class in armi.utils.textprocessors)": [[427, "armi.utils.textProcessors.SequentialStringIOReader"]], "smartlist (class in armi.utils.textprocessors)": [[427, "armi.utils.textProcessors.SmartList"]], "textprocessor (class in armi.utils.textprocessors)": [[427, "armi.utils.textProcessors.TextProcessor"]], "armi.utils.textprocessors": [[427, "module-armi.utils.textProcessors"]], "checkerrors() (armi.utils.textprocessors.textprocessor method)": [[427, "armi.utils.textProcessors.TextProcessor.checkErrors"]], "close() (armi.utils.textprocessors.smartlist method)": [[427, "armi.utils.textProcessors.SmartList.close"]], "consumeline() (armi.utils.textprocessors.sequentialreader method)": [[427, "armi.utils.textProcessors.SequentialReader.consumeLine"]], "decimal (armi.utils.textprocessors.textprocessor attribute)": [[427, "armi.utils.textProcessors.TextProcessor.decimal"]], "errorchecking() (armi.utils.textprocessors.textprocessor method)": [[427, "armi.utils.textProcessors.TextProcessor.errorChecking"]], "findyamlinclusions() (in module armi.utils.textprocessors)": [[427, "armi.utils.textProcessors.findYamlInclusions"]], "fsearch() (armi.utils.textprocessors.textprocessor method)": [[427, "armi.utils.textProcessors.TextProcessor.fsearch"]], "issuewarningonfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[427, "armi.utils.textProcessors.SequentialReader.issueWarningOnFindingText"]], "next() (armi.utils.textprocessors.smartlist method)": [[427, "armi.utils.textProcessors.SmartList.next"]], "number (armi.utils.textprocessors.textprocessor attribute)": [[427, "armi.utils.textProcessors.TextProcessor.number"]], "raiseerroronfindingpattern() (armi.utils.textprocessors.sequentialreader method)": [[427, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingPattern"]], "raiseerroronfindingtext() (armi.utils.textprocessors.sequentialreader method)": [[427, "armi.utils.textProcessors.SequentialReader.raiseErrorOnFindingText"]], "reset() (armi.utils.textprocessors.textprocessor method)": [[427, "armi.utils.textProcessors.TextProcessor.reset"]], "resolvemarkupinclusions() (in module armi.utils.textprocessors)": [[427, "armi.utils.textProcessors.resolveMarkupInclusions"]], "scipat (armi.utils.textprocessors.textprocessor attribute)": [[427, "armi.utils.textProcessors.TextProcessor.scipat"]], "searchforpattern() (armi.utils.textprocessors.sequentialreader method)": [[427, "armi.utils.textProcessors.SequentialReader.searchForPattern"]], "searchforpatternonnextline() (armi.utils.textprocessors.sequentialreader method)": [[427, "armi.utils.textProcessors.SequentialReader.searchForPatternOnNextLine"]], "searchfortext() (armi.utils.textprocessors.sequentialreader method)": [[427, "armi.utils.textProcessors.SequentialReader.searchForText"]], "seek() (armi.utils.textprocessors.smartlist method)": [[427, "armi.utils.textProcessors.SmartList.seek"]], "armi.utils.triangle": [[428, "module-armi.utils.triangle"]], "checkifpointisintriangle() (in module armi.utils.triangle)": [[428, "armi.utils.triangle.checkIfPointIsInTriangle"]], "gettrianglearea() (in module armi.utils.triangle)": [[428, "armi.utils.triangle.getTriangleArea"]], "gettrianglecentroid() (in module armi.utils.triangle)": [[428, "armi.utils.triangle.getTriangleCentroid"]], "armi.utils.units": [[429, "module-armi.utils.units"]], "convertatmtopascal() (in module armi.utils.units)": [[429, "armi.utils.units.convertAtmToPascal"]], "convertbartopascal() (in module armi.utils.units)": [[429, "armi.utils.units.convertBarToPascal"]], "convertmmhgtopascal() (in module armi.utils.units)": [[429, "armi.utils.units.convertMmhgToPascal"]], "gettc() (in module armi.utils.units)": [[429, "armi.utils.units.getTc"]], "gettemperature() (in module armi.utils.units)": [[429, "armi.utils.units.getTemperature"]], "gettf() (in module armi.utils.units)": [[429, "armi.utils.units.getTf"]], "gettk() (in module armi.utils.units)": [[429, "armi.utils.units.getTk"]], "gettmev() (in module armi.utils.units)": [[429, "armi.utils.units.getTmev"]], "getxylineparameters() (in module armi.utils.units)": [[429, "armi.utils.units.getXYLineParameters"]], "sanitizeangle() (in module armi.utils.units)": [[429, "armi.utils.units.sanitizeAngle"]], "anl": [[468, "term-ANL"]], "boc": [[468, "term-BOC"]], "bol": [[468, "term-BOL"]], "cli": [[468, "term-CLI"]], "fima": [[468, "term-FIMA"]], "gui": [[468, "term-GUI"]], "in-use tests": [[468, "term-In-Use-Tests"]], "lwr": [[468, "term-LWR"]], "liner": [[468, "term-Liner"]], "mpi": [[468, "term-MPI"]], "twr": [[468, "term-TWR"]], "unit tests": [[468, "term-Unit-Tests"]], "v&v": [[468, "term-V-V"]], "xtview": [[468, "term-XTVIEW"]], "assembly": [[468, "term-assembly"]], "block": [[468, "term-block"]], "burnup": [[468, "term-burnup"]], "cladding": [[468, "term-cladding"]], "component": [[468, "term-component"]], "grid plate": [[468, "term-grid-plate"]], "interface": [[468, "term-interface"]], "material": [[468, "term-material"]], "node": [[468, "term-node"]], "operator": [[468, "term-operator"]], "parameter": [[468, "term-parameter"]], "plenum": [[468, "term-plenum"]], "reactor": [[468, "term-reactor"]], "reactor state": [[468, "term-reactor-state"]], "smear density": [[468, "term-smear-density"]]}})